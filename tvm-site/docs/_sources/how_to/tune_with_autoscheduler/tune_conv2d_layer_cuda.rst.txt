.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.


.. code-block:: default


    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python







Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.


.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]








Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.


.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)




Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the master process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.


.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Get devices for measurement successfully!



Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.


.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none






We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.


.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Lowered TIR:
    @main = primfn(data_1: handle, kernel_1: handle, bias_1: handle, compute_1: handle) -> ()
      attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
      buffers = {compute: Buffer(compute_2: Pointer(float32), float32, [25088], []),
                 bias: Buffer(bias_2: Pointer(float32), float32, [512], []),
                 data: Buffer(data_2: Pointer(float32), float32, [25088], []),
                 kernel: Buffer(kernel_2: Pointer(float32), float32, [2359296], [])}
      buffer_map = {data_1: data, kernel_1: kernel, bias_1: bias, compute_1: compute} {
      attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = 128;
      allocate(conv2d_nchw: Pointer(local float32), float32, [28]), storage_scope = local;
      allocate(pad_temp.shared: Pointer(shared float32), float32, [1008]), storage_scope = shared;
      allocate(kernel.shared: Pointer(shared float32), float32, [192]), storage_scope = shared;
      attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7 {
        conv2d_nchw_1: Buffer(conv2d_nchw, float32, [4], [], scope="local", align=8)[0] = 0f32
        conv2d_nchw_1[2] = 0f32
        conv2d_nchw_1[4] = 0f32
        conv2d_nchw_1[6] = 0f32
        conv2d_nchw_1[8] = 0f32
        conv2d_nchw_1[10] = 0f32
        conv2d_nchw_1[12] = 0f32
        conv2d_nchw_1[14] = 0f32
        conv2d_nchw_1[16] = 0f32
        conv2d_nchw_1[18] = 0f32
        conv2d_nchw_1[20] = 0f32
        conv2d_nchw_1[22] = 0f32
        conv2d_nchw_1[24] = 0f32
        conv2d_nchw_1[26] = 0f32
        conv2d_nchw_1[1] = 0f32
        conv2d_nchw_1[3] = 0f32
        conv2d_nchw_1[5] = 0f32
        conv2d_nchw_1[7] = 0f32
        conv2d_nchw_1[9] = 0f32
        conv2d_nchw_1[11] = 0f32
        conv2d_nchw_1[13] = 0f32
        conv2d_nchw_1[15] = 0f32
        conv2d_nchw_1[17] = 0f32
        conv2d_nchw_1[19] = 0f32
        conv2d_nchw_1[21] = 0f32
        conv2d_nchw_1[23] = 0f32
        conv2d_nchw_1[25] = 0f32
        conv2d_nchw_1[27] = 0f32
        for (rc.outer.outer: int32, 0, 32) {
          for (rx.outer.outer: int32, 0, 3) {
            let cse_var_1: int32 = (rc.outer.outer*144)
             {
              attr [IterVar(threadIdx.x_1: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1: Buffer(pad_temp.shared, float32, [1008], [], scope="shared")[threadIdx.x_1] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 7)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) - 1)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 14)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 6)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 21)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 13)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 28)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 20)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 35)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 27)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 42)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 34)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 49)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 41)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 56)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 63)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 70)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 48)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 77)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 55)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 84)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 62)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 91)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 69)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 98)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 76)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 105)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 83)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 112)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 90)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 119)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 126)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 133)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 97)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 140)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 104)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 147)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 111)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 154)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 118)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 161)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 125)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 168)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 132)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 175)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 139)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 182)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 189)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 196)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 146)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 203)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 153)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 210)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 160)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 217)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 167)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 224)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 174)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 231)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 181)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 238)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 188)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 245)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 252)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 259)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 195)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 266)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 202)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 273)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 209)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 280)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 216)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 287)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 223)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 294)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 230)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 301)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 237)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 308)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 315)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 322)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 244)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 329)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 251)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 336)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 258)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 343)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 265)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 350)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 272)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 357)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 279)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 364)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 286)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 371)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 378)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 385)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 293)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 392)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 300)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 399)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 307)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 406)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 314)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 413)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 321)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 420)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 328)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 427)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 335)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 434)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 441)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 448)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 342)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 455)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 349)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 462)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 356)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 469)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 363)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 476)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 370)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 483)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 377)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 490)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 384)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 497)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 504)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 511)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 391)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 518)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 398)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 525)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 405)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 532)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 412)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 539)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 419)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 546)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 426)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 553)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 433)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 560)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 567)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 574)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 440)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 581)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 447)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 588)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 454)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 595)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 461)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 602)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 468)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 609)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 475)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 616)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 482)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 623)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 630)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 637)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 489)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 644)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 496)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 651)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 503)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 658)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 510)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 665)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 517)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 672)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 524)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 679)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 531)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 686)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 693)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 700)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 538)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 707)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 545)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 714)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 552)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 721)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 559)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 728)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 566)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 735)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 573)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 742)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 580)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 749)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 756)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 763)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 587)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 770)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 594)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 777)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 601)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 784)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 608)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 791)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 615)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 798)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 622)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 805)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 629)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 812)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 819)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 826)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 636)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 833)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 643)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 840)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 650)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 847)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 657)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 854)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 664)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 861)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 671)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 868)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 678)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 875)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 882)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 889)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 685)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 896)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 692)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 903)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 699)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 910)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 706)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 917)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 713)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 924)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 720)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 931)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 727)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 938)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 945)] = 0f32
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 952)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 734)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 959)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 741)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 966)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 748)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 973)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 755)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 980)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 762)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 987)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 769)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 994)] = @tir.if_then_else(((1 <= (threadIdx.x_1 + rx.outer.outer)) && ((threadIdx.x_1 + rx.outer.outer) < 8)), data[((((rc.outer.outer*784) + rx.outer.outer) + threadIdx.x_1) + 776)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              pad_temp.shared_1[(threadIdx.x_1 + 1001)] = 0f32
              attr [IterVar(threadIdx.x_2: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1: Buffer(kernel.shared, float32, [192], [], scope="shared")[threadIdx.x_2] = kernel[((((blockIdx.x*18432) + cse_var_1) + (threadIdx.x_2*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1[(threadIdx.x_2 + 7)] = kernel[((((blockIdx.x*18432) + cse_var_1) + ((threadIdx.x_2 + 7)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1[(threadIdx.x_2 + 14)] = kernel[((((blockIdx.x*18432) + cse_var_1) + ((threadIdx.x_2 + 14)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1[(threadIdx.x_2 + 21)] = kernel[((((blockIdx.x*18432) + cse_var_1) + ((threadIdx.x_2 + 21)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1[(threadIdx.x_2 + 28)] = kernel[((((blockIdx.x*18432) + cse_var_1) + ((threadIdx.x_2 + 28)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1[(threadIdx.x_2 + 35)] = kernel[((((blockIdx.x*18432) + cse_var_1) + ((threadIdx.x_2 + 35)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1[(threadIdx.x_2 + 42)] = kernel[(((((blockIdx.x*18432) + (floordiv((threadIdx.x_2 + 42), 48)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 42), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1[(threadIdx.x_2 + 49)] = kernel[(((((blockIdx.x*18432) + (floordiv((threadIdx.x_2 + 49), 48)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 1), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1[(threadIdx.x_2 + 56)] = kernel[(((((blockIdx.x*18432) + (floordiv((threadIdx.x_2 + 56), 48)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 8), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1[(threadIdx.x_2 + 63)] = kernel[(((((blockIdx.x*18432) + (floordiv((threadIdx.x_2 + 63), 48)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 15), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1[(threadIdx.x_2 + 70)] = kernel[(((((blockIdx.x*18432) + (floordiv((threadIdx.x_2 + 70), 48)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 22), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1[(threadIdx.x_2 + 77)] = kernel[(((((blockIdx.x*18432) + (floordiv((threadIdx.x_2 + 77), 48)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 29), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1[(threadIdx.x_2 + 84)] = kernel[(((((blockIdx.x*18432) + (floordiv((threadIdx.x_2 + 84), 48)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 36), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1[(threadIdx.x_2 + 91)] = kernel[(((((blockIdx.x*18432) + (floordiv((threadIdx.x_2 + 91), 48)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 43), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1[(threadIdx.x_2 + 98)] = kernel[(((((blockIdx.x*18432) + (floordiv((threadIdx.x_2 + 98), 48)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 2), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1[(threadIdx.x_2 + 105)] = kernel[(((((blockIdx.x*18432) + (floordiv((threadIdx.x_2 + 105), 48)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 9), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1[(threadIdx.x_2 + 112)] = kernel[(((((blockIdx.x*18432) + (floordiv((threadIdx.x_2 + 112), 48)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 16), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1[(threadIdx.x_2 + 119)] = kernel[(((((blockIdx.x*18432) + (floordiv((threadIdx.x_2 + 119), 48)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 23), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1[(threadIdx.x_2 + 126)] = kernel[(((((blockIdx.x*18432) + (floordiv((threadIdx.x_2 + 126), 48)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 30), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1[(threadIdx.x_2 + 133)] = kernel[(((((blockIdx.x*18432) + (floordiv((threadIdx.x_2 + 133), 48)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 37), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1[(threadIdx.x_2 + 140)] = kernel[(((((blockIdx.x*18432) + (floordiv((threadIdx.x_2 + 140), 48)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 44), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1[(threadIdx.x_2 + 147)] = kernel[(((((blockIdx.x*18432) + (floordiv((threadIdx.x_2 + 147), 48)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 3), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1[(threadIdx.x_2 + 154)] = kernel[(((((blockIdx.x*18432) + (floordiv((threadIdx.x_2 + 154), 48)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 10), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1[(threadIdx.x_2 + 161)] = kernel[(((((blockIdx.x*18432) + (floordiv((threadIdx.x_2 + 161), 48)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 17), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1[(threadIdx.x_2 + 168)] = kernel[(((((blockIdx.x*18432) + (floordiv((threadIdx.x_2 + 168), 48)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 24), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1[(threadIdx.x_2 + 175)] = kernel[(((((blockIdx.x*18432) + (floordiv((threadIdx.x_2 + 175), 48)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 31), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              kernel.shared_1[(threadIdx.x_2 + 182)] = kernel[(((((blockIdx.x*18432) + (floordiv((threadIdx.x_2 + 182), 48)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 38), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 7;
              if @tir.likely((threadIdx.x_2 < 3), dtype=bool) {
                kernel.shared_1[(threadIdx.x_2 + 189)] = kernel[(((((blockIdx.x*18432) + (floordiv((threadIdx.x_2 + 189), 48)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 45), 48)*3)) + rx.outer.outer)]
              }
              for (rc.outer.inner: int32, 0, 2) {
                for (ry.outer.inner: int32, 0, 3) {
                  let cse_var_33: int32 = ((rc.outer.inner*24) + ry.outer.inner)
                  let cse_var_32: int32 = (cse_var_33 + 99)
                  let cse_var_31: int32 = (cse_var_33 + 102)
                  let cse_var_30: int32 = (cse_var_33 + 12)
                  let cse_var_29: int32 = (cse_var_33 + 15)
                  let cse_var_28: int32 = (cse_var_33 + 108)
                  let cse_var_27: int32 = (cse_var_33 + 18)
                  let cse_var_26: int32 = (cse_var_33 + 69)
                  let cse_var_25: int32 = (cse_var_33 + 96)
                  let cse_var_24: int32 = (cse_var_33 + 51)
                  let cse_var_23: int32 = (cse_var_33 + 48)
                  let cse_var_22: int32 = (cse_var_33 + 105)
                  let cse_var_21: int32 = (cse_var_33 + 165)
                  let cse_var_20: int32 = (cse_var_33 + 6)
                  let cse_var_19: int32 = (cse_var_33 + 156)
                  let cse_var_18: int32 = (cse_var_33 + 9)
                  let cse_var_17: int32 = (cse_var_33 + 111)
                  let cse_var_16: int32 = (cse_var_33 + 57)
                  let cse_var_15: int32 = (cse_var_33 + 153)
                  let cse_var_14: int32 = (cse_var_33 + 63)
                  let cse_var_13: int32 = (cse_var_33 + 159)
                  let cse_var_12: int32 = (cse_var_33 + 162)
                  let cse_var_11: int32 = (cse_var_33 + 147)
                  let cse_var_10: int32 = (cse_var_33 + 150)
                  let cse_var_9: int32 = (cse_var_33 + 54)
                  let cse_var_8: int32 = (cse_var_33 + 60)
                  let cse_var_7: int32 = (cse_var_33 + 144)
                  let cse_var_6: int32 = (cse_var_33 + 117)
                  let cse_var_5: int32 = (cse_var_33 + 3)
                  let cse_var_4: int32 = (cse_var_33 + 66)
                  let cse_var_3: int32 = (cse_var_33 + 21)
                  let cse_var_2: int32 = (cse_var_33 + 114)
                   {
                    conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x)]*kernel.shared_1[cse_var_33]))
                    conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 7)]*kernel.shared_1[cse_var_33]))
                    conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 14)]*kernel.shared_1[cse_var_33]))
                    conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 21)]*kernel.shared_1[cse_var_33]))
                    conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 28)]*kernel.shared_1[cse_var_33]))
                    conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 35)]*kernel.shared_1[cse_var_33]))
                    conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 42)]*kernel.shared_1[cse_var_33]))
                    conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x)]*kernel.shared_1[cse_var_25]))
                    conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 7)]*kernel.shared_1[cse_var_25]))
                    conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 14)]*kernel.shared_1[cse_var_25]))
                    conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 21)]*kernel.shared_1[cse_var_25]))
                    conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 28)]*kernel.shared_1[cse_var_25]))
                    conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 35)]*kernel.shared_1[cse_var_25]))
                    conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 42)]*kernel.shared_1[cse_var_25]))
                    conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 63)]*kernel.shared_1[cse_var_5]))
                    conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 70)]*kernel.shared_1[cse_var_5]))
                    conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 77)]*kernel.shared_1[cse_var_5]))
                    conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 84)]*kernel.shared_1[cse_var_5]))
                    conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 91)]*kernel.shared_1[cse_var_5]))
                    conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 98)]*kernel.shared_1[cse_var_5]))
                    conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 105)]*kernel.shared_1[cse_var_5]))
                    conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 63)]*kernel.shared_1[cse_var_32]))
                    conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 70)]*kernel.shared_1[cse_var_32]))
                    conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 77)]*kernel.shared_1[cse_var_32]))
                    conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 84)]*kernel.shared_1[cse_var_32]))
                    conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 91)]*kernel.shared_1[cse_var_32]))
                    conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 98)]*kernel.shared_1[cse_var_32]))
                    conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 105)]*kernel.shared_1[cse_var_32]))
                    conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 126)]*kernel.shared_1[cse_var_20]))
                    conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 133)]*kernel.shared_1[cse_var_20]))
                    conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 140)]*kernel.shared_1[cse_var_20]))
                    conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 147)]*kernel.shared_1[cse_var_20]))
                    conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 154)]*kernel.shared_1[cse_var_20]))
                    conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 161)]*kernel.shared_1[cse_var_20]))
                    conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 168)]*kernel.shared_1[cse_var_20]))
                    conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 126)]*kernel.shared_1[cse_var_31]))
                    conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 133)]*kernel.shared_1[cse_var_31]))
                    conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 140)]*kernel.shared_1[cse_var_31]))
                    conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 147)]*kernel.shared_1[cse_var_31]))
                    conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 154)]*kernel.shared_1[cse_var_31]))
                    conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 161)]*kernel.shared_1[cse_var_31]))
                    conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 168)]*kernel.shared_1[cse_var_31]))
                    conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 189)]*kernel.shared_1[cse_var_18]))
                    conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 196)]*kernel.shared_1[cse_var_18]))
                    conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 203)]*kernel.shared_1[cse_var_18]))
                    conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 210)]*kernel.shared_1[cse_var_18]))
                    conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 217)]*kernel.shared_1[cse_var_18]))
                    conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 224)]*kernel.shared_1[cse_var_18]))
                    conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 231)]*kernel.shared_1[cse_var_18]))
                    conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 189)]*kernel.shared_1[cse_var_22]))
                    conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 196)]*kernel.shared_1[cse_var_22]))
                    conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 203)]*kernel.shared_1[cse_var_22]))
                    conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 210)]*kernel.shared_1[cse_var_22]))
                    conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 217)]*kernel.shared_1[cse_var_22]))
                    conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 224)]*kernel.shared_1[cse_var_22]))
                    conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 231)]*kernel.shared_1[cse_var_22]))
                    conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 252)]*kernel.shared_1[cse_var_30]))
                    conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 259)]*kernel.shared_1[cse_var_30]))
                    conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 266)]*kernel.shared_1[cse_var_30]))
                    conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 273)]*kernel.shared_1[cse_var_30]))
                    conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 280)]*kernel.shared_1[cse_var_30]))
                    conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 287)]*kernel.shared_1[cse_var_30]))
                    conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 294)]*kernel.shared_1[cse_var_30]))
                    conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 252)]*kernel.shared_1[cse_var_28]))
                    conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 259)]*kernel.shared_1[cse_var_28]))
                    conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 266)]*kernel.shared_1[cse_var_28]))
                    conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 273)]*kernel.shared_1[cse_var_28]))
                    conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 280)]*kernel.shared_1[cse_var_28]))
                    conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 287)]*kernel.shared_1[cse_var_28]))
                    conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 294)]*kernel.shared_1[cse_var_28]))
                    conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 315)]*kernel.shared_1[cse_var_29]))
                    conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 322)]*kernel.shared_1[cse_var_29]))
                    conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 329)]*kernel.shared_1[cse_var_29]))
                    conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 336)]*kernel.shared_1[cse_var_29]))
                    conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 343)]*kernel.shared_1[cse_var_29]))
                    conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 350)]*kernel.shared_1[cse_var_29]))
                    conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 357)]*kernel.shared_1[cse_var_29]))
                    conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 315)]*kernel.shared_1[cse_var_17]))
                    conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 322)]*kernel.shared_1[cse_var_17]))
                    conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 329)]*kernel.shared_1[cse_var_17]))
                    conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 336)]*kernel.shared_1[cse_var_17]))
                    conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 343)]*kernel.shared_1[cse_var_17]))
                    conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 350)]*kernel.shared_1[cse_var_17]))
                    conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 357)]*kernel.shared_1[cse_var_17]))
                    conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 378)]*kernel.shared_1[cse_var_27]))
                    conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 385)]*kernel.shared_1[cse_var_27]))
                    conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 392)]*kernel.shared_1[cse_var_27]))
                    conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 399)]*kernel.shared_1[cse_var_27]))
                    conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 406)]*kernel.shared_1[cse_var_27]))
                    conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 413)]*kernel.shared_1[cse_var_27]))
                    conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 420)]*kernel.shared_1[cse_var_27]))
                    conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 378)]*kernel.shared_1[cse_var_2]))
                    conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 385)]*kernel.shared_1[cse_var_2]))
                    conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 392)]*kernel.shared_1[cse_var_2]))
                    conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 399)]*kernel.shared_1[cse_var_2]))
                    conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 406)]*kernel.shared_1[cse_var_2]))
                    conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 413)]*kernel.shared_1[cse_var_2]))
                    conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 420)]*kernel.shared_1[cse_var_2]))
                    conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 441)]*kernel.shared_1[cse_var_3]))
                    conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 448)]*kernel.shared_1[cse_var_3]))
                    conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 455)]*kernel.shared_1[cse_var_3]))
                    conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 462)]*kernel.shared_1[cse_var_3]))
                    conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 469)]*kernel.shared_1[cse_var_3]))
                    conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 476)]*kernel.shared_1[cse_var_3]))
                    conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 483)]*kernel.shared_1[cse_var_3]))
                    conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 441)]*kernel.shared_1[cse_var_6]))
                    conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 448)]*kernel.shared_1[cse_var_6]))
                    conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 455)]*kernel.shared_1[cse_var_6]))
                    conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 462)]*kernel.shared_1[cse_var_6]))
                    conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 469)]*kernel.shared_1[cse_var_6]))
                    conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 476)]*kernel.shared_1[cse_var_6]))
                    conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 483)]*kernel.shared_1[cse_var_6]))
                    conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x)]*kernel.shared_1[cse_var_23]))
                    conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 7)]*kernel.shared_1[cse_var_23]))
                    conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 14)]*kernel.shared_1[cse_var_23]))
                    conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 21)]*kernel.shared_1[cse_var_23]))
                    conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 28)]*kernel.shared_1[cse_var_23]))
                    conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 35)]*kernel.shared_1[cse_var_23]))
                    conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 42)]*kernel.shared_1[cse_var_23]))
                    conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x)]*kernel.shared_1[cse_var_7]))
                    conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 7)]*kernel.shared_1[cse_var_7]))
                    conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 14)]*kernel.shared_1[cse_var_7]))
                    conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 21)]*kernel.shared_1[cse_var_7]))
                    conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 28)]*kernel.shared_1[cse_var_7]))
                    conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 35)]*kernel.shared_1[cse_var_7]))
                    conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 42)]*kernel.shared_1[cse_var_7]))
                    conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 63)]*kernel.shared_1[cse_var_24]))
                    conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 70)]*kernel.shared_1[cse_var_24]))
                    conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 77)]*kernel.shared_1[cse_var_24]))
                    conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 84)]*kernel.shared_1[cse_var_24]))
                    conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 91)]*kernel.shared_1[cse_var_24]))
                    conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 98)]*kernel.shared_1[cse_var_24]))
                    conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 105)]*kernel.shared_1[cse_var_24]))
                    conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 63)]*kernel.shared_1[cse_var_11]))
                    conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 70)]*kernel.shared_1[cse_var_11]))
                    conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 77)]*kernel.shared_1[cse_var_11]))
                    conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 84)]*kernel.shared_1[cse_var_11]))
                    conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 91)]*kernel.shared_1[cse_var_11]))
                    conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 98)]*kernel.shared_1[cse_var_11]))
                    conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 105)]*kernel.shared_1[cse_var_11]))
                    conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 126)]*kernel.shared_1[cse_var_9]))
                    conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 133)]*kernel.shared_1[cse_var_9]))
                    conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 140)]*kernel.shared_1[cse_var_9]))
                    conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 147)]*kernel.shared_1[cse_var_9]))
                    conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 154)]*kernel.shared_1[cse_var_9]))
                    conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 161)]*kernel.shared_1[cse_var_9]))
                    conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 168)]*kernel.shared_1[cse_var_9]))
                    conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 126)]*kernel.shared_1[cse_var_10]))
                    conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 133)]*kernel.shared_1[cse_var_10]))
                    conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 140)]*kernel.shared_1[cse_var_10]))
                    conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 147)]*kernel.shared_1[cse_var_10]))
                    conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 154)]*kernel.shared_1[cse_var_10]))
                    conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 161)]*kernel.shared_1[cse_var_10]))
                    conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 168)]*kernel.shared_1[cse_var_10]))
                    conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 189)]*kernel.shared_1[cse_var_16]))
                    conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 196)]*kernel.shared_1[cse_var_16]))
                    conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 203)]*kernel.shared_1[cse_var_16]))
                    conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 210)]*kernel.shared_1[cse_var_16]))
                    conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 217)]*kernel.shared_1[cse_var_16]))
                    conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 224)]*kernel.shared_1[cse_var_16]))
                    conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 231)]*kernel.shared_1[cse_var_16]))
                    conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 189)]*kernel.shared_1[cse_var_15]))
                    conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 196)]*kernel.shared_1[cse_var_15]))
                    conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 203)]*kernel.shared_1[cse_var_15]))
                    conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 210)]*kernel.shared_1[cse_var_15]))
                    conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 217)]*kernel.shared_1[cse_var_15]))
                    conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 224)]*kernel.shared_1[cse_var_15]))
                    conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 231)]*kernel.shared_1[cse_var_15]))
                    conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 252)]*kernel.shared_1[cse_var_8]))
                    conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 259)]*kernel.shared_1[cse_var_8]))
                    conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 266)]*kernel.shared_1[cse_var_8]))
                    conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 273)]*kernel.shared_1[cse_var_8]))
                    conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 280)]*kernel.shared_1[cse_var_8]))
                    conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 287)]*kernel.shared_1[cse_var_8]))
                    conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 294)]*kernel.shared_1[cse_var_8]))
                    conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 252)]*kernel.shared_1[cse_var_19]))
                    conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 259)]*kernel.shared_1[cse_var_19]))
                    conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 266)]*kernel.shared_1[cse_var_19]))
                    conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 273)]*kernel.shared_1[cse_var_19]))
                    conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 280)]*kernel.shared_1[cse_var_19]))
                    conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 287)]*kernel.shared_1[cse_var_19]))
                    conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 294)]*kernel.shared_1[cse_var_19]))
                    conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 315)]*kernel.shared_1[cse_var_14]))
                    conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 322)]*kernel.shared_1[cse_var_14]))
                    conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 329)]*kernel.shared_1[cse_var_14]))
                    conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 336)]*kernel.shared_1[cse_var_14]))
                    conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 343)]*kernel.shared_1[cse_var_14]))
                    conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 350)]*kernel.shared_1[cse_var_14]))
                    conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 357)]*kernel.shared_1[cse_var_14]))
                    conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 315)]*kernel.shared_1[cse_var_13]))
                    conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 322)]*kernel.shared_1[cse_var_13]))
                    conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 329)]*kernel.shared_1[cse_var_13]))
                    conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 336)]*kernel.shared_1[cse_var_13]))
                    conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 343)]*kernel.shared_1[cse_var_13]))
                    conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 350)]*kernel.shared_1[cse_var_13]))
                    conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 357)]*kernel.shared_1[cse_var_13]))
                    conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 378)]*kernel.shared_1[cse_var_4]))
                    conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 385)]*kernel.shared_1[cse_var_4]))
                    conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 392)]*kernel.shared_1[cse_var_4]))
                    conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 399)]*kernel.shared_1[cse_var_4]))
                    conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 406)]*kernel.shared_1[cse_var_4]))
                    conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 413)]*kernel.shared_1[cse_var_4]))
                    conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 420)]*kernel.shared_1[cse_var_4]))
                    conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 378)]*kernel.shared_1[cse_var_12]))
                    conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 385)]*kernel.shared_1[cse_var_12]))
                    conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 392)]*kernel.shared_1[cse_var_12]))
                    conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 399)]*kernel.shared_1[cse_var_12]))
                    conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 406)]*kernel.shared_1[cse_var_12]))
                    conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 413)]*kernel.shared_1[cse_var_12]))
                    conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 420)]*kernel.shared_1[cse_var_12]))
                    conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 441)]*kernel.shared_1[cse_var_26]))
                    conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 448)]*kernel.shared_1[cse_var_26]))
                    conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 455)]*kernel.shared_1[cse_var_26]))
                    conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 462)]*kernel.shared_1[cse_var_26]))
                    conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 469)]*kernel.shared_1[cse_var_26]))
                    conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 476)]*kernel.shared_1[cse_var_26]))
                    conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 483)]*kernel.shared_1[cse_var_26]))
                    conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 441)]*kernel.shared_1[cse_var_21]))
                    conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 448)]*kernel.shared_1[cse_var_21]))
                    conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 455)]*kernel.shared_1[cse_var_21]))
                    conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 462)]*kernel.shared_1[cse_var_21]))
                    conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 469)]*kernel.shared_1[cse_var_21]))
                    conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 476)]*kernel.shared_1[cse_var_21]))
                    conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[((((rc.outer.inner*504) + (ry.outer.inner*7)) + threadIdx.x) + 483)]*kernel.shared_1[cse_var_21]))
                  }
                }
              }
            }
          }
        }
        for (i1.inner: int32, 0, 2) {
          compute[(((blockIdx.x*196) + (i1.inner*49)) + threadIdx.x)] = max((conv2d_nchw_1[i1.inner] + bias[((blockIdx.x*4) + i1.inner)]), 0f32)
          compute[((((blockIdx.x*196) + (i1.inner*49)) + threadIdx.x) + 7)] = max((conv2d_nchw_1[(i1.inner + 2)] + bias[((blockIdx.x*4) + i1.inner)]), 0f32)
          compute[((((blockIdx.x*196) + (i1.inner*49)) + threadIdx.x) + 14)] = max((conv2d_nchw_1[(i1.inner + 4)] + bias[((blockIdx.x*4) + i1.inner)]), 0f32)
          compute[((((blockIdx.x*196) + (i1.inner*49)) + threadIdx.x) + 21)] = max((conv2d_nchw_1[(i1.inner + 6)] + bias[((blockIdx.x*4) + i1.inner)]), 0f32)
          compute[((((blockIdx.x*196) + (i1.inner*49)) + threadIdx.x) + 28)] = max((conv2d_nchw_1[(i1.inner + 8)] + bias[((blockIdx.x*4) + i1.inner)]), 0f32)
          compute[((((blockIdx.x*196) + (i1.inner*49)) + threadIdx.x) + 35)] = max((conv2d_nchw_1[(i1.inner + 10)] + bias[((blockIdx.x*4) + i1.inner)]), 0f32)
          compute[((((blockIdx.x*196) + (i1.inner*49)) + threadIdx.x) + 42)] = max((conv2d_nchw_1[(i1.inner + 12)] + bias[((blockIdx.x*4) + i1.inner)]), 0f32)
          compute[((((blockIdx.x*196) + (i1.inner*49)) + threadIdx.x) + 98)] = max((conv2d_nchw_1[(i1.inner + 14)] + bias[(((blockIdx.x*4) + i1.inner) + 2)]), 0f32)
          compute[((((blockIdx.x*196) + (i1.inner*49)) + threadIdx.x) + 105)] = max((conv2d_nchw_1[(i1.inner + 16)] + bias[(((blockIdx.x*4) + i1.inner) + 2)]), 0f32)
          compute[((((blockIdx.x*196) + (i1.inner*49)) + threadIdx.x) + 112)] = max((conv2d_nchw_1[(i1.inner + 18)] + bias[(((blockIdx.x*4) + i1.inner) + 2)]), 0f32)
          compute[((((blockIdx.x*196) + (i1.inner*49)) + threadIdx.x) + 119)] = max((conv2d_nchw_1[(i1.inner + 20)] + bias[(((blockIdx.x*4) + i1.inner) + 2)]), 0f32)
          compute[((((blockIdx.x*196) + (i1.inner*49)) + threadIdx.x) + 126)] = max((conv2d_nchw_1[(i1.inner + 22)] + bias[(((blockIdx.x*4) + i1.inner) + 2)]), 0f32)
          compute[((((blockIdx.x*196) + (i1.inner*49)) + threadIdx.x) + 133)] = max((conv2d_nchw_1[(i1.inner + 24)] + bias[(((blockIdx.x*4) + i1.inner) + 2)]), 0f32)
          compute[((((blockIdx.x*196) + (i1.inner*49)) + threadIdx.x) + 140)] = max((conv2d_nchw_1[(i1.inner + 26)] + bias[(((blockIdx.x*4) + i1.inner) + 2)]), 0f32)
        }
      }
    }





Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.


.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Execution time of this operator: 0.399 ms



Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.


.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=1)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=2)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=2)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=7)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=7)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=8)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=2)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=1)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=3)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=1)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=1)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=2)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=1)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=2)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=1)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=7)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=7)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=7)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=7)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 512)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(7) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[28];
      __shared__ float pad_temp_shared[1008];
      __shared__ float kernel_shared[192];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      conv2d_nchw[8] = 0.000000e+00f;
      conv2d_nchw[10] = 0.000000e+00f;
      conv2d_nchw[12] = 0.000000e+00f;
      conv2d_nchw[14] = 0.000000e+00f;
      conv2d_nchw[16] = 0.000000e+00f;
      conv2d_nchw[18] = 0.000000e+00f;
      conv2d_nchw[20] = 0.000000e+00f;
      conv2d_nchw[22] = 0.000000e+00f;
      conv2d_nchw[24] = 0.000000e+00f;
      conv2d_nchw[26] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[7] = 0.000000e+00f;
      conv2d_nchw[9] = 0.000000e+00f;
      conv2d_nchw[11] = 0.000000e+00f;
      conv2d_nchw[13] = 0.000000e+00f;
      conv2d_nchw[15] = 0.000000e+00f;
      conv2d_nchw[17] = 0.000000e+00f;
      conv2d_nchw[19] = 0.000000e+00f;
      conv2d_nchw[21] = 0.000000e+00f;
      conv2d_nchw[23] = 0.000000e+00f;
      conv2d_nchw[25] = 0.000000e+00f;
      conv2d_nchw[27] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 32; ++rc_outer_outer) {
        for (int rx_outer_outer = 0; rx_outer_outer < 3; ++rx_outer_outer) {
          __syncthreads();
          pad_temp_shared[((int)threadIdx.x)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 7)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) - 1)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 14)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 6)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 21)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 13)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 28)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 20)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 35)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 27)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 42)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 34)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 49)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 41)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 56)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 63)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 70)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 48)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 77)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 55)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 84)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 62)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 91)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 69)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 98)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 76)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 105)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 83)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 112)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 90)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 119)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 126)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 133)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 97)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 140)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 104)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 147)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 111)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 154)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 118)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 161)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 125)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 168)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 132)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 175)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 139)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 182)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 189)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 196)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 146)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 203)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 153)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 210)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 160)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 217)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 167)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 224)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 174)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 231)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 181)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 238)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 188)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 245)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 252)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 259)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 195)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 266)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 202)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 273)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 209)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 280)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 216)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 287)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 223)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 294)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 230)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 301)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 237)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 308)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 315)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 322)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 244)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 329)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 251)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 336)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 258)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 343)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 265)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 350)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 272)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 357)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 279)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 364)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 286)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 371)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 378)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 385)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 293)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 392)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 300)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 399)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 307)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 406)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 314)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 413)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 321)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 420)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 328)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 427)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 335)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 434)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 441)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 448)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 342)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 455)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 349)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 462)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 356)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 469)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 363)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 476)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 370)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 483)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 377)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 490)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 384)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 497)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 504)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 511)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 391)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 518)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 398)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 525)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 405)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 532)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 412)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 539)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 419)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 546)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 426)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 553)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 433)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 560)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 567)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 574)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 440)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 581)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 447)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 588)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 454)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 595)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 461)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 602)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 468)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 609)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 475)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 616)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 482)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 623)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 630)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 637)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 489)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 644)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 496)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 651)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 503)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 658)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 510)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 665)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 517)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 672)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 524)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 679)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 531)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 686)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 693)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 700)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 538)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 707)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 545)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 714)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 552)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 721)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 559)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 728)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 566)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 735)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 573)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 742)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 580)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 749)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 756)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 763)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 587)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 770)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 594)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 777)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 601)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 784)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 608)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 791)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 615)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 798)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 622)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 805)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 629)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 812)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 819)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 826)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 636)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 833)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 643)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 840)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 650)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 847)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 657)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 854)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 664)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 861)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 671)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 868)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 678)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 875)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 882)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 889)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 685)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 896)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 692)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 903)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 699)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 910)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 706)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 917)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 713)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 924)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 720)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 931)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 727)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 938)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 945)] = 0.000000e+00f;
          pad_temp_shared[(((int)threadIdx.x) + 952)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 734)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 959)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 741)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 966)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 748)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 973)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 755)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 980)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 762)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 987)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 769)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 994)] = (((1 <= (((int)threadIdx.x) + rx_outer_outer)) && ((((int)threadIdx.x) + rx_outer_outer) < 8)) ? data[((((rc_outer_outer * 784) + rx_outer_outer) + ((int)threadIdx.x)) + 776)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1001)] = 0.000000e+00f;
          kernel_shared[((int)threadIdx.x)] = kernel[((((((int)blockIdx.x) * 18432) + (rc_outer_outer * 144)) + (((int)threadIdx.x) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 7)] = kernel[(((((((int)blockIdx.x) * 18432) + (rc_outer_outer * 144)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 21)];
          kernel_shared[(((int)threadIdx.x) + 14)] = kernel[(((((((int)blockIdx.x) * 18432) + (rc_outer_outer * 144)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 42)];
          kernel_shared[(((int)threadIdx.x) + 21)] = kernel[(((((((int)blockIdx.x) * 18432) + (rc_outer_outer * 144)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 63)];
          kernel_shared[(((int)threadIdx.x) + 28)] = kernel[(((((((int)blockIdx.x) * 18432) + (rc_outer_outer * 144)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 84)];
          kernel_shared[(((int)threadIdx.x) + 35)] = kernel[(((((((int)blockIdx.x) * 18432) + (rc_outer_outer * 144)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 105)];
          kernel_shared[(((int)threadIdx.x) + 42)] = kernel[(((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 42) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 42) % 48) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 49)] = kernel[(((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 49) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 1) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 56)] = kernel[(((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 56) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 8) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 63)] = kernel[(((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 63) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 15) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 70)] = kernel[(((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 70) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 22) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 77)] = kernel[(((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 77) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 29) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 84)] = kernel[(((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 84) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 36) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 91)] = kernel[(((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 91) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 43) % 48) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 98)] = kernel[(((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 98) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 2) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 105)] = kernel[(((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 105) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 9) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 112)] = kernel[(((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 112) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 16) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 119)] = kernel[(((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 119) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 23) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 126)] = kernel[(((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 126) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 30) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 133)] = kernel[(((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 133) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 37) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 140)] = kernel[(((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 140) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 44) % 48) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 147)] = kernel[(((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 147) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 154)] = kernel[(((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 154) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 10) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 161)] = kernel[(((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 161) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 17) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 168)] = kernel[(((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 168) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 24) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 175)] = kernel[(((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 175) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 31) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 182)] = kernel[(((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 182) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 38) * 3)) + rx_outer_outer)];
          if (((int)threadIdx.x) < 3) {
            kernel_shared[(((int)threadIdx.x) + 189)] = kernel[(((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 189) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 45) * 3)) + rx_outer_outer)];
          }
          __syncthreads();
          for (int rc_outer_inner = 0; rc_outer_inner < 2; ++rc_outer_inner) {
            for (int ry_outer_inner = 0; ry_outer_inner < 3; ++ry_outer_inner) {
              conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 24) + ry_outer_inner)]));
              conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 24) + ry_outer_inner)]));
              conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 24) + ry_outer_inner)]));
              conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 21)] * kernel_shared[((rc_outer_inner * 24) + ry_outer_inner)]));
              conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 28)] * kernel_shared[((rc_outer_inner * 24) + ry_outer_inner)]));
              conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 35)] * kernel_shared[((rc_outer_inner * 24) + ry_outer_inner)]));
              conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 42)] * kernel_shared[((rc_outer_inner * 24) + ry_outer_inner)]));
              conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x))] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 96)]));
              conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 7)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 96)]));
              conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 14)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 96)]));
              conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 21)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 96)]));
              conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 28)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 96)]));
              conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 35)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 96)]));
              conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 42)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 96)]));
              conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 63)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 3)]));
              conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 70)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 3)]));
              conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 77)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 3)]));
              conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 84)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 3)]));
              conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 91)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 3)]));
              conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 98)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 3)]));
              conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 105)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 3)]));
              conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 63)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 99)]));
              conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 70)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 99)]));
              conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 77)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 99)]));
              conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 84)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 99)]));
              conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 91)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 99)]));
              conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 98)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 99)]));
              conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 105)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 99)]));
              conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 126)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 6)]));
              conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 133)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 6)]));
              conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 140)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 6)]));
              conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 147)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 6)]));
              conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 154)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 6)]));
              conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 161)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 6)]));
              conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 168)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 6)]));
              conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 126)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 102)]));
              conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 133)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 102)]));
              conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 140)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 102)]));
              conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 147)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 102)]));
              conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 154)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 102)]));
              conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 161)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 102)]));
              conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 168)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 102)]));
              conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 189)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 9)]));
              conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 196)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 9)]));
              conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 203)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 9)]));
              conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 210)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 9)]));
              conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 217)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 9)]));
              conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 224)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 9)]));
              conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 231)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 9)]));
              conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 189)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 105)]));
              conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 196)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 105)]));
              conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 203)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 105)]));
              conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 210)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 105)]));
              conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 217)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 105)]));
              conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 224)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 105)]));
              conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 231)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 105)]));
              conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 252)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 12)]));
              conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 259)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 12)]));
              conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 266)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 12)]));
              conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 273)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 12)]));
              conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 280)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 12)]));
              conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 287)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 12)]));
              conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 294)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 12)]));
              conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 252)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 108)]));
              conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 259)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 108)]));
              conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 266)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 108)]));
              conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 273)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 108)]));
              conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 280)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 108)]));
              conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 287)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 108)]));
              conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 294)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 108)]));
              conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 315)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 15)]));
              conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 322)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 15)]));
              conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 329)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 15)]));
              conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 336)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 15)]));
              conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 343)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 15)]));
              conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 350)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 15)]));
              conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 357)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 15)]));
              conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 315)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 111)]));
              conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 322)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 111)]));
              conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 329)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 111)]));
              conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 336)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 111)]));
              conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 343)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 111)]));
              conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 350)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 111)]));
              conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 357)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 111)]));
              conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 378)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 18)]));
              conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 385)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 18)]));
              conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 392)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 18)]));
              conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 399)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 18)]));
              conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 406)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 18)]));
              conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 413)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 18)]));
              conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 420)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 18)]));
              conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 378)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 114)]));
              conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 385)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 114)]));
              conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 392)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 114)]));
              conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 399)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 114)]));
              conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 406)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 114)]));
              conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 413)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 114)]));
              conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 420)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 114)]));
              conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 441)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 21)]));
              conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 448)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 21)]));
              conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 455)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 21)]));
              conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 462)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 21)]));
              conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 469)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 21)]));
              conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 476)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 21)]));
              conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 483)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 21)]));
              conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 441)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 117)]));
              conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 448)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 117)]));
              conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 455)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 117)]));
              conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 462)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 117)]));
              conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 469)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 117)]));
              conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 476)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 117)]));
              conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 483)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 117)]));
              conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x))] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 48)]));
              conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 7)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 48)]));
              conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 14)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 48)]));
              conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 21)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 48)]));
              conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 28)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 48)]));
              conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 35)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 48)]));
              conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 42)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 48)]));
              conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x))] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 144)]));
              conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 7)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 144)]));
              conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 14)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 144)]));
              conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 21)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 144)]));
              conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 28)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 144)]));
              conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 35)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 144)]));
              conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 42)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 144)]));
              conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 63)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 51)]));
              conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 70)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 51)]));
              conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 77)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 51)]));
              conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 84)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 51)]));
              conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 91)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 51)]));
              conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 98)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 51)]));
              conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 105)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 51)]));
              conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 63)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 147)]));
              conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 70)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 147)]));
              conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 77)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 147)]));
              conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 84)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 147)]));
              conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 91)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 147)]));
              conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 98)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 147)]));
              conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 105)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 147)]));
              conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 126)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 54)]));
              conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 133)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 54)]));
              conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 140)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 54)]));
              conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 147)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 54)]));
              conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 154)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 54)]));
              conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 161)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 54)]));
              conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 168)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 54)]));
              conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 126)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 150)]));
              conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 133)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 150)]));
              conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 140)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 150)]));
              conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 147)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 150)]));
              conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 154)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 150)]));
              conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 161)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 150)]));
              conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 168)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 150)]));
              conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 189)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 57)]));
              conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 196)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 57)]));
              conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 203)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 57)]));
              conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 210)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 57)]));
              conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 217)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 57)]));
              conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 224)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 57)]));
              conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 231)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 57)]));
              conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 189)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 153)]));
              conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 196)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 153)]));
              conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 203)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 153)]));
              conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 210)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 153)]));
              conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 217)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 153)]));
              conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 224)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 153)]));
              conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 231)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 153)]));
              conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 252)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 60)]));
              conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 259)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 60)]));
              conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 266)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 60)]));
              conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 273)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 60)]));
              conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 280)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 60)]));
              conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 287)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 60)]));
              conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 294)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 60)]));
              conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 252)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 156)]));
              conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 259)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 156)]));
              conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 266)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 156)]));
              conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 273)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 156)]));
              conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 280)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 156)]));
              conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 287)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 156)]));
              conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 294)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 156)]));
              conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 315)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 63)]));
              conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 322)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 63)]));
              conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 329)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 63)]));
              conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 336)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 63)]));
              conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 343)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 63)]));
              conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 350)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 63)]));
              conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 357)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 63)]));
              conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 315)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 159)]));
              conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 322)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 159)]));
              conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 329)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 159)]));
              conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 336)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 159)]));
              conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 343)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 159)]));
              conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 350)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 159)]));
              conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 357)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 159)]));
              conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 378)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 66)]));
              conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 385)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 66)]));
              conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 392)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 66)]));
              conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 399)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 66)]));
              conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 406)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 66)]));
              conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 413)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 66)]));
              conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 420)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 66)]));
              conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 378)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 162)]));
              conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 385)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 162)]));
              conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 392)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 162)]));
              conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 399)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 162)]));
              conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 406)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 162)]));
              conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 413)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 162)]));
              conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 420)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 162)]));
              conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 441)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 69)]));
              conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 448)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 69)]));
              conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 455)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 69)]));
              conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 462)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 69)]));
              conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 469)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 69)]));
              conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 476)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 69)]));
              conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 483)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 69)]));
              conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 441)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 165)]));
              conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 448)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 165)]));
              conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 455)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 165)]));
              conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 462)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 165)]));
              conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 469)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 165)]));
              conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 476)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 165)]));
              conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((rc_outer_inner * 504) + (ry_outer_inner * 7)) + ((int)threadIdx.x)) + 483)] * kernel_shared[(((rc_outer_inner * 24) + ry_outer_inner) + 165)]));
            }
          }
        }
      }
      for (int i1_inner = 0; i1_inner < 2; ++i1_inner) {
        compute[(((((int)blockIdx.x) * 196) + (i1_inner * 49)) + ((int)threadIdx.x))] = max((conv2d_nchw[i1_inner] + bias[((((int)blockIdx.x) * 4) + i1_inner)]), 0.000000e+00f);
        compute[((((((int)blockIdx.x) * 196) + (i1_inner * 49)) + ((int)threadIdx.x)) + 7)] = max((conv2d_nchw[(i1_inner + 2)] + bias[((((int)blockIdx.x) * 4) + i1_inner)]), 0.000000e+00f);
        compute[((((((int)blockIdx.x) * 196) + (i1_inner * 49)) + ((int)threadIdx.x)) + 14)] = max((conv2d_nchw[(i1_inner + 4)] + bias[((((int)blockIdx.x) * 4) + i1_inner)]), 0.000000e+00f);
        compute[((((((int)blockIdx.x) * 196) + (i1_inner * 49)) + ((int)threadIdx.x)) + 21)] = max((conv2d_nchw[(i1_inner + 6)] + bias[((((int)blockIdx.x) * 4) + i1_inner)]), 0.000000e+00f);
        compute[((((((int)blockIdx.x) * 196) + (i1_inner * 49)) + ((int)threadIdx.x)) + 28)] = max((conv2d_nchw[(i1_inner + 8)] + bias[((((int)blockIdx.x) * 4) + i1_inner)]), 0.000000e+00f);
        compute[((((((int)blockIdx.x) * 196) + (i1_inner * 49)) + ((int)threadIdx.x)) + 35)] = max((conv2d_nchw[(i1_inner + 10)] + bias[((((int)blockIdx.x) * 4) + i1_inner)]), 0.000000e+00f);
        compute[((((((int)blockIdx.x) * 196) + (i1_inner * 49)) + ((int)threadIdx.x)) + 42)] = max((conv2d_nchw[(i1_inner + 12)] + bias[((((int)blockIdx.x) * 4) + i1_inner)]), 0.000000e+00f);
        compute[((((((int)blockIdx.x) * 196) + (i1_inner * 49)) + ((int)threadIdx.x)) + 98)] = max((conv2d_nchw[(i1_inner + 14)] + bias[(((((int)blockIdx.x) * 4) + i1_inner) + 2)]), 0.000000e+00f);
        compute[((((((int)blockIdx.x) * 196) + (i1_inner * 49)) + ((int)threadIdx.x)) + 105)] = max((conv2d_nchw[(i1_inner + 16)] + bias[(((((int)blockIdx.x) * 4) + i1_inner) + 2)]), 0.000000e+00f);
        compute[((((((int)blockIdx.x) * 196) + (i1_inner * 49)) + ((int)threadIdx.x)) + 112)] = max((conv2d_nchw[(i1_inner + 18)] + bias[(((((int)blockIdx.x) * 4) + i1_inner) + 2)]), 0.000000e+00f);
        compute[((((((int)blockIdx.x) * 196) + (i1_inner * 49)) + ((int)threadIdx.x)) + 119)] = max((conv2d_nchw[(i1_inner + 20)] + bias[(((((int)blockIdx.x) * 4) + i1_inner) + 2)]), 0.000000e+00f);
        compute[((((((int)blockIdx.x) * 196) + (i1_inner * 49)) + ((int)threadIdx.x)) + 126)] = max((conv2d_nchw[(i1_inner + 22)] + bias[(((((int)blockIdx.x) * 4) + i1_inner) + 2)]), 0.000000e+00f);
        compute[((((((int)blockIdx.x) * 196) + (i1_inner * 49)) + ((int)threadIdx.x)) + 133)] = max((conv2d_nchw[(i1_inner + 24)] + bias[(((((int)blockIdx.x) * 4) + i1_inner) + 2)]), 0.000000e+00f);
        compute[((((((int)blockIdx.x) * 196) + (i1_inner * 49)) + ((int)threadIdx.x)) + 140)] = max((conv2d_nchw[(i1_inner + 26)] + bias[(((((int)blockIdx.x) * 4) + i1_inner) + 2)]), 0.000000e+00f);
      }
    }





A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.


.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Resume search:
    /usr/local/lib/python3.6/dist-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  24.988 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
