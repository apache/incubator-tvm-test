.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.


.. code-block:: default


    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python







Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.


.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]








Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.


.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)




Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the master process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.


.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Get devices for measurement successfully!



Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.


.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none






We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.


.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Lowered TIR:
    @main = primfn(data_1: handle, kernel_1: handle, bias_1: handle, compute_1: handle) -> ()
      attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
      buffers = {compute: Buffer(compute_2: Pointer(float32), float32, [25088], []),
                 bias: Buffer(bias_2: Pointer(float32), float32, [512], []),
                 data: Buffer(data_2: Pointer(float32), float32, [25088], []),
                 kernel: Buffer(kernel_2: Pointer(float32), float32, [2359296], [])}
      buffer_map = {data_1: data, kernel_1: kernel, bias_1: bias, compute_1: compute} {
      attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = 16;
      allocate(conv2d_nchw: Pointer(local float32), float32, [28]), storage_scope = local;
      allocate(pad_temp.shared: Pointer(shared float32), float32, [1008]), storage_scope = shared;
      allocate(kernel.shared: Pointer(shared float32), float32, [1536]), storage_scope = shared;
      attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56 {
        conv2d_nchw_1: Buffer(conv2d_nchw, float32, [28], [], scope="local", align=64)[0] = 0f32
        conv2d_nchw_1[1] = 0f32
        conv2d_nchw_1[2] = 0f32
        conv2d_nchw_1[3] = 0f32
        conv2d_nchw_1[4] = 0f32
        conv2d_nchw_1[5] = 0f32
        conv2d_nchw_1[6] = 0f32
        conv2d_nchw_1[7] = 0f32
        conv2d_nchw_1[8] = 0f32
        conv2d_nchw_1[9] = 0f32
        conv2d_nchw_1[10] = 0f32
        conv2d_nchw_1[11] = 0f32
        conv2d_nchw_1[12] = 0f32
        conv2d_nchw_1[13] = 0f32
        conv2d_nchw_1[14] = 0f32
        conv2d_nchw_1[15] = 0f32
        conv2d_nchw_1[16] = 0f32
        conv2d_nchw_1[17] = 0f32
        conv2d_nchw_1[18] = 0f32
        conv2d_nchw_1[19] = 0f32
        conv2d_nchw_1[20] = 0f32
        conv2d_nchw_1[21] = 0f32
        conv2d_nchw_1[22] = 0f32
        conv2d_nchw_1[23] = 0f32
        conv2d_nchw_1[24] = 0f32
        conv2d_nchw_1[25] = 0f32
        conv2d_nchw_1[26] = 0f32
        conv2d_nchw_1[27] = 0f32
        for (rc.outer.outer: int32, 0, 32) {
          for (ry.outer.outer: int32, 0, 3) {
            let cse_var_4: int32 = (rc.outer.outer*784)
            let cse_var_3: int32 = (ry.outer.outer*7)
            let cse_var_2: int32 = (rc.outer.outer*144)
            let cse_var_1: int32 = (ry.outer.outer*3)
             {
              attr [IterVar(threadIdx.x_1: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1: Buffer(pad_temp.shared, float32, [1008], [], scope="shared")[threadIdx.x_1] = @tir.if_then_else(((((1 <= (floordiv(threadIdx.x_1, 9) + ry.outer.outer)) && ((floordiv(threadIdx.x_1, 9) + ry.outer.outer) < 8)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*7)) + cse_var_3) + floormod(threadIdx.x_1, 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 56)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 56), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 56), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 56), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 112)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 112), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 112), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 112), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 168)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 168), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 168), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 168), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 224)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 224), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 224), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 224), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 280)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 280), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 280), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 280), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 336)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 336), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 336), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 336), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 392)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 392), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 392), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 392), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 448)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 448), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 448), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 448), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 504)] = @tir.if_then_else(((((1 <= (floordiv(threadIdx.x_1, 9) + ry.outer.outer)) && ((floordiv(threadIdx.x_1, 9) + ry.outer.outer) < 8)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*7)) + cse_var_3) + floormod(threadIdx.x_1, 9)) + 384)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 560)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 560), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 560), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 560), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 616)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 616), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 616), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 616), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 672)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 672), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 672), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 672), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 728)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 728), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 728), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 728), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 784)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 784), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 784), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 784), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 840)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 840), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 840), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 840), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 896)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 896), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 896), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 896), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 952)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 952), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 952), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 952), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_2: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1: Buffer(kernel.shared, float32, [1536], [], scope="shared")[threadIdx.x_2] = kernel[((((((blockIdx.x*147456) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_2) + (floordiv(floormod(threadIdx.x_2, 48), 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1[(threadIdx.x_2 + 56)] = kernel[((((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 8) + 7), 6)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 56), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1[(threadIdx.x_2 + 112)] = kernel[((((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 8) + 14), 6)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 112), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1[(threadIdx.x_2 + 168)] = kernel[((((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 8) + 21), 6)*4608)) + cse_var_2) + (floormod((floordiv(threadIdx.x_2, 3) + 8), 16)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1[(threadIdx.x_2 + 224)] = kernel[((((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 8) + 28), 6)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 224), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1[(threadIdx.x_2 + 280)] = kernel[((((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 8) + 35), 6)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 280), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1[(threadIdx.x_2 + 336)] = kernel[(((((((blockIdx.x*147456) + (floordiv(floordiv(threadIdx.x_2, 8), 6)*4608)) + cse_var_2) + (floordiv(floormod(threadIdx.x_2, 48), 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 32256)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1[(threadIdx.x_2 + 392)] = kernel[((((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 8) + 49), 6)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 392), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1[(threadIdx.x_2 + 448)] = kernel[((((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 8) + 56), 6)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 448), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1[(threadIdx.x_2 + 504)] = kernel[((((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 8) + 63), 6)*4608)) + cse_var_2) + (floormod((floordiv(threadIdx.x_2, 3) + 8), 16)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1[(threadIdx.x_2 + 560)] = kernel[((((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 8) + 70), 6)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 560), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1[(threadIdx.x_2 + 616)] = kernel[((((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 8) + 77), 6)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 616), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1[(threadIdx.x_2 + 672)] = kernel[(((((((blockIdx.x*147456) + (floordiv(floordiv(threadIdx.x_2, 8), 6)*4608)) + cse_var_2) + (floordiv(floormod(threadIdx.x_2, 48), 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 64512)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1[(threadIdx.x_2 + 728)] = kernel[((((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 8) + 91), 6)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 728), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1[(threadIdx.x_2 + 784)] = kernel[((((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 8) + 98), 6)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 784), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1[(threadIdx.x_2 + 840)] = kernel[((((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 8) + 105), 6)*4608)) + cse_var_2) + (floormod((floordiv(threadIdx.x_2, 3) + 8), 16)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1[(threadIdx.x_2 + 896)] = kernel[((((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 8) + 112), 6)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 896), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1[(threadIdx.x_2 + 952)] = kernel[((((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 8) + 119), 6)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 952), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1[(threadIdx.x_2 + 1008)] = kernel[(((((((blockIdx.x*147456) + (floordiv(floordiv(threadIdx.x_2, 8), 6)*4608)) + cse_var_2) + (floordiv(floormod(threadIdx.x_2, 48), 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 96768)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1[(threadIdx.x_2 + 1064)] = kernel[((((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 8) + 133), 6)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 1064), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1[(threadIdx.x_2 + 1120)] = kernel[((((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 8) + 140), 6)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 1120), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1[(threadIdx.x_2 + 1176)] = kernel[((((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 8) + 147), 6)*4608)) + cse_var_2) + (floormod((floordiv(threadIdx.x_2, 3) + 8), 16)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1[(threadIdx.x_2 + 1232)] = kernel[((((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 8) + 154), 6)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 1232), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1[(threadIdx.x_2 + 1288)] = kernel[((((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 8) + 161), 6)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 1288), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1[(threadIdx.x_2 + 1344)] = kernel[(((((((blockIdx.x*147456) + (floordiv(floordiv(threadIdx.x_2, 8), 6)*4608)) + cse_var_2) + (floordiv(floormod(threadIdx.x_2, 48), 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 129024)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1[(threadIdx.x_2 + 1400)] = kernel[((((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 8) + 175), 6)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 1400), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              kernel.shared_1[(threadIdx.x_2 + 1456)] = kernel[((((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 8) + 182), 6)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 1456), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              if @tir.likely((threadIdx.x_2 < 24), dtype=bool) {
                kernel.shared_1[(threadIdx.x_2 + 1512)] = kernel[((((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 8) + 189), 6)*4608)) + cse_var_2) + (floormod((floordiv(threadIdx.x_2, 3) + 8), 16)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3))]
              }
              for (rx.outer.inner: int32, 0, 3) {
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + rx.outer.inner)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*192) + rx.outer.inner)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*192) + rx.outer.inner)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*192) + rx.outer.inner)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*192) + rx.outer.inner)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*192) + rx.outer.inner)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*192) + rx.outer.inner)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*192) + rx.outer.inner)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + rx.outer.inner)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 48)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 1)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 48)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 2)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 48)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 3)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 48)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 4)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 48)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 5)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 48)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 6)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 48)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + rx.outer.inner)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 96)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 1)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 96)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 2)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 96)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 3)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 96)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 4)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 96)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 5)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 96)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 6)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 96)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + rx.outer.inner)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 144)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 1)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 144)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 2)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 144)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 3)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 144)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 4)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 144)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 5)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 144)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 6)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 144)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 3)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 64)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 3)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 65)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 3)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 66)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 3)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 67)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 3)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 68)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 3)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 69)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 3)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 51)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 64)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 51)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 65)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 51)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 66)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 51)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 67)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 51)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 68)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 51)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 69)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 51)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 99)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 64)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 99)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 65)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 99)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 66)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 99)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 67)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 99)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 68)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 99)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 69)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 99)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 147)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 64)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 147)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 65)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 147)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 66)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 147)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 67)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 147)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 68)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 147)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 69)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 147)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 6)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 127)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 6)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 128)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 6)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 129)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 6)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 130)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 6)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 131)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 6)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 132)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 6)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 54)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 127)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 54)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 128)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 54)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 129)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 54)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 130)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 54)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 131)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 54)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 132)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 54)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 102)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 127)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 102)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 128)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 102)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 129)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 102)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 130)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 102)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 131)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 102)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 132)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 102)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 150)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 127)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 150)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 128)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 150)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 129)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 150)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 130)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 150)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 131)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 150)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 132)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 150)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 9)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 190)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 9)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 191)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 9)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 192)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 9)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 193)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 9)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 194)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 9)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 195)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 9)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 57)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 190)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 57)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 191)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 57)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 192)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 57)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 193)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 57)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 194)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 57)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 195)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 57)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 105)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 190)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 105)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 191)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 105)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 192)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 105)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 193)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 105)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 194)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 105)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 195)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 105)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 153)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 190)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 153)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 191)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 153)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 192)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 153)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 193)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 153)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 194)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 153)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 195)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 153)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 12)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 253)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 12)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 254)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 12)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 255)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 12)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 256)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 12)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 257)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 12)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 258)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 12)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 60)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 253)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 60)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 254)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 60)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 255)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 60)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 256)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 60)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 257)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 60)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 258)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 60)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 108)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 253)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 108)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 254)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 108)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 255)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 108)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 256)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 108)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 257)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 108)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 258)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 108)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 156)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 253)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 156)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 254)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 156)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 255)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 156)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 256)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 156)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 257)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 156)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 258)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 156)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 315)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 15)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 316)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 15)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 317)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 15)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 318)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 15)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 319)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 15)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 320)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 15)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 321)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 15)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 315)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 63)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 316)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 63)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 317)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 63)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 318)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 63)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 319)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 63)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 320)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 63)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 321)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 63)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 315)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 111)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 316)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 111)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 317)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 111)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 318)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 111)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 319)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 111)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 320)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 111)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 321)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 111)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 315)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 159)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 316)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 159)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 317)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 159)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 318)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 159)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 319)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 159)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 320)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 159)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 321)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 159)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 378)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 18)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 379)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 18)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 380)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 18)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 381)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 18)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 382)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 18)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 383)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 18)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 384)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 18)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 378)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 66)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 379)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 66)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 380)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 66)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 381)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 66)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 382)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 66)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 383)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 66)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 384)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 66)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 378)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 114)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 379)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 114)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 380)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 114)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 381)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 114)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 382)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 114)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 383)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 114)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 384)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 114)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 378)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 162)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 379)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 162)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 380)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 162)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 381)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 162)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 382)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 162)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 383)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 162)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 384)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 162)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 441)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 21)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 442)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 21)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 443)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 21)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 444)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 21)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 445)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 21)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 446)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 21)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 447)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 21)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 441)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 69)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 442)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 69)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 443)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 69)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 444)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 69)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 445)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 69)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 446)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 69)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 447)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 69)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 441)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 117)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 442)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 117)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 443)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 117)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 444)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 117)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 445)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 117)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 446)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 117)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 447)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 117)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 441)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 165)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 442)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 165)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 443)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 165)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 444)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 165)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 445)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 165)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 446)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 165)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 447)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 165)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 504)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 24)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 505)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 24)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 506)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 24)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 507)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 24)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 508)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 24)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 509)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 24)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 510)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 24)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 504)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 72)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 505)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 72)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 506)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 72)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 507)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 72)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 508)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 72)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 509)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 72)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 510)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 72)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 504)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 120)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 505)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 120)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 506)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 120)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 507)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 120)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 508)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 120)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 509)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 120)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 510)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 120)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 504)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 168)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 505)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 168)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 506)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 168)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 507)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 168)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 508)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 168)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 509)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 168)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 510)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 168)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 567)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 27)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 568)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 27)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 569)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 27)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 570)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 27)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 571)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 27)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 572)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 27)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 573)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 27)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 567)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 75)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 568)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 75)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 569)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 75)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 570)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 75)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 571)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 75)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 572)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 75)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 573)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 75)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 567)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 123)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 568)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 123)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 569)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 123)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 570)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 123)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 571)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 123)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 572)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 123)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 573)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 123)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 567)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 171)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 568)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 171)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 569)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 171)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 570)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 171)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 571)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 171)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 572)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 171)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 573)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 171)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 630)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 30)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 631)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 30)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 632)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 30)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 633)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 30)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 634)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 30)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 635)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 30)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 636)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 30)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 630)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 78)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 631)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 78)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 632)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 78)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 633)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 78)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 634)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 78)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 635)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 78)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 636)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 78)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 630)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 126)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 631)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 126)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 632)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 126)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 633)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 126)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 634)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 126)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 635)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 126)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 636)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 126)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 630)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 174)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 631)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 174)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 632)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 174)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 633)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 174)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 634)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 174)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 635)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 174)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 636)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 174)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 693)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 33)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 694)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 33)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 695)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 33)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 696)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 33)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 697)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 33)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 698)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 33)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 699)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 33)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 693)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 81)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 694)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 81)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 695)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 81)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 696)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 81)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 697)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 81)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 698)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 81)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 699)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 81)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 693)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 129)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 694)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 129)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 695)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 129)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 696)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 129)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 697)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 129)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 698)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 129)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 699)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 129)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 693)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 177)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 694)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 177)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 695)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 177)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 696)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 177)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 697)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 177)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 698)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 177)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 699)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 177)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 756)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 36)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 757)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 36)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 758)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 36)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 759)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 36)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 760)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 36)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 761)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 36)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 762)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 36)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 756)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 84)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 757)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 84)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 758)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 84)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 759)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 84)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 760)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 84)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 761)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 84)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 762)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 84)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 756)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 132)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 757)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 132)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 758)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 132)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 759)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 132)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 760)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 132)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 761)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 132)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 762)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 132)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 756)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 180)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 757)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 180)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 758)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 180)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 759)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 180)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 760)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 180)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 761)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 180)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 762)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 180)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 819)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 39)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 820)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 39)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 821)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 39)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 822)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 39)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 823)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 39)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 824)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 39)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 825)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 39)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 819)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 87)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 820)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 87)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 821)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 87)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 822)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 87)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 823)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 87)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 824)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 87)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 825)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 87)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 819)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 135)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 820)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 135)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 821)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 135)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 822)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 135)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 823)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 135)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 824)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 135)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 825)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 135)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 819)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 183)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 820)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 183)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 821)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 183)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 822)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 183)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 823)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 183)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 824)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 183)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 825)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 183)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 882)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 42)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 883)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 42)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 884)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 42)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 885)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 42)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 886)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 42)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 887)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 42)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 888)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 42)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 882)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 90)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 883)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 90)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 884)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 90)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 885)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 90)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 886)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 90)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 887)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 90)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 888)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 90)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 882)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 138)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 883)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 138)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 884)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 138)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 885)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 138)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 886)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 138)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 887)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 138)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 888)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 138)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 882)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 186)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 883)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 186)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 884)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 186)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 885)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 186)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 886)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 186)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 887)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 186)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 888)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 186)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 945)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 45)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 946)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 45)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 947)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 45)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 948)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 45)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 949)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 45)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 950)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 45)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 951)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 45)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 945)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 93)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 946)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 93)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 947)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 93)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 948)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 93)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 949)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 93)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 950)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 93)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 951)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 93)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 945)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 141)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 946)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 141)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 947)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 141)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 948)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 141)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 949)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 141)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 950)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 141)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 951)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 141)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 945)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 189)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 946)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 189)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 947)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 189)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 948)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 189)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 949)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 189)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 950)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 189)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 951)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + rx.outer.inner) + 189)]))
              }
            }
          }
        }
        for (i1.inner: int32, 0, 4) {
          for (i3.inner: int32, 0, 7) {
            compute[(((((blockIdx.x*1568) + (floordiv(threadIdx.x, 7)*196)) + (i1.inner*49)) + (floormod(threadIdx.x, 7)*7)) + i3.inner)] = max((conv2d_nchw_1[((i1.inner*7) + i3.inner)] + bias[(((blockIdx.x*32) + (floordiv(threadIdx.x, 7)*4)) + i1.inner)]), 0f32)
          }
        }
      }
    }





Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.


.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Execution time of this operator: 0.363 ms



Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.


.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=4)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=8)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=1)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=7)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=7)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=16)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=1)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=1)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=1)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=1)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=3)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=4)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=8)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=1)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=7)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=7)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=1)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=56)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=56)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 1024)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(56) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[28];
      __shared__ float pad_temp_shared[1008];
      __shared__ float kernel_shared[1536];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      conv2d_nchw[7] = 0.000000e+00f;
      conv2d_nchw[8] = 0.000000e+00f;
      conv2d_nchw[9] = 0.000000e+00f;
      conv2d_nchw[10] = 0.000000e+00f;
      conv2d_nchw[11] = 0.000000e+00f;
      conv2d_nchw[12] = 0.000000e+00f;
      conv2d_nchw[13] = 0.000000e+00f;
      conv2d_nchw[14] = 0.000000e+00f;
      conv2d_nchw[15] = 0.000000e+00f;
      conv2d_nchw[16] = 0.000000e+00f;
      conv2d_nchw[17] = 0.000000e+00f;
      conv2d_nchw[18] = 0.000000e+00f;
      conv2d_nchw[19] = 0.000000e+00f;
      conv2d_nchw[20] = 0.000000e+00f;
      conv2d_nchw[21] = 0.000000e+00f;
      conv2d_nchw[22] = 0.000000e+00f;
      conv2d_nchw[23] = 0.000000e+00f;
      conv2d_nchw[24] = 0.000000e+00f;
      conv2d_nchw[25] = 0.000000e+00f;
      conv2d_nchw[26] = 0.000000e+00f;
      conv2d_nchw[27] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 32; ++rc_outer_outer) {
        for (int ry_outer_outer = 0; ry_outer_outer < 3; ++ry_outer_outer) {
          __syncthreads();
          pad_temp_shared[((int)threadIdx.x)] = (((((1 <= ((((int)threadIdx.x) / 9) + ry_outer_outer)) && (((((int)threadIdx.x) / 9) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + ((((int)threadIdx.x) / 9) * 7)) + (ry_outer_outer * 7)) + (((int)threadIdx.x) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 56)] = (((((1 <= ((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 56) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 112)] = (((((1 <= ((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 112) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 168)] = (((((1 <= ((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 168) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 224)] = (((((1 <= ((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 224) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 280)] = (((((1 <= ((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 280) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 336)] = (((((1 <= ((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 336) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 392)] = (((((1 <= ((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 392) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 448)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 448) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 504)] = (((((1 <= ((((int)threadIdx.x) / 9) + ry_outer_outer)) && (((((int)threadIdx.x) / 9) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + ((((int)threadIdx.x) / 9) * 7)) + (ry_outer_outer * 7)) + (((int)threadIdx.x) % 9)) + 384)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 560)] = (((((1 <= ((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 560) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 616)] = (((((1 <= ((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 616) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 672)] = (((((1 <= ((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 672) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 728)] = (((((1 <= ((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 728) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 784)] = (((((1 <= ((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 784) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 840)] = (((((1 <= ((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 840) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 896)] = (((((1 <= ((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 896) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 952)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 952) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
          kernel_shared[((int)threadIdx.x)] = kernel[((((((((int)blockIdx.x) * 147456) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3))];
          kernel_shared[(((int)threadIdx.x) + 56)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 56) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 8) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 112)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 112) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 168)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 168) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) / 3) + 8) & 15) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3))];
          kernel_shared[(((int)threadIdx.x) + 224)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 224) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 280)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 280) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 40) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 336)] = kernel[(((((((((int)blockIdx.x) * 147456) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 32256)];
          kernel_shared[(((int)threadIdx.x) + 392)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 392) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 8) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 448)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 448) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 504)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 504) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) / 3) + 8) & 15) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3))];
          kernel_shared[(((int)threadIdx.x) + 560)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 560) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 616)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 616) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 40) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 672)] = kernel[(((((((((int)blockIdx.x) * 147456) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 64512)];
          kernel_shared[(((int)threadIdx.x) + 728)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 728) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 8) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 784)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 784) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 840)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 840) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) / 3) + 8) & 15) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3))];
          kernel_shared[(((int)threadIdx.x) + 896)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 896) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 952)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 952) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 40) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1008)] = kernel[(((((((((int)blockIdx.x) * 147456) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 96768)];
          kernel_shared[(((int)threadIdx.x) + 1064)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1064) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 8) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1120)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1120) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1176)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1176) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) / 3) + 8) & 15) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1232)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1232) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1288)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1288) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 40) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1344)] = kernel[(((((((((int)blockIdx.x) * 147456) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 129024)];
          kernel_shared[(((int)threadIdx.x) + 1400)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1400) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 8) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1456)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1456) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          if (((int)threadIdx.x) < 24) {
            kernel_shared[(((int)threadIdx.x) + 1512)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1512) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) / 3) + 8) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3))];
          }
          __syncthreads();
          for (int rx_outer_inner = 0; rx_outer_inner < 3; ++rx_outer_inner) {
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + rx_outer_inner)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + rx_outer_inner)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + rx_outer_inner)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + rx_outer_inner)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + rx_outer_inner)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + rx_outer_inner)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + rx_outer_inner)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + rx_outer_inner)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + rx_outer_inner)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 48)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 1)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 48)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 2)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 48)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 3)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 48)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 4)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 48)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 5)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 48)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 6)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 48)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + rx_outer_inner)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 96)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 1)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 96)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 2)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 96)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 3)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 96)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 4)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 96)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 5)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 96)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 6)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 96)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + rx_outer_inner)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 144)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 1)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 144)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 2)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 144)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 3)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 144)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 4)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 144)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 5)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 144)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 6)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 144)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 63)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 3)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 64)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 3)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 65)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 3)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 66)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 3)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 67)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 3)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 68)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 3)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 69)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 3)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 63)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 51)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 64)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 51)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 65)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 51)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 66)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 51)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 67)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 51)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 68)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 51)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 69)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 51)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 63)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 99)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 64)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 99)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 65)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 99)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 66)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 99)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 67)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 99)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 68)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 99)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 69)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 99)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 63)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 147)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 64)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 147)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 65)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 147)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 66)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 147)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 67)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 147)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 68)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 147)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 69)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 147)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 126)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 6)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 127)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 6)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 128)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 6)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 129)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 6)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 130)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 6)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 131)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 6)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 132)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 6)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 126)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 54)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 127)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 54)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 128)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 54)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 129)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 54)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 130)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 54)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 131)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 54)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 132)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 54)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 126)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 102)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 127)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 102)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 128)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 102)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 129)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 102)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 130)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 102)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 131)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 102)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 132)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 102)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 126)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 150)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 127)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 150)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 128)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 150)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 129)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 150)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 130)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 150)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 131)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 150)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 132)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 150)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 189)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 9)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 190)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 9)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 191)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 9)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 192)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 9)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 193)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 9)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 194)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 9)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 195)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 9)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 189)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 57)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 190)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 57)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 191)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 57)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 192)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 57)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 193)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 57)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 194)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 57)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 195)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 57)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 189)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 105)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 190)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 105)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 191)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 105)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 192)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 105)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 193)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 105)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 194)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 105)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 195)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 105)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 189)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 153)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 190)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 153)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 191)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 153)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 192)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 153)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 193)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 153)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 194)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 153)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 195)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 153)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 252)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 12)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 253)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 12)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 254)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 12)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 255)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 12)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 256)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 12)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 257)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 12)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 258)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 12)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 252)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 60)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 253)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 60)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 254)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 60)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 255)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 60)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 256)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 60)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 257)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 60)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 258)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 60)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 252)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 108)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 253)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 108)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 254)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 108)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 255)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 108)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 256)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 108)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 257)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 108)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 258)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 108)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 252)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 156)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 253)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 156)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 254)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 156)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 255)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 156)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 256)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 156)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 257)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 156)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 258)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 156)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 315)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 15)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 316)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 15)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 317)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 15)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 318)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 15)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 319)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 15)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 320)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 15)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 321)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 15)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 315)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 63)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 316)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 63)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 317)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 63)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 318)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 63)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 319)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 63)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 320)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 63)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 321)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 63)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 315)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 111)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 316)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 111)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 317)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 111)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 318)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 111)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 319)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 111)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 320)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 111)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 321)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 111)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 315)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 159)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 316)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 159)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 317)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 159)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 318)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 159)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 319)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 159)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 320)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 159)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 321)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 159)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 378)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 18)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 379)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 18)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 380)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 18)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 381)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 18)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 382)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 18)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 383)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 18)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 384)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 18)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 378)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 66)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 379)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 66)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 380)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 66)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 381)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 66)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 382)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 66)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 383)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 66)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 384)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 66)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 378)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 114)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 379)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 114)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 380)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 114)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 381)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 114)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 382)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 114)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 383)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 114)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 384)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 114)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 378)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 162)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 379)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 162)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 380)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 162)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 381)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 162)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 382)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 162)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 383)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 162)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 384)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 162)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 441)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 21)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 442)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 21)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 443)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 21)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 444)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 21)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 445)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 21)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 446)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 21)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 447)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 21)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 441)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 69)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 442)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 69)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 443)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 69)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 444)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 69)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 445)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 69)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 446)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 69)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 447)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 69)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 441)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 117)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 442)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 117)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 443)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 117)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 444)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 117)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 445)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 117)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 446)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 117)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 447)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 117)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 441)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 165)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 442)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 165)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 443)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 165)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 444)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 165)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 445)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 165)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 446)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 165)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 447)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 165)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 504)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 24)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 505)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 24)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 506)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 24)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 507)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 24)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 508)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 24)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 509)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 24)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 510)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 24)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 504)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 72)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 505)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 72)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 506)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 72)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 507)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 72)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 508)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 72)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 509)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 72)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 510)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 72)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 504)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 120)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 505)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 120)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 506)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 120)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 507)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 120)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 508)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 120)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 509)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 120)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 510)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 120)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 504)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 168)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 505)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 168)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 506)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 168)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 507)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 168)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 508)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 168)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 509)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 168)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 510)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 168)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 567)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 27)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 568)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 27)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 569)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 27)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 570)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 27)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 571)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 27)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 572)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 27)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 573)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 27)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 567)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 75)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 568)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 75)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 569)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 75)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 570)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 75)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 571)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 75)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 572)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 75)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 573)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 75)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 567)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 123)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 568)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 123)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 569)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 123)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 570)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 123)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 571)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 123)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 572)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 123)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 573)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 123)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 567)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 171)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 568)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 171)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 569)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 171)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 570)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 171)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 571)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 171)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 572)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 171)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 573)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 171)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 630)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 30)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 631)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 30)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 632)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 30)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 633)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 30)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 634)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 30)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 635)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 30)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 636)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 30)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 630)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 78)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 631)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 78)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 632)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 78)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 633)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 78)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 634)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 78)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 635)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 78)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 636)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 78)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 630)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 126)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 631)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 126)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 632)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 126)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 633)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 126)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 634)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 126)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 635)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 126)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 636)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 126)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 630)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 174)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 631)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 174)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 632)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 174)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 633)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 174)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 634)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 174)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 635)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 174)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 636)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 174)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 693)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 33)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 694)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 33)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 695)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 33)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 696)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 33)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 697)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 33)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 698)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 33)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 699)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 33)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 693)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 81)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 694)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 81)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 695)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 81)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 696)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 81)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 697)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 81)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 698)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 81)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 699)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 81)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 693)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 129)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 694)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 129)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 695)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 129)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 696)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 129)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 697)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 129)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 698)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 129)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 699)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 129)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 693)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 177)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 694)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 177)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 695)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 177)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 696)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 177)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 697)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 177)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 698)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 177)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 699)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 177)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 756)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 36)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 757)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 36)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 758)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 36)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 759)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 36)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 760)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 36)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 761)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 36)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 762)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 36)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 756)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 84)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 757)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 84)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 758)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 84)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 759)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 84)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 760)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 84)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 761)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 84)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 762)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 84)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 756)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 132)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 757)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 132)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 758)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 132)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 759)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 132)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 760)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 132)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 761)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 132)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 762)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 132)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 756)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 180)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 757)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 180)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 758)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 180)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 759)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 180)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 760)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 180)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 761)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 180)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 762)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 180)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 819)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 39)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 820)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 39)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 821)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 39)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 822)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 39)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 823)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 39)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 824)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 39)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 825)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 39)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 819)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 87)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 820)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 87)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 821)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 87)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 822)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 87)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 823)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 87)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 824)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 87)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 825)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 87)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 819)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 135)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 820)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 135)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 821)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 135)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 822)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 135)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 823)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 135)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 824)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 135)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 825)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 135)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 819)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 183)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 820)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 183)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 821)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 183)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 822)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 183)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 823)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 183)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 824)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 183)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 825)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 183)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 882)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 42)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 883)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 42)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 884)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 42)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 885)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 42)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 886)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 42)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 887)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 42)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 888)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 42)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 882)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 90)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 883)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 90)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 884)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 90)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 885)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 90)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 886)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 90)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 887)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 90)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 888)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 90)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 882)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 138)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 883)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 138)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 884)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 138)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 885)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 138)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 886)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 138)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 887)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 138)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 888)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 138)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 882)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 186)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 883)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 186)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 884)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 186)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 885)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 186)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 886)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 186)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 887)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 186)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 888)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 186)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 945)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 45)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 946)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 45)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 947)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 45)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 948)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 45)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 949)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 45)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 950)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 45)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 951)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 45)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 945)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 93)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 946)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 93)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 947)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 93)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 948)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 93)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 949)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 93)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 950)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 93)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 951)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 93)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 945)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 141)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 946)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 141)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 947)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 141)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 948)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 141)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 949)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 141)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 950)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 141)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 951)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 141)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 945)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 189)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 946)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 189)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 947)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 189)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 948)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 189)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 949)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 189)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 950)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 189)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 951)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + rx_outer_inner) + 189)]));
          }
        }
      }
      for (int i1_inner = 0; i1_inner < 4; ++i1_inner) {
        for (int i3_inner = 0; i3_inner < 7; ++i3_inner) {
          compute[(((((((int)blockIdx.x) * 1568) + ((((int)threadIdx.x) / 7) * 196)) + (i1_inner * 49)) + ((((int)threadIdx.x) % 7) * 7)) + i3_inner)] = max((conv2d_nchw[((i1_inner * 7) + i3_inner)] + bias[(((((int)blockIdx.x) * 32) + ((((int)threadIdx.x) / 7) * 4)) + i1_inner)]), 0.000000e+00f);
        }
      }
    }





A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.


.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Resume search:
    /usr/local/lib/python3.6/dist-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  27.037 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
