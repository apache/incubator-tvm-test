Search.setIndex({"alltitles": {"1. Computational Graph": [[0, "computational-graph"]], "1. Cross Compile TVM Runtime": [[80, "cross-compile-tvm-runtime"]], "1. Defining an Attribute Node": [[34, "defining-an-attribute-node"]], "1. Hooking up Compute and Strategy with Relay": [[34, "hooking-up-compute-and-strategy-with-relay"]], "1. Introduction": [[64, "introduction"]], "1. The lack of numpy on device machine caused the RPC server can\u2019t be launched.": [[80, "the-lack-of-numpy-on-device-machine-caused-the-rpc-server-can-t-be-launched"]], "1. microTVM CLI Tool": [[124, null]], "2. Building TVM with mrvl support": [[64, "building-tvm-with-mrvl-support"]], "2. Pack and Deploy to Device Machine": [[80, "pack-and-deploy-to-device-machine"]], "2. Tensor dumping": [[0, "tensor-dumping"]], "2. The lack of cloudpickle on device machine caused the RPC server can\u2019t be launched.": [[80, "the-lack-of-cloudpickle-on-device-machine-caused-the-rpc-server-can-t-be-launched"]], "2. Writing a Type Relation": [[34, "writing-a-type-relation"]], "2. microTVM TFLite Tutorial": [[122, null]], "2.1 Clone TVM repo": [[64, "clone-tvm-repo"]], "2.2 Build and start the TVM - mrvl docker container": [[64, "build-and-start-the-tvm-mrvl-docker-container"]], "3. Compiling a model using TVMC command line": [[64, "compiling-a-model-using-tvmc-command-line"]], "3. Launch RPC Server": [[80, "launch-rpc-server"]], "3. Relating the Arity and Attributes to an Operation": [[34, "relating-the-arity-and-attributes-to-an-operation"]], "3. microTVM Ahead-of-Time (AOT) Compilation": [[116, null]], "3.1 TVMC Compilation Flow for a model": [[64, "tvmc-compilation-flow-for-a-model"]], "3.2. TVMC - Command line option(s): Syntax for mrvl target": [[64, "tvmc-command-line-option-s-syntax-for-mrvl-target"]], "3.3. TVMC Compiler: mrvl specific Command Line Options": [[64, "tvmc-compiler-mrvl-specific-command-line-options"]], "4. Compile ONNX model using the TVMC flow": [[64, "compile-onnx-model-using-the-tvmc-flow"]], "4. Defining the Compute of the Operation": [[34, "defining-the-compute-of-the-operation"]], "4. microTVM PyTorch Tutorial": [[121, null]], "4.1 Compile and Run ONNX model for Simulator + LLVM / x86_64 target": [[64, "compile-and-run-onnx-model-for-simulator-llvm-x86-64-target"]], "4.2 Compile and Run ONNX model for Octeon target": [[64, "compile-and-run-onnx-model-for-octeon-target"]], "5. Compiling a model using Python APIs": [[64, "compiling-a-model-using-python-apis"]], "5. Training Vision Models for microTVM on Arduino": [[123, null]], "6. Creating a Relay Call Node and Exposing a Python Hook": [[34, "creating-a-relay-call-node-and-exposing-a-python-hook"]], "6. Model Tuning with microTVM": [[117, null]], "7. Including a Cleaner Python API Hook": [[34, "including-a-cleaner-python-api-hook"]], "7. Running TVM on bare metal Arm(R) Cortex(R)-M55 CPU and Ethos(TM)-U55 NPU with CMSIS-NN": [[119, null]], "8. Creating Your MLPerfTiny Submission with microTVM": [[120, null]], "8. Writing Unit Tests!": [[34, "writing-unit-tests"]], "9. Bring microTVM to your own development environment": [[118, null]], "A Basic Matrix Multiplication Template": [[201, "a-basic-matrix-multiplication-template"]], "A Matrix Multiplication Template with the Advanced Parameter API": [[201, "a-matrix-multiplication-template-with-the-advanced-parameter-api"]], "ADT Constructors": [[192, "adt-constructors"]], "ADT Matching": [[192, "adt-matching"]], "API Reference": [[141, null]], "AST Traversers": [[35, "ast-traversers"]], "About": [[141, null]], "About OpenCLML": [[56, "about-openclml"]], "Accuracy comparison": [[74, "accuracy-comparison"]], "Add sample images to the MLF files": [[118, "add-sample-images-to-the-mlf-files"]], "Adding ONNX Support to TVM": [[210, null]], "Adding a Compiler Pass to Relay": [[35, null]], "Adding a Gradient in C++": [[34, "adding-a-gradient-in-c"]], "Adding a Gradient in Python": [[34, "adding-a-gradient-in-python"]], "Adding a New Docker Image": [[7, "adding-a-new-docker-image"]], "Adding a new operator": [[58, "adding-a-new-operator"], [65, "adding-a-new-operator"]], "Adding an Operator to Relay": [[34, null]], "Additional Deployment How-Tos": [[62, "additional-deployment-how-tos"]], "Additional Recommendations": [[9, "additional-recommendations"]], "Additional TVMC Functionalities": [[211, "additional-tvmc-functionalities"]], "Advanced Build Configuration": [[143, "advanced-build-configuration"]], "Advanced Usage": [[56, "advanced-usage"]], "Algebraic Data Types": [[195, "algebraic-data-types"]], "Algebraic Data Types in Relay": [[191, null]], "Alternate": [[194, "alternate"]], "Alveo Setup": [[66, "alveo-setup"]], "An Overview of TVM and Model Optimization": [[205, "an-overview-of-tvm-and-model-optimization"]], "Apache TVM Documentation": [[141, null]], "Application Integration": [[56, "application-integration"]], "Applications": [[194, "applications"]], "Apply Passes and Multiple Instrument Classes": [[85, "apply-passes-and-multiple-instrument-classes"]], "Apply only k-Latest Commits on to the main": [[14, "apply-only-k-latest-commits-on-to-the-main"]], "Apply transformations": [[23, "apply-transformations"]], "Approve and Request Changes Explicitly": [[9, "approve-and-request-changes-explicitly"]], "Architecture Guides": [[12, "architecture-guides"]], "Array Allocation": [[189, "array-allocation"]], "Array Packing": [[90, "array-packing"]], "Assert Statement": [[189, "assert-statement"]], "Attribute Pattern": [[194, "attribute-pattern"]], "Attributes": [[189, "attributes"]], "Attributes of an IRModule": [[43, "attributes-of-an-irmodule"]], "Auto Tuning": [[110, "auto-tuning"]], "Auto-Tune with Templates and AutoTVM": [[102, null]], "Auto-scheduling Sparse Matrix Multiplication on CPU with Custom Sketch Rule": [[101, null]], "Auto-scheduling a Convolution Layer for GPU": [[96, null]], "Auto-scheduling a Neural Network for ARM CPU": [[97, null]], "Auto-scheduling a Neural Network for NVIDIA GPU": [[98, null]], "Auto-scheduling a Neural Network for mali GPU": [[99, null]], "Auto-scheduling a Neural Network for x86 CPU": [[100, null]], "Auto-tuners in TVM": [[201, "auto-tuners-in-tvm"]], "Auto-tuning a Convolutional Network for ARM CPU": [[105, null]], "Auto-tuning a Convolutional Network for Mobile GPU": [[107, null]], "Auto-tuning a Convolutional Network for NVIDIA GPU": [[106, null]], "Auto-tuning a Convolutional Network for x86 CPU": [[108, null]], "AutoTuning": [[67, "autotuning"], [68, "autotuning"]], "Automatically Tuning the ResNet Model": [[210, "automatically-tuning-the-resnet-model"]], "BNNS partitioning of Relay graph": [[59, "bnns-partitioning-of-relay-graph"]], "Backend Compilation": [[189, "backend-compilation"]], "Basic Matrix Multiplication with TE": [[201, "basic-matrix-multiplication-with-te"]], "Basic example": [[204, "basic-example"]], "Be Respectful": [[9, "be-respectful"]], "Begin Tuning": [[98, "begin-tuning"], [100, "begin-tuning"], [105, "begin-tuning"], [106, "begin-tuning"], [107, "begin-tuning"]], "Begin tuning": [[201, "begin-tuning"]], "Blitz Course to TensorIR": [[209, null]], "Block Axis Properties": [[27, "block-axis-properties"]], "Blocking": [[88, "blocking"], [90, "blocking"]], "Bring Your Own Codegen To TVM": [[36, null]], "Broad Collaboration": [[10, "broad-collaboration"]], "Broken CI due to Simultaneous Merge": [[7, "broken-ci-due-to-simultaneous-merge"]], "Build TVM Runtime on Device": [[71, "build-tvm-runtime-on-device"], [109, "build-tvm-runtime-on-device"]], "Build TVM Runtime on Jetson Nano": [[70, "build-tvm-runtime-on-jetson-nano"]], "Build and Deploy": [[111, "build-and-deploy"]], "Build and Deploy ResNet-18 with TensorRT": [[65, "build-and-deploy-resnet-18-with-tensorrt"]], "Build and Flash Zephyr Project Using TVMC Micro": [[124, "build-and-flash-zephyr-project-using-tvmc-micro"]], "Build and Run an IRModule": [[209, "build-and-run-an-irmodule"]], "Build and Universal Deployment": [[44, "build-and-universal-deployment"]], "Build and Verify": [[135, "build-and-verify"]], "Build and run with cuda backend": [[129, "build-and-run-with-cuda-backend"]], "Build model for Android Target": [[57, "build-model-for-android-target"]], "Build the TVM runtime library": [[62, "build-the-tvm-runtime-library"]], "Build the pipeline executor.": [[130, "build-the-pipeline-executor"]], "Build the subgraph with cutlass target.": [[130, "build-the-subgraph-with-cutlass-target"]], "Build, flash and execute the model": [[116, "build-flash-and-execute-the-model"], [121, "build-flash-and-execute-the-model"]], "Building ROCm support": [[143, "building-rocm-support"]], "Building TVM With PAPI": [[93, "building-tvm-with-papi"]], "Building TVM with BNNS support": [[59, "building-tvm-with-bnns-support"]], "Building TVM with TensorRT support": [[65, "building-tvm-with-tensorrt-support"]], "Building Trust": [[9, "building-trust"]], "Building a Graph Convolutional Network": [[126, null]], "Building on Windows": [[143, "building-on-windows"]], "Building the demo application using make": [[119, "building-the-demo-application-using-make"]], "Building with ACL support": [[58, "building-with-acl-support"]], "Built-in Instrument": [[4, "built-in-instrument"]], "C++ (local)": [[16, "c-local"]], "C++ Backend": [[4, "c-backend"]], "C++ Code Styles": [[8, "c-code-styles"]], "C++ Reference Documentation": [[12, "c-reference-documentation"]], "CI Environment": [[16, "ci-environment"]], "CI Monitoring Rotation": [[7, "ci-monitoring-rotation"]], "Call": [[192, "call"]], "Call a Vote on the Release Candidate": [[17, "call-a-vote-on-the-release-candidate"]], "Ccache": [[143, "ccache"]], "Check correctness and evaluate performance": [[96, "check-correctness-and-evaluate-performance"], [200, "check-correctness-and-evaluate-performance"]], "Cherry-Picking": [[17, "cherry-picking"]], "Chocolate": [[212, "chocolate"]], "Choose the model": [[47, "choose-the-model"]], "Choosing Our Work Dir": [[123, "choosing-our-work-dir"]], "Choosing an Arduino Board": [[123, "choosing-an-arduino-board"]], "Closures": [[192, "closures"]], "Code Emitting": [[36, "code-emitting"]], "Code Generation for Input Variables": [[36, "code-generation-for-input-variables"]], "Code Generation for Operators": [[36, "code-generation-for-operators"]], "Code Guide and Tips": [[8, null]], "Code Reviews": [[9, null]], "Code Specialization": [[208, null]], "Codebase Structure Overview": [[37, "codebase-structure-overview"]], "Collect Basic Performance Data": [[202, "collect-basic-performance-data"]], "Commandline Tools": [[56, "commandline-tools"]], "Commit Message Guideline": [[16, "commit-message-guideline"]], "Committer Guide": [[10, null]], "Committers": [[11, "committers"]], "Common ADT Uses": [[191, "common-adt-uses"]], "Community First": [[10, "community-first"]], "Community Participation": [[9, "community-participation"]], "Compare the output labels": [[73, "compare-the-output-labels"]], "Comparing the Different Schedules": [[208, "comparing-the-different-schedules"]], "Comparing the Tuned and Untuned Models": [[202, "comparing-the-tuned-and-untuned-models"], [210, "comparing-the-tuned-and-untuned-models"]], "Compilation": [[67, "compilation"], [68, "compilation"], [206, "compilation"]], "Compile CoreML Models": [[46, null]], "Compile Deep Learning Models": [[54, null]], "Compile Keras Models": [[48, null]], "Compile ONNX Models": [[49, null]], "Compile PaddlePaddle Models": [[50, null]], "Compile PyTorch Models": [[51, null]], "Compile PyTorch Object Detection Models": [[72, null]], "Compile TFLite Models": [[53, null]], "Compile Tensorflow Models": [[52, null]], "Compile The Graph": [[70, "compile-the-graph"], [71, "compile-the-graph"]], "Compile YOLO-V2 and YOLO-V3 in DarkNet Models": [[47, null]], "Compile and Evaluate": [[98, "compile-and-evaluate"], [100, "compile-and-evaluate"]], "Compile and Evaluate the Default Schedule": [[208, "compile-and-evaluate-the-default-schedule"]], "Compile and run the Relay module": [[73, "compile-and-run-the-relay-module"]], "Compile and run with TVM": [[126, "compile-and-run-with-tvm"]], "Compile the Model With Relay": [[202, "compile-the-model-with-relay"]], "Compile the model": [[116, "compile-the-model"], [121, "compile-the-model"]], "Compile the model and export model library format": [[120, "compile-the-model-and-export-model-library-format"]], "Compile the model on Relay": [[46, "compile-the-model-on-relay"]], "Compile the model with Relay": [[48, "compile-the-model-with-relay"]], "Compile the model with relay": [[49, "compile-the-model-with-relay"], [50, "compile-the-model-with-relay"], [53, "compile-the-model-with-relay"], [69, "compile-the-model-with-relay"]], "Compile with Relay VM": [[72, "compile-with-relay-vm"]], "Compiling Our Code": [[123, "compiling-our-code"]], "Compiling With TVM For Arduino": [[123, "compiling-with-tvm-for-arduino"]], "Compiling a Model": [[66, "compiling-a-model"]], "Compiling a TFLite model to a Model Library Format": [[124, "compiling-a-tflite-model-to-a-model-library-format"]], "Compiling a model for a remote device:": [[211, "compiling-a-model-for-a-remote-device"]], "Compiling an ONNX Model to the TVM Runtime": [[210, "compiling-an-onnx-model-to-the-tvm-runtime"]], "Compiling an Optimized Model with Tuning Data": [[202, "compiling-an-optimized-model-with-tuning-data"], [210, "compiling-an-optimized-model-with-tuning-data"]], "Compiling and Optimizing a Model with TVMC": [[210, null]], "Compiling and Optimizing a Model with the Python Interface (AutoTVM)": [[202, null]], "Compiling the generated code": [[122, "compiling-the-generated-code"]], "Compiling the model for Arm(R) Cortex(R)-M55 CPU and Ethos(TM)-U55 NPU with CMSIS-NN": [[119, "compiling-the-model-for-arm-r-cortex-r-m55-cpu-and-ethos-tm-u55-npu-with-cmsis-nn"]], "Composable IRModule Optimization": [[110, "composable-irmodule-optimization"]], "Computation times": [[24, null], [29, null], [45, null], [55, null], [77, null], [83, null], [91, null], [95, null], [103, null], [114, null], [125, null], [128, null], [137, null], [198, null], [207, null]], "Computational Block": [[27, "computational-block"]], "Compute and Reduce with Tuple Inputs": [[140, null]], "Concise Implementation": [[9, "concise-implementation"]], "Concise with Syntactic Sugar": [[30, "concise-with-syntactic-sugar"]], "Conclusion": [[129, "conclusion"]], "Conditional Statement and Expression": [[189, "conditional-statement-and-expression"]], "Configuration": [[67, "configuration"], [68, "configuration"]], "Configure Settings": [[75, "configure-settings"]], "Configure tensor tuning settings and create tasks": [[108, "configure-tensor-tuning-settings-and-create-tasks"]], "Configuring microTVM": [[117, "configuring-microtvm"]], "Consensus Building": [[9, "consensus-building"]], "Consistency": [[9, "consistency"]], "Constant": [[192, "constant"]], "Construct or Import a Model": [[44, "construct-or-import-a-model"]], "Construct the model architecture": [[113, "construct-the-model-architecture"]], "Construction": [[192, "construction"]], "Contents": [[205, "contents"]], "Contributor Guide": [[15, null]], "Convert PyTorch model to Relay module": [[67, "convert-pytorch-model-to-relay-module"]], "Convert quantized Mobilenet v2 to Relay-QNN using the PyTorch frontend": [[73, "convert-quantized-mobilenet-v2-to-relay-qnn-using-the-pytorch-frontend"]], "Convert the model to IRModule": [[111, "convert-the-model-to-irmodule"]], "Convert to Relay Graph": [[75, "convert-to-relay-graph"]], "Cooperative Fetching": [[88, "cooperative-fetching"]], "Create An Example Relay Program": [[84, "create-an-example-relay-program"], [85, "create-an-example-relay-program"]], "Create Customized Instrument Class": [[85, "create-customized-instrument-class"]], "Create Dynamic-Shape Functions": [[30, "create-dynamic-shape-functions"]], "Create IRModule": [[43, "create-irmodule"]], "Create PassContext With Instruments": [[85, "create-passcontext-with-instruments"]], "Create Relax programs using Block Builder API": [[22, "create-relax-programs-using-block-builder-api"]], "Create Relax programs using NNModule API": [[22, "create-relax-programs-using-nnmodule-api"]], "Create Relax programs using TVMScript": [[22, "create-relax-programs-using-tvmscript"]], "Create Static-Shape Functions": [[30, "create-static-shape-functions"]], "Create TensorIR using TVMScript": [[30, "create-tensorir-using-tvmscript"]], "Create TensorIR using Tensor Expression": [[30, "create-tensorir-using-tensor-expression"]], "Create a Default Schedule for the Computation": [[208, "create-a-default-schedule-for-the-computation"]], "Create a Zephyr Project Using Model Library Format": [[124, "create-a-zephyr-project-using-model-library-format"]], "Create a microTVM project": [[116, "create-a-microtvm-project"], [121, "create-a-microtvm-project"]], "Create a simple network": [[129, "create-a-simple-network"]], "Create a simple network, this network can be a pre-trained model too.": [[130, "create-a-simple-network-this-network-can-be-a-pre-trained-model-too"]], "Create an IRModule": [[209, "create-an-irmodule"]], "Create the KVCache": [[113, "create-the-kvcache"]], "Create the project, build and prepare the project tar file": [[120, "create-the-project-build-and-prepare-the-project-tar-file"]], "Create the search task": [[96, "create-the-search-task"], [101, "create-the-search-task"], [200, "create-the-search-task"]], "Create via TVMScript": [[43, "create-via-tvmscript"]], "Creating the linker script": [[119, "creating-the-linker-script"]], "Cross Compilation and RPC": [[109, null]], "Cross Thread Reduction": [[134, "cross-thread-reduction"]], "Cross compile the TVM runtime for other architectures": [[62, "cross-compile-the-tvm-runtime-for-other-architectures"]], "Custom Passes": [[23, "custom-passes"]], "Customization around Graph and Plotter": [[131, "customization-around-graph-and-plotter"]], "Customize Optimization": [[110, null]], "Customize Parser for Interested Relay Types": [[131, "customize-parser-for-interested-relay-types"]], "Cut a Release Candidate": [[17, "cut-a-release-candidate"]], "DLPack Support": [[63, "dlpack-support"]], "DLight Rules": [[110, "dlight-rules"]], "DType Pattern": [[194, "dtype-pattern"]], "Dataflow Block": [[20, "dataflow-block"]], "Dataflow and Control Fragments": [[192, "dataflow-and-control-fragments"]], "Dealing with Flakiness": [[7, "dealing-with-flakiness"]], "Debug Exchange Format": [[0, "debug-exchange-format"]], "Debug a Pass": [[84, "debug-a-pass"]], "Debugger": [[0, null]], "Debugging Failures": [[7, "debugging-failures"]], "Debugging TVM": [[32, null]], "Declare and Cross Compile Kernel on Local Machine": [[109, "declare-and-cross-compile-kernel-on-local-machine"]], "Decode": [[113, "decode"]], "Decode image": [[52, "decode-image"]], "Deep Dive": [[141, null]], "Deep Dive: Relax": [[21, null]], "Deep Dive: TensorIR": [[28, null]], "Define GCN in DGL with PyTorch backend": [[126, "define-gcn-in-dgl-with-pytorch-backend"]], "Define GEMV Tensorization Intrinsic": [[139, "define-gemv-tensorization-intrinsic"]], "Define General Commutative Reduction Operation": [[134, "define-general-commutative-reduction-operation"]], "Define Graph Convolution Layer in Relay": [[126, "define-graph-convolution-layer-in-relay"]], "Define Matrix Multiplication": [[139, "define-matrix-multiplication"]], "Define Network": [[106, "define-network"]], "Define Neural Network in Relay": [[206, "define-neural-network-in-relay"]], "Define Optimization Pipeline": [[113, "define-optimization-pipeline"]], "Define Target, Runtime and Executor": [[121, "define-target-runtime-and-executor"]], "Define Tensor Intrinsic": [[89, "define-tensor-intrinsic"]], "Define a Network": [[97, "define-a-network"], [98, "define-a-network"], [99, "define-a-network"], [100, "define-a-network"]], "Define a Relay IR Module with multiple GlobalVar": [[131, "define-a-relay-ir-module-with-multiple-globalvar"]], "Define and Schedule Convolution with Bias and ReLU": [[138, "define-and-schedule-convolution-with-bias-and-relu"]], "Define network": [[105, "define-network"], [107, "define-network"], [108, "define-network"]], "Define the computation": [[96, "define-the-computation"], [101, "define-the-computation"]], "Define the functions to load dataset and evaluate accuracy": [[126, "define-the-functions-to-load-dataset-and-evaluate-accuracy"]], "Defining Target, Runtime and Executor": [[120, "defining-target-runtime-and-executor"]], "Defining and Matching on an ADT": [[191, "defining-and-matching-on-an-adt"]], "Defining the Correct Target": [[202, null], [210, null]], "Defining the Matrix Multiplication": [[200, "defining-the-matrix-multiplication"]], "Defining the Tuning Search Algorithm": [[202, null], [210, null]], "Defining the model": [[117, "defining-the-model"]], "Defining the target": [[116, "defining-the-target"], [117, "defining-the-target"], [122, "defining-the-target"]], "Definitions (Type Data)": [[195, "definitions-type-data"]], "Deliberate on API and Data Structures": [[9, "deliberate-on-api-and-data-structures"]], "Deploy & Run": [[68, "deploy-run"]], "Deploy Deep Learning Models": [[76, null]], "Deploy Models and Integrate TVM": [[62, null]], "Deploy TVM Module using C++ API": [[60, null]], "Deploy a Framework-prequantized Model with TVM": [[73, null]], "Deploy a Framework-prequantized Model with TVM - Part 3 (TFLite)": [[74, null]], "Deploy a Hugging Face Pruned Model on CPU": [[75, null]], "Deploy a quantized MXNet Model": [[73, "deploy-a-quantized-mxnet-model"]], "Deploy a quantized PyTorch Model": [[73, "deploy-a-quantized-pytorch-model"]], "Deploy a quantized TFLite Model": [[73, "deploy-a-quantized-tflite-model"]], "Deploy on CPU": [[43, "deploy-on-cpu"]], "Deploy on GPU": [[43, "deploy-on-gpu"]], "Deploy on Other Backends": [[43, "deploy-on-other-backends"]], "Deploy optimized model on target devices": [[62, "deploy-optimized-model-on-target-devices"]], "Deploy the IRModule Universally": [[43, "deploy-the-irmodule-universally"]], "Deploy the Model Remotely by RPC": [[67, "deploy-the-model-remotely-by-rpc"], [69, "deploy-the-model-remotely-by-rpc"], [70, "deploy-the-model-remotely-by-rpc"], [71, "deploy-the-model-remotely-by-rpc"]], "Deploy the Optimized Model": [[110, "deploy-the-optimized-model"]], "Deploy the Pretrained Model on Adreno\u2122": [[67, null]], "Deploy the Pretrained Model on Adreno\u2122 with tvmc Interface": [[68, null]], "Deploy the Pretrained Model on Android": [[69, null]], "Deploy the Pretrained Model on Jetson Nano": [[70, null]], "Deploy the Pretrained Model on Raspberry Pi": [[71, null]], "Deploy the compiled model": [[113, "deploy-the-compiled-model"]], "Deploy to Adreno\u2122 GPU": [[56, null]], "Deploy to Android": [[57, null]], "Describe Batchwise Computation": [[140, "describe-batchwise-computation"]], "Describe Convolution via 2D Reduction": [[134, "describe-convolution-via-2d-reduction"]], "Describe Reduction with Collaborative Inputs": [[140, "describe-reduction-with-collaborative-inputs"]], "Describe Sum of Rows": [[134, "describe-sum-of-rows"]], "Describing the Vector Computation": [[208, "describing-the-vector-computation"]], "Deserialization": [[3, "deserialization"]], "Design and Architecture": [[2, null]], "Developer How-To Guide": [[33, null]], "Developer Tutorial": [[38, null]], "Development Environment Setup : Automatic": [[56, "development-environment-setup-automatic"]], "Development Environment Setup : Manual": [[56, "development-environment-setup-manual"]], "Development Guides": [[78, null]], "Device/Target Interactions": [[1, null]], "DeviceAPI": [[1, "deviceapi"]], "Display results": [[49, "display-results"], [53, "display-results"]], "Docker (recommended)": [[16, "docker-recommended"]], "Docker Images": [[7, "docker-images"], [142, null]], "Docker Source": [[142, "docker-source"]], "Document Lessons in Code Reviews": [[9, "document-lessons-in-code-reviews"]], "Documentation": [[12, null]], "Documents with Images / Figures": [[12, "documents-with-images-figures"]], "Domination": [[194, "domination"]], "Download a test image and pre-process": [[72, "download-a-test-image-and-pre-process"]], "Download and Convert Transformers Model": [[75, "download-and-convert-transformers-model"]], "Download pretrained Quantized TFLite model": [[74, "download-pretrained-quantized-tflite-model"]], "Download required files": [[47, "download-required-files"], [52, "download-required-files"]], "Download the Model if Desired": [[123, "download-the-model-if-desired"]], "Downloading and Loading the ONNX Model": [[202, "downloading-and-loading-the-onnx-model"]], "Downloading the Data": [[123, "downloading-the-data"]], "Downloading, Preprocessing, and Loading the Test Image": [[202, "downloading-preprocessing-and-loading-the-test-image"]], "Dynamic Library vs. System Module": [[60, "dynamic-library-vs-system-module"]], "Embedding": [[113, "embedding"]], "Emulation": [[61, "emulation"]], "Enable C++ Tests": [[143, "enable-c-tests"]], "Enable OpenCLML Offloading": [[67, "enable-openclml-offloading"]], "End to End Model Execution": [[20, "end-to-end-model-execution"]], "End-to-End Optimize Model": [[111, null]], "Error Handling Guide": [[13, null]], "Evaluate the model": [[118, "evaluate-the-model"]], "Example 1: Writing and Scheduling Vector Addition in TE for CPU": [[208, "example-1-writing-and-scheduling-vector-addition-in-te-for-cpu"]], "Example 2: Manually Optimizing Matrix Multiplication with TE": [[208, "example-2-manually-optimizing-matrix-multiplication-with-te"]], "Example results:": [[211, "example-results"]], "Example: Build and Deploy Mobilenet v2 1.0 with BNNS": [[59, "example-build-and-deploy-mobilenet-v2-1-0-with-bnns"]], "Example: Constant Folding": [[35, "example-constant-folding"]], "Example: List ADT": [[195, "example-list-adt"]], "Exception Handling": [[85, "exception-handling"]], "Execute on TVM": [[46, "execute-on-tvm"], [48, "execute-on-tvm"], [49, "execute-on-tvm"], [50, "execute-on-tvm"], [53, "execute-on-tvm"], [69, "execute-on-tvm"]], "Execute on TVM Runtime": [[47, "execute-on-tvm-runtime"]], "Execute on the TVM Runtime": [[202, "execute-on-the-tvm-runtime"]], "Execute the portable graph on TVM": [[51, "execute-the-portable-graph-on-tvm"], [52, "execute-the-portable-graph-on-tvm"]], "Expected Results": [[123, "expected-results"]], "Export the model to Relax IRModule": [[113, "export-the-model-to-relax-irmodule"]], "Expression Mutators": [[35, "expression-mutators"]], "Expression Pattern": [[194, "expression-pattern"]], "Expression Visitors": [[35, "expression-visitors"]], "Expressions in Relay": [[192, null]], "Extend TVM": [[81, null]], "Extern Contrib Wrappers": [[132, "extern-contrib-wrappers"]], "External Tensor Functions": [[132, null]], "Extra Structure in TensorIR": [[25, "extra-structure-in-tensorir"]], "Extract Search Tasks": [[97, "extract-search-tasks"], [98, "extract-search-tasks"], [99, "extract-search-tasks"], [100, "extract-search-tasks"]], "Extracting the generated code into the current directory": [[119, "extracting-the-generated-code-into-the-current-directory"]], "Extracting tuning tasks": [[117, "extracting-tuning-tasks"]], "Factors to Consider about Code Quality": [[9, "factors-to-consider-about-code-quality"]], "Features": [[189, "features"]], "Final Notes and Summary": [[200, "final-notes-and-summary"], [201, "final-notes-and-summary"], [208, "final-notes-and-summary"]], "Final Remarks": [[202, "final-remarks"], [210, "final-remarks"]], "Fine Tuning Our Network": [[123, "fine-tuning-our-network"]], "For Contributors": [[7, "for-contributors"]], "For Maintainers": [[7, "for-maintainers"]], "Function Parameters and Buffers": [[27, "function-parameters-and-buffers"]], "Function Pattern": [[194, "function-pattern"]], "Function Type": [[195, "function-type"]], "Function-Level Passes": [[4, "function-level-passes"]], "Functions": [[192, "functions"]], "Fusing convolutions": [[204, "fusing-convolutions"]], "General Development Process": [[11, "general-development-process"]], "Generate CUDA Kernel": [[88, "generate-cuda-kernel"], [89, "generate-cuda-kernel"]], "Generate OpenCL Code": [[208, "generate-opencl-code"]], "Generate input/output header files": [[120, "generate-input-output-header-files"]], "Generate the Model Library Format file": [[118, "generate-the-model-library-format-file"]], "Generate the project in your IDE": [[118, "generate-the-project-in-your-ide"]], "Generated Source Inspection": [[56, "generated-source-inspection"]], "Generating our project": [[123, "generating-our-project"]], "Generic schedules and fusing operations": [[204, "generic-schedules-and-fusing-operations"]], "Get Started": [[42, null]], "Get TVM Runtime Library": [[60, "get-tvm-runtime-library"]], "Get a PyTorch Model": [[67, "get-a-pytorch-model"]], "Get a real image for e2e testing": [[74, "get-a-real-image-for-e2e-testing"]], "Get boxes with score larger than 0.9": [[72, "get-boxes-with-score-larger-than-0-9"]], "Get predictions and performance statistic": [[67, "get-predictions-and-performance-statistic"]], "Getting ImageNet labels": [[119, "getting-imagenet-labels"]], "Getting Started": [[141, null]], "Getting Started With PAPI": [[93, null]], "Getting Started with microTVM": [[199, "getting-started-with-microtvm"]], "Getting Starting using TVMC Python: a high-level API for TVM": [[211, null]], "Getting the input image": [[119, "getting-the-input-image"]], "Git Usage Tips": [[14, null]], "Global Type Variable": [[195, "global-type-variable"]], "Global Variable": [[192, "global-variable"]], "Glue to Lowering": [[82, "glue-to-lowering"]], "Gradient Operators": [[34, "gradient-operators"]], "Graph Abstraction for ML Models": [[18, null]], "Graph Bindings": [[192, "graph-bindings"]], "Guidelines": [[16, "guidelines"]], "HLS Backend Example": [[61, null]], "HOW TO": [[112, null]], "Handle Integer Constant Expression": [[8, "handle-integer-constant-expression"]], "Handle TVM Errors": [[39, null]], "Help and Discussion": [[199, "help-and-discussion"]], "High-Level Operations Representation": [[20, "high-level-operations-representation"]], "Hook Python Function as Extern": [[132, "hook-python-function-as-extern"]], "How To": [[141, null]], "How To Guides": [[86, null]], "How to Use TVM Pass Infra": [[84, null]], "How to Use TVM Pass Instrument": [[85, null]], "How to choose an Error Type": [[13, "how-to-choose-an-error-type"]], "How to combine multiple commits into one": [[14, "how-to-combine-multiple-commits-into-one"]], "How to optimize GEMM on CPU": [[90, null]], "How to optimize convolution on GPU": [[88, null]], "How to optimize convolution using TensorCores": [[89, null]], "How to resolve a conflict with main": [[14, "how-to-resolve-a-conflict-with-main"]], "How to use Debugger?": [[0, "how-to-use-debugger"]], "How-to Guides": [[12, "how-to-guides"]], "Hybrid Frontend Language Reference": [[189, null]], "Hybrid Script": [[190, "hybrid-script"]], "IR Transformation": [[82, "ir-transformation"]], "IR Visitor": [[82, "ir-visitor"]], "IRModule": [[43, null], [209, "irmodule"]], "IRModule Optimization": [[111, "irmodule-optimization"]], "If Pattern": [[194, "if-pattern"]], "If-Then-Else": [[192, "if-then-else"]], "Implement CSourceCodegen": [[36, "implement-csourcecodegen"]], "Implement CodegenC": [[36, "implement-codegenc"]], "Implement Constructor": [[36, "implement-constructor"]], "Implement CreateCSourceModule": [[36, "implement-createcsourcemodule"]], "Implement ExampleJsonCodeGen": [[36, "implement-examplejsoncodegen"]], "Implement GenCFunc": [[36, "implement-gencfunc"]], "Implement GetFunction": [[36, "implement-getfunction"]], "Implement Run": [[36, "implement-run"]], "Implement SaveToBinary and LoadFromBinary": [[36, "implement-savetobinary-and-loadfrombinary"]], "Implement a C Codegen": [[36, "implement-a-c-codegen"]], "Implement a Codegen for Your Representation": [[36, "implement-a-codegen-for-your-representation"]], "Implement a Customized Runtime": [[36, "implement-a-customized-runtime"]], "Implement a Pass Using Python Decorator": [[84, "implement-a-pass-using-python-decorator"]], "Implementation Details": [[5, "implementation-details"]], "Implementing Neural Nets Using ADTs": [[191, "implementing-neural-nets-using-adts"]], "Import Python dependencies": [[116, "import-python-dependencies"], [117, "import-python-dependencies"], [118, "import-python-dependencies"], [120, "import-python-dependencies"], [122, "import-python-dependencies"]], "Import Visual Wake Word Model": [[120, "import-visual-wake-word-model"]], "Import a TFLite model": [[116, "import-a-tflite-model"]], "Import from existing models": [[43, "import-from-existing-models"]], "Import model": [[52, "import-model"]], "Import the TFLite model": [[118, "import-the-tflite-model"]], "Import the graph to Relay": [[47, "import-the-graph-to-relay"], [51, "import-the-graph-to-relay"], [52, "import-the-graph-to-relay"], [72, "import-the-graph-to-relay"]], "Import the model to the generated project": [[118, "import-the-model-to-the-generated-project"]], "Improve performance with custom targets": [[200, null]], "Incomplete Type": [[195, "incomplete-type"]], "Independent Project Management": [[10, "independent-project-management"]], "Index": [[40, null], [141, null]], "Inference": [[66, "inference"]], "Inference on tensorflow": [[52, "inference-on-tensorflow"]], "Inference with Relay VM": [[72, "inference-with-relay-vm"]], "Initialization Schedule": [[31, "initialization-schedule"]], "Input data layout for operations to be offloaded to BNNS execution": [[59, "input-data-layout-for-operations-to-be-offloaded-to-bnns-execution"]], "Input pre-processing": [[210, "input-pre-processing"]], "Inspecting the Optimized Schedule": [[200, "inspecting-the-optimized-schedule"]], "Inspecting the compilation output": [[122, "inspecting-the-compilation-output"]], "Install CMSIS-NN": [[120, "install-cmsis-nn"]], "Install Zephyr": [[116, "install-zephyr"], [117, "install-zephyr"], [120, "install-zephyr"], [122, "install-zephyr"], [124, "install-zephyr"]], "Install dependencies": [[104, "install-dependencies"], [105, "install-dependencies"], [106, "install-dependencies"], [107, "install-dependencies"], [201, "install-dependencies"]], "Install from Source": [[143, null]], "Install microTVM Python dependencies": [[116, "install-microtvm-python-dependencies"], [117, "install-microtvm-python-dependencies"], [118, "install-microtvm-python-dependencies"], [120, "install-microtvm-python-dependencies"], [121, "install-microtvm-python-dependencies"], [122, "install-microtvm-python-dependencies"], [124, "install-microtvm-python-dependencies"]], "Installing Arm Compute Library": [[58, "installing-arm-compute-library"]], "Installing PAPI": [[93, "installing-papi"]], "Installing TVM": [[144, null]], "Installing TensorRT": [[65, "installing-tensorrt"]], "Installing additional python dependencies": [[119, "installing-additional-python-dependencies"]], "Installing the Prerequisites": [[123, "installing-the-prerequisites"]], "Integrate TVM into Your Project": [[63, null]], "Integrate User Defined C++ Array": [[63, "integrate-user-defined-c-array"]], "Integrate User Defined Python Array": [[63, "integrate-user-defined-python-array"]], "Interactive with Python Variables": [[30, "interactive-with-python-variables"]], "Introduction": [[56, "introduction"], [58, "introduction"], [59, "introduction"], [65, "introduction"], [205, null]], "Introduction to Module Serialization": [[3, null]], "Introduction to Relay": [[190, "introduction-to-relay"]], "Introduction to TOPI": [[204, null]], "Introductory Tutorials": [[12, "introductory-tutorials"]], "Jenkins Logs": [[7, "jenkins-logs"]], "Key Elements of Relax": [[20, "key-elements-of-relax"]], "Key Elements of Tensor Programs": [[25, "key-elements-of-tensor-programs"]], "Key Features of Relax": [[18, "key-features-of-relax"]], "Key Flow": [[41, "key-flow"]], "Key Goals": [[41, "key-goals"]], "Key Principle": [[41, "key-principle"]], "Key data structures": [[2, "key-data-structures"]], "Keywords": [[189, "keywords"]], "Lambda Functions": [[208, null]], "Language Reference": [[190, null]], "Learn from other Code Reviews": [[9, "learn-from-other-code-reviews"]], "Legacy": [[141, null], [153, null]], "Let Bindings": [[192, "let-bindings"]], "Let Pattern": [[194, "let-pattern"]], "Leverage Localities": [[31, "leverage-localities"]], "Library Dispatch": [[110, "library-dispatch"]], "Load Compiled Module": [[208, "load-compiled-module"]], "Load Model": [[68, "load-model"]], "Load Required Modules": [[75, "load-required-modules"]], "Load a pre-trained PyTorch model": [[121, "load-a-pre-trained-pytorch-model"]], "Load a pretrained PyTorch model": [[51, "load-a-pretrained-pytorch-model"]], "Load a test image": [[46, "load-a-test-image"], [47, "load-a-test-image"], [48, "load-a-test-image"], [49, "load-a-test-image"], [50, "load-a-test-image"], [51, "load-a-test-image"], [53, "load-a-test-image"], [67, "load-a-test-image"], [74, "load-a-test-image"]], "Load a tflite model": [[74, "load-a-tflite-model"]], "Load pre-trained maskrcnn from torchvision and do tracing": [[72, "load-pre-trained-maskrcnn-from-torchvision-and-do-tracing"]], "Load pretrained CoreML model": [[46, "load-pretrained-coreml-model"]], "Load pretrained ONNX model": [[49, "load-pretrained-onnx-model"]], "Load pretrained ResNet50 model": [[50, "load-pretrained-resnet50-model"]], "Load pretrained TFLite model": [[53, "load-pretrained-tflite-model"]], "Load pretrained keras model": [[48, "load-pretrained-keras-model"], [69, "load-pretrained-keras-model"]], "Load quantization-ready, pretrained Mobilenet v2 model from torchvision": [[73, "load-quantization-ready-pretrained-mobilenet-v2-model-from-torchvision"]], "Load the data and set up model parameters": [[126, "load-the-data-and-set-up-model-parameters"]], "Loading the Data": [[123, "loading-the-data"], [123, "id1"]], "Local Variable": [[192, "local-variable"]], "Look up synset name": [[46, "look-up-synset-name"], [48, "look-up-synset-name"], [50, "look-up-synset-name"], [51, "look-up-synset-name"], [121, "look-up-synset-name"]], "Loop Iterations": [[27, "loop-iterations"]], "Loop Permutation": [[90, "loop-permutation"]], "Loop Tiling": [[31, "loop-tiling"]], "Loops": [[189, "loops"]], "Low-Level Integration": [[20, "low-level-integration"]], "Lowering Computation to Intrinsics": [[89, "lowering-computation-to-intrinsics"]], "Make a PyTorch Resnet50 Model": [[68, "make-a-pytorch-resnet50-model"]], "Making your Hardware Accelerator TVM-ready with UMA": [[212, null]], "Manually Apply Optimization Passes": [[84, "manually-apply-optimization-passes"]], "Marvell Machine Learning Integration": [[64, null]], "Matching Diamonds and Post-Dominator Graphs": [[194, "matching-diamonds-and-post-dominator-graphs"]], "Matching Fuzzy Patterns": [[194, "matching-fuzzy-patterns"]], "Matching Non-Call Nodes": [[194, "matching-non-call-nodes"]], "Matching One of Two Ops": [[194, "matching-one-of-two-ops"]], "Matching Types": [[194, "matching-types"]], "Matching an Op with Attributes": [[194, "matching-an-op-with-attributes"]], "Matching an Optional Op": [[194, "matching-an-optional-op"]], "Math Intrinsics": [[189, "math-intrinsics"]], "Matrix Multiplication with AutoTVM": [[201, "matrix-multiplication-with-autotvm"]], "Measure performance": [[73, "measure-performance"], [74, "measure-performance"]], "Memory Hierarchy": [[88, "memory-hierarchy"]], "Memory Scope": [[89, "memory-scope"]], "Minimize Dependencies": [[9, "minimize-dependencies"]], "Misc": [[153, null]], "Modifying Our Network": [[123, "modifying-our-network"]], "Module": [[5, "module"]], "Module Export Example": [[3, "module-export-example"]], "Module Storage Format": [[208, null]], "Module and Global Functions": [[192, "module-and-global-functions"]], "Module-Level Passes": [[4, "module-level-passes"]], "More Explanation on cfg.define_split": [[201, null]], "More examples": [[58, "more-examples"]], "Motivation": [[123, "motivation"]], "Multi-Stage Scan Cell": [[135, "multi-stage-scan-cell"]], "Multiple States": [[135, "multiple-states"]], "Necessary imports": [[74, "necessary-imports"]], "Network Resources": [[8, "network-resources"]], "Next Steps": [[123, "next-steps"]], "Notes": [[49, "notes"]], "Numpy-style operator overloading": [[204, "numpy-style-operator-overloading"]], "Obtain a Tiny Model": [[124, "obtain-a-tiny-model"]], "Obtaining TVM": [[119, "obtaining-tvm"]], "Obtaining the Model": [[119, "obtaining-the-model"], [210, "obtaining-the-model"]], "OpenCL Backend Enhancements": [[56, "opencl-backend-enhancements"]], "Operator support": [[58, "operator-support"], [59, "operator-support"], [65, "operator-support"]], "Operators": [[192, "operators"]], "Optimization 1: Blocking": [[208, "optimization-1-blocking"]], "Optimization 2: Vectorization": [[208, "optimization-2-vectorization"]], "Optimization 3: Loop Permutation": [[208, "optimization-3-loop-permutation"]], "Optimization 4: Array Packing": [[208, "optimization-4-array-packing"]], "Optimization 5: Optimizing Block Writing Through Caching": [[208, "optimization-5-optimizing-block-writing-through-caching"]], "Optimization 6: Parallelization": [[208, "optimization-6-parallelization"]], "Optimize Large Language Model": [[113, null]], "Optimize Tensor Operators": [[87, null]], "Optimize and tune models for target devices": [[62, "optimize-and-tune-models-for-target-devices"]], "Optimize the Program": [[84, "optimize-the-program"]], "Optimizing Operators with Auto-scheduling": [[200, null]], "Optimizing Operators with Schedule Templates and AutoTVM": [[201, null]], "Other APIs": [[145, null]], "Other Tips": [[97, "other-tips"], [98, "other-tips"], [99, "other-tips"], [100, "other-tips"]], "Other Topics": [[34, "other-topics"]], "Output Post-Processing": [[210, "output-post-processing"]], "Overall Flow": [[2, "overall-flow"], [44, "overall-flow"]], "Override Instruments in Current PassContext": [[4, "override-instruments-in-current-passcontext"]], "Overview": [[41, null], [44, "overview"], [189, "overview"]], "Overview for Supported Hardware Backend of TVM": [[206, "overview-for-supported-hardware-backend-of-tvm"]], "Overview of Operators": [[193, "overview-of-operators"]], "Pack Everything into One Library": [[208, "pack-everything-into-one-library"]], "PackedFunc": [[5, "packedfunc"]], "Parallel": [[90, "parallel"]], "Partitioning and Compilation Settings": [[65, "partitioning-and-compilation-settings"]], "Pass Constructs": [[4, "pass-constructs"]], "Pass Infrastructure": [[4, null]], "Pass Instrument": [[4, "pass-instrument"], [4, "pass-instrument-py-frontend"]], "Pass Objects": [[4, "pass-objects"]], "Pass Registration": [[4, "pass-registration"]], "PassContext": [[4, "passcontext"], [4, "id1"]], "Patch Releases": [[17, "patch-releases"]], "Pattern Examples": [[194, "pattern-examples"]], "Pattern Language Design": [[194, "pattern-language-design"]], "Pattern Matching in Match Expressions": [[191, "pattern-matching-in-match-expressions"]], "Pattern Matching in Relay": [[194, null]], "Pattern Partitioning": [[194, "pattern-partitioning"]], "Pattern Rewriting": [[194, "pattern-rewriting"]], "Perform Optimization Transformations": [[44, "perform-optimization-transformations"]], "Polymorphism and Type Relations": [[192, "polymorphism-and-type-relations"]], "Post the Announcement": [[17, "post-the-announcement"]], "Post the Release": [[17, "post-the-release"]], "Postprocess the output": [[202, "postprocess-the-output"]], "Pre-processing the image": [[119, "pre-processing-the-image"]], "Pre-processing the labels": [[119, "pre-processing-the-labels"]], "Precisions": [[56, "precisions"], [67, "precisions"]], "Prefill": [[113, "prefill"]], "Preparation": [[111, "preparation"]], "Preparation and Algorithm": [[88, "preparation-and-algorithm"], [89, "preparation-and-algorithm"]], "Preparation and Baseline": [[90, "preparation-and-baseline"]], "Preparation and Performance Baseline": [[208, "preparation-and-performance-baseline"]], "Prepare TVM Target": [[67, "prepare-tvm-target"]], "Prepare a Relax Module": [[110, "prepare-a-relax-module"]], "Prepare the GPG Key": [[17, "prepare-the-gpg-key"]], "Prepare the Pre-trained Model": [[70, "prepare-the-pre-trained-model"], [71, "prepare-the-pre-trained-model"]], "Prepare the Release Candidate": [[17, "prepare-the-release-candidate"]], "Prepare the Release Notes": [[17, "prepare-the-release-notes"]], "Prepare the model weights": [[113, "prepare-the-model-weights"]], "Prepare the parameters needed in the GraphConv layers": [[126, "prepare-the-parameters-needed-in-the-graphconv-layers"]], "Prerequisites": [[82, "prerequisites"]], "Procedures for Keeping CI Green": [[7, "procedures-for-keeping-ci-green"]], "Process the output": [[52, "process-the-output"]], "Profile Models": [[92, null]], "Projection": [[192, "projection"]], "Public Archive Principle": [[10, "public-archive-principle"]], "Publications": [[196, null]], "Put layers together": [[126, "put-layers-together"]], "Python (local)": [[16, "python-local"]], "Python API": [[153, null]], "Python Code Styles": [[8, "python-code-styles"]], "Python Frontend": [[4, "python-frontend"]], "Python Interface": [[56, "python-interface"]], "Python Reference Documentation": [[12, "python-reference-documentation"]], "Python Target Parametrization": [[79, null]], "Quantization": [[123, "quantization"]], "Quantize, trace and run the PyTorch Mobilenet v2 model": [[73, "quantize-trace-and-run-the-pytorch-mobilenet-v2-model"]], "Quick Start": [[44, null]], "Quick Start Tutorial for Compiling Deep Learning Models": [[206, null]], "Quick View": [[82, "quick-view"]], "R.call_tir": [[20, "r-call-tir"]], "RPC Setup": [[56, "rpc-setup"]], "Raise a Specific Error in C++": [[13, "raise-a-specific-error-in-c"]], "Read next": [[44, "read-next"]], "Read the code carefully": [[9, "read-the-code-carefully"]], "Recover a Previous Commit after Reset": [[14, "recover-a-previous-commit-after-reset"]], "Recursion with ADTs": [[191, "recursion-with-adts"]], "Reduce-update for Tensorize": [[139, "reduce-update-for-tensorize"]], "Reduction": [[134, null]], "Reduction Factoring and Parallelization": [[134, "reduction-factoring-and-parallelization"]], "Refer to Another Location in the Document": [[12, "refer-to-another-location-in-the-document"]], "Reference": [[12, "reference"]], "References": [[212, "references"]], "Register Android device to RPC Tracker": [[69, "register-android-device-to-rpc-tracker"]], "Register Devices to RPC Tracker": [[97, "register-devices-to-rpc-tracker"], [105, "register-devices-to-rpc-tracker"], [107, "register-devices-to-rpc-tracker"]], "Register Your Codegen": [[36, "register-your-codegen"]], "Registering a Pass with the Pass Manager": [[35, "registering-a-pass-with-the-pass-manager"]], "Relax": [[19, null]], "Relax Creation": [[22, null]], "Relay Arm\u00ae Compute Library Integration": [[58, null]], "Relay BNNS Integration": [[59, null]], "Relay Build": [[51, "relay-build"], [52, "relay-build"]], "Relay Core Tensor Operators": [[193, null]], "Relay TensorRT Integration": [[65, null]], "Relay\u2019s Type System": [[195, null]], "Release Process": [[17, null]], "Remote Deployment": [[5, "remote-deployment"]], "Render Graphs with TEDD": [[138, "render-graphs-with-tedd"]], "Render the graph with Relay Visualizer on the terminal": [[131, "render-the-graph-with-relay-visualizer-on-the-terminal"]], "Reporting Issues": [[7, "reporting-issues"]], "Reporting Security Issues": [[197, "reporting-security-issues"]], "Reproduce Failures": [[7, "reproduce-failures"]], "Request for Community Input": [[212, "request-for-community-input"]], "Reset to the most recent main branch": [[14, "reset-to-the-most-recent-main-branch"]], "Review Overall Flow": [[110, "review-overall-flow"], [111, "review-overall-flow"], [113, "review-overall-flow"]], "Reviewers": [[9, "reviewers"], [11, "reviewers"]], "Rewrite Reduction": [[31, "rewrite-reduction"]], "Run": [[61, "run"]], "Run All the Code!": [[75, "run-all-the-code"]], "Run Autotuning": [[117, "run-autotuning"]], "Run CPU Kernel Remotely by RPC": [[109, "run-cpu-kernel-remotely-by-rpc"]], "Run OpenCL Kernel Remotely by RPC": [[109, "run-opencl-kernel-remotely-by-rpc"]], "Run Tiny Model on Micro Target": [[124, "run-tiny-model-on-micro-target"]], "Run inference": [[67, "run-inference"]], "Run the DGL model and test for accuracy": [[126, "run-the-dgl-model-and-test-for-accuracy"]], "Run the Dense Graph": [[75, "run-the-dense-graph"]], "Run the Sparse Graph": [[75, "run-the-sparse-graph"]], "Run the TVM model, test for accuracy and verify with DGL": [[126, "run-the-tvm-model-test-for-accuracy-and-verify-with-dgl"]], "Run the generate library": [[206, "run-the-generate-library"]], "Run the pipeline executor.": [[130, "run-the-pipeline-executor"]], "Run the search": [[96, "run-the-search"], [101, "run-the-search"], [200, "run-the-search"]], "Run the two subgraphs in pipeline with pipeline executor.": [[130, "run-the-two-subgraphs-in-pipeline-with-pipeline-executor"]], "Running in CI": [[79, "running-in-ci"]], "Running in local docker container": [[79, "running-in-local-docker-container"]], "Running locally": [[79, "running-locally"]], "Running on Alveo and VCK5000": [[66, "running-on-alveo-and-vck5000"]], "Running on Zynq and VCK190": [[66, "running-on-zynq-and-vck190"]], "Running the Compiled Module": [[210, "running-the-compiled-module"]], "Running the Model from The Compiled Module with TVMC": [[210, "running-the-model-from-the-compiled-module-with-tvmc"]], "Running the demo application": [[119, "running-the-demo-application"]], "Runtime API and Thread-Safety": [[208, null]], "Runtime Execution": [[2, "runtime-execution"]], "Runtime Settings": [[65, "runtime-settings"]], "Runtime-Specific Information": [[5, "runtime-specific-information"]], "SPIR-V Capabilities": [[6, "spir-v-capabilities"]], "Sample Output": [[0, "sample-output"], [69, "sample-output"], [75, "sample-output"], [105, "sample-output"], [106, "sample-output"], [107, "sample-output"], [108, "sample-output"]], "Save and Load Compiled Module": [[206, "save-and-load-compiled-module"]], "Save and then start the process in the terminal:": [[211, "save-and-then-start-the-process-in-the-terminal"]], "Saving and Loading Compiled Modules": [[208, "saving-and-loading-compiled-modules"]], "Saving the model": [[211, "saving-the-model"]], "Saving the package": [[211, "saving-the-package"]], "Saving the tuning results": [[211, "saving-the-tuning-results"]], "Scale up measurement by using multiple devices": [[106, "scale-up-measurement-by-using-multiple-devices"]], "Scan and Recurrent Kernel": [[135, null]], "Schedule Operation with Tuple Inputs": [[140, "schedule-operation-with-tuple-inputs"]], "Schedule Primitives in TVM": [[136, null]], "Schedule the Matmul": [[139, "schedule-the-matmul"]], "Schedule the Reduction": [[134, "schedule-the-reduction"]], "Schedule the Scan Cell": [[135, "schedule-the-scan-cell"]], "Scheduling the Computation": [[89, "scheduling-the-computation"]], "Security Guide": [[197, null]], "Security Model": [[197, "security-model"]], "Sequential Passes": [[4, "sequential-passes"]], "Serialization": [[3, "serialization"]], "Set Parameters for Auto-Scheduler": [[200, "set-parameters-for-auto-scheduler"]], "Set Tuning Options": [[97, "set-tuning-options"], [105, "set-tuning-options"], [106, "set-tuning-options"], [107, "set-tuning-options"]], "Set Up RPC Server on Device": [[70, "set-up-rpc-server-on-device"], [71, "set-up-rpc-server-on-device"], [109, "set-up-rpc-server-on-device"]], "Set up the DGL-PyTorch model and get the golden results": [[126, "set-up-the-dgl-pytorch-model-and-get-the-golden-results"]], "Setting Tuning Parameters": [[202, null]], "Setup": [[61, "setup"]], "Setup Environment": [[69, "setup-environment"]], "Setup RPC Server": [[80, "setup-rpc-server"]], "Setup RPC System": [[80, null]], "Setup RPC Tracker and RPC Proxy": [[80, "setup-rpc-tracker-and-rpc-proxy"]], "Setup instructions": [[66, "setup-instructions"]], "Shape Pattern": [[194, "shape-pattern"]], "Shepherd a Pull Request": [[10, "shepherd-a-pull-request"]], "Skipping CI": [[7, "skipping-ci"]], "Software Emulation": [[189, "software-emulation"]], "Special considerations for TVM": [[12, "special-considerations-for-tvm"]], "Special step for sparse workload": [[101, "special-step-for-sparse-workload"]], "Sphinx Gallery How-Tos": [[12, "sphinx-gallery-how-tos"]], "Splitting the network into two subgraphs.": [[130, "splitting-the-network-into-two-subgraphs"]], "Standard Format": [[30, "standard-format"]], "Start RPC Tracker": [[69, "start-rpc-tracker"], [97, "start-rpc-tracker"], [105, "start-rpc-tracker"], [107, "start-rpc-tracker"]], "Start an RPC Tracker and Register Devices to the Tracker": [[99, "start-an-rpc-tracker-and-register-devices-to-the-tracker"]], "Step 0: Imports": [[211, "step-0-imports"]], "Step 1. Install Dependencies": [[143, "step-1-install-dependencies"]], "Step 1.5: Tune [Optional & Recommended]": [[211, "step-1-5-tune-optional-recommended"]], "Step 1:  Define the search space": [[104, "step-1-define-the-search-space"]], "Step 1: Load a model": [[211, "step-1-load-a-model"]], "Step 2. Get Source from Github": [[143, "step-2-get-source-from-github"]], "Step 2:  Search through the space": [[104, "step-2-search-through-the-space"]], "Step 2: Compile": [[211, "step-2-compile"]], "Step 2: Use AutoTVM to Optimize the Matrix Multiplication": [[201, "step-2-use-autotvm-to-optimize-the-matrix-multiplication"]], "Step 3. Configure and Build": [[143, "step-3-configure-and-build"]], "Step 3: Run": [[211, "step-3-run"]], "Step 4. Validate Installation": [[143, "step-4-validate-installation"]], "Step 5. Extra Python Dependencies": [[143, "step-5-extra-python-dependencies"]], "Strategy Decision Process": [[11, "strategy-decision-process"]], "Strawberry": [[212, "strawberry"]], "Structure Info": [[20, "structure-info"]], "Submit a Pull Request": [[16, null]], "Sugars for Block Axes Binding": [[27, "sugars-for-block-axes-binding"]], "Suggested Architecture": [[80, "suggested-architecture"]], "Summary": [[22, "summary"], [23, "summary"], [36, "summary"], [79, "summary"], [84, "summary"], [89, "summary"], [90, "summary"], [109, "summary"], [110, "summary"], [123, "summary"], [131, "summary"], [132, "summary"], [134, "summary"], [135, "summary"], [136, "summary"], [138, "summary"], [139, "summary"], [140, "summary"], [204, "summary"]], "Summary and Discussions": [[2, "summary-and-discussions"]], "Summary of Matrix Multiplication Example": [[208, "summary-of-matrix-multiplication-example"]], "Supported Hardware": [[199, "supported-hardware"]], "Supported model formats": [[210, null]], "Syntax": [[192, "syntax"]], "Synthesis": [[61, "synthesis"]], "System Requirements": [[66, "system-requirements"]], "TE Scheduling Primitives": [[208, null]], "TFLite inference": [[74, "tflite-inference"]], "TVM Codebase Walkthrough by Example": [[37, null]], "TVM Community Guidelines": [[11, null]], "TVM Object and Compiler Stack": [[5, "tvm-object-and-compiler-stack"]], "TVM RPC Server": [[67, "tvm-rpc-server"]], "TVM Runtime System": [[5, null]], "TVM Runtime for Android Target": [[57, "tvm-runtime-for-android-target"]], "TVM compilation and inference": [[74, "tvm-compilation-and-inference"]], "TVM for Adreno\u2122": [[56, "tvm-for-adreno"]], "Table of Contents": [[43, "table-of-contents"], [44, "table-of-contents"], [110, "table-of-contents"], [143, "table-of-contents"]], "Target Code Generators": [[1, "target-code-generators"]], "Target Definition": [[1, "target-definition"]], "Target Translation": [[2, "target-translation"]], "Targeting Vector Addition for GPUs (Optional)": [[208, "targeting-vector-addition-for-gpus-optional"]], "Technical Details": [[12, "technical-details"]], "TempExprs": [[192, "tempexprs"]], "Tensor Program Abstraction": [[25, null]], "Tensor Type": [[195, "tensor-type"]], "TensorCore Introduction": [[89, "tensorcore-introduction"]], "TensorIR": [[26, null]], "TensorIR Creation": [[30, null]], "TensorIR Function with Dynamic Shapes": [[30, "tensorir-function-with-dynamic-shapes"]], "Testing": [[16, "testing"]], "Testing our Arduino Project": [[123, "testing-our-arduino-project"]], "The ConstantChecker Visitor": [[35, "the-constantchecker-visitor"]], "The ConstantFolder Mutator": [[35, "the-constantfolder-mutator"]], "The Design": [[4, "the-design"]], "The Four Document Types": [[12, "the-four-document-types"]], "Thread Bind": [[189, "thread-bind"]], "Time Management": [[10, "time-management"]], "Timing the tuned program": [[117, "timing-the-tuned-program"]], "Timing the untuned program": [[117, "timing-the-untuned-program"]], "Tokenization": [[113, "tokenization"]], "Trace the Transformation": [[31, "trace-the-transformation"]], "Transform an IRModule": [[209, "transform-an-irmodule"]], "Transform to a GPU program": [[209, "transform-to-a-gpu-program"]], "Transformation": [[23, null], [31, null]], "Transformations": [[2, "transformations"]], "Transformations on IRModules": [[43, "transformations-on-irmodules"]], "Troubleshooting": [[80, "troubleshooting"]], "Tune the model": [[202, "tune-the-model"]], "Tuning": [[189, "tuning"]], "Tuning High Performance Convolution on NVIDIA GPUs": [[104, null]], "Tuning a more complex model:": [[211, "tuning-a-more-complex-model"]], "Tuning and Evaluate": [[99, "tuning-and-evaluate"]], "Tuning and Evaluation": [[97, "tuning-and-evaluation"]], "Tuple Type": [[195, "tuple-type"]], "Tuples": [[192, "tuples"]], "Tutorials": [[52, "tutorials"]], "Type": [[195, "type"]], "Type Call": [[195, "type-call"]], "Type Constraint": [[195, "type-constraint"]], "Type Parameter": [[195, "type-parameter"]], "Type Pattern": [[194, "type-pattern"]], "Type Relation": [[195, "type-relation"]], "Type-Checking ADTs and Polymorphism": [[191, "type-checking-adts-and-polymorphism"]], "Under the Hood of Serialization and Format Standard": [[3, "under-the-hood-of-serialization-and-format-standard"]], "Understand Relax Abstraction": [[20, null]], "Understand TensorIR Abstraction": [[27, null]], "Unit-Test File Contents": [[79, "unit-test-file-contents"]], "Update TVM Version on main": [[17, "update-tvm-version-on-main"]], "Update the TVM Website": [[17, "update-the-tvm-website"]], "Updating a Docker Image Tag": [[7, "updating-a-docker-image-tag"]], "Updating the Schedule to Use Parallelism": [[208, "updating-the-schedule-to-use-parallelism"]], "Updating the Schedule to Use Vectorization": [[208, "updating-the-schedule-to-use-vectorization"]], "Upload the Release Candidate": [[17, "upload-the-release-candidate"]], "Uploading to Our Device": [[123, "uploading-to-our-device"]], "Usage": [[58, "usage"]], "Use AutoScheduler for Template-Free Scheduling": [[94, null]], "Use Current PassContext With Instruments": [[85, "use-current-passcontext-with-instruments"]], "Use Extern Tensor Function": [[132, "use-extern-tensor-function"]], "Use Relay Visualizer to Visualize Relay": [[131, null]], "Use Sequential to Apply a Sequence of Passes": [[84, "use-sequential-to-apply-a-sequence-of-passes"]], "Use Tensor Expression Debug Display (TEDD) for Visualization": [[138, null]], "Use Tensorize to Leverage Hardware Intrinsics": [[139, null]], "Use cuDNN for a convolutional layer": [[129, "use-cudnn-for-a-convolutional-layer"]], "Use graph_executor for verification.": [[130, "use-graph-executor-for-verification"]], "Use the load function to create and initialize PipelineModule.": [[130, "use-the-load-function-to-create-and-initialize-pipelinemodule"]], "Use this project with your board": [[120, "use-this-project-with-your-board"]], "User Tutorial": [[203, null]], "Using Autoscheduler": [[211, "using-autoscheduler"]], "Using External Libraries in Relay": [[129, null]], "Using PAPI While Profiling": [[93, "using-papi-while-profiling"]], "Using Pipeline Executor in Relay": [[130, null]], "Using TVMC": [[210, "using-tvmc"]], "Using TVMC Micro": [[124, "using-tvmc-micro"]], "Using TVM\u2019s CI": [[7, null]], "Using the GPU": [[123, "using-the-gpu"]], "Using the record file": [[96, "using-the-record-file"], [200, "using-the-record-file"]], "Utils for downloading and extracting zip files": [[53, "utils-for-downloading-and-extracting-zip-files"], [74, "utils-for-downloading-and-extracting-zip-files"]], "VLOGging": [[32, "vlogging"]], "Validate RPC System": [[80, "validate-rpc-system"]], "Validating our Accuracy": [[123, "validating-our-accuracy"]], "Vanilla": [[212, "vanilla"]], "Variable Pattern": [[194, "variable-pattern"]], "Variables": [[189, "variables"], [192, "variables"]], "Vector Add Example": [[37, "vector-add-example"]], "Vectorization": [[90, "vectorization"]], "Verify the Result": [[132, "verify-the-result"]], "Verify the result": [[129, "verify-the-result"]], "Versal VCK190 Setup": [[66, "versal-vck190-setup"]], "Versal VCK5000 Setup": [[66, "versal-vck5000-setup"]], "Virtual Thread Split": [[88, "virtual-thread-split"]], "Vitis AI Integration": [[66, null]], "Vulkan Capabilities": [[6, "tvm-runtime-table-vulkan-capabilities"], [6, "tvm-table-vulkan-capabilities"]], "Vulkan Features, Limits": [[6, "vulkan-features-limits"]], "Vulkan Runtime": [[6, null]], "Vulkan-Specific Environment Variables": [[6, "vulkan-specific-environment-variables"]], "What is Graph Abstraction?": [[18, "what-is-graph-abstraction"]], "What is Transfer Learning?": [[123, "what-is-transfer-learning"]], "What is the consequence of force push": [[14, "what-is-the-consequence-of-force-push"]], "What should I do when I encounter such an error?": [[39, "what-should-i-do-when-i-encounter-such-an-error"]], "What\u2019s Inside Our Dataset?": [[123, "what-s-inside-our-dataset"]], "Where do these errors come from?": [[39, "where-do-these-errors-come-from"]], "Why Extra Information in Block": [[27, "why-extra-information-in-block"]], "Wildcard": [[194, "wildcard"]], "Work With Relay": [[127, null]], "Work With Tensor Expression and Schedules": [[133, null]], "Work With microTVM": [[115, null]], "Working with Operators Using Tensor Expression": [[208, null]], "Working with Other Model Formats": [[202, null]], "Write cache for blocks": [[90, "write-cache-for-blocks"]], "Write the custom sketch for sparse dense op": [[101, "write-the-custom-sketch-for-sparse-dense-op"]], "Write with Relax NN Module": [[43, "write-with-relax-nn-module"]], "Writing Python Tests": [[8, "writing-python-tests"]], "Writing a Customized Pass": [[82, null]], "Writing a Pass": [[82, "writing-a-pass"]], "Writing our Arduino Script": [[123, "writing-our-arduino-script"]], "Writing the demo application": [[119, "writing-the-demo-application"]], "Zynq Setup": [[66, "zynq-setup"]], "bind": [[136, "bind"]], "ci-docker-staging": [[7, "ci-docker-staging"]], "compute_at": [[136, "compute-at"]], "compute_inline": [[136, "compute-inline"]], "compute_root": [[136, "compute-root"]], "cross-compile for RISC-V": [[62, "cross-compile-for-risc-v"]], "cross-compile for aarch64": [[62, "cross-compile-for-aarch64"]], "cross-level transformations": [[2, "cross-level-transformations"]], "fuse": [[136, "fuse"]], "microTVM: TVM on bare-metal": [[199, null]], "relax transformations": [[2, "relax-transformations"]], "reorder": [[136, "reorder"]], "split": [[136, "split"]], "tile": [[136, "tile"]], "tir transformations": [[2, "tir-transformations"]], "tvm": [[153, null]], "tvm.auto_scheduler": [[146, null]], "tvm.autotvm": [[147, null]], "tvm.autotvm.measure": [[147, "module-tvm.autotvm.measure.measure"]], "tvm.autotvm.record": [[147, "module-tvm.autotvm.record"]], "tvm.autotvm.task": [[147, "module-tvm.autotvm.task"]], "tvm.autotvm.tuner": [[147, "module-tvm.autotvm.tuner"]], "tvm.contrib": [[148, null]], "tvm.contrib.cblas": [[148, "module-tvm.contrib.cblas"]], "tvm.contrib.cc": [[148, "module-tvm.contrib.cc"]], "tvm.contrib.clang": [[148, "module-tvm.contrib.clang"]], "tvm.contrib.cublas": [[148, "module-tvm.contrib.cublas"]], "tvm.contrib.dlpack": [[148, "module-tvm.contrib.dlpack"]], "tvm.contrib.emcc": [[148, "module-tvm.contrib.emcc"]], "tvm.contrib.graph_executor": [[152, null]], "tvm.contrib.miopen": [[148, "module-tvm.contrib.miopen"]], "tvm.contrib.mxnet": [[148, "module-tvm.contrib.mxnet"]], "tvm.contrib.ndk": [[148, "module-tvm.contrib.ndk"]], "tvm.contrib.nnpack": [[148, "module-tvm.contrib.nnpack"]], "tvm.contrib.nvcc": [[148, "module-tvm.contrib.nvcc"]], "tvm.contrib.pickle_memoize": [[148, "module-tvm.contrib.pickle_memoize"]], "tvm.contrib.random": [[148, "module-tvm.contrib.random"]], "tvm.contrib.relay_viz": [[148, "module-tvm.contrib.relay_viz"]], "tvm.contrib.rocblas": [[148, "module-tvm.contrib.rocblas"]], "tvm.contrib.rocm": [[148, "module-tvm.contrib.rocm"]], "tvm.contrib.sparse": [[148, "module-tvm.contrib.sparse"]], "tvm.contrib.spirv": [[148, "module-tvm.contrib.spirv"]], "tvm.contrib.tar": [[148, "module-tvm.contrib.tar"]], "tvm.contrib.utils": [[148, "module-tvm.contrib.utils"]], "tvm.contrib.xcode": [[148, "module-tvm.contrib.xcode"]], "tvm.dlight": [[149, null], [153, null]], "tvm.driver": [[150, null]], "tvm.error": [[151, null]], "tvm.instrument": [[154, null]], "tvm.ir": [[155, null]], "tvm.meta_schedule": [[153, null], [156, null]], "tvm.micro": [[157, null]], "tvm.relax": [[153, null], [162, null]], "tvm.relax.analysis": [[158, null]], "tvm.relax.block_builder": [[159, null]], "tvm.relax.frontend": [[160, null]], "tvm.relax.frontend.nn": [[160, "tvm-relax-frontend-nn"]], "tvm.relax.frontend.onnx": [[160, "module-tvm.relax.frontend.onnx"]], "tvm.relax.frontend.stablehlo": [[160, "module-tvm.relax.frontend.stablehlo"]], "tvm.relax.frontend.torch": [[160, "module-tvm.relax.frontend.torch"]], "tvm.relax.op": [[161, null], [161, "id1"]], "tvm.relax.op.builtin": [[161, "module-tvm.relax.op.builtin"]], "tvm.relax.op.ccl": [[161, "module-tvm.relax.op.ccl"]], "tvm.relax.op.distributed": [[161, "module-tvm.relax.op.distributed"]], "tvm.relax.op.grad": [[161, "module-tvm.relax.op.grad"]], "tvm.relax.op.image": [[161, "module-tvm.relax.op.image"]], "tvm.relax.op.memory": [[161, "module-tvm.relax.op.memory"]], "tvm.relax.op.nn": [[161, "module-tvm.relax.op.nn"]], "tvm.relax.op.op_attrs": [[161, "module-tvm.relax.op.op_attrs"]], "tvm.relax.transform": [[163, null]], "tvm.relay": [[169, null]], "tvm.relay.analysis": [[164, null]], "tvm.relay.backend": [[165, null]], "tvm.relay.dataflow_pattern": [[166, null]], "tvm.relay.frontend": [[167, null]], "tvm.relay.image": [[168, null]], "tvm.relay.nn": [[170, null]], "tvm.relay.testing": [[171, null]], "tvm.relay.transform": [[172, null]], "tvm.relay.vision": [[173, null]], "tvm.rpc": [[174, null]], "tvm.runtime": [[153, null], [179, null]], "tvm.runtime.disco": [[175, null]], "tvm.runtime.ndarray": [[176, null]], "tvm.runtime.profiling": [[177, null]], "tvm.runtime.relax_vm": [[178, null]], "tvm.target": [[180, null]], "tvm.te": [[153, null], [181, null]], "tvm.te.hybrid": [[181, "module-tvm.te.hybrid"]], "tvm.tir": [[153, null], [185, null]], "tvm.tir.analysis": [[182, null]], "tvm.tir.schedule": [[183, null]], "tvm.tir.stmt_functor": [[184, null]], "tvm.tir.transform": [[186, null]], "tvm.topi": [[187, null]], "tvm.topi.image": [[187, "module-tvm.topi.image"]], "tvm.topi.nn": [[187, "module-tvm.topi.nn"]], "tvm.topi.sparse": [[187, "module-tvm.topi.sparse"]], "tvm.transform": [[188, null]], "tvm/arith": [[2, "tvm-arith"]], "tvm/dlight": [[2, "tvm-dlight"]], "tvm/ir": [[2, "tvm-ir"]], "tvm/meta_schedule": [[2, "tvm-meta-schedule"]], "tvm/node": [[2, "tvm-node"]], "tvm/relax": [[2, "tvm-relax"]], "tvm/runtime": [[2, "tvm-runtime"]], "tvm/support": [[2, "tvm-support"]], "tvm/target": [[2, "tvm-target"]], "tvm/te and tvm/topi": [[2, "tvm-te-and-tvm-topi"]], "tvm/tir": [[2, "tvm-tir"]]}, "docnames": ["arch/debugger", "arch/device_target_interactions", "arch/index", "arch/introduction_to_module_serialization", "arch/pass_infra", "arch/runtime", "arch/runtimes/vulkan", "contribute/ci", "contribute/code_guide", "contribute/code_review", "contribute/committer_guide", "contribute/community", "contribute/document", "contribute/error_handling", "contribute/git_howto", "contribute/index", "contribute/pull_request", "contribute/release_process", "deep_dive/relax/abstraction", "deep_dive/relax/index", "deep_dive/relax/learning", "deep_dive/relax/tutorials/index", "deep_dive/relax/tutorials/relax_creation", "deep_dive/relax/tutorials/relax_transformation", "deep_dive/relax/tutorials/sg_execution_times", "deep_dive/tensor_ir/abstraction", "deep_dive/tensor_ir/index", "deep_dive/tensor_ir/learning", "deep_dive/tensor_ir/tutorials/index", "deep_dive/tensor_ir/tutorials/sg_execution_times", "deep_dive/tensor_ir/tutorials/tir_creation", "deep_dive/tensor_ir/tutorials/tir_transformation", "dev/how_to/debugging_tvm", "dev/how_to/how_to", "dev/how_to/relay_add_op", "dev/how_to/relay_add_pass", "dev/how_to/relay_bring_your_own_codegen", "dev/tutorial/codebase_walkthrough", "dev/tutorial/index", "errors", "genindex", "get_started/overview", "get_started/tutorials/index", "get_started/tutorials/ir_module", "get_started/tutorials/quick_start", "get_started/tutorials/sg_execution_times", "how_to/compile_models/from_coreml", "how_to/compile_models/from_darknet", "how_to/compile_models/from_keras", "how_to/compile_models/from_onnx", "how_to/compile_models/from_paddle", "how_to/compile_models/from_pytorch", "how_to/compile_models/from_tensorflow", "how_to/compile_models/from_tflite", "how_to/compile_models/index", "how_to/compile_models/sg_execution_times", "how_to/deploy/adreno", "how_to/deploy/android", "how_to/deploy/arm_compute_lib", "how_to/deploy/bnns", "how_to/deploy/cpp_deploy", "how_to/deploy/hls", "how_to/deploy/index", "how_to/deploy/integrate", "how_to/deploy/mrvl", "how_to/deploy/tensorrt", "how_to/deploy/vitis_ai", "how_to/deploy_models/deploy_model_on_adreno", "how_to/deploy_models/deploy_model_on_adreno_tvmc", "how_to/deploy_models/deploy_model_on_android", "how_to/deploy_models/deploy_model_on_nano", "how_to/deploy_models/deploy_model_on_rasp", "how_to/deploy_models/deploy_object_detection_pytorch", "how_to/deploy_models/deploy_prequantized", "how_to/deploy_models/deploy_prequantized_tflite", "how_to/deploy_models/deploy_sparse", "how_to/deploy_models/index", "how_to/deploy_models/sg_execution_times", "how_to/dev/index", "how_to/dev/pytest_target_parametrization", "how_to/dev/setup_rpc_system", "how_to/extend_tvm/index", "how_to/extend_tvm/low_level_custom_pass", "how_to/extend_tvm/sg_execution_times", "how_to/extend_tvm/use_pass_infra", "how_to/extend_tvm/use_pass_instrument", "how_to/legacy_index", "how_to/optimize_operators/index", "how_to/optimize_operators/opt_conv_cuda", "how_to/optimize_operators/opt_conv_tensorcore", "how_to/optimize_operators/opt_gemm", "how_to/optimize_operators/sg_execution_times", "how_to/profile/index", "how_to/profile/papi", "how_to/tune_with_autoscheduler/index", "how_to/tune_with_autoscheduler/sg_execution_times", "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda", "how_to/tune_with_autoscheduler/tune_network_arm", "how_to/tune_with_autoscheduler/tune_network_cuda", "how_to/tune_with_autoscheduler/tune_network_mali", "how_to/tune_with_autoscheduler/tune_network_x86", "how_to/tune_with_autoscheduler/tune_sparse_x86", "how_to/tune_with_autotvm/index", "how_to/tune_with_autotvm/sg_execution_times", "how_to/tune_with_autotvm/tune_conv2d_cuda", "how_to/tune_with_autotvm/tune_relay_arm", "how_to/tune_with_autotvm/tune_relay_cuda", "how_to/tune_with_autotvm/tune_relay_mobile_gpu", "how_to/tune_with_autotvm/tune_relay_x86", "how_to/tutorials/cross_compilation_and_rpc", "how_to/tutorials/customize_opt", "how_to/tutorials/e2e_opt_model", "how_to/tutorials/index", "how_to/tutorials/optimize_llm", "how_to/tutorials/sg_execution_times", "how_to/work_with_microtvm/index", "how_to/work_with_microtvm/micro_aot", "how_to/work_with_microtvm/micro_autotune", "how_to/work_with_microtvm/micro_custom_ide", "how_to/work_with_microtvm/micro_ethosu", "how_to/work_with_microtvm/micro_mlperftiny", "how_to/work_with_microtvm/micro_pytorch", "how_to/work_with_microtvm/micro_tflite", "how_to/work_with_microtvm/micro_train", "how_to/work_with_microtvm/micro_tvmc", "how_to/work_with_microtvm/sg_execution_times", "how_to/work_with_relay/build_gcn", "how_to/work_with_relay/index", "how_to/work_with_relay/sg_execution_times", "how_to/work_with_relay/using_external_lib", "how_to/work_with_relay/using_pipeline_executor", "how_to/work_with_relay/using_relay_viz", "how_to/work_with_schedules/extern_op", "how_to/work_with_schedules/index", "how_to/work_with_schedules/reduction", "how_to/work_with_schedules/scan", "how_to/work_with_schedules/schedule_primitives", "how_to/work_with_schedules/sg_execution_times", "how_to/work_with_schedules/tedd", "how_to/work_with_schedules/tensorize", "how_to/work_with_schedules/tuple_inputs", "index", "install/docker", "install/from_source", "install/index", "reference/api/links", "reference/api/python/auto_scheduler", "reference/api/python/autotvm", "reference/api/python/contrib", "reference/api/python/dlight", "reference/api/python/driver", "reference/api/python/error", "reference/api/python/graph_executor", "reference/api/python/index", "reference/api/python/instrument", "reference/api/python/ir", "reference/api/python/meta_schedule", "reference/api/python/micro", "reference/api/python/relax/analysis", "reference/api/python/relax/block_builder", "reference/api/python/relax/frontend", "reference/api/python/relax/op", "reference/api/python/relax/relax", "reference/api/python/relax/transform", "reference/api/python/relay/analysis", "reference/api/python/relay/backend", "reference/api/python/relay/dataflow_pattern", "reference/api/python/relay/frontend", "reference/api/python/relay/image", "reference/api/python/relay/index", "reference/api/python/relay/nn", "reference/api/python/relay/testing", "reference/api/python/relay/transform", "reference/api/python/relay/vision", "reference/api/python/rpc", "reference/api/python/runtime/disco", "reference/api/python/runtime/ndarray", "reference/api/python/runtime/profiling", "reference/api/python/runtime/relax_vm", "reference/api/python/runtime/runtime", "reference/api/python/target", "reference/api/python/te", "reference/api/python/tir/analysis", "reference/api/python/tir/schedule", "reference/api/python/tir/stmt_functor", "reference/api/python/tir/tir", "reference/api/python/tir/transform", "reference/api/python/topi", "reference/api/python/transform", "reference/langref/hybrid_script", "reference/langref/index", "reference/langref/relay_adt", "reference/langref/relay_expr", "reference/langref/relay_op", "reference/langref/relay_pattern", "reference/langref/relay_type", "reference/publications", "reference/security", "sg_execution_times", "topic/microtvm/index", "tutorial/auto_scheduler_matmul_x86", "tutorial/autotvm_matmul_x86", "tutorial/autotvm_relay_x86", "tutorial/index", "tutorial/intro_topi", "tutorial/introduction", "tutorial/relay_quick_start", "tutorial/sg_execution_times", "tutorial/tensor_expr_get_started", "tutorial/tensor_ir_blitz_course", "tutorial/tvmc_command_line_driver", "tutorial/tvmc_python", "tutorial/uma"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["arch/debugger.rst", "arch/device_target_interactions.rst", "arch/index.rst", "arch/introduction_to_module_serialization.rst", "arch/pass_infra.rst", "arch/runtime.rst", "arch/runtimes/vulkan.rst", "contribute/ci.rst", "contribute/code_guide.rst", "contribute/code_review.rst", "contribute/committer_guide.rst", "contribute/community.rst", "contribute/document.rst", "contribute/error_handling.rst", "contribute/git_howto.rst", "contribute/index.rst", "contribute/pull_request.rst", "contribute/release_process.rst", "deep_dive/relax/abstraction.rst", "deep_dive/relax/index.rst", "deep_dive/relax/learning.rst", "deep_dive/relax/tutorials/index.rst", "deep_dive/relax/tutorials/relax_creation.rst", "deep_dive/relax/tutorials/relax_transformation.rst", "deep_dive/relax/tutorials/sg_execution_times.rst", "deep_dive/tensor_ir/abstraction.rst", "deep_dive/tensor_ir/index.rst", "deep_dive/tensor_ir/learning.rst", "deep_dive/tensor_ir/tutorials/index.rst", "deep_dive/tensor_ir/tutorials/sg_execution_times.rst", "deep_dive/tensor_ir/tutorials/tir_creation.rst", "deep_dive/tensor_ir/tutorials/tir_transformation.rst", "dev/how_to/debugging_tvm.rst", "dev/how_to/how_to.rst", "dev/how_to/relay_add_op.rst", "dev/how_to/relay_add_pass.rst", "dev/how_to/relay_bring_your_own_codegen.rst", "dev/tutorial/codebase_walkthrough.rst", "dev/tutorial/index.rst", "errors.rst", "genindex.rst", "get_started/overview.rst", "get_started/tutorials/index.rst", "get_started/tutorials/ir_module.rst", "get_started/tutorials/quick_start.rst", "get_started/tutorials/sg_execution_times.rst", "how_to/compile_models/from_coreml.rst", "how_to/compile_models/from_darknet.rst", "how_to/compile_models/from_keras.rst", "how_to/compile_models/from_onnx.rst", "how_to/compile_models/from_paddle.rst", "how_to/compile_models/from_pytorch.rst", "how_to/compile_models/from_tensorflow.rst", "how_to/compile_models/from_tflite.rst", "how_to/compile_models/index.rst", "how_to/compile_models/sg_execution_times.rst", "how_to/deploy/adreno.rst", "how_to/deploy/android.rst", "how_to/deploy/arm_compute_lib.rst", "how_to/deploy/bnns.rst", "how_to/deploy/cpp_deploy.rst", "how_to/deploy/hls.rst", "how_to/deploy/index.rst", "how_to/deploy/integrate.rst", "how_to/deploy/mrvl.rst", "how_to/deploy/tensorrt.rst", "how_to/deploy/vitis_ai.rst", "how_to/deploy_models/deploy_model_on_adreno.rst", "how_to/deploy_models/deploy_model_on_adreno_tvmc.rst", "how_to/deploy_models/deploy_model_on_android.rst", "how_to/deploy_models/deploy_model_on_nano.rst", "how_to/deploy_models/deploy_model_on_rasp.rst", "how_to/deploy_models/deploy_object_detection_pytorch.rst", "how_to/deploy_models/deploy_prequantized.rst", "how_to/deploy_models/deploy_prequantized_tflite.rst", "how_to/deploy_models/deploy_sparse.rst", "how_to/deploy_models/index.rst", "how_to/deploy_models/sg_execution_times.rst", "how_to/dev/index.rst", "how_to/dev/pytest_target_parametrization.rst", "how_to/dev/setup_rpc_system.rst", "how_to/extend_tvm/index.rst", "how_to/extend_tvm/low_level_custom_pass.rst", "how_to/extend_tvm/sg_execution_times.rst", "how_to/extend_tvm/use_pass_infra.rst", "how_to/extend_tvm/use_pass_instrument.rst", "how_to/legacy_index.rst", "how_to/optimize_operators/index.rst", "how_to/optimize_operators/opt_conv_cuda.rst", "how_to/optimize_operators/opt_conv_tensorcore.rst", "how_to/optimize_operators/opt_gemm.rst", "how_to/optimize_operators/sg_execution_times.rst", "how_to/profile/index.rst", "how_to/profile/papi.rst", "how_to/tune_with_autoscheduler/index.rst", "how_to/tune_with_autoscheduler/sg_execution_times.rst", "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.rst", "how_to/tune_with_autoscheduler/tune_network_arm.rst", "how_to/tune_with_autoscheduler/tune_network_cuda.rst", "how_to/tune_with_autoscheduler/tune_network_mali.rst", "how_to/tune_with_autoscheduler/tune_network_x86.rst", "how_to/tune_with_autoscheduler/tune_sparse_x86.rst", "how_to/tune_with_autotvm/index.rst", "how_to/tune_with_autotvm/sg_execution_times.rst", "how_to/tune_with_autotvm/tune_conv2d_cuda.rst", "how_to/tune_with_autotvm/tune_relay_arm.rst", "how_to/tune_with_autotvm/tune_relay_cuda.rst", "how_to/tune_with_autotvm/tune_relay_mobile_gpu.rst", "how_to/tune_with_autotvm/tune_relay_x86.rst", "how_to/tutorials/cross_compilation_and_rpc.rst", "how_to/tutorials/customize_opt.rst", "how_to/tutorials/e2e_opt_model.rst", "how_to/tutorials/index.rst", "how_to/tutorials/optimize_llm.rst", "how_to/tutorials/sg_execution_times.rst", "how_to/work_with_microtvm/index.rst", "how_to/work_with_microtvm/micro_aot.rst", "how_to/work_with_microtvm/micro_autotune.rst", "how_to/work_with_microtvm/micro_custom_ide.rst", "how_to/work_with_microtvm/micro_ethosu.rst", "how_to/work_with_microtvm/micro_mlperftiny.rst", "how_to/work_with_microtvm/micro_pytorch.rst", "how_to/work_with_microtvm/micro_tflite.rst", "how_to/work_with_microtvm/micro_train.rst", "how_to/work_with_microtvm/micro_tvmc.rst", "how_to/work_with_microtvm/sg_execution_times.rst", "how_to/work_with_relay/build_gcn.rst", "how_to/work_with_relay/index.rst", "how_to/work_with_relay/sg_execution_times.rst", "how_to/work_with_relay/using_external_lib.rst", "how_to/work_with_relay/using_pipeline_executor.rst", "how_to/work_with_relay/using_relay_viz.rst", "how_to/work_with_schedules/extern_op.rst", "how_to/work_with_schedules/index.rst", "how_to/work_with_schedules/reduction.rst", "how_to/work_with_schedules/scan.rst", "how_to/work_with_schedules/schedule_primitives.rst", "how_to/work_with_schedules/sg_execution_times.rst", "how_to/work_with_schedules/tedd.rst", "how_to/work_with_schedules/tensorize.rst", "how_to/work_with_schedules/tuple_inputs.rst", "index.rst", "install/docker.rst", "install/from_source.rst", "install/index.rst", "reference/api/links.rst", "reference/api/python/auto_scheduler.rst", "reference/api/python/autotvm.rst", "reference/api/python/contrib.rst", "reference/api/python/dlight.rst", "reference/api/python/driver.rst", "reference/api/python/error.rst", "reference/api/python/graph_executor.rst", "reference/api/python/index.rst", "reference/api/python/instrument.rst", "reference/api/python/ir.rst", "reference/api/python/meta_schedule.rst", "reference/api/python/micro.rst", "reference/api/python/relax/analysis.rst", "reference/api/python/relax/block_builder.rst", "reference/api/python/relax/frontend.rst", "reference/api/python/relax/op.rst", "reference/api/python/relax/relax.rst", "reference/api/python/relax/transform.rst", "reference/api/python/relay/analysis.rst", "reference/api/python/relay/backend.rst", "reference/api/python/relay/dataflow_pattern.rst", "reference/api/python/relay/frontend.rst", "reference/api/python/relay/image.rst", "reference/api/python/relay/index.rst", "reference/api/python/relay/nn.rst", "reference/api/python/relay/testing.rst", "reference/api/python/relay/transform.rst", "reference/api/python/relay/vision.rst", "reference/api/python/rpc.rst", "reference/api/python/runtime/disco.rst", "reference/api/python/runtime/ndarray.rst", "reference/api/python/runtime/profiling.rst", "reference/api/python/runtime/relax_vm.rst", "reference/api/python/runtime/runtime.rst", "reference/api/python/target.rst", "reference/api/python/te.rst", "reference/api/python/tir/analysis.rst", "reference/api/python/tir/schedule.rst", "reference/api/python/tir/stmt_functor.rst", "reference/api/python/tir/tir.rst", "reference/api/python/tir/transform.rst", "reference/api/python/topi.rst", "reference/api/python/transform.rst", "reference/langref/hybrid_script.rst", "reference/langref/index.rst", "reference/langref/relay_adt.rst", "reference/langref/relay_expr.rst", "reference/langref/relay_op.rst", "reference/langref/relay_pattern.rst", "reference/langref/relay_type.rst", "reference/publications.rst", "reference/security.rst", "sg_execution_times.rst", "topic/microtvm/index.rst", "tutorial/auto_scheduler_matmul_x86.rst", "tutorial/autotvm_matmul_x86.rst", "tutorial/autotvm_relay_x86.rst", "tutorial/index.rst", "tutorial/intro_topi.rst", "tutorial/introduction.rst", "tutorial/relay_quick_start.rst", "tutorial/sg_execution_times.rst", "tutorial/tensor_expr_get_started.rst", "tutorial/tensor_ir_blitz_course.rst", "tutorial/tvmc_command_line_driver.rst", "tutorial/tvmc_python.rst", "tutorial/uma.rst"], "indexentries": {"abs() (in module tvm.relax.op)": [[161, "tvm.relax.op.abs", false]], "abs() (in module tvm.te)": [[181, "tvm.te.abs", false]], "abs() (in module tvm.tir)": [[185, "tvm.tir.abs", false]], "access_ptr() (tvm.tir.buffer method)": [[185, "tvm.tir.Buffer.access_ptr", false]], "acos() (in module tvm.relax.op)": [[161, "tvm.relax.op.acos", false]], "acos() (in module tvm.te)": [[181, "tvm.te.acos", false]], "acos() (in module tvm.tir)": [[185, "tvm.tir.acos", false]], "acosh() (in module tvm.relax.op)": [[161, "tvm.relax.op.acosh", false]], "acosh() (in module tvm.te)": [[181, "tvm.te.acosh", false]], "acosh() (in module tvm.tir)": [[185, "tvm.tir.acosh", false]], "adaptive_avg_pool1d() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.adaptive_avg_pool1d", false]], "adaptive_avg_pool1d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.adaptive_avg_pool2d", false]], "adaptive_avg_pool2d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.adaptive_avg_pool3d", false]], "adaptive_avg_pool3d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.adaptive_avg_pool3d", false]], "adaptive_max_pool1d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.adaptive_max_pool1d", false]], "adaptive_max_pool2d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.adaptive_max_pool2d", false]], "adaptive_max_pool3d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.adaptive_max_pool3d", false]], "adaptive_pool() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.adaptive_pool", false]], "adaptive_pool1d() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.adaptive_pool1d", false]], "adaptive_pool3d() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.adaptive_pool3d", false]], "adaptivepool2dattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.AdaptivePool2DAttrs", false]], "add (class in tvm.tir)": [[185, "tvm.tir.Add", false]], "add() (in module tvm.relax.op)": [[161, "tvm.relax.op.add", false]], "add() (in module tvm.te)": [[181, "tvm.te.add", false]], "add() (in module tvm.tir)": [[185, "tvm.tir.add", false]], "add() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.add", false]], "add() (tvm.relax.dataflowblockrewrite method)": [[162, "tvm.relax.DataflowBlockRewrite.add", false]], "add_alter_layout() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.add_alter_layout", false]], "add_argument() (tvm.ir.op method)": [[155, "tvm.ir.Op.add_argument", false]], "add_flop() (tvm.autotvm.task.space.configspace method)": [[147, "tvm.autotvm.task.space.ConfigSpace.add_flop", false]], "add_func() (tvm.relax.block_builder.blockbuilder method)": [[159, "tvm.relax.block_builder.BlockBuilder.add_func", false]], "add_task() (tvm.autotvm.task.topi_integration.taskextractenv method)": [[147, "tvm.autotvm.task.topi_integration.TaskExtractEnv.add_task", false]], "add_type_rel() (tvm.ir.op method)": [[155, "tvm.ir.Op.add_type_rel", false]], "add_unit_loop() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.add_unit_loop", false]], "address_of() (in module tvm.tir)": [[185, "tvm.tir.address_of", false]], "adjustmatmulorder() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.AdjustMatmulOrder", false]], "affine_grid() (in module tvm.relay.image)": [[168, "tvm.relay.image.affine_grid", false]], "affine_grid() (in module tvm.topi.image)": [[187, "tvm.topi.image.affine_grid", false]], "all (tvm.tir.transform.hoistedconditionals attribute)": [[186, "tvm.tir.transform.HoistedConditionals.All", false]], "all (tvm.tir.transform.hoistedletbindings attribute)": [[186, "tvm.tir.transform.HoistedLetBindings.All", false]], "all() (in module tvm.te)": [[181, "tvm.te.all", false]], "all() (in module tvm.tir)": [[185, "tvm.tir.all", false]], "all_class_non_max_suppression() (in module tvm.relay.vision)": [[173, "tvm.relay.vision.all_class_non_max_suppression", false]], "all_dtypes() (in module tvm.relay.analysis)": [[164, "tvm.relay.analysis.all_dtypes", false]], "all_global_vars() (in module tvm.relax.analysis)": [[158, "tvm.relax.analysis.all_global_vars", false]], "all_type_vars() (in module tvm.relay.analysis)": [[164, "tvm.relay.analysis.all_type_vars", false]], "all_vars() (in module tvm.relax.analysis)": [[158, "tvm.relax.analysis.all_vars", false]], "all_vars() (in module tvm.relay.analysis)": [[164, "tvm.relay.analysis.all_vars", false]], "allgather() (in module tvm.relax.op.ccl)": [[161, "tvm.relax.op.ccl.allgather", false]], "allgather() (tvm.runtime.disco.session method)": [[175, "tvm.runtime.disco.Session.allgather", false]], "alloc_storage() (in module tvm.relax.op.memory)": [[161, "tvm.relax.op.memory.alloc_storage", false]], "alloc_tensor() (in module tvm.relax.op.builtin)": [[161, "tvm.relax.op.builtin.alloc_tensor", false]], "alloc_tensor() (in module tvm.relax.op.memory)": [[161, "tvm.relax.op.memory.alloc_tensor", false]], "allocate (class in tvm.tir)": [[185, "tvm.tir.Allocate", false]], "allocateconst (class in tvm.tir)": [[185, "tvm.tir.AllocateConst", false]], "allocateworkspace() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.AllocateWorkspace", false]], "allreduce() (in module tvm.relax.op.ccl)": [[161, "tvm.relax.op.ccl.allreduce", false]], "allreduce() (tvm.runtime.disco.session method)": [[175, "tvm.runtime.disco.Session.allreduce", false]], "alteropimpl() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.AlterOpImpl", false]], "alteroplayout() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.AlterOpLayout", false]], "altpattern (class in tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.AltPattern", false]], "and (class in tvm.tir)": [[185, "tvm.tir.And", false]], "annotate() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.annotate", false]], "annotate_buffer_access() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.annotate_buffer_access", false]], "annotate_sharding() (in module tvm.relax.op.distributed)": [[161, "tvm.relax.op.distributed.annotate_sharding", false]], "annotatedeviceregions() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.AnnotateDeviceRegions", false]], "annotatedregionset (class in tvm.relay.analysis)": [[164, "tvm.relay.analysis.AnnotatedRegionSet", false]], "annotateentity (class in tvm.autotvm.task.space)": [[147, "tvm.autotvm.task.space.AnnotateEntity", false]], "annotateentryfunc() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.AnnotateEntryFunc", false]], "annotatespace (class in tvm.autotvm.task.space)": [[147, "tvm.autotvm.task.space.AnnotateSpace", false]], "annotatespans() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.AnnotateSpans", false]], "annotatetarget() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.AnnotateTarget", false]], "annotatetiroppattern() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.AnnotateTIROpPattern", false]], "any (class in tvm.tir)": [[185, "tvm.tir.Any", false]], "any() (in module tvm.te)": [[181, "tvm.te.any", false]], "any() (in module tvm.tir)": [[185, "tvm.tir.any", false]], "append() (tvm.tir.schedule.trace method)": [[183, "tvm.tir.schedule.Trace.append", false]], "apply() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.Apply", false]], "apply() (tvm.autotvm.task.space.annotateentity method)": [[147, "tvm.autotvm.task.space.AnnotateEntity.apply", false]], "apply() (tvm.autotvm.task.space.reorderentity method)": [[147, "tvm.autotvm.task.space.ReorderEntity.apply", false]], "apply() (tvm.autotvm.task.space.splitentity method)": [[147, "tvm.autotvm.task.space.SplitEntity.apply", false]], "apply() (tvm.dlight.schedulerule method)": [[149, "tvm.dlight.ScheduleRule.apply", false]], "apply() (tvm.meta_schedule.measurecallback method)": [[156, "tvm.meta_schedule.MeasureCallback.apply", false]], "apply() (tvm.meta_schedule.mutator method)": [[156, "tvm.meta_schedule.Mutator.apply", false]], "apply() (tvm.meta_schedule.postproc method)": [[156, "tvm.meta_schedule.Postproc.apply", false]], "apply() (tvm.meta_schedule.schedulerule method)": [[156, "tvm.meta_schedule.ScheduleRule.apply", false]], "apply_best() (tvm.auto_scheduler.searchtask method)": [[146, "tvm.auto_scheduler.SearchTask.apply_best", false]], "apply_history_best() (in module tvm.autotvm)": [[147, "tvm.autotvm.apply_history_best", false]], "apply_json_to_schedule() (tvm.tir.schedule.trace static method)": [[183, "tvm.tir.schedule.Trace.apply_json_to_schedule", false]], "apply_prim_func_arg_and_result_memory_constraints() (in module tvm.tir.analysis.analysis)": [[182, "tvm.tir.analysis.analysis.apply_prim_func_arg_and_result_memory_constraints", false]], "apply_steps_from_state() (tvm.auto_scheduler.computedag method)": [[146, "tvm.auto_scheduler.ComputeDAG.apply_steps_from_state", false]], "apply_to_schedule() (tvm.tir.schedule.trace method)": [[183, "tvm.tir.schedule.Trace.apply_to_schedule", false]], "applyconfig (class in tvm.autotvm.task.dispatcher)": [[147, "tvm.autotvm.task.dispatcher.ApplyConfig", false]], "applydefaultschedule (class in tvm.dlight)": [[149, "tvm.dlight.ApplyDefaultSchedule", false]], "applyfixedconfig (class in tvm.autotvm.task.dispatcher)": [[147, "tvm.autotvm.task.dispatcher.ApplyFixedConfig", false]], "applygraphbest (class in tvm.autotvm.task.dispatcher)": [[147, "tvm.autotvm.task.dispatcher.ApplyGraphBest", false]], "applyhistorybest (class in tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.ApplyHistoryBest", false]], "applyhistorybest (class in tvm.autotvm.task.dispatcher)": [[147, "tvm.autotvm.task.dispatcher.ApplyHistoryBest", false]], "applyhistorybestorsample (class in tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.ApplyHistoryBestOrSample", false]], "applylayouttransforms() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.ApplyLayoutTransforms", false]], "applypasstofunction() (in module tvm.transform)": [[188, "tvm.transform.ApplyPassToFunction", false]], "arange() (in module tvm.relax.op)": [[161, "tvm.relax.op.arange", false]], "arch (tvm.target.target property)": [[180, "tvm.target.Target.arch", false]], "argmax() (in module tvm.relax.op)": [[161, "tvm.relax.op.argmax", false]], "argmaxargminattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.ArgmaxArgminAttrs", false]], "argmin() (in module tvm.relax.op)": [[161, "tvm.relax.op.argmin", false]], "args_to_workload() (in module tvm.autotvm.task.task)": [[147, "tvm.autotvm.task.task.args_to_workload", false]], "argsort() (in module tvm.relax.op)": [[161, "tvm.relax.op.argsort", false]], "argsortattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.ArgsortAttrs", false]], "arm_cpu() (in module tvm.target)": [[180, "tvm.target.arm_cpu", false]], "array (class in tvm.ir)": [[155, "tvm.ir.Array", false]], "array() (in module tvm.contrib.sparse)": [[148, "tvm.contrib.sparse.array", false]], "array() (in module tvm.runtime.ndarray)": [[176, "tvm.runtime.ndarray.array", false]], "as_json() (tvm.tir.schedule.trace method)": [[183, "tvm.tir.schedule.Trace.as_json", false]], "as_python() (tvm.relax.executable method)": [[162, "tvm.relax.Executable.as_python", false]], "as_python() (tvm.tir.schedule.trace method)": [[183, "tvm.tir.schedule.Trace.as_python", false]], "as_text() (tvm.relax.executable method)": [[162, "tvm.relax.Executable.as_text", false]], "asin() (in module tvm.relax.op)": [[161, "tvm.relax.op.asin", false]], "asin() (in module tvm.te)": [[181, "tvm.te.asin", false]], "asin() (in module tvm.tir)": [[185, "tvm.tir.asin", false]], "asinh() (in module tvm.relax.op)": [[161, "tvm.relax.op.asinh", false]], "asinh() (in module tvm.te)": [[181, "tvm.te.asinh", false]], "asinh() (in module tvm.tir)": [[185, "tvm.tir.asinh", false]], "asnumpy() (tvm.contrib.sparse.csrndarray method)": [[148, "tvm.contrib.sparse.CSRNDArray.asnumpy", false]], "asnumpy() (tvm.runtime.ndarray.ndarray method)": [[176, "tvm.runtime.ndarray.NDArray.asnumpy", false]], "asobject() (tvm.te.tensorslice method)": [[181, "tvm.te.TensorSlice.asobject", false]], "assert_op() (in module tvm.relax.op)": [[161, "tvm.relax.op.assert_op", false]], "assert_pure_function() (in module tvm.tir.analysis.analysis)": [[182, "tvm.tir.analysis.analysis.assert_pure_function", false]], "assert_structural_equal() (in module tvm.ir)": [[155, "tvm.ir.assert_structural_equal", false]], "assertstmt (class in tvm.tir)": [[185, "tvm.tir.AssertStmt", false]], "assume() (in module tvm.tir)": [[185, "tvm.tir.assume", false]], "astext() (in module tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.astext", false]], "astext() (tvm.ir.globalvar method)": [[155, "tvm.ir.GlobalVar.astext", false]], "astext() (tvm.ir.irmodule method)": [[155, "tvm.ir.IRModule.astext", false]], "astext() (tvm.ir.op method)": [[155, "tvm.ir.Op.astext", false]], "astext() (tvm.relay.dataflow_pattern.dfpattern method)": [[166, "tvm.relay.dataflow_pattern.DFPattern.astext", false]], "astype() (in module tvm.relax.op)": [[161, "tvm.relax.op.astype", false]], "astypeattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.AstypeAttrs", false]], "atan() (in module tvm.relax.op)": [[161, "tvm.relax.op.atan", false]], "atan() (in module tvm.te)": [[181, "tvm.te.atan", false]], "atan() (in module tvm.tir)": [[185, "tvm.tir.atan", false]], "atan2() (in module tvm.tir)": [[185, "tvm.tir.atan2", false]], "atanh() (in module tvm.relax.op)": [[161, "tvm.relax.op.atanh", false]], "atanh() (in module tvm.te)": [[181, "tvm.te.atanh", false]], "atanh() (in module tvm.tir)": [[185, "tvm.tir.atanh", false]], "attachattrlayoutfreebuffers() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.AttachAttrLayoutFreeBuffers", false]], "attachexternmodules (class in tvm.relax.transform)": [[163, "tvm.relax.transform.AttachExternModules", false]], "attachglobalsymbol() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.AttachGlobalSymbol", false]], "attention() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.attention", false]], "attention_var_len() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.attention_var_len", false]], "attrpattern (class in tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.AttrPattern", false]], "attrs (class in tvm.ir)": [[155, "tvm.ir.Attrs", false]], "attrs (tvm.ir.basefunc property)": [[155, "tvm.ir.BaseFunc.attrs", false]], "attrs (tvm.tir.schedule.instruction attribute)": [[183, "tvm.tir.schedule.Instruction.attrs", false]], "attrstmt (class in tvm.tir)": [[185, "tvm.tir.AttrStmt", false]], "auto_schedule() (in module tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.auto_schedule", false]], "autotvm_build_func() (in module tvm.micro)": [[157, "tvm.micro.autotvm_build_func", false]], "autotvmmoduleloader (class in tvm.micro)": [[157, "tvm.micro.AutoTvmModuleLoader", false]], "avg_pool1d() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.avg_pool1d", false]], "avg_pool1d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.avg_pool1d", false]], "avg_pool2d() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.avg_pool2d", false]], "avg_pool2d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.avg_pool2d", false]], "avg_pool2d_backward() (in module tvm.relax.op.grad)": [[161, "tvm.relax.op.grad.avg_pool2d_backward", false]], "avg_pool2d_grad() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.avg_pool2d_grad", false]], "avg_pool3d() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.avg_pool3d", false]], "avg_pool3d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.avg_pool3d", false]], "axis (class in tvm.autotvm.task.space)": [[147, "tvm.autotvm.task.space.Axis", false]], "axis (tvm.te.hybridop property)": [[181, "tvm.te.HybridOp.axis", false]], "axis (tvm.te.tensor property)": [[181, "tvm.te.Tensor.axis", false]], "axis() (tvm.autotvm.task.space.configspace static method)": [[147, "tvm.autotvm.task.space.ConfigSpace.axis", false]], "backward_index() (tvm.tir.bijectivelayout method)": [[185, "tvm.tir.BijectiveLayout.backward_index", false]], "backward_shape() (tvm.tir.bijectivelayout method)": [[185, "tvm.tir.BijectiveLayout.backward_shape", false]], "backwardfoldscaleaxis() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.BackwardFoldScaleAxis", false]], "basecheckresult (class in tvm.relax.analysis)": [[158, "tvm.relax.analysis.BaseCheckResult", false]], "baseexpr (class in tvm.ir)": [[155, "tvm.ir.BaseExpr", false]], "basefunc (class in tvm.ir)": [[155, "tvm.ir.BaseFunc", false]], "batch_flatten() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.batch_flatten", false]], "batch_matmul() (in module tvm.contrib.cblas)": [[148, "tvm.contrib.cblas.batch_matmul", false]], "batch_matmul() (in module tvm.contrib.cublas)": [[148, "tvm.contrib.cublas.batch_matmul", false]], "batch_matmul() (in module tvm.contrib.rocblas)": [[148, "tvm.contrib.rocblas.batch_matmul", false]], "batch_matmul() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.batch_matmul", false]], "batch_matmul() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.batch_matmul", false]], "batch_matmul_legalize() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.batch_matmul_legalize", false]], "batch_norm() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.batch_norm", false]], "batch_norm() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.batch_norm", false]], "batch_norm() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.batch_norm", false]], "batch_to_space_nd() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.batch_to_space_nd", false]], "batch_to_space_nd() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.batch_to_space_nd", false]], "batchingops() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.BatchingOps", false]], "batchnormattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.BatchNormAttrs", false]], "begin_scope() (tvm.relax.block_builder.blockbuilder method)": [[159, "tvm.relax.block_builder.BlockBuilder.begin_scope", false]], "benchmark() (tvm.contrib.graph_executor.graphmodule method)": [[152, "tvm.contrib.graph_executor.GraphModule.benchmark", false]], "bf16computelegalize() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.BF16ComputeLegalize", false]], "bf16storagelegalize() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.BF16StorageLegalize", false]], "bias_add() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.bias_add", false]], "bias_add_legalize() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.bias_add_legalize", false]], "bifrost() (in module tvm.target)": [[180, "tvm.target.bifrost", false]], "bijective_layout() (in module tvm.tir)": [[185, "tvm.tir.bijective_layout", false]], "bijectivelayout (class in tvm.tir)": [[185, "tvm.tir.BijectiveLayout", false]], "binarize_pack() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.binarize_pack", false]], "binary_dense() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.binary_dense", false]], "bind() (tvm.te.stage method)": [[181, "tvm.te.Stage.bind", false]], "bind() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.bind", false]], "bind_params() (tvm.relax.function method)": [[162, "tvm.relax.Function.bind_params", false]], "bind_symbolic_vars() (tvm.relax.function method)": [[162, "tvm.relax.Function.bind_symbolic_vars", false]], "binding (class in tvm.relax)": [[162, "tvm.relax.Binding", false]], "bindingblock (class in tvm.relax)": [[162, "tvm.relax.BindingBlock", false]], "bindparams() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.BindParams", false]], "bindsymbolicvars() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.BindSymbolicVars", false]], "bindtarget() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.BindTarget", false]], "bitpack() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.bitpack", false]], "bitpack() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.bitpack", false]], "bitserial_conv2d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.bitserial_conv2d", false]], "bitserial_conv2d_legalize() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.bitserial_conv2d_legalize", false]], "bitserial_conv2d_nchw() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.bitserial_conv2d_nchw", false]], "bitserial_conv2d_nhwc() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.bitserial_conv2d_nhwc", false]], "bitserial_dense() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.bitserial_dense", false]], "bitserial_dense() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.bitserial_dense", false]], "bitwise_and() (in module tvm.relax.op)": [[161, "tvm.relax.op.bitwise_and", false]], "bitwise_and() (in module tvm.tir)": [[185, "tvm.tir.bitwise_and", false]], "bitwise_not() (in module tvm.relax.op)": [[161, "tvm.relax.op.bitwise_not", false]], "bitwise_not() (in module tvm.tir)": [[185, "tvm.tir.bitwise_not", false]], "bitwise_or() (in module tvm.relax.op)": [[161, "tvm.relax.op.bitwise_or", false]], "bitwise_or() (in module tvm.tir)": [[185, "tvm.tir.bitwise_or", false]], "bitwise_xor() (in module tvm.relax.op)": [[161, "tvm.relax.op.bitwise_xor", false]], "bitwise_xor() (in module tvm.tir)": [[185, "tvm.tir.bitwise_xor", false]], "block (class in tvm.tir)": [[185, "tvm.tir.Block", false]], "blockbuilder (class in tvm.relax.block_builder)": [[159, "tvm.relax.block_builder.BlockBuilder", false]], "blockdependenceinfo (class in tvm.tir)": [[185, "tvm.tir.BlockDependenceInfo", false]], "blockinfo (class in tvm.dlight)": [[149, "tvm.dlight.BlockInfo", false]], "blockize() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.blockize", false]], "blockrealize (class in tvm.tir)": [[185, "tvm.tir.BlockRealize", false]], "blockrv (class in tvm.tir.schedule)": [[183, "tvm.tir.schedule.BlockRV", false]], "blockscope (class in tvm.tir.schedule)": [[183, "tvm.tir.schedule.BlockScope", false]], "booleanexpression (tvm.tir.transform.hoistedconditionals attribute)": [[186, "tvm.tir.transform.HoistedConditionals.BooleanExpression", false]], "bound_type_vars() (in module tvm.relay.analysis)": [[164, "tvm.relay.analysis.bound_type_vars", false]], "bound_vars() (in module tvm.relax.analysis)": [[158, "tvm.relax.analysis.bound_vars", false]], "bound_vars() (in module tvm.relay.analysis)": [[164, "tvm.relay.analysis.bound_vars", false]], "broadcast (class in tvm.tir)": [[185, "tvm.tir.Broadcast", false]], "broadcast() (tvm.runtime.disco.session method)": [[175, "tvm.runtime.disco.Session.broadcast", false]], "broadcast_from_worker0() (in module tvm.relax.op.ccl)": [[161, "tvm.relax.op.ccl.broadcast_from_worker0", false]], "broadcast_from_worker0() (tvm.runtime.disco.session method)": [[175, "tvm.runtime.disco.Session.broadcast_from_worker0", false]], "broadcast_to() (in module tvm.relax.op)": [[161, "tvm.relax.op.broadcast_to", false]], "buffer (class in tvm.tir)": [[185, "tvm.tir.Buffer", false]], "bufferload (class in tvm.tir)": [[185, "tvm.tir.BufferLoad", false]], "bufferrealize (class in tvm.tir)": [[185, "tvm.tir.BufferRealize", false]], "bufferregion (class in tvm.tir)": [[185, "tvm.tir.BufferRegion", false]], "bufferstore (class in tvm.tir)": [[185, "tvm.tir.BufferStore", false]], "build() (in module tvm)": [[150, "tvm.build", false]], "build() (in module tvm.relax)": [[162, "tvm.relax.build", false]], "build() (in module tvm.te.hybrid)": [[181, "tvm.te.hybrid.build", false]], "build() (tvm.meta_schedule.builder method)": [[156, "tvm.meta_schedule.Builder.build", false]], "build_config() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.build_config", false]], "builder (class in tvm.meta_schedule)": [[156, "tvm.meta_schedule.Builder", false]], "bundlemodelparams() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.BundleModelParams", false]], "c() (tvm.relax.execbuilder method)": [[162, "tvm.relax.ExecBuilder.c", false]], "cache (class in tvm.contrib.pickle_memoize)": [[148, "tvm.contrib.pickle_memoize.Cache", false]], "cache (tvm.contrib.pickle_memoize.cache property)": [[148, "tvm.contrib.pickle_memoize.Cache.cache", false]], "cache_index() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.cache_index", false]], "cache_inplace() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.cache_inplace", false]], "cache_read() (tvm.te.schedule method)": [[181, "tvm.te.Schedule.cache_read", false]], "cache_read() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.cache_read", false]], "cache_write() (tvm.te.schedule method)": [[181, "tvm.te.Schedule.cache_write", false]], "cache_write() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.cache_write", false]], "calculate_allocated_bytes() (in module tvm.tir.analysis.analysis)": [[182, "tvm.tir.analysis.analysis.calculate_allocated_bytes", false]], "calculate_constant_bytes() (in module tvm.tir.analysis.analysis)": [[182, "tvm.tir.analysis.analysis.calculate_constant_bytes", false]], "calculate_workspace_bytes() (in module tvm.tir.analysis.analysis)": [[182, "tvm.tir.analysis.analysis.calculate_workspace_bytes", false]], "call (class in tvm.relax)": [[162, "tvm.relax.Call", false]], "call (class in tvm.tir)": [[185, "tvm.tir.Call", false]], "call_builtin_with_ctx() (in module tvm.relax.op)": [[161, "tvm.relax.op.call_builtin_with_ctx", false]], "call_cpacked() (in module tvm.tir)": [[185, "tvm.tir.call_cpacked", false]], "call_cpacked_lowered() (in module tvm.tir)": [[185, "tvm.tir.call_cpacked_lowered", false]], "call_dps_packed() (in module tvm.relax)": [[162, "tvm.relax.call_dps_packed", false]], "call_dps_packed() (in module tvm.relax.op)": [[161, "tvm.relax.op.call_dps_packed", false]], "call_extern() (in module tvm.tir)": [[185, "tvm.tir.call_extern", false]], "call_inplace_packed() (in module tvm.relax.op)": [[161, "tvm.relax.op.call_inplace_packed", false]], "call_intrin() (in module tvm.tir)": [[185, "tvm.tir.call_intrin", false]], "call_llvm_intrin() (in module tvm.tir)": [[185, "tvm.tir.call_llvm_intrin", false]], "call_llvm_pure_intrin() (in module tvm.tir)": [[185, "tvm.tir.call_llvm_pure_intrin", false]], "call_packed() (in module tvm.tir)": [[185, "tvm.tir.call_packed", false]], "call_packed() (tvm.runtime.disco.session method)": [[175, "tvm.runtime.disco.Session.call_packed", false]], "call_packed_lowered() (in module tvm.tir)": [[185, "tvm.tir.call_packed_lowered", false]], "call_pure_extern() (in module tvm.tir)": [[185, "tvm.tir.call_pure_extern", false]], "call_pure_packed() (in module tvm.relax)": [[162, "tvm.relax.call_pure_packed", false]], "call_pure_packed() (in module tvm.relax.op)": [[161, "tvm.relax.op.call_pure_packed", false]], "call_te() (tvm.relax.block_builder.blockbuilder method)": [[159, "tvm.relax.block_builder.BlockBuilder.call_te", false]], "call_te_with_grad() (tvm.relax.block_builder.blockbuilder method)": [[159, "tvm.relax.block_builder.BlockBuilder.call_te_with_grad", false]], "call_tir() (in module tvm.relax)": [[162, "tvm.relax.call_tir", false]], "call_tir() (in module tvm.relax.op)": [[161, "tvm.relax.op.call_tir", false]], "call_tir() (in module tvm.tir)": [[185, "tvm.tir.call_tir", false]], "call_tir_inplace() (in module tvm.relax)": [[162, "tvm.relax.call_tir_inplace", false]], "call_tir_inplace() (in module tvm.relax.op)": [[161, "tvm.relax.op.call_tir_inplace", false]], "call_tir_local_view() (in module tvm.relax.op.distributed)": [[161, "tvm.relax.op.distributed.call_tir_local_view", false]], "call_tir_with_grad() (in module tvm.relax)": [[162, "tvm.relax.call_tir_with_grad", false]], "call_tir_with_grad() (in module tvm.relax.op)": [[161, "tvm.relax.op.call_tir_with_grad", false]], "callback() (tvm.relay.dataflow_pattern.dfpatterncallback method)": [[166, "tvm.relay.dataflow_pattern.DFPatternCallback.callback", false]], "calleffectkind (class in tvm.tir)": [[185, "tvm.tir.CallEffectKind", false]], "callgraph (class in tvm.relay.analysis)": [[164, "tvm.relay.analysis.CallGraph", false]], "callingconv (class in tvm.ir)": [[155, "tvm.ir.CallingConv", false]], "callpattern (class in tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.CallPattern", false]], "calls (tvm.runtime.profiling.report attribute)": [[177, "tvm.runtime.profiling.Report.calls", false]], "calltirrewrite() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.CallTIRRewrite", false]], "calltirwithgradattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.CallTIRWithGradAttrs", false]], "can_convert_multiply_to_intdiv() (in module tvm.topi.image)": [[187, "tvm.topi.image.can_convert_multiply_to_intdiv", false]], "can_decompose_padding() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.can_decompose_padding", false]], "canon_multi_target() (tvm.target.target static method)": [[180, "tvm.target.Target.canon_multi_target", false]], "canon_multi_target_and_host() (tvm.target.target static method)": [[180, "tvm.target.Target.canon_multi_target_and_host", false]], "canon_target() (tvm.target.target static method)": [[180, "tvm.target.Target.canon_target", false]], "canon_target_and_host() (tvm.target.target static method)": [[180, "tvm.target.Target.canon_target_and_host", false]], "canon_target_map_and_host() (tvm.target.target static method)": [[180, "tvm.target.Target.canon_target_map_and_host", false]], "canonicalizebindings() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.CanonicalizeBindings", false]], "canonicalizecast() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.CanonicalizeCast", false]], "canonicalizeops() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.CanonicalizeOps", false]], "capturepostdfsindexinspans() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.CapturePostDfsIndexInSpans", false]], "cast (class in tvm.tir)": [[185, "tvm.tir.Cast", false]], "ccachekey (class in tvm.relay.backend.te_compiler)": [[165, "tvm.relay.backend.te_compiler.CCacheKey", false]], "ccachevalue (class in tvm.relay.backend.te_compiler)": [[165, "tvm.relay.backend.te_compiler.CCacheValue", false]], "ceil() (in module tvm.relax.op)": [[161, "tvm.relax.op.ceil", false]], "ceil() (in module tvm.te)": [[181, "tvm.te.ceil", false]], "ceil() (in module tvm.tir)": [[185, "tvm.tir.ceil", false]], "ceildiv() (in module tvm.tir)": [[185, "tvm.tir.ceildiv", false]], "changebatch (class in tvm.relay.transform)": [[172, "tvm.relay.transform.ChangeBatch", false]], "changedatatype (class in tvm.relay.frontend)": [[167, "tvm.relay.frontend.ChangeDatatype", false]], "check_basic_block_normal_form() (in module tvm.relay.analysis)": [[164, "tvm.relay.analysis.check_basic_block_normal_form", false]], "check_constant() (in module tvm.relay.analysis)": [[164, "tvm.relay.analysis.check_constant", false]], "check_grad() (in module tvm.relay.testing)": [[171, "tvm.relay.testing.check_grad", false]], "check_kind() (in module tvm.relay.analysis)": [[164, "tvm.relay.analysis.check_kind", false]], "check_workload_key() (tvm.auto_scheduler.recordreader method)": [[146, "tvm.auto_scheduler.RecordReader.check_workload_key", false]], "checked_type (tvm.ir.relayexpr property)": [[155, "tvm.ir.RelayExpr.checked_type", false]], "cl() (in module tvm.runtime.ndarray)": [[176, "tvm.runtime.ndarray.cl", false]], "cl() (tvm.rpc.rpcsession method)": [[174, "tvm.rpc.RPCSession.cl", false]], "clear() (tvm.relay.backend.te_compiler.tecompiler method)": [[165, "tvm.relay.backend.te_compiler.TECompiler.clear", false]], "clear_cache() (tvm.autotvm.task.dispatcher.fallbackcontext method)": [[147, "tvm.autotvm.task.dispatcher.FallbackContext.clear_cache", false]], "clear_cache() (tvm.autotvm.task.space.configspace method)": [[147, "tvm.autotvm.task.space.ConfigSpace.clear_cache", false]], "clear_fallback_cache() (in module tvm.autotvm.task.dispatcher)": [[147, "tvm.autotvm.task.dispatcher.clear_fallback_cache", false]], "clip() (in module tvm.relax.op)": [[161, "tvm.relax.op.clip", false]], "clone() (tvm.meta_schedule.mutator method)": [[156, "tvm.meta_schedule.Mutator.clone", false]], "clone() (tvm.meta_schedule.postproc method)": [[156, "tvm.meta_schedule.Postproc.clone", false]], "clone() (tvm.meta_schedule.schedulerule method)": [[156, "tvm.meta_schedule.ScheduleRule.clone", false]], "clone() (tvm.meta_schedule.searchstrategy method)": [[156, "tvm.meta_schedule.SearchStrategy.clone", false]], "clone() (tvm.meta_schedule.spacegenerator method)": [[156, "tvm.meta_schedule.SpaceGenerator.clone", false]], "clone() (tvm.meta_schedule.tunecontext method)": [[156, "tvm.meta_schedule.TuneContext.clone", false]], "close() (tvm.micro.transportlogger method)": [[157, "tvm.micro.TransportLogger.close", false]], "close() (tvm.rpc.trackersession method)": [[174, "tvm.rpc.TrackerSession.close", false]], "clz() (in module tvm.tir)": [[185, "tvm.tir.clz", false]], "codegen() (tvm.relay.backend.graph_executor_codegen.graphexecutorcodegen method)": [[165, "tvm.relay.backend.graph_executor_codegen.GraphExecutorCodegen.codegen", false]], "codegen() (tvm.relay.backend.vm.vmcompiler method)": [[165, "tvm.relay.backend.vm.VMCompiler.codegen", false]], "collagepartition() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.CollagePartition", false]], "collapse_sum_like() (in module tvm.relax.op)": [[161, "tvm.relax.op.collapse_sum_like", false]], "collapse_sum_to() (in module tvm.relax.op)": [[161, "tvm.relax.op.collapse_sum_to", false]], "collect_non_negative_expressions() (in module tvm.relax.analysis)": [[158, "tvm.relax.analysis.collect_non_negative_expressions", false]], "combinecontextcall() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.CombineContextCall", false]], "combineparallelbatchmatmul() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.CombineParallelBatchMatmul", false]], "combineparallelconv2d() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.CombineParallelConv2D", false]], "combineparalleldense() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.CombineParallelDense", false]], "combineparallelmatmul() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.CombineParallelMatmul", false]], "comm_reducer() (in module tvm.te)": [[181, "tvm.te.comm_reducer", false]], "comm_reducer() (in module tvm.tir)": [[185, "tvm.tir.comm_reducer", false]], "commit_tuning_record() (tvm.meta_schedule.database method)": [[156, "tvm.meta_schedule.Database.commit_tuning_record", false]], "commit_workload() (tvm.meta_schedule.database method)": [[156, "tvm.meta_schedule.Database.commit_workload", false]], "commonsubexprelimtir() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.CommonSubexprElimTIR", false]], "commreducer (class in tvm.tir)": [[185, "tvm.tir.CommReducer", false]], "compactbufferallocation() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.CompactBufferAllocation", false]], "compile() (in module tvm.relay.backend.vm)": [[165, "tvm.relay.backend.vm.compile", false]], "compile_coreml() (in module tvm.contrib.xcode)": [[148, "tvm.contrib.xcode.compile_coreml", false]], "compile_cuda() (in module tvm.contrib.nvcc)": [[148, "tvm.contrib.nvcc.compile_cuda", false]], "compile_metal() (in module tvm.contrib.xcode)": [[148, "tvm.contrib.xcode.compile_metal", false]], "computable_at_compile_time() (in module tvm.relax.analysis)": [[158, "tvm.relax.analysis.computable_at_compile_time", false]], "compute() (in module tvm.te)": [[181, "tvm.te.compute", false]], "compute_at() (tvm.te.stage method)": [[181, "tvm.te.Stage.compute_at", false]], "compute_at() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.compute_at", false]], "compute_flop() (in module tvm.autotvm.task.task)": [[147, "tvm.autotvm.task.task.compute_flop", false]], "compute_inline() (tvm.te.stage method)": [[181, "tvm.te.Stage.compute_inline", false]], "compute_inline() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.compute_inline", false]], "compute_root() (tvm.te.stage method)": [[181, "tvm.te.Stage.compute_root", false]], "computedag (class in tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.ComputeDAG", false]], "computeop (class in tvm.te)": [[181, "tvm.te.ComputeOp", false]], "computeprimvalue() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.ComputePrimValue", false]], "concat() (in module tvm.relax.op)": [[161, "tvm.relax.op.concat", false]], "concatattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.ConcatAttrs", false]], "concatenate() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.concatenate", false]], "concrete_shape (tvm.ir.tensortype property)": [[155, "tvm.ir.TensorType.concrete_shape", false]], "configentity (class in tvm.autotvm.task.space)": [[147, "tvm.autotvm.task.space.ConfigEntity", false]], "configspace (class in tvm.autotvm.task.space)": [[147, "tvm.autotvm.task.space.ConfigSpace", false]], "connect() (in module tvm.rpc)": [[174, "tvm.rpc.connect", false]], "connect_tracker() (in module tvm.rpc)": [[174, "tvm.rpc.connect_tracker", false]], "const() (in module tvm.relax)": [[162, "tvm.relax.const", false]], "const() (in module tvm.relay.image)": [[168, "tvm.relay.image.const", false]], "const() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.const", false]], "const() (in module tvm.te)": [[181, "tvm.te.const", false]], "constant (class in tvm.relax)": [[162, "tvm.relax.Constant", false]], "constant (class in tvm.relay.nn)": [[170, "tvm.relay.nn.Constant", false]], "constantmemorypools (class in tvm.ir)": [[155, "tvm.ir.ConstantMemoryPools", false]], "constantpattern (class in tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.ConstantPattern", false]], "constantpoolinfo (class in tvm.ir)": [[155, "tvm.ir.ConstantPoolInfo", false]], "constructor (class in tvm.ir)": [[155, "tvm.ir.Constructor", false]], "constructorvalue (class in tvm.relay.backend.interpreter)": [[165, "tvm.relay.backend.interpreter.ConstructorValue", false]], "contains_impure_call() (in module tvm.relax.analysis)": [[158, "tvm.relax.analysis.contains_impure_call", false]], "contrib_conv2d_gemm_weight_transform() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.contrib_conv2d_gemm_weight_transform", false]], "contrib_conv2d_gemm_without_weight_transform() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.contrib_conv2d_gemm_without_weight_transform", false]], "contrib_conv2d_nchwc() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.contrib_conv2d_nchwc", false]], "contrib_conv2d_winograd_nnpack_weight_transform() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.contrib_conv2d_winograd_nnpack_weight_transform", false]], "contrib_conv2d_winograd_weight_transform() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.contrib_conv2d_winograd_weight_transform", false]], "contrib_conv2d_winograd_without_weight_transform() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.contrib_conv2d_winograd_without_weight_transform", false]], "contrib_conv3d_winograd_weight_transform() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.contrib_conv3d_winograd_weight_transform", false]], "contrib_conv3d_winograd_without_weight_transform() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.contrib_conv3d_winograd_without_weight_transform", false]], "contrib_dense_pack() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.contrib_dense_pack", false]], "contrib_depthwise_conv2d_nchwc() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.contrib_depthwise_conv2d_nchwc", false]], "conv() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv", false]], "conv1d() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.conv1d", false]], "conv1d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.conv1d", false]], "conv1d() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv1d", false]], "conv1d_ncw() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv1d_ncw", false]], "conv1d_nwc() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv1d_nwc", false]], "conv1d_transpose() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.conv1d_transpose", false]], "conv1d_transpose() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.conv1d_transpose", false]], "conv1d_transpose_ncw() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv1d_transpose_ncw", false]], "conv2d() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.conv2d", false]], "conv2d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.conv2d", false]], "conv2d() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv2d", false]], "conv2d_alter_layout() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv2d_alter_layout", false]], "conv2d_backward_weight() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.conv2d_backward_weight", false]], "conv2d_forward() (in module tvm.contrib.miopen)": [[148, "tvm.contrib.miopen.conv2d_forward", false]], "conv2d_gemm_weight_transform() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv2d_gemm_weight_transform", false]], "conv2d_hwcn() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv2d_hwcn", false]], "conv2d_infer_layout() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv2d_infer_layout", false]], "conv2d_legalize() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv2d_legalize", false]], "conv2d_nchw() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv2d_nchw", false]], "conv2d_nchwc() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv2d_NCHWc", false]], "conv2d_nchwc_int8() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv2d_NCHWc_int8", false]], "conv2d_nhwc() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv2d_nhwc", false]], "conv2d_transpose() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.conv2d_transpose", false]], "conv2d_transpose() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.conv2d_transpose", false]], "conv2d_transpose_alter_layout() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv2d_transpose_alter_layout", false]], "conv2d_transpose_legalize() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv2d_transpose_legalize", false]], "conv2d_transpose_nchw() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv2d_transpose_nchw", false]], "conv2d_transpose_nchw_preprocess() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv2d_transpose_nchw_preprocess", false]], "conv2d_winograd_nchw() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv2d_winograd_nchw", false]], "conv2d_winograd_nchw_without_weight_transform() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv2d_winograd_nchw_without_weight_transform", false]], "conv2d_winograd_nhwc() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv2d_winograd_nhwc", false]], "conv2d_winograd_nhwc_without_weight_transform() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv2d_winograd_nhwc_without_weight_transform", false]], "conv2d_winograd_nnpack_weight_transform() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv2d_winograd_nnpack_weight_transform", false]], "conv2d_winograd_weight_transform() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv2d_winograd_weight_transform", false]], "conv2dattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.Conv2DAttrs", false]], "conv2dtosparse() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.Conv2dToSparse", false]], "conv2dtosparse2() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.Conv2dToSparse2", false]], "conv2dtransposeattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.Conv2DTransposeAttrs", false]], "conv3d() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.conv3d", false]], "conv3d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.conv3d", false]], "conv3d_alter_layout() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv3d_alter_layout", false]], "conv3d_ncdhw() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv3d_ncdhw", false]], "conv3d_ndhwc() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv3d_ndhwc", false]], "conv3d_transpose() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.conv3d_transpose", false]], "conv3d_transpose_legalize() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv3d_transpose_legalize", false]], "conv3d_transpose_ncdhw() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv3d_transpose_ncdhw", false]], "conv3d_transpose_ncdhw_preprocess() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv3d_transpose_ncdhw_preprocess", false]], "conv3d_winograd_weight_transform() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.conv3d_winograd_weight_transform", false]], "conv3dattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.Conv3DAttrs", false]], "conv_block() (in module tvm.relay.testing.mobilenet)": [[171, "tvm.relay.testing.mobilenet.conv_block", false]], "convert_func() (in module tvm.contrib.dlpack)": [[148, "tvm.contrib.dlpack.convert_func", false]], "convert_to_expr() (in module tvm.relax)": [[162, "tvm.relax.convert_to_expr", false]], "convertblockstoopaque() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.ConvertBlocksToOpaque", false]], "convertforloopstoserial() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.ConvertForLoopsToSerial", false]], "convertlayout() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.ConvertLayout", false]], "convertlayout() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.ConvertLayout", false]], "convertssa() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.ConvertSSA", false]], "converttodataflow() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.ConvertToDataflow", false]], "convolution_inference() (in module tvm.contrib.nnpack)": [[148, "tvm.contrib.nnpack.convolution_inference", false]], "convolution_inference_weight_transform() (in module tvm.contrib.nnpack)": [[148, "tvm.contrib.nnpack.convolution_inference_weight_transform", false]], "convolution_inference_without_weight_transform() (in module tvm.contrib.nnpack)": [[148, "tvm.contrib.nnpack.convolution_inference_without_weight_transform", false]], "coprocsync() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.CoProcSync", false]], "copy() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.copy", false]], "copy_crt_config_header() (in module tvm.micro)": [[157, "tvm.micro.copy_crt_config_header", false]], "copy_from_worker_0() (tvm.runtime.disco.session method)": [[175, "tvm.runtime.disco.Session.copy_from_worker_0", false]], "copy_to_worker_0() (tvm.runtime.disco.session method)": [[175, "tvm.runtime.disco.Session.copy_to_worker_0", false]], "copyfrom() (tvm.runtime.ndarray.ndarray method)": [[176, "tvm.runtime.ndarray.NDArray.copyfrom", false]], "copysign() (in module tvm.tir)": [[185, "tvm.tir.copysign", false]], "copyto() (tvm.runtime.ndarray.ndarray method)": [[176, "tvm.runtime.ndarray.NDArray.copyto", false]], "correlation() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.correlation", false]], "correlation_nchw() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.correlation_nchw", false]], "cos() (in module tvm.relax.op)": [[161, "tvm.relax.op.cos", false]], "cos() (in module tvm.te)": [[181, "tvm.te.cos", false]], "cos() (in module tvm.tir)": [[185, "tvm.tir.cos", false]], "cosh() (in module tvm.relax.op)": [[161, "tvm.relax.op.cosh", false]], "cosh() (in module tvm.te)": [[181, "tvm.te.cosh", false]], "cosh() (in module tvm.tir)": [[185, "tvm.tir.cosh", false]], "costmodel (class in tvm.meta_schedule)": [[156, "tvm.meta_schedule.CostModel", false]], "count (class in tvm.runtime.profiling)": [[177, "tvm.runtime.profiling.Count", false]], "count() (in module tvm.relay.testing)": [[171, "tvm.relay.testing.count", false]], "count_layers() (in module tvm.relay.analysis)": [[164, "tvm.relay.analysis.count_layers", false]], "count_ops() (in module tvm.relay.testing)": [[171, "tvm.relay.testing.count_ops", false]], "cpu() (in module tvm.relay.analysis)": [[164, "tvm.relay.analysis.cpu", false]], "cpu() (in module tvm.runtime.ndarray)": [[176, "tvm.runtime.ndarray.cpu", false]], "cpu() (tvm.rpc.rpcsession method)": [[174, "tvm.rpc.RPCSession.cpu", false]], "create() (in module tvm.autotvm.task.task)": [[147, "tvm.autotvm.task.task.create", false]], "create() (in module tvm.contrib.graph_executor)": [[152, "tvm.contrib.graph_executor.create", false]], "create() (in module tvm.target)": [[180, "tvm.target.create", false]], "create() (tvm.meta_schedule.builder static method)": [[156, "tvm.meta_schedule.Builder.create", false]], "create() (tvm.meta_schedule.costmodel static method)": [[156, "tvm.meta_schedule.CostModel.create", false]], "create() (tvm.meta_schedule.database static method)": [[156, "tvm.meta_schedule.Database.create", false]], "create() (tvm.meta_schedule.featureextractor static method)": [[156, "tvm.meta_schedule.FeatureExtractor.create", false]], "create() (tvm.meta_schedule.measurecallback static method)": [[156, "tvm.meta_schedule.MeasureCallback.create", false]], "create() (tvm.meta_schedule.mutator static method)": [[156, "tvm.meta_schedule.Mutator.create", false]], "create() (tvm.meta_schedule.postproc static method)": [[156, "tvm.meta_schedule.Postproc.create", false]], "create() (tvm.meta_schedule.runner static method)": [[156, "tvm.meta_schedule.Runner.create", false]], "create() (tvm.meta_schedule.schedulerule static method)": [[156, "tvm.meta_schedule.ScheduleRule.create", false]], "create() (tvm.meta_schedule.searchstrategy static method)": [[156, "tvm.meta_schedule.SearchStrategy.create", false]], "create() (tvm.meta_schedule.spacegenerator static method)": [[156, "tvm.meta_schedule.SpaceGenerator.create", false]], "create() (tvm.meta_schedule.taskscheduler static method)": [[156, "tvm.meta_schedule.TaskScheduler.create", false]], "create_barriers() (in module tvm.tir)": [[185, "tvm.tir.create_barriers", false]], "create_dylib() (in module tvm.contrib.xcode)": [[148, "tvm.contrib.xcode.create_dylib", false]], "create_empty() (tvm.relax.function static method)": [[162, "tvm.relax.Function.create_empty", false]], "create_executable() (in module tvm.contrib.cc)": [[148, "tvm.contrib.cc.create_executable", false]], "create_graph() (tvm.contrib.relay_viz.dot.dotplotter method)": [[148, "tvm.contrib.relay_viz.dot.DotPlotter.create_graph", false]], "create_graph() (tvm.contrib.relay_viz.interface.plotter method)": [[148, "tvm.contrib.relay_viz.interface.Plotter.create_graph", false]], "create_graph() (tvm.contrib.relay_viz.terminal.termplotter method)": [[148, "tvm.contrib.relay_viz.terminal.TermPlotter.create_graph", false]], "create_group() (tvm.te.schedule method)": [[181, "tvm.te.Schedule.create_group", false]], "create_llvm() (in module tvm.contrib.clang)": [[148, "tvm.contrib.clang.create_llvm", false]], "create_local_aot_executor() (in module tvm.micro)": [[157, "tvm.micro.create_local_aot_executor", false]], "create_local_debug_executor() (in module tvm.micro)": [[157, "tvm.micro.create_local_debug_executor", false]], "create_local_graph_executor() (in module tvm.micro)": [[157, "tvm.micro.create_local_graph_executor", false]], "create_measure_batch() (in module tvm.autotvm.measure)": [[147, "tvm.autotvm.measure.create_measure_batch", false]], "create_prim_func() (in module tvm.te)": [[181, "tvm.te.create_prim_func", false]], "create_schedule() (in module tvm.te)": [[181, "tvm.te.create_schedule", false]], "create_shared() (in module tvm.contrib.cc)": [[148, "tvm.contrib.cc.create_shared", false]], "create_shared() (in module tvm.contrib.ndk)": [[148, "tvm.contrib.ndk.create_shared", false]], "create_staticlib() (in module tvm.contrib.cc)": [[148, "tvm.contrib.cc.create_staticlib", false]], "create_staticlib() (in module tvm.contrib.ndk)": [[148, "tvm.contrib.ndk.create_staticlib", false]], "create_task() (in module tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.create_task", false]], "create_tvmjs_wasm() (in module tvm.contrib.emcc)": [[148, "tvm.contrib.emcc.create_tvmjs_wasm", false]], "create_workload() (in module tvm.relay.testing)": [[171, "tvm.relay.testing.create_workload", false]], "crop_and_resize() (in module tvm.relay.image)": [[168, "tvm.relay.image.crop_and_resize", false]], "crop_and_resize() (in module tvm.topi.image)": [[187, "tvm.topi.image.crop_and_resize", false]], "cross_compiler() (in module tvm.contrib.cc)": [[148, "tvm.contrib.cc.cross_compiler", false]], "cross_entropy() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.cross_entropy", false]], "cross_entropy_with_logits() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.cross_entropy_with_logits", false]], "cross_entropy_with_logits() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.cross_entropy_with_logits", false]], "csrmm() (in module tvm.topi.sparse)": [[187, "tvm.topi.sparse.csrmm", false]], "csrmv() (in module tvm.topi.sparse)": [[187, "tvm.topi.sparse.csrmv", false]], "csrndarray (class in tvm.contrib.sparse)": [[148, "tvm.contrib.sparse.CSRNDArray", false]], "csrplaceholderop (class in tvm.contrib.sparse)": [[148, "tvm.contrib.sparse.CSRPlaceholderOp", false]], "csv() (tvm.runtime.profiling.report method)": [[177, "tvm.runtime.profiling.Report.csv", false]], "cuda() (in module tvm.runtime.ndarray)": [[176, "tvm.runtime.ndarray.cuda", false]], "cuda() (in module tvm.target)": [[180, "tvm.target.cuda", false]], "cuda() (tvm.rpc.rpcsession method)": [[174, "tvm.rpc.RPCSession.cuda", false]], "cumprod() (in module tvm.relax.op)": [[161, "tvm.relax.op.cumprod", false]], "cumsum() (in module tvm.relax.op)": [[161, "tvm.relax.op.cumsum", false]], "current() (tvm.meta_schedule.database static method)": [[156, "tvm.meta_schedule.Database.current", false]], "current() (tvm.meta_schedule.profiler static method)": [[156, "tvm.meta_schedule.Profiler.current", false]], "current() (tvm.relax.block_builder.blockbuilder static method)": [[159, "tvm.relax.block_builder.BlockBuilder.current", false]], "current() (tvm.target.target static method)": [[180, "tvm.target.Target.current", false]], "current() (tvm.te.specializedcondition static method)": [[181, "tvm.te.SpecializedCondition.current", false]], "current() (tvm.transform.passcontext static method)": [[188, "tvm.transform.PassContext.current", false]], "current_block_is_dataflow() (tvm.relax.block_builder.blockbuilder method)": [[159, "tvm.relax.block_builder.BlockBuilder.current_block_is_dataflow", false]], "database (class in tvm.meta_schedule)": [[156, "tvm.meta_schedule.Database", false]], "dataflow() (tvm.relax.block_builder.blockbuilder method)": [[159, "tvm.relax.block_builder.BlockBuilder.dataflow", false]], "dataflowblock (class in tvm.relax)": [[162, "tvm.relax.DataflowBlock", false]], "dataflowblock_pass() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.dataflowblock_pass", false]], "dataflowblockpass (class in tvm.relax.transform)": [[163, "tvm.relax.transform.DataflowBlockPass", false]], "dataflowblockrewrite (class in tvm.relax)": [[162, "tvm.relax.DataflowBlockRewrite", false]], "dataflowscope (class in tvm.relax.block_builder)": [[159, "tvm.relax.block_builder.DataflowScope", false]], "dataflowuseinplacecalls() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.DataflowUseInplaceCalls", false]], "dataflowvar (class in tvm.relax)": [[162, "tvm.relax.DataflowVar", false]], "dataproducer (class in tvm.tir)": [[185, "tvm.tir.DataProducer", false]], "datatypeimm (class in tvm.relax)": [[162, "tvm.relax.DataTypeImm", false]], "datatypepattern (class in tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.DataTypePattern", false]], "deadcodeelimination() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.DeadCodeElimination", false]], "deadcodeelimination() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.DeadCodeElimination", false]], "debug_copy_from() (tvm.runtime.disco.dref method)": [[175, "tvm.runtime.disco.DRef.debug_copy_from", false]], "debug_get_from_remote() (tvm.runtime.disco.dref method)": [[175, "tvm.runtime.disco.DRef.debug_get_from_remote", false]], "debug_get_output() (tvm.contrib.graph_executor.graphmodule method)": [[152, "tvm.contrib.graph_executor.GraphModule.debug_get_output", false]], "decisions (tvm.tir.schedule.trace attribute)": [[183, "tvm.tir.schedule.Trace.decisions", false]], "decl_buffer() (in module tvm.tir)": [[185, "tvm.tir.decl_buffer", false]], "decl_tensor_intrin() (in module tvm.te)": [[181, "tvm.te.decl_tensor_intrin", false]], "declaration_conv2d_transpose_impl() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.declaration_conv2d_transpose_impl", false]], "declaration_conv3d_transpose_impl() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.declaration_conv3d_transpose_impl", false]], "declare_function() (tvm.relax.execbuilder method)": [[162, "tvm.relax.ExecBuilder.declare_function", false]], "declbuffer (class in tvm.tir)": [[185, "tvm.tir.DeclBuffer", false]], "decode() (in module tvm.autotvm.record)": [[147, "tvm.autotvm.record.decode", false]], "decompose_padding() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.decompose_padding", false]], "decompose_reduction() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.decompose_reduction", false]], "decomposeopsforinference() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.DecomposeOpsForInference", false]], "decomposeopsfortraining() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.DecomposeOpsForTraining", false]], "deconv2d() (in module tvm.relay.testing.dcgan)": [[171, "tvm.relay.testing.dcgan.deconv2d", false]], "deconv2d_bn_relu() (in module tvm.relay.testing.dcgan)": [[171, "tvm.relay.testing.dcgan.deconv2d_bn_relu", false]], "decorate() (in module tvm.te.hybrid)": [[181, "tvm.te.hybrid.decorate", false]], "decoratedevicescope() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.DecorateDeviceScope", false]], "defaultgpuschedule() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.DefaultGPUSchedule", false]], "defaultvizparser (class in tvm.contrib.relay_viz.interface)": [[148, "tvm.contrib.relay_viz.interface.DefaultVizParser", false]], "definable_tir_vars_in_struct_info() (in module tvm.relax.analysis)": [[158, "tvm.relax.analysis.definable_tir_vars_in_struct_info", false]], "define_annotate() (tvm.autotvm.task.space.configspace method)": [[147, "tvm.autotvm.task.space.ConfigSpace.define_annotate", false]], "define_knob() (tvm.autotvm.task.space.configspace method)": [[147, "tvm.autotvm.task.space.ConfigSpace.define_knob", false]], "define_reorder() (tvm.autotvm.task.space.configspace method)": [[147, "tvm.autotvm.task.space.ConfigSpace.define_reorder", false]], "define_split() (tvm.autotvm.task.space.configspace method)": [[147, "tvm.autotvm.task.space.ConfigSpace.define_split", false]], "defined_symbolic_vars() (in module tvm.relax.analysis)": [[158, "tvm.relax.analysis.defined_symbolic_vars", false]], "deformable_conv2d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.deformable_conv2d", false]], "deformable_conv2d_nchw() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.deformable_conv2d_nchw", false]], "deformable_conv2d_nhwc() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.deformable_conv2d_nhwc", false]], "defunctionalization() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.Defunctionalization", false]], "defuseops() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.DefuseOps", false]], "dense() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.dense", false]], "dense() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.dense", false]], "dense() (in module tvm.topi.sparse)": [[187, "tvm.topi.sparse.dense", false]], "dense_alter_layout() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.dense_alter_layout", false]], "dense_legalize() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.dense_legalize", false]], "dense_pack() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.dense_pack", false]], "densetosparse() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.DenseToSparse", false]], "dependency (class in tvm.tir.schedule)": [[183, "tvm.tir.schedule.Dependency", false]], "depkind (class in tvm.tir.schedule)": [[183, "tvm.tir.schedule.DepKind", false]], "depth_to_space() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.depth_to_space", false]], "depth_to_space() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.depth_to_space", false]], "depthwise_conv2d_backward_input_nhwc() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.depthwise_conv2d_backward_input_nhwc", false]], "depthwise_conv2d_backward_weight_nhwc() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.depthwise_conv2d_backward_weight_nhwc", false]], "depthwise_conv2d_infer_layout() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.depthwise_conv2d_infer_layout", false]], "depthwise_conv2d_nchw() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.depthwise_conv2d_nchw", false]], "depthwise_conv2d_nchwc() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.depthwise_conv2d_NCHWc", false]], "depthwise_conv2d_nhwc() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.depthwise_conv2d_nhwc", false]], "dequantize() (in module tvm.relax.op)": [[161, "tvm.relax.op.dequantize", false]], "derive_call_ret_struct_info() (in module tvm.relax.analysis)": [[158, "tvm.relax.analysis.derive_call_ret_struct_info", false]], "derived_object() (in module tvm.meta_schedule)": [[156, "tvm.meta_schedule.derived_object", false]], "deserialize_args() (in module tvm.autotvm.task.task)": [[147, "tvm.autotvm.task.task.deserialize_args", false]], "detach_params() (in module tvm.relax.frontend)": [[160, "tvm.relax.frontend.detach_params", false]], "detect_buffer_access_lca() (in module tvm.tir.analysis.analysis)": [[182, "tvm.tir.analysis.analysis.detect_buffer_access_lca", false]], "detect_feature() (in module tvm.relay.analysis)": [[164, "tvm.relay.analysis.detect_feature", false]], "detect_recursion() (in module tvm.relax.analysis)": [[158, "tvm.relax.analysis.detect_recursion", false]], "device (tvm.runtime.ndarray.ndarray property)": [[176, "tvm.runtime.ndarray.NDArray.device", false]], "device() (in module tvm.runtime.ndarray)": [[176, "tvm.runtime.ndarray.device", false]], "device() (tvm.rpc.rpcsession method)": [[174, "tvm.rpc.RPCSession.device", false]], "device_metrics (tvm.runtime.profiling.report attribute)": [[177, "tvm.runtime.profiling.Report.device_metrics", false]], "devicewrapper (class in tvm.runtime.profiling)": [[177, "tvm.runtime.profiling.DeviceWrapper", false]], "dfpattern (class in tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.DFPattern", false]], "dfpatterncallback (class in tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.DFPatternCallback", false]], "diagnosticerror": [[151, "tvm.error.DiagnosticError", false]], "dictattrs (class in tvm.ir)": [[155, "tvm.ir.DictAttrs", false]], "dilate() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.dilate", false]], "dilate() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.dilate", false]], "dilation2d() (in module tvm.relay.image)": [[168, "tvm.relay.image.dilation2d", false]], "dilation2d_nchw() (in module tvm.topi.image)": [[187, "tvm.topi.image.dilation2d_nchw", false]], "dilation2d_nhwc() (in module tvm.topi.image)": [[187, "tvm.topi.image.dilation2d_nhwc", false]], "dilation_h (tvm.topi.nn.workload attribute)": [[187, "tvm.topi.nn.Workload.dilation_h", false]], "dilation_w (tvm.topi.nn.workload attribute)": [[187, "tvm.topi.nn.Workload.dilation_w", false]], "dims (tvm.autotvm.task.space.configspace property)": [[147, "tvm.autotvm.task.space.ConfigSpace.dims", false]], "directorycreatedpastatexit": [[148, "tvm.contrib.utils.DirectoryCreatedPastAtExit", false]], "dispatchcontext (class in tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.DispatchContext", false]], "dispatchcontext (class in tvm.autotvm.task.dispatcher)": [[147, "tvm.autotvm.task.dispatcher.DispatchContext", false]], "div (class in tvm.tir)": [[185, "tvm.tir.Div", false]], "div() (in module tvm.te)": [[181, "tvm.te.div", false]], "div() (in module tvm.tir)": [[185, "tvm.tir.div", false]], "divide() (in module tvm.relax.op)": [[161, "tvm.relax.op.divide", false]], "divtomul() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.DivToMul", false]], "dmodule (class in tvm.runtime.disco)": [[175, "tvm.runtime.disco.DModule", false]], "dom (tvm.dlight.iterinfo property)": [[149, "tvm.dlight.IterInfo.dom", false]], "dom() (tvm.dlight.blockinfo method)": [[149, "tvm.dlight.BlockInfo.dom", false]], "dom_kind() (tvm.dlight.blockinfo method)": [[149, "tvm.dlight.BlockInfo.dom_kind", false]], "dominates() (in module tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.dominates", false]], "dominates() (tvm.relay.dataflow_pattern.dfpattern method)": [[166, "tvm.relay.dataflow_pattern.DFPattern.dominates", false]], "dominatorpattern (class in tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.DominatorPattern", false]], "dotgraph (class in tvm.contrib.relay_viz.dot)": [[148, "tvm.contrib.relay_viz.dot.DotGraph", false]], "dotplotter (class in tvm.contrib.relay_viz.dot)": [[148, "tvm.contrib.relay_viz.dot.DotPlotter", false]], "double_buffer() (tvm.te.stage method)": [[181, "tvm.te.Stage.double_buffer", false]], "download() (tvm.rpc.rpcsession method)": [[174, "tvm.rpc.RPCSession.download", false]], "download_linked_module() (tvm.rpc.rpcsession method)": [[174, "tvm.rpc.RPCSession.download_linked_module", false]], "dp4a() (in module tvm.tir)": [[185, "tvm.tir.dp4a", false]], "dpackedfunc (class in tvm.runtime.disco)": [[175, "tvm.runtime.disco.DPackedFunc", false]], "dref (class in tvm.runtime.disco)": [[175, "tvm.runtime.disco.DRef", false]], "dropout() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.dropout", false]], "dropout() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.dropout", false]], "dropout_raw() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.dropout_raw", false]], "dropoutattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.DropoutAttrs", false]], "dtype (tvm.runtime.ndarray.ndarray property)": [[176, "tvm.runtime.ndarray.NDArray.dtype", false]], "dtype (tvm.te.tensorslice property)": [[181, "tvm.te.TensorSlice.dtype", false]], "dummyglobalinfo (class in tvm.ir)": [[155, "tvm.ir.DummyGlobalInfo", false]], "dump_pruned() (tvm.meta_schedule.database method)": [[156, "tvm.meta_schedule.Database.dump_pruned", false]], "duration (class in tvm.runtime.profiling)": [[177, "tvm.runtime.profiling.Duration", false]], "dynamic_strided_slice() (in module tvm.relax.op)": [[161, "tvm.relax.op.dynamic_strided_slice", false]], "dynamictostatic() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.DynamicToStatic", false]], "dynamo_capture_subgraphs() (in module tvm.relax.frontend.torch)": [[160, "tvm.relax.frontend.torch.dynamo_capture_subgraphs", false]], "dyntensortype (class in tvm.relax)": [[162, "tvm.relax.DynTensorType", false]], "edge() (tvm.contrib.relay_viz.dot.dotgraph method)": [[148, "tvm.contrib.relay_viz.dot.DotGraph.edge", false]], "edge() (tvm.contrib.relay_viz.interface.vizgraph method)": [[148, "tvm.contrib.relay_viz.interface.VizGraph.edge", false]], "edge() (tvm.contrib.relay_viz.terminal.termgraph method)": [[148, "tvm.contrib.relay_viz.terminal.TermGraph.edge", false]], "einsum() (in module tvm.relax.op)": [[161, "tvm.relax.op.einsum", false]], "einsumattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.EinsumAttrs", false]], "eliminatecommonsubexpr() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.EliminateCommonSubexpr", false]], "eliminatecommonsubexpr() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.EliminateCommonSubexpr", false]], "emit() (tvm.relax.block_builder.blockbuilder method)": [[159, "tvm.relax.block_builder.BlockBuilder.emit", false]], "emit_call() (tvm.relax.execbuilder method)": [[162, "tvm.relax.ExecBuilder.emit_call", false]], "emit_func_output() (tvm.relax.block_builder.blockbuilder method)": [[159, "tvm.relax.block_builder.BlockBuilder.emit_func_output", false]], "emit_goto() (tvm.relax.execbuilder method)": [[162, "tvm.relax.ExecBuilder.emit_goto", false]], "emit_if() (tvm.relax.execbuilder method)": [[162, "tvm.relax.ExecBuilder.emit_if", false]], "emit_normalized() (tvm.relax.block_builder.blockbuilder method)": [[159, "tvm.relax.block_builder.BlockBuilder.emit_normalized", false]], "emit_output() (tvm.relax.block_builder.blockbuilder method)": [[159, "tvm.relax.block_builder.BlockBuilder.emit_output", false]], "emit_ret() (tvm.relax.execbuilder method)": [[162, "tvm.relax.ExecBuilder.emit_ret", false]], "emit_te() (tvm.relax.block_builder.blockbuilder method)": [[159, "tvm.relax.block_builder.BlockBuilder.emit_te", false]], "empty() (in module tvm.runtime.ndarray)": [[176, "tvm.runtime.ndarray.empty", false]], "empty() (tvm.runtime.disco.session method)": [[175, "tvm.runtime.disco.Session.empty", false]], "emptypolicy (class in tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.EmptyPolicy", false]], "enabled_targets() (in module tvm.relay.testing)": [[171, "tvm.relay.testing.enabled_targets", false]], "encode() (in module tvm.autotvm.record)": [[147, "tvm.autotvm.record.encode", false]], "end_checkpoint() (in module tvm.relax.op.grad)": [[161, "tvm.relax.op.grad.end_checkpoint", false]], "end_profile_intrinsic() (in module tvm.tir)": [[185, "tvm.tir.end_profile_intrinsic", false]], "end_scope() (tvm.relax.block_builder.blockbuilder method)": [[159, "tvm.relax.block_builder.BlockBuilder.end_scope", false]], "ensure_zero_offset() (in module tvm.relax.op.memory)": [[161, "tvm.relax.op.memory.ensure_zero_offset", false]], "enter_pass_ctx() (tvm.instrument.passinstrument method)": [[154, "tvm.instrument.PassInstrument.enter_pass_ctx", false]], "enter_postproc() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.enter_postproc", false]], "env_threads() (tvm.te.stage method)": [[181, "tvm.te.Stage.env_threads", false]], "envfunc (class in tvm.ir)": [[155, "tvm.ir.EnvFunc", false]], "eq (class in tvm.tir)": [[185, "tvm.tir.EQ", false]], "equal() (in module tvm.relax.op)": [[161, "tvm.relax.op.equal", false]], "equal_const_int() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.equal_const_int", false]], "erase_to_well_defined() (in module tvm.relax.analysis)": [[158, "tvm.relax.analysis.erase_to_well_defined", false]], "erf() (in module tvm.relax.op)": [[161, "tvm.relax.op.erf", false]], "erf() (in module tvm.te)": [[181, "tvm.te.erf", false]], "erf() (in module tvm.tir)": [[185, "tvm.tir.erf", false]], "estimate_memory_usage() (in module tvm.relax.analysis)": [[158, "tvm.relax.analysis.estimate_memory_usage", false]], "estimate_tir_flops() (in module tvm.tir.analysis.analysis)": [[182, "tvm.tir.analysis.analysis.estimate_tir_flops", false]], "etaexpand() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.EtaExpand", false]], "evaluate (class in tvm.tir)": [[185, "tvm.tir.Evaluate", false]], "evaluate() (tvm.relay.backend.interpreter.executor method)": [[165, "tvm.relay.backend.interpreter.Executor.evaluate", false]], "evolutionary_search() (tvm.auto_scheduler.sketchpolicy method)": [[146, "tvm.auto_scheduler.SketchPolicy.evolutionary_search", false]], "ewise_fma() (in module tvm.relax.op)": [[161, "tvm.relax.op.ewise_fma", false]], "execbuilder (class in tvm.relax)": [[162, "tvm.relax.ExecBuilder", false]], "executable (class in tvm.relax)": [[162, "tvm.relax.Executable", false]], "executor (class in tvm.relay.backend.interpreter)": [[165, "tvm.relay.backend.interpreter.Executor", false]], "exit_pass_ctx() (tvm.instrument.passinstrument method)": [[154, "tvm.instrument.PassInstrument.exit_pass_ctx", false]], "exp() (in module tvm.relax.op)": [[161, "tvm.relax.op.exp", false]], "exp() (in module tvm.te)": [[181, "tvm.te.exp", false]], "exp() (in module tvm.tir)": [[185, "tvm.tir.exp", false]], "exp10() (in module tvm.tir)": [[185, "tvm.tir.exp10", false]], "exp2() (in module tvm.tir)": [[185, "tvm.tir.exp2", false]], "expand_dims() (in module tvm.relax.op)": [[161, "tvm.relax.op.expand_dims", false]], "expanddimsattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.ExpandDimsAttrs", false]], "expandmatmulofsum() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.ExpandMatmulOfSum", false]], "expandtuplearguments() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.ExpandTupleArguments", false]], "export_library() (tvm.relax.executable method)": [[162, "tvm.relax.Executable.export_library", false]], "export_model_library_format() (in module tvm.micro)": [[157, "tvm.micro.export_model_library_format", false]], "expr (in module tvm.relax)": [[162, "tvm.relax.Expr", false]], "expr (in module tvm.relax.op.grad)": [[161, "tvm.relax.op.grad.Expr", false]], "expr (in module tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.Expr", false]], "expr (in module tvm.relay.nn)": [[170, "tvm.relay.nn.Expr", false]], "expr_deep_equal() (in module tvm.tir.analysis.analysis)": [[182, "tvm.tir.analysis.analysis.expr_deep_equal", false]], "exprfunctor (class in tvm.relax)": [[162, "tvm.relax.ExprFunctor", false]], "exprpattern (class in tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.ExprPattern", false]], "exprrv (in module tvm.tir.schedule)": [[183, "tvm.tir.schedule.ExprRV", false]], "ext_dev() (in module tvm.runtime.ndarray)": [[176, "tvm.runtime.ndarray.ext_dev", false]], "ext_dev() (tvm.rpc.rpcsession method)": [[174, "tvm.rpc.RPCSession.ext_dev", false]], "extern() (in module tvm.relax)": [[162, "tvm.relax.extern", false]], "extern() (in module tvm.te)": [[181, "tvm.te.extern", false]], "extern_primfunc() (in module tvm.te)": [[181, "tvm.te.extern_primfunc", false]], "externfunc (class in tvm.relax)": [[162, "tvm.relax.ExternFunc", false]], "externop (class in tvm.te)": [[181, "tvm.te.ExternOp", false]], "extract_from() (tvm.meta_schedule.featureextractor method)": [[156, "tvm.meta_schedule.FeatureExtractor.extract_from", false]], "extract_fused_functions() (in module tvm.relay.analysis)": [[164, "tvm.relay.analysis.extract_fused_functions", false]], "extract_intermdeiate_expr() (in module tvm.relay.analysis)": [[164, "tvm.relay.analysis.extract_intermdeiate_expr", false]], "extract_tasks() (in module tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.extract_tasks", false]], "extractedtask (class in tvm.meta_schedule)": [[156, "tvm.meta_schedule.ExtractedTask", false]], "extractprimfuncconstants() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.ExtractPrimFuncConstants", false]], "eye() (in module tvm.relax.op)": [[161, "tvm.relax.op.eye", false]], "eye_like() (in module tvm.relax.op)": [[161, "tvm.relax.op.eye_like", false]], "f() (tvm.relax.execbuilder method)": [[162, "tvm.relax.ExecBuilder.f", false]], "factor_of() (tvm.tir.layout method)": [[185, "tvm.tir.Layout.factor_of", false]], "fakequantizationtointeger() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.FakeQuantizationToInteger", false]], "fallback_split() (tvm.autotvm.task.space.fallbackconfigentity method)": [[147, "tvm.autotvm.task.space.FallbackConfigEntity.fallback_split", false]], "fallback_with_reference_log() (tvm.autotvm.task.space.fallbackconfigentity method)": [[147, "tvm.autotvm.task.space.FallbackConfigEntity.fallback_with_reference_log", false]], "fallbackconfigentity (class in tvm.autotvm.task.space)": [[147, "tvm.autotvm.task.space.FallbackConfigEntity", false]], "fallbackcontext (class in tvm.autotvm.task.dispatcher)": [[147, "tvm.autotvm.task.dispatcher.FallbackContext", false]], "fast_softmax() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.fast_softmax", false]], "fast_softmax() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.fast_softmax", false]], "fastmath() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.FastMath", false]], "fastmathtransform (class in tvm.relax.transform)": [[163, "tvm.relax.transform.FastMathTransform", false]], "feature (class in tvm.relay.analysis)": [[164, "tvm.relay.analysis.Feature", false]], "featureextractor (class in tvm.meta_schedule)": [[156, "tvm.meta_schedule.FeatureExtractor", false]], "fewshottuning() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.FewShotTuning", false]], "fgraph (tvm.relay.analysis.feature attribute)": [[164, "tvm.relay.analysis.Feature.fGraph", false]], "fifo_buffer() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.fifo_buffer", false]], "fifo_buffer() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.fifo_buffer", false]], "filelock (class in tvm.contrib.utils)": [[148, "tvm.contrib.utils.FileLock", false]], "filelock() (in module tvm.contrib.utils)": [[148, "tvm.contrib.utils.filelock", false]], "filter() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.Filter", false]], "finalize() (tvm.relax.block_builder.blockbuilder method)": [[159, "tvm.relax.block_builder.BlockBuilder.finalize", false]], "find_anchor_block() (in module tvm.tir.analysis.analysis)": [[182, "tvm.tir.analysis.analysis.find_anchor_block", false]], "find_clang() (in module tvm.contrib.clang)": [[148, "tvm.contrib.clang.find_clang", false]], "find_cuda_path() (in module tvm.contrib.nvcc)": [[148, "tvm.contrib.nvcc.find_cuda_path", false]], "find_lld() (in module tvm.contrib.rocm)": [[148, "tvm.contrib.rocm.find_lld", false]], "find_rocm_path() (in module tvm.contrib.rocm)": [[148, "tvm.contrib.rocm.find_rocm_path", false]], "firstordergradient() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.FirstOrderGradient", false]], "flatten() (in module tvm.relax.op)": [[161, "tvm.relax.op.flatten", false]], "flatten() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.flatten", false]], "flattenatrousconv() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.FlattenAtrousConv", false]], "flattenbuffer() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.FlattenBuffer", false]], "flexibleshapedispatch (class in tvm.relay.transform)": [[172, "tvm.relay.transform.FlexibleShapeDispatch", false]], "flip() (in module tvm.relax.op)": [[161, "tvm.relax.op.flip", false]], "flipattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.FlipAttrs", false]], "floatimm (class in tvm.tir)": [[185, "tvm.tir.FloatImm", false]], "floor() (in module tvm.relax.op)": [[161, "tvm.relax.op.floor", false]], "floor() (in module tvm.te)": [[181, "tvm.te.floor", false]], "floor() (in module tvm.tir)": [[185, "tvm.tir.floor", false]], "floor_divide() (in module tvm.relax.op)": [[161, "tvm.relax.op.floor_divide", false]], "floor_mod() (in module tvm.relax.op)": [[161, "tvm.relax.op.floor_mod", false]], "floordiv (class in tvm.tir)": [[185, "tvm.tir.FloorDiv", false]], "floordiv() (in module tvm.te)": [[181, "tvm.te.floordiv", false]], "floordiv() (in module tvm.tir)": [[185, "tvm.tir.floordiv", false]], "floormod (class in tvm.tir)": [[185, "tvm.tir.FloorMod", false]], "floormod() (in module tvm.te)": [[181, "tvm.te.floormod", false]], "floormod() (in module tvm.tir)": [[185, "tvm.tir.floormod", false]], "flopcalculationerror": [[147, "tvm.autotvm.task.task.FlopCalculationError", false]], "fmatch (tvm.relay.analysis.feature attribute)": [[164, "tvm.relay.analysis.Feature.fMatch", false]], "fmod() (in module tvm.te)": [[181, "tvm.te.fmod", false]], "fmod() (in module tvm.tir)": [[185, "tvm.tir.fmod", false]], "foldconstant() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.FoldConstant", false]], "foldconstant() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.FoldConstant", false]], "foldconstantexpr() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.FoldConstantExpr", false]], "foldexplicitpadding() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.FoldExplicitPadding", false]], "foldscaleaxis() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.FoldScaleAxis", false]], "for (class in tvm.tir)": [[185, "tvm.tir.For", false]], "forcenarrowindextoint32() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.ForceNarrowIndexToInt32", false]], "fork_seed() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.fork_seed", false]], "forkind (class in tvm.tir)": [[185, "tvm.tir.ForKind", false]], "forward_index() (tvm.tir.bijectivelayout method)": [[185, "tvm.tir.BijectiveLayout.forward_index", false]], "forward_shape() (tvm.tir.bijectivelayout method)": [[185, "tvm.tir.BijectiveLayout.forward_shape", false]], "forwardfoldscaleaxis() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.ForwardFoldScaleAxis", false]], "fp8computelegalize() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.FP8ComputeLegalize", false]], "fp8storagelegalize() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.FP8StorageLegalize", false]], "free_symbolic_vars() (in module tvm.relax.analysis)": [[158, "tvm.relax.analysis.free_symbolic_vars", false]], "free_type_vars() (in module tvm.relay.analysis)": [[164, "tvm.relay.analysis.free_type_vars", false]], "free_vars() (in module tvm.relax.analysis)": [[158, "tvm.relax.analysis.free_vars", false]], "free_vars() (in module tvm.relay.analysis)": [[164, "tvm.relay.analysis.free_vars", false]], "from_caffe() (in module tvm.relay.frontend)": [[167, "tvm.relay.frontend.from_caffe", false]], "from_caffe2() (in module tvm.relay.frontend)": [[167, "tvm.relay.frontend.from_caffe2", false]], "from_callable() (tvm.dlight.schedulerule static method)": [[149, "tvm.dlight.ScheduleRule.from_callable", false]], "from_coreml() (in module tvm.relay.frontend)": [[167, "tvm.relay.frontend.from_coreml", false]], "from_darknet() (in module tvm.relay.frontend)": [[167, "tvm.relay.frontend.from_darknet", false]], "from_device() (tvm.target.target static method)": [[180, "tvm.target.Target.from_device", false]], "from_dlpack() (in module tvm.runtime.ndarray)": [[176, "tvm.runtime.ndarray.from_dlpack", false]], "from_exported_program() (in module tvm.relax.frontend.torch)": [[160, "tvm.relax.frontend.torch.from_exported_program", false]], "from_expr() (tvm.ir.irmodule static method)": [[155, "tvm.ir.IRModule.from_expr", false]], "from_func() (tvm.tir.indexmap static method)": [[185, "tvm.tir.IndexMap.from_func", false]], "from_func_with_separators() (tvm.tir.indexmap static method)": [[185, "tvm.tir.IndexMap.from_func_with_separators", false]], "from_fx() (in module tvm.relax.frontend.torch)": [[160, "tvm.relax.frontend.torch.from_fx", false]], "from_json() (tvm.runtime.profiling.report class method)": [[177, "tvm.runtime.profiling.Report.from_json", false]], "from_json_dict() (tvm.autotvm.task.space.configentity static method)": [[147, "tvm.autotvm.task.space.ConfigEntity.from_json_dict", false]], "from_keras() (in module tvm.relay.frontend)": [[167, "tvm.relay.frontend.from_keras", false]], "from_min_extent() (tvm.ir.range static method)": [[155, "tvm.ir.Range.from_min_extent", false]], "from_mxnet() (in module tvm.relay.frontend)": [[167, "tvm.relay.frontend.from_mxnet", false]], "from_oneflow() (in module tvm.relay.frontend)": [[167, "tvm.relay.frontend.from_oneflow", false]], "from_onnx() (in module tvm.relax.frontend.onnx)": [[160, "tvm.relax.frontend.onnx.from_onnx", false]], "from_onnx() (in module tvm.relay.frontend)": [[167, "tvm.relay.frontend.from_onnx", false]], "from_paddle() (in module tvm.relay.frontend)": [[167, "tvm.relay.frontend.from_paddle", false]], "from_pytorch() (in module tvm.relay.frontend)": [[167, "tvm.relay.frontend.from_pytorch", false]], "from_stablehlo() (in module tvm.relax.frontend.stablehlo)": [[160, "tvm.relax.frontend.stablehlo.from_stablehlo", false]], "from_tensorflow() (in module tvm.relay.frontend)": [[167, "tvm.relay.frontend.from_tensorflow", false]], "from_tflite() (in module tvm.relay.frontend)": [[167, "tvm.relay.frontend.from_tflite", false]], "full() (in module tvm.relax.op)": [[161, "tvm.relax.op.full", false]], "full_like() (in module tvm.relax.op)": [[161, "tvm.relax.op.full_like", false]], "fully_connected_inference() (in module tvm.contrib.nnpack)": [[148, "tvm.contrib.nnpack.fully_connected_inference", false]], "func_working_on (tvm.tir.schedule.schedule property)": [[183, "tvm.tir.schedule.Schedule.func_working_on", false]], "funcstructinfo (class in tvm.relax)": [[162, "tvm.relax.FuncStructInfo", false]], "function (class in tvm.relax)": [[162, "tvm.relax.Function", false]], "function() (tvm.relax.block_builder.blockbuilder method)": [[159, "tvm.relax.block_builder.BlockBuilder.function", false]], "function() (tvm.relax.execbuilder method)": [[162, "tvm.relax.ExecBuilder.function", false]], "function_pass() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.function_pass", false]], "function_pass() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.function_pass", false]], "functionpass (class in tvm.relax.transform)": [[163, "tvm.relax.transform.FunctionPass", false]], "functionpattern (class in tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.FunctionPattern", false]], "functions_items() (tvm.ir.irmodule method)": [[155, "tvm.ir.IRModule.functions_items", false]], "functionscope (class in tvm.relax.block_builder)": [[159, "tvm.relax.block_builder.FunctionScope", false]], "functype (class in tvm.ir)": [[155, "tvm.ir.FuncType", false]], "fuse() (tvm.te.stage method)": [[181, "tvm.te.Stage.fuse", false]], "fuse() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.fuse", false]], "fuseops() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.FuseOps", false]], "fuseops() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.FuseOps", false]], "fuseopsbypattern() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.FuseOpsByPattern", false]], "fusetir() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.FuseTIR", false]], "fusetransposematmul (class in tvm.relax.transform)": [[163, "tvm.relax.transform.FuseTransposeMatmul", false]], "fusionpattern (class in tvm.relax.transform)": [[163, "tvm.relax.transform.FusionPattern", false]], "gather_elements() (in module tvm.relax.op)": [[161, "tvm.relax.op.gather_elements", false]], "gather_nd() (in module tvm.relax.op)": [[161, "tvm.relax.op.gather_nd", false]], "gather_to_worker0() (tvm.runtime.disco.session method)": [[175, "tvm.runtime.disco.Session.gather_to_worker0", false]], "gatuner (class in tvm.autotvm.tuner)": [[147, "tvm.autotvm.tuner.GATuner", false]], "ge (class in tvm.tir)": [[185, "tvm.tir.GE", false]], "gelu() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.gelu", false]], "gelu_tanh() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.gelu_tanh", false]], "generate_design_space() (tvm.meta_schedule.spacegenerator method)": [[156, "tvm.meta_schedule.SpaceGenerator.generate_design_space", false]], "generate_design_space() (tvm.meta_schedule.tunecontext method)": [[156, "tvm.meta_schedule.TuneContext.generate_design_space", false]], "generate_measure_candidates() (tvm.meta_schedule.searchstrategy method)": [[156, "tvm.meta_schedule.SearchStrategy.generate_measure_candidates", false]], "generate_measure_candidates() (tvm.meta_schedule.tunecontext method)": [[156, "tvm.meta_schedule.TuneContext.generate_measure_candidates", false]], "generate_project() (in module tvm.micro)": [[157, "tvm.micro.generate_project", false]], "generate_project() (tvm.micro.templateproject method)": [[157, "tvm.micro.TemplateProject.generate_project", false]], "generate_project_from_mlf() (tvm.micro.templateproject method)": [[157, "tvm.micro.TemplateProject.generate_project_from_mlf", false]], "generate_sketches() (tvm.auto_scheduler.sketchpolicy method)": [[146, "tvm.auto_scheduler.SketchPolicy.generate_sketches", false]], "generatedproject (class in tvm.micro)": [[157, "tvm.micro.GeneratedProject", false]], "generic_func() (in module tvm.target)": [[180, "tvm.target.generic_func", false]], "genericfunc (class in tvm.target)": [[180, "tvm.target.GenericFunc", false]], "get() (in module tvm.relay.backend.te_compiler)": [[165, "tvm.relay.backend.te_compiler.get", false]], "get() (in module tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.get", false]], "get() (tvm.autotvm.task.space.configspace method)": [[147, "tvm.autotvm.task.space.ConfigSpace.get", false]], "get() (tvm.autotvm.task.topi_integration.taskextractenv static method)": [[147, "tvm.autotvm.task.topi_integration.TaskExtractEnv.get", false]], "get() (tvm.ir.dictattrs method)": [[155, "tvm.ir.DictAttrs.get", false]], "get() (tvm.ir.envfunc static method)": [[155, "tvm.ir.EnvFunc.get", false]], "get() (tvm.ir.map method)": [[155, "tvm.ir.Map.get", false]], "get() (tvm.ir.op static method)": [[155, "tvm.ir.Op.get", false]], "get() (tvm.meta_schedule.profiler method)": [[156, "tvm.meta_schedule.Profiler.get", false]], "get() (tvm.relax.block_builder.blockbuilder method)": [[159, "tvm.relax.block_builder.BlockBuilder.get", false]], "get() (tvm.relax.execbuilder method)": [[162, "tvm.relax.ExecBuilder.get", false]], "get() (tvm.tir.schedule.instructionkind static method)": [[183, "tvm.tir.schedule.InstructionKind.get", false]], "get() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.get", false]], "get() (tvm.tir.tensorintrin static method)": [[185, "tvm.tir.TensorIntrin.get", false]], "get_1d_indices() (in module tvm.topi.image)": [[187, "tvm.topi.image.get_1d_indices", false]], "get_1d_pixel() (in module tvm.topi.image)": [[187, "tvm.topi.image.get_1d_pixel", false]], "get_2d_indices() (in module tvm.topi.image)": [[187, "tvm.topi.image.get_2d_indices", false]], "get_2d_pixel() (in module tvm.topi.image)": [[187, "tvm.topi.image.get_2d_pixel", false]], "get_3d_indices() (in module tvm.topi.image)": [[187, "tvm.topi.image.get_3d_indices", false]], "get_3d_pixel() (in module tvm.topi.image)": [[187, "tvm.topi.image.get_3d_pixel", false]], "get_active_lane_mask() (in module tvm.tir)": [[185, "tvm.tir.get_active_lane_mask", false]], "get_all_tuning_records() (tvm.meta_schedule.database method)": [[156, "tvm.meta_schedule.Database.get_all_tuning_records", false]], "get_attr() (tvm.ir.irmodule method)": [[155, "tvm.ir.IRModule.get_attr", false]], "get_attr() (tvm.ir.op method)": [[155, "tvm.ir.Op.get_attr", false]], "get_block() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.get_block", false]], "get_block_access_region() (in module tvm.tir.analysis.analysis)": [[182, "tvm.tir.analysis.analysis.get_block_access_region", false]], "get_block_read_write_region() (in module tvm.tir.analysis.analysis)": [[182, "tvm.tir.analysis.analysis.get_block_read_write_region", false]], "get_block_scope() (tvm.tir.blockdependenceinfo method)": [[185, "tvm.tir.BlockDependenceInfo.get_block_scope", false]], "get_block_scope() (tvm.tir.schedule.schedulestate method)": [[183, "tvm.tir.schedule.ScheduleState.get_block_scope", false]], "get_calibration_data() (in module tvm.relay.analysis)": [[164, "tvm.relay.analysis.get_calibration_data", false]], "get_cc() (in module tvm.contrib.cc)": [[148, "tvm.contrib.cc.get_cc", false]], "get_child_blocks() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.get_child_blocks", false]], "get_classifier() (in module tvm.relay.testing.vgg)": [[171, "tvm.relay.testing.vgg.get_classifier", false]], "get_closest_index() (in module tvm.topi.image)": [[187, "tvm.topi.image.get_closest_index", false]], "get_config() (in module tvm.autotvm.task.task)": [[147, "tvm.autotvm.task.task.get_config", false]], "get_const_int() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.get_const_int", false]], "get_const_tuple() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.get_const_tuple", false]], "get_constructor() (tvm.ir.irmodule method)": [[155, "tvm.ir.IRModule.get_constructor", false]], "get_consumers() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.get_consumers", false]], "get_ctor() (tvm.relay.testing.prelude method)": [[171, "tvm.relay.testing.Prelude.get_ctor", false]], "get_ctor_static() (tvm.relay.testing.prelude method)": [[171, "tvm.relay.testing.Prelude.get_ctor_static", false]], "get_cuda_version() (in module tvm.contrib.nvcc)": [[148, "tvm.contrib.nvcc.get_cuda_version", false]], "get_current_trace() (tvm.transform.passcontext method)": [[188, "tvm.transform.PassContext.get_current_trace", false]], "get_decision() (tvm.tir.schedule.trace method)": [[183, "tvm.tir.schedule.Trace.get_decision", false]], "get_deps_by_dst() (tvm.tir.schedule.blockscope method)": [[183, "tvm.tir.schedule.BlockScope.get_deps_by_dst", false]], "get_deps_by_src() (tvm.tir.schedule.blockscope method)": [[183, "tvm.tir.schedule.BlockScope.get_deps_by_src", false]], "get_device() (in module tvm.contrib.graph_executor)": [[152, "tvm.contrib.graph_executor.get_device", false]], "get_exec() (tvm.relay.backend.vm.vmcompiler method)": [[165, "tvm.relay.backend.vm.VMCompiler.get_exec", false]], "get_factors() (in module tvm.autotvm.task.space)": [[147, "tvm.autotvm.task.space.get_factors", false]], "get_feature() (in module tvm.relay.testing.vgg)": [[171, "tvm.relay.testing.vgg.get_feature", false]], "get_flatten_feature() (tvm.autotvm.task.space.configentity method)": [[147, "tvm.autotvm.task.space.ConfigEntity.get_flatten_feature", false]], "get_flattened_buffer() (tvm.tir.buffer method)": [[185, "tvm.tir.Buffer.get_flattened_buffer", false]], "get_function() (tvm.rpc.rpcsession method)": [[174, "tvm.rpc.RPCSession.get_function", false]], "get_global_func() (tvm.runtime.disco.session method)": [[175, "tvm.runtime.disco.Session.get_global_func", false]], "get_global_symbol_section_map() (in module tvm.contrib.cc)": [[148, "tvm.contrib.cc.get_global_symbol_section_map", false]], "get_global_symbol_section_map() (in module tvm.contrib.ndk)": [[148, "tvm.contrib.ndk.get_global_symbol_section_map", false]], "get_global_type_var() (tvm.ir.irmodule method)": [[155, "tvm.ir.IRModule.get_global_type_var", false]], "get_global_type_vars() (tvm.ir.irmodule method)": [[155, "tvm.ir.IRModule.get_global_type_vars", false]], "get_global_var() (tvm.ir.irmodule method)": [[155, "tvm.ir.IRModule.get_global_var", false]], "get_global_var() (tvm.relay.testing.prelude method)": [[171, "tvm.relay.testing.Prelude.get_global_var", false]], "get_global_var_static() (tvm.relay.testing.prelude method)": [[171, "tvm.relay.testing.Prelude.get_global_var_static", false]], "get_global_vars() (tvm.ir.irmodule method)": [[155, "tvm.ir.IRModule.get_global_vars", false]], "get_init_state() (tvm.auto_scheduler.computedag method)": [[146, "tvm.auto_scheduler.ComputeDAG.get_init_state", false]], "get_input() (tvm.contrib.graph_executor.graphmodule method)": [[152, "tvm.contrib.graph_executor.GraphModule.get_input", false]], "get_input_index() (tvm.contrib.graph_executor.graphmodule method)": [[152, "tvm.contrib.graph_executor.GraphModule.get_input_index", false]], "get_input_info() (tvm.contrib.graph_executor.graphmodule method)": [[152, "tvm.contrib.graph_executor.GraphModule.get_input_info", false]], "get_int() (tvm.ir.attrs method)": [[155, "tvm.ir.Attrs.get_int", false]], "get_int_tuple() (tvm.ir.attrs method)": [[155, "tvm.ir.Attrs.get_int_tuple", false]], "get_inx() (in module tvm.topi.image)": [[187, "tvm.topi.image.get_inx", false]], "get_kind_attr() (tvm.target.target method)": [[180, "tvm.target.Target.get_kind_attr", false]], "get_loops() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.get_loops", false]], "get_microtvm_template_projects() (in module tvm.micro)": [[157, "tvm.micro.get_microtvm_template_projects", false]], "get_name() (tvm.relay.testing.prelude method)": [[171, "tvm.relay.testing.Prelude.get_name", false]], "get_name_static() (tvm.relay.testing.prelude method)": [[171, "tvm.relay.testing.Prelude.get_name_static", false]], "get_native_generic_func() (in module tvm.target)": [[180, "tvm.target.get_native_generic_func", false]], "get_net() (in module tvm.relay.testing.dcgan)": [[171, "tvm.relay.testing.dcgan.get_net", false]], "get_net() (in module tvm.relay.testing.inception_v3)": [[171, "tvm.relay.testing.inception_v3.get_net", false]], "get_net() (in module tvm.relay.testing.lstm)": [[171, "tvm.relay.testing.lstm.get_net", false]], "get_net() (in module tvm.relay.testing.mlp)": [[171, "tvm.relay.testing.mlp.get_net", false]], "get_net() (in module tvm.relay.testing.resnet)": [[171, "tvm.relay.testing.resnet.get_net", false]], "get_net() (in module tvm.relay.testing.squeezenet)": [[171, "tvm.relay.testing.squeezenet.get_net", false]], "get_net() (in module tvm.relay.testing.vgg)": [[171, "tvm.relay.testing.vgg.get_net", false]], "get_next_index() (tvm.autotvm.task.space.configspace method)": [[147, "tvm.autotvm.task.space.ConfigSpace.get_next_index", false]], "get_node_edges() (tvm.contrib.relay_viz.interface.defaultvizparser method)": [[148, "tvm.contrib.relay_viz.interface.DefaultVizParser.get_node_edges", false]], "get_node_edges() (tvm.contrib.relay_viz.interface.vizparser method)": [[148, "tvm.contrib.relay_viz.interface.VizParser.get_node_edges", false]], "get_node_edges() (tvm.contrib.relay_viz.terminal.termvizparser method)": [[148, "tvm.contrib.relay_viz.terminal.TermVizParser.get_node_edges", false]], "get_num_inputs() (tvm.contrib.graph_executor.graphmodule method)": [[152, "tvm.contrib.graph_executor.GraphModule.get_num_inputs", false]], "get_num_output() (tvm.autotvm.task.space.annotatespace static method)": [[147, "tvm.autotvm.task.space.AnnotateSpace.get_num_output", false]], "get_num_output() (tvm.autotvm.task.space.otheroptionspace static method)": [[147, "tvm.autotvm.task.space.OtherOptionSpace.get_num_output", false]], "get_num_output() (tvm.autotvm.task.space.reorderspace static method)": [[147, "tvm.autotvm.task.space.ReorderSpace.get_num_output", false]], "get_num_output() (tvm.autotvm.task.space.splitspace static method)": [[147, "tvm.autotvm.task.space.SplitSpace.get_num_output", false]], "get_num_output() (tvm.autotvm.task.space.transformspace static method)": [[147, "tvm.autotvm.task.space.TransformSpace.get_num_output", false]], "get_num_output() (tvm.autotvm.task.space.virtualaxis static method)": [[147, "tvm.autotvm.task.space.VirtualAxis.get_num_output", false]], "get_num_outputs() (tvm.contrib.graph_executor.graphmodule method)": [[152, "tvm.contrib.graph_executor.GraphModule.get_num_outputs", false]], "get_other_option() (tvm.autotvm.task.space.configentity method)": [[147, "tvm.autotvm.task.space.ConfigEntity.get_other_option", false]], "get_output() (tvm.contrib.graph_executor.graphmodule method)": [[152, "tvm.contrib.graph_executor.GraphModule.get_output", false]], "get_output_blocks() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.get_output_blocks", false]], "get_outputs() (tvm.relax.virtualmachine method)": [[162, "tvm.relax.VirtualMachine.get_outputs", false]], "get_outputs() (tvm.runtime.relax_vm.virtualmachine method)": [[178, "tvm.runtime.relax_vm.VirtualMachine.get_outputs", false]], "get_packed_func() (tvm.target.genericfunc method)": [[180, "tvm.target.GenericFunc.get_packed_func", false]], "get_pad_tuple() (in module tvm.topi.image)": [[187, "tvm.topi.image.get_pad_tuple", false]], "get_pad_tuple() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.get_pad_tuple", false]], "get_pad_tuple1d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.get_pad_tuple1d", false]], "get_pad_tuple1d() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.get_pad_tuple1d", false]], "get_pad_tuple2d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.get_pad_tuple2d", false]], "get_pad_tuple3d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.get_pad_tuple3d", false]], "get_pad_tuple3d() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.get_pad_tuple3d", false]], "get_pad_tuple_generic() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.get_pad_tuple_generic", false]], "get_params() (tvm.relay.backend.vm.vmcompiler method)": [[165, "tvm.relay.backend.vm.VMCompiler.get_params", false]], "get_pipeline() (in module tvm.relax)": [[162, "tvm.relax.get_pipeline", false]], "get_pow2s() (in module tvm.autotvm.task.space)": [[147, "tvm.autotvm.task.space.get_pow2s", false]], "get_prim_func_arg_and_result_memory_constraints() (in module tvm.tir.analysis.analysis)": [[182, "tvm.tir.analysis.analysis.get_prim_func_arg_and_result_memory_constraints", false]], "get_producers() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.get_producers", false]], "get_rand_index() (tvm.autotvm.task.space.configspace method)": [[147, "tvm.autotvm.task.space.ConfigSpace.get_rand_index", false]], "get_region() (tvm.relay.analysis.annotatedregionset method)": [[164, "tvm.relay.analysis.AnnotatedRegionSet.get_region", false]], "get_shape() (in module tvm.relay.backend.te_compiler)": [[165, "tvm.relay.backend.te_compiler.get_shape", false]], "get_shape_from_rewritten_layout() (in module tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.get_shape_from_rewritten_layout", false]], "get_shape_of() (in module tvm.relax)": [[162, "tvm.relax.get_shape_of", false]], "get_sref() (tvm.tir.blockdependenceinfo method)": [[185, "tvm.tir.BlockDependenceInfo.get_sref", false]], "get_sref() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.get_sref", false]], "get_sref() (tvm.tir.schedule.schedulestate method)": [[183, "tvm.tir.schedule.ScheduleState.get_sref", false]], "get_standalone_crt_dir() (in module tvm.micro)": [[157, "tvm.micro.get_standalone_crt_dir", false]], "get_static_type() (in module tvm.relax.analysis)": [[158, "tvm.relax.analysis.get_static_type", false]], "get_str() (tvm.ir.attrs method)": [[155, "tvm.ir.Attrs.get_str", false]], "get_target_by_dump_machine() (in module tvm.contrib.cc)": [[148, "tvm.contrib.cc.get_target_by_dump_machine", false]], "get_target_default() (tvm.auto_scheduler.layoutrewriteoption static method)": [[146, "tvm.auto_scheduler.LayoutRewriteOption.get_target_default", false]], "get_target_device_type() (tvm.target.target method)": [[180, "tvm.target.Target.get_target_device_type", false]], "get_tasks() (tvm.autotvm.task.topi_integration.taskextractenv method)": [[147, "tvm.autotvm.task.topi_integration.TaskExtractEnv.get_tasks", false]], "get_tensor_ctor_static() (tvm.relay.testing.prelude method)": [[171, "tvm.relay.testing.Prelude.get_tensor_ctor_static", false]], "get_top_k() (tvm.meta_schedule.database method)": [[156, "tvm.meta_schedule.Database.get_top_k", false]], "get_total_mac_number() (in module tvm.relay.analysis)": [[164, "tvm.relay.analysis.get_total_mac_number", false]], "get_trace_stack() (tvm.transform.passcontext method)": [[188, "tvm.transform.PassContext.get_trace_stack", false]], "get_trace_stack_size() (tvm.transform.passcontext method)": [[188, "tvm.transform.PassContext.get_trace_stack_size", false]], "get_tuning_api_database() (tvm.transform.passcontext method)": [[188, "tvm.transform.PassContext.get_tuning_api_database", false]], "get_type() (tvm.relay.testing.prelude method)": [[171, "tvm.relay.testing.Prelude.get_type", false]], "get_type_static() (tvm.relay.testing.prelude method)": [[171, "tvm.relay.testing.Prelude.get_type_static", false]], "get_unique_name() (tvm.relax.block_builder.blockbuilder method)": [[159, "tvm.relax.block_builder.BlockBuilder.get_unique_name", false]], "get_valid_counts() (in module tvm.relay.vision)": [[173, "tvm.relay.vision.get_valid_counts", false]], "get_valid_implementations() (in module tvm.relay.backend.te_compiler)": [[165, "tvm.relay.backend.te_compiler.get_valid_implementations", false]], "get_var2val() (in module tvm.relax.analysis)": [[158, "tvm.relax.analysis.get_var2val", false]], "get_var_remap() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.get_var_remap", false]], "get_vscale_expr() (in module tvm.tir)": [[185, "tvm.tir.get_vscale_expr", false]], "get_vtcm_compaction_passes() (in module tvm.tir.analysis.analysis)": [[182, "tvm.tir.analysis.analysis.get_vtcm_compaction_passes", false]], "get_workload() (in module tvm.autotvm.task.topi_integration)": [[147, "tvm.autotvm.task.topi_integration.get_workload", false]], "get_workload() (in module tvm.relay.testing.dcgan)": [[171, "tvm.relay.testing.dcgan.get_workload", false]], "get_workload() (in module tvm.relay.testing.densenet)": [[171, "tvm.relay.testing.densenet.get_workload", false]], "get_workload() (in module tvm.relay.testing.inception_v3)": [[171, "tvm.relay.testing.inception_v3.get_workload", false]], "get_workload() (in module tvm.relay.testing.lstm)": [[171, "tvm.relay.testing.lstm.get_workload", false]], "get_workload() (in module tvm.relay.testing.mlp)": [[171, "tvm.relay.testing.mlp.get_workload", false]], "get_workload() (in module tvm.relay.testing.mobilenet)": [[171, "tvm.relay.testing.mobilenet.get_workload", false]], "get_workload() (in module tvm.relay.testing.resnet)": [[171, "tvm.relay.testing.resnet.get_workload", false]], "get_workload() (in module tvm.relay.testing.squeezenet)": [[171, "tvm.relay.testing.squeezenet.get_workload", false]], "get_workload() (in module tvm.relay.testing.vgg)": [[171, "tvm.relay.testing.vgg.get_workload", false]], "get_workload_entry() (tvm.auto_scheduler.applyhistorybest static method)": [[146, "tvm.auto_scheduler.ApplyHistoryBest.get_workload_entry", false]], "global_avg_pool1d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.global_avg_pool1d", false]], "global_avg_pool2d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.global_avg_pool2d", false]], "global_avg_pool3d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.global_avg_pool3d", false]], "global_call_count() (tvm.relay.analysis.callgraph method)": [[164, "tvm.relay.analysis.CallGraph.global_call_count", false]], "global_max_pool1d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.global_max_pool1d", false]], "global_max_pool2d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.global_max_pool2d", false]], "global_max_pool3d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.global_max_pool3d", false]], "global_pool() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.global_pool", false]], "globalinfo (class in tvm.ir)": [[155, "tvm.ir.GlobalInfo", false]], "globaltypevar (class in tvm.ir)": [[155, "tvm.ir.GlobalTypeVar", false]], "globalvar (class in tvm.ir)": [[155, "tvm.ir.GlobalVar", false]], "gpu() (in module tvm.runtime.ndarray)": [[176, "tvm.runtime.ndarray.gpu", false]], "gradient() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.Gradient", false]], "gradient() (in module tvm.relay.testing)": [[171, "tvm.relay.testing.gradient", false]], "gradient() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.gradient", false]], "gradient() (in module tvm.te)": [[181, "tvm.te.gradient", false]], "graphexecutorcodegen (class in tvm.relay.backend.graph_executor_codegen)": [[165, "tvm.relay.backend.graph_executor_codegen.GraphExecutorCodegen", false]], "graphmodule (class in tvm.contrib.graph_executor)": [[152, "tvm.contrib.graph_executor.GraphModule", false]], "greater() (in module tvm.relax.op)": [[161, "tvm.relax.op.greater", false]], "greater_equal() (in module tvm.relax.op)": [[161, "tvm.relax.op.greater_equal", false]], "grid_sample() (in module tvm.relay.image)": [[168, "tvm.relay.image.grid_sample", false]], "grid_sample() (in module tvm.topi.image)": [[187, "tvm.topi.image.grid_sample", false]], "gridsearchtuner (class in tvm.autotvm.tuner)": [[147, "tvm.autotvm.tuner.GridSearchTuner", false]], "group_conv1d_ncw() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.group_conv1d_ncw", false]], "group_conv1d_nwc() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.group_conv1d_nwc", false]], "group_conv1d_transpose_ncw() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.group_conv1d_transpose_ncw", false]], "group_conv2d_nchw() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.group_conv2d_nchw", false]], "group_conv2d_nhwc() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.group_conv2d_nhwc", false]], "group_conv2d_transpose_nchw() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.group_conv2d_transpose_nchw", false]], "group_conv3d_transpose_ncdhw() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.group_conv3d_transpose_ncdhw", false]], "group_norm() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.group_norm", false]], "group_norm() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.group_norm", false]], "group_norm() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.group_norm", false]], "gt (class in tvm.tir)": [[185, "tvm.tir.GT", false]], "hardwareparams (class in tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.HardwareParams", false]], "has_attr() (in module tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.has_attr", false]], "has_attr() (tvm.ir.op method)": [[155, "tvm.ir.Op.has_attr", false]], "has_attr() (tvm.relay.dataflow_pattern.dfpattern method)": [[166, "tvm.relay.dataflow_pattern.DFPattern.has_attr", false]], "has_dtype() (in module tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.has_dtype", false]], "has_dtype() (tvm.relay.dataflow_pattern.dfpattern method)": [[166, "tvm.relay.dataflow_pattern.DFPattern.has_dtype", false]], "has_next() (tvm.autotvm.tuner.gatuner method)": [[147, "tvm.autotvm.tuner.GATuner.has_next", false]], "has_next() (tvm.autotvm.tuner.gridsearchtuner method)": [[147, "tvm.autotvm.tuner.GridSearchTuner.has_next", false]], "has_next() (tvm.autotvm.tuner.randomtuner method)": [[147, "tvm.autotvm.tuner.RandomTuner.has_next", false]], "has_next() (tvm.autotvm.tuner.tuner method)": [[147, "tvm.autotvm.tuner.Tuner.has_next", false]], "has_next() (tvm.autotvm.tuner.xgbtuner method)": [[147, "tvm.autotvm.tuner.XGBTuner.has_next", false]], "has_reshape_pattern() (in module tvm.relax.analysis)": [[158, "tvm.relax.analysis.has_reshape_pattern", false]], "has_shape() (in module tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.has_shape", false]], "has_shape() (tvm.relay.dataflow_pattern.dfpattern method)": [[166, "tvm.relay.dataflow_pattern.DFPattern.has_shape", false]], "has_type() (in module tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.has_type", false]], "has_type() (tvm.relay.dataflow_pattern.dfpattern method)": [[166, "tvm.relay.dataflow_pattern.DFPattern.has_type", false]], "has_workload() (tvm.meta_schedule.database method)": [[156, "tvm.meta_schedule.Database.has_workload", false]], "have_cudagraph() (in module tvm.contrib.nvcc)": [[148, "tvm.contrib.nvcc.have_cudagraph", false]], "have_fp16() (in module tvm.contrib.nvcc)": [[148, "tvm.contrib.nvcc.have_fp16", false]], "have_int8() (in module tvm.contrib.nvcc)": [[148, "tvm.contrib.nvcc.have_int8", false]], "have_matrixcore() (in module tvm.contrib.rocm)": [[148, "tvm.contrib.rocm.have_matrixcore", false]], "have_tensorcore() (in module tvm.contrib.nvcc)": [[148, "tvm.contrib.nvcc.have_tensorcore", false]], "height (tvm.topi.nn.workload attribute)": [[187, "tvm.topi.nn.Workload.height", false]], "hexagon() (in module tvm.runtime.ndarray)": [[176, "tvm.runtime.ndarray.hexagon", false]], "hexagon() (in module tvm.target)": [[180, "tvm.target.hexagon", false]], "hexagon() (tvm.rpc.rpcsession method)": [[174, "tvm.rpc.RPCSession.hexagon", false]], "hint_on_device() (in module tvm.relax.op)": [[161, "tvm.relax.op.hint_on_device", false]], "hoistedconditionals (class in tvm.tir.transform)": [[186, "tvm.tir.transform.HoistedConditionals", false]], "hoistedletbindings (class in tvm.tir.transform)": [[186, "tvm.tir.transform.HoistedLetBindings", false]], "hoistexpression() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.HoistExpression", false]], "hoistifthenelse() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.HoistIfThenElse", false]], "hybridmodule (class in tvm.te.hybrid)": [[181, "tvm.te.hybrid.HybridModule", false]], "hybridop (class in tvm.te)": [[181, "tvm.te.HybridOp", false]], "hypot() (in module tvm.tir)": [[185, "tvm.tir.hypot", false]], "id (class in tvm.relax)": [[162, "tvm.relax.Id", false]], "if (class in tvm.relax)": [[162, "tvm.relax.If", false]], "if_then_else() (in module tvm.te)": [[181, "tvm.te.if_then_else", false]], "if_then_else() (in module tvm.tir)": [[185, "tvm.tir.if_then_else", false]], "ifelseexpr (tvm.tir.transform.hoistedconditionals attribute)": [[186, "tvm.tir.transform.HoistedConditionals.IfElseExpr", false]], "ifelsestmt (tvm.tir.transform.hoistedconditionals attribute)": [[186, "tvm.tir.transform.HoistedConditionals.IfElseStmt", false]], "ifpattern (class in tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.IfPattern", false]], "ifthenelse (class in tvm.tir)": [[185, "tvm.tir.IfThenElse", false]], "imm() (tvm.relax.execbuilder method)": [[162, "tvm.relax.ExecBuilder.imm", false]], "import_python_module() (tvm.runtime.disco.session method)": [[175, "tvm.runtime.disco.Session.import_python_module", false]], "in_dtype (tvm.topi.nn.workload attribute)": [[187, "tvm.topi.nn.Workload.in_dtype", false]], "in_filter (tvm.topi.nn.workload attribute)": [[187, "tvm.topi.nn.Workload.in_filter", false]], "inc_num_evals() (tvm.transform.passcontext method)": [[188, "tvm.transform.PassContext.inc_num_evals", false]], "incompletetype (class in tvm.ir)": [[155, "tvm.ir.IncompleteType", false]], "index (tvm.autotvm.task.space.axis attribute)": [[147, "tvm.autotvm.task.space.Axis.index", false]], "index_of() (tvm.tir.layout method)": [[185, "tvm.tir.Layout.index_of", false]], "indexdiv() (in module tvm.te)": [[181, "tvm.te.indexdiv", false]], "indexdiv() (in module tvm.tir)": [[185, "tvm.tir.indexdiv", false]], "indexmap (class in tvm.tir)": [[185, "tvm.tir.IndexMap", false]], "indexmod() (in module tvm.te)": [[181, "tvm.te.indexmod", false]], "indexmod() (in module tvm.tir)": [[185, "tvm.tir.indexmod", false]], "infer_bound_from_state() (tvm.auto_scheduler.computedag method)": [[146, "tvm.auto_scheduler.ComputeDAG.infer_bound_from_state", false]], "inferfragment() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.InferFragment", false]], "infertype() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.InferType", false]], "infertypelocal() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.InferTypeLocal", false]], "infinity() (in module tvm.tir)": [[185, "tvm.tir.infinity", false]], "info (tvm.transform.pass property)": [[188, "tvm.transform.Pass.info", false]], "init_ccl() (tvm.runtime.disco.session method)": [[175, "tvm.runtime.disco.Session.init_ccl", false]], "initattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.InitAttrs", false]], "injectcopyintrin() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.InjectCopyIntrin", false]], "injectdoublebuffer() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.InjectDoubleBuffer", false]], "injectpermutedlayout() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.InjectPermutedLayout", false]], "injectprefetch() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.InjectPrefetch", false]], "injectptxasynccopy() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.InjectPTXAsyncCopy", false]], "injectrollingbuffer() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.InjectRollingBuffer", false]], "injectsoftwarepipeline() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.InjectSoftwarePipeline", false]], "injectvirtualthread() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.InjectVirtualThread", false]], "inline() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.Inline", false]], "inline_mark() (tvm.tir.schedule.stmtsref static method)": [[183, "tvm.tir.schedule.StmtSRef.inline_mark", false]], "inlinecompilerfunctionsboundto() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.InlineCompilerFunctionsBoundTo", false]], "inlineprivatefunctions() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.InlinePrivateFunctions", false]], "inlineprivatefunctions() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.InlinePrivateFunctions", false]], "inputs (tvm.tir.schedule.instruction attribute)": [[183, "tvm.tir.schedule.Instruction.inputs", false]], "installdebugspans() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.InstallDebugSpans", false]], "instance_norm() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.instance_norm", false]], "instance_norm() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.instance_norm", false]], "instantiate() (tvm.autotvm.task.task.task method)": [[147, "tvm.autotvm.task.task.Task.instantiate", false]], "instantiationerror": [[147, "tvm.autotvm.task.space.InstantiationError", false]], "instruction (class in tvm.tir.schedule)": [[183, "tvm.tir.schedule.Instruction", false]], "instructionkind (class in tvm.tir.schedule)": [[183, "tvm.tir.schedule.InstructionKind", false]], "instrumentboundcheckers() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.InstrumentBoundCheckers", false]], "instrumentprofileintrinsics() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.InstrumentProfileIntrinsics", false]], "insts (tvm.tir.schedule.trace attribute)": [[183, "tvm.tir.schedule.Trace.insts", false]], "intel_graphics() (in module tvm.target)": [[180, "tvm.target.intel_graphics", false]], "internalerror": [[151, "tvm.error.InternalError", false]], "interpreter (class in tvm.relay.backend.interpreter)": [[165, "tvm.relay.backend.interpreter.Interpreter", false]], "intimm (class in tvm.tir)": [[185, "tvm.tir.IntImm", false]], "inverse() (tvm.tir.indexmap method)": [[185, "tvm.tir.IndexMap.inverse", false]], "invoke_closure() (in module tvm.relax.op)": [[161, "tvm.relax.op.invoke_closure", false]], "invoke_closure() (tvm.relax.virtualmachine method)": [[162, "tvm.relax.VirtualMachine.invoke_closure", false]], "invoke_closure() (tvm.runtime.relax_vm.virtualmachine method)": [[178, "tvm.runtime.relax_vm.VirtualMachine.invoke_closure", false]], "invoke_pure_closure() (in module tvm.relax.op)": [[161, "tvm.relax.op.invoke_pure_closure", false]], "invoke_stateful() (tvm.relax.virtualmachine method)": [[162, "tvm.relax.VirtualMachine.invoke_stateful", false]], "invoke_stateful() (tvm.runtime.relax_vm.virtualmachine method)": [[178, "tvm.runtime.relax_vm.VirtualMachine.invoke_stateful", false]], "ipcallreducerewrite (class in tvm.relax.transform)": [[163, "tvm.relax.transform.IPCAllReduceRewrite", false]], "ir_transform() (in module tvm.tir.stmt_functor)": [[184, "tvm.tir.stmt_functor.ir_transform", false]], "irmodule (class in tvm.ir)": [[155, "tvm.ir.IRModule", false]], "is_auto_scheduler_enabled() (in module tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.is_auto_scheduler_enabled", false]], "is_available() (in module tvm.contrib.nnpack)": [[148, "tvm.contrib.nnpack.is_available", false]], "is_base_of() (tvm.relax.structinfo method)": [[162, "tvm.relax.StructInfo.is_base_of", false]], "is_constant() (in module tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.is_constant", false]], "is_elementwise() (tvm.dlight.blockinfo method)": [[149, "tvm.dlight.BlockInfo.is_elementwise", false]], "is_equivalent_to() (tvm.tir.indexmap method)": [[185, "tvm.tir.IndexMap.is_equivalent_to", false]], "is_expr() (in module tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.is_expr", false]], "is_gemm() (tvm.dlight.blockinfo method)": [[149, "tvm.dlight.BlockInfo.is_gemm", false]], "is_gemv() (tvm.dlight.blockinfo method)": [[149, "tvm.dlight.BlockInfo.is_gemv", false]], "is_if() (in module tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.is_if", false]], "is_index_valid() (tvm.autotvm.task.space.configspace method)": [[147, "tvm.autotvm.task.space.ConfigSpace.is_index_valid", false]], "is_injective() (tvm.dlight.blockinfo method)": [[149, "tvm.dlight.BlockInfo.is_injective", false]], "is_let() (in module tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.is_let", false]], "is_meta_schedule_enabled() (in module tvm.meta_schedule)": [[156, "tvm.meta_schedule.is_meta_schedule_enabled", false]], "is_op() (in module tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.is_op", false]], "is_pure (tvm.tir.schedule.instructionkind property)": [[183, "tvm.tir.schedule.InstructionKind.is_pure", false]], "is_pure_function() (in module tvm.tir.analysis.analysis)": [[182, "tvm.tir.analysis.analysis.is_pure_function", false]], "is_recursive() (tvm.relay.analysis.callgraph method)": [[164, "tvm.relay.analysis.CallGraph.is_recursive", false]], "is_reduction() (tvm.dlight.blockinfo method)": [[149, "tvm.dlight.BlockInfo.is_reduction", false]], "is_source_path() (in module tvm.contrib.utils)": [[148, "tvm.contrib.utils.is_source_path", false]], "is_target_available() (tvm.dlight.schedulerule method)": [[149, "tvm.dlight.ScheduleRule.is_target_available", false]], "is_tuple() (in module tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.is_tuple", false]], "is_tuple_get_item() (in module tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.is_tuple_get_item", false]], "is_var() (in module tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.is_var", false]], "isfinite() (in module tvm.relax.op)": [[161, "tvm.relax.op.isfinite", false]], "isfinite() (in module tvm.te)": [[181, "tvm.te.isfinite", false]], "isfinite() (in module tvm.tir)": [[185, "tvm.tir.isfinite", false]], "isinf() (in module tvm.relax.op)": [[161, "tvm.relax.op.isinf", false]], "isinf() (in module tvm.te)": [[181, "tvm.te.isinf", false]], "isinf() (in module tvm.tir)": [[185, "tvm.tir.isinf", false]], "isnan() (in module tvm.relax.op)": [[161, "tvm.relax.op.isnan", false]], "isnan() (in module tvm.te)": [[181, "tvm.te.isnan", false]], "isnan() (in module tvm.tir)": [[185, "tvm.tir.isnan", false]], "isnullptr() (in module tvm.tir)": [[185, "tvm.tir.isnullptr", false]], "items() (tvm.ir.dictattrs method)": [[155, "tvm.ir.DictAttrs.items", false]], "items() (tvm.ir.map method)": [[155, "tvm.ir.Map.items", false]], "items() (tvm.relay.backend.te_compiler.tecompiler method)": [[165, "tvm.relay.backend.te_compiler.TECompiler.items", false]], "iterinfo (class in tvm.dlight)": [[149, "tvm.dlight.IterInfo", false]], "itervar (class in tvm.tir)": [[185, "tvm.tir.IterVar", false]], "jit() (tvm.relax.executable method)": [[162, "tvm.relax.Executable.jit", false]], "jit() (tvm.relay.backend.te_compiler.tecompiler method)": [[165, "tvm.relay.backend.te_compiler.TECompiler.jit", false]], "join_running_task() (tvm.meta_schedule.taskscheduler method)": [[156, "tvm.meta_schedule.TaskScheduler.join_running_task", false]], "json() (tvm.runtime.profiling.report method)": [[177, "tvm.runtime.profiling.Report.json", false]], "kernel_h (tvm.topi.nn.workload attribute)": [[187, "tvm.topi.nn.Workload.kernel_h", false]], "kernel_w (tvm.topi.nn.workload attribute)": [[187, "tvm.topi.nn.Workload.kernel_w", false]], "keys() (tvm.ir.attrs method)": [[155, "tvm.ir.Attrs.keys", false]], "keys() (tvm.ir.dictattrs method)": [[155, "tvm.ir.DictAttrs.keys", false]], "kill_storage() (in module tvm.relax.op.memory)": [[161, "tvm.relax.op.memory.kill_storage", false]], "kill_tensor() (in module tvm.relax.op.memory)": [[161, "tvm.relax.op.memory.kill_tensor", false]], "killafterlastuse() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.KillAfterLastUse", false]], "kind (tvm.tir.schedule.instruction attribute)": [[183, "tvm.tir.schedule.Instruction.kind", false]], "knob2point() (tvm.autotvm.task.space.configspace method)": [[147, "tvm.autotvm.task.space.ConfigSpace.knob2point", false]], "l2_normalize() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.l2_normalize", false]], "lambdalift() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.LambdaLift", false]], "lambdalift() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.LambdaLift", false]], "layer_norm() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.layer_norm", false]], "layer_norm() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.layer_norm", false]], "layer_norm() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.layer_norm", false]], "layernormattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.LayerNormAttrs", false]], "layout (class in tvm.tir)": [[185, "tvm.tir.Layout", false]], "layout() (in module tvm.tir)": [[185, "tvm.tir.layout", false]], "layout_transform() (in module tvm.relax.op)": [[161, "tvm.relax.op.layout_transform", false]], "layout_transform() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.layout_transform", false]], "layoutconfig (class in tvm.relay.transform)": [[172, "tvm.relay.transform.LayoutConfig", false]], "layoutrewriteoption (class in tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.LayoutRewriteOption", false]], "layouttransformattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.LayoutTransformAttrs", false]], "lazygetinput() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.LazyGetInput", false]], "lazygradientinit() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.LazyGradientInit", false]], "lazysetoutput() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.LazySetOutput", false]], "lazytransformparams (class in tvm.relax.transform)": [[163, "tvm.relax.transform.LazyTransformParams", false]], "ldexp() (in module tvm.tir)": [[185, "tvm.tir.ldexp", false]], "le (class in tvm.tir)": [[185, "tvm.tir.LE", false]], "leaky_relu() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.leaky_relu", false]], "leaky_relu() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.leaky_relu", false]], "leakyrelu() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.leakyrelu", false]], "left_shift() (in module tvm.relax.op)": [[161, "tvm.relax.op.left_shift", false]], "legalize() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.Legalize", false]], "legalizeops() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.LegalizeOps", false]], "legalizepackedcalls() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.LegalizePackedCalls", false]], "less() (in module tvm.relax.op)": [[161, "tvm.relax.op.less", false]], "less_equal() (in module tvm.relax.op)": [[161, "tvm.relax.op.less_equal", false]], "let (class in tvm.tir)": [[185, "tvm.tir.Let", false]], "letexpr (tvm.tir.transform.hoistedletbindings attribute)": [[186, "tvm.tir.transform.HoistedLetBindings.LetExpr", false]], "letpattern (class in tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.LetPattern", false]], "letstmt (class in tvm.tir)": [[185, "tvm.tir.LetStmt", false]], "letstmt (tvm.tir.transform.hoistedletbindings attribute)": [[186, "tvm.tir.transform.HoistedLetBindings.LetStmt", false]], "liftattrscope() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.LiftAttrScope", false]], "liftthreadbinding() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.LiftThreadBinding", false]], "lifttransformparams() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.LiftTransformParams", false]], "likely() (in module tvm.tir)": [[185, "tvm.tir.likely", false]], "linear() (in module tvm.relax.op)": [[161, "tvm.relax.op.linear", false]], "list_configs() (tvm.transform.passcontext static method)": [[188, "tvm.transform.PassContext.list_configs", false]], "list_fake_quantized_op_freqs() (in module tvm.relay.analysis)": [[164, "tvm.relay.analysis.list_fake_quantized_op_freqs", false]], "list_field_info() (tvm.ir.attrs method)": [[155, "tvm.ir.Attrs.list_field_info", false]], "list_kinds() (tvm.target.target static method)": [[180, "tvm.target.Target.list_kinds", false]], "list_op_freqs() (in module tvm.relay.analysis)": [[164, "tvm.relay.analysis.list_op_freqs", false]], "list_op_names() (tvm.ir.op static method)": [[155, "tvm.ir.Op.list_op_names", false]], "list_tags() (in module tvm.target)": [[180, "tvm.target.list_tags", false]], "listdir() (tvm.contrib.utils.tempdirectory method)": [[148, "tvm.contrib.utils.TempDirectory.listdir", false]], "listdir() (tvm.rpc.rpcsession method)": [[174, "tvm.rpc.RPCSession.listdir", false]], "load() (tvm.auto_scheduler.applyhistorybest method)": [[146, "tvm.auto_scheduler.ApplyHistoryBest.load", false]], "load() (tvm.auto_scheduler.xgbmodel method)": [[146, "tvm.auto_scheduler.XGBModel.load", false]], "load() (tvm.autotvm.task.dispatcher.applyhistorybest method)": [[147, "tvm.autotvm.task.dispatcher.ApplyHistoryBest.load", false]], "load() (tvm.meta_schedule.costmodel method)": [[156, "tvm.meta_schedule.CostModel.load", false]], "load() (tvm.te.hybrid.hybridmodule method)": [[181, "tvm.te.hybrid.HybridModule.load", false]], "load_best_record() (in module tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.load_best_record", false]], "load_from_buffer() (in module tvm.autotvm.record)": [[147, "tvm.autotvm.record.load_from_buffer", false]], "load_from_file() (in module tvm.autotvm.record)": [[147, "tvm.autotvm.record.load_from_file", false]], "load_history() (tvm.autotvm.tuner.gatuner method)": [[147, "tvm.autotvm.tuner.GATuner.load_history", false]], "load_history() (tvm.autotvm.tuner.gridsearchtuner method)": [[147, "tvm.autotvm.tuner.GridSearchTuner.load_history", false]], "load_history() (tvm.autotvm.tuner.randomtuner method)": [[147, "tvm.autotvm.tuner.RandomTuner.load_history", false]], "load_history() (tvm.autotvm.tuner.tuner method)": [[147, "tvm.autotvm.tuner.Tuner.load_history", false]], "load_history() (tvm.autotvm.tuner.xgbtuner method)": [[147, "tvm.autotvm.tuner.XGBTuner.load_history", false]], "load_json() (in module tvm.ir)": [[155, "tvm.ir.load_json", false]], "load_module() (tvm.rpc.rpcsession method)": [[174, "tvm.rpc.RPCSession.load_module", false]], "load_params() (tvm.contrib.graph_executor.graphmodule method)": [[152, "tvm.contrib.graph_executor.GraphModule.load_params", false]], "load_prelude() (tvm.relay.testing.prelude method)": [[171, "tvm.relay.testing.Prelude.load_prelude", false]], "load_records() (in module tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.load_records", false]], "load_vm_module() (tvm.runtime.disco.session method)": [[175, "tvm.runtime.disco.Session.load_vm_module", false]], "localbuilder (class in tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.LocalBuilder", false]], "localbuilder (class in tvm.autotvm.measure.measure_methods)": [[147, "tvm.autotvm.measure.measure_methods.LocalBuilder", false]], "localrpcmeasurecontext (class in tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.LocalRPCMeasureContext", false]], "localrunner (class in tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.LocalRunner", false]], "localrunner (class in tvm.autotvm.measure.measure_methods)": [[147, "tvm.autotvm.measure.measure_methods.LocalRunner", false]], "localsession (class in tvm.rpc)": [[174, "tvm.rpc.LocalSession", false]], "log() (in module tvm.relax.op)": [[161, "tvm.relax.op.log", false]], "log() (in module tvm.te)": [[181, "tvm.te.log", false]], "log() (in module tvm.tir)": [[185, "tvm.tir.log", false]], "log10() (in module tvm.te)": [[181, "tvm.te.log10", false]], "log10() (in module tvm.tir)": [[185, "tvm.tir.log10", false]], "log1p() (in module tvm.tir)": [[185, "tvm.tir.log1p", false]], "log2() (in module tvm.te)": [[181, "tvm.te.log2", false]], "log2() (in module tvm.tir)": [[185, "tvm.tir.log2", false]], "log_softmax() (in module tvm.contrib.miopen)": [[148, "tvm.contrib.miopen.log_softmax", false]], "log_softmax() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.log_softmax", false]], "log_softmax() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.log_softmax", false]], "log_softmax() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.log_softmax", false]], "log_to_database() (in module tvm.autotvm.tuner.callback)": [[147, "tvm.autotvm.tuner.callback.log_to_database", false]], "log_to_file() (in module tvm.autotvm.tuner.callback)": [[147, "tvm.autotvm.tuner.callback.log_to_file", false]], "logical_and() (in module tvm.relax.op)": [[161, "tvm.relax.op.logical_and", false]], "logical_not() (in module tvm.relax.op)": [[161, "tvm.relax.op.logical_not", false]], "logical_or() (in module tvm.relax.op)": [[161, "tvm.relax.op.logical_or", false]], "logical_xor() (in module tvm.relax.op)": [[161, "tvm.relax.op.logical_xor", false]], "lookup_binding() (tvm.relax.block_builder.blockbuilder method)": [[159, "tvm.relax.block_builder.BlockBuilder.lookup_binding", false]], "lookup_binding() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.lookup_binding", false]], "lookup_param() (in module tvm.tir)": [[185, "tvm.tir.lookup_param", false]], "loop_partition() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.loop_partition", false]], "looppartition() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.LoopPartition", false]], "looprv (class in tvm.tir.schedule)": [[183, "tvm.tir.schedule.LoopRV", false]], "lower() (in module tvm)": [[150, "tvm.lower", false]], "lower() (tvm.relay.backend.te_compiler.tecompiler method)": [[165, "tvm.relay.backend.te_compiler.TECompiler.lower", false]], "lower() (tvm.relay.backend.vm.vmcompiler method)": [[165, "tvm.relay.backend.vm.VMCompiler.lower", false]], "lower_to_primfunc() (in module tvm.relay.backend.te_compiler)": [[165, "tvm.relay.backend.te_compiler.lower_to_primfunc", false]], "loweralloctensor() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.LowerAllocTensor", false]], "lowerautocopy() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.LowerAutoCopy", false]], "lowercrossthreadreduction() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.LowerCrossThreadReduction", false]], "lowercustomdatatypes() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.LowerCustomDatatypes", false]], "lowerdevicekernellaunch() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.LowerDeviceKernelLaunch", false]], "lowerdevicestorageaccessinfo() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.LowerDeviceStorageAccessInfo", false]], "loweredoutput (class in tvm.relay.backend.te_compiler)": [[165, "tvm.relay.backend.te_compiler.LoweredOutput", false]], "lowergpuipcallocstorage (class in tvm.relax.transform)": [[163, "tvm.relax.transform.LowerGPUIPCAllocStorage", false]], "lowerinitblock() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.LowerInitBlock", false]], "lowerintrin() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.LowerIntrin", false]], "lowermatchbuffer() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.LowerMatchBuffer", false]], "loweropaqueblock() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.LowerOpaqueBlock", false]], "lowerruntimebuiltin() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.LowerRuntimeBuiltin", false]], "lowerthreadallreduce() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.LowerThreadAllreduce", false]], "lowertvmbuiltin() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.LowerTVMBuiltin", false]], "lowerwarpmemory() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.LowerWarpMemory", false]], "lrn() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.lrn", false]], "lrn() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.lrn", false]], "lstm() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.lstm", false]], "lstm_cell() (in module tvm.relay.testing.lstm)": [[171, "tvm.relay.testing.lstm.lstm_cell", false]], "lt (class in tvm.tir)": [[185, "tvm.tir.LT", false]], "make_closure() (in module tvm.relax.op)": [[161, "tvm.relax.op.make_closure", false]], "make_compilation_config() (in module tvm.target)": [[180, "tvm.target.make_compilation_config", false]], "make_filled_simdgroup_matrix() (in module tvm.tir)": [[185, "tvm.tir.make_filled_simdgroup_matrix", false]], "make_nat_expr() (in module tvm.relay.testing)": [[171, "tvm.relay.testing.make_nat_expr", false]], "make_nat_value() (in module tvm.relay.testing)": [[171, "tvm.relay.testing.make_nat_value", false]], "make_node() (in module tvm.ir)": [[155, "tvm.ir.make_node", false]], "make_node() (in module tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.make_node", false]], "make_workload_key() (in module tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.make_workload_key", false]], "makepackedapi() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.MakePackedAPI", false]], "makeunpackedapi() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.MakeUnpackedAPI", false]], "mali() (in module tvm.target)": [[180, "tvm.target.mali", false]], "manifestlifetimes() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.ManifestLifetimes", false]], "manifestsharedmemorylocalstage() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.ManifestSharedMemoryLocalStage", false]], "map (class in tvm.ir)": [[155, "tvm.ir.Map", false]], "map_indices() (tvm.tir.indexmap method)": [[185, "tvm.tir.IndexMap.map_indices", false]], "map_ndarray() (tvm.tir.indexmap method)": [[185, "tvm.tir.IndexMap.map_ndarray", false]], "map_shape() (tvm.tir.indexmap method)": [[185, "tvm.tir.IndexMap.map_shape", false]], "markcompilerfunctionsasextern() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.MarkCompilerFunctionsAsExtern", false]], "masked_fill() (in module tvm.relax.op)": [[161, "tvm.relax.op.masked_fill", false]], "match() (in module tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.match", false]], "match() (tvm.relay.dataflow_pattern.dfpattern method)": [[166, "tvm.relay.dataflow_pattern.DFPattern.match", false]], "match_cast() (tvm.relax.block_builder.blockbuilder method)": [[159, "tvm.relax.block_builder.BlockBuilder.match_cast", false]], "matchbufferregion (class in tvm.tir)": [[185, "tvm.tir.MatchBufferRegion", false]], "matchcast (class in tvm.relax)": [[162, "tvm.relax.MatchCast", false]], "matmul() (in module tvm.contrib.cblas)": [[148, "tvm.contrib.cblas.matmul", false]], "matmul() (in module tvm.contrib.cublas)": [[148, "tvm.contrib.cublas.matmul", false]], "matmul() (in module tvm.contrib.rocblas)": [[148, "tvm.contrib.rocblas.matmul", false]], "matmul() (in module tvm.relax.op)": [[161, "tvm.relax.op.matmul", false]], "matmul() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.matmul", false]], "matmul() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.matmul", false]], "matmul_legalize() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.matmul_legalize", false]], "matmulattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.MatmulAttrs", false]], "mattr (tvm.target.target property)": [[180, "tvm.target.Target.mattr", false]], "max (class in tvm.tir)": [[185, "tvm.tir.Max", false]], "max() (in module tvm.relax.op)": [[161, "tvm.relax.op.max", false]], "max() (in module tvm.te)": [[181, "tvm.te.max", false]], "max() (in module tvm.tir)": [[185, "tvm.tir.max", false]], "max_block_size_x (tvm.target.target property)": [[180, "tvm.target.Target.max_block_size_x", false]], "max_block_size_y (tvm.target.target property)": [[180, "tvm.target.Target.max_block_size_y", false]], "max_num_threads (tvm.target.target property)": [[180, "tvm.target.Target.max_num_threads", false]], "max_pool1d() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.max_pool1d", false]], "max_pool1d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.max_pool1d", false]], "max_pool2d() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.max_pool2d", false]], "max_pool2d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.max_pool2d", false]], "max_pool2d_backward() (in module tvm.relax.op.grad)": [[161, "tvm.relax.op.grad.max_pool2d_backward", false]], "max_pool2d_grad() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.max_pool2d_grad", false]], "max_pool3d() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.max_pool3d", false]], "max_pool3d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.max_pool3d", false]], "max_value() (in module tvm.te)": [[181, "tvm.te.max_value", false]], "max_value() (in module tvm.tir)": [[185, "tvm.tir.max_value", false]], "maximum() (in module tvm.relax.op)": [[161, "tvm.relax.op.maximum", false]], "mcpu (tvm.target.target property)": [[180, "tvm.target.Target.mcpu", false]], "mean() (in module tvm.relax.op)": [[161, "tvm.relax.op.mean", false]], "measure_option() (in module tvm.autotvm.measure)": [[147, "tvm.autotvm.measure.measure_option", false]], "measure_str_key() (in module tvm.autotvm.record)": [[147, "tvm.autotvm.record.measure_str_key", false]], "measurecallback (class in tvm.meta_schedule)": [[156, "tvm.meta_schedule.MeasureCallback", false]], "measurecandidate (class in tvm.meta_schedule)": [[156, "tvm.meta_schedule.MeasureCandidate", false]], "measureinput (class in tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.MeasureInput", false]], "measureinput (class in tvm.autotvm.measure)": [[147, "tvm.autotvm.measure.MeasureInput", false]], "measureresult (class in tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.MeasureResult", false]], "measureresult (class in tvm.autotvm.measure)": [[147, "tvm.autotvm.measure.MeasureResult", false]], "memoize() (in module tvm.contrib.pickle_memoize)": [[148, "tvm.contrib.pickle_memoize.memoize", false]], "merge() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.merge", false]], "mergecompilerregions() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.MergeCompilerRegions", false]], "mergecomposite() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.MergeComposite", false]], "mergecompositefunctions() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.MergeCompositeFunctions", false]], "mergesharedmemoryallocations() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.MergeSharedMemoryAllocations", false]], "metal() (in module tvm.runtime.ndarray)": [[176, "tvm.runtime.ndarray.metal", false]], "metal() (tvm.rpc.rpcsession method)": [[174, "tvm.rpc.RPCSession.metal", false]], "metascheduleapplydatabase() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.MetaScheduleApplyDatabase", false]], "metascheduletuneirmod() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.MetaScheduleTuneIRMod", false]], "metascheduletunetir() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.MetaScheduleTuneTIR", false]], "metriccollector (class in tvm.runtime.profiling)": [[177, "tvm.runtime.profiling.MetricCollector", false]], "min (class in tvm.tir)": [[185, "tvm.tir.Min", false]], "min() (in module tvm.relax.op)": [[161, "tvm.relax.op.min", false]], "min() (in module tvm.te)": [[181, "tvm.te.min", false]], "min() (in module tvm.tir)": [[185, "tvm.tir.min", false]], "min_value() (in module tvm.te)": [[181, "tvm.te.min_value", false]], "min_value() (in module tvm.tir)": [[185, "tvm.tir.min_value", false]], "minimum() (in module tvm.relax.op)": [[161, "tvm.relax.op.minimum", false]], "mirror_pad() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.mirror_pad", false]], "mirror_pad() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.mirror_pad", false]], "missingtask (class in tvm.autotvm.task.task)": [[147, "tvm.autotvm.task.task.MissingTask", false]], "mma_fill() (in module tvm.tir)": [[185, "tvm.tir.mma_fill", false]], "mma_store() (in module tvm.tir)": [[185, "tvm.tir.mma_store", false]], "mobile_net() (in module tvm.relay.testing.mobilenet)": [[171, "tvm.relay.testing.mobilenet.mobile_net", false]], "mod (class in tvm.tir)": [[185, "tvm.tir.Mod", false]], "mod (tvm.tir.schedule.schedule property)": [[183, "tvm.tir.schedule.Schedule.mod", false]], "mod() (in module tvm.relax.op)": [[161, "tvm.relax.op.mod", false]], "model (tvm.target.target property)": [[180, "tvm.target.Target.model", false]], "module": [[146, "module-tvm.auto_scheduler", false], [147, "module-tvm.autotvm", false], [147, "module-tvm.autotvm.measure.measure", false], [147, "module-tvm.autotvm.record", false], [147, "module-tvm.autotvm.task", false], [147, "module-tvm.autotvm.task.dispatcher", false], [147, "module-tvm.autotvm.task.space", false], [147, "module-tvm.autotvm.task.task", false], [147, "module-tvm.autotvm.task.topi_integration", false], [147, "module-tvm.autotvm.tuner", false], [147, "module-tvm.autotvm.tuner.callback", false], [148, "module-tvm.contrib", false], [148, "module-tvm.contrib.cblas", false], [148, "module-tvm.contrib.cc", false], [148, "module-tvm.contrib.clang", false], [148, "module-tvm.contrib.cublas", false], [148, "module-tvm.contrib.dlpack", false], [148, "module-tvm.contrib.emcc", false], [148, "module-tvm.contrib.miopen", false], [148, "module-tvm.contrib.mxnet", false], [148, "module-tvm.contrib.ndk", false], [148, "module-tvm.contrib.nnpack", false], [148, "module-tvm.contrib.nvcc", false], [148, "module-tvm.contrib.pickle_memoize", false], [148, "module-tvm.contrib.random", false], [148, "module-tvm.contrib.relay_viz", false], [148, "module-tvm.contrib.relay_viz.dot", false], [148, "module-tvm.contrib.relay_viz.interface", false], [148, "module-tvm.contrib.relay_viz.terminal", false], [148, "module-tvm.contrib.rocblas", false], [148, "module-tvm.contrib.rocm", false], [148, "module-tvm.contrib.sparse", false], [148, "module-tvm.contrib.spirv", false], [148, "module-tvm.contrib.tar", false], [148, "module-tvm.contrib.utils", false], [148, "module-tvm.contrib.xcode", false], [149, "module-tvm.dlight", false], [150, "module-tvm.driver", false], [151, "module-tvm.error", false], [152, "module-tvm.contrib.graph_executor", false], [154, "module-tvm.instrument", false], [155, "module-tvm.ir", false], [156, "module-tvm.meta_schedule", false], [157, "module-tvm.micro", false], [158, "module-tvm.relax.analysis", false], [159, "module-tvm.relax.block_builder", false], [160, "module-tvm.relax.frontend", false], [160, "module-tvm.relax.frontend.onnx", false], [160, "module-tvm.relax.frontend.stablehlo", false], [160, "module-tvm.relax.frontend.torch", false], [161, "module-tvm.relax.op", false], [161, "module-tvm.relax.op.builtin", false], [161, "module-tvm.relax.op.ccl", false], [161, "module-tvm.relax.op.distributed", false], [161, "module-tvm.relax.op.grad", false], [161, "module-tvm.relax.op.image", false], [161, "module-tvm.relax.op.memory", false], [161, "module-tvm.relax.op.nn", false], [161, "module-tvm.relax.op.op_attrs", false], [162, "module-tvm.relax", false], [163, "module-tvm.relax.transform", false], [164, "module-tvm.relay.analysis", false], [165, "module-tvm.relay.backend", false], [165, "module-tvm.relay.backend.graph_executor_codegen", false], [165, "module-tvm.relay.backend.interpreter", false], [165, "module-tvm.relay.backend.te_compiler", false], [165, "module-tvm.relay.backend.vm", false], [166, "module-tvm.relay.dataflow_pattern", false], [167, "module-tvm.relay.frontend", false], [168, "module-tvm.relay.image", false], [170, "module-tvm.relay.nn", false], [171, "module-tvm.relay.testing", false], [171, "module-tvm.relay.testing.dcgan", false], [171, "module-tvm.relay.testing.densenet", false], [171, "module-tvm.relay.testing.inception_v3", false], [171, "module-tvm.relay.testing.lstm", false], [171, "module-tvm.relay.testing.mlp", false], [171, "module-tvm.relay.testing.mobilenet", false], [171, "module-tvm.relay.testing.resnet", false], [171, "module-tvm.relay.testing.squeezenet", false], [171, "module-tvm.relay.testing.vgg", false], [172, "module-tvm.relay.transform", false], [173, "module-tvm.relay.vision", false], [174, "module-tvm.rpc", false], [175, "module-tvm.runtime.disco", false], [176, "module-tvm.runtime.ndarray", false], [177, "module-tvm.runtime.profiling", false], [178, "module-tvm.runtime.relax_vm", false], [179, "module-tvm.runtime", false], [180, "module-tvm.target", false], [181, "module-tvm.te", false], [181, "module-tvm.te.hybrid", false], [182, "module-tvm.tir.analysis.analysis", false], [183, "module-tvm.tir.schedule", false], [184, "module-tvm.tir.stmt_functor", false], [185, "module-tvm.tir", false], [186, "module-tvm.tir.transform", false], [187, "module-tvm.topi.image", false], [187, "module-tvm.topi.nn", false], [187, "module-tvm.topi.sparse", false], [188, "module-tvm.transform", false]], "module (tvm.contrib.graph_executor.graphmodule attribute)": [[152, "tvm.contrib.graph_executor.GraphModule.module", false]], "module (tvm.relay.analysis.callgraph property)": [[164, "tvm.relay.analysis.CallGraph.module", false]], "module_pass() (in module tvm.transform)": [[188, "tvm.transform.module_pass", false]], "modulepass (class in tvm.transform)": [[188, "tvm.transform.ModulePass", false]], "monitor (class in tvm.autotvm.tuner.callback)": [[147, "tvm.autotvm.tuner.callback.Monitor", false]], "mtl() (in module tvm.runtime.ndarray)": [[176, "tvm.runtime.ndarray.mtl", false]], "mul (class in tvm.tir)": [[185, "tvm.tir.Mul", false]], "multi_filter() (tvm.autotvm.task.space.configspace method)": [[147, "tvm.autotvm.task.space.ConfigSpace.multi_filter", false]], "multibox_prior() (in module tvm.relay.vision)": [[173, "tvm.relay.vision.multibox_prior", false]], "multibox_transform_loc() (in module tvm.relay.vision)": [[173, "tvm.relay.vision.multibox_transform_loc", false]], "multinomial_from_uniform() (in module tvm.relax.op)": [[161, "tvm.relax.op.multinomial_from_uniform", false]], "multiply() (in module tvm.relax.op)": [[161, "tvm.relax.op.multiply", false]], "multiply() (in module tvm.te)": [[181, "tvm.te.multiply", false]], "multiply() (in module tvm.tir)": [[185, "tvm.tir.multiply", false]], "mutate_irmodule() (tvm.relax.dataflowblockrewrite method)": [[162, "tvm.relax.DataflowBlockRewrite.mutate_irmodule", false]], "mutated_dfb() (tvm.relax.dataflowblockrewrite method)": [[162, "tvm.relax.DataflowBlockRewrite.mutated_dfb", false]], "mutated_root_fn() (tvm.relax.dataflowblockrewrite method)": [[162, "tvm.relax.DataflowBlockRewrite.mutated_root_fn", false]], "mutator (class in tvm.meta_schedule)": [[156, "tvm.meta_schedule.Mutator", false]], "name (tvm.tir.schedule.instructionkind attribute)": [[183, "tvm.tir.schedule.InstructionKind.name", false]], "name_hint (tvm.relax.var property)": [[162, "tvm.relax.Var.name_hint", false]], "name_to_binding() (in module tvm.relax.analysis)": [[158, "tvm.relax.analysis.name_to_binding", false]], "namedtuple() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.namedtuple", false]], "narrowdatatype() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.NarrowDataType", false]], "nchw_pack_layout() (in module tvm.topi.image)": [[187, "tvm.topi.image.nchw_pack_layout", false]], "nchw_xc_layout() (in module tvm.topi.image)": [[187, "tvm.topi.image.nchw_xc_layout", false]], "ndarray (class in tvm.runtime.ndarray)": [[176, "tvm.runtime.ndarray.NDArray", false]], "ndim (tvm.te.tensor property)": [[181, "tvm.te.Tensor.ndim", false]], "ne (class in tvm.tir)": [[185, "tvm.tir.NE", false]], "nearbyint() (in module tvm.te)": [[181, "tvm.te.nearbyint", false]], "nearbyint() (in module tvm.tir)": [[185, "tvm.tir.nearbyint", false]], "negative() (in module tvm.relax.op)": [[161, "tvm.relax.op.negative", false]], "never (tvm.tir.transform.hoistedconditionals attribute)": [[186, "tvm.tir.transform.HoistedConditionals.Never", false]], "never (tvm.tir.transform.hoistedletbindings attribute)": [[186, "tvm.tir.transform.HoistedLetBindings.Never", false]], "next_batch() (tvm.autotvm.tuner.gatuner method)": [[147, "tvm.autotvm.tuner.GATuner.next_batch", false]], "next_batch() (tvm.autotvm.tuner.gridsearchtuner method)": [[147, "tvm.autotvm.tuner.GridSearchTuner.next_batch", false]], "next_batch() (tvm.autotvm.tuner.randomtuner method)": [[147, "tvm.autotvm.tuner.RandomTuner.next_batch", false]], "next_batch() (tvm.autotvm.tuner.tuner method)": [[147, "tvm.autotvm.tuner.Tuner.next_batch", false]], "next_batch() (tvm.autotvm.tuner.xgbtuner method)": [[147, "tvm.autotvm.tuner.XGBTuner.next_batch", false]], "next_task_id() (tvm.meta_schedule.taskscheduler method)": [[156, "tvm.meta_schedule.TaskScheduler.next_task_id", false]], "nextafter() (in module tvm.tir)": [[185, "tvm.tir.nextafter", false]], "nll_loss() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.nll_loss", false]], "nll_loss() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.nll_loss", false]], "nll_loss() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.nll_loss", false]], "nll_loss_backward() (in module tvm.relax.op.grad)": [[161, "tvm.relax.op.grad.nll_loss_backward", false]], "no_grad() (in module tvm.relax.op.grad)": [[161, "tvm.relax.op.grad.no_grad", false]], "node (class in tvm.ir)": [[155, "tvm.ir.Node", false]], "node() (tvm.contrib.relay_viz.dot.dotgraph method)": [[148, "tvm.contrib.relay_viz.dot.DotGraph.node", false]], "node() (tvm.contrib.relay_viz.interface.vizgraph method)": [[148, "tvm.contrib.relay_viz.interface.VizGraph.node", false]], "node() (tvm.contrib.relay_viz.terminal.termgraph method)": [[148, "tvm.contrib.relay_viz.terminal.TermGraph.node", false]], "non_max_suppression() (in module tvm.relay.vision)": [[173, "tvm.relay.vision.non_max_suppression", false]], "non_surjective_inverse() (tvm.tir.indexmap method)": [[185, "tvm.tir.IndexMap.non_surjective_inverse", false]], "nonzero() (in module tvm.relax.op)": [[161, "tvm.relax.op.nonzero", false]], "normal() (in module tvm.contrib.random)": [[148, "tvm.contrib.random.normal", false]], "normalize() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.Normalize", false]], "normalize() (tvm.relax.block_builder.blockbuilder method)": [[159, "tvm.relax.block_builder.BlockBuilder.normalize", false]], "normalize() (tvm.te.schedule method)": [[181, "tvm.te.Schedule.normalize", false]], "normalize_file_list_by_unpacking_tars() (in module tvm.contrib.tar)": [[148, "tvm.contrib.tar.normalize_file_list_by_unpacking_tars", false]], "normalize_prim_func() (in module tvm.dlight)": [[149, "tvm.dlight.normalize_prim_func", false]], "normalizeglobalvar() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.NormalizeGlobalVar", false]], "not (class in tvm.tir)": [[185, "tvm.tir.Not", false]], "not_equal() (in module tvm.relax.op)": [[161, "tvm.relax.op.not_equal", false]], "notify_runner_results() (tvm.meta_schedule.searchstrategy method)": [[156, "tvm.meta_schedule.SearchStrategy.notify_runner_results", false]], "notify_runner_results() (tvm.meta_schedule.tunecontext method)": [[156, "tvm.meta_schedule.TuneContext.notify_runner_results", false]], "null_value() (in module tvm.relax.op)": [[161, "tvm.relax.op.null_value", false]], "num_workers (tvm.runtime.disco.session property)": [[175, "tvm.runtime.disco.Session.num_workers", false]], "numpy() (tvm.contrib.sparse.csrndarray method)": [[148, "tvm.contrib.sparse.CSRNDArray.numpy", false]], "numpy() (tvm.runtime.ndarray.ndarray method)": [[176, "tvm.runtime.ndarray.NDArray.numpy", false]], "numpyasarray() (in module tvm.runtime.ndarray)": [[176, "tvm.runtime.ndarray.numpyasarray", false]], "objectstructinfo (class in tvm.relax)": [[162, "tvm.relax.ObjectStructInfo", false]], "objecttype (class in tvm.relax)": [[162, "tvm.relax.ObjectType", false]], "offset_of() (tvm.tir.buffer method)": [[185, "tvm.tir.Buffer.offset_of", false]], "one_hot() (in module tvm.relax.op)": [[161, "tvm.relax.op.one_hot", false]], "ones() (in module tvm.relax.op)": [[161, "tvm.relax.op.ones", false]], "ones_like() (in module tvm.relax.op)": [[161, "tvm.relax.op.ones_like", false]], "oobchecker() (in module tvm.tir.analysis.analysis)": [[182, "tvm.tir.analysis.analysis.OOBChecker", false]], "op (class in tvm.ir)": [[155, "tvm.ir.Op", false]], "op (tvm.te.tensor property)": [[181, "tvm.te.Tensor.op", false]], "opaque (tvm.tir.schedule.depkind attribute)": [[183, "tvm.tir.schedule.DepKind.OPAQUE", false]], "opaque_func() (tvm.relax.funcstructinfo static method)": [[162, "tvm.relax.FuncStructInfo.opaque_func", false]], "opattributeinvalid": [[151, "tvm.error.OpAttributeInvalid", false]], "opattributerequired": [[151, "tvm.error.OpAttributeRequired", false]], "opattributeunimplemented": [[151, "tvm.error.OpAttributeUnImplemented", false]], "open() (tvm.micro.transportlogger method)": [[157, "tvm.micro.TransportLogger.open", false]], "opencl() (in module tvm.runtime.ndarray)": [[176, "tvm.runtime.ndarray.opencl", false]], "operror": [[151, "tvm.error.OpError", false]], "opnotimplemented": [[151, "tvm.error.OpNotImplemented", false]], "optimize() (in module tvm.contrib.spirv)": [[148, "tvm.contrib.spirv.optimize", false]], "optimize() (tvm.relay.backend.vm.vmcompiler method)": [[165, "tvm.relay.backend.vm.VMCompiler.optimize", false]], "optimizelayouttransform (class in tvm.relax.transform)": [[163, "tvm.relax.transform.OptimizeLayoutTransform", false]], "optional() (tvm.relay.dataflow_pattern.dfpattern method)": [[166, "tvm.relay.dataflow_pattern.DFPattern.optional", false]], "options (tvm.target.targetkind property)": [[180, "tvm.target.TargetKind.options", false]], "options_from_name() (tvm.target.targetkind static method)": [[180, "tvm.target.TargetKind.options_from_name", false]], "or (class in tvm.tir)": [[185, "tvm.tir.Or", false]], "otheroptionentity (class in tvm.autotvm.task.space)": [[147, "tvm.autotvm.task.space.OtherOptionEntity", false]], "otheroptionspace (class in tvm.autotvm.task.space)": [[147, "tvm.autotvm.task.space.OtherOptionSpace", false]], "out_dtype (tvm.topi.nn.workload attribute)": [[187, "tvm.topi.nn.Workload.out_dtype", false]], "out_filter (tvm.topi.nn.workload attribute)": [[187, "tvm.topi.nn.Workload.out_filter", false]], "outlinecompilerfunctionswithexistingglobalsymbols() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.OutlineCompilerFunctionsWithExistingGlobalSymbols", false]], "outputs (tvm.tir.schedule.instruction attribute)": [[183, "tvm.tir.schedule.Instruction.outputs", false]], "override_instruments() (tvm.transform.passcontext method)": [[188, "tvm.transform.PassContext.override_instruments", false]], "override_native_generic_func() (in module tvm.target)": [[180, "tvm.target.override_native_generic_func", false]], "packedfunctype (class in tvm.relax)": [[162, "tvm.relax.PackedFuncType", false]], "pad() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.pad", false]], "pad() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.pad", false]], "pad() (in module tvm.topi.image)": [[187, "tvm.topi.image.pad", false]], "pad() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.pad", false]], "pad_einsum() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.pad_einsum", false]], "padb (tvm.topi.nn.workload attribute)": [[187, "tvm.topi.nn.Workload.padb", false]], "padl (tvm.topi.nn.workload attribute)": [[187, "tvm.topi.nn.Workload.padl", false]], "padr (tvm.topi.nn.workload attribute)": [[187, "tvm.topi.nn.Workload.padr", false]], "padt (tvm.topi.nn.workload attribute)": [[187, "tvm.topi.nn.Workload.padt", false]], "parallel() (tvm.te.stage method)": [[181, "tvm.te.Stage.parallel", false]], "parallel() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.parallel", false]], "parent (tvm.tir.schedule.stmtsref property)": [[183, "tvm.tir.schedule.StmtSRef.parent", false]], "parse_compute_version() (in module tvm.contrib.nvcc)": [[148, "tvm.contrib.nvcc.parse_compute_version", false]], "parse_compute_version() (in module tvm.contrib.rocm)": [[148, "tvm.contrib.rocm.parse_compute_version", false]], "partialevaluate() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.PartialEvaluate", false]], "partition() (in module tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.partition", false]], "partition() (tvm.relay.dataflow_pattern.dfpattern method)": [[166, "tvm.relay.dataflow_pattern.DFPattern.partition", false]], "partitiongraph() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.PartitionGraph", false]], "pass (class in tvm.transform)": [[188, "tvm.transform.Pass", false]], "pass_instrument() (in module tvm.instrument)": [[154, "tvm.instrument.pass_instrument", false]], "passcontext (class in tvm.transform)": [[188, "tvm.transform.PassContext", false]], "passinfo (class in tvm.transform)": [[188, "tvm.transform.PassInfo", false]], "passinstrument (class in tvm.instrument)": [[154, "tvm.instrument.PassInstrument", false]], "passprintinginstrument (class in tvm.instrument)": [[154, "tvm.instrument.PassPrintingInstrument", false]], "passtiminginstrument (class in tvm.instrument)": [[154, "tvm.instrument.PassTimingInstrument", false]], "patterncheckcontext (class in tvm.relax.transform)": [[163, "tvm.relax.transform.PatternCheckContext", false]], "percent (class in tvm.runtime.profiling)": [[177, "tvm.runtime.profiling.Percent", false]], "permute_dims() (in module tvm.relax.op)": [[161, "tvm.relax.op.permute_dims", false]], "permutedimsattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.PermuteDimsAttrs", false]], "pick_best() (in module tvm.autotvm.record)": [[147, "tvm.autotvm.record.pick_best", false]], "placeholder() (in module tvm.contrib.sparse)": [[148, "tvm.contrib.sparse.placeholder", false]], "placeholder() (in module tvm.te)": [[181, "tvm.te.placeholder", false]], "placeholderop (class in tvm.te)": [[181, "tvm.te.PlaceholderOp", false]], "planandupdatebufferallocationlocation() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.PlanAndUpdateBufferAllocationLocation", false]], "plandevices() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.PlanDevices", false]], "plotter (class in tvm.contrib.relay_viz.interface)": [[148, "tvm.contrib.relay_viz.interface.Plotter", false]], "point2knob() (tvm.autotvm.task.space.configspace method)": [[147, "tvm.autotvm.task.space.ConfigSpace.point2knob", false]], "pointertype (class in tvm.ir)": [[155, "tvm.ir.PointerType", false]], "pointervaluetyperewrite() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.PointerValueTypeRewrite", false]], "pool1d() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.pool1d", false]], "pool2d() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.pool2d", false]], "pool2dattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.Pool2DAttrs", false]], "pool3d() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.pool3d", false]], "pool_grad() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.pool_grad", false]], "poolinfo (class in tvm.ir)": [[155, "tvm.ir.PoolInfo", false]], "poolinfoproperties (class in tvm.ir)": [[155, "tvm.ir.PoolInfoProperties", false]], "pop() (tvm.tir.schedule.trace method)": [[183, "tvm.tir.schedule.Trace.pop", false]], "pop_trace() (tvm.transform.passcontext method)": [[188, "tvm.transform.PassContext.pop_trace", false]], "popcount() (in module tvm.te)": [[181, "tvm.te.popcount", false]], "popcount() (in module tvm.tir)": [[185, "tvm.tir.popcount", false]], "popensession (class in tvm.rpc)": [[174, "tvm.rpc.PopenSession", false]], "post_order_visit() (in module tvm.relax.analysis)": [[158, "tvm.relax.analysis.post_order_visit", false]], "post_order_visit() (in module tvm.relay.analysis)": [[164, "tvm.relay.analysis.post_order_visit", false]], "post_order_visit() (in module tvm.tir.stmt_functor)": [[184, "tvm.tir.stmt_functor.post_order_visit", false]], "post_tuning() (tvm.meta_schedule.searchstrategy method)": [[156, "tvm.meta_schedule.SearchStrategy.post_tuning", false]], "post_tuning() (tvm.meta_schedule.tunecontext method)": [[156, "tvm.meta_schedule.TuneContext.post_tuning", false]], "postproc (class in tvm.meta_schedule)": [[156, "tvm.meta_schedule.Postproc", false]], "pow() (in module tvm.tir)": [[185, "tvm.tir.pow", false]], "power() (in module tvm.relax.op)": [[161, "tvm.relax.op.power", false]], "power() (in module tvm.te)": [[181, "tvm.te.power", false]], "power() (in module tvm.tir)": [[185, "tvm.tir.power", false]], "pragma() (tvm.te.stage method)": [[181, "tvm.te.Stage.pragma", false]], "pre_order_visit() (in module tvm.tir.stmt_functor)": [[184, "tvm.tir.stmt_functor.pre_order_visit", false]], "pre_tuning() (tvm.meta_schedule.searchstrategy method)": [[156, "tvm.meta_schedule.SearchStrategy.pre_tuning", false]], "pre_tuning() (tvm.meta_schedule.tunecontext method)": [[156, "tvm.meta_schedule.TuneContext.pre_tuning", false]], "predict() (tvm.auto_scheduler.randommodel method)": [[146, "tvm.auto_scheduler.RandomModel.predict", false]], "predict() (tvm.auto_scheduler.xgbmodel method)": [[146, "tvm.auto_scheduler.XGBModel.predict", false]], "predict() (tvm.meta_schedule.costmodel method)": [[156, "tvm.meta_schedule.CostModel.predict", false]], "predict_stages() (tvm.auto_scheduler.xgbmodel method)": [[146, "tvm.auto_scheduler.XGBModel.predict_stages", false]], "prefetch (class in tvm.tir)": [[185, "tvm.tir.Prefetch", false]], "prefetch() (tvm.te.stage method)": [[181, "tvm.te.Stage.prefetch", false]], "preloadcustomsketchrule (class in tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.PreloadCustomSketchRule", false]], "preloadmeasuredstates (class in tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.PreloadMeasuredStates", false]], "prelu() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.prelu", false]], "prelu() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.prelu", false]], "prelude (class in tvm.relay.testing)": [[171, "tvm.relay.testing.Prelude", false]], "pretty_print() (in module tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.pretty_print", false]], "prim_func_pass() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.prim_func_pass", false]], "primexpr (class in tvm.ir)": [[155, "tvm.ir.PrimExpr", false]], "primfunc (class in tvm.tir)": [[185, "tvm.tir.PrimFunc", false]], "primfuncpass (class in tvm.tir.transform)": [[186, "tvm.tir.transform.PrimFuncPass", false]], "primstructinfo (class in tvm.relax)": [[162, "tvm.relax.PrimStructInfo", false]], "primtype (class in tvm.ir)": [[155, "tvm.ir.PrimType", false]], "primvalue (class in tvm.relax)": [[162, "tvm.relax.PrimValue", false]], "print() (in module tvm.relax.op)": [[161, "tvm.relax.op.print", false]], "print_best() (tvm.auto_scheduler.searchtask method)": [[146, "tvm.auto_scheduler.SearchTask.print_best", false]], "print_python_code_from_state() (tvm.auto_scheduler.computedag method)": [[146, "tvm.auto_scheduler.ComputeDAG.print_python_code_from_state", false]], "print_tuning_statistics() (tvm.meta_schedule.taskscheduler method)": [[156, "tvm.meta_schedule.TaskScheduler.print_tuning_statistics", false]], "print_var() (tvm.relay.analysis.callgraph method)": [[164, "tvm.relay.analysis.CallGraph.print_var", false]], "printafterall (class in tvm.instrument)": [[154, "tvm.instrument.PrintAfterAll", false]], "printbeforeall (class in tvm.instrument)": [[154, "tvm.instrument.PrintBeforeAll", false]], "printir() (in module tvm.transform)": [[188, "tvm.transform.PrintIR", false]], "processsession (class in tvm.runtime.disco)": [[175, "tvm.runtime.disco.ProcessSession", false]], "prod() (in module tvm.relax.op)": [[161, "tvm.relax.op.prod", false]], "producerload (class in tvm.tir)": [[185, "tvm.tir.ProducerLoad", false]], "producerrealize (class in tvm.tir)": [[185, "tvm.tir.ProducerRealize", false]], "producerstore (class in tvm.tir)": [[185, "tvm.tir.ProducerStore", false]], "profile() (tvm.relax.virtualmachine method)": [[162, "tvm.relax.VirtualMachine.profile", false]], "profile() (tvm.runtime.relax_vm.virtualmachine method)": [[178, "tvm.runtime.relax_vm.VirtualMachine.profile", false]], "profile_function() (in module tvm.runtime.profiling)": [[177, "tvm.runtime.profiling.profile_function", false]], "profiler (class in tvm.meta_schedule)": [[156, "tvm.meta_schedule.Profiler", false]], "progress_bar() (in module tvm.autotvm.tuner.callback)": [[147, "tvm.autotvm.tuner.callback.progress_bar", false]], "proposal() (in module tvm.relay.vision)": [[173, "tvm.relay.vision.proposal", false]], "ptx_arrive_barrier() (in module tvm.tir)": [[185, "tvm.tir.ptx_arrive_barrier", false]], "ptx_arrive_barrier_expect_tx() (in module tvm.tir)": [[185, "tvm.tir.ptx_arrive_barrier_expect_tx", false]], "ptx_commit_group() (in module tvm.tir)": [[185, "tvm.tir.ptx_commit_group", false]], "ptx_cp_async() (in module tvm.tir)": [[185, "tvm.tir.ptx_cp_async", false]], "ptx_cp_async_barrier() (in module tvm.tir)": [[185, "tvm.tir.ptx_cp_async_barrier", false]], "ptx_cp_async_bulk() (in module tvm.tir)": [[185, "tvm.tir.ptx_cp_async_bulk", false]], "ptx_init_barrier_thread_count() (in module tvm.tir)": [[185, "tvm.tir.ptx_init_barrier_thread_count", false]], "ptx_ldmatrix() (in module tvm.tir)": [[185, "tvm.tir.ptx_ldmatrix", false]], "ptx_mma() (in module tvm.tir)": [[185, "tvm.tir.ptx_mma", false]], "ptx_mma_sp() (in module tvm.tir)": [[185, "tvm.tir.ptx_mma_sp", false]], "ptx_wait_barrier() (in module tvm.tir)": [[185, "tvm.tir.ptx_wait_barrier", false]], "ptx_wait_group() (in module tvm.tir)": [[185, "tvm.tir.ptx_wait_group", false]], "push_trace() (tvm.transform.passcontext method)": [[188, "tvm.transform.PassContext.push_trace", false]], "pyexprmutator (class in tvm.relax)": [[162, "tvm.relax.PyExprMutator", false]], "pyexprvisitor (class in tvm.relax)": [[162, "tvm.relax.PyExprVisitor", false]], "q_multiply_shift() (in module tvm.tir)": [[185, "tvm.tir.q_multiply_shift", false]], "q_multiply_shift_per_axis() (in module tvm.tir)": [[185, "tvm.tir.q_multiply_shift_per_axis", false]], "qnn_conv2d_alter_layout() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.qnn_conv2d_alter_layout", false]], "qnn_dense_alter_layout() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.qnn_dense_alter_layout", false]], "qnn_requantize_alter_layout() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.qnn_requantize_alter_layout", false]], "quantize() (in module tvm.relax.op)": [[161, "tvm.relax.op.quantize", false]], "quantize_conv_bias_mkldnn_from_var() (in module tvm.relay.frontend)": [[167, "tvm.relay.frontend.quantize_conv_bias_mkldnn_from_var", false]], "query() (tvm.auto_scheduler.applyhistorybestorsample method)": [[146, "tvm.auto_scheduler.ApplyHistoryBestOrSample.query", false]], "query() (tvm.auto_scheduler.dispatchcontext method)": [[146, "tvm.auto_scheduler.DispatchContext.query", false]], "query() (tvm.autotvm.task.dispatcher.dispatchcontext method)": [[147, "tvm.autotvm.task.dispatcher.DispatchContext.query", false]], "query() (tvm.meta_schedule.database method)": [[156, "tvm.meta_schedule.Database.query", false]], "query_ir_module() (tvm.meta_schedule.database method)": [[156, "tvm.meta_schedule.Database.query_ir_module", false]], "query_schedule() (tvm.meta_schedule.database method)": [[156, "tvm.meta_schedule.Database.query_schedule", false]], "query_tuning_record() (tvm.meta_schedule.database method)": [[156, "tvm.meta_schedule.Database.query_tuning_record", false]], "r() (tvm.relax.execbuilder method)": [[162, "tvm.relax.ExecBuilder.r", false]], "raise_error() (tvm.autotvm.task.space.configspace method)": [[147, "tvm.autotvm.task.space.ConfigSpace.raise_error", false]], "ramp (class in tvm.tir)": [[185, "tvm.tir.Ramp", false]], "randint() (in module tvm.contrib.random)": [[148, "tvm.contrib.random.randint", false]], "random_walk() (tvm.autotvm.task.space.configspace method)": [[147, "tvm.autotvm.task.space.ConfigSpace.random_walk", false]], "randommodel (class in tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.RandomModel", false]], "randomtuner (class in tvm.autotvm.tuner)": [[147, "tvm.autotvm.tuner.RandomTuner", false]], "range (class in tvm.ir)": [[155, "tvm.ir.Range", false]], "range_length (tvm.autotvm.task.space.configspace property)": [[147, "tvm.autotvm.task.space.ConfigSpace.range_length", false]], "rasp() (in module tvm.target)": [[180, "tvm.target.rasp", false]], "ratio (class in tvm.runtime.profiling)": [[177, "tvm.runtime.profiling.Ratio", false]], "raw (tvm.tir.schedule.depkind attribute)": [[183, "tvm.tir.schedule.DepKind.RAW", false]], "read() (tvm.micro.transportlogger method)": [[157, "tvm.micro.TransportLogger.read", false]], "read_lines() (tvm.auto_scheduler.recordreader method)": [[146, "tvm.auto_scheduler.RecordReader.read_lines", false]], "realizevdevice() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.RealizeVDevice", false]], "recast() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.recast", false]], "recordreader (class in tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.RecordReader", false]], "recordtofile (class in tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.RecordToFile", false]], "redirect_to() (tvm.relay.dataflow_pattern.wildcardpattern method)": [[166, "tvm.relay.dataflow_pattern.WildcardPattern.redirect_to", false]], "redistribute() (in module tvm.relax.op.distributed)": [[161, "tvm.relax.op.distributed.redistribute", false]], "redistribute_replica_to_shard() (in module tvm.relax.op.distributed)": [[161, "tvm.relax.op.distributed.redistribute_replica_to_shard", false]], "reduce (class in tvm.tir)": [[185, "tvm.tir.Reduce", false]], "reduce() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.reduce", false]], "reduce_axis() (in module tvm.te)": [[181, "tvm.te.reduce_axis", false]], "reduce_axis() (tvm.autotvm.task.space.configspace static method)": [[147, "tvm.autotvm.task.space.ConfigSpace.reduce_axis", false]], "reducebranchingthroughovercompute() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.ReduceBranchingThroughOvercompute", false]], "ref_count() (tvm.relay.analysis.callgraph method)": [[164, "tvm.relay.analysis.CallGraph.ref_count", false]], "refvalue (class in tvm.relay.backend.interpreter)": [[165, "tvm.relay.backend.interpreter.RefValue", false]], "register() (tvm.target.genericfunc method)": [[180, "tvm.target.GenericFunc.register", false]], "register() (tvm.tir.tensorintrin static method)": [[185, "tvm.tir.TensorIntrin.register", false]], "register_df_node() (in module tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.register_df_node", false]], "register_error() (in module tvm.error)": [[151, "tvm.error.register_error", false]], "register_gradient() (in module tvm.relax.op)": [[161, "tvm.relax.op.register_gradient", false]], "register_intrin_lowering() (in module tvm.ir)": [[155, "tvm.ir.register_intrin_lowering", false]], "register_op_attr() (in module tvm.ir)": [[155, "tvm.ir.register_op_attr", false]], "register_pipeline() (in module tvm.relax)": [[162, "tvm.relax.register_pipeline", false]], "register_task_input_check_func() (in module tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.register_task_input_check_func", false]], "register_topi_compute() (in module tvm.autotvm.task.topi_integration)": [[147, "tvm.autotvm.task.topi_integration.register_topi_compute", false]], "register_topi_schedule() (in module tvm.autotvm.task.topi_integration)": [[147, "tvm.autotvm.task.topi_integration.register_topi_schedule", false]], "register_workload() (in module tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.register_workload", false]], "regular_non_max_suppression() (in module tvm.relay.vision)": [[173, "tvm.relay.vision.regular_non_max_suppression", false]], "reindex() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.reindex", false]], "reindex_cache_read() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.reindex_cache_read", false]], "reindex_cache_write() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.reindex_cache_write", false]], "reinterpret() (in module tvm.tir)": [[185, "tvm.tir.reinterpret", false]], "relax_dynamo() (in module tvm.relax.frontend.torch)": [[160, "tvm.relax.frontend.torch.relax_dynamo", false]], "relayexpr (class in tvm.ir)": [[155, "tvm.ir.RelayExpr", false]], "relayreftype (class in tvm.ir)": [[155, "tvm.ir.RelayRefType", false]], "relayvisualizer (class in tvm.contrib.relay_viz)": [[148, "tvm.contrib.relay_viz.RelayVisualizer", false]], "release() (tvm.contrib.utils.filelock method)": [[148, "tvm.contrib.utils.FileLock.release", false]], "relpath() (tvm.contrib.utils.tempdirectory method)": [[148, "tvm.contrib.utils.TempDirectory.relpath", false]], "relu() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.relu", false]], "relu() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.relu", false]], "relu() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.relu", false]], "remove() (tvm.contrib.utils.tempdirectory method)": [[148, "tvm.contrib.utils.TempDirectory.remove", false]], "remove() (tvm.rpc.rpcsession method)": [[174, "tvm.rpc.RPCSession.remove", false]], "remove_all_unused() (in module tvm.relax.analysis)": [[158, "tvm.relax.analysis.remove_all_unused", false]], "remove_all_unused() (tvm.relax.dataflowblockrewrite method)": [[162, "tvm.relax.DataflowBlockRewrite.remove_all_unused", false]], "remove_index_check() (in module tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.remove_index_check", false]], "remove_rv() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.remove_rv", false]], "remove_unused() (tvm.relax.dataflowblockrewrite method)": [[162, "tvm.relax.DataflowBlockRewrite.remove_unused", false]], "removeassume() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.RemoveAssume", false]], "removenoop() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.RemoveNoOp", false]], "removepuritychecking() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.RemovePurityChecking", false]], "removeredundantreshape (class in tvm.relax.transform)": [[163, "tvm.relax.transform.RemoveRedundantReshape", false]], "removestoreundef() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.RemoveStoreUndef", false]], "removeunusedfunctions() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.RemoveUnusedFunctions", false]], "removeunusedoutputs() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.RemoveUnusedOutputs", false]], "removeunusedparameters() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.RemoveUnusedParameters", false]], "removeweightlayoutrewriteblock() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.RemoveWeightLayoutRewriteBlock", false]], "render() (tvm.contrib.relay_viz.dot.dotplotter method)": [[148, "tvm.contrib.relay_viz.dot.DotPlotter.render", false]], "render() (tvm.contrib.relay_viz.interface.plotter method)": [[148, "tvm.contrib.relay_viz.interface.Plotter.render", false]], "render() (tvm.contrib.relay_viz.terminal.termgraph method)": [[148, "tvm.contrib.relay_viz.terminal.TermGraph.render", false]], "render() (tvm.contrib.relay_viz.terminal.termplotter method)": [[148, "tvm.contrib.relay_viz.terminal.TermPlotter.render", false]], "render() (tvm.instrument.passtiminginstrument static method)": [[154, "tvm.instrument.PassTimingInstrument.render", false]], "renew_defs() (in module tvm.tir.stmt_functor)": [[184, "tvm.tir.stmt_functor.renew_defs", false]], "renormalizesplitpattern() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.RenormalizeSplitPattern", false]], "reorder() (tvm.te.stage method)": [[181, "tvm.te.Stage.reorder", false]], "reorder() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.reorder", false]], "reorder_block_iter_var() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.reorder_block_iter_var", false]], "reorderentity (class in tvm.autotvm.task.space)": [[147, "tvm.autotvm.task.space.ReorderEntity", false]], "reorderpermutedimsafterconcat() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.ReorderPermuteDimsAfterConcat", false]], "reorderspace (class in tvm.autotvm.task.space)": [[147, "tvm.autotvm.task.space.ReorderSpace", false]], "reordertakeaftermatmul() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.ReorderTakeAfterMatmul", false]], "repeat() (in module tvm.relax.op)": [[161, "tvm.relax.op.repeat", false]], "repeatattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.RepeatAttrs", false]], "replace() (tvm.tir.schedule.schedulestate method)": [[183, "tvm.tir.schedule.ScheduleState.replace", false]], "replace_all_uses() (tvm.relax.dataflowblockrewrite method)": [[162, "tvm.relax.DataflowBlockRewrite.replace_all_uses", false]], "replace_global_vars() (tvm.ir.irmodule method)": [[155, "tvm.ir.IRModule.replace_global_vars", false]], "report (class in tvm.runtime.profiling)": [[177, "tvm.runtime.profiling.Report", false]], "request() (tvm.rpc.trackersession method)": [[174, "tvm.rpc.TrackerSession.request", false]], "request_and_run() (tvm.rpc.trackersession method)": [[174, "tvm.rpc.TrackerSession.request_and_run", false]], "requiredbyconditional (tvm.tir.transform.hoistedletbindings attribute)": [[186, "tvm.tir.transform.HoistedLetBindings.RequiredByConditional", false]], "reset() (tvm.autotvm.task.topi_integration.taskextractenv method)": [[147, "tvm.autotvm.task.topi_integration.TaskExtractEnv.reset", false]], "reset() (tvm.autotvm.tuner.gatuner method)": [[147, "tvm.autotvm.tuner.GATuner.reset", false]], "reset() (tvm.autotvm.tuner.gridsearchtuner method)": [[147, "tvm.autotvm.tuner.GridSearchTuner.reset", false]], "reset() (tvm.autotvm.tuner.randomtuner method)": [[147, "tvm.autotvm.tuner.RandomTuner.reset", false]], "reset() (tvm.autotvm.tuner.tuner method)": [[147, "tvm.autotvm.tuner.Tuner.reset", false]], "reset() (tvm.autotvm.tuner.xgbtuner method)": [[147, "tvm.autotvm.tuner.XGBTuner.reset", false]], "reset_attr() (tvm.ir.op method)": [[155, "tvm.ir.Op.reset_attr", false]], "reshape() (in module tvm.relax.op)": [[161, "tvm.relax.op.reshape", false]], "residual_unit() (in module tvm.relay.testing.resnet)": [[171, "tvm.relay.testing.resnet.residual_unit", false]], "resize1d() (in module tvm.relay.image)": [[168, "tvm.relay.image.resize1d", false]], "resize1d() (in module tvm.topi.image)": [[187, "tvm.topi.image.resize1d", false]], "resize2d() (in module tvm.relax.op.image)": [[161, "tvm.relax.op.image.resize2d", false]], "resize2d() (in module tvm.relay.image)": [[168, "tvm.relay.image.resize2d", false]], "resize2d() (in module tvm.topi.image)": [[187, "tvm.topi.image.resize2d", false]], "resize2dattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.Resize2DAttrs", false]], "resize3d() (in module tvm.relay.image)": [[168, "tvm.relay.image.resize3d", false]], "resize3d() (in module tvm.topi.image)": [[187, "tvm.topi.image.resize3d", false]], "resnet() (in module tvm.relay.testing.resnet)": [[171, "tvm.relay.testing.resnet.resnet", false]], "ret() (in module tvm.tir)": [[185, "tvm.tir.ret", false]], "reverse_compute_at() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.reverse_compute_at", false]], "reverse_compute_inline() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.reverse_compute_inline", false]], "rewrite() (in module tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.rewrite", false]], "rewrite() (tvm.relay.dataflow_pattern.dfpatterncallback method)": [[166, "tvm.relay.dataflow_pattern.DFPatternCallback.rewrite", false]], "rewrite_compute_body() (in module tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.rewrite_compute_body", false]], "rewrite_layout_from_state() (tvm.auto_scheduler.computedag method)": [[146, "tvm.auto_scheduler.ComputeDAG.rewrite_layout_from_state", false]], "rewrite_tensor_shape() (in module tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.rewrite_tensor_shape", false]], "rewritecudagraph() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.RewriteCUDAGraph", false]], "rewritedataflowreshape() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.RewriteDataflowReshape", false]], "rewriteunsafeselect() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.RewriteUnsafeSelect", false]], "rfactor() (tvm.te.schedule method)": [[181, "tvm.te.Schedule.rfactor", false]], "rfactor() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.rfactor", false]], "right_shift() (in module tvm.relax.op)": [[161, "tvm.relax.op.right_shift", false]], "riscv_cpu() (in module tvm.target)": [[180, "tvm.target.riscv_cpu", false]], "rms_norm() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.rms_norm", false]], "rms_norm() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.rms_norm", false]], "rocm() (in module tvm.runtime.ndarray)": [[176, "tvm.runtime.ndarray.rocm", false]], "rocm() (in module tvm.target)": [[180, "tvm.target.rocm", false]], "rocm() (tvm.rpc.rpcsession method)": [[174, "tvm.rpc.RPCSession.rocm", false]], "rocm_link() (in module tvm.contrib.rocm)": [[148, "tvm.contrib.rocm.rocm_link", false]], "roi_align() (in module tvm.relay.vision)": [[173, "tvm.relay.vision.roi_align", false]], "roi_pool() (in module tvm.relay.vision)": [[173, "tvm.relay.vision.roi_pool", false]], "rolling_buffer() (tvm.te.stage method)": [[181, "tvm.te.Stage.rolling_buffer", false]], "rolling_buffer() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.rolling_buffer", false]], "root_mark() (tvm.tir.schedule.stmtsref static method)": [[183, "tvm.tir.schedule.StmtSRef.root_mark", false]], "round() (in module tvm.relax.op)": [[161, "tvm.relax.op.round", false]], "round() (in module tvm.te)": [[181, "tvm.te.round", false]], "round() (in module tvm.tir)": [[185, "tvm.tir.round", false]], "rpcerror": [[151, "tvm.error.RPCError", false]], "rpcrunner (class in tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.RPCRunner", false]], "rpcrunner (class in tvm.autotvm.measure.measure_methods)": [[147, "tvm.autotvm.measure.measure_methods.RPCRunner", false]], "rpcsession (class in tvm.rpc)": [[174, "tvm.rpc.RPCSession", false]], "rpcsessiontimeouterror": [[151, "tvm.error.RPCSessionTimeoutError", false]], "rsqrt() (in module tvm.relax.op)": [[161, "tvm.relax.op.rsqrt", false]], "rsqrt() (in module tvm.te)": [[181, "tvm.te.rsqrt", false]], "rsqrt() (in module tvm.tir)": [[185, "tvm.tir.rsqrt", false]], "run() (tvm.contrib.graph_executor.graphmodule method)": [[152, "tvm.contrib.graph_executor.GraphModule.run", false]], "run() (tvm.meta_schedule.runner method)": [[156, "tvm.meta_schedule.Runner.run", false]], "run_after_pass() (tvm.instrument.passinstrument method)": [[154, "tvm.instrument.PassInstrument.run_after_pass", false]], "run_as_python() (in module tvm.relay.testing)": [[171, "tvm.relay.testing.run_as_python", false]], "run_before_pass() (tvm.instrument.passinstrument method)": [[154, "tvm.instrument.PassInstrument.run_before_pass", false]], "runcodegen() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.RunCodegen", false]], "runner (class in tvm.meta_schedule)": [[156, "tvm.meta_schedule.Runner", false]], "same_as() (tvm.ir.globalinfo method)": [[155, "tvm.ir.GlobalInfo.same_as", false]], "same_as() (tvm.ir.type method)": [[155, "tvm.ir.Type.same_as", false]], "same_as() (tvm.relax.structinfo method)": [[162, "tvm.relax.StructInfo.same_as", false]], "same_as() (tvm.runtime.ndarray.ndarray method)": [[176, "tvm.runtime.ndarray.NDArray.same_as", false]], "sample_categorical() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.sample_categorical", false]], "sample_compute_location() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.sample_compute_location", false]], "sample_initial_population() (tvm.auto_scheduler.sketchpolicy method)": [[146, "tvm.auto_scheduler.SketchPolicy.sample_initial_population", false]], "sample_ints() (tvm.autotvm.task.space.configspace method)": [[147, "tvm.autotvm.task.space.ConfigSpace.sample_ints", false]], "sample_partitioned_tile() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.sample_partitioned_tile", false]], "sample_perfect_tile() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.sample_perfect_tile", false]], "save() (tvm.auto_scheduler.xgbmodel method)": [[146, "tvm.auto_scheduler.XGBModel.save", false]], "save() (tvm.meta_schedule.costmodel method)": [[156, "tvm.meta_schedule.CostModel.save", false]], "save_function() (tvm.relax.virtualmachine method)": [[162, "tvm.relax.VirtualMachine.save_function", false]], "save_function() (tvm.runtime.relax_vm.virtualmachine method)": [[178, "tvm.runtime.relax_vm.VirtualMachine.save_function", false]], "save_json() (in module tvm.ir)": [[155, "tvm.ir.save_json", false]], "save_records() (in module tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.save_records", false]], "scale_shift_nchw() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.scale_shift_nchw", false]], "scale_shift_nchwc() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.scale_shift_nchwc", false]], "scale_shift_nhwc() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.scale_shift_nhwc", false]], "scan() (in module tvm.te)": [[181, "tvm.te.scan", false]], "scan_axis (tvm.te.scanop property)": [[181, "tvm.te.ScanOp.scan_axis", false]], "scanop (class in tvm.te)": [[181, "tvm.te.ScanOp", false]], "scanopattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.ScanopAttrs", false]], "scatter() (tvm.runtime.disco.session method)": [[175, "tvm.runtime.disco.Session.scatter", false]], "scatter_elements() (in module tvm.relax.op)": [[161, "tvm.relax.op.scatter_elements", false]], "scatter_from_worker0() (in module tvm.relax.op.ccl)": [[161, "tvm.relax.op.ccl.scatter_from_worker0", false]], "scatter_from_worker0() (tvm.runtime.disco.session method)": [[175, "tvm.runtime.disco.Session.scatter_from_worker0", false]], "scatter_nd() (in module tvm.relax.op)": [[161, "tvm.relax.op.scatter_nd", false]], "schedule (class in tvm.te)": [[181, "tvm.te.Schedule", false]], "schedule (class in tvm.tir.schedule)": [[183, "tvm.tir.schedule.Schedule", false]], "scheduledebugmask (class in tvm.tir.schedule)": [[183, "tvm.tir.schedule.ScheduleDebugMask", false]], "scheduleerror": [[183, "tvm.tir.schedule.ScheduleError", false]], "schedulerule (class in tvm.dlight)": [[149, "tvm.dlight.ScheduleRule", false]], "schedulerule (class in tvm.meta_schedule)": [[156, "tvm.meta_schedule.ScheduleRule", false]], "schedulestate (class in tvm.tir.schedule)": [[183, "tvm.tir.schedule.ScheduleState", false]], "scope() (tvm.tir.buffer method)": [[185, "tvm.tir.Buffer.scope", false]], "script() (in module tvm.te.hybrid)": [[181, "tvm.te.hybrid.script", false]], "search_fc_transpose() (in module tvm.relay.analysis)": [[164, "tvm.relay.analysis.search_fc_transpose", false]], "searchstrategy (class in tvm.meta_schedule)": [[156, "tvm.meta_schedule.SearchStrategy", false]], "searchtask (class in tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.SearchTask", false]], "seed() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.seed", false]], "select (class in tvm.tir)": [[185, "tvm.tir.Select", false]], "select_implementation() (in module tvm.relay.backend.te_compiler)": [[165, "tvm.relay.backend.te_compiler.select_implementation", false]], "separable_conv_block() (in module tvm.relay.testing.mobilenet)": [[171, "tvm.relay.testing.mobilenet.separable_conv_block", false]], "seqexpr (class in tvm.relax)": [[162, "tvm.relax.SeqExpr", false]], "seqstmt (class in tvm.tir)": [[185, "tvm.tir.SeqStmt", false]], "sequential (class in tvm.transform)": [[188, "tvm.transform.Sequential", false]], "sequentialspan (class in tvm.ir)": [[155, "tvm.ir.SequentialSpan", false]], "serialize() (tvm.auto_scheduler.measureinput method)": [[146, "tvm.auto_scheduler.MeasureInput.serialize", false]], "serialize_args() (in module tvm.autotvm.task.task)": [[147, "tvm.autotvm.task.task.serialize_args", false]], "server (class in tvm.rpc)": [[174, "tvm.rpc.Server", false]], "session (class in tvm.micro)": [[157, "tvm.micro.Session", false]], "session (class in tvm.runtime.disco)": [[175, "tvm.runtime.disco.Session", false]], "sessionterminatederror": [[157, "tvm.micro.SessionTerminatedError", false]], "set_attr() (tvm.ir.op method)": [[155, "tvm.ir.Op.set_attr", false]], "set_attrs_type_key() (tvm.ir.op method)": [[155, "tvm.ir.Op.set_attrs_type_key", false]], "set_axis_separator() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.set_axis_separator", false]], "set_default() (tvm.target.genericfunc method)": [[180, "tvm.target.GenericFunc.set_default", false]], "set_error_threshold() (tvm.autotvm.tuner.gatuner method)": [[147, "tvm.autotvm.tuner.GATuner.set_error_threshold", false]], "set_error_threshold() (tvm.autotvm.tuner.gridsearchtuner method)": [[147, "tvm.autotvm.tuner.GridSearchTuner.set_error_threshold", false]], "set_error_threshold() (tvm.autotvm.tuner.randomtuner method)": [[147, "tvm.autotvm.tuner.RandomTuner.set_error_threshold", false]], "set_error_threshold() (tvm.autotvm.tuner.tuner method)": [[147, "tvm.autotvm.tuner.Tuner.set_error_threshold", false]], "set_error_threshold() (tvm.autotvm.tuner.xgbtuner method)": [[147, "tvm.autotvm.tuner.XGBTuner.set_error_threshold", false]], "set_input() (tvm.contrib.graph_executor.graphmodule method)": [[152, "tvm.contrib.graph_executor.GraphModule.set_input", false]], "set_input() (tvm.relax.virtualmachine method)": [[162, "tvm.relax.VirtualMachine.set_input", false]], "set_input() (tvm.runtime.relax_vm.virtualmachine method)": [[178, "tvm.runtime.relax_vm.VirtualMachine.set_input", false]], "set_input_zero_copy() (tvm.contrib.graph_executor.graphmodule method)": [[152, "tvm.contrib.graph_executor.GraphModule.set_input_zero_copy", false]], "set_instrument() (tvm.relax.virtualmachine method)": [[162, "tvm.relax.VirtualMachine.set_instrument", false]], "set_instrument() (tvm.runtime.relax_vm.virtualmachine method)": [[178, "tvm.runtime.relax_vm.VirtualMachine.set_instrument", false]], "set_keep_for_debug() (tvm.contrib.utils.tempdirectory class method)": [[148, "tvm.contrib.utils.TempDirectory.set_keep_for_debug", false]], "set_num_evals() (tvm.transform.passcontext method)": [[188, "tvm.transform.PassContext.set_num_evals", false]], "set_num_inputs() (tvm.ir.op method)": [[155, "tvm.ir.Op.set_num_inputs", false]], "set_output_zero_copy() (tvm.contrib.graph_executor.graphmodule method)": [[152, "tvm.contrib.graph_executor.GraphModule.set_output_zero_copy", false]], "set_params() (tvm.relay.backend.vm.vmcompiler method)": [[165, "tvm.relay.backend.vm.VMCompiler.set_params", false]], "set_scope() (tvm.te.stage method)": [[181, "tvm.te.Stage.set_scope", false]], "set_scope() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.set_scope", false]], "set_store_predicate() (tvm.te.stage method)": [[181, "tvm.te.Stage.set_store_predicate", false]], "set_support_level() (tvm.ir.op method)": [[155, "tvm.ir.Op.set_support_level", false]], "set_var_remap() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.set_var_remap", false]], "shape (tvm.te.tensor property)": [[181, "tvm.te.Tensor.shape", false]], "shape_of() (in module tvm.relax.op)": [[161, "tvm.relax.op.shape_of", false]], "shape_to_tensor() (in module tvm.relax.op)": [[161, "tvm.relax.op.shape_to_tensor", false]], "shapeexpr (class in tvm.relax)": [[162, "tvm.relax.ShapeExpr", false]], "shapepattern (class in tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.ShapePattern", false]], "shapestructinfo (class in tvm.relax)": [[162, "tvm.relax.ShapeStructInfo", false]], "shapetype (class in tvm.relax)": [[162, "tvm.relax.ShapeType", false]], "share_params() (tvm.contrib.graph_executor.graphmodule method)": [[152, "tvm.contrib.graph_executor.GraphModule.share_params", false]], "shift_left() (in module tvm.tir)": [[185, "tvm.tir.shift_left", false]], "shift_right() (in module tvm.tir)": [[185, "tvm.tir.shift_right", false]], "should_run() (tvm.instrument.passinstrument method)": [[154, "tvm.instrument.PassInstrument.should_run", false]], "show() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.show", false]], "show() (tvm.tir.schedule.trace method)": [[183, "tvm.tir.schedule.Trace.show", false]], "shuffle (class in tvm.tir)": [[185, "tvm.tir.Shuffle", false]], "shutdown() (tvm.runtime.disco.session method)": [[175, "tvm.runtime.disco.Session.shutdown", false]], "sigmoid() (in module tvm.relax.op)": [[161, "tvm.relax.op.sigmoid", false]], "sigmoid() (in module tvm.te)": [[181, "tvm.te.sigmoid", false]], "sigmoid() (in module tvm.tir)": [[185, "tvm.tir.sigmoid", false]], "sign() (in module tvm.relax.op)": [[161, "tvm.relax.op.sign", false]], "silu() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.silu", false]], "simdgroup_load() (in module tvm.tir)": [[185, "tvm.tir.simdgroup_load", false]], "simdgroup_multiply_accumulate() (in module tvm.tir)": [[185, "tvm.tir.simdgroup_multiply_accumulate", false]], "simdgroup_store() (in module tvm.tir)": [[185, "tvm.tir.simdgroup_store", false]], "simplified() (tvm.tir.schedule.trace method)": [[183, "tvm.tir.schedule.Trace.simplified", false]], "simplify() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.Simplify", false]], "simplify() (in module tvm.topi.image)": [[187, "tvm.topi.image.simplify", false]], "simplify() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.simplify", false]], "simplifyexpr() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.SimplifyExpr", false]], "simplifyfctranspose() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.SimplifyFCTranspose", false]], "simplifyinference() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.SimplifyInference", false]], "simulated_dequantize() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.simulated_dequantize", false]], "simulated_quantize() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.simulated_quantize", false]], "sin() (in module tvm.relax.op)": [[161, "tvm.relax.op.sin", false]], "sin() (in module tvm.te)": [[181, "tvm.te.sin", false]], "sin() (in module tvm.tir)": [[185, "tvm.tir.sin", false]], "sinh() (in module tvm.relax.op)": [[161, "tvm.relax.op.sinh", false]], "sinh() (in module tvm.te)": [[181, "tvm.te.sinh", false]], "sinh() (in module tvm.tir)": [[185, "tvm.tir.sinh", false]], "size_var() (in module tvm.te)": [[181, "tvm.te.size_var", false]], "sizevar (class in tvm.tir)": [[185, "tvm.tir.SizeVar", false]], "sketchpolicy (class in tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.SketchPolicy", false]], "skipassert() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.SkipAssert", false]], "socketsession (class in tvm.runtime.disco)": [[175, "tvm.runtime.disco.SocketSession", false]], "softmax() (in module tvm.contrib.miopen)": [[148, "tvm.contrib.miopen.softmax", false]], "softmax() (in module tvm.relax.op.nn)": [[161, "tvm.relax.op.nn.softmax", false]], "softmax() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.softmax", false]], "softmax() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.softmax", false]], "softmax_common() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.softmax_common", false]], "softmaxattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.SoftmaxAttrs", false]], "sort() (in module tvm.relax.op)": [[161, "tvm.relax.op.sort", false]], "sortattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.SortAttrs", false]], "source_to_op() (in module tvm.te.hybrid)": [[181, "tvm.te.hybrid.source_to_op", false]], "sourcename (class in tvm.ir)": [[155, "tvm.ir.SourceName", false]], "space (tvm.autotvm.task.space.axis attribute)": [[147, "tvm.autotvm.task.space.Axis.space", false]], "space_to_batch_nd() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.space_to_batch_nd", false]], "space_to_batch_nd() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.space_to_batch_nd", false]], "space_to_depth() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.space_to_depth", false]], "space_to_depth() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.space_to_depth", false]], "spacegenerator (class in tvm.meta_schedule)": [[156, "tvm.meta_schedule.SpaceGenerator", false]], "span (class in tvm.ir)": [[155, "tvm.ir.Span", false]], "sparse_add() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.sparse_add", false]], "sparse_add() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.sparse_add", false]], "sparse_conv2d() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.sparse_conv2d", false]], "sparse_dense() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.sparse_dense", false]], "sparse_dense() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.sparse_dense", false]], "sparse_dense_alter_layout() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.sparse_dense_alter_layout", false]], "sparse_dense_sp_lhs() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.sparse_dense_sp_lhs", false]], "sparse_dense_sp_rhs() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.sparse_dense_sp_rhs", false]], "sparse_transpose() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.sparse_transpose", false]], "sparse_transpose() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.sparse_transpose", false]], "sparseplaceholderop (class in tvm.contrib.sparse)": [[148, "tvm.contrib.sparse.SparsePlaceholderOp", false]], "specialize() (tvm.tir.primfunc method)": [[185, "tvm.tir.PrimFunc.specialize", false]], "specializedcondition (class in tvm.te)": [[181, "tvm.te.SpecializedCondition", false]], "split() (in module tvm.relax.op)": [[161, "tvm.relax.op.split", false]], "split() (tvm.te.stage method)": [[181, "tvm.te.Stage.split", false]], "split() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.split", false]], "split_workload() (in module tvm.autotvm.record)": [[147, "tvm.autotvm.record.split_workload", false]], "splitargs() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.SplitArgs", false]], "splitattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.SplitAttrs", false]], "splitcalltirbypattern() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.SplitCallTIRByPattern", false]], "splitentity (class in tvm.autotvm.task.space)": [[147, "tvm.autotvm.task.space.SplitEntity", false]], "splithostdevice() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.SplitHostDevice", false]], "splitlayoutrewritepreproc() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.SplitLayoutRewritePreproc", false]], "splitspace (class in tvm.autotvm.task.space)": [[147, "tvm.autotvm.task.space.SplitSpace", false]], "sqrt() (in module tvm.relax.op)": [[161, "tvm.relax.op.sqrt", false]], "sqrt() (in module tvm.te)": [[181, "tvm.te.sqrt", false]], "sqrt() (in module tvm.tir)": [[185, "tvm.tir.sqrt", false]], "square() (in module tvm.relax.op)": [[161, "tvm.relax.op.square", false]], "squeeze() (in module tvm.relax.op)": [[161, "tvm.relax.op.squeeze", false]], "squeezeattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.SqueezeAttrs", false]], "stage (class in tvm.te)": [[181, "tvm.te.Stage", false]], "start_checkpoint() (in module tvm.relax.op.grad)": [[161, "tvm.relax.op.grad.start_checkpoint", false]], "start_profile_intrinsic() (in module tvm.tir)": [[185, "tvm.tir.start_profile_intrinsic", false]], "state (tvm.tir.schedule.schedule property)": [[183, "tvm.tir.schedule.Schedule.state", false]], "staticplanblockmemory() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.StaticPlanBlockMemory", false]], "statisticalattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.StatisticalAttrs", false]], "stats() (tvm.relax.executable method)": [[162, "tvm.relax.Executable.stats", false]], "std() (in module tvm.relax.op)": [[161, "tvm.relax.op.std", false]], "stm32() (in module tvm.target)": [[180, "tvm.target.stm32", false]], "stmt (class in tvm.tir)": [[185, "tvm.tir.Stmt", false]], "stmt (tvm.tir.schedule.stmtsref property)": [[183, "tvm.tir.schedule.StmtSRef.stmt", false]], "stmt_list() (in module tvm.tir)": [[185, "tvm.tir.stmt_list", false]], "stmt_seq() (in module tvm.tir)": [[185, "tvm.tir.stmt_seq", false]], "stmtsref (class in tvm.tir.schedule)": [[183, "tvm.tir.schedule.StmtSRef", false]], "stop_lift_params() (in module tvm.relax.op.builtin)": [[161, "tvm.relax.op.builtin.stop_lift_params", false]], "storage_align() (tvm.te.stage method)": [[181, "tvm.te.Stage.storage_align", false]], "storage_align() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.storage_align", false]], "storageflatten() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.StorageFlatten", false]], "storagerewrite() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.StorageRewrite", false]], "stride_h (tvm.topi.nn.workload attribute)": [[187, "tvm.topi.nn.Workload.stride_h", false]], "stride_w (tvm.topi.nn.workload attribute)": [[187, "tvm.topi.nn.Workload.stride_w", false]], "strided_slice() (in module tvm.relax.op)": [[161, "tvm.relax.op.strided_slice", false]], "strided_slice() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.strided_slice", false]], "stridedsliceattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.StridedSliceAttrs", false]], "stringimm (class in tvm.relax)": [[162, "tvm.relax.StringImm", false]], "stringimm (class in tvm.tir)": [[185, "tvm.tir.StringImm", false]], "struct_info (tvm.ir.relayexpr property)": [[155, "tvm.ir.RelayExpr.struct_info", false]], "struct_info_base_check() (in module tvm.relax.analysis)": [[158, "tvm.relax.analysis.struct_info_base_check", false]], "struct_info_lca() (in module tvm.relax.analysis)": [[158, "tvm.relax.analysis.struct_info_lca", false]], "structinfo (class in tvm.relax)": [[162, "tvm.relax.StructInfo", false]], "structural_equal() (in module tvm.ir)": [[155, "tvm.ir.structural_equal", false]], "structural_hash() (in module tvm.ir)": [[155, "tvm.ir.structural_hash", false]], "sub (class in tvm.tir)": [[185, "tvm.tir.Sub", false]], "subrange_length() (tvm.autotvm.task.space.configspace method)": [[147, "tvm.autotvm.task.space.ConfigSpace.subrange_length", false]], "substitute() (in module tvm.tir.stmt_functor)": [[184, "tvm.tir.stmt_functor.substitute", false]], "subtract() (in module tvm.relax.op)": [[161, "tvm.relax.op.subtract", false]], "subtract() (in module tvm.te)": [[181, "tvm.te.subtract", false]], "subtract() (in module tvm.tir)": [[185, "tvm.tir.subtract", false]], "suggest_layout_transforms() (in module tvm.relax.analysis)": [[158, "tvm.relax.analysis.suggest_layout_transforms", false]], "sum() (in module tvm.relax.op)": [[161, "tvm.relax.op.sum", false]], "sum() (in module tvm.te)": [[181, "tvm.te.sum", false]], "sum() (in module tvm.tir)": [[185, "tvm.tir.sum", false]], "summary() (tvm.rpc.trackersession method)": [[174, "tvm.rpc.TrackerSession.summary", false]], "sync_worker_0() (tvm.runtime.disco.session method)": [[175, "tvm.runtime.disco.Session.sync_worker_0", false]], "system_lib() (tvm.rpc.rpcsession method)": [[174, "tvm.rpc.RPCSession.system_lib", false]], "table() (tvm.meta_schedule.profiler method)": [[156, "tvm.meta_schedule.Profiler.table", false]], "table() (tvm.runtime.profiling.report method)": [[177, "tvm.runtime.profiling.Report.table", false]], "tag_scope() (in module tvm.te)": [[181, "tvm.te.tag_scope", false]], "take() (in module tvm.relax.op)": [[161, "tvm.relax.op.take", false]], "take_backward() (in module tvm.relax.op.grad)": [[161, "tvm.relax.op.grad.take_backward", false]], "takeattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.TakeAttrs", false]], "tan() (in module tvm.relax.op)": [[161, "tvm.relax.op.tan", false]], "tan() (in module tvm.te)": [[181, "tvm.te.tan", false]], "tan() (in module tvm.tir)": [[185, "tvm.tir.tan", false]], "tanh() (in module tvm.relax.op)": [[161, "tvm.relax.op.tanh", false]], "tanh() (in module tvm.te)": [[181, "tvm.te.tanh", false]], "tanh() (in module tvm.tir)": [[185, "tvm.tir.tanh", false]], "tar() (in module tvm.contrib.tar)": [[148, "tvm.contrib.tar.tar", false]], "target (class in tvm.target)": [[180, "tvm.target.Target", false]], "target_or_current() (tvm.target.target static method)": [[180, "tvm.target.Target.target_or_current", false]], "targetkind (class in tvm.target)": [[180, "tvm.target.TargetKind", false]], "task (class in tvm.autotvm.task.task)": [[147, "tvm.autotvm.task.task.Task", false]], "taskextractenv (class in tvm.autotvm.task.topi_integration)": [[147, "tvm.autotvm.task.topi_integration.TaskExtractEnv", false]], "taskscheduler (class in tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.TaskScheduler", false]], "taskscheduler (class in tvm.meta_schedule)": [[156, "tvm.meta_schedule.TaskScheduler", false]], "tasktemplate (class in tvm.autotvm.task.task)": [[147, "tvm.autotvm.task.task.TaskTemplate", false]], "tecompiler (class in tvm.relay.backend.te_compiler)": [[165, "tvm.relay.backend.te_compiler.TECompiler", false]], "tempdir() (in module tvm.contrib.utils)": [[148, "tvm.contrib.utils.tempdir", false]], "tempdirectory (class in tvm.contrib.utils)": [[148, "tvm.contrib.utils.TempDirectory", false]], "template() (in module tvm.autotvm.task.task)": [[147, "tvm.autotvm.task.task.template", false]], "templateproject (class in tvm.micro)": [[157, "tvm.micro.TemplateProject", false]], "tensor (class in tvm.te)": [[181, "tvm.te.Tensor", false]], "tensor_to_shape() (in module tvm.relax.op)": [[161, "tvm.relax.op.tensor_to_shape", false]], "tensoraffinetype (class in tvm.ir)": [[155, "tvm.ir.TensorAffineType", false]], "tensorcomputeop (class in tvm.te)": [[181, "tvm.te.TensorComputeOp", false]], "tensorintrin (class in tvm.tir)": [[185, "tvm.tir.TensorIntrin", false]], "tensorize() (tvm.te.stage method)": [[181, "tvm.te.Stage.tensorize", false]], "tensorize() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.tensorize", false]], "tensorslice (class in tvm.te)": [[181, "tvm.te.TensorSlice", false]], "tensorstructinfo (class in tvm.relax)": [[162, "tvm.relax.TensorStructInfo", false]], "tensortype (class in tvm.ir)": [[155, "tvm.ir.TensorType", false]], "termgraph (class in tvm.contrib.relay_viz.terminal)": [[148, "tvm.contrib.relay_viz.terminal.TermGraph", false]], "terminate() (tvm.rpc.server method)": [[174, "tvm.rpc.Server.terminate", false]], "terminate_task() (tvm.meta_schedule.taskscheduler method)": [[156, "tvm.meta_schedule.TaskScheduler.terminate_task", false]], "termnode (class in tvm.contrib.relay_viz.terminal)": [[148, "tvm.contrib.relay_viz.terminal.TermNode", false]], "termplotter (class in tvm.contrib.relay_viz.terminal)": [[148, "tvm.contrib.relay_viz.terminal.TermPlotter", false]], "termvizparser (class in tvm.contrib.relay_viz.terminal)": [[148, "tvm.contrib.relay_viz.terminal.TermVizParser", false]], "testing_scope() (tvm.relax.block_builder.blockbuilder method)": [[159, "tvm.relax.block_builder.BlockBuilder.testing_scope", false]], "testingscope (class in tvm.relax.block_builder)": [[159, "tvm.relax.block_builder.TestingScope", false]], "text_summary() (tvm.rpc.trackersession method)": [[174, "tvm.rpc.TrackerSession.text_summary", false]], "textureflatten() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.TextureFlatten", false]], "thread_axis() (in module tvm.te)": [[181, "tvm.te.thread_axis", false]], "thread_warp_size (tvm.target.target property)": [[180, "tvm.target.Target.thread_warp_size", false]], "threadedsession (class in tvm.runtime.disco)": [[175, "tvm.runtime.disco.ThreadedSession", false]], "threadsync() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.ThreadSync", false]], "tile() (in module tvm.relax.op)": [[161, "tvm.relax.op.tile", false]], "tile() (tvm.te.stage method)": [[181, "tvm.te.Stage.tile", false]], "tileattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.TileAttrs", false]], "time_evaluator() (tvm.relax.virtualmachine method)": [[162, "tvm.relax.VirtualMachine.time_evaluator", false]], "time_evaluator() (tvm.runtime.relax_vm.virtualmachine method)": [[178, "tvm.runtime.relax_vm.VirtualMachine.time_evaluator", false]], "timeit() (tvm.meta_schedule.profiler static method)": [[156, "tvm.meta_schedule.Profiler.timeit", false]], "timeouts() (tvm.micro.transportlogger method)": [[157, "tvm.micro.TransportLogger.timeouts", false]], "tir_vars_in_struct_info() (in module tvm.relax.analysis)": [[158, "tvm.relax.analysis.tir_vars_in_struct_info", false]], "to_cps() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.to_cps", false]], "to_json_dict() (tvm.autotvm.task.space.configentity method)": [[147, "tvm.autotvm.task.space.ConfigEntity.to_json_dict", false]], "to_mxnet_func() (in module tvm.contrib.mxnet)": [[148, "tvm.contrib.mxnet.to_mxnet_func", false]], "to_python() (in module tvm.relay.testing)": [[171, "tvm.relay.testing.to_python", false]], "to_pytorch_func() (in module tvm.contrib.dlpack)": [[148, "tvm.contrib.dlpack.to_pytorch_func", false]], "to_vdevice() (in module tvm.relax.op)": [[161, "tvm.relax.op.to_vdevice", false]], "toanormalform() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.ToANormalForm", false]], "toanormalformexpr() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.ToANormalFormExpr", false]], "tobasicblocknormalform() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.ToBasicBlockNormalForm", false]], "tocps() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.ToCPS", false]], "tographnormalform() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.ToGraphNormalForm", false]], "tomixedprecision() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.ToMixedPrecision", false]], "tomixedprecision() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.ToMixedPrecision", false]], "tonondataflow() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.ToNonDataflow", false]], "topk() (in module tvm.relax.op)": [[161, "tvm.relax.op.topk", false]], "topkattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.TopKAttrs", false]], "topologicalsort() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.TopologicalSort", false]], "touch_task() (tvm.meta_schedule.taskscheduler method)": [[156, "tvm.meta_schedule.TaskScheduler.touch_task", false]], "trace (class in tvm.tir.schedule)": [[183, "tvm.tir.schedule.Trace", false]], "trace (tvm.tir.schedule.schedule property)": [[183, "tvm.tir.schedule.Schedule.trace", false]], "trace() (in module tvm.te)": [[181, "tvm.te.trace", false]], "trace() (in module tvm.tir)": [[185, "tvm.tir.trace", false]], "trackersession (class in tvm.rpc)": [[174, "tvm.rpc.TrackerSession", false]], "transform_block_layout() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.transform_block_layout", false]], "transform_layout() (tvm.te.stage method)": [[181, "tvm.te.Stage.transform_layout", false]], "transform_layout() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.transform_layout", false]], "transformmmabufferlayout() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.TransformMmaBufferLayout", false]], "transformspace (class in tvm.autotvm.task.space)": [[147, "tvm.autotvm.task.space.TransformSpace", false]], "transportlogger (class in tvm.micro)": [[157, "tvm.micro.TransportLogger", false]], "trial_scores() (tvm.autotvm.tuner.callback.monitor method)": [[147, "tvm.autotvm.tuner.callback.Monitor.trial_scores", false]], "trial_timestamps() (tvm.autotvm.tuner.callback.monitor method)": [[147, "tvm.autotvm.tuner.callback.Monitor.trial_timestamps", false]], "tril() (in module tvm.relax.op)": [[161, "tvm.relax.op.tril", false]], "triluattrs (class in tvm.relax.op.op_attrs)": [[161, "tvm.relax.op.op_attrs.TriluAttrs", false]], "triu() (in module tvm.relax.op)": [[161, "tvm.relax.op.triu", false]], "trunc() (in module tvm.te)": [[181, "tvm.te.trunc", false]], "trunc() (in module tvm.tir)": [[185, "tvm.tir.trunc", false]], "truncdiv() (in module tvm.te)": [[181, "tvm.te.truncdiv", false]], "truncdiv() (in module tvm.tir)": [[185, "tvm.tir.truncdiv", false]], "truncmod() (in module tvm.te)": [[181, "tvm.te.truncmod", false]], "truncmod() (in module tvm.tir)": [[185, "tvm.tir.truncmod", false]], "try_get_conv2d_sparse_input() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.try_get_conv2d_sparse_input", false]], "try_get_sparse_input() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.try_get_sparse_input", false]], "try_inline() (in module tvm.dlight)": [[149, "tvm.dlight.try_inline", false]], "try_inline_contiguous_spatial() (in module tvm.dlight)": [[149, "tvm.dlight.try_inline_contiguous_spatial", false]], "tune() (tvm.auto_scheduler.searchtask method)": [[146, "tvm.auto_scheduler.SearchTask.tune", false]], "tune() (tvm.auto_scheduler.taskscheduler method)": [[146, "tvm.auto_scheduler.TaskScheduler.tune", false]], "tune() (tvm.autotvm.tuner.gatuner method)": [[147, "tvm.autotvm.tuner.GATuner.tune", false]], "tune() (tvm.autotvm.tuner.gridsearchtuner method)": [[147, "tvm.autotvm.tuner.GridSearchTuner.tune", false]], "tune() (tvm.autotvm.tuner.randomtuner method)": [[147, "tvm.autotvm.tuner.RandomTuner.tune", false]], "tune() (tvm.autotvm.tuner.tuner method)": [[147, "tvm.autotvm.tuner.Tuner.tune", false]], "tune() (tvm.autotvm.tuner.xgbtuner method)": [[147, "tvm.autotvm.tuner.XGBTuner.tune", false]], "tune() (tvm.meta_schedule.taskscheduler method)": [[156, "tvm.meta_schedule.TaskScheduler.tune", false]], "tune_tasks() (in module tvm.meta_schedule)": [[156, "tvm.meta_schedule.tune_tasks", false]], "tune_tir() (in module tvm.meta_schedule)": [[156, "tvm.meta_schedule.tune_tir", false]], "tunecontext (class in tvm.meta_schedule)": [[156, "tvm.meta_schedule.TuneContext", false]], "tuner (class in tvm.autotvm.tuner)": [[147, "tvm.autotvm.tuner.Tuner", false]], "tuningoptions (class in tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.TuningOptions", false]], "tuple (class in tvm.relax)": [[162, "tvm.relax.Tuple", false]], "tupleaffinetype (class in tvm.ir)": [[155, "tvm.ir.TupleAffineType", false]], "tuplegetitem (class in tvm.relax)": [[162, "tvm.relax.TupleGetItem", false]], "tuplegetitempattern (class in tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.TupleGetItemPattern", false]], "tuplepattern (class in tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.TuplePattern", false]], "tuplestructinfo (class in tvm.relax)": [[162, "tvm.relax.TupleStructInfo", false]], "tupletype (class in tvm.ir)": [[155, "tvm.ir.TupleType", false]], "tvm.auto_scheduler": [[146, "module-tvm.auto_scheduler", false]], "tvm.autotvm": [[147, "module-tvm.autotvm", false]], "tvm.autotvm.measure.measure": [[147, "module-tvm.autotvm.measure.measure", false]], "tvm.autotvm.record": [[147, "module-tvm.autotvm.record", false]], "tvm.autotvm.task": [[147, "module-tvm.autotvm.task", false]], "tvm.autotvm.task.dispatcher": [[147, "module-tvm.autotvm.task.dispatcher", false]], "tvm.autotvm.task.space": [[147, "module-tvm.autotvm.task.space", false]], "tvm.autotvm.task.task": [[147, "module-tvm.autotvm.task.task", false]], "tvm.autotvm.task.topi_integration": [[147, "module-tvm.autotvm.task.topi_integration", false]], "tvm.autotvm.tuner": [[147, "module-tvm.autotvm.tuner", false]], "tvm.autotvm.tuner.callback": [[147, "module-tvm.autotvm.tuner.callback", false]], "tvm.contrib": [[148, "module-tvm.contrib", false]], "tvm.contrib.cblas": [[148, "module-tvm.contrib.cblas", false]], "tvm.contrib.cc": [[148, "module-tvm.contrib.cc", false]], "tvm.contrib.clang": [[148, "module-tvm.contrib.clang", false]], "tvm.contrib.cublas": [[148, "module-tvm.contrib.cublas", false]], "tvm.contrib.dlpack": [[148, "module-tvm.contrib.dlpack", false]], "tvm.contrib.emcc": [[148, "module-tvm.contrib.emcc", false]], "tvm.contrib.graph_executor": [[152, "module-tvm.contrib.graph_executor", false]], "tvm.contrib.miopen": [[148, "module-tvm.contrib.miopen", false]], "tvm.contrib.mxnet": [[148, "module-tvm.contrib.mxnet", false]], "tvm.contrib.ndk": [[148, "module-tvm.contrib.ndk", false]], "tvm.contrib.nnpack": [[148, "module-tvm.contrib.nnpack", false]], "tvm.contrib.nvcc": [[148, "module-tvm.contrib.nvcc", false]], "tvm.contrib.pickle_memoize": [[148, "module-tvm.contrib.pickle_memoize", false]], "tvm.contrib.random": [[148, "module-tvm.contrib.random", false]], "tvm.contrib.relay_viz": [[148, "module-tvm.contrib.relay_viz", false]], "tvm.contrib.relay_viz.dot": [[148, "module-tvm.contrib.relay_viz.dot", false]], "tvm.contrib.relay_viz.interface": [[148, "module-tvm.contrib.relay_viz.interface", false]], "tvm.contrib.relay_viz.terminal": [[148, "module-tvm.contrib.relay_viz.terminal", false]], "tvm.contrib.rocblas": [[148, "module-tvm.contrib.rocblas", false]], "tvm.contrib.rocm": [[148, "module-tvm.contrib.rocm", false]], "tvm.contrib.sparse": [[148, "module-tvm.contrib.sparse", false]], "tvm.contrib.spirv": [[148, "module-tvm.contrib.spirv", false]], "tvm.contrib.tar": [[148, "module-tvm.contrib.tar", false]], "tvm.contrib.utils": [[148, "module-tvm.contrib.utils", false]], "tvm.contrib.xcode": [[148, "module-tvm.contrib.xcode", false]], "tvm.dlight": [[149, "module-tvm.dlight", false]], "tvm.driver": [[150, "module-tvm.driver", false]], "tvm.error": [[151, "module-tvm.error", false]], "tvm.instrument": [[154, "module-tvm.instrument", false]], "tvm.ir": [[155, "module-tvm.ir", false]], "tvm.meta_schedule": [[156, "module-tvm.meta_schedule", false]], "tvm.micro": [[157, "module-tvm.micro", false]], "tvm.relax": [[162, "module-tvm.relax", false]], "tvm.relax.analysis": [[158, "module-tvm.relax.analysis", false]], "tvm.relax.block_builder": [[159, "module-tvm.relax.block_builder", false]], "tvm.relax.frontend": [[160, "module-tvm.relax.frontend", false]], "tvm.relax.frontend.onnx": [[160, "module-tvm.relax.frontend.onnx", false]], "tvm.relax.frontend.stablehlo": [[160, "module-tvm.relax.frontend.stablehlo", false]], "tvm.relax.frontend.torch": [[160, "module-tvm.relax.frontend.torch", false]], "tvm.relax.op": [[161, "module-tvm.relax.op", false]], "tvm.relax.op.builtin": [[161, "module-tvm.relax.op.builtin", false]], "tvm.relax.op.ccl": [[161, "module-tvm.relax.op.ccl", false]], "tvm.relax.op.distributed": [[161, "module-tvm.relax.op.distributed", false]], "tvm.relax.op.grad": [[161, "module-tvm.relax.op.grad", false]], "tvm.relax.op.image": [[161, "module-tvm.relax.op.image", false]], "tvm.relax.op.memory": [[161, "module-tvm.relax.op.memory", false]], "tvm.relax.op.nn": [[161, "module-tvm.relax.op.nn", false]], "tvm.relax.op.op_attrs": [[161, "module-tvm.relax.op.op_attrs", false]], "tvm.relax.transform": [[163, "module-tvm.relax.transform", false]], "tvm.relay.analysis": [[164, "module-tvm.relay.analysis", false]], "tvm.relay.backend": [[165, "module-tvm.relay.backend", false]], "tvm.relay.backend.graph_executor_codegen": [[165, "module-tvm.relay.backend.graph_executor_codegen", false]], "tvm.relay.backend.interpreter": [[165, "module-tvm.relay.backend.interpreter", false]], "tvm.relay.backend.te_compiler": [[165, "module-tvm.relay.backend.te_compiler", false]], "tvm.relay.backend.vm": [[165, "module-tvm.relay.backend.vm", false]], "tvm.relay.dataflow_pattern": [[166, "module-tvm.relay.dataflow_pattern", false]], "tvm.relay.frontend": [[167, "module-tvm.relay.frontend", false]], "tvm.relay.image": [[168, "module-tvm.relay.image", false]], "tvm.relay.nn": [[170, "module-tvm.relay.nn", false]], "tvm.relay.testing": [[171, "module-tvm.relay.testing", false]], "tvm.relay.testing.dcgan": [[171, "module-tvm.relay.testing.dcgan", false]], "tvm.relay.testing.densenet": [[171, "module-tvm.relay.testing.densenet", false]], "tvm.relay.testing.inception_v3": [[171, "module-tvm.relay.testing.inception_v3", false]], "tvm.relay.testing.lstm": [[171, "module-tvm.relay.testing.lstm", false]], "tvm.relay.testing.mlp": [[171, "module-tvm.relay.testing.mlp", false]], "tvm.relay.testing.mobilenet": [[171, "module-tvm.relay.testing.mobilenet", false]], "tvm.relay.testing.resnet": [[171, "module-tvm.relay.testing.resnet", false]], "tvm.relay.testing.squeezenet": [[171, "module-tvm.relay.testing.squeezenet", false]], "tvm.relay.testing.vgg": [[171, "module-tvm.relay.testing.vgg", false]], "tvm.relay.transform": [[172, "module-tvm.relay.transform", false]], "tvm.relay.vision": [[173, "module-tvm.relay.vision", false]], "tvm.rpc": [[174, "module-tvm.rpc", false]], "tvm.runtime": [[179, "module-tvm.runtime", false]], "tvm.runtime.disco": [[175, "module-tvm.runtime.disco", false]], "tvm.runtime.ndarray": [[176, "module-tvm.runtime.ndarray", false]], "tvm.runtime.profiling": [[177, "module-tvm.runtime.profiling", false]], "tvm.runtime.relax_vm": [[178, "module-tvm.runtime.relax_vm", false]], "tvm.target": [[180, "module-tvm.target", false]], "tvm.te": [[181, "module-tvm.te", false]], "tvm.te.hybrid": [[181, "module-tvm.te.hybrid", false]], "tvm.tir": [[185, "module-tvm.tir", false]], "tvm.tir.analysis.analysis": [[182, "module-tvm.tir.analysis.analysis", false]], "tvm.tir.schedule": [[183, "module-tvm.tir.schedule", false]], "tvm.tir.stmt_functor": [[184, "module-tvm.tir.stmt_functor", false]], "tvm.tir.transform": [[186, "module-tvm.tir.transform", false]], "tvm.topi.image": [[187, "module-tvm.topi.image", false]], "tvm.topi.nn": [[187, "module-tvm.topi.nn", false]], "tvm.topi.sparse": [[187, "module-tvm.topi.sparse", false]], "tvm.transform": [[188, "module-tvm.transform", false]], "tvm_access_ptr() (in module tvm.tir)": [[185, "tvm.tir.tvm_access_ptr", false]], "tvm_bmma_sync() (in module tvm.tir)": [[185, "tvm.tir.tvm_bmma_sync", false]], "tvm_check_return() (in module tvm.tir)": [[185, "tvm.tir.tvm_check_return", false]], "tvm_fill_fragment() (in module tvm.tir)": [[185, "tvm.tir.tvm_fill_fragment", false]], "tvm_load_matrix_sync() (in module tvm.tir)": [[185, "tvm.tir.tvm_load_matrix_sync", false]], "tvm_mma_sync() (in module tvm.tir)": [[185, "tvm.tir.tvm_mma_sync", false]], "tvm_stack_alloca() (in module tvm.tir)": [[185, "tvm.tir.tvm_stack_alloca", false]], "tvm_stack_make_array() (in module tvm.tir)": [[185, "tvm.tir.tvm_stack_make_array", false]], "tvm_stack_make_shape() (in module tvm.tir)": [[185, "tvm.tir.tvm_stack_make_shape", false]], "tvm_store_matrix_sync() (in module tvm.tir)": [[185, "tvm.tir.tvm_store_matrix_sync", false]], "tvm_struct_get() (in module tvm.tir)": [[185, "tvm.tir.tvm_struct_get", false]], "tvm_struct_set() (in module tvm.tir)": [[185, "tvm.tir.tvm_struct_set", false]], "tvm_thread_allreduce() (in module tvm.tir)": [[185, "tvm.tir.tvm_thread_allreduce", false]], "tvm_throw_last_error() (in module tvm.tir)": [[185, "tvm.tir.tvm_throw_last_error", false]], "tvm_tuple() (in module tvm.tir)": [[185, "tvm.tir.tvm_tuple", false]], "tvmbackendallocworkspace() (in module tvm.tir)": [[185, "tvm.tir.TVMBackendAllocWorkspace", false]], "tvmbackendfreeworkspace() (in module tvm.tir)": [[185, "tvm.tir.TVMBackendFreeWorkspace", false]], "tvmerror": [[151, "tvm.error.TVMError", false]], "type (class in tvm.ir)": [[155, "tvm.ir.Type", false]], "type_annotation() (in module tvm.tir)": [[185, "tvm.tir.type_annotation", false]], "typecall (class in tvm.ir)": [[155, "tvm.ir.TypeCall", false]], "typeconstraint (class in tvm.ir)": [[155, "tvm.ir.TypeConstraint", false]], "typedata (class in tvm.ir)": [[155, "tvm.ir.TypeData", false]], "typekind (class in tvm.ir)": [[155, "tvm.ir.TypeKind", false]], "typepattern (class in tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.TypePattern", false]], "typerelation (class in tvm.ir)": [[155, "tvm.ir.TypeRelation", false]], "typevar (class in tvm.ir)": [[155, "tvm.ir.TypeVar", false]], "udchain() (in module tvm.relax.analysis)": [[158, "tvm.relax.analysis.udchain", false]], "un_cps() (in module tvm.relay.transform)": [[172, "tvm.relay.transform.un_cps", false]], "unannotate() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.unannotate", false]], "undef() (in module tvm.tir)": [[185, "tvm.tir.undef", false]], "undefined_vars() (in module tvm.tir.analysis.analysis)": [[182, "tvm.tir.analysis.analysis.undefined_vars", false]], "uniform() (in module tvm.contrib.random)": [[148, "tvm.contrib.random.uniform", false]], "unifythreadbinding() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.UnifyThreadBinding", false]], "unique() (in module tvm.relax.op)": [[161, "tvm.relax.op.unique", false]], "unmatched_cases() (in module tvm.relay.analysis)": [[164, "tvm.relay.analysis.unmatched_cases", false]], "unpack_nchwc_to_nchw() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.unpack_NCHWc_to_nchw", false]], "unroll() (tvm.te.stage method)": [[181, "tvm.te.Stage.unroll", false]], "unroll() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.unroll", false]], "unrollloop() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.UnrollLoop", false]], "unsafe_hide_buffer_access() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.unsafe_hide_buffer_access", false]], "unsafe_set_dtype() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.unsafe_set_dtype", false]], "unsupportedinmodellibraryformaterror": [[157, "tvm.micro.UnsupportedInModelLibraryFormatError", false]], "untar() (in module tvm.contrib.tar)": [[148, "tvm.contrib.tar.untar", false]], "update() (tvm.auto_scheduler.applyhistorybest method)": [[146, "tvm.auto_scheduler.ApplyHistoryBest.update", false]], "update() (tvm.auto_scheduler.dispatchcontext method)": [[146, "tvm.auto_scheduler.DispatchContext.update", false]], "update() (tvm.auto_scheduler.randommodel method)": [[146, "tvm.auto_scheduler.RandomModel.update", false]], "update() (tvm.auto_scheduler.xgbmodel method)": [[146, "tvm.auto_scheduler.XGBModel.update", false]], "update() (tvm.autotvm.task.dispatcher.applyconfig method)": [[147, "tvm.autotvm.task.dispatcher.ApplyConfig.update", false]], "update() (tvm.autotvm.task.dispatcher.applyfixedconfig method)": [[147, "tvm.autotvm.task.dispatcher.ApplyFixedConfig.update", false]], "update() (tvm.autotvm.task.dispatcher.applygraphbest method)": [[147, "tvm.autotvm.task.dispatcher.ApplyGraphBest.update", false]], "update() (tvm.autotvm.task.dispatcher.applyhistorybest method)": [[147, "tvm.autotvm.task.dispatcher.ApplyHistoryBest.update", false]], "update() (tvm.autotvm.task.dispatcher.dispatchcontext method)": [[147, "tvm.autotvm.task.dispatcher.DispatchContext.update", false]], "update() (tvm.autotvm.task.dispatcher.fallbackcontext method)": [[147, "tvm.autotvm.task.dispatcher.FallbackContext.update", false]], "update() (tvm.autotvm.tuner.gatuner method)": [[147, "tvm.autotvm.tuner.GATuner.update", false]], "update() (tvm.autotvm.tuner.gridsearchtuner method)": [[147, "tvm.autotvm.tuner.GridSearchTuner.update", false]], "update() (tvm.autotvm.tuner.randomtuner method)": [[147, "tvm.autotvm.tuner.RandomTuner.update", false]], "update() (tvm.autotvm.tuner.tuner method)": [[147, "tvm.autotvm.tuner.Tuner.update", false]], "update() (tvm.autotvm.tuner.xgbtuner method)": [[147, "tvm.autotvm.tuner.XGBTuner.update", false]], "update() (tvm.ir.irmodule method)": [[155, "tvm.ir.IRModule.update", false]], "update() (tvm.meta_schedule.costmodel method)": [[156, "tvm.meta_schedule.CostModel.update", false]], "update_from_file() (tvm.auto_scheduler.xgbmodel method)": [[146, "tvm.auto_scheduler.XGBModel.update_from_file", false]], "update_func() (tvm.ir.irmodule method)": [[155, "tvm.ir.IRModule.update_func", false]], "update_func() (tvm.relax.block_builder.blockbuilder method)": [[159, "tvm.relax.block_builder.BlockBuilder.update_func", false]], "update_global_info() (tvm.ir.irmodule method)": [[155, "tvm.ir.IRModule.update_global_info", false]], "updateparamstructinfo() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.UpdateParamStructInfo", false]], "updatevdevice() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.UpdateVDevice", false]], "upload() (tvm.rpc.rpcsession method)": [[174, "tvm.rpc.RPCSession.upload", false]], "upsampling() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.upsampling", false]], "upsampling() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.upsampling", false]], "upsampling3d() (in module tvm.relay.nn)": [[170, "tvm.relay.nn.upsampling3d", false]], "upsampling3d() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.upsampling3d", false]], "useassumetoreducebranches() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.UseAssumeToReduceBranches", false]], "usingblockvar (tvm.tir.transform.hoistedconditionals attribute)": [[186, "tvm.tir.transform.HoistedConditionals.UsingBlockVar", false]], "valid() (tvm.autotvm.task.space.configspace method)": [[147, "tvm.autotvm.task.space.ConfigSpace.valid", false]], "value_index (tvm.te.tensor property)": [[181, "tvm.te.Tensor.value_index", false]], "var (class in tvm.relax)": [[162, "tvm.relax.Var", false]], "var (class in tvm.tir)": [[185, "tvm.tir.Var", false]], "var() (in module tvm.te)": [[181, "tvm.te.var", false]], "varbinding (class in tvm.relax)": [[162, "tvm.relax.VarBinding", false]], "variance() (in module tvm.relax.op)": [[161, "tvm.relax.op.variance", false]], "varpattern (class in tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.VarPattern", false]], "vdevice (class in tvm.ir)": [[155, "tvm.ir.VDevice", false]], "vectorcombine() (in module tvm.tir)": [[185, "tvm.tir.vectorcombine", false]], "vectorhigh() (in module tvm.tir)": [[185, "tvm.tir.vectorhigh", false]], "vectorize() (tvm.te.stage method)": [[181, "tvm.te.Stage.vectorize", false]], "vectorize() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.vectorize", false]], "vectorizeloop() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.VectorizeLoop", false]], "vectorlow() (in module tvm.tir)": [[185, "tvm.tir.vectorlow", false]], "verify_cached_flags (tvm.tir.schedule.scheduledebugmask attribute)": [[183, "tvm.tir.schedule.ScheduleDebugMask.VERIFY_CACHED_FLAGS", false]], "verify_gpu_code() (in module tvm.tir.analysis.analysis)": [[182, "tvm.tir.analysis.analysis.verify_gpu_code", false]], "verify_memory() (in module tvm.tir.analysis.analysis)": [[182, "tvm.tir.analysis.analysis.verify_memory", false]], "verify_sref_tree (tvm.tir.schedule.scheduledebugmask attribute)": [[183, "tvm.tir.schedule.ScheduleDebugMask.VERIFY_SREF_TREE", false]], "verify_ssa() (in module tvm.tir.analysis.analysis)": [[182, "tvm.tir.analysis.analysis.verify_ssa", false]], "verify_well_formed() (in module tvm.tir.analysis.analysis)": [[182, "tvm.tir.analysis.analysis.verify_well_formed", false]], "verifymemory() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.VerifyMemory", false]], "verifyvtcmlimit() (in module tvm.tir.transform)": [[186, "tvm.tir.transform.VerifyVTCMLimit", false]], "view() (in module tvm.relax.op.memory)": [[161, "tvm.relax.op.memory.view", false]], "virtualaxis (class in tvm.autotvm.task.space)": [[147, "tvm.autotvm.task.space.VirtualAxis", false]], "virtualdevice (class in tvm.target)": [[180, "tvm.target.VirtualDevice", false]], "virtualmachine (class in tvm.relax)": [[162, "tvm.relax.VirtualMachine", false]], "virtualmachine (class in tvm.runtime.relax_vm)": [[178, "tvm.runtime.relax_vm.VirtualMachine", false]], "visit_binding() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_binding", false]], "visit_binding() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_binding", false]], "visit_binding_block() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_binding_block", false]], "visit_binding_block() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_binding_block", false]], "visit_binding_block_() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_binding_block_", false]], "visit_binding_block_() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_binding_block_", false]], "visit_call_() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_call_", false]], "visit_call_() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_call_", false]], "visit_constant_() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_constant_", false]], "visit_constant_() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_constant_", false]], "visit_data_type_imm_() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_data_type_imm_", false]], "visit_data_type_imm_() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_data_type_imm_", false]], "visit_dataflow_block_() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_dataflow_block_", false]], "visit_dataflow_block_() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_dataflow_block_", false]], "visit_dataflow_var_() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_dataflow_var_", false]], "visit_dataflow_var_() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_dataflow_var_", false]], "visit_dataflow_var_def_() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_dataflow_var_def_", false]], "visit_dataflow_var_def_() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_dataflow_var_def_", false]], "visit_expr() (tvm.relax.exprfunctor method)": [[162, "tvm.relax.ExprFunctor.visit_expr", false]], "visit_expr() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_expr", false]], "visit_expr() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_expr", false]], "visit_expr_post_order() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_expr_post_order", false]], "visit_extern_func_() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_extern_func_", false]], "visit_extern_func_() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_extern_func_", false]], "visit_function_() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_function_", false]], "visit_function_() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_function_", false]], "visit_global_var_() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_global_var_", false]], "visit_global_var_() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_global_var_", false]], "visit_if_() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_if_", false]], "visit_if_() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_if_", false]], "visit_match_cast_() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_match_cast_", false]], "visit_match_cast_() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_match_cast_", false]], "visit_op_() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_op_", false]], "visit_op_() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_op_", false]], "visit_prim_value_() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_prim_value_", false]], "visit_prim_value_() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_prim_value_", false]], "visit_seq_expr_() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_seq_expr_", false]], "visit_seq_expr_() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_seq_expr_", false]], "visit_shape_expr_() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_shape_expr_", false]], "visit_shape_expr_() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_shape_expr_", false]], "visit_span() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_span", false]], "visit_span() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_span", false]], "visit_string_imm_() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_string_imm_", false]], "visit_string_imm_() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_string_imm_", false]], "visit_tuple_() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_tuple_", false]], "visit_tuple_() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_tuple_", false]], "visit_tuple_getitem_() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_tuple_getitem_", false]], "visit_tuple_getitem_() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_tuple_getitem_", false]], "visit_var_() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_var_", false]], "visit_var_() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_var_", false]], "visit_var_binding_() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_var_binding_", false]], "visit_var_binding_() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_var_binding_", false]], "visit_var_def() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_var_def", false]], "visit_var_def() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_var_def", false]], "visit_var_def_() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_var_def_", false]], "visit_var_def_() (tvm.relax.pyexprvisitor method)": [[162, "tvm.relax.PyExprVisitor.visit_var_def_", false]], "visit_with_new_scope() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.visit_with_new_scope", false]], "vizedge (class in tvm.contrib.relay_viz.interface)": [[148, "tvm.contrib.relay_viz.interface.VizEdge", false]], "vizgraph (class in tvm.contrib.relay_viz.interface)": [[148, "tvm.contrib.relay_viz.interface.VizGraph", false]], "viznode (class in tvm.contrib.relay_viz.interface)": [[148, "tvm.contrib.relay_viz.interface.VizNode", false]], "vizparser (class in tvm.contrib.relay_viz.interface)": [[148, "tvm.contrib.relay_viz.interface.VizParser", false]], "vload() (tvm.tir.buffer method)": [[185, "tvm.tir.Buffer.vload", false]], "vmbuiltinlower() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.VMBuiltinLower", false]], "vmcompiler (class in tvm.relay.backend.vm)": [[165, "tvm.relay.backend.vm.VMCompiler", false]], "vmexecutor (class in tvm.relay.backend.vm)": [[165, "tvm.relay.backend.vm.VMExecutor", false]], "vminstrumentreturnkind (class in tvm.relax)": [[162, "tvm.relax.VMInstrumentReturnKind", false]], "vminstrumentreturnkind (class in tvm.runtime.relax_vm)": [[178, "tvm.runtime.relax_vm.VMInstrumentReturnKind", false]], "vmshapelower() (in module tvm.relax.transform)": [[163, "tvm.relax.transform.VMShapeLower", false]], "vpi() (in module tvm.runtime.ndarray)": [[176, "tvm.runtime.ndarray.vpi", false]], "vscale() (in module tvm.tir)": [[185, "tvm.tir.vscale", false]], "vstore() (tvm.tir.buffer method)": [[185, "tvm.tir.Buffer.vstore", false]], "vulkan() (in module tvm.runtime.ndarray)": [[176, "tvm.runtime.ndarray.vulkan", false]], "vulkan() (tvm.rpc.rpcsession method)": [[174, "tvm.rpc.RPCSession.vulkan", false]], "war (tvm.tir.schedule.depkind attribute)": [[183, "tvm.tir.schedule.DepKind.WAR", false]], "waw (tvm.tir.schedule.depkind attribute)": [[183, "tvm.tir.schedule.DepKind.WAW", false]], "webgpu() (in module tvm.runtime.ndarray)": [[176, "tvm.runtime.ndarray.webgpu", false]], "webgpu() (tvm.rpc.rpcsession method)": [[174, "tvm.rpc.RPCSession.webgpu", false]], "well_formed() (in module tvm.relax.analysis)": [[158, "tvm.relax.analysis.well_formed", false]], "well_formed() (in module tvm.relay.analysis)": [[164, "tvm.relay.analysis.well_formed", false]], "where() (in module tvm.relax.op)": [[161, "tvm.relax.op.where", false]], "which() (in module tvm.contrib.utils)": [[148, "tvm.contrib.utils.which", false]], "while (class in tvm.tir)": [[185, "tvm.tir.While", false]], "width (tvm.topi.nn.workload attribute)": [[187, "tvm.topi.nn.Workload.width", false]], "wildcard() (in module tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.wildcard", false]], "wildcardpattern (class in tvm.relay.dataflow_pattern)": [[166, "tvm.relay.dataflow_pattern.WildcardPattern", false]], "winograd_transform_matrices() (in module tvm.topi.nn)": [[187, "tvm.topi.nn.winograd_transform_matrices", false]], "with_attr() (tvm.ir.basefunc method)": [[155, "tvm.ir.BaseFunc.with_attr", false]], "with_attr() (tvm.ir.irmodule method)": [[155, "tvm.ir.IRModule.with_attr", false]], "with_attrs() (tvm.ir.basefunc method)": [[155, "tvm.ir.BaseFunc.with_attrs", false]], "with_attrs() (tvm.ir.irmodule method)": [[155, "tvm.ir.IRModule.with_attrs", false]], "with_body() (tvm.tir.primfunc method)": [[185, "tvm.tir.PrimFunc.with_body", false]], "with_decision() (tvm.tir.schedule.trace method)": [[183, "tvm.tir.schedule.Trace.with_decision", false]], "with_minrpc() (in module tvm.rpc)": [[174, "tvm.rpc.with_minrpc", false]], "with_struct_info() (tvm.relax.pyexprmutator method)": [[162, "tvm.relax.PyExprMutator.with_struct_info", false]], "without_attr() (tvm.ir.basefunc method)": [[155, "tvm.ir.BaseFunc.without_attr", false]], "without_attr() (tvm.ir.irmodule method)": [[155, "tvm.ir.IRModule.without_attr", false]], "work_on() (tvm.tir.schedule.schedule method)": [[183, "tvm.tir.schedule.Schedule.work_on", false]], "workload (class in tvm.topi.nn)": [[187, "tvm.topi.nn.Workload", false]], "workload_key() (tvm.auto_scheduler.computedag method)": [[146, "tvm.auto_scheduler.ComputeDAG.workload_key", false]], "workspacememorypools (class in tvm.ir)": [[155, "tvm.ir.WorkspaceMemoryPools", false]], "workspacepoolinfo (class in tvm.ir)": [[155, "tvm.ir.WorkspacePoolInfo", false]], "wrap_param() (in module tvm.relax.op)": [[161, "tvm.relax.op.wrap_param", false]], "write() (tvm.micro.transportlogger method)": [[157, "tvm.micro.TransportLogger.write", false]], "xcrun() (in module tvm.contrib.xcode)": [[148, "tvm.contrib.xcode.xcrun", false]], "xgbmodel (class in tvm.auto_scheduler)": [[146, "tvm.auto_scheduler.XGBModel", false]], "xgbtuner (class in tvm.autotvm.tuner)": [[147, "tvm.autotvm.tuner.XGBTuner", false]], "yolo_reorg() (in module tvm.relay.vision)": [[173, "tvm.relay.vision.yolo_reorg", false]], "zeros() (in module tvm.relax.op)": [[161, "tvm.relax.op.zeros", false]], "zeros_like() (in module tvm.relax.op)": [[161, "tvm.relax.op.zeros_like", false]]}, "objects": {"tvm": [[146, 0, 0, "-", "auto_scheduler"], [147, 0, 0, "-", "autotvm"], [150, 3, 1, "", "build"], [148, 0, 0, "-", "contrib"], [149, 0, 0, "-", "dlight"], [150, 0, 0, "-", "driver"], [151, 0, 0, "-", "error"], [154, 0, 0, "-", "instrument"], [155, 0, 0, "-", "ir"], [150, 3, 1, "", "lower"], [156, 0, 0, "-", "meta_schedule"], [157, 0, 0, "-", "micro"], [162, 0, 0, "-", "relax"], [174, 0, 0, "-", "rpc"], [179, 0, 0, "-", "runtime"], [180, 0, 0, "-", "target"], [181, 0, 0, "-", "te"], [185, 0, 0, "-", "tir"], [188, 0, 0, "-", "transform"]], "tvm.auto_scheduler": [[146, 1, 1, "", "ApplyHistoryBest"], [146, 1, 1, "", "ApplyHistoryBestOrSample"], [146, 1, 1, "", "ComputeDAG"], [146, 1, 1, "", "DispatchContext"], [146, 1, 1, "", "EmptyPolicy"], [146, 1, 1, "", "HardwareParams"], [146, 1, 1, "", "LayoutRewriteOption"], [146, 1, 1, "", "LocalBuilder"], [146, 1, 1, "", "LocalRPCMeasureContext"], [146, 1, 1, "", "LocalRunner"], [146, 1, 1, "", "MeasureInput"], [146, 1, 1, "", "MeasureResult"], [146, 1, 1, "", "PreloadCustomSketchRule"], [146, 1, 1, "", "PreloadMeasuredStates"], [146, 1, 1, "", "RPCRunner"], [146, 1, 1, "", "RandomModel"], [146, 1, 1, "", "RecordReader"], [146, 1, 1, "", "RecordToFile"], [146, 1, 1, "", "SearchTask"], [146, 1, 1, "", "SketchPolicy"], [146, 1, 1, "", "TaskScheduler"], [146, 1, 1, "", "TuningOptions"], [146, 1, 1, "", "XGBModel"], [146, 3, 1, "", "auto_schedule"], [146, 3, 1, "", "create_task"], [146, 3, 1, "", "extract_tasks"], [146, 3, 1, "", "get_shape_from_rewritten_layout"], [146, 3, 1, "", "is_auto_scheduler_enabled"], [146, 3, 1, "", "load_best_record"], [146, 3, 1, "", "load_records"], [146, 3, 1, "", "make_workload_key"], [146, 3, 1, "", "register_task_input_check_func"], [146, 3, 1, "", "register_workload"], [146, 3, 1, "", "remove_index_check"], [146, 3, 1, "", "rewrite_compute_body"], [146, 3, 1, "", "rewrite_tensor_shape"], [146, 3, 1, "", "save_records"]], "tvm.auto_scheduler.ApplyHistoryBest": [[146, 2, 1, "", "get_workload_entry"], [146, 2, 1, "", "load"], [146, 2, 1, "", "update"]], "tvm.auto_scheduler.ApplyHistoryBestOrSample": [[146, 2, 1, "", "query"]], "tvm.auto_scheduler.ComputeDAG": [[146, 2, 1, "", "apply_steps_from_state"], [146, 2, 1, "", "get_init_state"], [146, 2, 1, "", "infer_bound_from_state"], [146, 2, 1, "", "print_python_code_from_state"], [146, 2, 1, "", "rewrite_layout_from_state"], [146, 2, 1, "", "workload_key"]], "tvm.auto_scheduler.DispatchContext": [[146, 2, 1, "", "query"], [146, 2, 1, "", "update"]], "tvm.auto_scheduler.LayoutRewriteOption": [[146, 2, 1, "", "get_target_default"]], "tvm.auto_scheduler.MeasureInput": [[146, 2, 1, "", "serialize"]], "tvm.auto_scheduler.RandomModel": [[146, 2, 1, "", "predict"], [146, 2, 1, "", "update"]], "tvm.auto_scheduler.RecordReader": [[146, 2, 1, "", "check_workload_key"], [146, 2, 1, "", "read_lines"]], "tvm.auto_scheduler.SearchTask": [[146, 2, 1, "", "apply_best"], [146, 2, 1, "", "print_best"], [146, 2, 1, "", "tune"]], "tvm.auto_scheduler.SketchPolicy": [[146, 2, 1, "", "evolutionary_search"], [146, 2, 1, "", "generate_sketches"], [146, 2, 1, "", "sample_initial_population"]], "tvm.auto_scheduler.TaskScheduler": [[146, 2, 1, "", "tune"]], "tvm.auto_scheduler.XGBModel": [[146, 2, 1, "", "load"], [146, 2, 1, "", "predict"], [146, 2, 1, "", "predict_stages"], [146, 2, 1, "", "save"], [146, 2, 1, "", "update"], [146, 2, 1, "", "update_from_file"]], "tvm.autotvm": [[147, 3, 1, "", "apply_history_best"], [147, 0, 0, "-", "record"], [147, 0, 0, "-", "task"], [147, 0, 0, "-", "tuner"]], "tvm.autotvm.measure": [[147, 1, 1, "", "MeasureInput"], [147, 1, 1, "", "MeasureResult"], [147, 3, 1, "", "create_measure_batch"], [147, 0, 0, "-", "measure"], [147, 3, 1, "", "measure_option"]], "tvm.autotvm.measure.measure_methods": [[147, 1, 1, "", "LocalBuilder"], [147, 1, 1, "", "LocalRunner"], [147, 1, 1, "", "RPCRunner"]], "tvm.autotvm.record": [[147, 3, 1, "", "decode"], [147, 3, 1, "", "encode"], [147, 3, 1, "", "load_from_buffer"], [147, 3, 1, "", "load_from_file"], [147, 3, 1, "", "measure_str_key"], [147, 3, 1, "", "pick_best"], [147, 3, 1, "", "split_workload"]], "tvm.autotvm.task": [[147, 0, 0, "-", "dispatcher"], [147, 0, 0, "-", "space"], [147, 0, 0, "-", "task"], [147, 0, 0, "-", "topi_integration"]], "tvm.autotvm.task.dispatcher": [[147, 1, 1, "", "ApplyConfig"], [147, 1, 1, "", "ApplyFixedConfig"], [147, 1, 1, "", "ApplyGraphBest"], [147, 1, 1, "", "ApplyHistoryBest"], [147, 1, 1, "", "DispatchContext"], [147, 1, 1, "", "FallbackContext"], [147, 3, 1, "", "clear_fallback_cache"]], "tvm.autotvm.task.dispatcher.ApplyConfig": [[147, 2, 1, "", "update"]], "tvm.autotvm.task.dispatcher.ApplyFixedConfig": [[147, 2, 1, "", "update"]], "tvm.autotvm.task.dispatcher.ApplyGraphBest": [[147, 2, 1, "", "update"]], "tvm.autotvm.task.dispatcher.ApplyHistoryBest": [[147, 2, 1, "", "load"], [147, 2, 1, "", "update"]], "tvm.autotvm.task.dispatcher.DispatchContext": [[147, 2, 1, "", "query"], [147, 2, 1, "", "update"]], "tvm.autotvm.task.dispatcher.FallbackContext": [[147, 2, 1, "", "clear_cache"], [147, 2, 1, "", "update"]], "tvm.autotvm.task.space": [[147, 1, 1, "", "AnnotateEntity"], [147, 1, 1, "", "AnnotateSpace"], [147, 1, 1, "", "Axis"], [147, 1, 1, "", "ConfigEntity"], [147, 1, 1, "", "ConfigSpace"], [147, 1, 1, "", "FallbackConfigEntity"], [147, 6, 1, "", "InstantiationError"], [147, 1, 1, "", "OtherOptionEntity"], [147, 1, 1, "", "OtherOptionSpace"], [147, 1, 1, "", "ReorderEntity"], [147, 1, 1, "", "ReorderSpace"], [147, 1, 1, "", "SplitEntity"], [147, 1, 1, "", "SplitSpace"], [147, 1, 1, "", "TransformSpace"], [147, 1, 1, "", "VirtualAxis"], [147, 3, 1, "", "get_factors"], [147, 3, 1, "", "get_pow2s"]], "tvm.autotvm.task.space.AnnotateEntity": [[147, 2, 1, "", "apply"]], "tvm.autotvm.task.space.AnnotateSpace": [[147, 2, 1, "", "get_num_output"]], "tvm.autotvm.task.space.Axis": [[147, 4, 1, "", "index"], [147, 4, 1, "", "space"]], "tvm.autotvm.task.space.ConfigEntity": [[147, 2, 1, "", "from_json_dict"], [147, 2, 1, "", "get_flatten_feature"], [147, 2, 1, "", "get_other_option"], [147, 2, 1, "", "to_json_dict"]], "tvm.autotvm.task.space.ConfigSpace": [[147, 2, 1, "", "add_flop"], [147, 2, 1, "", "axis"], [147, 2, 1, "", "clear_cache"], [147, 2, 1, "", "define_annotate"], [147, 2, 1, "", "define_knob"], [147, 2, 1, "", "define_reorder"], [147, 2, 1, "", "define_split"], [147, 5, 1, "", "dims"], [147, 2, 1, "", "get"], [147, 2, 1, "", "get_next_index"], [147, 2, 1, "", "get_rand_index"], [147, 2, 1, "", "is_index_valid"], [147, 2, 1, "", "knob2point"], [147, 2, 1, "", "multi_filter"], [147, 2, 1, "", "point2knob"], [147, 2, 1, "", "raise_error"], [147, 2, 1, "", "random_walk"], [147, 5, 1, "", "range_length"], [147, 2, 1, "", "reduce_axis"], [147, 2, 1, "", "sample_ints"], [147, 2, 1, "", "subrange_length"], [147, 2, 1, "", "valid"]], "tvm.autotvm.task.space.FallbackConfigEntity": [[147, 2, 1, "", "fallback_split"], [147, 2, 1, "", "fallback_with_reference_log"]], "tvm.autotvm.task.space.OtherOptionSpace": [[147, 2, 1, "", "get_num_output"]], "tvm.autotvm.task.space.ReorderEntity": [[147, 2, 1, "", "apply"]], "tvm.autotvm.task.space.ReorderSpace": [[147, 2, 1, "", "get_num_output"]], "tvm.autotvm.task.space.SplitEntity": [[147, 2, 1, "", "apply"]], "tvm.autotvm.task.space.SplitSpace": [[147, 2, 1, "", "get_num_output"]], "tvm.autotvm.task.space.TransformSpace": [[147, 2, 1, "", "get_num_output"]], "tvm.autotvm.task.space.VirtualAxis": [[147, 2, 1, "", "get_num_output"]], "tvm.autotvm.task.task": [[147, 6, 1, "", "FlopCalculationError"], [147, 1, 1, "", "MissingTask"], [147, 1, 1, "", "Task"], [147, 1, 1, "", "TaskTemplate"], [147, 3, 1, "", "args_to_workload"], [147, 3, 1, "", "compute_flop"], [147, 3, 1, "", "create"], [147, 3, 1, "", "deserialize_args"], [147, 3, 1, "", "get_config"], [147, 3, 1, "", "serialize_args"], [147, 3, 1, "", "template"]], "tvm.autotvm.task.task.Task": [[147, 2, 1, "", "instantiate"]], "tvm.autotvm.task.topi_integration": [[147, 1, 1, "", "TaskExtractEnv"], [147, 3, 1, "", "get_workload"], [147, 3, 1, "", "register_topi_compute"], [147, 3, 1, "", "register_topi_schedule"]], "tvm.autotvm.task.topi_integration.TaskExtractEnv": [[147, 2, 1, "", "add_task"], [147, 2, 1, "", "get"], [147, 2, 1, "", "get_tasks"], [147, 2, 1, "", "reset"]], "tvm.autotvm.tuner": [[147, 1, 1, "", "GATuner"], [147, 1, 1, "", "GridSearchTuner"], [147, 1, 1, "", "RandomTuner"], [147, 1, 1, "", "Tuner"], [147, 1, 1, "", "XGBTuner"], [147, 0, 0, "-", "callback"]], "tvm.autotvm.tuner.GATuner": [[147, 2, 1, "", "has_next"], [147, 2, 1, "", "load_history"], [147, 2, 1, "", "next_batch"], [147, 2, 1, "", "reset"], [147, 2, 1, "", "set_error_threshold"], [147, 2, 1, "", "tune"], [147, 2, 1, "", "update"]], "tvm.autotvm.tuner.GridSearchTuner": [[147, 2, 1, "", "has_next"], [147, 2, 1, "", "load_history"], [147, 2, 1, "", "next_batch"], [147, 2, 1, "", "reset"], [147, 2, 1, "", "set_error_threshold"], [147, 2, 1, "", "tune"], [147, 2, 1, "", "update"]], "tvm.autotvm.tuner.RandomTuner": [[147, 2, 1, "", "has_next"], [147, 2, 1, "", "load_history"], [147, 2, 1, "", "next_batch"], [147, 2, 1, "", "reset"], [147, 2, 1, "", "set_error_threshold"], [147, 2, 1, "", "tune"], [147, 2, 1, "", "update"]], "tvm.autotvm.tuner.Tuner": [[147, 2, 1, "", "has_next"], [147, 2, 1, "", "load_history"], [147, 2, 1, "", "next_batch"], [147, 2, 1, "", "reset"], [147, 2, 1, "", "set_error_threshold"], [147, 2, 1, "", "tune"], [147, 2, 1, "", "update"]], "tvm.autotvm.tuner.XGBTuner": [[147, 2, 1, "", "has_next"], [147, 2, 1, "", "load_history"], [147, 2, 1, "", "next_batch"], [147, 2, 1, "", "reset"], [147, 2, 1, "", "set_error_threshold"], [147, 2, 1, "", "tune"], [147, 2, 1, "", "update"]], "tvm.autotvm.tuner.callback": [[147, 1, 1, "", "Monitor"], [147, 3, 1, "", "log_to_database"], [147, 3, 1, "", "log_to_file"], [147, 3, 1, "", "progress_bar"]], "tvm.autotvm.tuner.callback.Monitor": [[147, 2, 1, "", "trial_scores"], [147, 2, 1, "", "trial_timestamps"]], "tvm.contrib": [[148, 0, 0, "-", "cblas"], [148, 0, 0, "-", "cc"], [148, 0, 0, "-", "clang"], [148, 0, 0, "-", "cublas"], [148, 0, 0, "-", "dlpack"], [148, 0, 0, "-", "emcc"], [152, 0, 0, "-", "graph_executor"], [148, 0, 0, "-", "miopen"], [148, 0, 0, "-", "mxnet"], [148, 0, 0, "-", "ndk"], [148, 0, 0, "-", "nnpack"], [148, 0, 0, "-", "nvcc"], [148, 0, 0, "-", "pickle_memoize"], [148, 0, 0, "-", "random"], [148, 0, 0, "-", "relay_viz"], [148, 0, 0, "-", "rocblas"], [148, 0, 0, "-", "rocm"], [148, 0, 0, "-", "sparse"], [148, 0, 0, "-", "spirv"], [148, 0, 0, "-", "tar"], [148, 0, 0, "-", "utils"], [148, 0, 0, "-", "xcode"]], "tvm.contrib.cblas": [[148, 3, 1, "", "batch_matmul"], [148, 3, 1, "", "matmul"]], "tvm.contrib.cc": [[148, 3, 1, "", "create_executable"], [148, 3, 1, "", "create_shared"], [148, 3, 1, "", "create_staticlib"], [148, 3, 1, "", "cross_compiler"], [148, 3, 1, "", "get_cc"], [148, 3, 1, "", "get_global_symbol_section_map"], [148, 3, 1, "", "get_target_by_dump_machine"]], "tvm.contrib.clang": [[148, 3, 1, "", "create_llvm"], [148, 3, 1, "", "find_clang"]], "tvm.contrib.cublas": [[148, 3, 1, "", "batch_matmul"], [148, 3, 1, "", "matmul"]], "tvm.contrib.dlpack": [[148, 3, 1, "", "convert_func"], [148, 3, 1, "", "to_pytorch_func"]], "tvm.contrib.emcc": [[148, 3, 1, "", "create_tvmjs_wasm"]], "tvm.contrib.graph_executor": [[152, 1, 1, "", "GraphModule"], [152, 3, 1, "", "create"], [152, 3, 1, "", "get_device"]], "tvm.contrib.graph_executor.GraphModule": [[152, 2, 1, "", "benchmark"], [152, 2, 1, "", "debug_get_output"], [152, 2, 1, "", "get_input"], [152, 2, 1, "", "get_input_index"], [152, 2, 1, "", "get_input_info"], [152, 2, 1, "", "get_num_inputs"], [152, 2, 1, "", "get_num_outputs"], [152, 2, 1, "", "get_output"], [152, 2, 1, "", "load_params"], [152, 4, 1, "", "module"], [152, 2, 1, "", "run"], [152, 2, 1, "", "set_input"], [152, 2, 1, "", "set_input_zero_copy"], [152, 2, 1, "", "set_output_zero_copy"], [152, 2, 1, "", "share_params"]], "tvm.contrib.miopen": [[148, 3, 1, "", "conv2d_forward"], [148, 3, 1, "", "log_softmax"], [148, 3, 1, "", "softmax"]], "tvm.contrib.mxnet": [[148, 3, 1, "", "to_mxnet_func"]], "tvm.contrib.ndk": [[148, 3, 1, "", "create_shared"], [148, 3, 1, "", "create_staticlib"], [148, 3, 1, "", "get_global_symbol_section_map"]], "tvm.contrib.nnpack": [[148, 3, 1, "", "convolution_inference"], [148, 3, 1, "", "convolution_inference_weight_transform"], [148, 3, 1, "", "convolution_inference_without_weight_transform"], [148, 3, 1, "", "fully_connected_inference"], [148, 3, 1, "", "is_available"]], "tvm.contrib.nvcc": [[148, 3, 1, "", "compile_cuda"], [148, 3, 1, "", "find_cuda_path"], [148, 3, 1, "", "get_cuda_version"], [148, 3, 1, "", "have_cudagraph"], [148, 3, 1, "", "have_fp16"], [148, 3, 1, "", "have_int8"], [148, 3, 1, "", "have_tensorcore"], [148, 3, 1, "", "parse_compute_version"]], "tvm.contrib.pickle_memoize": [[148, 1, 1, "", "Cache"], [148, 3, 1, "", "memoize"]], "tvm.contrib.pickle_memoize.Cache": [[148, 5, 1, "", "cache"]], "tvm.contrib.random": [[148, 3, 1, "", "normal"], [148, 3, 1, "", "randint"], [148, 3, 1, "", "uniform"]], "tvm.contrib.relay_viz": [[148, 1, 1, "", "RelayVisualizer"], [148, 0, 0, "-", "dot"], [148, 0, 0, "-", "interface"], [148, 0, 0, "-", "terminal"]], "tvm.contrib.relay_viz.dot": [[148, 1, 1, "", "DotGraph"], [148, 1, 1, "", "DotPlotter"]], "tvm.contrib.relay_viz.dot.DotGraph": [[148, 2, 1, "", "edge"], [148, 2, 1, "", "node"]], "tvm.contrib.relay_viz.dot.DotPlotter": [[148, 2, 1, "", "create_graph"], [148, 2, 1, "", "render"]], "tvm.contrib.relay_viz.interface": [[148, 1, 1, "", "DefaultVizParser"], [148, 1, 1, "", "Plotter"], [148, 1, 1, "", "VizEdge"], [148, 1, 1, "", "VizGraph"], [148, 1, 1, "", "VizNode"], [148, 1, 1, "", "VizParser"]], "tvm.contrib.relay_viz.interface.DefaultVizParser": [[148, 2, 1, "", "get_node_edges"]], "tvm.contrib.relay_viz.interface.Plotter": [[148, 2, 1, "", "create_graph"], [148, 2, 1, "", "render"]], "tvm.contrib.relay_viz.interface.VizGraph": [[148, 2, 1, "", "edge"], [148, 2, 1, "", "node"]], "tvm.contrib.relay_viz.interface.VizParser": [[148, 2, 1, "", "get_node_edges"]], "tvm.contrib.relay_viz.terminal": [[148, 1, 1, "", "TermGraph"], [148, 1, 1, "", "TermNode"], [148, 1, 1, "", "TermPlotter"], [148, 1, 1, "", "TermVizParser"]], "tvm.contrib.relay_viz.terminal.TermGraph": [[148, 2, 1, "", "edge"], [148, 2, 1, "", "node"], [148, 2, 1, "", "render"]], "tvm.contrib.relay_viz.terminal.TermPlotter": [[148, 2, 1, "", "create_graph"], [148, 2, 1, "", "render"]], "tvm.contrib.relay_viz.terminal.TermVizParser": [[148, 2, 1, "", "get_node_edges"]], "tvm.contrib.rocblas": [[148, 3, 1, "", "batch_matmul"], [148, 3, 1, "", "matmul"]], "tvm.contrib.rocm": [[148, 3, 1, "", "find_lld"], [148, 3, 1, "", "find_rocm_path"], [148, 3, 1, "", "have_matrixcore"], [148, 3, 1, "", "parse_compute_version"], [148, 3, 1, "", "rocm_link"]], "tvm.contrib.sparse": [[148, 1, 1, "", "CSRNDArray"], [148, 1, 1, "", "CSRPlaceholderOp"], [148, 1, 1, "", "SparsePlaceholderOp"], [148, 3, 1, "", "array"], [148, 3, 1, "", "placeholder"]], "tvm.contrib.sparse.CSRNDArray": [[148, 2, 1, "", "asnumpy"], [148, 2, 1, "", "numpy"]], "tvm.contrib.spirv": [[148, 3, 1, "", "optimize"]], "tvm.contrib.tar": [[148, 3, 1, "", "normalize_file_list_by_unpacking_tars"], [148, 3, 1, "", "tar"], [148, 3, 1, "", "untar"]], "tvm.contrib.utils": [[148, 6, 1, "", "DirectoryCreatedPastAtExit"], [148, 1, 1, "", "FileLock"], [148, 1, 1, "", "TempDirectory"], [148, 3, 1, "", "filelock"], [148, 3, 1, "", "is_source_path"], [148, 3, 1, "", "tempdir"], [148, 3, 1, "", "which"]], "tvm.contrib.utils.FileLock": [[148, 2, 1, "", "release"]], "tvm.contrib.utils.TempDirectory": [[148, 2, 1, "", "listdir"], [148, 2, 1, "", "relpath"], [148, 2, 1, "", "remove"], [148, 2, 1, "", "set_keep_for_debug"]], "tvm.contrib.xcode": [[148, 3, 1, "", "compile_coreml"], [148, 3, 1, "", "compile_metal"], [148, 3, 1, "", "create_dylib"], [148, 3, 1, "", "xcrun"]], "tvm.dlight": [[149, 1, 1, "", "ApplyDefaultSchedule"], [149, 1, 1, "", "BlockInfo"], [149, 1, 1, "", "IterInfo"], [149, 1, 1, "", "ScheduleRule"], [149, 3, 1, "", "normalize_prim_func"], [149, 3, 1, "", "try_inline"], [149, 3, 1, "", "try_inline_contiguous_spatial"]], "tvm.dlight.BlockInfo": [[149, 2, 1, "", "dom"], [149, 2, 1, "", "dom_kind"], [149, 2, 1, "", "is_elementwise"], [149, 2, 1, "", "is_gemm"], [149, 2, 1, "", "is_gemv"], [149, 2, 1, "", "is_injective"], [149, 2, 1, "", "is_reduction"]], "tvm.dlight.IterInfo": [[149, 5, 1, "", "dom"]], "tvm.dlight.ScheduleRule": [[149, 2, 1, "", "apply"], [149, 2, 1, "", "from_callable"], [149, 2, 1, "", "is_target_available"]], "tvm.error": [[151, 6, 1, "", "DiagnosticError"], [151, 6, 1, "", "InternalError"], [151, 6, 1, "", "OpAttributeInvalid"], [151, 6, 1, "", "OpAttributeRequired"], [151, 6, 1, "", "OpAttributeUnImplemented"], [151, 6, 1, "", "OpError"], [151, 6, 1, "", "OpNotImplemented"], [151, 6, 1, "", "RPCError"], [151, 6, 1, "", "RPCSessionTimeoutError"], [151, 6, 1, "", "TVMError"], [151, 3, 1, "", "register_error"]], "tvm.instrument": [[154, 1, 1, "", "PassInstrument"], [154, 1, 1, "", "PassPrintingInstrument"], [154, 1, 1, "", "PassTimingInstrument"], [154, 1, 1, "", "PrintAfterAll"], [154, 1, 1, "", "PrintBeforeAll"], [154, 3, 1, "", "pass_instrument"]], "tvm.instrument.PassInstrument": [[154, 2, 1, "", "enter_pass_ctx"], [154, 2, 1, "", "exit_pass_ctx"], [154, 2, 1, "", "run_after_pass"], [154, 2, 1, "", "run_before_pass"], [154, 2, 1, "", "should_run"]], "tvm.instrument.PassTimingInstrument": [[154, 2, 1, "", "render"]], "tvm.ir": [[155, 1, 1, "", "Array"], [155, 1, 1, "", "Attrs"], [155, 1, 1, "", "BaseExpr"], [155, 1, 1, "", "BaseFunc"], [155, 1, 1, "", "CallingConv"], [155, 1, 1, "", "ConstantMemoryPools"], [155, 1, 1, "", "ConstantPoolInfo"], [155, 1, 1, "", "Constructor"], [155, 1, 1, "", "DictAttrs"], [155, 1, 1, "", "DummyGlobalInfo"], [155, 1, 1, "", "EnvFunc"], [155, 1, 1, "", "FuncType"], [155, 1, 1, "", "GlobalInfo"], [155, 1, 1, "", "GlobalTypeVar"], [155, 1, 1, "", "GlobalVar"], [155, 1, 1, "", "IRModule"], [155, 1, 1, "", "IncompleteType"], [155, 1, 1, "", "Map"], [155, 1, 1, "", "Node"], [155, 1, 1, "", "Op"], [155, 1, 1, "", "PointerType"], [155, 1, 1, "", "PoolInfo"], [155, 1, 1, "", "PoolInfoProperties"], [155, 1, 1, "", "PrimExpr"], [155, 1, 1, "", "PrimType"], [155, 1, 1, "", "Range"], [155, 1, 1, "", "RelayExpr"], [155, 1, 1, "", "RelayRefType"], [155, 1, 1, "", "SequentialSpan"], [155, 1, 1, "", "SourceName"], [155, 1, 1, "", "Span"], [155, 1, 1, "", "TensorAffineType"], [155, 1, 1, "", "TensorType"], [155, 1, 1, "", "TupleAffineType"], [155, 1, 1, "", "TupleType"], [155, 1, 1, "", "Type"], [155, 1, 1, "", "TypeCall"], [155, 1, 1, "", "TypeConstraint"], [155, 1, 1, "", "TypeData"], [155, 1, 1, "", "TypeKind"], [155, 1, 1, "", "TypeRelation"], [155, 1, 1, "", "TypeVar"], [155, 1, 1, "", "VDevice"], [155, 1, 1, "", "WorkspaceMemoryPools"], [155, 1, 1, "", "WorkspacePoolInfo"], [155, 3, 1, "", "assert_structural_equal"], [155, 3, 1, "", "load_json"], [155, 3, 1, "", "make_node"], [155, 3, 1, "", "register_intrin_lowering"], [155, 3, 1, "", "register_op_attr"], [155, 3, 1, "", "save_json"], [155, 3, 1, "", "structural_equal"], [155, 3, 1, "", "structural_hash"]], "tvm.ir.Attrs": [[155, 2, 1, "", "get_int"], [155, 2, 1, "", "get_int_tuple"], [155, 2, 1, "", "get_str"], [155, 2, 1, "", "keys"], [155, 2, 1, "", "list_field_info"]], "tvm.ir.BaseFunc": [[155, 5, 1, "", "attrs"], [155, 2, 1, "", "with_attr"], [155, 2, 1, "", "with_attrs"], [155, 2, 1, "", "without_attr"]], "tvm.ir.DictAttrs": [[155, 2, 1, "", "get"], [155, 2, 1, "", "items"], [155, 2, 1, "", "keys"]], "tvm.ir.EnvFunc": [[155, 2, 1, "", "get"]], "tvm.ir.GlobalInfo": [[155, 2, 1, "", "same_as"]], "tvm.ir.GlobalVar": [[155, 2, 1, "", "astext"]], "tvm.ir.IRModule": [[155, 2, 1, "", "astext"], [155, 2, 1, "", "from_expr"], [155, 2, 1, "", "functions_items"], [155, 2, 1, "", "get_attr"], [155, 2, 1, "", "get_constructor"], [155, 2, 1, "", "get_global_type_var"], [155, 2, 1, "", "get_global_type_vars"], [155, 2, 1, "", "get_global_var"], [155, 2, 1, "", "get_global_vars"], [155, 2, 1, "", "replace_global_vars"], [155, 2, 1, "", "update"], [155, 2, 1, "", "update_func"], [155, 2, 1, "", "update_global_info"], [155, 2, 1, "", "with_attr"], [155, 2, 1, "", "with_attrs"], [155, 2, 1, "", "without_attr"]], "tvm.ir.Map": [[155, 2, 1, "", "get"], [155, 2, 1, "", "items"]], "tvm.ir.Op": [[155, 2, 1, "", "add_argument"], [155, 2, 1, "", "add_type_rel"], [155, 2, 1, "", "astext"], [155, 2, 1, "", "get"], [155, 2, 1, "", "get_attr"], [155, 2, 1, "", "has_attr"], [155, 2, 1, "", "list_op_names"], [155, 2, 1, "", "reset_attr"], [155, 2, 1, "", "set_attr"], [155, 2, 1, "", "set_attrs_type_key"], [155, 2, 1, "", "set_num_inputs"], [155, 2, 1, "", "set_support_level"]], "tvm.ir.Range": [[155, 2, 1, "", "from_min_extent"]], "tvm.ir.RelayExpr": [[155, 5, 1, "", "checked_type"], [155, 5, 1, "", "struct_info"]], "tvm.ir.TensorType": [[155, 5, 1, "", "concrete_shape"]], "tvm.ir.Type": [[155, 2, 1, "", "same_as"]], "tvm.meta_schedule": [[156, 1, 1, "", "Builder"], [156, 1, 1, "", "CostModel"], [156, 1, 1, "", "Database"], [156, 1, 1, "", "ExtractedTask"], [156, 1, 1, "", "FeatureExtractor"], [156, 1, 1, "", "MeasureCallback"], [156, 1, 1, "", "MeasureCandidate"], [156, 1, 1, "", "Mutator"], [156, 1, 1, "", "Postproc"], [156, 1, 1, "", "Profiler"], [156, 1, 1, "", "Runner"], [156, 1, 1, "", "ScheduleRule"], [156, 1, 1, "", "SearchStrategy"], [156, 1, 1, "", "SpaceGenerator"], [156, 1, 1, "", "TaskScheduler"], [156, 1, 1, "", "TuneContext"], [156, 3, 1, "", "derived_object"], [156, 3, 1, "", "is_meta_schedule_enabled"], [156, 3, 1, "", "tune_tasks"], [156, 3, 1, "", "tune_tir"]], "tvm.meta_schedule.Builder": [[156, 2, 1, "", "build"], [156, 2, 1, "", "create"]], "tvm.meta_schedule.CostModel": [[156, 2, 1, "", "create"], [156, 2, 1, "", "load"], [156, 2, 1, "", "predict"], [156, 2, 1, "", "save"], [156, 2, 1, "", "update"]], "tvm.meta_schedule.Database": [[156, 2, 1, "", "commit_tuning_record"], [156, 2, 1, "", "commit_workload"], [156, 2, 1, "", "create"], [156, 2, 1, "", "current"], [156, 2, 1, "", "dump_pruned"], [156, 2, 1, "", "get_all_tuning_records"], [156, 2, 1, "", "get_top_k"], [156, 2, 1, "", "has_workload"], [156, 2, 1, "", "query"], [156, 2, 1, "", "query_ir_module"], [156, 2, 1, "", "query_schedule"], [156, 2, 1, "", "query_tuning_record"]], "tvm.meta_schedule.FeatureExtractor": [[156, 2, 1, "", "create"], [156, 2, 1, "", "extract_from"]], "tvm.meta_schedule.MeasureCallback": [[156, 2, 1, "", "apply"], [156, 2, 1, "", "create"]], "tvm.meta_schedule.Mutator": [[156, 2, 1, "", "apply"], [156, 2, 1, "", "clone"], [156, 2, 1, "", "create"]], "tvm.meta_schedule.Postproc": [[156, 2, 1, "", "apply"], [156, 2, 1, "", "clone"], [156, 2, 1, "", "create"]], "tvm.meta_schedule.Profiler": [[156, 2, 1, "", "current"], [156, 2, 1, "", "get"], [156, 2, 1, "", "table"], [156, 2, 1, "", "timeit"]], "tvm.meta_schedule.Runner": [[156, 2, 1, "", "create"], [156, 2, 1, "", "run"]], "tvm.meta_schedule.ScheduleRule": [[156, 2, 1, "", "apply"], [156, 2, 1, "", "clone"], [156, 2, 1, "", "create"]], "tvm.meta_schedule.SearchStrategy": [[156, 2, 1, "", "clone"], [156, 2, 1, "", "create"], [156, 2, 1, "", "generate_measure_candidates"], [156, 2, 1, "", "notify_runner_results"], [156, 2, 1, "", "post_tuning"], [156, 2, 1, "", "pre_tuning"]], "tvm.meta_schedule.SpaceGenerator": [[156, 2, 1, "", "clone"], [156, 2, 1, "", "create"], [156, 2, 1, "", "generate_design_space"]], "tvm.meta_schedule.TaskScheduler": [[156, 2, 1, "", "create"], [156, 2, 1, "", "join_running_task"], [156, 2, 1, "", "next_task_id"], [156, 2, 1, "", "print_tuning_statistics"], [156, 2, 1, "", "terminate_task"], [156, 2, 1, "", "touch_task"], [156, 2, 1, "", "tune"]], "tvm.meta_schedule.TuneContext": [[156, 2, 1, "", "clone"], [156, 2, 1, "", "generate_design_space"], [156, 2, 1, "", "generate_measure_candidates"], [156, 2, 1, "", "notify_runner_results"], [156, 2, 1, "", "post_tuning"], [156, 2, 1, "", "pre_tuning"]], "tvm.micro": [[157, 1, 1, "", "AutoTvmModuleLoader"], [157, 1, 1, "", "GeneratedProject"], [157, 1, 1, "", "Session"], [157, 6, 1, "", "SessionTerminatedError"], [157, 1, 1, "", "TemplateProject"], [157, 1, 1, "", "TransportLogger"], [157, 6, 1, "", "UnsupportedInModelLibraryFormatError"], [157, 3, 1, "", "autotvm_build_func"], [157, 3, 1, "", "copy_crt_config_header"], [157, 3, 1, "", "create_local_aot_executor"], [157, 3, 1, "", "create_local_debug_executor"], [157, 3, 1, "", "create_local_graph_executor"], [157, 3, 1, "", "export_model_library_format"], [157, 3, 1, "", "generate_project"], [157, 3, 1, "", "get_microtvm_template_projects"], [157, 3, 1, "", "get_standalone_crt_dir"]], "tvm.micro.TemplateProject": [[157, 2, 1, "", "generate_project"], [157, 2, 1, "", "generate_project_from_mlf"]], "tvm.micro.TransportLogger": [[157, 2, 1, "", "close"], [157, 2, 1, "", "open"], [157, 2, 1, "", "read"], [157, 2, 1, "", "timeouts"], [157, 2, 1, "", "write"]], "tvm.relax": [[162, 1, 1, "", "Binding"], [162, 1, 1, "", "BindingBlock"], [162, 1, 1, "", "Call"], [162, 1, 1, "", "Constant"], [162, 1, 1, "", "DataTypeImm"], [162, 1, 1, "", "DataflowBlock"], [162, 1, 1, "", "DataflowBlockRewrite"], [162, 1, 1, "", "DataflowVar"], [162, 1, 1, "", "DynTensorType"], [162, 1, 1, "", "ExecBuilder"], [162, 1, 1, "", "Executable"], [162, 4, 1, "", "Expr"], [162, 1, 1, "", "ExprFunctor"], [162, 1, 1, "", "ExternFunc"], [162, 1, 1, "", "FuncStructInfo"], [162, 1, 1, "", "Function"], [162, 1, 1, "", "Id"], [162, 1, 1, "", "If"], [162, 1, 1, "", "MatchCast"], [162, 1, 1, "", "ObjectStructInfo"], [162, 1, 1, "", "ObjectType"], [162, 1, 1, "", "PackedFuncType"], [162, 1, 1, "", "PrimStructInfo"], [162, 1, 1, "", "PrimValue"], [162, 1, 1, "", "PyExprMutator"], [162, 1, 1, "", "PyExprVisitor"], [162, 1, 1, "", "SeqExpr"], [162, 1, 1, "", "ShapeExpr"], [162, 1, 1, "", "ShapeStructInfo"], [162, 1, 1, "", "ShapeType"], [162, 1, 1, "", "StringImm"], [162, 1, 1, "", "StructInfo"], [162, 1, 1, "", "TensorStructInfo"], [162, 1, 1, "", "Tuple"], [162, 1, 1, "", "TupleGetItem"], [162, 1, 1, "", "TupleStructInfo"], [162, 1, 1, "", "VMInstrumentReturnKind"], [162, 1, 1, "", "Var"], [162, 1, 1, "", "VarBinding"], [162, 1, 1, "", "VirtualMachine"], [158, 0, 0, "-", "analysis"], [159, 0, 0, "-", "block_builder"], [162, 3, 1, "", "build"], [162, 3, 1, "", "call_dps_packed"], [162, 3, 1, "", "call_pure_packed"], [162, 3, 1, "", "call_tir"], [162, 3, 1, "", "call_tir_inplace"], [162, 3, 1, "", "call_tir_with_grad"], [162, 3, 1, "", "const"], [162, 3, 1, "", "convert_to_expr"], [162, 3, 1, "", "extern"], [160, 0, 0, "-", "frontend"], [162, 3, 1, "", "get_pipeline"], [162, 3, 1, "", "get_shape_of"], [161, 0, 0, "-", "op"], [162, 3, 1, "", "register_pipeline"], [163, 0, 0, "-", "transform"]], "tvm.relax.DataflowBlockRewrite": [[162, 2, 1, "", "add"], [162, 2, 1, "", "mutate_irmodule"], [162, 2, 1, "", "mutated_dfb"], [162, 2, 1, "", "mutated_root_fn"], [162, 2, 1, "", "remove_all_unused"], [162, 2, 1, "", "remove_unused"], [162, 2, 1, "", "replace_all_uses"]], "tvm.relax.ExecBuilder": [[162, 2, 1, "", "c"], [162, 2, 1, "", "declare_function"], [162, 2, 1, "", "emit_call"], [162, 2, 1, "", "emit_goto"], [162, 2, 1, "", "emit_if"], [162, 2, 1, "", "emit_ret"], [162, 2, 1, "", "f"], [162, 2, 1, "", "function"], [162, 2, 1, "", "get"], [162, 2, 1, "", "imm"], [162, 2, 1, "", "r"]], "tvm.relax.Executable": [[162, 2, 1, "", "as_python"], [162, 2, 1, "", "as_text"], [162, 2, 1, "", "export_library"], [162, 2, 1, "", "jit"], [162, 2, 1, "", "stats"]], "tvm.relax.ExprFunctor": [[162, 2, 1, "", "visit_expr"]], "tvm.relax.FuncStructInfo": [[162, 2, 1, "", "opaque_func"]], "tvm.relax.Function": [[162, 2, 1, "", "bind_params"], [162, 2, 1, "", "bind_symbolic_vars"], [162, 2, 1, "", "create_empty"]], "tvm.relax.PyExprMutator": [[162, 2, 1, "", "get_var_remap"], [162, 2, 1, "", "lookup_binding"], [162, 2, 1, "", "set_var_remap"], [162, 2, 1, "", "visit_binding"], [162, 2, 1, "", "visit_binding_block"], [162, 2, 1, "", "visit_binding_block_"], [162, 2, 1, "", "visit_call_"], [162, 2, 1, "", "visit_constant_"], [162, 2, 1, "", "visit_data_type_imm_"], [162, 2, 1, "", "visit_dataflow_block_"], [162, 2, 1, "", "visit_dataflow_var_"], [162, 2, 1, "", "visit_dataflow_var_def_"], [162, 2, 1, "", "visit_expr"], [162, 2, 1, "", "visit_expr_post_order"], [162, 2, 1, "", "visit_extern_func_"], [162, 2, 1, "", "visit_function_"], [162, 2, 1, "", "visit_global_var_"], [162, 2, 1, "", "visit_if_"], [162, 2, 1, "", "visit_match_cast_"], [162, 2, 1, "", "visit_op_"], [162, 2, 1, "", "visit_prim_value_"], [162, 2, 1, "", "visit_seq_expr_"], [162, 2, 1, "", "visit_shape_expr_"], [162, 2, 1, "", "visit_span"], [162, 2, 1, "", "visit_string_imm_"], [162, 2, 1, "", "visit_tuple_"], [162, 2, 1, "", "visit_tuple_getitem_"], [162, 2, 1, "", "visit_var_"], [162, 2, 1, "", "visit_var_binding_"], [162, 2, 1, "", "visit_var_def"], [162, 2, 1, "", "visit_var_def_"], [162, 2, 1, "", "visit_with_new_scope"], [162, 2, 1, "", "with_struct_info"]], "tvm.relax.PyExprVisitor": [[162, 2, 1, "", "visit_binding"], [162, 2, 1, "", "visit_binding_block"], [162, 2, 1, "", "visit_binding_block_"], [162, 2, 1, "", "visit_call_"], [162, 2, 1, "", "visit_constant_"], [162, 2, 1, "", "visit_data_type_imm_"], [162, 2, 1, "", "visit_dataflow_block_"], [162, 2, 1, "", "visit_dataflow_var_"], [162, 2, 1, "", "visit_dataflow_var_def_"], [162, 2, 1, "", "visit_expr"], [162, 2, 1, "", "visit_extern_func_"], [162, 2, 1, "", "visit_function_"], [162, 2, 1, "", "visit_global_var_"], [162, 2, 1, "", "visit_if_"], [162, 2, 1, "", "visit_match_cast_"], [162, 2, 1, "", "visit_op_"], [162, 2, 1, "", "visit_prim_value_"], [162, 2, 1, "", "visit_seq_expr_"], [162, 2, 1, "", "visit_shape_expr_"], [162, 2, 1, "", "visit_span"], [162, 2, 1, "", "visit_string_imm_"], [162, 2, 1, "", "visit_tuple_"], [162, 2, 1, "", "visit_tuple_getitem_"], [162, 2, 1, "", "visit_var_"], [162, 2, 1, "", "visit_var_binding_"], [162, 2, 1, "", "visit_var_def"], [162, 2, 1, "", "visit_var_def_"]], "tvm.relax.StructInfo": [[162, 2, 1, "", "is_base_of"], [162, 2, 1, "", "same_as"]], "tvm.relax.Var": [[162, 5, 1, "", "name_hint"]], "tvm.relax.VirtualMachine": [[162, 2, 1, "", "get_outputs"], [162, 2, 1, "", "invoke_closure"], [162, 2, 1, "", "invoke_stateful"], [162, 2, 1, "", "profile"], [162, 2, 1, "", "save_function"], [162, 2, 1, "", "set_input"], [162, 2, 1, "", "set_instrument"], [162, 2, 1, "", "time_evaluator"]], "tvm.relax.analysis": [[158, 1, 1, "", "BaseCheckResult"], [158, 3, 1, "", "all_global_vars"], [158, 3, 1, "", "all_vars"], [158, 3, 1, "", "bound_vars"], [158, 3, 1, "", "collect_non_negative_expressions"], [158, 3, 1, "", "computable_at_compile_time"], [158, 3, 1, "", "contains_impure_call"], [158, 3, 1, "", "definable_tir_vars_in_struct_info"], [158, 3, 1, "", "defined_symbolic_vars"], [158, 3, 1, "", "derive_call_ret_struct_info"], [158, 3, 1, "", "detect_recursion"], [158, 3, 1, "", "erase_to_well_defined"], [158, 3, 1, "", "estimate_memory_usage"], [158, 3, 1, "", "free_symbolic_vars"], [158, 3, 1, "", "free_vars"], [158, 3, 1, "", "get_static_type"], [158, 3, 1, "", "get_var2val"], [158, 3, 1, "", "has_reshape_pattern"], [158, 3, 1, "", "name_to_binding"], [158, 3, 1, "", "post_order_visit"], [158, 3, 1, "", "remove_all_unused"], [158, 3, 1, "", "struct_info_base_check"], [158, 3, 1, "", "struct_info_lca"], [158, 3, 1, "", "suggest_layout_transforms"], [158, 3, 1, "", "tir_vars_in_struct_info"], [158, 3, 1, "", "udchain"], [158, 3, 1, "", "well_formed"]], "tvm.relax.block_builder": [[159, 1, 1, "", "BlockBuilder"], [159, 1, 1, "", "DataflowScope"], [159, 1, 1, "", "FunctionScope"], [159, 1, 1, "", "TestingScope"]], "tvm.relax.block_builder.BlockBuilder": [[159, 2, 1, "", "add_func"], [159, 2, 1, "", "begin_scope"], [159, 2, 1, "", "call_te"], [159, 2, 1, "", "call_te_with_grad"], [159, 2, 1, "", "current"], [159, 2, 1, "", "current_block_is_dataflow"], [159, 2, 1, "", "dataflow"], [159, 2, 1, "", "emit"], [159, 2, 1, "", "emit_func_output"], [159, 2, 1, "", "emit_normalized"], [159, 2, 1, "", "emit_output"], [159, 2, 1, "", "emit_te"], [159, 2, 1, "", "end_scope"], [159, 2, 1, "", "finalize"], [159, 2, 1, "", "function"], [159, 2, 1, "", "get"], [159, 2, 1, "", "get_unique_name"], [159, 2, 1, "", "lookup_binding"], [159, 2, 1, "", "match_cast"], [159, 2, 1, "", "normalize"], [159, 2, 1, "", "testing_scope"], [159, 2, 1, "", "update_func"]], "tvm.relax.frontend": [[160, 3, 1, "", "detach_params"], [160, 0, 0, "-", "onnx"], [160, 0, 0, "-", "stablehlo"], [160, 0, 0, "-", "torch"]], "tvm.relax.frontend.onnx": [[160, 3, 1, "", "from_onnx"]], "tvm.relax.frontend.stablehlo": [[160, 3, 1, "", "from_stablehlo"]], "tvm.relax.frontend.torch": [[160, 3, 1, "", "dynamo_capture_subgraphs"], [160, 3, 1, "", "from_exported_program"], [160, 3, 1, "", "from_fx"], [160, 3, 1, "", "relax_dynamo"]], "tvm.relax.op": [[161, 3, 1, "", "abs"], [161, 3, 1, "", "acos"], [161, 3, 1, "", "acosh"], [161, 3, 1, "", "add"], [161, 3, 1, "", "arange"], [161, 3, 1, "", "argmax"], [161, 3, 1, "", "argmin"], [161, 3, 1, "", "argsort"], [161, 3, 1, "", "asin"], [161, 3, 1, "", "asinh"], [161, 3, 1, "", "assert_op"], [161, 3, 1, "", "astype"], [161, 3, 1, "", "atan"], [161, 3, 1, "", "atanh"], [161, 3, 1, "", "bitwise_and"], [161, 3, 1, "", "bitwise_not"], [161, 3, 1, "", "bitwise_or"], [161, 3, 1, "", "bitwise_xor"], [161, 3, 1, "", "broadcast_to"], [161, 0, 0, "-", "builtin"], [161, 3, 1, "", "call_builtin_with_ctx"], [161, 3, 1, "", "call_dps_packed"], [161, 3, 1, "", "call_inplace_packed"], [161, 3, 1, "", "call_pure_packed"], [161, 3, 1, "", "call_tir"], [161, 3, 1, "", "call_tir_inplace"], [161, 3, 1, "", "call_tir_with_grad"], [161, 0, 0, "-", "ccl"], [161, 3, 1, "", "ceil"], [161, 3, 1, "", "clip"], [161, 3, 1, "", "collapse_sum_like"], [161, 3, 1, "", "collapse_sum_to"], [161, 3, 1, "", "concat"], [161, 3, 1, "", "cos"], [161, 3, 1, "", "cosh"], [161, 3, 1, "", "cumprod"], [161, 3, 1, "", "cumsum"], [161, 3, 1, "", "dequantize"], [161, 0, 0, "-", "distributed"], [161, 3, 1, "", "divide"], [161, 3, 1, "", "dynamic_strided_slice"], [161, 3, 1, "", "einsum"], [161, 3, 1, "", "equal"], [161, 3, 1, "", "erf"], [161, 3, 1, "", "ewise_fma"], [161, 3, 1, "", "exp"], [161, 3, 1, "", "expand_dims"], [161, 3, 1, "", "eye"], [161, 3, 1, "", "eye_like"], [161, 3, 1, "", "flatten"], [161, 3, 1, "", "flip"], [161, 3, 1, "", "floor"], [161, 3, 1, "", "floor_divide"], [161, 3, 1, "", "floor_mod"], [161, 3, 1, "", "full"], [161, 3, 1, "", "full_like"], [161, 3, 1, "", "gather_elements"], [161, 3, 1, "", "gather_nd"], [161, 0, 0, "-", "grad"], [161, 3, 1, "", "greater"], [161, 3, 1, "", "greater_equal"], [161, 3, 1, "", "hint_on_device"], [161, 0, 0, "-", "image"], [161, 3, 1, "", "invoke_closure"], [161, 3, 1, "", "invoke_pure_closure"], [161, 3, 1, "", "isfinite"], [161, 3, 1, "", "isinf"], [161, 3, 1, "", "isnan"], [161, 3, 1, "", "layout_transform"], [161, 3, 1, "", "left_shift"], [161, 3, 1, "", "less"], [161, 3, 1, "", "less_equal"], [161, 3, 1, "", "linear"], [161, 3, 1, "", "log"], [161, 3, 1, "", "logical_and"], [161, 3, 1, "", "logical_not"], [161, 3, 1, "", "logical_or"], [161, 3, 1, "", "logical_xor"], [161, 3, 1, "", "make_closure"], [161, 3, 1, "", "masked_fill"], [161, 3, 1, "", "matmul"], [161, 3, 1, "", "max"], [161, 3, 1, "", "maximum"], [161, 3, 1, "", "mean"], [161, 0, 0, "-", "memory"], [161, 3, 1, "", "min"], [161, 3, 1, "", "minimum"], [161, 3, 1, "", "mod"], [161, 3, 1, "", "multinomial_from_uniform"], [161, 3, 1, "", "multiply"], [161, 3, 1, "", "negative"], [161, 0, 0, "-", "nn"], [161, 3, 1, "", "nonzero"], [161, 3, 1, "", "not_equal"], [161, 3, 1, "", "null_value"], [161, 3, 1, "", "one_hot"], [161, 3, 1, "", "ones"], [161, 3, 1, "", "ones_like"], [161, 0, 0, "-", "op_attrs"], [161, 3, 1, "", "permute_dims"], [161, 3, 1, "", "power"], [161, 3, 1, "", "print"], [161, 3, 1, "", "prod"], [161, 3, 1, "", "quantize"], [161, 3, 1, "", "register_gradient"], [161, 3, 1, "", "repeat"], [161, 3, 1, "", "reshape"], [161, 3, 1, "", "right_shift"], [161, 3, 1, "", "round"], [161, 3, 1, "", "rsqrt"], [161, 3, 1, "", "scatter_elements"], [161, 3, 1, "", "scatter_nd"], [161, 3, 1, "", "shape_of"], [161, 3, 1, "", "shape_to_tensor"], [161, 3, 1, "", "sigmoid"], [161, 3, 1, "", "sign"], [161, 3, 1, "", "sin"], [161, 3, 1, "", "sinh"], [161, 3, 1, "", "sort"], [161, 3, 1, "", "split"], [161, 3, 1, "", "sqrt"], [161, 3, 1, "", "square"], [161, 3, 1, "", "squeeze"], [161, 3, 1, "", "std"], [161, 3, 1, "", "strided_slice"], [161, 3, 1, "", "subtract"], [161, 3, 1, "", "sum"], [161, 3, 1, "", "take"], [161, 3, 1, "", "tan"], [161, 3, 1, "", "tanh"], [161, 3, 1, "", "tensor_to_shape"], [161, 3, 1, "", "tile"], [161, 3, 1, "", "to_vdevice"], [161, 3, 1, "", "topk"], [161, 3, 1, "", "tril"], [161, 3, 1, "", "triu"], [161, 3, 1, "", "unique"], [161, 3, 1, "", "variance"], [161, 3, 1, "", "where"], [161, 3, 1, "", "wrap_param"], [161, 3, 1, "", "zeros"], [161, 3, 1, "", "zeros_like"]], "tvm.relax.op.builtin": [[161, 3, 1, "", "alloc_tensor"], [161, 3, 1, "", "stop_lift_params"]], "tvm.relax.op.ccl": [[161, 3, 1, "", "allgather"], [161, 3, 1, "", "allreduce"], [161, 3, 1, "", "broadcast_from_worker0"], [161, 3, 1, "", "scatter_from_worker0"]], "tvm.relax.op.distributed": [[161, 3, 1, "", "annotate_sharding"], [161, 3, 1, "", "call_tir_local_view"], [161, 3, 1, "", "redistribute"], [161, 3, 1, "", "redistribute_replica_to_shard"]], "tvm.relax.op.grad": [[161, 4, 1, "", "Expr"], [161, 3, 1, "", "avg_pool2d_backward"], [161, 3, 1, "", "end_checkpoint"], [161, 3, 1, "", "max_pool2d_backward"], [161, 3, 1, "", "nll_loss_backward"], [161, 3, 1, "", "no_grad"], [161, 3, 1, "", "start_checkpoint"], [161, 3, 1, "", "take_backward"]], "tvm.relax.op.image": [[161, 3, 1, "", "resize2d"]], "tvm.relax.op.memory": [[161, 3, 1, "", "alloc_storage"], [161, 3, 1, "", "alloc_tensor"], [161, 3, 1, "", "ensure_zero_offset"], [161, 3, 1, "", "kill_storage"], [161, 3, 1, "", "kill_tensor"], [161, 3, 1, "", "view"]], "tvm.relax.op.nn": [[161, 3, 1, "", "adaptive_avg_pool1d"], [161, 3, 1, "", "adaptive_avg_pool2d"], [161, 3, 1, "", "adaptive_avg_pool3d"], [161, 3, 1, "", "attention"], [161, 3, 1, "", "attention_var_len"], [161, 3, 1, "", "avg_pool1d"], [161, 3, 1, "", "avg_pool2d"], [161, 3, 1, "", "avg_pool3d"], [161, 3, 1, "", "batch_norm"], [161, 3, 1, "", "conv1d"], [161, 3, 1, "", "conv1d_transpose"], [161, 3, 1, "", "conv2d"], [161, 3, 1, "", "conv2d_transpose"], [161, 3, 1, "", "conv3d"], [161, 3, 1, "", "cross_entropy_with_logits"], [161, 3, 1, "", "dropout"], [161, 3, 1, "", "gelu"], [161, 3, 1, "", "gelu_tanh"], [161, 3, 1, "", "group_norm"], [161, 3, 1, "", "layer_norm"], [161, 3, 1, "", "leakyrelu"], [161, 3, 1, "", "log_softmax"], [161, 3, 1, "", "max_pool1d"], [161, 3, 1, "", "max_pool2d"], [161, 3, 1, "", "max_pool3d"], [161, 3, 1, "", "nll_loss"], [161, 3, 1, "", "pad"], [161, 3, 1, "", "relu"], [161, 3, 1, "", "rms_norm"], [161, 3, 1, "", "silu"], [161, 3, 1, "", "softmax"]], "tvm.relax.op.op_attrs": [[161, 1, 1, "", "AdaptivePool2DAttrs"], [161, 1, 1, "", "ArgmaxArgminAttrs"], [161, 1, 1, "", "ArgsortAttrs"], [161, 1, 1, "", "AstypeAttrs"], [161, 1, 1, "", "BatchNormAttrs"], [161, 1, 1, "", "CallTIRWithGradAttrs"], [161, 1, 1, "", "ConcatAttrs"], [161, 1, 1, "", "Conv2DAttrs"], [161, 1, 1, "", "Conv2DTransposeAttrs"], [161, 1, 1, "", "Conv3DAttrs"], [161, 1, 1, "", "DropoutAttrs"], [161, 1, 1, "", "EinsumAttrs"], [161, 1, 1, "", "ExpandDimsAttrs"], [161, 1, 1, "", "FlipAttrs"], [161, 1, 1, "", "InitAttrs"], [161, 1, 1, "", "LayerNormAttrs"], [161, 1, 1, "", "LayoutTransformAttrs"], [161, 1, 1, "", "MatmulAttrs"], [161, 1, 1, "", "PermuteDimsAttrs"], [161, 1, 1, "", "Pool2DAttrs"], [161, 1, 1, "", "RepeatAttrs"], [161, 1, 1, "", "Resize2DAttrs"], [161, 1, 1, "", "ScanopAttrs"], [161, 1, 1, "", "SoftmaxAttrs"], [161, 1, 1, "", "SortAttrs"], [161, 1, 1, "", "SplitAttrs"], [161, 1, 1, "", "SqueezeAttrs"], [161, 1, 1, "", "StatisticalAttrs"], [161, 1, 1, "", "StridedSliceAttrs"], [161, 1, 1, "", "TakeAttrs"], [161, 1, 1, "", "TileAttrs"], [161, 1, 1, "", "TopKAttrs"], [161, 1, 1, "", "TriluAttrs"]], "tvm.relax.transform": [[163, 3, 1, "", "AdjustMatmulOrder"], [163, 3, 1, "", "AllocateWorkspace"], [163, 3, 1, "", "AlterOpImpl"], [163, 3, 1, "", "AnnotateTIROpPattern"], [163, 3, 1, "", "AttachAttrLayoutFreeBuffers"], [163, 1, 1, "", "AttachExternModules"], [163, 3, 1, "", "AttachGlobalSymbol"], [163, 3, 1, "", "BindParams"], [163, 3, 1, "", "BindSymbolicVars"], [163, 3, 1, "", "BundleModelParams"], [163, 3, 1, "", "CallTIRRewrite"], [163, 3, 1, "", "CanonicalizeBindings"], [163, 3, 1, "", "CombineParallelMatmul"], [163, 3, 1, "", "ComputePrimValue"], [163, 3, 1, "", "ConvertLayout"], [163, 3, 1, "", "ConvertToDataflow"], [163, 1, 1, "", "DataflowBlockPass"], [163, 3, 1, "", "DataflowUseInplaceCalls"], [163, 3, 1, "", "DeadCodeElimination"], [163, 3, 1, "", "DecomposeOpsForInference"], [163, 3, 1, "", "DecomposeOpsForTraining"], [163, 3, 1, "", "EliminateCommonSubexpr"], [163, 3, 1, "", "ExpandMatmulOfSum"], [163, 3, 1, "", "ExpandTupleArguments"], [163, 1, 1, "", "FastMathTransform"], [163, 3, 1, "", "FewShotTuning"], [163, 3, 1, "", "FoldConstant"], [163, 1, 1, "", "FunctionPass"], [163, 3, 1, "", "FuseOps"], [163, 3, 1, "", "FuseOpsByPattern"], [163, 3, 1, "", "FuseTIR"], [163, 1, 1, "", "FuseTransposeMatmul"], [163, 1, 1, "", "FusionPattern"], [163, 3, 1, "", "Gradient"], [163, 1, 1, "", "IPCAllReduceRewrite"], [163, 3, 1, "", "InlinePrivateFunctions"], [163, 3, 1, "", "KillAfterLastUse"], [163, 3, 1, "", "LambdaLift"], [163, 3, 1, "", "LazyGetInput"], [163, 3, 1, "", "LazySetOutput"], [163, 1, 1, "", "LazyTransformParams"], [163, 3, 1, "", "LegalizeOps"], [163, 3, 1, "", "LiftTransformParams"], [163, 3, 1, "", "LowerAllocTensor"], [163, 1, 1, "", "LowerGPUIPCAllocStorage"], [163, 3, 1, "", "LowerRuntimeBuiltin"], [163, 3, 1, "", "MergeCompositeFunctions"], [163, 3, 1, "", "MetaScheduleApplyDatabase"], [163, 3, 1, "", "MetaScheduleTuneIRMod"], [163, 3, 1, "", "MetaScheduleTuneTIR"], [163, 3, 1, "", "Normalize"], [163, 3, 1, "", "NormalizeGlobalVar"], [163, 1, 1, "", "OptimizeLayoutTransform"], [163, 1, 1, "", "PatternCheckContext"], [163, 3, 1, "", "RealizeVDevice"], [163, 3, 1, "", "RemovePurityChecking"], [163, 1, 1, "", "RemoveRedundantReshape"], [163, 3, 1, "", "RemoveUnusedOutputs"], [163, 3, 1, "", "RemoveUnusedParameters"], [163, 3, 1, "", "ReorderPermuteDimsAfterConcat"], [163, 3, 1, "", "ReorderTakeAfterMatmul"], [163, 3, 1, "", "RewriteCUDAGraph"], [163, 3, 1, "", "RewriteDataflowReshape"], [163, 3, 1, "", "RunCodegen"], [163, 3, 1, "", "SplitCallTIRByPattern"], [163, 3, 1, "", "SplitLayoutRewritePreproc"], [163, 3, 1, "", "StaticPlanBlockMemory"], [163, 3, 1, "", "ToMixedPrecision"], [163, 3, 1, "", "ToNonDataflow"], [163, 3, 1, "", "TopologicalSort"], [163, 3, 1, "", "UpdateParamStructInfo"], [163, 3, 1, "", "UpdateVDevice"], [163, 3, 1, "", "VMBuiltinLower"], [163, 3, 1, "", "VMShapeLower"], [163, 3, 1, "", "dataflowblock_pass"], [163, 3, 1, "", "function_pass"]], "tvm.relay": [[164, 0, 0, "-", "analysis"], [165, 0, 0, "-", "backend"], [166, 0, 0, "-", "dataflow_pattern"], [167, 0, 0, "-", "frontend"], [168, 0, 0, "-", "image"], [170, 0, 0, "-", "nn"], [171, 0, 0, "-", "testing"], [172, 0, 0, "-", "transform"], [173, 0, 0, "-", "vision"]], "tvm.relay.analysis": [[164, 1, 1, "", "AnnotatedRegionSet"], [164, 1, 1, "", "CallGraph"], [164, 1, 1, "", "Feature"], [164, 3, 1, "", "all_dtypes"], [164, 3, 1, "", "all_type_vars"], [164, 3, 1, "", "all_vars"], [164, 3, 1, "", "bound_type_vars"], [164, 3, 1, "", "bound_vars"], [164, 3, 1, "", "check_basic_block_normal_form"], [164, 3, 1, "", "check_constant"], [164, 3, 1, "", "check_kind"], [164, 3, 1, "", "count_layers"], [164, 3, 1, "", "cpu"], [164, 3, 1, "", "detect_feature"], [164, 3, 1, "", "extract_fused_functions"], [164, 3, 1, "", "extract_intermdeiate_expr"], [164, 3, 1, "", "free_type_vars"], [164, 3, 1, "", "free_vars"], [164, 3, 1, "", "get_calibration_data"], [164, 3, 1, "", "get_total_mac_number"], [164, 3, 1, "", "list_fake_quantized_op_freqs"], [164, 3, 1, "", "list_op_freqs"], [164, 3, 1, "", "post_order_visit"], [164, 3, 1, "", "search_fc_transpose"], [164, 3, 1, "", "unmatched_cases"], [164, 3, 1, "", "well_formed"]], "tvm.relay.analysis.AnnotatedRegionSet": [[164, 2, 1, "", "get_region"]], "tvm.relay.analysis.CallGraph": [[164, 2, 1, "", "global_call_count"], [164, 2, 1, "", "is_recursive"], [164, 5, 1, "", "module"], [164, 2, 1, "", "print_var"], [164, 2, 1, "", "ref_count"]], "tvm.relay.analysis.Feature": [[164, 4, 1, "", "fGraph"], [164, 4, 1, "", "fMatch"]], "tvm.relay.backend": [[165, 0, 0, "-", "graph_executor_codegen"], [165, 0, 0, "-", "interpreter"], [165, 0, 0, "-", "te_compiler"], [165, 0, 0, "-", "vm"]], "tvm.relay.backend.graph_executor_codegen": [[165, 1, 1, "", "GraphExecutorCodegen"]], "tvm.relay.backend.graph_executor_codegen.GraphExecutorCodegen": [[165, 2, 1, "", "codegen"]], "tvm.relay.backend.interpreter": [[165, 1, 1, "", "ConstructorValue"], [165, 1, 1, "", "Executor"], [165, 1, 1, "", "Interpreter"], [165, 1, 1, "", "RefValue"]], "tvm.relay.backend.interpreter.Executor": [[165, 2, 1, "", "evaluate"]], "tvm.relay.backend.te_compiler": [[165, 1, 1, "", "CCacheKey"], [165, 1, 1, "", "CCacheValue"], [165, 1, 1, "", "LoweredOutput"], [165, 1, 1, "", "TECompiler"], [165, 3, 1, "", "get"], [165, 3, 1, "", "get_shape"], [165, 3, 1, "", "get_valid_implementations"], [165, 3, 1, "", "lower_to_primfunc"], [165, 3, 1, "", "select_implementation"]], "tvm.relay.backend.te_compiler.TECompiler": [[165, 2, 1, "", "clear"], [165, 2, 1, "", "items"], [165, 2, 1, "", "jit"], [165, 2, 1, "", "lower"]], "tvm.relay.backend.vm": [[165, 1, 1, "", "VMCompiler"], [165, 1, 1, "", "VMExecutor"], [165, 3, 1, "", "compile"]], "tvm.relay.backend.vm.VMCompiler": [[165, 2, 1, "", "codegen"], [165, 2, 1, "", "get_exec"], [165, 2, 1, "", "get_params"], [165, 2, 1, "", "lower"], [165, 2, 1, "", "optimize"], [165, 2, 1, "", "set_params"]], "tvm.relay.dataflow_pattern": [[166, 1, 1, "", "AltPattern"], [166, 1, 1, "", "AttrPattern"], [166, 1, 1, "", "CallPattern"], [166, 1, 1, "", "ConstantPattern"], [166, 1, 1, "", "DFPattern"], [166, 1, 1, "", "DFPatternCallback"], [166, 1, 1, "", "DataTypePattern"], [166, 1, 1, "", "DominatorPattern"], [166, 4, 1, "", "Expr"], [166, 1, 1, "", "ExprPattern"], [166, 1, 1, "", "FunctionPattern"], [166, 1, 1, "", "IfPattern"], [166, 1, 1, "", "LetPattern"], [166, 1, 1, "", "ShapePattern"], [166, 1, 1, "", "TupleGetItemPattern"], [166, 1, 1, "", "TuplePattern"], [166, 1, 1, "", "TypePattern"], [166, 1, 1, "", "VarPattern"], [166, 1, 1, "", "WildcardPattern"], [166, 3, 1, "", "astext"], [166, 3, 1, "", "dominates"], [166, 3, 1, "", "get"], [166, 3, 1, "", "has_attr"], [166, 3, 1, "", "has_dtype"], [166, 3, 1, "", "has_shape"], [166, 3, 1, "", "has_type"], [166, 3, 1, "", "is_constant"], [166, 3, 1, "", "is_expr"], [166, 3, 1, "", "is_if"], [166, 3, 1, "", "is_let"], [166, 3, 1, "", "is_op"], [166, 3, 1, "", "is_tuple"], [166, 3, 1, "", "is_tuple_get_item"], [166, 3, 1, "", "is_var"], [166, 3, 1, "", "make_node"], [166, 3, 1, "", "match"], [166, 3, 1, "", "partition"], [166, 3, 1, "", "pretty_print"], [166, 3, 1, "", "register_df_node"], [166, 3, 1, "", "rewrite"], [166, 3, 1, "", "wildcard"]], "tvm.relay.dataflow_pattern.DFPattern": [[166, 2, 1, "", "astext"], [166, 2, 1, "", "dominates"], [166, 2, 1, "", "has_attr"], [166, 2, 1, "", "has_dtype"], [166, 2, 1, "", "has_shape"], [166, 2, 1, "", "has_type"], [166, 2, 1, "", "match"], [166, 2, 1, "", "optional"], [166, 2, 1, "", "partition"]], "tvm.relay.dataflow_pattern.DFPatternCallback": [[166, 2, 1, "", "callback"], [166, 2, 1, "", "rewrite"]], "tvm.relay.dataflow_pattern.WildcardPattern": [[166, 2, 1, "", "redirect_to"]], "tvm.relay.frontend": [[167, 1, 1, "", "ChangeDatatype"], [167, 3, 1, "", "from_caffe"], [167, 3, 1, "", "from_caffe2"], [167, 3, 1, "", "from_coreml"], [167, 3, 1, "", "from_darknet"], [167, 3, 1, "", "from_keras"], [167, 3, 1, "", "from_mxnet"], [167, 3, 1, "", "from_oneflow"], [167, 3, 1, "", "from_onnx"], [167, 3, 1, "", "from_paddle"], [167, 3, 1, "", "from_pytorch"], [167, 3, 1, "", "from_tensorflow"], [167, 3, 1, "", "from_tflite"], [167, 3, 1, "", "quantize_conv_bias_mkldnn_from_var"]], "tvm.relay.image": [[168, 3, 1, "", "affine_grid"], [168, 3, 1, "", "const"], [168, 3, 1, "", "crop_and_resize"], [168, 3, 1, "", "dilation2d"], [168, 3, 1, "", "grid_sample"], [168, 3, 1, "", "resize1d"], [168, 3, 1, "", "resize2d"], [168, 3, 1, "", "resize3d"]], "tvm.relay.nn": [[170, 1, 1, "", "Constant"], [170, 4, 1, "", "Expr"], [170, 3, 1, "", "adaptive_avg_pool1d"], [170, 3, 1, "", "adaptive_avg_pool2d"], [170, 3, 1, "", "adaptive_avg_pool3d"], [170, 3, 1, "", "adaptive_max_pool1d"], [170, 3, 1, "", "adaptive_max_pool2d"], [170, 3, 1, "", "adaptive_max_pool3d"], [170, 3, 1, "", "avg_pool1d"], [170, 3, 1, "", "avg_pool2d"], [170, 3, 1, "", "avg_pool2d_grad"], [170, 3, 1, "", "avg_pool3d"], [170, 3, 1, "", "batch_flatten"], [170, 3, 1, "", "batch_matmul"], [170, 3, 1, "", "batch_norm"], [170, 3, 1, "", "batch_to_space_nd"], [170, 3, 1, "", "bias_add"], [170, 3, 1, "", "bitpack"], [170, 3, 1, "", "bitserial_conv2d"], [170, 3, 1, "", "bitserial_dense"], [170, 3, 1, "", "const"], [170, 3, 1, "", "contrib_conv2d_gemm_weight_transform"], [170, 3, 1, "", "contrib_conv2d_gemm_without_weight_transform"], [170, 3, 1, "", "contrib_conv2d_nchwc"], [170, 3, 1, "", "contrib_conv2d_winograd_nnpack_weight_transform"], [170, 3, 1, "", "contrib_conv2d_winograd_weight_transform"], [170, 3, 1, "", "contrib_conv2d_winograd_without_weight_transform"], [170, 3, 1, "", "contrib_conv3d_winograd_weight_transform"], [170, 3, 1, "", "contrib_conv3d_winograd_without_weight_transform"], [170, 3, 1, "", "contrib_dense_pack"], [170, 3, 1, "", "contrib_depthwise_conv2d_nchwc"], [170, 3, 1, "", "conv1d"], [170, 3, 1, "", "conv1d_transpose"], [170, 3, 1, "", "conv2d"], [170, 3, 1, "", "conv2d_backward_weight"], [170, 3, 1, "", "conv2d_transpose"], [170, 3, 1, "", "conv3d"], [170, 3, 1, "", "conv3d_transpose"], [170, 3, 1, "", "correlation"], [170, 3, 1, "", "cross_entropy"], [170, 3, 1, "", "cross_entropy_with_logits"], [170, 3, 1, "", "deformable_conv2d"], [170, 3, 1, "", "dense"], [170, 3, 1, "", "depth_to_space"], [170, 3, 1, "", "dilate"], [170, 3, 1, "", "dropout"], [170, 3, 1, "", "dropout_raw"], [170, 3, 1, "", "fast_softmax"], [170, 3, 1, "", "fifo_buffer"], [170, 3, 1, "", "get_pad_tuple1d"], [170, 3, 1, "", "get_pad_tuple2d"], [170, 3, 1, "", "get_pad_tuple3d"], [170, 3, 1, "", "global_avg_pool1d"], [170, 3, 1, "", "global_avg_pool2d"], [170, 3, 1, "", "global_avg_pool3d"], [170, 3, 1, "", "global_max_pool1d"], [170, 3, 1, "", "global_max_pool2d"], [170, 3, 1, "", "global_max_pool3d"], [170, 3, 1, "", "group_norm"], [170, 3, 1, "", "instance_norm"], [170, 3, 1, "", "l2_normalize"], [170, 3, 1, "", "layer_norm"], [170, 3, 1, "", "leaky_relu"], [170, 3, 1, "", "log_softmax"], [170, 3, 1, "", "lrn"], [170, 3, 1, "", "matmul"], [170, 3, 1, "", "max_pool1d"], [170, 3, 1, "", "max_pool2d"], [170, 3, 1, "", "max_pool2d_grad"], [170, 3, 1, "", "max_pool3d"], [170, 3, 1, "", "mirror_pad"], [170, 3, 1, "", "nll_loss"], [170, 3, 1, "", "pad"], [170, 3, 1, "", "prelu"], [170, 3, 1, "", "relu"], [170, 3, 1, "", "softmax"], [170, 3, 1, "", "space_to_batch_nd"], [170, 3, 1, "", "space_to_depth"], [170, 3, 1, "", "sparse_add"], [170, 3, 1, "", "sparse_dense"], [170, 3, 1, "", "sparse_transpose"], [170, 3, 1, "", "upsampling"], [170, 3, 1, "", "upsampling3d"]], "tvm.relay.testing": [[171, 1, 1, "", "Prelude"], [171, 3, 1, "", "check_grad"], [171, 3, 1, "", "count"], [171, 3, 1, "", "count_ops"], [171, 3, 1, "", "create_workload"], [171, 0, 0, "-", "dcgan"], [171, 0, 0, "-", "densenet"], [171, 3, 1, "", "enabled_targets"], [171, 3, 1, "", "gradient"], [171, 0, 0, "-", "inception_v3"], [171, 0, 0, "-", "lstm"], [171, 3, 1, "", "make_nat_expr"], [171, 3, 1, "", "make_nat_value"], [171, 0, 0, "-", "mlp"], [171, 0, 0, "-", "mobilenet"], [171, 0, 0, "-", "resnet"], [171, 3, 1, "", "run_as_python"], [171, 0, 0, "-", "squeezenet"], [171, 3, 1, "", "to_python"], [171, 0, 0, "-", "vgg"]], "tvm.relay.testing.Prelude": [[171, 2, 1, "", "get_ctor"], [171, 2, 1, "", "get_ctor_static"], [171, 2, 1, "", "get_global_var"], [171, 2, 1, "", "get_global_var_static"], [171, 2, 1, "", "get_name"], [171, 2, 1, "", "get_name_static"], [171, 2, 1, "", "get_tensor_ctor_static"], [171, 2, 1, "", "get_type"], [171, 2, 1, "", "get_type_static"], [171, 2, 1, "", "load_prelude"]], "tvm.relay.testing.dcgan": [[171, 3, 1, "", "deconv2d"], [171, 3, 1, "", "deconv2d_bn_relu"], [171, 3, 1, "", "get_net"], [171, 3, 1, "", "get_workload"]], "tvm.relay.testing.densenet": [[171, 3, 1, "", "get_workload"]], "tvm.relay.testing.inception_v3": [[171, 3, 1, "", "get_net"], [171, 3, 1, "", "get_workload"]], "tvm.relay.testing.lstm": [[171, 3, 1, "", "get_net"], [171, 3, 1, "", "get_workload"], [171, 3, 1, "", "lstm_cell"]], "tvm.relay.testing.mlp": [[171, 3, 1, "", "get_net"], [171, 3, 1, "", "get_workload"]], "tvm.relay.testing.mobilenet": [[171, 3, 1, "", "conv_block"], [171, 3, 1, "", "get_workload"], [171, 3, 1, "", "mobile_net"], [171, 3, 1, "", "separable_conv_block"]], "tvm.relay.testing.resnet": [[171, 3, 1, "", "get_net"], [171, 3, 1, "", "get_workload"], [171, 3, 1, "", "residual_unit"], [171, 3, 1, "", "resnet"]], "tvm.relay.testing.squeezenet": [[171, 3, 1, "", "get_net"], [171, 3, 1, "", "get_workload"]], "tvm.relay.testing.vgg": [[171, 3, 1, "", "get_classifier"], [171, 3, 1, "", "get_feature"], [171, 3, 1, "", "get_net"], [171, 3, 1, "", "get_workload"]], "tvm.relay.transform": [[172, 3, 1, "", "AlterOpLayout"], [172, 3, 1, "", "AnnotateSpans"], [172, 3, 1, "", "AnnotateTarget"], [172, 3, 1, "", "BackwardFoldScaleAxis"], [172, 3, 1, "", "BatchingOps"], [172, 3, 1, "", "CanonicalizeCast"], [172, 3, 1, "", "CanonicalizeOps"], [172, 3, 1, "", "CapturePostDfsIndexInSpans"], [172, 1, 1, "", "ChangeBatch"], [172, 3, 1, "", "CollagePartition"], [172, 3, 1, "", "CombineParallelBatchMatmul"], [172, 3, 1, "", "CombineParallelConv2D"], [172, 3, 1, "", "CombineParallelDense"], [172, 3, 1, "", "Conv2dToSparse"], [172, 3, 1, "", "Conv2dToSparse2"], [172, 3, 1, "", "ConvertLayout"], [172, 3, 1, "", "DeadCodeElimination"], [172, 3, 1, "", "Defunctionalization"], [172, 3, 1, "", "DefuseOps"], [172, 3, 1, "", "DenseToSparse"], [172, 3, 1, "", "DivToMul"], [172, 3, 1, "", "DynamicToStatic"], [172, 3, 1, "", "EliminateCommonSubexpr"], [172, 3, 1, "", "EtaExpand"], [172, 3, 1, "", "FakeQuantizationToInteger"], [172, 3, 1, "", "FastMath"], [172, 3, 1, "", "FirstOrderGradient"], [172, 3, 1, "", "FlattenAtrousConv"], [172, 1, 1, "", "FlexibleShapeDispatch"], [172, 3, 1, "", "FoldConstant"], [172, 3, 1, "", "FoldConstantExpr"], [172, 3, 1, "", "FoldExplicitPadding"], [172, 3, 1, "", "FoldScaleAxis"], [172, 3, 1, "", "ForwardFoldScaleAxis"], [172, 3, 1, "", "FuseOps"], [172, 3, 1, "", "InferType"], [172, 3, 1, "", "InferTypeLocal"], [172, 3, 1, "", "Inline"], [172, 3, 1, "", "InlineCompilerFunctionsBoundTo"], [172, 3, 1, "", "LambdaLift"], [172, 1, 1, "", "LayoutConfig"], [172, 3, 1, "", "LazyGradientInit"], [172, 3, 1, "", "Legalize"], [172, 3, 1, "", "ManifestLifetimes"], [172, 3, 1, "", "MarkCompilerFunctionsAsExtern"], [172, 3, 1, "", "MergeCompilerRegions"], [172, 3, 1, "", "MergeComposite"], [172, 3, 1, "", "OutlineCompilerFunctionsWithExistingGlobalSymbols"], [172, 3, 1, "", "PartialEvaluate"], [172, 3, 1, "", "PartitionGraph"], [172, 3, 1, "", "PlanDevices"], [172, 3, 1, "", "RemoveUnusedFunctions"], [172, 3, 1, "", "SimplifyExpr"], [172, 3, 1, "", "SimplifyFCTranspose"], [172, 3, 1, "", "SimplifyInference"], [172, 3, 1, "", "SplitArgs"], [172, 3, 1, "", "ToANormalForm"], [172, 3, 1, "", "ToANormalFormExpr"], [172, 3, 1, "", "ToBasicBlockNormalForm"], [172, 3, 1, "", "ToCPS"], [172, 3, 1, "", "ToGraphNormalForm"], [172, 3, 1, "", "ToMixedPrecision"], [172, 3, 1, "", "build_config"], [172, 3, 1, "", "function_pass"], [172, 3, 1, "", "gradient"], [172, 3, 1, "", "recast"], [172, 3, 1, "", "to_cps"], [172, 3, 1, "", "un_cps"]], "tvm.relay.vision": [[173, 3, 1, "", "all_class_non_max_suppression"], [173, 3, 1, "", "get_valid_counts"], [173, 3, 1, "", "multibox_prior"], [173, 3, 1, "", "multibox_transform_loc"], [173, 3, 1, "", "non_max_suppression"], [173, 3, 1, "", "proposal"], [173, 3, 1, "", "regular_non_max_suppression"], [173, 3, 1, "", "roi_align"], [173, 3, 1, "", "roi_pool"], [173, 3, 1, "", "yolo_reorg"]], "tvm.rpc": [[174, 1, 1, "", "LocalSession"], [174, 1, 1, "", "PopenSession"], [174, 1, 1, "", "RPCSession"], [174, 1, 1, "", "Server"], [174, 1, 1, "", "TrackerSession"], [174, 3, 1, "", "connect"], [174, 3, 1, "", "connect_tracker"], [174, 3, 1, "", "with_minrpc"]], "tvm.rpc.RPCSession": [[174, 2, 1, "", "cl"], [174, 2, 1, "", "cpu"], [174, 2, 1, "", "cuda"], [174, 2, 1, "", "device"], [174, 2, 1, "", "download"], [174, 2, 1, "", "download_linked_module"], [174, 2, 1, "", "ext_dev"], [174, 2, 1, "", "get_function"], [174, 2, 1, "", "hexagon"], [174, 2, 1, "", "listdir"], [174, 2, 1, "", "load_module"], [174, 2, 1, "", "metal"], [174, 2, 1, "", "remove"], [174, 2, 1, "", "rocm"], [174, 2, 1, "", "system_lib"], [174, 2, 1, "", "upload"], [174, 2, 1, "", "vulkan"], [174, 2, 1, "", "webgpu"]], "tvm.rpc.Server": [[174, 2, 1, "", "terminate"]], "tvm.rpc.TrackerSession": [[174, 2, 1, "", "close"], [174, 2, 1, "", "request"], [174, 2, 1, "", "request_and_run"], [174, 2, 1, "", "summary"], [174, 2, 1, "", "text_summary"]], "tvm.runtime": [[175, 0, 0, "-", "disco"], [176, 0, 0, "-", "ndarray"], [177, 0, 0, "-", "profiling"], [178, 0, 0, "-", "relax_vm"]], "tvm.runtime.disco": [[175, 1, 1, "", "DModule"], [175, 1, 1, "", "DPackedFunc"], [175, 1, 1, "", "DRef"], [175, 1, 1, "", "ProcessSession"], [175, 1, 1, "", "Session"], [175, 1, 1, "", "SocketSession"], [175, 1, 1, "", "ThreadedSession"]], "tvm.runtime.disco.DRef": [[175, 2, 1, "", "debug_copy_from"], [175, 2, 1, "", "debug_get_from_remote"]], "tvm.runtime.disco.Session": [[175, 2, 1, "", "allgather"], [175, 2, 1, "", "allreduce"], [175, 2, 1, "", "broadcast"], [175, 2, 1, "", "broadcast_from_worker0"], [175, 2, 1, "", "call_packed"], [175, 2, 1, "", "copy_from_worker_0"], [175, 2, 1, "", "copy_to_worker_0"], [175, 2, 1, "", "empty"], [175, 2, 1, "", "gather_to_worker0"], [175, 2, 1, "", "get_global_func"], [175, 2, 1, "", "import_python_module"], [175, 2, 1, "", "init_ccl"], [175, 2, 1, "", "load_vm_module"], [175, 5, 1, "", "num_workers"], [175, 2, 1, "", "scatter"], [175, 2, 1, "", "scatter_from_worker0"], [175, 2, 1, "", "shutdown"], [175, 2, 1, "", "sync_worker_0"]], "tvm.runtime.ndarray": [[176, 1, 1, "", "NDArray"], [176, 3, 1, "", "array"], [176, 3, 1, "", "cl"], [176, 3, 1, "", "cpu"], [176, 3, 1, "", "cuda"], [176, 3, 1, "", "device"], [176, 3, 1, "", "empty"], [176, 3, 1, "", "ext_dev"], [176, 3, 1, "", "from_dlpack"], [176, 3, 1, "", "gpu"], [176, 3, 1, "", "hexagon"], [176, 3, 1, "", "metal"], [176, 3, 1, "", "mtl"], [176, 3, 1, "", "numpyasarray"], [176, 3, 1, "", "opencl"], [176, 3, 1, "", "rocm"], [176, 3, 1, "", "vpi"], [176, 3, 1, "", "vulkan"], [176, 3, 1, "", "webgpu"]], "tvm.runtime.ndarray.NDArray": [[176, 2, 1, "", "asnumpy"], [176, 2, 1, "", "copyfrom"], [176, 2, 1, "", "copyto"], [176, 5, 1, "", "device"], [176, 5, 1, "", "dtype"], [176, 2, 1, "", "numpy"], [176, 2, 1, "", "same_as"]], "tvm.runtime.profiling": [[177, 1, 1, "", "Count"], [177, 1, 1, "", "DeviceWrapper"], [177, 1, 1, "", "Duration"], [177, 1, 1, "", "MetricCollector"], [177, 1, 1, "", "Percent"], [177, 1, 1, "", "Ratio"], [177, 1, 1, "", "Report"], [177, 3, 1, "", "profile_function"]], "tvm.runtime.profiling.Report": [[177, 4, 1, "", "calls"], [177, 2, 1, "", "csv"], [177, 4, 1, "", "device_metrics"], [177, 2, 1, "", "from_json"], [177, 2, 1, "", "json"], [177, 2, 1, "", "table"]], "tvm.runtime.relax_vm": [[178, 1, 1, "", "VMInstrumentReturnKind"], [178, 1, 1, "", "VirtualMachine"]], "tvm.runtime.relax_vm.VirtualMachine": [[178, 2, 1, "", "get_outputs"], [178, 2, 1, "", "invoke_closure"], [178, 2, 1, "", "invoke_stateful"], [178, 2, 1, "", "profile"], [178, 2, 1, "", "save_function"], [178, 2, 1, "", "set_input"], [178, 2, 1, "", "set_instrument"], [178, 2, 1, "", "time_evaluator"]], "tvm.target": [[180, 1, 1, "", "GenericFunc"], [180, 1, 1, "", "Target"], [180, 1, 1, "", "TargetKind"], [180, 1, 1, "", "VirtualDevice"], [180, 3, 1, "", "arm_cpu"], [180, 3, 1, "", "bifrost"], [180, 3, 1, "", "create"], [180, 3, 1, "", "cuda"], [180, 3, 1, "", "generic_func"], [180, 3, 1, "", "get_native_generic_func"], [180, 3, 1, "", "hexagon"], [180, 3, 1, "", "intel_graphics"], [180, 3, 1, "", "list_tags"], [180, 3, 1, "", "make_compilation_config"], [180, 3, 1, "", "mali"], [180, 3, 1, "", "override_native_generic_func"], [180, 3, 1, "", "rasp"], [180, 3, 1, "", "riscv_cpu"], [180, 3, 1, "", "rocm"], [180, 3, 1, "", "stm32"]], "tvm.target.GenericFunc": [[180, 2, 1, "", "get_packed_func"], [180, 2, 1, "", "register"], [180, 2, 1, "", "set_default"]], "tvm.target.Target": [[180, 5, 1, "", "arch"], [180, 2, 1, "", "canon_multi_target"], [180, 2, 1, "", "canon_multi_target_and_host"], [180, 2, 1, "", "canon_target"], [180, 2, 1, "", "canon_target_and_host"], [180, 2, 1, "", "canon_target_map_and_host"], [180, 2, 1, "", "current"], [180, 2, 1, "", "from_device"], [180, 2, 1, "", "get_kind_attr"], [180, 2, 1, "", "get_target_device_type"], [180, 2, 1, "", "list_kinds"], [180, 5, 1, "", "mattr"], [180, 5, 1, "", "max_block_size_x"], [180, 5, 1, "", "max_block_size_y"], [180, 5, 1, "", "max_num_threads"], [180, 5, 1, "", "mcpu"], [180, 5, 1, "", "model"], [180, 2, 1, "", "target_or_current"], [180, 5, 1, "", "thread_warp_size"]], "tvm.target.TargetKind": [[180, 5, 1, "", "options"], [180, 2, 1, "", "options_from_name"]], "tvm.te": [[181, 1, 1, "", "ComputeOp"], [181, 1, 1, "", "ExternOp"], [181, 1, 1, "", "HybridOp"], [181, 1, 1, "", "PlaceholderOp"], [181, 1, 1, "", "ScanOp"], [181, 1, 1, "", "Schedule"], [181, 1, 1, "", "SpecializedCondition"], [181, 1, 1, "", "Stage"], [181, 1, 1, "", "Tensor"], [181, 1, 1, "", "TensorComputeOp"], [181, 1, 1, "", "TensorSlice"], [181, 3, 1, "", "abs"], [181, 3, 1, "", "acos"], [181, 3, 1, "", "acosh"], [181, 3, 1, "", "add"], [181, 3, 1, "", "all"], [181, 3, 1, "", "any"], [181, 3, 1, "", "asin"], [181, 3, 1, "", "asinh"], [181, 3, 1, "", "atan"], [181, 3, 1, "", "atanh"], [181, 3, 1, "", "ceil"], [181, 3, 1, "", "comm_reducer"], [181, 3, 1, "", "compute"], [181, 3, 1, "", "const"], [181, 3, 1, "", "cos"], [181, 3, 1, "", "cosh"], [181, 3, 1, "", "create_prim_func"], [181, 3, 1, "", "create_schedule"], [181, 3, 1, "", "decl_tensor_intrin"], [181, 3, 1, "", "div"], [181, 3, 1, "", "erf"], [181, 3, 1, "", "exp"], [181, 3, 1, "", "extern"], [181, 3, 1, "", "extern_primfunc"], [181, 3, 1, "", "floor"], [181, 3, 1, "", "floordiv"], [181, 3, 1, "", "floormod"], [181, 3, 1, "", "fmod"], [181, 3, 1, "", "gradient"], [181, 0, 0, "-", "hybrid"], [181, 3, 1, "", "if_then_else"], [181, 3, 1, "", "indexdiv"], [181, 3, 1, "", "indexmod"], [181, 3, 1, "", "isfinite"], [181, 3, 1, "", "isinf"], [181, 3, 1, "", "isnan"], [181, 3, 1, "", "log"], [181, 3, 1, "", "log10"], [181, 3, 1, "", "log2"], [181, 3, 1, "", "max"], [181, 3, 1, "", "max_value"], [181, 3, 1, "", "min"], [181, 3, 1, "", "min_value"], [181, 3, 1, "", "multiply"], [181, 3, 1, "", "nearbyint"], [181, 3, 1, "", "placeholder"], [181, 3, 1, "", "popcount"], [181, 3, 1, "", "power"], [181, 3, 1, "", "reduce_axis"], [181, 3, 1, "", "round"], [181, 3, 1, "", "rsqrt"], [181, 3, 1, "", "scan"], [181, 3, 1, "", "sigmoid"], [181, 3, 1, "", "sin"], [181, 3, 1, "", "sinh"], [181, 3, 1, "", "size_var"], [181, 3, 1, "", "sqrt"], [181, 3, 1, "", "subtract"], [181, 3, 1, "", "sum"], [181, 3, 1, "", "tag_scope"], [181, 3, 1, "", "tan"], [181, 3, 1, "", "tanh"], [181, 3, 1, "", "thread_axis"], [181, 3, 1, "", "trace"], [181, 3, 1, "", "trunc"], [181, 3, 1, "", "truncdiv"], [181, 3, 1, "", "truncmod"], [181, 3, 1, "", "var"]], "tvm.te.HybridOp": [[181, 5, 1, "", "axis"]], "tvm.te.ScanOp": [[181, 5, 1, "", "scan_axis"]], "tvm.te.Schedule": [[181, 2, 1, "", "cache_read"], [181, 2, 1, "", "cache_write"], [181, 2, 1, "", "create_group"], [181, 2, 1, "", "normalize"], [181, 2, 1, "", "rfactor"]], "tvm.te.SpecializedCondition": [[181, 2, 1, "", "current"]], "tvm.te.Stage": [[181, 2, 1, "", "bind"], [181, 2, 1, "", "compute_at"], [181, 2, 1, "", "compute_inline"], [181, 2, 1, "", "compute_root"], [181, 2, 1, "", "double_buffer"], [181, 2, 1, "", "env_threads"], [181, 2, 1, "", "fuse"], [181, 2, 1, "", "parallel"], [181, 2, 1, "", "pragma"], [181, 2, 1, "", "prefetch"], [181, 2, 1, "", "reorder"], [181, 2, 1, "", "rolling_buffer"], [181, 2, 1, "", "set_scope"], [181, 2, 1, "", "set_store_predicate"], [181, 2, 1, "", "split"], [181, 2, 1, "", "storage_align"], [181, 2, 1, "", "tensorize"], [181, 2, 1, "", "tile"], [181, 2, 1, "", "transform_layout"], [181, 2, 1, "", "unroll"], [181, 2, 1, "", "vectorize"]], "tvm.te.Tensor": [[181, 5, 1, "", "axis"], [181, 5, 1, "", "ndim"], [181, 5, 1, "", "op"], [181, 5, 1, "", "shape"], [181, 5, 1, "", "value_index"]], "tvm.te.TensorSlice": [[181, 2, 1, "", "asobject"], [181, 5, 1, "", "dtype"]], "tvm.te.hybrid": [[181, 1, 1, "", "HybridModule"], [181, 3, 1, "", "build"], [181, 3, 1, "", "decorate"], [181, 3, 1, "", "script"], [181, 3, 1, "", "source_to_op"]], "tvm.te.hybrid.HybridModule": [[181, 2, 1, "", "load"]], "tvm.tir": [[185, 1, 1, "", "Add"], [185, 1, 1, "", "Allocate"], [185, 1, 1, "", "AllocateConst"], [185, 1, 1, "", "And"], [185, 1, 1, "", "Any"], [185, 1, 1, "", "AssertStmt"], [185, 1, 1, "", "AttrStmt"], [185, 1, 1, "", "BijectiveLayout"], [185, 1, 1, "", "Block"], [185, 1, 1, "", "BlockDependenceInfo"], [185, 1, 1, "", "BlockRealize"], [185, 1, 1, "", "Broadcast"], [185, 1, 1, "", "Buffer"], [185, 1, 1, "", "BufferLoad"], [185, 1, 1, "", "BufferRealize"], [185, 1, 1, "", "BufferRegion"], [185, 1, 1, "", "BufferStore"], [185, 1, 1, "", "Call"], [185, 1, 1, "", "CallEffectKind"], [185, 1, 1, "", "Cast"], [185, 1, 1, "", "CommReducer"], [185, 1, 1, "", "DataProducer"], [185, 1, 1, "", "DeclBuffer"], [185, 1, 1, "", "Div"], [185, 1, 1, "", "EQ"], [185, 1, 1, "", "Evaluate"], [185, 1, 1, "", "FloatImm"], [185, 1, 1, "", "FloorDiv"], [185, 1, 1, "", "FloorMod"], [185, 1, 1, "", "For"], [185, 1, 1, "", "ForKind"], [185, 1, 1, "", "GE"], [185, 1, 1, "", "GT"], [185, 1, 1, "", "IfThenElse"], [185, 1, 1, "", "IndexMap"], [185, 1, 1, "", "IntImm"], [185, 1, 1, "", "IterVar"], [185, 1, 1, "", "LE"], [185, 1, 1, "", "LT"], [185, 1, 1, "", "Layout"], [185, 1, 1, "", "Let"], [185, 1, 1, "", "LetStmt"], [185, 1, 1, "", "MatchBufferRegion"], [185, 1, 1, "", "Max"], [185, 1, 1, "", "Min"], [185, 1, 1, "", "Mod"], [185, 1, 1, "", "Mul"], [185, 1, 1, "", "NE"], [185, 1, 1, "", "Not"], [185, 1, 1, "", "Or"], [185, 1, 1, "", "Prefetch"], [185, 1, 1, "", "PrimFunc"], [185, 1, 1, "", "ProducerLoad"], [185, 1, 1, "", "ProducerRealize"], [185, 1, 1, "", "ProducerStore"], [185, 1, 1, "", "Ramp"], [185, 1, 1, "", "Reduce"], [185, 1, 1, "", "Select"], [185, 1, 1, "", "SeqStmt"], [185, 1, 1, "", "Shuffle"], [185, 1, 1, "", "SizeVar"], [185, 1, 1, "", "Stmt"], [185, 1, 1, "", "StringImm"], [185, 1, 1, "", "Sub"], [185, 3, 1, "", "TVMBackendAllocWorkspace"], [185, 3, 1, "", "TVMBackendFreeWorkspace"], [185, 1, 1, "", "TensorIntrin"], [185, 1, 1, "", "Var"], [185, 1, 1, "", "While"], [185, 3, 1, "", "abs"], [185, 3, 1, "", "acos"], [185, 3, 1, "", "acosh"], [185, 3, 1, "", "add"], [185, 3, 1, "", "address_of"], [185, 3, 1, "", "all"], [185, 3, 1, "", "any"], [185, 3, 1, "", "asin"], [185, 3, 1, "", "asinh"], [185, 3, 1, "", "assume"], [185, 3, 1, "", "atan"], [185, 3, 1, "", "atan2"], [185, 3, 1, "", "atanh"], [185, 3, 1, "", "bijective_layout"], [185, 3, 1, "", "bitwise_and"], [185, 3, 1, "", "bitwise_not"], [185, 3, 1, "", "bitwise_or"], [185, 3, 1, "", "bitwise_xor"], [185, 3, 1, "", "call_cpacked"], [185, 3, 1, "", "call_cpacked_lowered"], [185, 3, 1, "", "call_extern"], [185, 3, 1, "", "call_intrin"], [185, 3, 1, "", "call_llvm_intrin"], [185, 3, 1, "", "call_llvm_pure_intrin"], [185, 3, 1, "", "call_packed"], [185, 3, 1, "", "call_packed_lowered"], [185, 3, 1, "", "call_pure_extern"], [185, 3, 1, "", "call_tir"], [185, 3, 1, "", "ceil"], [185, 3, 1, "", "ceildiv"], [185, 3, 1, "", "clz"], [185, 3, 1, "", "comm_reducer"], [185, 3, 1, "", "copysign"], [185, 3, 1, "", "cos"], [185, 3, 1, "", "cosh"], [185, 3, 1, "", "create_barriers"], [185, 3, 1, "", "decl_buffer"], [185, 3, 1, "", "div"], [185, 3, 1, "", "dp4a"], [185, 3, 1, "", "end_profile_intrinsic"], [185, 3, 1, "", "erf"], [185, 3, 1, "", "exp"], [185, 3, 1, "", "exp10"], [185, 3, 1, "", "exp2"], [185, 3, 1, "", "floor"], [185, 3, 1, "", "floordiv"], [185, 3, 1, "", "floormod"], [185, 3, 1, "", "fmod"], [185, 3, 1, "", "get_active_lane_mask"], [185, 3, 1, "", "get_vscale_expr"], [185, 3, 1, "", "hypot"], [185, 3, 1, "", "if_then_else"], [185, 3, 1, "", "indexdiv"], [185, 3, 1, "", "indexmod"], [185, 3, 1, "", "infinity"], [185, 3, 1, "", "isfinite"], [185, 3, 1, "", "isinf"], [185, 3, 1, "", "isnan"], [185, 3, 1, "", "isnullptr"], [185, 3, 1, "", "layout"], [185, 3, 1, "", "ldexp"], [185, 3, 1, "", "likely"], [185, 3, 1, "", "log"], [185, 3, 1, "", "log10"], [185, 3, 1, "", "log1p"], [185, 3, 1, "", "log2"], [185, 3, 1, "", "lookup_param"], [185, 3, 1, "", "make_filled_simdgroup_matrix"], [185, 3, 1, "", "max"], [185, 3, 1, "", "max_value"], [185, 3, 1, "", "min"], [185, 3, 1, "", "min_value"], [185, 3, 1, "", "mma_fill"], [185, 3, 1, "", "mma_store"], [185, 3, 1, "", "multiply"], [185, 3, 1, "", "nearbyint"], [185, 3, 1, "", "nextafter"], [185, 3, 1, "", "popcount"], [185, 3, 1, "", "pow"], [185, 3, 1, "", "power"], [185, 3, 1, "", "ptx_arrive_barrier"], [185, 3, 1, "", "ptx_arrive_barrier_expect_tx"], [185, 3, 1, "", "ptx_commit_group"], [185, 3, 1, "", "ptx_cp_async"], [185, 3, 1, "", "ptx_cp_async_barrier"], [185, 3, 1, "", "ptx_cp_async_bulk"], [185, 3, 1, "", "ptx_init_barrier_thread_count"], [185, 3, 1, "", "ptx_ldmatrix"], [185, 3, 1, "", "ptx_mma"], [185, 3, 1, "", "ptx_mma_sp"], [185, 3, 1, "", "ptx_wait_barrier"], [185, 3, 1, "", "ptx_wait_group"], [185, 3, 1, "", "q_multiply_shift"], [185, 3, 1, "", "q_multiply_shift_per_axis"], [185, 3, 1, "", "reinterpret"], [185, 3, 1, "", "ret"], [185, 3, 1, "", "round"], [185, 3, 1, "", "rsqrt"], [183, 0, 0, "-", "schedule"], [185, 3, 1, "", "shift_left"], [185, 3, 1, "", "shift_right"], [185, 3, 1, "", "sigmoid"], [185, 3, 1, "", "simdgroup_load"], [185, 3, 1, "", "simdgroup_multiply_accumulate"], [185, 3, 1, "", "simdgroup_store"], [185, 3, 1, "", "sin"], [185, 3, 1, "", "sinh"], [185, 3, 1, "", "sqrt"], [185, 3, 1, "", "start_profile_intrinsic"], [184, 0, 0, "-", "stmt_functor"], [185, 3, 1, "", "stmt_list"], [185, 3, 1, "", "stmt_seq"], [185, 3, 1, "", "subtract"], [185, 3, 1, "", "sum"], [185, 3, 1, "", "tan"], [185, 3, 1, "", "tanh"], [185, 3, 1, "", "trace"], [186, 0, 0, "-", "transform"], [185, 3, 1, "", "trunc"], [185, 3, 1, "", "truncdiv"], [185, 3, 1, "", "truncmod"], [185, 3, 1, "", "tvm_access_ptr"], [185, 3, 1, "", "tvm_bmma_sync"], [185, 3, 1, "", "tvm_check_return"], [185, 3, 1, "", "tvm_fill_fragment"], [185, 3, 1, "", "tvm_load_matrix_sync"], [185, 3, 1, "", "tvm_mma_sync"], [185, 3, 1, "", "tvm_stack_alloca"], [185, 3, 1, "", "tvm_stack_make_array"], [185, 3, 1, "", "tvm_stack_make_shape"], [185, 3, 1, "", "tvm_store_matrix_sync"], [185, 3, 1, "", "tvm_struct_get"], [185, 3, 1, "", "tvm_struct_set"], [185, 3, 1, "", "tvm_thread_allreduce"], [185, 3, 1, "", "tvm_throw_last_error"], [185, 3, 1, "", "tvm_tuple"], [185, 3, 1, "", "type_annotation"], [185, 3, 1, "", "undef"], [185, 3, 1, "", "vectorcombine"], [185, 3, 1, "", "vectorhigh"], [185, 3, 1, "", "vectorlow"], [185, 3, 1, "", "vscale"]], "tvm.tir.BijectiveLayout": [[185, 2, 1, "", "backward_index"], [185, 2, 1, "", "backward_shape"], [185, 2, 1, "", "forward_index"], [185, 2, 1, "", "forward_shape"]], "tvm.tir.BlockDependenceInfo": [[185, 2, 1, "", "get_block_scope"], [185, 2, 1, "", "get_sref"]], "tvm.tir.Buffer": [[185, 2, 1, "", "access_ptr"], [185, 2, 1, "", "get_flattened_buffer"], [185, 2, 1, "", "offset_of"], [185, 2, 1, "", "scope"], [185, 2, 1, "", "vload"], [185, 2, 1, "", "vstore"]], "tvm.tir.IndexMap": [[185, 2, 1, "", "from_func"], [185, 2, 1, "", "from_func_with_separators"], [185, 2, 1, "", "inverse"], [185, 2, 1, "", "is_equivalent_to"], [185, 2, 1, "", "map_indices"], [185, 2, 1, "", "map_ndarray"], [185, 2, 1, "", "map_shape"], [185, 2, 1, "", "non_surjective_inverse"]], "tvm.tir.Layout": [[185, 2, 1, "", "factor_of"], [185, 2, 1, "", "index_of"]], "tvm.tir.PrimFunc": [[185, 2, 1, "", "specialize"], [185, 2, 1, "", "with_body"]], "tvm.tir.TensorIntrin": [[185, 2, 1, "", "get"], [185, 2, 1, "", "register"]], "tvm.tir.analysis": [[182, 0, 0, "-", "analysis"]], "tvm.tir.analysis.analysis": [[182, 3, 1, "", "OOBChecker"], [182, 3, 1, "", "apply_prim_func_arg_and_result_memory_constraints"], [182, 3, 1, "", "assert_pure_function"], [182, 3, 1, "", "calculate_allocated_bytes"], [182, 3, 1, "", "calculate_constant_bytes"], [182, 3, 1, "", "calculate_workspace_bytes"], [182, 3, 1, "", "detect_buffer_access_lca"], [182, 3, 1, "", "estimate_tir_flops"], [182, 3, 1, "", "expr_deep_equal"], [182, 3, 1, "", "find_anchor_block"], [182, 3, 1, "", "get_block_access_region"], [182, 3, 1, "", "get_block_read_write_region"], [182, 3, 1, "", "get_prim_func_arg_and_result_memory_constraints"], [182, 3, 1, "", "get_vtcm_compaction_passes"], [182, 3, 1, "", "is_pure_function"], [182, 3, 1, "", "undefined_vars"], [182, 3, 1, "", "verify_gpu_code"], [182, 3, 1, "", "verify_memory"], [182, 3, 1, "", "verify_ssa"], [182, 3, 1, "", "verify_well_formed"]], "tvm.tir.schedule": [[183, 1, 1, "", "BlockRV"], [183, 1, 1, "", "BlockScope"], [183, 1, 1, "", "DepKind"], [183, 1, 1, "", "Dependency"], [183, 4, 1, "", "ExprRV"], [183, 1, 1, "", "Instruction"], [183, 1, 1, "", "InstructionKind"], [183, 1, 1, "", "LoopRV"], [183, 1, 1, "", "Schedule"], [183, 1, 1, "", "ScheduleDebugMask"], [183, 6, 1, "", "ScheduleError"], [183, 1, 1, "", "ScheduleState"], [183, 1, 1, "", "StmtSRef"], [183, 1, 1, "", "Trace"]], "tvm.tir.schedule.BlockScope": [[183, 2, 1, "", "get_deps_by_dst"], [183, 2, 1, "", "get_deps_by_src"]], "tvm.tir.schedule.DepKind": [[183, 4, 1, "", "OPAQUE"], [183, 4, 1, "", "RAW"], [183, 4, 1, "", "WAR"], [183, 4, 1, "", "WAW"]], "tvm.tir.schedule.Instruction": [[183, 4, 1, "", "attrs"], [183, 4, 1, "", "inputs"], [183, 4, 1, "", "kind"], [183, 4, 1, "", "outputs"]], "tvm.tir.schedule.InstructionKind": [[183, 2, 1, "", "get"], [183, 5, 1, "", "is_pure"], [183, 4, 1, "", "name"]], "tvm.tir.schedule.Schedule": [[183, 2, 1, "", "add_unit_loop"], [183, 2, 1, "", "annotate"], [183, 2, 1, "", "annotate_buffer_access"], [183, 2, 1, "", "bind"], [183, 2, 1, "", "blockize"], [183, 2, 1, "", "cache_index"], [183, 2, 1, "", "cache_inplace"], [183, 2, 1, "", "cache_read"], [183, 2, 1, "", "cache_write"], [183, 2, 1, "", "can_decompose_padding"], [183, 2, 1, "", "compute_at"], [183, 2, 1, "", "compute_inline"], [183, 2, 1, "", "copy"], [183, 2, 1, "", "decompose_padding"], [183, 2, 1, "", "decompose_reduction"], [183, 2, 1, "", "enter_postproc"], [183, 2, 1, "", "fork_seed"], [183, 5, 1, "", "func_working_on"], [183, 2, 1, "", "fuse"], [183, 2, 1, "", "get"], [183, 2, 1, "", "get_block"], [183, 2, 1, "", "get_child_blocks"], [183, 2, 1, "", "get_consumers"], [183, 2, 1, "", "get_loops"], [183, 2, 1, "", "get_output_blocks"], [183, 2, 1, "", "get_producers"], [183, 2, 1, "", "get_sref"], [183, 2, 1, "", "loop_partition"], [183, 2, 1, "", "merge"], [183, 5, 1, "", "mod"], [183, 2, 1, "", "pad_einsum"], [183, 2, 1, "", "parallel"], [183, 2, 1, "", "reindex"], [183, 2, 1, "", "reindex_cache_read"], [183, 2, 1, "", "reindex_cache_write"], [183, 2, 1, "", "remove_rv"], [183, 2, 1, "", "reorder"], [183, 2, 1, "", "reorder_block_iter_var"], [183, 2, 1, "", "reverse_compute_at"], [183, 2, 1, "", "reverse_compute_inline"], [183, 2, 1, "", "rfactor"], [183, 2, 1, "", "rolling_buffer"], [183, 2, 1, "", "sample_categorical"], [183, 2, 1, "", "sample_compute_location"], [183, 2, 1, "", "sample_partitioned_tile"], [183, 2, 1, "", "sample_perfect_tile"], [183, 2, 1, "", "seed"], [183, 2, 1, "", "set_axis_separator"], [183, 2, 1, "", "set_scope"], [183, 2, 1, "", "show"], [183, 2, 1, "", "split"], [183, 5, 1, "", "state"], [183, 2, 1, "", "storage_align"], [183, 2, 1, "", "tensorize"], [183, 5, 1, "", "trace"], [183, 2, 1, "", "transform_block_layout"], [183, 2, 1, "", "transform_layout"], [183, 2, 1, "", "unannotate"], [183, 2, 1, "", "unroll"], [183, 2, 1, "", "unsafe_hide_buffer_access"], [183, 2, 1, "", "unsafe_set_dtype"], [183, 2, 1, "", "vectorize"], [183, 2, 1, "", "work_on"]], "tvm.tir.schedule.ScheduleDebugMask": [[183, 4, 1, "", "VERIFY_CACHED_FLAGS"], [183, 4, 1, "", "VERIFY_SREF_TREE"]], "tvm.tir.schedule.ScheduleState": [[183, 2, 1, "", "get_block_scope"], [183, 2, 1, "", "get_sref"], [183, 2, 1, "", "replace"]], "tvm.tir.schedule.StmtSRef": [[183, 2, 1, "", "inline_mark"], [183, 5, 1, "", "parent"], [183, 2, 1, "", "root_mark"], [183, 5, 1, "", "stmt"]], "tvm.tir.schedule.Trace": [[183, 2, 1, "", "append"], [183, 2, 1, "", "apply_json_to_schedule"], [183, 2, 1, "", "apply_to_schedule"], [183, 2, 1, "", "as_json"], [183, 2, 1, "", "as_python"], [183, 4, 1, "", "decisions"], [183, 2, 1, "", "get_decision"], [183, 4, 1, "", "insts"], [183, 2, 1, "", "pop"], [183, 2, 1, "", "show"], [183, 2, 1, "", "simplified"], [183, 2, 1, "", "with_decision"]], "tvm.tir.stmt_functor": [[184, 3, 1, "", "ir_transform"], [184, 3, 1, "", "post_order_visit"], [184, 3, 1, "", "pre_order_visit"], [184, 3, 1, "", "renew_defs"], [184, 3, 1, "", "substitute"]], "tvm.tir.transform": [[186, 3, 1, "", "AnnotateDeviceRegions"], [186, 3, 1, "", "AnnotateEntryFunc"], [186, 3, 1, "", "Apply"], [186, 3, 1, "", "ApplyLayoutTransforms"], [186, 3, 1, "", "BF16ComputeLegalize"], [186, 3, 1, "", "BF16StorageLegalize"], [186, 3, 1, "", "BindTarget"], [186, 3, 1, "", "CoProcSync"], [186, 3, 1, "", "CombineContextCall"], [186, 3, 1, "", "CommonSubexprElimTIR"], [186, 3, 1, "", "CompactBufferAllocation"], [186, 3, 1, "", "ConvertBlocksToOpaque"], [186, 3, 1, "", "ConvertForLoopsToSerial"], [186, 3, 1, "", "ConvertSSA"], [186, 3, 1, "", "DecorateDeviceScope"], [186, 3, 1, "", "DefaultGPUSchedule"], [186, 3, 1, "", "ExtractPrimFuncConstants"], [186, 3, 1, "", "FP8ComputeLegalize"], [186, 3, 1, "", "FP8StorageLegalize"], [186, 3, 1, "", "Filter"], [186, 3, 1, "", "FlattenBuffer"], [186, 3, 1, "", "ForceNarrowIndexToInt32"], [186, 3, 1, "", "HoistExpression"], [186, 3, 1, "", "HoistIfThenElse"], [186, 1, 1, "", "HoistedConditionals"], [186, 1, 1, "", "HoistedLetBindings"], [186, 3, 1, "", "InferFragment"], [186, 3, 1, "", "InjectCopyIntrin"], [186, 3, 1, "", "InjectDoubleBuffer"], [186, 3, 1, "", "InjectPTXAsyncCopy"], [186, 3, 1, "", "InjectPermutedLayout"], [186, 3, 1, "", "InjectPrefetch"], [186, 3, 1, "", "InjectRollingBuffer"], [186, 3, 1, "", "InjectSoftwarePipeline"], [186, 3, 1, "", "InjectVirtualThread"], [186, 3, 1, "", "InlinePrivateFunctions"], [186, 3, 1, "", "InstallDebugSpans"], [186, 3, 1, "", "InstrumentBoundCheckers"], [186, 3, 1, "", "InstrumentProfileIntrinsics"], [186, 3, 1, "", "LegalizePackedCalls"], [186, 3, 1, "", "LiftAttrScope"], [186, 3, 1, "", "LiftThreadBinding"], [186, 3, 1, "", "LoopPartition"], [186, 3, 1, "", "LowerAutoCopy"], [186, 3, 1, "", "LowerCrossThreadReduction"], [186, 3, 1, "", "LowerCustomDatatypes"], [186, 3, 1, "", "LowerDeviceKernelLaunch"], [186, 3, 1, "", "LowerDeviceStorageAccessInfo"], [186, 3, 1, "", "LowerInitBlock"], [186, 3, 1, "", "LowerIntrin"], [186, 3, 1, "", "LowerMatchBuffer"], [186, 3, 1, "", "LowerOpaqueBlock"], [186, 3, 1, "", "LowerTVMBuiltin"], [186, 3, 1, "", "LowerThreadAllreduce"], [186, 3, 1, "", "LowerWarpMemory"], [186, 3, 1, "", "MakePackedAPI"], [186, 3, 1, "", "MakeUnpackedAPI"], [186, 3, 1, "", "ManifestSharedMemoryLocalStage"], [186, 3, 1, "", "MergeSharedMemoryAllocations"], [186, 3, 1, "", "NarrowDataType"], [186, 3, 1, "", "PlanAndUpdateBufferAllocationLocation"], [186, 3, 1, "", "PointerValueTypeRewrite"], [186, 1, 1, "", "PrimFuncPass"], [186, 3, 1, "", "ReduceBranchingThroughOvercompute"], [186, 3, 1, "", "RemoveAssume"], [186, 3, 1, "", "RemoveNoOp"], [186, 3, 1, "", "RemoveStoreUndef"], [186, 3, 1, "", "RemoveWeightLayoutRewriteBlock"], [186, 3, 1, "", "RenormalizeSplitPattern"], [186, 3, 1, "", "RewriteUnsafeSelect"], [186, 3, 1, "", "Simplify"], [186, 3, 1, "", "SkipAssert"], [186, 3, 1, "", "SplitHostDevice"], [186, 3, 1, "", "StorageFlatten"], [186, 3, 1, "", "StorageRewrite"], [186, 3, 1, "", "TextureFlatten"], [186, 3, 1, "", "ThreadSync"], [186, 3, 1, "", "TransformMmaBufferLayout"], [186, 3, 1, "", "UnifyThreadBinding"], [186, 3, 1, "", "UnrollLoop"], [186, 3, 1, "", "UseAssumeToReduceBranches"], [186, 3, 1, "", "VectorizeLoop"], [186, 3, 1, "", "VerifyMemory"], [186, 3, 1, "", "VerifyVTCMLimit"], [186, 3, 1, "", "prim_func_pass"]], "tvm.tir.transform.HoistedConditionals": [[186, 4, 1, "", "All"], [186, 4, 1, "", "BooleanExpression"], [186, 4, 1, "", "IfElseExpr"], [186, 4, 1, "", "IfElseStmt"], [186, 4, 1, "", "Never"], [186, 4, 1, "", "UsingBlockVar"]], "tvm.tir.transform.HoistedLetBindings": [[186, 4, 1, "", "All"], [186, 4, 1, "", "LetExpr"], [186, 4, 1, "", "LetStmt"], [186, 4, 1, "", "Never"], [186, 4, 1, "", "RequiredByConditional"]], "tvm.topi": [[187, 0, 0, "-", "image"], [187, 0, 0, "-", "nn"], [187, 0, 0, "-", "sparse"]], "tvm.topi.image": [[187, 3, 1, "", "affine_grid"], [187, 3, 1, "", "can_convert_multiply_to_intdiv"], [187, 3, 1, "", "crop_and_resize"], [187, 3, 1, "", "dilation2d_nchw"], [187, 3, 1, "", "dilation2d_nhwc"], [187, 3, 1, "", "get_1d_indices"], [187, 3, 1, "", "get_1d_pixel"], [187, 3, 1, "", "get_2d_indices"], [187, 3, 1, "", "get_2d_pixel"], [187, 3, 1, "", "get_3d_indices"], [187, 3, 1, "", "get_3d_pixel"], [187, 3, 1, "", "get_closest_index"], [187, 3, 1, "", "get_inx"], [187, 3, 1, "", "get_pad_tuple"], [187, 3, 1, "", "grid_sample"], [187, 3, 1, "", "nchw_pack_layout"], [187, 3, 1, "", "nchw_xc_layout"], [187, 3, 1, "", "pad"], [187, 3, 1, "", "resize1d"], [187, 3, 1, "", "resize2d"], [187, 3, 1, "", "resize3d"], [187, 3, 1, "", "simplify"]], "tvm.topi.nn": [[187, 1, 1, "", "Workload"], [187, 3, 1, "", "adaptive_pool"], [187, 3, 1, "", "adaptive_pool1d"], [187, 3, 1, "", "adaptive_pool3d"], [187, 3, 1, "", "add"], [187, 3, 1, "", "add_alter_layout"], [187, 3, 1, "", "batch_matmul"], [187, 3, 1, "", "batch_matmul_legalize"], [187, 3, 1, "", "batch_norm"], [187, 3, 1, "", "batch_to_space_nd"], [187, 3, 1, "", "bias_add_legalize"], [187, 3, 1, "", "binarize_pack"], [187, 3, 1, "", "binary_dense"], [187, 3, 1, "", "bitpack"], [187, 3, 1, "", "bitserial_conv2d_legalize"], [187, 3, 1, "", "bitserial_conv2d_nchw"], [187, 3, 1, "", "bitserial_conv2d_nhwc"], [187, 3, 1, "", "bitserial_dense"], [187, 3, 1, "", "concatenate"], [187, 3, 1, "", "conv"], [187, 3, 1, "", "conv1d"], [187, 3, 1, "", "conv1d_ncw"], [187, 3, 1, "", "conv1d_nwc"], [187, 3, 1, "", "conv1d_transpose_ncw"], [187, 3, 1, "", "conv2d"], [187, 3, 1, "", "conv2d_NCHWc"], [187, 3, 1, "", "conv2d_NCHWc_int8"], [187, 3, 1, "", "conv2d_alter_layout"], [187, 3, 1, "", "conv2d_gemm_weight_transform"], [187, 3, 1, "", "conv2d_hwcn"], [187, 3, 1, "", "conv2d_infer_layout"], [187, 3, 1, "", "conv2d_legalize"], [187, 3, 1, "", "conv2d_nchw"], [187, 3, 1, "", "conv2d_nhwc"], [187, 3, 1, "", "conv2d_transpose_alter_layout"], [187, 3, 1, "", "conv2d_transpose_legalize"], [187, 3, 1, "", "conv2d_transpose_nchw"], [187, 3, 1, "", "conv2d_transpose_nchw_preprocess"], [187, 3, 1, "", "conv2d_winograd_nchw"], [187, 3, 1, "", "conv2d_winograd_nchw_without_weight_transform"], [187, 3, 1, "", "conv2d_winograd_nhwc"], [187, 3, 1, "", "conv2d_winograd_nhwc_without_weight_transform"], [187, 3, 1, "", "conv2d_winograd_nnpack_weight_transform"], [187, 3, 1, "", "conv2d_winograd_weight_transform"], [187, 3, 1, "", "conv3d_alter_layout"], [187, 3, 1, "", "conv3d_ncdhw"], [187, 3, 1, "", "conv3d_ndhwc"], [187, 3, 1, "", "conv3d_transpose_legalize"], [187, 3, 1, "", "conv3d_transpose_ncdhw"], [187, 3, 1, "", "conv3d_transpose_ncdhw_preprocess"], [187, 3, 1, "", "conv3d_winograd_weight_transform"], [187, 3, 1, "", "correlation_nchw"], [187, 3, 1, "", "declaration_conv2d_transpose_impl"], [187, 3, 1, "", "declaration_conv3d_transpose_impl"], [187, 3, 1, "", "deformable_conv2d_nchw"], [187, 3, 1, "", "deformable_conv2d_nhwc"], [187, 3, 1, "", "dense"], [187, 3, 1, "", "dense_alter_layout"], [187, 3, 1, "", "dense_legalize"], [187, 3, 1, "", "dense_pack"], [187, 3, 1, "", "depth_to_space"], [187, 3, 1, "", "depthwise_conv2d_NCHWc"], [187, 3, 1, "", "depthwise_conv2d_backward_input_nhwc"], [187, 3, 1, "", "depthwise_conv2d_backward_weight_nhwc"], [187, 3, 1, "", "depthwise_conv2d_infer_layout"], [187, 3, 1, "", "depthwise_conv2d_nchw"], [187, 3, 1, "", "depthwise_conv2d_nhwc"], [187, 3, 1, "", "dilate"], [187, 3, 1, "", "equal_const_int"], [187, 3, 1, "", "fast_softmax"], [187, 3, 1, "", "fifo_buffer"], [187, 3, 1, "", "flatten"], [187, 3, 1, "", "get_const_int"], [187, 3, 1, "", "get_const_tuple"], [187, 3, 1, "", "get_pad_tuple"], [187, 3, 1, "", "get_pad_tuple1d"], [187, 3, 1, "", "get_pad_tuple3d"], [187, 3, 1, "", "get_pad_tuple_generic"], [187, 3, 1, "", "global_pool"], [187, 3, 1, "", "group_conv1d_ncw"], [187, 3, 1, "", "group_conv1d_nwc"], [187, 3, 1, "", "group_conv1d_transpose_ncw"], [187, 3, 1, "", "group_conv2d_nchw"], [187, 3, 1, "", "group_conv2d_nhwc"], [187, 3, 1, "", "group_conv2d_transpose_nchw"], [187, 3, 1, "", "group_conv3d_transpose_ncdhw"], [187, 3, 1, "", "group_norm"], [187, 3, 1, "", "instance_norm"], [187, 3, 1, "", "layer_norm"], [187, 3, 1, "", "layout_transform"], [187, 3, 1, "", "leaky_relu"], [187, 3, 1, "", "log_softmax"], [187, 3, 1, "", "lrn"], [187, 3, 1, "", "lstm"], [187, 3, 1, "", "matmul"], [187, 3, 1, "", "matmul_legalize"], [187, 3, 1, "", "mirror_pad"], [187, 3, 1, "", "namedtuple"], [187, 3, 1, "", "nll_loss"], [187, 3, 1, "", "pad"], [187, 3, 1, "", "pool1d"], [187, 3, 1, "", "pool2d"], [187, 3, 1, "", "pool3d"], [187, 3, 1, "", "pool_grad"], [187, 3, 1, "", "prelu"], [187, 3, 1, "", "qnn_conv2d_alter_layout"], [187, 3, 1, "", "qnn_dense_alter_layout"], [187, 3, 1, "", "qnn_requantize_alter_layout"], [187, 3, 1, "", "reduce"], [187, 3, 1, "", "relu"], [187, 3, 1, "", "rms_norm"], [187, 3, 1, "", "scale_shift_nchw"], [187, 3, 1, "", "scale_shift_nchwc"], [187, 3, 1, "", "scale_shift_nhwc"], [187, 3, 1, "", "simplify"], [187, 3, 1, "", "simulated_dequantize"], [187, 3, 1, "", "simulated_quantize"], [187, 3, 1, "", "softmax"], [187, 3, 1, "", "softmax_common"], [187, 3, 1, "", "space_to_batch_nd"], [187, 3, 1, "", "space_to_depth"], [187, 3, 1, "", "sparse_add"], [187, 3, 1, "", "sparse_conv2d"], [187, 3, 1, "", "sparse_dense"], [187, 3, 1, "", "sparse_dense_alter_layout"], [187, 3, 1, "", "sparse_dense_sp_lhs"], [187, 3, 1, "", "sparse_dense_sp_rhs"], [187, 3, 1, "", "sparse_transpose"], [187, 3, 1, "", "strided_slice"], [187, 3, 1, "", "try_get_conv2d_sparse_input"], [187, 3, 1, "", "try_get_sparse_input"], [187, 3, 1, "", "unpack_NCHWc_to_nchw"], [187, 3, 1, "", "upsampling"], [187, 3, 1, "", "upsampling3d"], [187, 3, 1, "", "winograd_transform_matrices"]], "tvm.topi.nn.Workload": [[187, 4, 1, "", "dilation_h"], [187, 4, 1, "", "dilation_w"], [187, 4, 1, "", "height"], [187, 4, 1, "", "in_dtype"], [187, 4, 1, "", "in_filter"], [187, 4, 1, "", "kernel_h"], [187, 4, 1, "", "kernel_w"], [187, 4, 1, "", "out_dtype"], [187, 4, 1, "", "out_filter"], [187, 4, 1, "", "padb"], [187, 4, 1, "", "padl"], [187, 4, 1, "", "padr"], [187, 4, 1, "", "padt"], [187, 4, 1, "", "stride_h"], [187, 4, 1, "", "stride_w"], [187, 4, 1, "", "width"]], "tvm.topi.sparse": [[187, 3, 1, "", "csrmm"], [187, 3, 1, "", "csrmv"], [187, 3, 1, "", "dense"]], "tvm.transform": [[188, 3, 1, "", "ApplyPassToFunction"], [188, 1, 1, "", "ModulePass"], [188, 1, 1, "", "Pass"], [188, 1, 1, "", "PassContext"], [188, 1, 1, "", "PassInfo"], [188, 3, 1, "", "PrintIR"], [188, 1, 1, "", "Sequential"], [188, 3, 1, "", "module_pass"]], "tvm.transform.Pass": [[188, 5, 1, "", "info"]], "tvm.transform.PassContext": [[188, 2, 1, "", "current"], [188, 2, 1, "", "get_current_trace"], [188, 2, 1, "", "get_trace_stack"], [188, 2, 1, "", "get_trace_stack_size"], [188, 2, 1, "", "get_tuning_api_database"], [188, 2, 1, "", "inc_num_evals"], [188, 2, 1, "", "list_configs"], [188, 2, 1, "", "override_instruments"], [188, 2, 1, "", "pop_trace"], [188, 2, 1, "", "push_trace"], [188, 2, 1, "", "set_num_evals"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property", "6": "py:exception"}, "terms": {"": [0, 2, 4, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 22, 23, 25, 27, 30, 31, 34, 35, 36, 37, 39, 43, 44, 46, 48, 51, 52, 56, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 79, 80, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 111, 113, 116, 117, 118, 119, 121, 122, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 143, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 167, 169, 170, 171, 172, 173, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 189, 190, 191, 192, 194, 199, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212], "0": [0, 1, 2, 3, 4, 5, 6, 8, 13, 17, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 34, 35, 36, 37, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 80, 82, 83, 84, 85, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 146, 147, 148, 152, 155, 157, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 185, 186, 187, 188, 189, 191, 192, 194, 195, 198, 200, 201, 202, 204, 206, 207, 208, 209, 210, 212], "00": [24, 29, 45, 51, 55, 68, 72, 73, 77, 83, 91, 95, 97, 98, 99, 100, 103, 105, 106, 107, 114, 121, 125, 128, 137, 198, 201, 202, 207, 211], "000": [123, 125, 198, 207], "0000": [31, 169, 187], "00000": 212, "0000000000000001e": 111, "000000000139": 123, "000000581781": 123, "000000e": [96, 134], "000000f": 129, "000001": 123, "000006": 208, "000010": 208, "000040": 208, "00006": 119, "0001": 187, "00019": 52, "00021": 52, "00022": 52, "00023": 52, "000261": [202, 210], "000262": 202, "0003": 98, "0005": 123, "0008": 122, "00089283": 206, "0009094": 206, "00095838": 206, "001": [123, 171], "00102275": 206, "00103331": 206, "00106262": 206, "00106737": 206, "00108751": 206, "00110792": 206, "00113151": 206, "001215": 202, "001273": [202, 210], "00194e": 208, "0037": 67, "0039": 67, "005": [98, 103, 198], "00567": 171, "006": 98, "0062": 172, "007": [77, 117, 128, 198], "008": [99, 100], "009": [83, 198], "00f": [96, 134], "01": [49, 55, 72, 77, 83, 91, 95, 97, 99, 100, 105, 108, 114, 120, 125, 137, 161, 170, 173, 198, 202, 207, 210], "010": [98, 99, 100], "011": [98, 128, 198], "013": [97, 98], "0156": 126, "0156233": 126, "015873": 30, "016": [99, 100], "016185": 123, "018": [93, 114, 198], "01852v1": 187, "019365": [202, 210], "019712": 202, "02": [0, 45, 72, 77, 91, 98, 106, 107, 114, 128, 198, 201, 202, 207], "020": 98, "020132": 90, "02025": [168, 187], "020885": 208, "0219269224": 201, "022": 98, "0220606": 126, "0221": 126, "023": [103, 198], "0245119516": 201, "025885849": 201, "026633208675911332": 208, "026645933000000004": 201, "027742440199999996": 201, "0281780404": 201, "02844666133257338": 208, "03": [45, 55, 83, 105, 106, 108, 114, 119, 137, 198, 202], "030062": 30, "031": [99, 100], "03186": 52, "03329128204637123": 208, "03343": 52, "0344403188": 201, "0355": 126, "0355334": 126, "036": [93, 137, 198], "03652447741137672": 208, "0369682752": 201, "037321": 104, "03884993": 43, "03884996": 43, "04": [77, 95, 97, 125, 128, 198, 202, 207, 210], "041": [95, 198], "04104149": 43, "04104152": 43, "043": [91, 198], "044": 93, "044715": 161, "045": [97, 110], "046": 97, "0471": 126, "04710218": 126, "049": [93, 98], "05": [75, 83, 105, 106, 107, 108, 111, 113, 160, 161, 170, 171, 187, 202, 208, 210], "0507458": 30, "051": [114, 198], "05f": [85, 206], "06": [55, 99, 100, 105, 106, 107, 108, 171, 202, 208], "0605": 69, "062": 98, "06211": [170, 187], "063": 98, "0635": 100, "06434": 171, "066": 44, "067": 98, "06726527": 126, "0673": 126, "0676ba61": 68, "068": 98, "07": [49, 99, 100, 106, 109, 148, 201, 207, 212], "070144": 7, "0708": 100, "0713": 123, "071648": 30, "072": 98, "073": [99, 100], "074": [137, 198], "076": 98, "0777881": 126, "0778": 126, "079": [98, 103, 198], "07f9fcad27bdd3233f86fe35a5185d33": [98, 100], "08": [58, 97, 99, 100, 105, 106, 198, 202], "08022": 170, "081": [72, 77, 198], "082": [137, 198], "083": 97, "084": [97, 207], "08494": 170, "0854": 126, "0854187": 126, "087": [99, 100], "08730454985436963": 208, "088": [114, 198], "08f7449d79e570b7274174709e5e5e01": [97, 98, 99, 100], "09": [95, 97, 108, 125, 198, 202, 210], "09005999407663785": 208, "0901": 123, "091": [24, 198], "092064": 30, "0927": 123, "09642": 30, "09685704": 126, "0969": 126, "09785634": 43, "09785635": 43, "0_224": [53, 74], "0_224_quant": [74, 119], "0bcf718c0e6566bcd6c3b1437a3b6291": 98, "0f": [96, 97, 98, 99, 100, 101], "0f32": 101, "0fad1b42d0d33418e0a8d15d3bbad3c9": [98, 100], "0ghz": 105, "0m": [51, 68, 72], "0mb": [72, 121], "0u": 36, "0x0": 119, "0x00000000": 119, "0x0000000060000fb0": 119, "0x0000000060002f10": 119, "0x0000000061000fb0": 119, "0x0000000061025be0": 119, "0x0000000061026e60": 119, "0x00000002": 119, "0x00000003": 119, "0x00000004": 119, "0x00000006": 119, "0x0000000c": 119, "0x00000013": 119, "0x00000053": 119, "0x00000153": 119, "0x00000553": 119, "0x00001553": 119, "0x00005553": 119, "0x000interrupt": 119, "0x07": 123, "0x08": 123, "0x0e": 123, "0x0f1f0000": 119, "0x1030e4e50": 143, "0x14": 123, "0x177d12": 13, "0x1ba2f8": 13, "0x1ba35c": 13, "0x1c4126": 13, "0x20000de8": 119, "0x22": 123, "0x23": 123, "0x271da48": 146, "0x278d9b0": 146, "0x293a5780": 204, "0x31831960": 204, "0x48": 13, "0x48102000": 119, "0x61025be0": 119, "0x7f4bd889b580": 123, "0x7fab4f7a8d12": 13, "0x7fab4f7eb2f8": 13, "0x7fab4f7eb35c": 13, "0x7fab4f7f5126": 13, "0x7fab500b8ca8": 13, "0xffff0022": 119, "1": [2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 17, 18, 20, 22, 23, 30, 31, 32, 36, 37, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 130, 132, 134, 135, 136, 138, 139, 140, 146, 147, 148, 150, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 185, 186, 187, 189, 191, 192, 193, 194, 195, 198, 200, 201, 202, 204, 206, 209, 210, 212], "10": [2, 4, 8, 17, 20, 22, 23, 36, 43, 44, 49, 62, 66, 67, 68, 69, 71, 75, 85, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 122, 123, 126, 129, 132, 135, 136, 146, 147, 152, 155, 159, 160, 161, 162, 166, 169, 171, 172, 173, 177, 178, 181, 183, 185, 187, 188, 191, 192, 193, 194, 195, 200, 201, 202, 204, 206, 208, 210, 211], "100": [36, 51, 68, 72, 73, 74, 90, 104, 106, 108, 117, 118, 121, 124, 146, 147, 152, 161, 170, 171, 185, 187, 189, 192, 201, 202, 204, 208, 210], "1000": [46, 48, 50, 51, 68, 69, 70, 71, 73, 75, 85, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 111, 118, 119, 121, 123, 126, 171, 200, 201, 202, 204, 206, 210], "10000": [97, 105, 107, 113, 160, 204, 211], "10000000000000001": 111, "1001": [53, 99, 100, 106, 119], "100352": [129, 204], "100576": 129, "1008": 52, "100800": 129, "101": [68, 93], "101024": 129, "101248": 129, "101472": 129, "101696": 129, "101920": 129, "102": [68, 74], "1024": [1, 37, 56, 61, 67, 68, 70, 75, 89, 90, 96, 97, 99, 100, 101, 104, 109, 110, 118, 121, 130, 132, 135, 139, 163, 200, 204, 208, 210], "1024x1024": 200, "103": [68, 106, 117], "1036": 52, "103mb": 68, "104": [68, 69, 70, 71], "10454400": 104, "104623": 0, "1048576": [90, 200, 208], "104m": 72, "105": [68, 117], "1050": 107, "1054": [99, 100], "10556": 126, "1056": 106, "1059": 107, "106": [68, 211], "1067": 123, "107": 68, "1070": 75, "1076": 106, "108": [68, 129], "1080": 106, "1080ti": [106, 180], "1084": 106, "108651": 90, "1088": [96, 106], "1089714": 126, "108mb": 68, "109": [68, 97, 129], "1090": 126, "1097": 98, "1097323f3970e5c881ad3a0028ca79cb": 98, "10b8215aaf2e14d47d40b4093e6f41a0": 98, "10x10": 201, "11": [0, 17, 59, 65, 68, 70, 85, 96, 97, 98, 99, 100, 105, 106, 107, 108, 111, 113, 118, 129, 134, 143, 161, 169, 171, 173, 187, 191, 192, 193, 202, 204, 206, 207, 210], "110": [68, 129], "110592": 96, "111": [47, 68, 74, 95, 198, 202], "1111": 105, "1112": 202, "111m": 72, "112": [68, 74, 85, 97, 98, 99, 100, 111, 129, 204, 206], "1120": 129, "1122": 107, "112307": 30, "112374": 208, "1123741275": 208, "1125": 106, "11264": 113, "113": [47, 68, 97, 98, 99, 100, 124, 211], "1131": [99, 100], "11327": 8, "1136": 98, "114": [49, 68, 74], "1141": 106, "114245": 90, "115": [49, 68, 98, 210], "1152": 96, "115200": 118, "116": [68, 103], "1166": 107, "117": [68, 69, 70, 71], "1179648": 89, "118": [68, 93], "1181": 119, "1184": 106, "119": [68, 93, 99, 100], "1190": 210, "119m": 72, "12": [55, 64, 68, 69, 70, 71, 75, 77, 80, 85, 89, 96, 97, 98, 99, 100, 105, 106, 107, 108, 111, 119, 125, 129, 161, 169, 173, 183, 187, 198, 201, 202, 204, 206, 210, 211], "120": [68, 124, 161, 169], "1200256712": 208, "120026": 208, "121": [68, 124, 171], "1216": 96, "12190": 17, "122": [68, 73, 98], "12230": 7, "12288": 89, "123": [68, 69, 70, 71], "1234": 7, "12369": 7, "124": 68, "1242714": 30, "12436": 0, "125": 68, "12544": [97, 129], "126": [68, 129], "126m": 72, "127": [27, 47, 56, 58, 67, 68, 69, 97, 99, 105, 106, 107, 129, 157, 183], "1272": 106, "128": [6, 20, 22, 23, 25, 27, 30, 31, 66, 68, 75, 82, 85, 96, 97, 98, 99, 100, 101, 107, 111, 118, 124, 129, 132, 134, 147, 159, 160, 170, 171, 180, 181, 183, 185, 200, 201, 204, 206], "1280": 96, "12845056": 89, "1289": 73, "128x128": [89, 123], "129": [68, 183], "12x": 74, "13": [50, 51, 53, 55, 67, 68, 70, 71, 72, 73, 85, 93, 96, 97, 98, 99, 100, 105, 106, 107, 111, 129, 160, 161, 169, 170, 171, 173, 187, 198, 202, 204, 206, 207, 208, 210, 211], "130": [68, 98, 202, 210], "131": [7, 68], "131072": [89, 129], "13144": 123, "132": [68, 183], "1327121472": 201, "13296": 98, "133": [68, 97], "134": [68, 183], "1341405024": 201, "1344": [96, 97, 106, 129], "134m": 72, "135": [68, 198, 207], "1357": 108, "136": [68, 97], "136407": 90, "137": 68, "138": [68, 126], "1381": 106, "138312": 90, "139": 68, "1391": 106, "13t13": 212, "14": [58, 59, 68, 72, 77, 85, 88, 89, 96, 97, 98, 99, 100, 105, 106, 107, 108, 111, 118, 123, 125, 129, 148, 164, 169, 170, 173, 180, 185, 187, 198, 202, 204, 206, 210, 212], "140": [68, 126, 183], "140466694": 208, "140467": 208, "1408": 96, "1409": 171, "141": 68, "141m": 123, "142": 68, "1428": 210, "142m": 72, "143": [68, 93, 98], "14300": 17, "1433": 126, "143m": 123, "144": [68, 129, 183], "1448604": 30, "1449": 98, "145": [68, 98, 109, 129, 137, 198], "146": [68, 117, 129, 202], "147": 68, "1472": 96, "147456": 96, "148": 68, "14820412": 43, "14820413": 43, "149": [68, 93, 99, 100], "14907646": 43, "14907649": 43, "1497723": 30, "149m": 72, "15": [0, 51, 67, 68, 85, 89, 90, 95, 96, 97, 98, 99, 100, 105, 106, 107, 108, 111, 116, 117, 119, 120, 122, 124, 129, 134, 143, 146, 160, 161, 164, 169, 173, 186, 187, 198, 202, 206, 207, 210], "150": [68, 99, 100, 106, 147, 204], "1500": [104, 105, 202], "1502": 187, "150528": [129, 204], "1506": [168, 187], "150752": 129, "150976": 129, "151": [68, 99, 100], "1511": 171, "1512": 171, "151200": 129, "151424": 129, "151648": 129, "151872": 129, "151mb": 73, "152": 68, "152096": 129, "152506": 30, "1526": 98, "153": [68, 202], "1536": [89, 96, 97], "1539": 100, "153m": 123, "154": [68, 93], "15410859170000002": 208, "154109": 208, "1549": 107, "155": [68, 99, 100], "1554": 0, "1556": 171, "156": [68, 202], "1568": 129, "156m": 72, "157": [68, 99, 100], "15732142": 43, "15732145": 43, "158": [68, 93], "159": [68, 99, 100], "1598": 108, "15991737": 43, "15991738": 43, "15u": 85, "16": [31, 65, 66, 68, 69, 73, 74, 82, 85, 89, 93, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 110, 111, 113, 119, 123, 126, 129, 130, 134, 139, 147, 163, 169, 171, 172, 173, 183, 185, 186, 187, 201, 202, 204, 206, 208, 210], "160": [68, 93], "1600": 96, "1602": 106, "1605632": 89, "1607": 170, "161": [55, 68, 171, 198], "16162783": 43, "16162789": 43, "161mb": 68, "162": [68, 71, 105, 109, 129], "163": [68, 93, 129], "16384": [6, 89, 183, 200], "1639242": 201, "164": [68, 129], "164m": 72, "165": [68, 75], "1658": 108, "166": [68, 72, 99, 100], "1664": 96, "167": 68, "167935": 201, "168": [68, 70, 72], "1680": 98, "1684": 108, "169": [47, 68, 171], "1694": 98, "16x16x16": 89, "16x64": 139, "17": [68, 72, 85, 96, 97, 98, 99, 100, 105, 106, 107, 111, 129, 143, 160, 169, 202, 206, 210], "170": [68, 99, 100], "1703": [170, 187], "170m": 72, "171": 68, "17177": 30, "172": [68, 121, 125, 198, 202], "1728": 96, "173": 68, "1732589428": 201, "1732589429": 201, "1732589430": 201, "1732589432": 201, "1732589433": 201, "1732589435": 201, "1732589436": 201, "1732589437": 201, "1732589438": 201, "1732589439": 201, "1734": 108, "174": 68, "1745": 108, "175": [68, 93], "1754": 126, "17540497": 126, "1755": 108, "176": [68, 99, 100], "1763": 98, "177": [68, 99, 100, 202], "177475": 0, "177534": 0, "177549": 0, "1777": 72, "178": 68, "179": [68, 93, 128], "1792": 96, "17u": 85, "18": [3, 62, 67, 68, 69, 85, 90, 93, 95, 96, 97, 98, 99, 100, 105, 106, 107, 108, 111, 129, 148, 161, 169, 171, 198, 202, 206, 208, 210, 211], "180": [68, 129], "1803": 170, "181": 68, "182": [68, 108], "182mb": 68, "183": 68, "1832": 98, "184": [68, 93], "184320": 96, "185": [68, 123, 202, 210], "1856": 96, "186": 68, "186745": 30, "186mb": 68, "187": 68, "1874": 98, "1879": 123, "188": 68, "189": [68, 99, 100], "189993": 0, "18_graph_opt": 108, "18x": 208, "19": [68, 69, 85, 93, 96, 97, 98, 99, 100, 105, 107, 108, 111, 119, 129, 171, 187, 198, 202, 206, 207, 210], "190": [13, 68], "190027": 0, "191": 68, "1912": 108, "192": [68, 70, 96, 97, 98, 99, 100, 123, 202, 210], "1920": 96, "19260": 97, "1927": 108, "193": [68, 210], "1933": 98, "194": [68, 97, 202], "194410": 0, "194440": 0, "195": 68, "1955": 108, "196": [68, 89, 97, 98], "197": [68, 202], "198": [68, 202], "1984": 96, "199": [68, 99, 100], "1995": 106, "19992": 97, "199mb": 68, "1_nchw1c": 0, "1b": 113, "1d": [53, 148, 160, 161, 168, 169, 170, 186, 187], "1e": [31, 43, 90, 96, 101, 104, 113, 126, 129, 132, 134, 139, 160, 161, 170, 171, 187, 194, 200, 201, 204, 206, 208], "1e3": [88, 89], "1f": [98, 100, 164], "1m": 72, "1mb": 72, "1st": [67, 183], "1x1": [58, 75], "2": [2, 4, 5, 6, 7, 11, 12, 13, 14, 17, 23, 24, 29, 30, 31, 32, 35, 36, 37, 43, 45, 46, 47, 48, 49, 50, 53, 56, 58, 59, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 82, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 129, 130, 134, 135, 136, 139, 140, 146, 147, 148, 150, 155, 156, 158, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 185, 186, 187, 188, 189, 191, 192, 193, 195, 198, 200, 202, 204, 206, 209, 210], "20": [0, 4, 36, 51, 62, 68, 77, 85, 96, 97, 98, 99, 100, 104, 106, 107, 108, 111, 113, 116, 117, 122, 123, 129, 157, 161, 169, 172, 202, 206, 207, 208, 210], "200": [68, 90, 93, 97, 98, 99, 100, 123], "2000": [106, 108, 110], "20000": [97, 98, 99, 100, 111], "2004": 0, "200k": 5, "201": [68, 171], "2014": [118, 161, 170, 171, 187], "2015": [90, 171, 191], "2016": [160, 161, 163, 170, 171], "2017": 123, "2018": 196, "2019": [80, 119, 143, 160, 161], "202": [68, 93, 202], "2020": [148, 196], "2021": [6, 119, 196], "2022": [196, 212], "20221208": 7, "2023": 49, "2026": 98, "203": [68, 202], "2036": 98, "203777": 30, "204": [68, 202], "2046": 98, "2048": [68, 89, 96, 100, 113, 200], "205": [68, 202], "2050": 98, "2051": 98, "2053": 98, "206": [68, 202], "206718867753792": 208, "207": [68, 202], "208": [51, 67, 68, 70, 71, 72], "209": 68, "21": [68, 85, 93, 96, 97, 98, 99, 100, 105, 111, 119, 129, 160, 161, 169, 202, 206, 210], "210": [68, 202], "2103u": 85, "211": [68, 91, 198], "2112": [96, 97], "212": 68, "2128": 108, "2129": 106, "213": 68, "213108": 0, "214": [24, 68, 198], "2147483647": 99, "2147483648": 140, "215": [68, 99, 100, 108], "216": [68, 204], "217": [67, 68], "2176": 96, "218": [68, 93], "219": [68, 202, 210], "219323659700001": 208, "219324": 208, "219k": 123, "22": [68, 72, 85, 95, 96, 98, 99, 100, 105, 107, 111, 113, 129, 169, 187, 192, 198, 201, 202, 206, 210], "220": [68, 99, 100, 104], "221": [68, 73], "221184": 96, "221638": 30, "222": [68, 194, 202], "222675": 89, "223": [51, 67, 68, 70, 71, 72, 73], "224": [0, 46, 48, 49, 50, 51, 53, 59, 65, 67, 68, 69, 70, 71, 73, 74, 85, 97, 98, 99, 100, 105, 106, 107, 108, 111, 119, 121, 129, 171, 194, 202, 204, 206, 210], "2240": 96, "224x224": [49, 119, 123, 202, 210], "225": [50, 51, 67, 68, 73, 97, 99, 121, 129, 202, 210], "226": [68, 204], "2263": 123, "2265": 0, "227": [47, 68, 98, 100, 202], "2271": 108, "2273": 108, "2279": 108, "228": 68, "229": [50, 51, 67, 73, 121, 202, 210], "2295": 108, "22___x5u76h0p": 212, "22ff38dff": 7, "23": [66, 68, 85, 96, 97, 98, 99, 100, 103, 105, 107, 111, 119, 129, 198, 202, 206, 210], "230": 108, "2304": 96, "231": [99, 100], "2311u": 85, "2325": 106, "23273": 44, "2334": 67, "2346": 98, "235": [99, 100, 132], "2359296": 96, "23631": 44, "2366": 67, "2368": 96, "237": [99, 100], "238": [55, 198], "2383": 106, "2384": 69, "23891": 110, "23897": 44, "23906": 44, "23987": 44, "24": [0, 17, 68, 69, 85, 96, 97, 98, 99, 100, 105, 106, 108, 111, 129, 143, 160, 161, 163, 169, 201, 202, 204, 206, 210, 211], "240": [106, 211], "24140": 44, "2432": 96, "24324": 44, "2435": 108, "24413": 44, "24473": 44, "24541": 44, "24728985999536": 202, "24746": 110, "24775": 110, "2496": 96, "2497": 108, "24994": 110, "25": [0, 67, 68, 77, 85, 96, 99, 100, 105, 106, 107, 108, 111, 123, 129, 146, 198, 201, 202, 204, 206, 210, 211], "250": [72, 123], "25088": 96, "251": [99, 100], "252": [108, 128, 198], "25203": 110, "25218": 0, "25316": 110, "25497": 110, "255": [49, 53, 64, 72, 123, 135, 202, 210], "25577781e50c611c2e45e73c1cb3a6ca": 98, "256": [18, 20, 43, 44, 50, 51, 67, 68, 73, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 110, 111, 118, 119, 121, 123, 129, 135, 138, 183, 200, 201, 206, 208], "2560": [96, 110, 113], "25690112": 89, "258048": 96, "26": [68, 72, 75, 85, 96, 99, 100, 107, 111, 129, 201, 202, 206, 210, 211, 212], "26020": 110, "262": [45, 105], "262144": 204, "2624": 96, "26398": 110, "264": 110, "26465": 110, "266": [99, 100], "2665": 108, "2666": 108, "268": [99, 100], "2688": 96, "27": [6, 30, 51, 68, 85, 96, 97, 99, 100, 105, 111, 129, 169, 187, 202, 206, 210], "270": 93, "27014u": 85, "2708": 126, "27100u": 85, "2720": 108, "2722e": 208, "273": [55, 198], "27511u": 85, "2752": 96, "27592242": 43, "27592248": 43, "277": 67, "27711u": 85, "278": 93, "2789": 106, "28": [0, 30, 56, 64, 68, 85, 93, 96, 97, 98, 99, 100, 106, 111, 129, 169, 171, 181, 194, 201, 202, 206, 210], "280": [67, 77, 198], "281": [51, 67], "2816": 96, "282": [46, 50, 67, 121], "283": [45, 53, 198], "28434217": 43, "28434223": 43, "285": [48, 67], "287": 67, "2877": 126, "2877355": 126, "288": 93, "2880": 96, "29": [30, 66, 68, 72, 75, 85, 96, 97, 98, 99, 100, 107, 110, 111, 126, 129, 202, 206, 211], "2905": 106, "2909": 126, "2909307": 126, "291": [29, 198], "292": [77, 198], "29203u": 85, "29220u": 85, "2930": 67, "29324u": 85, "29339u": 85, "2944": 96, "294912": 96, "295": [97, 137], "297": 93, "298668": 30, "299": [52, 74, 97, 98, 99, 100, 105, 106, 107, 108, 171], "2beb39e9afe4c74822fffbcbb8533595": 100, "2d": [34, 67, 89, 105, 106, 107, 108, 148, 160, 161, 168, 169, 170, 183, 186, 187, 202], "2d10de6646307f0e3e5cf4b31c20e69b": [98, 100], "2e": [85, 206], "2f": 84, "2k": 170, "2m": [51, 72], "2mb": [51, 72], "2nd": [36, 67, 183], "2pi": 122, "2x1": 123, "2x128x128": 89, "2x2": [58, 170, 187], "2x2x2": 170, "2x4": 89, "3": [0, 2, 3, 4, 5, 6, 8, 11, 12, 13, 14, 17, 32, 36, 43, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 82, 83, 84, 85, 88, 89, 90, 91, 93, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 134, 138, 139, 140, 146, 147, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 180, 181, 183, 185, 187, 189, 191, 193, 194, 198, 200, 201, 202, 204, 206, 209, 210, 212], "30": [30, 51, 55, 56, 66, 68, 72, 85, 96, 97, 98, 106, 107, 111, 123, 129, 198, 202, 206, 210], "300": [72, 96, 98, 119], "3000": 202, "3008": 96, "3009": 108, "300_etho": 119, "300k": 60, "301": 93, "30387": 52, "304": 107, "305": [24, 107], "3060808fc5c74e18b1276729071fbae0": 100, "3072": [75, 89, 96, 200], "3075": 74, "308": [72, 117, 202, 210], "309": [72, 83, 95, 198], "3090": 111, "30m": 106, "31": [30, 68, 85, 96, 97, 98, 105, 106, 107, 111, 129, 134, 135, 136, 156, 169, 187, 201, 202, 204, 206, 210], "310": 93, "3112": 98, "312": 117, "3136": [97, 129], "3159087": 30, "316": 47, "3166": 31, "317": 117, "3170": 100, "32": [30, 31, 36, 55, 56, 68, 70, 75, 85, 89, 90, 96, 97, 99, 101, 104, 105, 109, 111, 113, 118, 123, 129, 134, 135, 136, 138, 139, 147, 159, 163, 167, 169, 181, 183, 185, 186, 194, 195, 198, 200, 201, 202, 204, 206, 208, 210, 212], "320": [96, 98, 99, 100], "32000": 113, "321": 93, "3211264": 89, "321507": 90, "3221": 126, "3221247": 126, "3225": 126, "32251418": 126, "325": 105, "325028": 90, "327": 93, "3274": 108, "32768": [70, 90, 139, 208], "328": 123, "3289": 31, "32bit": 56, "32kb": 90, "32t": [105, 106, 107], "32x32": 90, "33": [30, 68, 85, 91, 96, 97, 101, 105, 106, 108, 111, 123, 129, 187, 198, 202, 206, 210], "331776": 96, "332": 97, "333": 96, "338": 97, "33805236": 126, "3381": 126, "33909": 52, "34": [30, 68, 77, 85, 96, 97, 107, 108, 111, 129, 187, 198, 202, 206, 210], "340": [52, 55, 99, 100, 198], "340282346638528859811704183484516925440": 204, "341": 74, "345": [70, 71, 72], "347": [55, 97, 198], "3487": 106, "349": [74, 97], "35": [51, 68, 72, 77, 85, 96, 105, 107, 111, 129, 198, 202, 206], "3520": 73, "356378": 202, "356379": 202, "3570": 106, "358": [99, 100], "3581": 106, "36": [68, 72, 85, 91, 96, 105, 106, 107, 111, 128, 129, 198, 202, 206, 211], "360": [93, 108], "364": [29, 198], "365": [77, 105, 198, 202], "3656": 74, "367": 44, "367179": [202, 210], "367181": [202, 210], "368366": 208, "3683661528": 208, "36864": 96, "368640": 96, "37": [68, 69, 72, 77, 85, 96, 97, 99, 100, 105, 111, 113, 114, 129, 169, 187, 198, 201, 202, 206, 210], "3718": 108, "372": [105, 108], "37471": 30, "375": [69, 70, 71], "376": 121, "377981": 30, "379992": 208, "3799922638": 208, "38": [68, 85, 96, 97, 107, 111, 129, 198, 202, 206, 207, 211], "380": 93, "381": 210, "384": [96, 97, 98], "38552500208b25b4035682b0e93cbce3": 100, "386": [74, 93, 125, 198], "3869": 108, "387": 74, "387294": 88, "389": 72, "38f": [98, 100], "39": [68, 72, 85, 93, 96, 97, 98, 105, 106, 107, 111, 202, 206], "391": 97, "392": 96, "3925": 106, "393216": 89, "395": [69, 70, 71, 198, 207], "398": 110, "3989": 108, "3992": [99, 100], "3aissu": 7, "3b": [105, 107, 109, 180], "3d": [148, 160, 161, 168, 169, 170, 187], "3f": [84, 96, 101, 200], "3mb": 72, "3rd": 183, "3rdparti": 160, "3x": 49, "3x3": [58, 170, 187], "3x3x3": 170, "4": [0, 5, 6, 30, 31, 35, 36, 47, 48, 51, 56, 58, 62, 66, 67, 68, 69, 72, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 119, 120, 123, 124, 125, 128, 129, 130, 134, 136, 146, 147, 148, 160, 161, 162, 164, 167, 168, 169, 170, 171, 172, 173, 180, 181, 183, 185, 186, 187, 189, 191, 192, 193, 198, 200, 201, 202, 204, 206, 209, 210, 211], "40": [68, 85, 96, 97, 98, 99, 100, 106, 107, 117, 125, 169, 183, 198, 202, 206], "400": [104, 108], "4000": [120, 202], "4009": 172, "402": 44, "40282e": [98, 100], "403": [99, 100], "4031": 72, "405504": 96, "406": [50, 51, 67, 73, 105, 121, 202, 210], "407": 72, "407558": 0, "407600": 0, "4090": 106, "4093": 106, "4096": [89, 90, 101, 116, 117, 122, 200, 208], "409874": 0, "409905": 0, "40b1cf1fd37b0ef111b3cc0247302508": 98, "41": [56, 68, 85, 96, 169, 187, 202, 206], "4104991499996": 202, "412544": 30, "414": 108, "4141": 67, "4145": 67, "4152": 67, "4161": 73, "417": 202, "418003": 30, "419": [69, 202], "42": [51, 68, 85, 96, 107, 114, 202, 206, 210], "421": 107, "4215": 74, "428276": 30, "4286": 106, "42m": 121, "43": [0, 68, 72, 85, 96, 97, 98, 107, 110, 128, 169, 206, 210], "4309": 126, "43092003": 126, "434": [99, 100], "436": 117, "4375": 0, "4379401206970215": 201, "44": [0, 47, 51, 55, 68, 85, 96, 98, 106, 198, 202, 206, 210], "440": 204, "441": 204, "442": 204, "442368": 96, "443": 204, "444": 204, "4443792": 122, "4444907": 126, "4445": 126, "445": [44, 126, 137, 198, 204], "446": [93, 106, 204, 206], "447": [47, 108, 204], "448": [93, 96, 97, 98, 99, 100, 105, 129, 204], "449": [107, 204], "45": [47, 68, 85, 96, 105, 106, 107, 108, 123, 202, 206], "450": [107, 204], "456": [50, 51, 67, 73, 121, 202, 210], "4591": 126, "4591298": 126, "46": [7, 51, 52, 55, 68, 75, 85, 96, 105, 107, 121, 123, 125, 198, 202, 206], "4608": 96, "4636": 106, "4647": 73, "465": [69, 105], "46622": 30, "467": 55, "469": 108, "47": [55, 68, 85, 96, 98, 99, 100, 105, 123, 198, 202, 206, 210, 211], "471": [47, 202], "4724": 119, "4770hq": 90, "4783053": 201, "479": [110, 210], "479232": 96, "48": [68, 72, 85, 96, 107, 119, 129, 198, 202, 204, 206, 207, 210, 211], "480": [105, 106], "481": 108, "482": 97, "484": 160, "484e": 109, "485": [50, 51, 67, 73, 121, 202, 210], "487": [108, 202], "4899": 106, "49": [68, 69, 85, 96, 97, 98, 100, 116, 147, 201, 202, 206], "4909": 106, "491": 210, "4912": 106, "49152": 70, "4916": 101, "494": 93, "498753": 30, "4992": 98, "4af5640cbcabd364154463f55de7967a": 97, "4b": 97, "4d": 148, "4d0b62f3d01426887599d4f7ede23ee5": [46, 48, 50, 69, 70, 71, 73], "4f6289590252a1cf45a4dc37bce55a25043b8338": 143, "4g": 66, "4gb": [66, 97], "4kb": [90, 208], "4m": [68, 72], "4mb": [51, 72], "4th": [36, 183], "4x2": 89, "4x4": [89, 170, 187], "4x4x4": [89, 170], "4x4x8": 147, "5": [0, 31, 35, 36, 47, 52, 62, 65, 66, 67, 68, 69, 74, 75, 80, 84, 85, 90, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 129, 132, 136, 146, 147, 152, 155, 160, 161, 164, 168, 169, 170, 171, 173, 174, 183, 185, 187, 189, 191, 193, 194, 195, 198, 200, 201, 202, 204, 206, 209, 210], "50": [48, 55, 67, 68, 75, 85, 90, 95, 96, 97, 98, 99, 100, 105, 106, 107, 108, 118, 123, 136, 147, 169, 171, 198, 202, 206, 210, 211], "500": [96, 97, 98, 99, 100, 101, 126, 147, 198, 200, 207], "5000": [67, 119, 123, 169, 187], "5001": [67, 119], "5002": [67, 119], "5003": [67, 119], "5004": 67, "5007": 106, "50176": [129, 204], "501760": 204, "50192": 204, "50208": 204, "50224": 204, "50240": 204, "50256": 204, "50272": 204, "504": 110, "50400": 129, "506": 117, "50624": 129, "508": 108, "50848": 129, "50m": 51, "50x": 171, "51": [68, 72, 85, 96, 105, 202, 206, 210], "5100": 67, "5105896": 126, "5106": 126, "51072": 129, "512": [17, 58, 68, 85, 88, 89, 96, 97, 98, 99, 100, 101, 104, 108, 111, 118, 120, 129, 134, 139, 200, 201, 202, 204, 206, 208], "51263182d16c92649a48144ba56c0945f9fce60": 120, "51296": 129, "512x512": 201, "513": 93, "513210000022809e": 208, "5139": 100, "514": [202, 210], "514535": 0, "514567": 0, "51520": 129, "515644": 30, "516": 202, "516096": 96, "516582": 0, "516628": 0, "51744": 129, "519": 202, "52": [0, 68, 69, 73, 77, 85, 96, 105, 106, 107, 198, 202, 206, 210], "522": [99, 100, 108], "523": [125, 198], "524288": 139, "527": 202, "5278": 74, "529": 210, "5291": 73, "52ea56a3ba2b8548ac83748ee8a69093": 97, "53": [68, 72, 85, 88, 96, 97, 106, 201, 202, 206, 210], "530": [69, 200], "5314975": 201, "533": [47, 202], "534": [106, 210], "5340": 199, "534029": 30, "5361466": 30, "537": 52, "538": 202, "54": [68, 84, 85, 96, 110, 129, 202, 206, 211], "541": [55, 106, 113, 114, 198], "541856": 0, "541893": 0, "543452": 0, "544": [105, 107], "545": [99, 100, 107], "548": [93, 198, 207, 208], "549": [68, 77, 198], "55": [0, 68, 85, 96, 97, 98, 99, 100, 104, 119, 121, 129, 202, 206, 210], "552960": 96, "5546844": 201, "558": 202, "559": 210, "5599": 126, "5599416": 126, "56": [0, 68, 84, 85, 96, 97, 98, 99, 100, 106, 111, 129, 163, 202, 204, 206, 210, 211], "560": 47, "560297": 30, "561168": 126, "5612": 126, "561228": 90, "563": 105, "5632": 113, "564": [93, 105], "565": 93, "567": [95, 98, 198], "569": 93, "56da86c7b2bc22e4d100fe5b39dce716": 97, "57": [0, 68, 69, 70, 71, 72, 85, 96, 97, 98, 99, 100, 105, 110, 123, 125, 198, 202, 206, 210], "570": 93, "572": 110, "5728538": 201, "57344": 89, "574286": 30, "575": 93, "576": [96, 97, 105, 108], "577": 47, "58": [0, 44, 68, 69, 70, 71, 77, 85, 96, 198, 202, 206, 210], "581": 202, "582": [99, 100, 107], "583": 93, "58394": 52, "585": [83, 198], "5852168": 201, "587": [93, 98, 202], "589824": 96, "59": [68, 72, 84, 85, 96, 105, 106, 202, 206, 210], "596851": 30, "596b27d23537e5a1b5751d2b0481ef172f58b539": [46, 48, 50, 69, 70, 71, 73], "597": [99, 100], "598": 108, "5981": 169, "5_0": 69, "5_224": 69, "5bci": 7, "5d": 7, "5eb24e3b019f84200645bd001e9caae9": 171, "5f": 52, "5k": 123, "5m": [68, 72], "5mb": 72, "5x": 75, "5x5": [58, 201], "6": [0, 7, 17, 36, 47, 51, 65, 68, 72, 75, 84, 85, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 111, 113, 115, 116, 119, 121, 125, 129, 147, 148, 160, 161, 168, 169, 173, 183, 187, 191, 193, 198, 201, 202, 204, 206, 209, 210], "60": [67, 68, 69, 85, 90, 96, 106, 107, 108, 129, 202, 206, 210], "600": [66, 67, 93, 106], "600k": [5, 60], "601": 106, "602": 105, "605": [99, 100], "6065995ec7d6d6ae2eae7d4e874e8441": 97, "607": [44, 202], "6071821": 126, "6072": 126, "608": [93, 105, 106, 107], "608x608": 47, "61": [0, 68, 72, 85, 96, 202, 206, 210], "610550": [202, 210], "610553": [202, 210], "611": 107, "614": 210, "61440": 89, "61481": 52, "6169946842323387": 208, "618934947664931": 202, "6199": 69, "62": [0, 51, 68, 85, 96, 98, 107, 202, 206], "621": [99, 100], "621044635772705": 201, "621103": 202, "621104": 202, "624": 202, "625": 204, "627": 98, "6272": 96, "63": [68, 85, 96, 99, 100, 108, 136, 201, 202, 206, 210], "632": 202, "635": 105, "636": 93, "64": [0, 6, 30, 37, 62, 66, 68, 75, 84, 85, 88, 90, 96, 97, 98, 99, 100, 107, 111, 113, 123, 129, 136, 139, 146, 147, 156, 170, 171, 183, 185, 201, 202, 204, 206, 208, 210], "640": [96, 107], "642": 210, "6422528": 89, "644": 93, "6442": 126, "64420664": 126, "645": 210, "648": [108, 210], "6491384506225586": 201, "64b7ce5264a64cb340d78b444b0325e6": 98, "64bit": [56, 80, 97], "64x32": 89, "64x64": 123, "65": [68, 85, 96, 105, 107, 202, 206, 210], "650": [99, 100], "6508": 74, "652": [99, 100], "65348685": 126, "6535": 126, "654": 29, "655": 93, "65536": [139, 204], "6593147843877053": 208, "66": [68, 72, 85, 96, 105, 106, 183, 202, 206, 210], "660": 93, "662": [99, 100], "664": [99, 100], "6666": 157, "67": [51, 68, 69, 75, 85, 96, 105, 108, 202, 206, 210], "670": 107, "672": [49, 105, 107, 108, 129], "672x672": 49, "673": 210, "675": [93, 202], "676": [69, 77, 117, 198], "68": [44, 68, 85, 96, 107, 201, 202, 206, 210], "681": 93, "6844": 146, "6847": 126, "6847217": 126, "686": [73, 77, 97, 99, 100, 198], "687": 117, "689": [47, 99, 100], "69": [51, 68, 72, 85, 96, 98, 106, 108, 202, 206, 210], "693": [91, 198], "6936905": 30, "698": [93, 114], "6c4f6234946e16bcf9e48bdf289f9200": 98, "6d012ba18a086c11ee2b85c7324e16f2": [98, 100], "6d2a3ff0fc84a990f7c7fc00e597955f": 97, "6d628209072e3e3dd8f49359935acea6": [99, 100], "6m": [72, 73], "6mb": [51, 72], "6x": 105, "7": [8, 17, 51, 58, 59, 65, 66, 68, 69, 72, 80, 84, 85, 89, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 111, 113, 115, 125, 126, 129, 137, 143, 147, 148, 160, 161, 169, 170, 172, 173, 183, 186, 187, 198, 201, 202, 204, 206, 209, 210, 211], "70": [68, 72, 85, 96, 99, 100, 107, 202, 206, 210], "700": 134, "701": 202, "701006": 30, "702": 106, "704": [96, 97, 106, 107], "707": [50, 55, 198], "707777": 30, "708": [107, 202], "71": [68, 72, 85, 96, 99, 100, 107, 201, 202, 206, 210], "7109102": 30, "715": [83, 198], "72": [17, 68, 72, 85, 96, 129, 202, 206], "720": [125, 161, 169], "7234": 49, "724": 105, "7240881": 30, "726": [198, 200, 207], "727": 210, "73": [51, 68, 72, 85, 98, 99, 100, 106, 107, 129, 202, 206, 210], "7321": 187, "7340": 126, "734003": 126, "736": [105, 106, 107, 202], "73728": 96, "738": 93, "739": [97, 202], "739925": 30, "74": [68, 72, 85, 107, 108, 129, 202, 206, 210], "7428664900006": 202, "745": 106, "747": [97, 107], "74788": 30, "748": [137, 198], "7486660480499268": 201, "749": 106, "75": [68, 72, 75, 85, 107, 108, 170, 187, 198, 201, 202, 204, 206, 210], "750": 204, "751": 107, "7542": 126, "7542034": 126, "756": 210, "759": 97, "76": [68, 72, 85, 105, 106, 202, 206, 210], "761": 202, "765": [137, 198], "766": [123, 210], "768": [75, 96, 97, 106, 108], "7680": 97, "769": [198, 211], "7698903": 201, "76afb7bf408a1ffa0b8b7bc09d077dc3": 100, "77": [0, 44, 68, 71, 72, 85, 105, 109, 202, 206], "7713876": 126, "7714": 126, "7735": 73, "774": [99, 100], "775": 44, "776": 202, "777": 97, "777018": 30, "78": [51, 68, 85, 97, 98, 106, 108, 202, 206], "7802111": 30, "784": [18, 20, 22, 23, 43, 44, 97, 108, 110, 159], "785": 117, "7887001": 30, "79": [68, 72, 85, 108, 201, 202, 206], "793884": 30, "799": 202, "7c2a4f1f432f81c44985590780dfb52d": 98, "7d79c516e212fe1d73f5dbb90eaca2cf": [97, 98, 99, 100], "7f3fee61bc3c2604395f5d343b840b7c": 98, "7m": 51, "7mb": 72, "8": [0, 31, 47, 55, 62, 64, 66, 67, 68, 69, 73, 74, 75, 82, 85, 88, 89, 93, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 111, 113, 115, 118, 119, 123, 125, 129, 130, 134, 138, 143, 147, 148, 160, 161, 167, 169, 170, 173, 176, 183, 185, 186, 187, 194, 198, 200, 201, 202, 204, 206, 209, 210], "80": [13, 68, 69, 85, 99, 100, 105, 106, 183, 204, 206, 210], "800": [97, 99, 100, 105, 106, 107, 202, 210], "8000": [108, 111], "802816": [89, 129], "803": 106, "807": 117, "808": 100, "809": 100, "81": [68, 72, 85, 105, 106, 202, 206], "8144": 123, "81556547": 126, "8156": 126, "816": 100, "8192": [89, 200], "819363": 126, "8194": 126, "82": [68, 85, 206, 211], "820": [69, 125, 198], "82429": 30, "828": [95, 100, 198], "83": [13, 47, 68, 69, 72, 75, 85, 105, 106, 107, 202, 206, 210], "831": [117, 125, 198], "832": [93, 96, 100], "83323884": 30, "837336": 30, "8385": 126, "8385232": 126, "838889": 201, "839": [198, 202, 207], "84": [68, 85, 97, 99, 100, 106, 117, 201, 202, 206], "8444": 126, "84443563": 126, "845": [95, 97], "8486317999841": 202, "85": [68, 75, 85, 93, 105, 107, 202, 206, 210, 211], "851": 210, "8517829": 126, "8518": 126, "855": 117, "85951": 30, "86": [68, 85, 98, 99, 100, 107, 202, 206], "860": [47, 55, 198], "8602607": 126, "8603": 126, "861": 93, "862": [99, 100, 106], "8630": 126, "8630226": 126, "8635382652282715": 201, "864": [105, 106, 107], "8649082183837891": 201, "8660": 187, "868": [99, 100], "8696e": 208, "87": [68, 85, 97, 105, 106, 202, 206], "88": [68, 72, 85, 98, 99, 100, 107, 202, 206, 210], "884": 97, "8840832710266113": 201, "8863484859466553": 201, "887": 77, "8888": 142, "88a2e34d300a6ccfcf0228f0b90f13ec": 99, "88m": [68, 72], "89": [68, 72, 73, 85, 106, 202, 206, 210, 211], "8923": 69, "896": [96, 97, 129], "899": 107, "8c53ca2904398da2889aa7508082d7bb": [97, 98, 99, 100], "8k": 123, "8m": [51, 68, 72], "8x8": 88, "9": [0, 17, 51, 67, 68, 70, 71, 73, 77, 80, 85, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 111, 113, 115, 121, 123, 125, 126, 129, 134, 136, 143, 160, 161, 169, 173, 176, 183, 187, 198, 201, 202, 204, 206, 208, 210], "90": [68, 73, 98, 106, 107, 123, 129, 202], "900": 98, "9007365703582764": 201, "903": 106, "908155396589343": 202, "9090": [58, 71, 80, 109, 211], "9091": [70, 80, 174], "9095": 69, "91": [68, 73, 106, 108, 129, 201, 202], "910": [128, 198], "9190": [56, 67, 68, 69, 80, 97, 99, 105, 106, 107, 147], "9191": 80, "9199": 174, "92": [68, 69, 72, 85, 99, 100, 106, 129, 202, 210], "9216": 123, "9264": 123, "9266": 47, "928": [105, 107], "929": 106, "93": [68, 202, 210], "93672b029103648953c4e5ad3ac3aadf346a4cdc": 49, "938": 98, "94": [51, 68, 85, 106, 107, 202, 210], "9408": 129, "941": [198, 207], "943": 106, "9468925": 30, "947": [91, 99, 100], "94949": 30, "95": [68, 75, 85, 108, 201, 202], "953": [77, 198, 210], "954": [99, 100], "957975149154663": 201, "9596794": 30, "95ada510": 143, "96": [68, 72, 106, 107, 108, 118, 202, 204], "960": [96, 106, 107, 202, 210], "9600": 123, "9610": 123, "96691": 30, "9675": 123, "9690": 123, "96x96": 123, "96x96x3": 118, "97": [68, 72, 97, 105, 107, 108, 117, 202, 210], "9711095": 30, "972": [202, 210], "9727085": 201, "9728": 123, "976": 202, "9777": 31, "979": [45, 98, 198], "97964585": 30, "98": [68, 96, 98, 106, 107, 117, 123, 200, 202], "980": [202, 210], "9831": 101, "986": [99, 100], "987213": 30, "988": [93, 95, 123, 125, 198], "98cde4888c94ec7beaa9972f806856d0": 99, "99": [44, 68, 85, 98, 107, 142, 189, 202, 211], "991": 117, "992": [98, 106, 107], "994": 47, "995": 93, "9984": 47, "999": [98, 210], "9m": 51, "9mb": [51, 72], "A": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 20, 25, 27, 30, 31, 34, 35, 36, 37, 46, 48, 49, 50, 51, 53, 56, 58, 61, 62, 65, 67, 68, 72, 73, 75, 79, 80, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 104, 108, 109, 118, 123, 126, 131, 132, 134, 136, 138, 139, 143, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 180, 181, 183, 185, 186, 187, 188, 191, 192, 194, 195, 196, 200, 202, 204, 205, 208, 209, 210, 211], "AND": [161, 169, 187], "AS": 89, "And": [2, 30, 34, 35, 70, 71, 75, 85, 97, 123, 161, 163, 167, 170, 172, 185, 186, 193, 209, 211], "As": [2, 3, 4, 5, 6, 9, 10, 12, 13, 16, 23, 36, 67, 79, 80, 84, 85, 88, 97, 98, 99, 100, 104, 106, 113, 119, 123, 139, 143, 160, 191, 192, 194, 202, 204, 208, 210, 212], "At": [2, 4, 34, 35, 37, 56, 67, 69, 75, 89, 118, 160, 161, 162, 167, 169, 172, 183, 189, 195, 205], "Be": [12, 15, 211], "Being": [11, 129, 162], "But": [3, 22, 80, 123, 129, 204], "By": [18, 20, 35, 49, 58, 66, 67, 68, 80, 84, 90, 97, 98, 99, 100, 104, 109, 116, 118, 122, 123, 129, 138, 139, 146, 147, 150, 158, 160, 161, 162, 163, 165, 167, 169, 172, 178, 180, 181, 183, 187, 192, 201, 202, 208, 210, 212], "For": [1, 2, 3, 4, 5, 6, 8, 9, 10, 15, 16, 17, 20, 22, 23, 25, 27, 30, 34, 35, 36, 37, 39, 41, 43, 44, 48, 50, 51, 52, 56, 58, 59, 62, 64, 65, 66, 67, 69, 72, 73, 74, 75, 79, 82, 84, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 113, 117, 118, 119, 120, 122, 124, 129, 131, 132, 135, 136, 138, 139, 140, 143, 144, 146, 147, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 181, 182, 183, 185, 186, 187, 189, 191, 192, 194, 195, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212], "If": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 20, 30, 34, 35, 36, 37, 39, 49, 58, 60, 62, 65, 67, 68, 69, 70, 71, 75, 79, 80, 82, 85, 89, 90, 93, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 113, 116, 117, 118, 119, 120, 122, 123, 129, 134, 138, 139, 143, 144, 146, 147, 148, 149, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 195, 201, 202, 205, 208, 209, 210, 211, 212], "In": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 17, 20, 22, 23, 27, 30, 31, 32, 34, 35, 36, 37, 43, 44, 56, 58, 59, 60, 62, 64, 65, 66, 69, 70, 71, 73, 74, 75, 79, 80, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 130, 132, 134, 135, 136, 139, 140, 146, 147, 148, 152, 154, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 174, 175, 178, 181, 183, 185, 186, 187, 188, 189, 191, 192, 194, 195, 200, 201, 202, 204, 206, 208, 210, 211, 212], "It": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 16, 17, 20, 22, 27, 31, 34, 35, 36, 37, 41, 44, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 75, 79, 84, 90, 96, 97, 98, 99, 100, 104, 105, 106, 107, 109, 116, 118, 119, 122, 123, 126, 129, 130, 131, 135, 139, 140, 143, 146, 147, 150, 152, 156, 157, 158, 160, 161, 162, 163, 168, 169, 170, 171, 172, 173, 174, 175, 178, 180, 181, 183, 185, 186, 187, 188, 189, 193, 194, 195, 197, 200, 201, 203, 205, 208, 209, 212], "Its": [138, 147, 160, 161, 181, 195], "NO": 189, "NOT": [142, 143, 161, 169, 181, 189], "No": [85, 123, 161, 176, 183, 186, 189, 201], "Not": [1, 49, 117, 132, 167, 180, 183, 185, 187], "ON": [0, 32, 36, 56, 58, 59, 65, 66, 69, 70, 93, 109, 130, 143], "OR": [161, 169, 187, 194], "Of": [20, 119, 173], "On": [36, 37, 39, 56, 66, 89, 118, 123, 143, 152, 183, 194, 208], "One": [2, 4, 5, 12, 27, 35, 37, 43, 56, 58, 79, 84, 85, 88, 105, 106, 107, 108, 110, 134, 136, 147, 148, 166, 167, 170, 183, 192], "Or": [84, 123, 146, 185, 194], "Such": [188, 194, 195], "That": [1, 10, 36, 43, 65, 84, 85, 160, 161, 165, 183, 192, 195], "The": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 20, 23, 25, 27, 30, 31, 32, 34, 36, 37, 39, 41, 43, 44, 46, 47, 49, 51, 53, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 79, 82, 84, 85, 88, 89, 90, 93, 94, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 117, 118, 119, 120, 122, 123, 124, 126, 129, 130, 131, 132, 134, 135, 138, 139, 140, 143, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 208, 209, 211, 212], "Then": [2, 3, 4, 7, 12, 14, 23, 34, 35, 36, 44, 66, 67, 69, 75, 80, 82, 84, 85, 89, 90, 97, 104, 105, 106, 107, 109, 113, 117, 118, 120, 121, 123, 124, 138, 142, 143, 147, 148, 160, 161, 162, 170, 185, 188, 190, 199, 201, 206, 208, 209], "There": [1, 2, 3, 4, 7, 9, 10, 17, 20, 27, 34, 35, 58, 63, 65, 79, 82, 84, 89, 90, 97, 98, 99, 100, 104, 117, 123, 134, 136, 143, 147, 150, 155, 169, 172, 181, 182, 183, 185, 187, 194, 201, 205, 208, 211], "These": [1, 2, 4, 6, 9, 12, 18, 27, 34, 35, 37, 43, 54, 56, 58, 62, 64, 65, 76, 79, 81, 86, 87, 88, 94, 96, 102, 109, 115, 119, 120, 123, 135, 140, 142, 143, 146, 147, 148, 152, 187, 188, 191, 192, 194, 195, 201], "To": [2, 4, 5, 6, 7, 9, 12, 16, 17, 20, 22, 27, 32, 34, 35, 37, 46, 49, 50, 53, 56, 59, 60, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 79, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 131, 134, 135, 143, 146, 147, 151, 154, 160, 161, 162, 163, 165, 169, 170, 172, 174, 183, 189, 192, 195, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212], "Will": [172, 186], "With": [4, 20, 27, 35, 36, 65, 69, 70, 71, 86, 90, 92, 109, 136, 146, 160, 161, 162, 169, 178, 187, 200, 201, 208, 210], "_": [3, 34, 36, 44, 47, 75, 88, 90, 105, 107, 110, 113, 119, 122, 130, 135, 160, 167, 169, 170, 181, 183, 185, 187, 191, 192, 201, 208], "__activemask": 134, "__attribute__": 119, "__call__": [4, 13, 37], "__constraints__": 160, "__contravariant__": 160, "__covariant__": 160, "__cplusplu": 122, "__cuda_arch__": 134, "__cudacc_ver_major__": [96, 134], "__cudacc_ver_minor__": [96, 134], "__darknetffi__": 47, "__dlpack__": 176, "__doc__": 187, "__enter__": 4, "__exit__": 4, "__file__": [75, 143, 212], "__future__": [132, 134, 135, 136, 139, 140], "__getstate__": 146, "__global": 56, "__global__": [96, 134], "__init__": [4, 22, 23, 43, 44, 72, 80, 84, 85, 110, 113, 126, 131, 143, 154, 156, 160, 163, 172, 186, 188, 194, 212], "__init_handle_by_constructor__": 156, "__kernel": 56, "__launch_bounds__": [96, 134], "__len__": 147, "__main__": [96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 119, 124, 200, 201], "__name__": [96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 119, 160, 200, 201], "__read_onli": 56, "__restrict__": [96, 134], "__shared__": 96, "__shfl": 134, "__shfl_down": 134, "__shfl_down_sync": 134, "__shfl_sync": 134, "__shfl_up": 134, "__shfl_up_sync": 134, "__syncthread": 96, "__version__": [48, 126], "__write_onli": 56, "_adjoint": 163, "_alter_conv2d_layout": 147, "_api_intern": 13, "_asdict": 187, "_attr": 187, "_bia": 126, "_bodi": 139, "_c": 167, "_cc": 3, "_compute_scanop": 34, "_contrib_conv2d_nchwc0": 0, "_contrib_conv2d_nchwc1": 0, "_contrib_conv2d_nchwc2": 0, "_contrib_conv2d_nchwc3": 0, "_convert_map": 167, "_convolution_0": 68, "_convolution_1": 68, "_convolution_10": 68, "_convolution_11": 68, "_convolution_12": 68, "_convolution_13": 68, "_convolution_14": 68, "_convolution_15": 68, "_convolution_16": 68, "_convolution_17": 68, "_convolution_18": 68, "_convolution_19": 68, "_convolution_2": 68, "_convolution_20": 68, "_convolution_21": 68, "_convolution_22": 68, "_convolution_23": 68, "_convolution_24": 68, "_convolution_25": 68, "_convolution_26": 68, "_convolution_27": 68, "_convolution_28": 68, "_convolution_29": 68, "_convolution_3": 68, "_convolution_30": 68, "_convolution_31": 68, "_convolution_32": 68, "_convolution_33": 68, "_convolution_34": 68, "_convolution_35": 68, "_convolution_36": 68, "_convolution_37": 68, "_convolution_38": 68, "_convolution_39": 68, "_convolution_4": 68, "_convolution_40": 68, "_convolution_41": 68, "_convolution_42": 68, "_convolution_43": 68, "_convolution_44": 68, "_convolution_45": 68, "_convolution_46": 68, "_convolution_47": 68, "_convolution_48": 68, "_convolution_49": 68, "_convolution_5": 68, "_convolution_50": 68, "_convolution_51": 68, "_convolution_52": 68, "_convolution_6": 68, "_convolution_7": 68, "_convolution_8": 68, "_convolution_9": 68, "_count_nod": 85, "_ctx": [23, 110, 113], "_ctype": 13, "_cubla": 110, "_deleg": 131, "_diff": 85, "_document": 12, "_does_": [161, 162], "_dynamo": 160, "_emb": 113, "_entropi": 161, "_errortest": 13, "_expr": [37, 155, 160], "_ffi": [4, 13, 37, 143], "_ffi_api": [101, 156], "_i": [160, 161, 170], "_import_tre": 3, "_import_tree_child_indic": 3, "_import_tree_log": 3, "_import_tree_row_ptr": 3, "_index": 113, "_input": 187, "_len": 119, "_lib": [3, 143], "_line_info": 160, "_linux": [116, 117, 120, 122, 124], "_loadfromfil": 3, "_logit": 161, "_lookup_task": 147, "_make": 34, "_mean": [161, 170], "_my_func_impl": 160, "_name": [85, 160], "_name_to_graph": 131, "_np": 162, "_op": 34, "_op_cnt_before_stack": 85, "_op_diff": 85, "_op_not_impl": 13, "_out_typ": 187, "_packimportstoc": 3, "_packimportstollvm": 3, "_pipelin": 113, "_pure_": [161, 162], "_pyexprvisitor": 162, "_pyrunn": 156, "_query_insid": 147, "_reduce_reset": 139, "_reduce_upd": 139, "_reg": 34, "_register_codegen": 212, "_register_customized_task": 147, "_register_pattern": 212, "_register_task_comput": 147, "_register_task_schedul": 147, "_register_tir_pass": 212, "_replac": 187, "_saved_model_inputs_spec": 75, "_search_dense_op_weight": 75, "_share": 67, "_silence_": 116, "_softmax": 161, "_softmax_": 204, "_spec": 160, "_tensor": 181, "_tensor_grad": 34, "_tensorized_": 209, "_tinfo": 187, "_tir": 160, "_transform": [4, 34, 35], "_tvm_handl": 63, "_tvm_metadata": [156, 162], "_tvm_tcode": 63, "_unknown_": 116, "_util": [51, 67, 68, 70, 71, 72, 73], "_var": [161, 170], "_win32": [96, 134], "_with": 161, "a0": 140, "a0_1": 140, "a0_2": 140, "a1": [109, 140, 180], "a1_1": 140, "a1_2": 140, "a2": [109, 180], "a3": [109, 180], "a3df19e5b88592ef5a9ce584a1ca3010": 98, "a53": 105, "a56087ffa2703b4d5632f024a8a4c899815c31bb": 124, "a5x": 56, "a_": [27, 30], "a_1": [89, 90, 134, 136, 139, 183, 200, 204, 208], "a_2": [134, 136, 204, 208], "a_dtyp": 185, "a_frag": 89, "a_index": 185, "a_layout": 185, "a_loc": 183, "a_max": [169, 187], "a_min": [169, 187], "a_nd": [31, 204], "a_np": [31, 88, 89, 104, 135, 200, 201, 204], "a_pad": 183, "a_padded_k": 97, "a_padded_m": 97, "a_r": 204, "a_red_1": 204, "a_reindex": 183, "a_tupl": 187, "a_tvm": [104, 200], "a_untyp": 163, "aa": [88, 104, 139], "aaaabbbb": 56, "aarch64": [56, 58, 64, 66, 68, 69, 80, 97, 99, 105, 107, 109], "ab": [4, 65, 119, 139, 161, 169, 170, 181, 185, 187, 188], "abbrevi": [30, 123], "abcdefgh": 56, "abi": 180, "abil": [2, 36, 43, 205, 208], "abl": [1, 4, 5, 11, 12, 30, 35, 36, 43, 56, 58, 62, 66, 84, 89, 97, 98, 99, 100, 119, 123, 129, 147, 163, 169, 194, 195, 205, 208, 209], "about": [0, 1, 2, 4, 5, 7, 12, 13, 15, 16, 18, 20, 27, 33, 34, 35, 36, 37, 39, 62, 66, 67, 73, 75, 78, 84, 89, 93, 105, 106, 107, 108, 109, 118, 123, 124, 138, 146, 147, 149, 155, 161, 162, 180, 181, 185, 187, 189, 191, 192, 195, 197, 210, 211], "abov": [1, 2, 4, 5, 12, 13, 14, 20, 22, 27, 34, 35, 36, 37, 39, 52, 56, 58, 62, 66, 67, 68, 71, 80, 82, 84, 90, 93, 104, 106, 109, 117, 118, 123, 126, 129, 131, 135, 139, 143, 147, 148, 152, 158, 160, 161, 167, 169, 170, 172, 183, 187, 189, 191, 192, 194, 195, 202, 208, 209, 210, 212], "abs_path": 75, "absenc": 143, "absolut": [147, 161, 169, 171, 181, 185, 187, 212], "absolute_import": [132, 134, 135, 136, 139, 140], "abspath": 75, "abstract": [5, 9, 13, 19, 26, 30, 43, 56, 59, 82, 90, 131, 141, 148, 155, 156, 160, 162, 165, 169, 172, 195, 204, 208, 209], "academ": 12, "acap": 66, "acc": [56, 126, 185, 191], "acc_dtyp": 67, "acc_frag": 89, "accelar": 64, "acceler": [27, 44, 56, 58, 59, 61, 64, 66, 67, 68, 75, 82, 90, 97, 105, 106, 107, 110, 111, 113, 119, 123, 139, 196, 198, 203, 205, 207, 208], "accelerator_config": 119, "accept": [1, 9, 10, 25, 36, 79, 122, 140, 146, 147, 148, 160, 161, 163, 168, 169, 170, 181, 185, 186, 187, 192, 195, 197, 209, 212], "access": [0, 1, 2, 4, 5, 7, 8, 10, 11, 12, 27, 43, 56, 79, 80, 90, 119, 124, 126, 139, 141, 152, 155, 160, 161, 162, 164, 167, 169, 170, 174, 178, 181, 182, 183, 185, 186, 187, 188, 189, 191, 192, 197, 208, 210], "access_mask": 185, "access_ptr": [89, 139, 185], "accid": 8, "accommod": [43, 195], "accompani": 11, "accomplish": [12, 119, 192, 195, 202, 208, 210], "accord": [2, 3, 16, 69, 74, 75, 80, 96, 97, 98, 99, 100, 101, 109, 136, 146, 147, 148, 155, 158, 159, 160, 161, 163, 169, 172, 181, 182, 183, 185, 186, 187, 195, 200, 201, 202, 210], "accordingli": [16, 17, 36, 97, 105, 107, 122, 143, 161, 163, 183, 186, 211], "account": [7, 65, 152, 157, 182, 202, 208], "accumul": [34, 56, 65, 67, 89, 139, 158, 160, 161, 163, 164, 169, 183, 185, 187, 191, 204], "accumult": 67, "accur": [20, 73, 74, 93, 96, 98, 120, 123, 147, 152, 160, 161, 183, 202], "accuraci": [56, 65, 171, 202, 210], "acheiv": 56, "achiev": [3, 16, 31, 35, 36, 41, 56, 58, 73, 74, 75, 88, 90, 96, 97, 98, 99, 100, 108, 110, 118, 129, 208], "achitectur": 210, "ackermann": 192, "acknowledg": [9, 10], "acl": 62, "acl_runtim": 58, "aco": [161, 169, 181, 185, 187], "acosh": [161, 169, 181, 185, 187], "acquaint": 30, "acquir": [31, 56], "acronym": 16, "across": [2, 4, 9, 12, 18, 20, 34, 67, 79, 139, 143, 152, 154, 155, 160, 161, 162, 163, 167, 170, 173, 175, 181, 187, 188, 201, 202, 208], "act": [4, 9, 10, 155, 169, 192, 208], "action": [1, 7, 8, 9, 31, 37, 39, 124, 143, 162, 178, 181, 185], "activ": [1, 2, 9, 10, 11, 20, 27, 56, 66, 106, 123, 126, 129, 130, 143, 147, 152, 154, 160, 161, 162, 163, 170, 178, 185, 187, 197, 211], "activation_bit": [170, 187], "actual": [7, 9, 11, 17, 34, 52, 70, 71, 75, 84, 90, 104, 108, 124, 143, 146, 147, 148, 152, 161, 162, 169, 174, 181, 183, 186, 187, 195, 201, 208], "actur": 80, "ad": [1, 5, 8, 16, 17, 33, 62, 64, 66, 80, 81, 84, 90, 105, 106, 107, 113, 120, 148, 156, 157, 159, 160, 161, 163, 169, 170, 172, 183, 186, 187, 188, 192, 195, 201, 204, 206, 212], "ad24d4d2f83975ff580a4833fbf3ef94": 99, "adam": 123, "adapt": [18, 82, 146, 161, 170, 171, 172, 173], "adaptive_avg_pool1d": [161, 170], "adaptive_avg_pool2d": [65, 68, 111, 161, 170], "adaptive_avg_pool2d_0": 68, "adaptive_avg_pool3d": [161, 170], "adaptive_max_pool1d": 170, "adaptive_max_pool2d": [65, 170], "adaptive_max_pool3d": 170, "adaptive_pool": 187, "adaptive_pool1d": 187, "adaptive_pool3d": 187, "adaptive_pool_avg": [97, 98, 99, 100], "adaptive_pool_sum": [97, 98, 99, 100], "adaptive_train": 146, "adaptivepool2dattr": 161, "adb": [56, 67, 68, 69], "add": [1, 2, 4, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 22, 23, 32, 34, 35, 36, 43, 44, 52, 53, 56, 58, 59, 63, 65, 68, 69, 70, 71, 72, 82, 84, 85, 89, 90, 97, 98, 99, 100, 101, 106, 109, 110, 111, 113, 120, 123, 126, 129, 131, 132, 138, 146, 147, 148, 155, 156, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 172, 181, 183, 185, 186, 187, 191, 192, 194, 195, 202, 204, 206, 208, 210, 212], "add1": [22, 23, 43, 44], "add_01": 131, "add_012": 131, "add__0": 68, "add__1": 68, "add__10": 68, "add__11": 68, "add__12": 68, "add__13": 68, "add__14": 68, "add__15": 68, "add__2": 68, "add__3": 68, "add__4": 68, "add__5": 68, "add__6": 68, "add__7": 68, "add__8": 68, "add__9": 68, "add_alter_layout": 187, "add_argu": [34, 155], "add_attr_opt": 1, "add_bia": 170, "add_c_includ": 69, "add_extern": 160, "add_fil": 148, "add_flop": 147, "add_func": [22, 131, 159], "add_gvar": 131, "add_hardwar": 212, "add_implement": 34, "add_ldlib": 69, "add_lower_pass": 82, "add_on": 109, "add_op": 131, "add_safe_glob": 126, "add_sequence_func": 113, "add_task": 147, "add_type_rel": [34, 155], "add_unit_loop": 183, "addfunc": 131, "addhandl": [104, 201], "addit": [0, 2, 4, 5, 6, 12, 15, 16, 22, 27, 31, 34, 36, 37, 56, 58, 59, 64, 65, 66, 69, 79, 80, 84, 96, 97, 98, 99, 100, 101, 108, 147, 148, 152, 155, 157, 160, 161, 162, 163, 165, 166, 169, 170, 172, 174, 180, 181, 183, 185, 187, 188, 193, 194, 200, 209, 212], "addition": [2, 9, 16, 19, 41, 56, 79, 113, 123, 172, 192, 194, 195], "additon": [181, 187], "addon": [2, 162], "addr": 174, "address": [1, 7, 9, 16, 30, 63, 69, 70, 71, 80, 90, 97, 105, 107, 109, 119, 123, 136, 139, 140, 142, 146, 147, 155, 157, 174, 183, 185, 191, 197, 203, 208, 211], "address_of": 185, "addshapestographdef": 52, "addtion": 185, "adher": 11, "adj": 126, "adjac": 126, "adjoint": [163, 181], "adjust": [9, 97, 98, 99, 100, 120, 123, 136, 146, 147, 154, 155, 160, 162, 178, 186, 208, 211], "adjustmatmulord": 163, "adopt": [4, 11, 123, 171, 202, 208, 210], "adreno": [62, 69, 76, 77, 198], "adreno_opencl": 56, "adrenosdk": 69, "adt": [155, 169, 171, 190], "adthandl": 155, "adv_index": [169, 187], "advanc": [44, 49, 62, 64, 73, 90, 104, 123, 146, 169, 181, 186, 194, 208], "advantag": [4, 5, 56, 109, 123, 181, 185, 200, 201, 202, 208, 210], "adversari": 171, "advis": 67, "af": 89, "affect": [2, 7, 56, 59, 65, 123, 172, 192, 202, 210], "affects_output": 172, "affin": [155, 160, 168, 170, 181, 183, 187], "affine_bind": 183, "affine_grid": [168, 187], "afford": 123, "aforement": [4, 25, 30, 192], "african": 52, "africana": 52, "after": [0, 1, 2, 3, 4, 7, 9, 10, 11, 15, 16, 17, 20, 22, 34, 35, 36, 37, 43, 44, 52, 59, 62, 66, 67, 69, 70, 71, 79, 80, 82, 84, 85, 90, 96, 97, 98, 100, 101, 105, 106, 107, 109, 110, 113, 118, 123, 124, 126, 129, 134, 135, 138, 142, 143, 146, 147, 148, 154, 155, 156, 158, 160, 161, 162, 163, 165, 167, 169, 170, 172, 173, 178, 181, 183, 184, 185, 186, 187, 189, 192, 194, 200, 202, 203, 205, 208, 209, 210, 211], "after_0": 160, "after_1": [160, 161, 170], "after_add_unit_loop": 183, "after_annot": 183, "after_annotate_buffer_access": 183, "after_bind": 183, "after_block": 183, "after_cache_read": 183, "after_cache_writ": 183, "after_compute_at": 183, "after_decompos": 183, "after_fus": 183, "after_inlin": 183, "after_n": [161, 170], "after_parallel": 183, "after_partit": 183, "after_reindex": 183, "after_reindex_cache_read": 183, "after_reord": 183, "after_reverse_compute_at": 183, "after_rfactor": 183, "after_rolling_buff": 183, "after_set_axis_separ": 183, "after_set_dtyp": 183, "after_set_scop": 183, "after_split": 183, "after_storage_align": 183, "after_tensor": 183, "after_transform_block_layout": 183, "after_unannot": 183, "after_unrol": 183, "after_vector": 183, "afterward": [17, 66], "again": [5, 14, 20, 34, 36, 43, 66, 68, 84, 146, 174, 186, 191, 208], "against": [7, 8, 14, 17, 53, 65, 117, 126, 143, 157, 160, 161, 169, 181, 185, 187, 191, 192, 197, 199, 200, 210], "aggreg": [166, 177], "aggress": 167, "agnost": [168, 187, 208], "ah": 66, "ahead": [8, 115, 119, 120, 123, 124, 125, 195, 198], "ai": [13, 62, 119, 123, 126, 144, 169, 212], "aid": [205, 208], "aie": 66, "aim": [2, 30, 41, 129, 131, 148, 205], "aka": [23, 118, 123, 182, 183, 189], "al": [88, 104, 160, 161, 163, 170, 171], "alan": 116, "alec": 171, "alex": 51, "alexnet": 171, "algebra": [134, 155, 169, 183, 190, 192, 194], "algorithim": 202, "algorithm": [4, 34, 49, 67, 75, 82, 90, 108, 119, 147, 148, 160, 161, 163, 168, 170, 171, 172, 187, 193, 201, 205, 208], "alia": [35, 147, 160, 161, 162, 166, 169, 170, 181, 183, 187], "alias": [155, 161, 162], "align": [56, 96, 118, 119, 120, 139, 169, 173, 181, 182, 183, 185, 187, 204], "align_corn": [160, 161, 168, 170, 187], "aliv": 174, "all": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 20, 23, 25, 32, 34, 35, 36, 37, 39, 43, 44, 47, 49, 56, 59, 60, 62, 64, 65, 66, 67, 68, 70, 71, 79, 80, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 105, 106, 107, 109, 110, 111, 113, 117, 118, 119, 120, 123, 124, 126, 129, 132, 134, 139, 141, 143, 146, 147, 148, 149, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 181, 182, 183, 185, 186, 187, 188, 189, 191, 192, 194, 195, 197, 198, 200, 201, 204, 205, 208, 209, 210, 211, 212], "all_class_non_max_suppress": 173, "all_const_arg": 35, "all_cost": [146, 147, 201], "all_dtyp": 164, "all_global_var": 158, "all_type_var": 164, "all_var": [158, 164], "allclos": 43, "alleduc": 186, "allevi": [4, 10, 84], "allgath": [160, 161, 175], "alloc": [1, 2, 5, 6, 20, 27, 35, 36, 37, 43, 56, 89, 90, 96, 97, 98, 99, 100, 101, 110, 111, 119, 123, 124, 129, 130, 134, 135, 140, 146, 155, 158, 160, 161, 162, 163, 172, 175, 182, 183, 185, 186, 200, 204, 208], "alloc_buff": [20, 23, 27, 30, 31, 43, 110, 183, 185, 186], "alloc_storag": [158, 161, 163], "alloc_tensor": [158, 161, 163], "allocate_tensor": [74, 120], "allocateconst": 185, "allocateworkspac": 163, "allocdataspac": 1, "allocworkspac": 1, "allow": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 16, 18, 20, 32, 34, 35, 36, 37, 56, 58, 65, 75, 79, 80, 84, 90, 101, 119, 122, 123, 126, 134, 146, 149, 152, 155, 157, 158, 160, 162, 163, 167, 169, 170, 172, 174, 175, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 197, 199, 201, 205, 208, 209, 210], "allow_dupl": 147, "allow_extern": 160, "allow_miss": [132, 185], "allow_non": 180, "allow_overrid": 180, "allow_undef": 162, "allowlist": 126, "allowzero": 169, "allreduc": [160, 161, 175, 185], "allreduce_strategi": 163, "almost": [109, 123, 172], "alon": [56, 160, 183], "along": [34, 36, 49, 58, 65, 85, 123, 124, 139, 160, 161, 169, 170, 173, 181, 183, 187, 188, 202, 210], "alongsid": 117, "alpha": [69, 123, 146, 161, 170, 171, 187, 194], "alphabet": 155, "alreadi": [4, 10, 14, 16, 17, 20, 30, 31, 35, 36, 37, 65, 69, 75, 82, 85, 97, 105, 107, 123, 146, 147, 159, 160, 162, 169, 172, 181, 192, 205, 208, 211], "also": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 22, 23, 25, 27, 30, 31, 34, 35, 36, 37, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 82, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 142, 143, 144, 146, 147, 148, 150, 151, 152, 155, 158, 159, 160, 162, 163, 165, 166, 167, 170, 172, 173, 174, 178, 180, 181, 183, 186, 187, 188, 189, 190, 191, 192, 194, 195, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212], "alter": [4, 14, 56, 147, 172, 188], "alter_layout": 155, "alter_op_layout": 147, "altern": [4, 11, 12, 31, 43, 49, 56, 58, 64, 66, 123, 124, 147, 172, 183, 201, 210], "alteropimpl": 163, "alteroplayout": [58, 147, 169, 172], "although": [9, 16, 35, 36, 37, 69, 75, 97, 98, 99, 100, 131, 135, 138, 140, 172, 189, 210], "altpattern": 166, "altrern": 68, "alwai": [4, 8, 9, 10, 12, 14, 16, 20, 35, 56, 65, 90, 105, 106, 107, 146, 147, 158, 160, 172, 174, 182, 186, 187, 191, 192, 201], "amalgam": 31, "amazon": 61, "amazonaw": [17, 119, 202, 210], "ambigu": [79, 162, 192], "ambit": 181, "amd": [75, 105, 106, 107], "amdgpu": [37, 205], "amen": 187, "ami": 61, "among": [2, 9, 11, 25, 138, 146, 158], "amongst": 208, "amort": 152, "amount": [9, 13, 65, 163, 202, 210], "ampl": 62, "amplifi": 141, "amx": 59, "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 23, 27, 30, 31, 33, 35, 36, 37, 38, 41, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 88, 90, 93, 96, 97, 101, 104, 105, 106, 107, 109, 110, 111, 116, 117, 118, 119, 120, 121, 122, 124, 126, 130, 131, 132, 134, 135, 136, 138, 139, 142, 143, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 192, 195, 196, 197, 199, 200, 201, 203, 204, 206, 208, 211, 212], "an521": 122, "analog": [191, 192, 195], "analys": [2, 35, 96, 97, 98, 99, 100, 101, 146, 200], "analysi": [2, 4, 75, 82, 85, 126, 129, 130, 146, 153, 155, 156, 163, 172, 183, 186, 187, 188, 190, 192, 194], "analyt": 171, "analyz": [2, 4, 18, 34, 59, 82, 85, 126, 158, 187, 194, 205], "analzy": 187, "ancestor": [158, 172, 182, 183], "anchor": [156, 173, 182], "anchor_block": 182, "andrei": 56, "andrew": [117, 171], "android": [5, 56, 60, 62, 67, 68, 73, 76, 77, 97, 105, 107, 146, 147, 198], "android28": [56, 68], "android_abi": 56, "android_lib_path": 69, "android_ndk_hom": [56, 67, 68, 69], "android_platform": 56, "android_rpc": [57, 69, 80], "android_rpc_test": 69, "android_seri": 67, "anf": 163, "angl": 161, "ani": [1, 2, 4, 5, 6, 7, 8, 10, 11, 16, 17, 34, 35, 36, 37, 39, 44, 56, 58, 59, 65, 66, 68, 73, 74, 75, 79, 80, 84, 85, 89, 96, 97, 98, 99, 100, 117, 118, 119, 122, 123, 124, 126, 132, 138, 146, 147, 148, 151, 152, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 175, 178, 180, 181, 183, 185, 186, 187, 188, 189, 191, 192, 194, 195, 200, 202, 205, 208, 209, 210], "anim": 123, "ann": 147, "ann_kei": 183, "ann_val": 183, "ann_valu": 183, "anneal": 147, "annot": [2, 4, 20, 25, 30, 34, 36, 43, 58, 59, 64, 65, 66, 147, 148, 155, 158, 159, 161, 162, 163, 166, 169, 172, 181, 183, 185, 186, 189, 191, 192, 195, 201], "annotate_buffer_access": 183, "annotate_codegen": [110, 163], "annotate_shard": 161, "annotated_expr": 163, "annotatedeviceregion": 186, "annotatedregionset": 164, "annotateent": 147, "annotateentryfunc": 186, "annotatespac": 147, "annotatespan": [154, 167, 172], "annotatetarget": 172, "annotatetiroppattern": [23, 43, 113, 163], "annotation_pattern": 163, "annotationvaluet": 183, "announc": [15, 27], "anomali": 120, "anonym": [160, 208], "anot": 181, "anoth": [1, 2, 5, 7, 13, 14, 17, 20, 27, 34, 36, 37, 43, 84, 89, 90, 106, 118, 120, 121, 123, 139, 147, 148, 155, 158, 162, 163, 166, 169, 172, 174, 176, 181, 183, 185, 186, 191, 192, 194, 195, 201, 208], "anreno": 56, "ansor": [196, 205], "answer": [5, 10, 12, 86, 90, 201, 208], "antialia": 160, "antialias": 160, "anymor": 192, "anyon": [174, 197], "anystr": 182, "anyth": [3, 35, 123, 134, 160, 166, 169], "anytim": [10, 80], "anywai": 123, "anywher": [141, 195], "ao": [73, 121], "aot": [115, 118, 119, 120, 121, 123, 124, 125, 157, 169, 198], "aot_executor": [116, 121, 157], "aotexecutor": 116, "aotexecutorfactorymodul": 157, "aotmodel": 212, "aotmodul": [116, 121, 157], "apach": [2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 22, 26, 27, 30, 39, 41, 43, 44, 49, 51, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 80, 105, 106, 107, 109, 110, 111, 113, 119, 121, 122, 123, 126, 142, 143, 144, 146, 148, 167, 171, 172, 183, 197, 205], "apad": [88, 89], "apad_shar": 89, "apad_shared_1": 89, "apad_shared_wmma_matrix_a": 89, "apad_shared_wmma_matrix_a_1": 89, "apart": [56, 70, 71, 123], "api": [0, 1, 2, 3, 4, 5, 12, 13, 16, 19, 30, 35, 36, 37, 43, 44, 54, 56, 57, 58, 59, 62, 65, 66, 67, 68, 69, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 111, 113, 116, 118, 119, 120, 121, 122, 123, 124, 126, 146, 147, 148, 150, 155, 157, 159, 160, 161, 162, 165, 169, 174, 175, 176, 178, 180, 181, 183, 186, 188, 192, 194, 197, 198, 200, 202, 203, 204, 205, 207, 209, 210, 212], "api_cli": 157, "api_doc": 169, "api_specif": [160, 161], "api_test": 13, "apk": [69, 97, 105, 107], "app": [53, 60, 69, 80, 119, 123, 212], "app_abi": 69, "app_platform": 69, "app_workspac": 119, "appar": 4, "appear": [9, 16, 35, 75, 79, 97, 98, 99, 100, 118, 123, 146, 152, 155, 158, 164, 169, 171, 182, 183, 186, 187, 191, 192, 195, 211], "appearancei": 177, "append": [4, 36, 47, 72, 74, 82, 85, 101, 113, 120, 126, 129, 130, 143, 146, 152, 160, 163, 183, 208], "appl": [46, 59, 126, 143], "appli": [2, 4, 8, 9, 10, 12, 15, 16, 17, 18, 19, 20, 35, 37, 43, 49, 73, 74, 75, 79, 90, 96, 97, 101, 104, 105, 106, 107, 110, 111, 113, 117, 126, 146, 147, 149, 154, 156, 158, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 181, 182, 183, 184, 185, 186, 187, 188, 189, 197, 200, 201, 202, 205, 208, 211], "applic": [1, 2, 10, 12, 27, 31, 44, 48, 59, 60, 62, 66, 69, 84, 90, 93, 123, 135, 143, 149, 155, 162, 168, 169, 172, 187, 190, 197, 210], "applict": 119, "apply_and_skip_rest": 101, "apply_best": [96, 101, 146, 200], "apply_chat_templ": 113, "apply_func": [101, 146], "apply_graph_best": 108, "apply_graph_transform": [56, 67], "apply_history_best": [67, 104, 105, 106, 107, 108, 117, 147, 201, 202], "apply_json_to_schedul": 183, "apply_prim_func_arg_and_result_memory_constraint": 182, "apply_steps_from_st": 146, "apply_to_schedul": 183, "apply_trac": 31, "applyconfig": 147, "applydefaultschedul": [43, 110, 113, 149], "applyfixedconfig": 147, "applygraphbest": [108, 147], "applyhistorybest": [97, 98, 99, 100, 146, 147], "applyhistorybestorsampl": 146, "applylayouttransform": 186, "applypasstofunct": 188, "approach": [5, 18, 20, 56, 57, 60, 84, 108, 194, 208], "appropri": [9, 12, 34, 66, 75, 79, 109, 123, 129, 143, 169, 171, 180, 187, 191, 192, 195, 202, 208, 210], "approv": [7, 10, 11, 16], "approxim": [2, 75, 97, 98, 99, 100, 146, 152, 160, 161, 163, 170, 171, 172, 187], "apt": [62, 93, 116, 117, 120, 122, 123, 124], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 23, 25, 27, 30, 32, 34, 35, 36, 37, 39, 41, 43, 44, 47, 49, 51, 53, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 82, 84, 85, 86, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 106, 109, 110, 113, 116, 117, 118, 119, 120, 122, 123, 124, 126, 129, 131, 132, 134, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212], "arang": [161, 169, 173, 187, 209], "arbitrari": [2, 3, 4, 25, 36, 51, 67, 73, 84, 126, 139, 149, 155, 160, 169, 174, 181, 183, 185, 187, 197, 205], "arbitrili": [162, 178], "arc": [161, 187], "arch": [64, 67, 68, 69, 70, 104, 106, 122, 130, 148, 180, 204, 206], "architect": 12, "architectur": [9, 56, 58, 67, 69, 109, 122, 123, 139, 141, 148, 171, 180, 205, 208], "archiv": [11, 15, 56, 65, 68, 120, 123, 157], "arcnam": 120, "arctan2": 185, "arduino": [115, 121, 124, 125, 198], "arduino_cli_cmd": 123, "arduino_project": 123, "arduino_sketch": 123, "area": [9, 11, 33, 78, 88, 208], "aren": [16, 80, 123], "arena": 2, "arg": [4, 5, 23, 34, 35, 36, 37, 80, 96, 101, 104, 113, 118, 122, 146, 147, 150, 154, 155, 156, 159, 160, 161, 162, 163, 166, 169, 174, 175, 177, 178, 181, 182, 183, 185, 187, 194, 200, 201], "arg0": [36, 162, 178], "arg1": [12, 36, 148, 162, 178], "arg2": [12, 36], "arg3": [12, 36], "arg_0": 160, "arg_1": 160, "arg_and_result_memory_scop": 182, "arg_buf": [104, 147, 201], "arg_nod": [0, 36, 152], "arg_param": 167, "arg_typ": [37, 155, 195], "arg_type_id": 122, "argc": 119, "arginfo": 156, "argmax": [46, 48, 50, 51, 53, 69, 70, 71, 113, 116, 121, 126, 134, 140, 161, 169, 187], "argmaxargminattr": 161, "argmin": [161, 169, 187], "argn": [162, 178], "args1": 165, "args2": 165, "args_dict": 159, "args_info": 156, "args_to_workload": 147, "argsort": [52, 67, 73, 74, 160, 161, 169, 187, 202, 210], "argsortattr": 161, "argument": [0, 1, 2, 4, 5, 8, 9, 27, 34, 35, 36, 43, 51, 56, 59, 62, 63, 67, 68, 70, 71, 72, 73, 74, 79, 82, 84, 85, 97, 98, 99, 100, 106, 111, 113, 117, 119, 131, 132, 136, 139, 146, 147, 148, 150, 152, 155, 156, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 174, 175, 177, 178, 180, 181, 182, 183, 185, 186, 187, 189, 190, 191, 192, 194, 195, 201, 208, 211], "argv": 119, "argwher": [169, 187], "ari": [160, 187], "arial": 47, "aris": [20, 143], "arith": [141, 187], "arithmet": [2, 182, 186, 187, 192, 194, 195], "arm": [2, 7, 12, 37, 43, 62, 64, 70, 71, 74, 80, 94, 95, 102, 103, 107, 108, 115, 120, 125, 148, 157, 180, 198, 205], "arm64": [56, 67, 68, 69], "arm_compute_lib": 58, "arm_cpu": [66, 71, 97, 105, 118, 147, 180], "armor": 17, "armv7l": [71, 109], "armv9": 64, "around": [4, 5, 20, 27, 59, 60, 62, 97, 98, 99, 100, 110, 111, 123, 148, 169, 170, 171, 172, 186, 187, 191], "arr": [2, 176, 185], "arr0": 169, "arr1": 169, "arr_dst": 185, "arr_dtyp": 185, "arr_src": 185, "arrai": [0, 2, 4, 5, 9, 20, 30, 31, 34, 36, 37, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 61, 62, 64, 67, 69, 70, 71, 74, 75, 82, 88, 89, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 119, 120, 121, 122, 123, 126, 130, 132, 134, 135, 139, 146, 147, 148, 152, 155, 160, 161, 162, 164, 166, 167, 169, 170, 171, 172, 175, 176, 177, 180, 181, 182, 183, 185, 186, 187, 194, 200, 201, 202, 204, 206, 209, 210, 212], "arrang": 167, "array_api": [160, 161], "array_equ": 169, "array_handl": 63, "array_lik": 176, "arriv": 185, "art": 123, "arthimet": 176, "articl": [46, 47, 48, 49, 50, 51, 52, 53, 63, 67, 68, 72, 126], "articul": 169, "artifact": [2, 17, 56, 68, 120, 147, 150, 156, 157, 160, 162], "arug": 82, "arxiv": [168, 170, 171, 187], "as_dens": 170, "as_graph_def": 75, "as_json": 183, "as_python": [162, 183], "as_text": 162, "asarrai": [49, 53, 75, 118, 119, 202, 210], "asc": 17, "ascend": [147, 161, 169, 187], "ascertain": 30, "asf": [17, 142], "asf_password": 17, "asf_usernam": 17, "asid": 123, "asin": [161, 169, 181, 185, 187], "asinh": [161, 169, 181, 185, 187], "ask": [7, 8, 10, 12, 14, 16, 52, 75, 105, 106, 107, 118, 123, 136, 146, 147], "asm": 139, "asnumpi": [67, 148, 176], "asobject": 181, "aspect": [1, 9, 10, 15, 37, 56, 205], "assembl": 58, "assembli": 139, "assert": [2, 3, 4, 39, 43, 67, 70, 72, 74, 75, 84, 85, 89, 90, 97, 98, 99, 100, 101, 104, 113, 117, 122, 126, 151, 155, 161, 162, 163, 164, 166, 169, 172, 176, 182, 185, 186, 187, 188, 194, 208], "assert_allclos": [31, 61, 90, 96, 101, 104, 126, 129, 130, 132, 134, 135, 139, 185, 187, 200, 201, 204, 206, 208], "assert_equ": 109, "assert_mod": 182, "assert_op": 161, "assert_pure_funct": 182, "assert_structural_equ": 155, "assert_strucural_equ": 155, "assertstmt": 185, "asset": [46, 53, 119], "assign": [0, 5, 10, 32, 34, 36, 80, 142, 146, 155, 160, 162, 167, 172, 175, 191, 192, 195], "assigne": 7, "associ": [7, 8, 25, 27, 31, 37, 119, 130, 134, 146, 155, 157, 159, 161, 162, 166, 171, 180, 183, 185, 187, 202], "assum": [1, 3, 6, 9, 12, 14, 16, 34, 36, 61, 63, 70, 71, 82, 88, 89, 109, 126, 134, 139, 155, 158, 160, 161, 162, 163, 167, 168, 170, 172, 174, 183, 185, 186, 187, 191, 197, 206], "assume_inbound": [161, 187], "assume_injective_transform": 183, "assumpt": [8, 9], "assur": [160, 161], "ast": [9, 27, 30, 34, 72, 82, 131, 148, 159, 162, 163, 169, 171, 172, 181, 182, 183, 184, 189, 192, 194, 195, 209], "astensor": 160, "astext": [85, 155, 166, 169, 206], "astor": 171, "astupl": 169, "astyp": [0, 30, 31, 37, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 61, 64, 65, 67, 69, 70, 71, 72, 74, 75, 84, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 117, 119, 121, 123, 126, 129, 130, 132, 134, 135, 139, 160, 161, 167, 169, 185, 187, 200, 201, 202, 204, 206, 208, 209, 210], "astypeattr": 161, "asymmetr": [161, 168, 170, 187], "async": [148, 185], "async_func": 148, "asynchr": 148, "asynchron": 130, "asyncron": 186, "atan": [65, 161, 169, 181, 185, 187], "atan2": 185, "atanh": [161, 169, 181, 185, 187], "aten": 68, "atexit": 148, "atleast": 183, "atol": [43, 101, 126, 171, 206], "atom": [164, 183], "attach": [56, 88, 104, 122, 138, 147, 155, 160, 163, 174, 175, 181, 186], "attachattrlayoutfreebuff": 163, "attachexternmodul": [113, 160, 163], "attachglobalsymbol": [113, 163], "attack": 197, "attempt": [35, 36, 49, 157, 167, 186, 191, 192, 194, 195], "attent": [9, 12, 17, 79, 113, 160, 161, 163, 201, 208], "attention_var_len": 161, "attention_with_fused_qkv": 113, "attn": 113, "attn_mask": 160, "attr": [0, 1, 34, 70, 71, 101, 119, 129, 139, 143, 146, 147, 148, 155, 159, 160, 162, 163, 165, 166, 169, 172, 181, 183, 185, 186, 187, 194, 200, 204], "attr_kei": [155, 185, 186], "attr_key_or_dict": 155, "attr_map": 155, "attr_nam": [151, 155, 180], "attr_typ": 183, "attr_valu": 155, "attrfieldinfo": 155, "attribut": [0, 1, 2, 47, 49, 64, 65, 82, 109, 113, 139, 148, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 172, 176, 180, 181, 182, 183, 185, 186, 187], "attributeerror": [53, 74, 116, 118, 120, 122, 123], "attrpattern": 166, "attrs_gett": 163, "attrsnod": [34, 155, 166], "attrstmt": [185, 186], "attrubt": 155, "attrvisitor": 5, "audienc": 12, "author": [4, 7, 9, 16, 46, 47, 48, 49, 50, 51, 53, 56, 58, 59, 65, 67, 68, 69, 70, 71, 73, 74, 75, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 171, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212], "auto": [4, 7, 8, 16, 30, 34, 35, 36, 37, 56, 67, 68, 74, 80, 86, 94, 95, 103, 104, 111, 117, 119, 134, 135, 136, 140, 143, 146, 147, 156, 162, 173, 182, 183, 186, 187, 196, 198, 202, 203, 204, 205, 207, 208, 210], "auto_broadcast": [185, 187], "auto_max_step": [2, 89], "auto_pad": 172, "auto_schedul": [2, 96, 97, 98, 99, 100, 101, 153, 200, 202], "auto_scheduler_layout_transform": 200, "auto_scheduler_layout_transform_1": 200, "auto_scheduler_matmul_x86": [198, 200, 207], "auto_scheduler_rewritten_layout": 187, "auto_scheduler_should_rewrite_layout": 187, "auto_unroll_max_depth": 37, "auto_unroll_max_ext": 37, "auto_unroll_max_step": [37, 96, 104, 200], "autodetect": [109, 160, 167, 180], "autodiff": [34, 35], "autodoc": 12, "autom": [2, 9, 56, 157, 196, 201, 208], "automat": [2, 5, 7, 9, 12, 13, 16, 17, 20, 37, 62, 65, 75, 79, 80, 90, 96, 101, 122, 139, 143, 146, 147, 148, 155, 160, 161, 162, 163, 167, 170, 171, 172, 178, 181, 183, 185, 186, 187, 196, 200, 205, 208, 209, 211], "autoschedul": [2, 86, 187, 201, 205], "autotoken": 113, "autotun": [74, 122, 123, 172, 199, 202], "autotune_log_fil": 117, "autotuner_record": 210, "autotvm": [2, 56, 67, 86, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 117, 148, 153, 157, 165, 187, 197, 198, 200, 203, 205, 207], "autotvm_build_func": [117, 157], "autotvm_matmul_x86": [198, 201, 207], "autotvm_relay_x86": [198, 202, 207, 210], "autotvmmoduleload": [117, 157], "aux_param": 167, "auxiliari": [4, 142, 159, 161, 167, 170, 181, 183, 187, 188], "avail": [1, 4, 6, 16, 52, 56, 59, 67, 73, 74, 75, 80, 85, 93, 109, 113, 119, 123, 124, 138, 143, 146, 148, 149, 155, 156, 159, 160, 163, 170, 172, 174, 175, 180, 187, 195, 197, 200, 201, 202, 208, 210], "availabilti": 56, "avali": 169, "avarag": 161, "averag": [67, 108, 146, 147, 161, 162, 170, 178, 201], "avg": [160, 161, 170, 173, 175, 187], "avg_pool1d": [161, 170], "avg_pool2d": [58, 65, 161, 170], "avg_pool2d_backward": 161, "avg_pool2d_grad": 170, "avg_pool3d": [65, 161, 170], "avil": 210, "avoid": [8, 9, 16, 17, 35, 56, 65, 68, 79, 80, 88, 96, 98, 109, 110, 123, 152, 160, 161, 162, 169, 170, 171, 172, 178, 181, 183, 186, 187, 191, 194], "avx": [37, 101, 139, 200, 202, 208], "avx2": [90, 100, 101, 108, 200, 208], "avx512": [72, 73, 74, 100, 101, 108, 200, 202, 208], "aw": [61, 108], "awai": [2, 10, 82, 160, 161, 170], "awak": [97, 105, 107], "awar": [4, 12, 32, 73, 75], "awesom": 10, "awesomegraph": 131, "awesomeplott": 131, "awesomevar": 131, "aws_platform": 61, "awsxclbin": 61, "ax": [22, 23, 26, 43, 44, 89, 90, 104, 110, 111, 123, 136, 139, 146, 147, 160, 161, 169, 185, 187, 201, 208], "ax0": [23, 31, 43, 89, 96, 97, 98, 99, 100, 110, 129, 134, 138, 163, 183, 204], "ax0_1": 183, "ax0_ax1_fused_0": 110, "ax0_ax1_fused_1": 110, "ax0_ax1_fused_ax2_fus": 200, "ax0_fused_0": 110, "ax0_fused_1": 110, "ax1": [23, 43, 89, 96, 97, 98, 99, 100, 129, 138, 163, 183, 204], "ax1_1": 183, "ax1_fus": 110, "ax1_fused_0": 110, "ax1_fused_1": 110, "ax2": [89, 96, 97, 98, 99, 100, 129, 138, 183, 204], "ax3": [89, 96, 97, 98, 99, 100, 129, 138, 183], "ax4": [89, 200], "ax4_ax5_fused_out": 89, "ax5": 89, "ax6": 200, "ax7": 200, "axi": [20, 22, 23, 25, 26, 30, 31, 34, 37, 43, 49, 50, 53, 61, 67, 68, 72, 85, 88, 89, 90, 96, 104, 109, 110, 111, 113, 123, 126, 134, 135, 136, 139, 140, 146, 147, 148, 155, 159, 160, 161, 163, 169, 170, 172, 173, 181, 183, 185, 186, 187, 189, 200, 201, 202, 204, 206, 208, 209, 210], "axi_limit0": 119, "axi_limit1": 119, "axi_limit2": 119, "axi_limit3": 119, "axis": 208, "axis0": 185, "axis2": 185, "axis_k": 187, "axis_len": 147, "axis_nam": 146, "axis_rang": 27, "axis_separ": [161, 163, 183, 185, 187], "axis_typ": 27, "b": [2, 4, 5, 7, 20, 22, 25, 27, 30, 31, 36, 37, 51, 61, 68, 72, 73, 80, 82, 88, 89, 90, 97, 98, 99, 100, 101, 109, 113, 121, 124, 132, 134, 135, 136, 138, 139, 140, 146, 147, 150, 158, 159, 160, 161, 163, 164, 165, 168, 169, 170, 172, 173, 181, 183, 185, 186, 187, 189, 191, 192, 194, 195, 200, 201, 204, 208, 209], "b0": [20, 22, 31, 140], "b0353104": 73, "b1": [20, 22, 140], "b16": 185, "b2": [172, 208], "b6": 31, "b7": 31, "b9a54e89508f101a1611cd64f4ef56b9cb62c7cf": [210, 211], "b_": [27, 30], "b_1": [90, 134, 136, 139, 140, 183, 200, 204, 208], "b_2": [134, 136, 140, 208], "b_3": 140, "b_4": 140, "b_5": 140, "b_dtype": 185, "b_frag": 89, "b_i0": 183, "b_i0_partit": 183, "b_i1": 183, "b_i1_partit": 183, "b_i2": 183, "b_i_common": 183, "b_index": 185, "b_layout": 185, "b_local": 183, "b_nd": [31, 204], "b_np": [31, 101, 200, 201, 204], "b_o": 183, "b_pad": 183, "b_partition_2": 183, "b_rf": [134, 183], "b_rf_1": 134, "b_share": 183, "b_tvm": [101, 200], "b_v0": 140, "b_v0_1": 140, "b_v1": 140, "b_v1_1": 140, "ba": [56, 89, 160, 161, 170], "back": [2, 3, 5, 35, 36, 37, 49, 56, 70, 71, 79, 80, 109, 119, 123, 129, 135, 147, 152, 155, 161, 162, 169, 170, 172, 174, 175, 181, 183, 187, 192, 201, 206, 208], "backend": [1, 2, 5, 23, 36, 37, 48, 58, 62, 69, 76, 90, 93, 97, 98, 99, 100, 106, 110, 116, 117, 118, 120, 121, 122, 123, 146, 148, 153, 157, 160, 163, 166, 169, 172, 185, 186, 187, 188, 194, 204, 205, 208, 209, 212], "background": [9, 12, 47, 173], "backpropag": 193, "backtrac": 56, "backward": [4, 51, 72, 108, 160, 161, 169, 172, 187], "backward_fold_scale_axi": 172, "backward_index": 185, "backward_shap": 185, "backward_window_s": 146, "backwardfoldscaleaxi": [4, 172], "bad": [16, 49, 85, 147, 189], "badli": 123, "baidu": 50, "balanc": [56, 110, 202], "ban": [60, 180], "banana": 52, "band": [169, 187], "bandwidth": [155, 157], "bank": [88, 181, 183], "bar": [32, 118, 147], "bare": [41, 62, 79, 115, 125, 141, 157, 198], "barinov": [56, 67], "barrett": 210, "barrier": [1, 10, 181, 185], "barrier_count": 185, "barrier_id": 185, "base": [1, 2, 4, 5, 6, 7, 9, 11, 12, 16, 17, 34, 35, 36, 43, 52, 56, 62, 75, 79, 96, 97, 98, 99, 100, 108, 113, 118, 119, 120, 122, 124, 138, 141, 143, 146, 147, 148, 151, 155, 157, 158, 160, 161, 162, 163, 165, 166, 167, 169, 171, 172, 173, 174, 175, 180, 183, 185, 186, 187, 188, 190, 191, 192, 195, 200, 201, 205, 208, 209, 210], "base_address": 119, "base_pointer_offset": 119, "baseattrsnod": 5, "basecheckresult": 158, "baseexpr": 155, "basefunc": [155, 159], "baselin": 106, "basenam": 120, "basep0": 119, "basep1": 119, "basep2": 119, "basep3": 119, "basep4": 119, "basetyp": [192, 195], "bash": [8, 16, 64, 66, 69, 79, 123, 142], "bashrc": [69, 70, 71, 109], "basi": [37, 188, 202, 208], "basic": [4, 9, 12, 18, 36, 58, 70, 71, 82, 89, 101, 139, 155, 164, 170, 172, 186, 187, 189, 193, 203, 205, 208, 209, 210], "basicconfig": 129, "batch": [65, 68, 75, 88, 89, 90, 123, 129, 130, 138, 140, 146, 147, 148, 156, 160, 161, 163, 168, 169, 170, 171, 172, 173, 182, 187, 194, 201, 202, 206, 208, 210], "batch_axi": [169, 187], "batch_dim": [161, 169, 171, 187], "batch_flatten": [65, 85, 130, 170, 206], "batch_index": 173, "batch_matmul": [59, 65, 75, 148, 167, 170, 172, 187], "batch_matmul_cubla": 75, "batch_matmul_leg": 187, "batch_norm": [59, 65, 68, 85, 111, 129, 130, 161, 170, 171, 187, 194, 206], "batch_norm_0": 68, "batch_norm_1": 68, "batch_norm_10": 68, "batch_norm_11": 68, "batch_norm_12": 68, "batch_norm_13": 68, "batch_norm_14": 68, "batch_norm_15": 68, "batch_norm_16": 68, "batch_norm_17": 68, "batch_norm_18": 68, "batch_norm_19": 68, "batch_norm_2": 68, "batch_norm_20": 68, "batch_norm_21": 68, "batch_norm_22": 68, "batch_norm_23": 68, "batch_norm_24": 68, "batch_norm_25": 68, "batch_norm_26": 68, "batch_norm_27": 68, "batch_norm_28": 68, "batch_norm_29": 68, "batch_norm_3": 68, "batch_norm_30": 68, "batch_norm_31": 68, "batch_norm_32": 68, "batch_norm_33": 68, "batch_norm_34": 68, "batch_norm_35": 68, "batch_norm_36": 68, "batch_norm_37": 68, "batch_norm_38": 68, "batch_norm_39": 68, "batch_norm_4": 68, "batch_norm_40": 68, "batch_norm_41": 68, "batch_norm_42": 68, "batch_norm_43": 68, "batch_norm_44": 68, "batch_norm_45": 68, "batch_norm_46": 68, "batch_norm_47": 68, "batch_norm_48": 68, "batch_norm_49": 68, "batch_norm_5": 68, "batch_norm_50": 68, "batch_norm_51": 68, "batch_norm_52": 68, "batch_norm_6": 68, "batch_norm_7": 68, "batch_norm_8": 68, "batch_norm_9": 68, "batch_siz": [47, 70, 71, 75, 85, 89, 97, 98, 99, 100, 104, 105, 106, 107, 108, 123, 129, 130, 147, 160, 161, 168, 169, 170, 171, 172, 173, 185, 187, 201, 206], "batch_to_space_nd": [170, 172, 187], "batchflatten": 170, "batchingop": 172, "batchmatmul": 172, "batchnormattr": 161, "batchnormcallback": 194, "baud": 118, "baz": 32, "bb": [22, 89, 132, 139, 159, 160, 161, 163, 185, 187], "bbox_pr": 173, "bbuf": 70, "bc": [89, 148], "bcast_add": [185, 187], "bcb562e2cf839ad7d45b93ea7b0abb0d": 97, "bcda4716699ac97ea44f791c24310193": 49, "bceb91c5ad2e2deb295547d81505721d3a87d578": [116, 118, 120], "bcebo": 50, "bcm2837": 71, "bd206494e8b6a27b25e5cf7199dbcdbfe9d05d1c": 202, "bdc285eec5e051bc3f230cdb78c10af1": 97, "becaus": [1, 4, 5, 8, 9, 12, 14, 16, 20, 22, 27, 34, 35, 36, 49, 58, 61, 65, 73, 74, 75, 79, 80, 82, 84, 97, 98, 99, 100, 113, 117, 120, 129, 142, 146, 147, 152, 155, 162, 169, 172, 174, 180, 183, 186, 188, 189, 191, 192, 194, 195, 201, 202], "becom": [4, 30, 35, 36, 44, 61, 84, 85, 113, 134, 138, 143, 160, 163, 170, 172, 183, 185, 187, 195, 211], "been": [4, 10, 12, 15, 17, 30, 31, 39, 65, 66, 79, 85, 90, 93, 101, 108, 119, 123, 147, 155, 158, 159, 160, 161, 162, 163, 167, 168, 170, 172, 178, 181, 183, 186, 187, 189, 191, 194, 202, 204, 205, 208, 210, 211], "befor": [0, 2, 3, 4, 7, 8, 9, 11, 12, 14, 16, 17, 20, 25, 27, 31, 34, 35, 36, 44, 47, 52, 58, 59, 66, 67, 68, 73, 75, 82, 84, 85, 88, 89, 90, 93, 97, 101, 105, 106, 107, 110, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 134, 138, 139, 143, 146, 147, 150, 152, 154, 156, 157, 158, 160, 161, 162, 163, 166, 168, 169, 170, 172, 173, 174, 175, 177, 178, 181, 182, 183, 184, 186, 187, 192, 194, 195, 197, 199, 202, 204, 208, 211], "before_0": 160, "before_1": [160, 161, 170], "before_add_unit_loop": 183, "before_annot": 183, "before_annotate_buffer_access": 183, "before_bind": 183, "before_block": 183, "before_cache_inplac": 183, "before_cache_read": 183, "before_cache_writ": 183, "before_compute_at": 183, "before_decompos": 183, "before_fus": 183, "before_inlin": 183, "before_merg": 183, "before_n": [161, 170], "before_pad_einsum": 183, "before_parallel": 183, "before_partit": 183, "before_reindex": 183, "before_reindex_cache_read": 183, "before_reindex_cache_writ": 183, "before_reord": 183, "before_reverse_compute_at": 183, "before_rfactor": 183, "before_rolling_buff": 183, "before_run": [162, 178], "before_set_axis_separ": 183, "before_set_dtyp": 183, "before_set_scop": 183, "before_split": [181, 183], "before_storage_align": 183, "before_tensor": 183, "before_transform_block_layout": 183, "before_transform_layout": 183, "before_unannot": 183, "before_unrol": 183, "before_vector": 183, "beforehand": 16, "begin": [7, 16, 20, 35, 36, 46, 48, 49, 50, 51, 52, 67, 72, 96, 97, 99, 101, 104, 116, 117, 118, 120, 121, 123, 129, 147, 155, 159, 160, 161, 169, 170, 183, 185, 187, 202, 203, 206, 208], "begin_forward_func": 113, "begin_scop": 159, "beginn": [12, 211], "behav": [169, 187, 192], "behavior": [2, 4, 6, 9, 35, 51, 67, 68, 70, 71, 72, 73, 93, 96, 123, 147, 152, 154, 161, 163, 169, 172, 181, 183, 184, 185, 186, 187, 188, 200], "behaviour": 67, "behind": [206, 208], "being": [1, 4, 5, 6, 11, 12, 13, 16, 17, 27, 30, 32, 35, 36, 39, 58, 66, 67, 79, 84, 119, 123, 139, 147, 154, 155, 157, 159, 161, 162, 163, 164, 170, 172, 178, 183, 185, 191, 192, 195, 210], "believ": 11, "belong": [34, 123, 155, 164, 172, 187], "belong_to": 155, "below": [0, 2, 12, 13, 16, 17, 20, 27, 34, 35, 37, 39, 43, 53, 56, 57, 58, 59, 64, 66, 67, 68, 70, 71, 73, 75, 79, 80, 84, 88, 90, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 117, 118, 119, 122, 123, 126, 129, 130, 132, 139, 140, 143, 146, 147, 154, 160, 161, 162, 169, 172, 178, 181, 183, 185, 186, 187, 190, 191, 192, 194, 195, 200, 205, 206, 210, 211], "benchmark": [2, 62, 67, 69, 73, 74, 75, 97, 98, 99, 100, 105, 106, 107, 108, 116, 118, 120, 126, 152, 163, 171, 172, 186, 202, 210, 211], "benchmark_layout_transform": 108, "benchmarkresult": [152, 162, 178], "benefit": [10, 12, 16, 56, 67, 68, 75, 139, 160, 185, 187, 208], "bernardo": 212, "bert": 148, "besid": [2, 5, 12, 22, 43, 67, 68, 75, 109, 131, 134, 161, 169, 170, 183, 187, 189, 195, 208, 209], "best": [2, 9, 10, 39, 56, 65, 67, 72, 73, 74, 75, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 118, 123, 129, 146, 147, 156, 159, 163, 165, 172, 191, 200, 201, 202, 205, 208, 210, 211], "best_config": 104, "best_record": 146, "beta": [146, 160, 161, 170, 187, 194], "better": [3, 4, 8, 11, 35, 74, 84, 88, 105, 108, 111, 113, 116, 123, 129, 138, 146, 147, 160, 161, 167, 169, 172, 201, 202, 208, 210], "between": [1, 4, 10, 12, 16, 18, 20, 32, 34, 35, 37, 66, 74, 80, 84, 108, 110, 123, 138, 139, 143, 146, 147, 149, 152, 160, 161, 162, 163, 166, 169, 170, 171, 172, 178, 181, 183, 185, 186, 187, 192, 194, 195, 196, 197, 202, 208, 209, 210], "beyond": 1, "bf": [104, 134], "bf16": 186, "bf16computeleg": 186, "bf16storageleg": 186, "bf2d0c1e": 72, "bfloat16": 113, "bgemm": [98, 100], "bgr": 46, "bh": 187, "bi": 187, "bia": [18, 22, 59, 64, 68, 96, 101, 110, 113, 126, 129, 131, 132, 148, 160, 161, 163, 167, 170, 187, 194, 200], "biao": [160, 161], "bias": [47, 171], "bias_1": 96, "bias_add": [58, 59, 65, 68, 85, 126, 170, 172, 187, 194, 206], "bias_add_": 194, "bias_add_leg": 187, "bias_nod": 194, "bias_np": 96, "bias_scal": 167, "bias_tvm": 96, "bias_var": 167, "biasadd": 101, "bicub": [49, 161, 168, 170, 187], "bicubic_alpha": 187, "bicubic_exclud": 187, "bicycl": 47, "bidirect": 191, "bidirectional_rnn": 191, "bifrost": 180, "big": [8, 59, 90, 155, 163, 166, 169, 191], "bigger": [73, 74, 191], "biggest": 182, "bign": 90, "biject": 185, "bijective_layout": 185, "bijectivelayout": 185, "bilinear": [168, 170, 187], "bin": [56, 62, 66, 68, 69, 80, 97, 99, 119, 123], "bin2c": 123, "binar": [147, 187], "binari": [0, 3, 6, 17, 32, 34, 36, 56, 58, 61, 64, 67, 96, 101, 105, 106, 107, 108, 118, 123, 124, 144, 147, 148, 157, 169, 174, 181, 185, 187, 197, 200, 202, 208], "binarize_pack": 187, "binary_blob_log": 3, "binary_blob_s": 3, "binary_blob_type_kei": 3, "binary_dens": 187, "binary_search": 187, "bind": [2, 11, 17, 22, 26, 30, 35, 37, 43, 59, 61, 69, 70, 71, 82, 84, 88, 89, 96, 97, 104, 105, 106, 107, 109, 134, 135, 139, 142, 143, 147, 150, 155, 158, 159, 160, 161, 162, 163, 165, 166, 169, 172, 174, 181, 182, 183, 185, 186, 187, 190, 191, 194, 201, 205, 208, 209], "bind_const": [163, 172], "bind_gpu": 147, "bind_param": 162, "bind_params_by_nam": [85, 126, 194], "bind_symbolic_var": 162, "binding_map": [162, 163], "bindingblock": [162, 163], "bindingblocknod": 162, "bindparam": 163, "bindsymbolicvar": 163, "bindtarget": 186, "binop": 187, "bipolar": [170, 187], "bisect": 16, "bit": [6, 10, 62, 65, 66, 73, 74, 123, 167, 169, 170, 181, 183, 185, 186, 187, 195], "bit_axi": [170, 187], "bitflag": 186, "bitmask": [183, 185], "bitpack": [170, 187], "bitplan": 170, "bitseri": [170, 187], "bitserial_conv2d": 170, "bitserial_conv2d_leg": 187, "bitserial_conv2d_nchw": 187, "bitserial_conv2d_nhwc": 187, "bitserial_dens": [170, 187], "bitstream": 61, "bitwidth": 66, "bitwis": [161, 169, 185, 187], "bitwise_and": [161, 169, 185, 187], "bitwise_not": [161, 169, 185, 187], "bitwise_or": [161, 169, 185, 187], "bitwise_xor": [161, 169, 185, 187], "bj": 50, "bl": 88, "bla": 148, "black": [129, 132, 148, 183], "black_format": 183, "blank": [12, 156], "ble": 123, "blink": 118, "blitz": [198, 203, 207], "blob": [3, 46, 47, 48, 49, 50, 51, 53, 67, 69, 70, 71, 73, 119, 121, 122, 126, 160, 161, 170, 171, 172, 174, 206, 208], "blob_siz": 3, "blob_type_kei": 3, "block": [4, 5, 7, 8, 9, 12, 16, 19, 23, 25, 26, 30, 31, 36, 43, 59, 64, 65, 66, 75, 84, 89, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 134, 138, 146, 147, 149, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 169, 170, 171, 172, 174, 180, 181, 182, 183, 185, 186, 187, 188, 193, 200, 201, 209], "block_a": 183, "block_attr": 183, "block_axi": 27, "block_b": [183, 209], "block_build": 153, "block_c": 31, "block_col_warp": 89, "block_dim": 37, "block_factor": 88, "block_i": [31, 88, 89], "block_info": [149, 183], "block_j": 89, "block_k": 89, "block_or_loop": 183, "block_pad_const": 183, "block_pass": 163, "block_real": 185, "block_row_warp": 89, "block_rv": 149, "block_shap": [170, 187], "block_siz": [89, 170, 187], "block_sref": [183, 185], "block_sref_reus": 183, "block_x": [88, 89, 135], "block_z": [88, 89], "blockbuild": [22, 158, 159, 160, 161, 163], "blockdependenceinfo": 185, "blockidx": [37, 88, 89, 96, 104, 109, 110, 129, 134, 135, 136, 183, 186, 204, 208, 209], "blockidx_i": [89, 204], "blockidx_x": [89, 96, 134, 135, 136, 204], "blockidx_z": [89, 204], "blockinfo": 149, "blockiz": 183, "blockreal": [183, 185, 186], "blockrv": [149, 156, 183], "blockscop": [183, 185], "blocksiz": [75, 172], "blog": [15, 191], "blue": 148, "blueocean": 7, "bmma_sync": 185, "bn": [90, 172, 194, 208], "bn0_beta": [85, 206], "bn0_gamma": [85, 206], "bn0_moving_mean": [85, 206], "bn0_moving_var": [85, 206], "bn1_beta": [85, 206], "bn1_gamma": [85, 206], "bn1_moving_mean": [85, 206], "bn1_moving_var": [85, 206], "bn_beta": [129, 130], "bn_data_beta": [85, 206], "bn_data_gamma": [85, 206], "bn_data_moving_mean": [85, 206], "bn_data_moving_var": [85, 206], "bn_gamma": [129, 130], "bn_mean": [129, 130], "bn_mmean": [129, 130], "bn_mvar": [129, 130], "bn_node": 194, "bn_var": [129, 130], "bnf": 171, "bnn": 62, "board": [12, 16, 61, 66, 97, 105, 107, 109, 116, 117, 118, 119, 121, 122, 124, 180, 199], "bodi": [8, 16, 30, 31, 35, 36, 56, 70, 71, 82, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 134, 135, 136, 139, 146, 158, 159, 162, 163, 165, 166, 169, 171, 172, 181, 182, 183, 185, 186, 192, 194, 200, 201, 204, 208], "boilerpl": [194, 204], "bolt": 196, "bookkeep": 35, "bool": [4, 5, 22, 23, 30, 31, 34, 35, 36, 43, 82, 89, 90, 96, 97, 98, 99, 100, 110, 116, 117, 122, 126, 134, 135, 136, 139, 140, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 192, 194, 195, 200, 204, 208, 209], "bool_": 80, "boolean": [4, 6, 72, 146, 147, 158, 159, 160, 161, 163, 164, 169, 170, 172, 173, 174, 181, 183, 185, 186, 187, 188, 192], "booleanexpress": 186, "boost": [56, 58, 65, 89, 105, 202, 210], "boot": 66, "border": [168, 170, 187], "bore": 194, "bot": 9, "both": [1, 2, 3, 4, 5, 6, 7, 9, 12, 13, 16, 22, 34, 35, 41, 43, 44, 56, 58, 61, 65, 66, 70, 71, 75, 79, 82, 88, 89, 90, 109, 110, 117, 118, 122, 123, 129, 134, 140, 147, 150, 155, 157, 160, 161, 162, 164, 165, 168, 169, 170, 172, 174, 181, 182, 183, 185, 186, 187, 189, 191, 192, 194, 202, 204, 208, 210, 212], "bother": 34, "bottl": 171, "bottle_neck": 171, "bottleneck": [9, 171], "bottom": [7, 36, 47, 123, 138, 168, 187], "bottomright": 161, "bought": 9, "bound": [2, 27, 35, 37, 47, 138, 146, 155, 158, 159, 160, 161, 162, 163, 164, 166, 169, 172, 173, 181, 182, 183, 185, 186, 187, 191, 192, 194, 195], "bound_type_var": 164, "bound_var": [158, 164], "boundari": [20, 56, 119, 148, 168, 173, 181, 187, 194], "box": [17, 47, 118, 129, 132, 138, 148, 149, 168, 173, 187, 194], "box_bottom": 173, "box_ind": 168, "box_indic": [168, 187], "box_left": 173, "box_right": 173, "box_top": 173, "boxes_i": 72, "boxes_x": 72, "brace": 192, "bracket": [16, 187], "branch": [7, 15, 16, 17, 35, 36, 66, 90, 116, 117, 120, 122, 124, 162, 163, 166, 172, 181, 183, 185, 186, 191, 192, 194, 195], "brand": 56, "breadth": 163, "break": [7, 35, 72, 90, 123, 139, 172], "breakdown": [2, 146], "breakpoint": 160, "brew": 17, "bridg": [56, 142, 148, 196], "brief": [2, 4, 5, 12, 34, 36, 118], "briefli": [12, 37, 195], "bring": [2, 33, 41, 44, 47, 75, 81, 104, 108, 115, 125, 167, 174, 194, 196, 198, 205, 209], "broad": [15, 191, 209], "broadcast": [34, 90, 101, 160, 161, 169, 175, 185, 187, 192, 193, 195, 200, 204, 208], "broadcast_add": [172, 204], "broadcast_from_work": 160, "broadcast_from_worker0": [161, 175], "broadcast_mul": 204, "broadcast_to": [160, 161, 163, 169, 187], "broadcast_to_lik": 169, "broadcast_typ": 169, "broader": [9, 10], "broadli": [11, 32], "broadwel": 210, "broken": 122, "brows": 118, "browser": [5, 142], "bs_c": [75, 101, 187], "bs_r": [75, 100, 101, 187], "bsnh": 161, "bsp": 181, "bsr": [75, 170, 172, 187], "bsr_dens": [75, 172], "bsr_matrix": [75, 170], "bt": [13, 192, 195], "bucket": [61, 172], "budget": [96, 97, 98, 99, 100, 101, 105, 106, 107, 200, 201], "buf": 118, "buf_": 36, "buf_0": 36, "buf_1": 36, "buf_decl_": 36, "buf_idx_": 36, "buf_index_arrai": 183, "buf_len": 118, "buf_stream": 36, "buf_typ": 183, "buffer": [1, 4, 6, 23, 25, 26, 30, 31, 36, 37, 43, 53, 56, 74, 82, 88, 89, 90, 96, 101, 110, 118, 122, 134, 135, 136, 139, 140, 146, 147, 150, 158, 160, 161, 163, 170, 176, 181, 182, 183, 184, 185, 186, 187, 189, 200, 204, 208, 209], "buffer_dim_align": 183, "buffer_index": 183, "buffer_load": 185, "buffer_map": [101, 185, 186], "buffer_ptr": 185, "buffer_typ": [134, 135, 136, 140, 185, 187, 204, 208], "buffer_var": 185, "buffer_var_map": 182, "bufferdef": 184, "bufferload": [182, 183, 185, 186], "buffernod": 186, "bufferr": 185, "bufferregion": [182, 185], "bufferstor": [182, 183, 185, 186], "bug": [17, 39, 48, 197], "bug_fix": 16, "bugfix": 16, "build": [0, 1, 2, 3, 4, 5, 7, 12, 13, 15, 16, 17, 22, 30, 31, 34, 37, 41, 43, 46, 47, 49, 53, 56, 60, 61, 66, 67, 68, 69, 72, 73, 74, 75, 79, 80, 82, 84, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 113, 117, 118, 122, 123, 127, 128, 131, 132, 134, 138, 139, 141, 142, 144, 145, 146, 147, 150, 152, 154, 156, 157, 159, 160, 162, 165, 167, 169, 171, 172, 176, 178, 180, 181, 185, 186, 187, 192, 193, 194, 195, 198, 200, 201, 202, 204, 205, 206, 208, 210, 212], "build_config": [3, 75, 169, 172], "build_cuda": 37, "build_cuda_on": 37, "build_dir": 118, "build_dock": 79, "build_func": [67, 97, 99, 105, 107, 117, 130, 146, 147, 202], "build_gcn": [126, 128, 198], "build_input": 156, "build_kwarg": [117, 147], "build_loc": 79, "build_modul": [3, 37, 48, 49, 50, 64, 70, 71, 72, 74, 82, 85, 105, 106, 107, 108, 126, 129, 130, 209], "build_module_with_cross_compil": 174, "build_opt": [66, 117], "build_result": 156, "build_runtime_modul": 148, "buildconfig": 4, "buildcuda": 37, "builder": [19, 36, 67, 97, 99, 104, 105, 106, 107, 108, 117, 146, 147, 156, 158, 159, 160, 162, 169, 201, 202], "builder_": 23, "builder_result": 156, "builderinput": 156, "builderresult": 156, "buildertyp": 156, "buildid": 62, "built": [7, 12, 17, 23, 35, 36, 56, 58, 59, 65, 68, 79, 85, 93, 119, 123, 124, 129, 134, 138, 142, 143, 144, 145, 148, 149, 150, 156, 157, 159, 162, 165, 171, 180, 181, 186, 189, 191, 195, 196, 201, 202, 203, 210], "builtin": [2, 36, 113, 160, 163, 186], "bulk": [35, 37, 185, 195], "bullet": 16, "bump": 17, "bunch": [75, 123], "bundl": [5, 60, 148, 163, 205], "bundlemodelparam": 163, "burden": [9, 16, 208], "burn": 66, "burst": 155, "button": [7, 9, 118], "bwmma": 185, "bx": [37, 88, 104, 136, 208], "byoc": [56, 65, 118, 130, 167, 205], "bypass": [35, 36, 52, 147], "byte": [0, 6, 65, 90, 118, 119, 120, 123, 146, 147, 152, 155, 157, 160, 161, 169, 174, 180, 182, 185, 187], "byte_count": 185, "bytearrai": [0, 148, 152, 169, 174], "bytecod": [113, 162, 165], "bz": 88, "c": [1, 2, 3, 5, 15, 25, 27, 30, 31, 32, 35, 37, 44, 47, 53, 56, 58, 61, 62, 66, 73, 74, 75, 80, 82, 84, 89, 90, 96, 97, 99, 101, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 132, 134, 136, 139, 140, 145, 146, 147, 148, 150, 151, 154, 155, 157, 158, 159, 160, 161, 162, 168, 169, 170, 172, 173, 174, 175, 178, 180, 181, 183, 185, 186, 187, 189, 191, 192, 195, 199, 200, 201, 204, 205, 208, 210, 212], "c1": 192, "c2": 192, "c4": 108, "c5": [74, 108], "c_": 27, "c_1": [90, 136, 139, 140, 183, 200, 208], "c_2": [136, 140, 208], "c_backend_api": 122, "c_compiler_input0": 36, "c_compiler_input1": 36, "c_compiler_input2": 36, "c_compiler_input3": 36, "c_cp": 161, "c_data": 84, "c_dtype": 185, "c_global": [90, 208], "c_global_1": [90, 208], "c_index": 185, "c_init": 187, "c_mod": 157, "c_nd": 31, "c_np": [31, 104, 200, 201], "c_pad": 183, "c_runtime_api": [1, 5, 36, 56, 122], "c_share": 183, "c_source_cod": 122, "c_source_modul": 122, "c_tvm": [104, 200, 201], "cabl": 157, "cach": [5, 35, 51, 56, 65, 67, 68, 72, 73, 88, 93, 104, 105, 106, 107, 108, 113, 121, 126, 146, 147, 148, 152, 160, 165, 170, 177, 181, 183, 186, 187], "cache_index": 183, "cache_inplac": 183, "cache_line_byt": 146, "cache_line_s": 186, "cache_read": [88, 89, 96, 104, 181, 183], "cache_writ": [88, 89, 90, 104, 181, 183, 208], "cached_block": 183, "cached_func": 165, "cachedfunc": 165, "caden": [51, 121], "caff": 167, "caffe2": [167, 169], "caffe_pb2": 167, "caffemodel": 167, "calcul": [25, 34, 56, 67, 85, 119, 120, 147, 152, 155, 160, 161, 163, 168, 169, 170, 171, 172, 173, 182, 185, 187], "calculate_allocated_byt": 182, "calculate_constant_byt": 182, "calculate_qparam": [73, 121], "calculate_workspace_byt": 182, "calculateexpr": 8, "calculateexprinint64": 8, "calculation_dtyp": 67, "calibr": [66, 73, 164], "call": [1, 2, 3, 4, 5, 6, 13, 15, 16, 18, 20, 22, 23, 27, 35, 36, 37, 43, 44, 52, 56, 59, 66, 70, 71, 73, 74, 75, 79, 80, 82, 85, 88, 89, 90, 106, 110, 113, 116, 118, 120, 121, 122, 123, 129, 130, 131, 132, 136, 138, 139, 142, 146, 147, 148, 151, 152, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 174, 175, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 201, 204, 206, 208, 210, 211, 212], "call_all_topi_func": 146, "call_builtin_with_ctx": [161, 162], "call_cpack": 185, "call_cpacked_low": 185, "call_dp": 2, "call_dps_pack": [22, 110, 161, 162, 163], "call_extern": [139, 183, 185], "call_impl": 183, "call_inplace_pack": 161, "call_intrin": [89, 185], "call_llvm_intrin": 185, "call_llvm_pure_intrin": 185, "call_low": 172, "call_nod": 85, "call_node_inst": 85, "call_onli": 163, "call_pack": [132, 163, 175, 181, 185, 187], "call_packed_low": 185, "call_pattern": 194, "call_pure_extern": 185, "call_pure_pack": [161, 162], "call_t": [159, 163], "call_te_with_grad": 159, "call_tir": [2, 22, 23, 43, 110, 159, 160, 161, 162, 163, 185], "call_tir_inplac": [160, 161, 162, 163], "call_tir_local_view": 161, "call_tir_with_grad": [159, 161, 162], "callabl": [4, 110, 136, 146, 147, 148, 149, 155, 156, 158, 159, 160, 161, 162, 163, 166, 169, 172, 174, 178, 181, 183, 185, 186, 187, 188, 192], "callback": [5, 67, 82, 84, 104, 105, 106, 107, 108, 117, 123, 132, 146, 147, 148, 156, 159, 163, 166, 172, 183, 185, 186, 188, 194, 201, 202], "callbacklisttyp": 156, "callcheck": 35, "calle": [5, 161, 162], "calleffectkind": 185, "caller": [5, 183], "callgraph": 164, "callhello": 5, "callingconv": 155, "callnod": [35, 36, 85, 161, 162, 163], "callpack": 5, "callpattern": 166, "calltirrewrit": [113, 163], "calltirwithgradattr": 161, "camel": 16, "camera": 123, "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 22, 23, 25, 27, 30, 31, 32, 34, 35, 36, 37, 39, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 81, 82, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 131, 132, 134, 135, 136, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212], "can_convert_multiply_to_intdiv": 187, "can_decompose_pad": 183, "can_prov": 187, "can_prove_equ": 187, "candid": [4, 9, 11, 12, 15, 143, 146, 147, 156, 172, 183, 186, 188, 201], "candidate_block": 75, "cannot": [1, 4, 7, 8, 13, 14, 17, 30, 36, 58, 61, 70, 71, 75, 79, 90, 101, 104, 129, 134, 142, 146, 147, 149, 155, 157, 158, 160, 161, 162, 163, 164, 167, 169, 178, 181, 183, 185, 187, 189, 192, 194, 197, 201, 208, 211], "canon": [160, 161, 168, 169, 170, 171, 180], "canon_multi_target": [165, 169, 180], "canon_multi_target_and_host": 180, "canon_target": [146, 165, 169, 180], "canon_target_and_host": 180, "canon_target_map_and_host": 180, "canonic": [84, 163, 172, 187], "canonical_simplifi": 187, "canonicalizebind": 163, "canonicalizecast": [169, 172], "canonicalizeop": [85, 169, 172], "canva": 49, "cap": 16, "capabilit": 202, "capabl": [1, 18, 56, 59, 76, 79, 80, 89, 118, 123, 148, 174, 191, 192, 194, 197, 200, 208, 210], "capac": 180, "capsul": 176, "captur": [11, 35, 48, 120, 160, 163, 172, 180, 181, 182], "capturepostdfsindexinspan": 172, "car": 123, "car_224": 123, "car_64": 123, "car_imag": 123, "card": [66, 106], "care": [7, 8, 9, 12, 123, 146, 147, 189, 191], "carefulli": [15, 123, 181, 183, 208], "carri": [4, 27, 135, 148, 172, 181, 187, 212], "cars_train": 123, "cartesian": 169, "cascad": 183, "cascadelak": [73, 74, 211], "case": [1, 2, 5, 7, 8, 9, 10, 11, 12, 15, 16, 17, 22, 23, 34, 35, 36, 44, 56, 58, 59, 60, 73, 74, 75, 79, 82, 96, 101, 104, 110, 116, 123, 124, 126, 132, 134, 139, 147, 154, 155, 156, 158, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 174, 178, 181, 183, 185, 186, 187, 188, 191, 192, 194, 195, 200, 201, 202, 208, 210, 212], "cast": [30, 36, 58, 67, 84, 89, 159, 160, 161, 162, 163, 169, 172, 183, 185, 186, 187, 195], "cast_lik": 169, "cat": [17, 46, 48, 49, 50, 51, 53, 67, 68, 69, 70, 71, 73, 119, 121, 202, 210], "catamount": [67, 73], "catan": 123, "catan_224": 123, "catan_64": 123, "catan_imag": 123, "catch": [85, 123, 164], "categ_fn": 67, "categ_url": 67, "categor": [12, 123], "categori": [4, 13, 67, 119, 123, 173], "categorical_crossentropi": 123, "caus": [7, 9, 10, 14, 16, 39, 48, 59, 65, 72, 74, 85, 93, 131, 147, 157, 161, 162, 169, 172, 187], "causal": [160, 161], "causal_mask": 161, "caution": [129, 165, 169, 182, 183], "cautiou": 9, "caveat": 160, "cb": [49, 139], "cbla": [36, 132, 181, 187], "cc": [1, 3, 4, 5, 13, 32, 34, 35, 36, 37, 58, 60, 61, 65, 66, 88, 90, 116, 121, 139, 187, 192, 195, 208, 212], "cc_code": 139, "ccach": 148, "ccache_env": 148, "ccachekei": 165, "ccachevalu": 165, "ccccdddd": 56, "ccl": [160, 175], "ccl_allgath": 160, "ccl_allreduc": 160, "ccl_broadcast_from_worker0": 160, "ccompil": 36, "cd": [17, 56, 58, 60, 61, 62, 64, 66, 69, 70, 71, 80, 109, 116, 117, 119, 120, 122, 124, 143, 211, 212], "cdf": 160, "cdll": 143, "cdot": 161, "cdr": [170, 187], "ceil": [65, 161, 168, 169, 170, 181, 185, 187], "ceil_div": 189, "ceil_log2": 187, "ceil_mod": [111, 161, 170, 187], "ceildiv": 185, "cell": [171, 187, 191], "cell1": 191, "cell2": 191, "cell_out": 191, "center": [66, 110, 111, 161, 168, 170, 173, 187], "centercrop": [50, 51, 67, 73, 121], "central": [5, 32, 44, 97, 105, 106, 107, 209], "centric": 56, "certain": [4, 7, 8, 11, 25, 36, 84, 110, 123, 139, 146, 147, 151, 161, 163, 166, 167, 181, 183, 185, 187, 188, 191, 192, 194, 195, 208, 209], "certainli": [5, 172], "cfd09cf1ca9e943f0ee12a18813a5c75": 100, "cffi": 47, "cfg": [37, 47, 104, 147, 187], "cfg_name": 47, "cfg_path": 47, "cfg_url": 47, "cfgdtcmsz": 119, "cfgitcmsz": 119, "chain": [8, 147, 158, 163, 164, 183], "challeng": [5, 20, 37, 113, 123], "chananel": 187, "chanc": [90, 139], "chang": [2, 5, 7, 8, 11, 12, 13, 14, 16, 17, 20, 37, 58, 59, 65, 66, 67, 68, 69, 70, 71, 74, 75, 82, 85, 90, 93, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 116, 118, 121, 122, 123, 124, 126, 142, 160, 162, 163, 165, 167, 169, 172, 181, 183, 185, 186, 187, 191, 192, 194, 201, 208], "change_dtyp": 167, "changebatch": 172, "changedatatyp": 167, "changelog": [160, 161], "channel": [10, 11, 49, 68, 73, 80, 85, 88, 89, 123, 124, 129, 130, 155, 157, 160, 161, 164, 168, 170, 171, 173, 174, 185, 187, 197, 206], "channel_axi": [160, 161, 187], "channel_block": [185, 187], "channel_chunk": 187, "channel_multipli": 187, "channelis": 187, "chapter": 20, "char": [3, 5, 36, 96, 118, 119, 123, 134], "charact": 187, "character": 191, "charg": [97, 105, 107, 189], "chat": 113, "cheap": 123, "cheat": 123, "check": [2, 3, 4, 5, 7, 8, 10, 13, 16, 17, 20, 30, 31, 35, 36, 43, 49, 53, 56, 65, 66, 67, 74, 75, 80, 82, 97, 98, 99, 100, 101, 104, 110, 118, 123, 124, 126, 129, 139, 142, 143, 146, 147, 148, 149, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 169, 171, 172, 176, 181, 182, 183, 185, 186, 187, 190, 192, 194, 195, 201, 202, 206, 208, 210], "check_basic_block_normal_form": 164, "check_const": 164, "check_grad": 171, "check_kind": 164, "check_struct_info": 158, "check_task_input_by_placeholder_nam": 146, "check_workload_kei": 146, "checked_typ": [36, 155, 172, 194], "checked_type_": 163, "checker": [146, 160, 186, 195], "checker_": 35, "checklist": 36, "checkout": [5, 7, 17, 37, 60, 93, 116, 117, 118, 120, 122, 124], "checkpoint": [51, 68, 72, 73, 121, 161, 163], "chen": [84, 132, 134, 135, 163, 208], "chengfan": [96, 97, 100, 101, 200], "cherri": 15, "chi": [85, 131], "chien": 126, "child": [3, 157, 166, 183, 194], "child_pattern": 194, "children": [3, 183, 184], "chintala": 171, "chip": [64, 89, 109, 180], "chmod": [66, 116, 117, 120, 122, 124], "choic": [2, 9, 13, 15, 22, 56, 75, 147, 169, 187], "chois": 169, "choos": [5, 7, 15, 34, 56, 66, 67, 73, 74, 75, 104, 108, 117, 119, 122, 124, 143, 147, 162, 165, 167, 178, 201, 202, 204, 205, 206, 208, 210], "chose": [90, 117, 208], "chosen": [12, 117, 122, 161, 170, 171, 180, 187, 208], "chosen_block": 75, "chri": [201, 202, 205, 210], "christian": 171, "christoph": [191, 212], "chroma": 49, "chunk": [75, 89, 90, 160, 161, 183], "churaev": [56, 59], "chw": [171, 202], "ci": [8, 15, 17, 56, 88, 96, 98, 100, 104, 110, 111, 113, 187, 208], "ci_adreno": 56, "ci_cpu": [16, 142], "ci_foo": 7, "ci_gpu": 79, "ci_lint": [8, 16], "circular": 183, "circumst": 191, "citation_graph": 126, "civil": 9, "cl": [20, 22, 23, 43, 56, 67, 68, 69, 99, 109, 110, 151, 156, 162, 166, 174, 176, 208, 211], "cl_qcom_ml_op": 56, "clamp": 161, "clang": [8, 16, 56, 68, 84, 131, 139, 143], "clarif": 9, "clarifi": 12, "clariti": 163, "clases": 171, "class": [1, 2, 3, 4, 5, 7, 8, 12, 13, 18, 20, 22, 23, 27, 30, 31, 34, 35, 36, 37, 43, 44, 46, 47, 48, 50, 51, 53, 63, 64, 65, 67, 69, 70, 71, 72, 73, 80, 82, 84, 89, 90, 96, 110, 111, 113, 121, 123, 126, 131, 132, 134, 135, 136, 139, 140, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 185, 186, 187, 188, 192, 194, 195, 200, 202, 204, 208, 209, 210, 212], "class_id": 173, "class_id_to_kei": [51, 121], "class_nam": 51, "class_path": [51, 121], "class_url": [51, 121], "classi": 119, "classic": [51, 67, 187], "classif": [46, 48, 64, 67, 69, 120, 123, 171, 202, 210, 211], "classifi": [4, 67, 119, 123, 171, 192, 202, 210], "classify_image_graph_def": 52, "classmethod": [148, 177], "claus": [169, 191, 192, 195], "clean": [11, 80, 147, 187, 189], "cleanup": [16, 82, 120, 156, 172], "clear": [4, 9, 11, 13, 16, 36, 85, 146, 147, 165], "clear_cach": 147, "clear_fallback_cach": 147, "clear_sess": 69, "clearli": [2, 34, 195], "clever": 56, "cli": [115, 123, 125, 148, 198, 199], "click": [7, 9, 17, 22, 23, 30, 31, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212], "client": [174, 197], "client_via_proxi": 174, "climb": 119, "clip": [49, 65, 161, 169, 173, 187], "clml": [56, 67, 68], "clml_modul": 56, "clock": [147, 155], "clock_frequency_hz": 155, "clone": [17, 61, 62, 66, 69, 70, 71, 72, 109, 118, 120, 142, 143, 156, 172], "cloned_context": 156, "cloned_postproc": 156, "cloned_rul": 156, "cloned_sg": 156, "close": [2, 17, 19, 22, 36, 53, 74, 138, 157, 161, 170, 171, 174, 187, 192], "closer": [2, 108, 123, 146, 147, 181, 185], "closest": [123, 172, 183, 187], "closur": [161, 162, 171, 172, 178, 190, 191], "closure_var": 181, "cloud": [66, 113], "cloudpickl": [104, 105, 106, 107, 119, 143, 201], "cls_prob": 173, "clump": 123, "cluster": [56, 75], "clz": [185, 187], "cm": 46, "cmake": [0, 16, 32, 36, 56, 58, 59, 62, 65, 66, 67, 69, 70, 71, 79, 80, 93, 109, 119, 120, 129, 130, 143], "cmake_build_typ": 143, "cmake_c_compil": 80, "cmake_cxx_compil": 80, "cmake_cxx_compiler_launch": 143, "cmake_find_root_path_mode_includ": 80, "cmake_find_root_path_mode_librari": 80, "cmake_find_root_path_mode_packag": 80, "cmake_find_root_path_mode_program": 80, "cmake_sysroot": 80, "cmake_system_nam": 80, "cmath": 36, "cmd": [119, 148], "cmd_stream": 119, "cmd_stream_vers": 119, "cmod": 56, "cms_length": 119, "cmsi": [115, 118, 125, 198], "cmsis_5": 120, "cmsis_nn": 118, "cmsis_nn_tag": 120, "cmsis_nn_url": 120, "cmsis_path": 120, "cmsis_sha": 120, "cmsis_url": 120, "cmsisnn": [118, 120], "cn": 50, "cn10ka": 64, "cnf10kb": 64, "cnhw": 187, "cnn": [66, 170, 187], "co": [2, 17, 65, 96, 98, 100, 104, 161, 169, 181, 185, 186, 187], "cobj_bin": 148, "coco": [47, 118, 123], "coco_nam": 47, "coco_path": 47, "coco_url": 47, "coco_v1": 72, "cocodataset": 123, "code": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 15, 16, 17, 20, 22, 23, 27, 30, 31, 32, 34, 35, 37, 39, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 120, 121, 124, 126, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 144, 146, 147, 148, 150, 151, 152, 155, 156, 159, 160, 162, 163, 165, 166, 168, 169, 170, 171, 172, 174, 180, 181, 183, 185, 186, 187, 188, 189, 192, 194, 195, 197, 200, 201, 202, 204, 205, 206, 209, 210, 211, 212], "code_hash": 147, "code_stream_": 36, "codebas": [2, 8, 11, 13, 15, 17, 38], "codeblock": 5, "codegen": [2, 6, 33, 37, 41, 44, 58, 59, 64, 110, 118, 122, 130, 150, 162, 163, 165, 172, 180, 196, 205, 212], "codegen_c": 36, "codegen_cuda": 37, "codegen_llvm": 37, "codegencbas": 36, "codegencuda": 37, "codegenllvm": 37, "codgen": 180, "codifi": 7, "coeff": 187, "coeffici": [161, 168, 170, 187], "col": 185, "col_offset": 155, "col_sum": 177, "colab": [22, 23, 30, 31, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212], "collabor": [9, 11, 15, 23, 134, 199], "collag": 172, "collagepartit": 172, "collaps": [161, 169, 187], "collapse_sum": 187, "collapse_sum_lik": [34, 161, 169], "collapse_sum_to": [161, 169], "collapse_target": 161, "collapse_typ": 169, "collapseif": 35, "collapsesumlik": 34, "collect": [2, 3, 4, 9, 10, 17, 18, 33, 34, 35, 36, 37, 41, 43, 44, 59, 78, 85, 93, 119, 126, 141, 146, 147, 148, 155, 158, 161, 164, 169, 175, 177, 180, 183, 186, 187, 195, 201, 208, 210], "collect_non_negative_express": 158, "collector": [93, 177], "collid": 8, "collison": 155, "color": [123, 138, 148, 206], "color_bgr2rgb": 72, "column": [66, 90, 134, 135, 155, 160, 161, 169, 177, 185, 187, 192, 208], "column_major": 185, "com": [7, 8, 12, 17, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 93, 109, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 142, 143, 160, 161, 170, 171, 172, 181, 185, 202, 208, 210, 211], "comand": 56, "combin": [13, 15, 19, 22, 34, 37, 56, 111, 113, 146, 147, 150, 155, 161, 162, 163, 170, 172, 178, 185, 186, 187, 201, 205, 208], "combinecontextcal": 186, "combined_non_max_suppress": 173, "combineparallelbatchmatmul": [169, 172], "combineparallelconv2d": [169, 172], "combineparalleldens": [169, 172], "combineparallelmatmul": 163, "come": [7, 9, 10, 27, 34, 41, 44, 60, 73, 74, 131, 158, 161, 163, 173, 181, 185, 202, 210, 212], "comm_reduc": [134, 140, 181, 185, 204], "comma": [32, 187], "command": [1, 8, 12, 14, 16, 17, 56, 58, 60, 62, 69, 70, 71, 79, 80, 93, 96, 97, 105, 106, 107, 109, 118, 119, 123, 124, 142, 143, 148, 175, 200, 202, 205, 208, 210], "command_stream": 119, "commandlin": 62, "comment": [9, 12, 15, 16, 52, 73, 74, 138, 155, 166, 169, 208], "commerci": 118, "commit": [7, 9, 15, 17, 32, 39, 143, 156, 185], "commit_hash": 17, "commit_tuning_record": 156, "commit_workload": 156, "committ": [7, 8, 9, 15, 16], "committe": 11, "committership": 10, "commmit": 16, "common": [1, 2, 4, 5, 7, 9, 13, 16, 20, 35, 36, 43, 79, 84, 94, 126, 148, 154, 155, 158, 160, 163, 169, 170, 172, 182, 183, 186, 187, 188, 190, 192, 194, 201, 204, 205, 208], "commonli": [20, 27, 32, 34, 36, 191], "commonsubexprelimtir": 186, "commreduc": [134, 185, 204], "commun": [12, 15, 16, 17, 32, 56, 69, 80, 97, 105, 106, 107, 116, 117, 118, 120, 121, 122, 123, 124, 141, 175, 185, 192, 195], "commut": [140, 181, 185, 187], "compact": [139, 150, 172, 181, 182, 183, 185, 186, 187, 201], "compactbufferalloc": [183, 186], "compactli": [191, 195], "companion": 167, "compar": [9, 56, 62, 67, 74, 75, 90, 116, 134, 138, 139, 140, 155, 169, 170, 171, 176, 182, 192, 204, 205], "comparison": [51, 117, 121, 126, 152, 155, 160, 170, 182, 185, 187, 208], "compat": [4, 30, 36, 51, 52, 62, 65, 67, 68, 72, 79, 123, 132, 146, 160, 161, 162, 165, 167, 169, 172, 175, 186, 187], "compil": [0, 1, 2, 3, 4, 6, 12, 18, 20, 23, 27, 30, 31, 32, 33, 34, 36, 37, 39, 41, 43, 44, 55, 56, 57, 58, 59, 60, 63, 76, 77, 79, 84, 86, 88, 89, 90, 93, 97, 99, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 117, 118, 125, 129, 130, 132, 136, 141, 143, 146, 147, 148, 149, 150, 152, 155, 158, 160, 161, 162, 163, 164, 165, 167, 169, 172, 174, 177, 180, 181, 183, 185, 187, 192, 194, 195, 196, 198, 199, 201, 203, 205, 207], "compilationconfig": [172, 180], "compile_and_run": 212, "compile_coreml": 148, "compile_cuda": 148, "compile_definit": 120, "compile_engin": 165, "compile_func": [148, 174], "compile_met": 148, "compile_model": [49, 55, 198], "compile_opt": 160, "compiled_artifact": 2, "compiled_lib": 152, "compiler_filt": 172, "compiler_src": 36, "compiltaion": 119, "complementari": 2, "complet": [1, 3, 7, 12, 30, 36, 72, 117, 132, 146, 159, 163, 169, 183, 185, 192, 201, 202, 203, 208, 209, 210, 211], "complex": [2, 9, 22, 56, 58, 80, 90, 111, 123, 146, 183, 190, 191, 194, 195, 199, 202, 208, 209, 210, 212], "compliant": 160, "complic": [75, 96, 131, 135, 138, 139, 146, 166, 183, 192, 200, 204], "compon": [2, 16, 18, 30, 35, 37, 43, 56, 62, 65, 80, 120, 160, 169, 183, 187, 206], "compos": [2, 16, 18, 34, 36, 41, 44, 50, 51, 67, 73, 111, 113, 121, 131, 136, 148, 160, 163, 164, 165, 181, 185, 187, 195], "composit": [2, 58, 147, 163, 172, 183, 194], "comprehens": [9, 12, 191], "compress": [56, 75, 80], "compris": [27, 30, 37], "compromis": 9, "comput": [1, 2, 5, 6, 18, 20, 22, 23, 25, 26, 30, 35, 36, 37, 43, 44, 46, 56, 61, 62, 64, 67, 68, 70, 71, 82, 88, 90, 97, 98, 99, 100, 109, 110, 111, 113, 122, 123, 129, 132, 133, 134, 135, 136, 138, 139, 146, 147, 148, 150, 155, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 180, 181, 183, 185, 186, 187, 190, 191, 192, 200, 201, 202, 204, 205, 206, 209, 210], "computable_at_compile_tim": 158, "compute_1": [96, 101, 204], "compute_2": 101, "compute_3": 101, "compute_at": [88, 89, 90, 96, 101, 104, 134, 135, 138, 140, 146, 181, 183, 200, 208], "compute_cumprod": 34, "compute_cumsum": 34, "compute_dag": [96, 97, 98, 99, 100, 101, 146, 200], "compute_flop": 147, "compute_i0": 96, "compute_i0_i": 96, "compute_i0_o_i": 96, "compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fus": 96, "compute_i0_o_o_i": 96, "compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fus": 96, "compute_i0_o_o_o": 96, "compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fus": 96, "compute_i1": 96, "compute_i1_i": 96, "compute_i1_o_i": 96, "compute_i1_o_o_i": 96, "compute_i1_o_o_o": 96, "compute_i2": 96, "compute_i2_i": 96, "compute_i2_o_i": 96, "compute_i2_o_o_i": 96, "compute_i2_o_o_o": 96, "compute_i3": 96, "compute_i3_i": 96, "compute_i3_o_i": 96, "compute_i3_o_o_i": 96, "compute_i3_o_o_o": 96, "compute_inlin": [88, 89, 96, 101, 104, 181, 183, 208], "compute_intermedi": [23, 43], "compute_or_sch": 146, "compute_relu": 181, "compute_root": [181, 208], "compute_tensor": 146, "compute_vers": [89, 148], "computedag": 146, "computeinlin": 183, "computelibrari": 58, "computeop": [146, 147, 181], "computeprimvalu": 163, "con": [68, 191, 195], "concat": [34, 160, 161, 163, 170, 185, 187, 191], "concat_x": 113, "concat_x1_x2": 113, "concatattr": 161, "concaten": [34, 65, 113, 148, 160, 161, 169, 187, 191], "concentr": 30, "concept": [4, 12, 20, 30, 36, 192, 205, 208], "concis": [113, 191, 208], "concisemodul": 30, "concisemodulefrompython": 30, "concist": 155, "conclud": [37, 56, 66, 79], "concret": [8, 14, 35, 80, 155, 160, 191, 195], "concrete_shap": 155, "concurr": 90, "cond": [35, 162, 166, 169, 181, 185, 189, 194], "conda": [66, 143], "condens": 30, "condit": [8, 39, 72, 101, 134, 147, 155, 160, 161, 162, 166, 169, 181, 182, 183, 185, 186, 187, 192, 194, 195, 202, 204], "condition1": 189, "condition2": 189, "condition3": 189, "conditional_typ": 186, "conditon": 169, "conduct": [163, 183, 186, 188, 201], "condval": 96, "condval_1": 96, "condval_2": 96, "condval_3": 96, "conf": [12, 17], "confid": [25, 123, 173], "config": [0, 2, 4, 14, 32, 36, 52, 56, 58, 59, 62, 64, 65, 66, 67, 69, 70, 71, 75, 79, 80, 82, 84, 89, 93, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 143, 146, 147, 157, 167, 169, 172, 186, 187, 188, 201, 202], "config_file_nam": 130, "config_main_stack_s": [116, 117, 120, 122], "config_spac": [67, 104, 105, 106, 107, 108, 201, 202], "configent": [147, 201], "configspac": [104, 147, 201], "configur": [2, 4, 7, 9, 12, 14, 16, 32, 35, 36, 56, 58, 65, 66, 69, 70, 71, 79, 84, 97, 104, 105, 106, 107, 109, 110, 113, 118, 119, 123, 130, 144, 146, 147, 151, 157, 160, 162, 169, 172, 177, 186, 188, 201, 202, 205, 210], "confirm": [48, 69, 97, 105, 106, 107, 143, 186], "conflict": [12, 15, 88, 96, 98, 143, 160, 163, 181, 183, 189], "conform": 208, "confus": [10, 62, 162, 178], "congigur": 67, "conglomer": 123, "congratul": [36, 39], "conjug": [169, 187], "conjunct": 31, "connect": [56, 58, 67, 70, 71, 80, 109, 118, 119, 120, 123, 129, 130, 131, 138, 148, 165, 174, 192, 193, 211], "connect_track": [67, 69, 174], "connection_typ": 58, "consecut": [2, 136, 163, 169, 172, 173, 181, 183, 186, 208], "consensu": [11, 15], "consequ": [2, 15, 25], "consid": [12, 15, 16, 34, 35, 36, 58, 104, 105, 107, 123, 146, 158, 160, 161, 162, 164, 167, 168, 170, 182, 185, 187, 191, 192, 194, 195, 208], "consider": 9, "consist": [1, 11, 12, 15, 20, 37, 44, 66, 68, 101, 109, 110, 111, 113, 123, 129, 130, 136, 155, 163, 177, 182, 183, 192, 195, 202, 206, 208, 212], "consol": [67, 97, 98, 99, 100, 118, 119], "consolid": 186, "const": [1, 3, 4, 5, 8, 32, 34, 35, 36, 37, 64, 82, 84, 88, 89, 118, 119, 123, 134, 140, 161, 162, 163, 168, 169, 170, 181, 183, 185, 187, 194], "const_cast": 123, "const_fold": 188, "const_int_bound": 187, "const_loc": 148, "const_rang": 189, "const_vector": 187, "constant": [0, 2, 4, 5, 15, 43, 59, 72, 84, 111, 113, 126, 130, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 181, 182, 183, 185, 186, 187, 189, 190, 191, 194, 195, 201], "constant_byte_align": 182, "constant_info_arr": 155, "constant_memory_pool": 169, "constant_valu": [161, 170], "constantli": [9, 205], "constantmemorypool": [155, 169], "constantnod": [35, 162], "constantpattern": 166, "constantpoolinfo": [155, 169], "constevalu": 35, "constintbound": 187, "constrain": [119, 139, 172, 194], "constraint": [82, 90, 135, 147, 155, 160, 166, 182, 185, 187, 190, 192, 208], "constraint_scop": 187, "constraintscop": 187, "construct": [0, 1, 2, 3, 9, 13, 27, 30, 34, 35, 36, 37, 41, 43, 49, 59, 72, 97, 98, 99, 100, 110, 111, 122, 126, 134, 136, 147, 148, 152, 155, 159, 160, 161, 162, 163, 164, 166, 167, 169, 171, 172, 174, 176, 180, 181, 183, 185, 187, 189, 190, 191, 195, 201, 208], "constructor": [1, 5, 8, 65, 85, 131, 155, 162, 165, 169, 171, 172, 174, 180, 190, 191, 194, 195], "constructorvalu": [165, 171], "consult": [16, 197, 210], "consum": [8, 16, 65, 90, 101, 122, 146, 161, 165, 173, 183, 186, 210], "consumer_block": 183, "consumer_id": 101, "consumpt": [4, 56, 59], "contain": [0, 1, 2, 4, 5, 7, 8, 9, 13, 16, 17, 20, 22, 25, 27, 33, 35, 36, 37, 43, 44, 53, 56, 62, 65, 66, 67, 69, 78, 80, 84, 88, 89, 90, 93, 109, 110, 111, 113, 119, 122, 123, 124, 131, 138, 145, 146, 147, 148, 149, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 191, 192, 193, 195, 208, 209, 210], "container_hostnam": 142, "contains_impure_cal": 158, "content": [2, 5, 9, 16, 30, 34, 47, 52, 80, 113, 116, 117, 120, 122, 123, 124, 147, 148, 155, 160, 162, 169, 170, 181, 185, 186, 191, 195, 208], "content_lan": 185, "context": [2, 4, 10, 12, 48, 49, 56, 85, 108, 146, 147, 154, 156, 158, 163, 169, 171, 172, 180, 181, 186, 188, 201, 204, 208], "context_stack": 4, "context_window_s": 113, "contigu": [149, 183], "continu": [4, 7, 11, 14, 17, 36, 41, 44, 66, 90, 97, 98, 99, 100, 110, 123, 129, 172, 192, 201, 208], "contradict": 181, "contradictori": 12, "contrain": 172, "contrari": 136, "contrast": [12, 191, 192], "contravari": 160, "contrib": [0, 3, 36, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 85, 89, 97, 98, 99, 100, 105, 106, 107, 108, 109, 110, 116, 117, 118, 120, 121, 122, 126, 129, 130, 131, 138, 139, 147, 153, 157, 165, 181, 187, 202, 206, 208, 210, 212], "contrib_conv2d_gemm_weight_transform": 170, "contrib_conv2d_gemm_without_weight_transform": 170, "contrib_conv2d_nchwc": 170, "contrib_conv2d_winograd_nnpack_weight_transform": 170, "contrib_conv2d_winograd_weight_transform": [48, 170], "contrib_conv2d_winograd_without_weight_transform": 170, "contrib_conv3d_winograd_weight_transform": 170, "contrib_conv3d_winograd_without_weight_transform": 170, "contrib_dense_pack": 170, "contrib_depthwise_conv2d_nchwc": 170, "contribut": [8, 9, 10, 11, 12, 15, 38, 169], "contributor": [8, 9, 10, 11, 12, 16, 141], "contriv": 122, "control": [2, 4, 8, 35, 36, 56, 67, 97, 105, 106, 107, 109, 118, 123, 126, 132, 143, 146, 147, 158, 160, 161, 162, 164, 169, 172, 175, 180, 185, 186, 187, 190, 191], "conv": [49, 84, 89, 96, 104, 126, 160, 163, 171, 172, 181, 187, 194, 204], "conv0_weight": [85, 206], "conv1d": [65, 160, 161, 170, 187], "conv1d_ncw": 187, "conv1d_nwc": 187, "conv1d_transpos": [160, 161, 170], "conv1d_transpose_ncw": 187, "conv2d": [56, 58, 59, 65, 67, 68, 73, 74, 84, 85, 89, 96, 104, 105, 106, 107, 108, 111, 117, 129, 130, 138, 148, 160, 161, 163, 164, 167, 170, 171, 172, 181, 182, 187, 192, 194, 201, 204, 205, 206, 212], "conv2d_alter_layout": [147, 187], "conv2d_backward_weight": 170, "conv2d_forward": 148, "conv2d_gemm_output": 97, "conv2d_gemm_weight_transform": 187, "conv2d_hwcn": [138, 187], "conv2d_infer_layout": 187, "conv2d_lay": 96, "conv2d_leg": 187, "conv2d_nchw": [96, 104, 147, 187, 204, 212], "conv2d_nchw_1": [96, 204], "conv2d_nchw_ff": 96, "conv2d_nchw_ff_i": 96, "conv2d_nchw_ff_o_i": 96, "conv2d_nchw_ff_o_o_i": 96, "conv2d_nchw_ff_o_o_o_i": 96, "conv2d_nchw_ff_o_o_o_o": 96, "conv2d_nchw_nn": 96, "conv2d_nchw_nn_i": 96, "conv2d_nchw_nn_o_i": 96, "conv2d_nchw_nn_o_o_i": 96, "conv2d_nchw_nn_o_o_o_i": 96, "conv2d_nchw_nn_o_o_o_o": 96, "conv2d_nchw_python": [96, 104], "conv2d_nchw_rc": 96, "conv2d_nchw_rc_i": 96, "conv2d_nchw_rc_o_i": 96, "conv2d_nchw_rc_o_o": 96, "conv2d_nchw_ri": 96, "conv2d_nchw_rx": 96, "conv2d_nchw_rx_i": 96, "conv2d_nchw_rx_o_i": 96, "conv2d_nchw_rx_o_o": 96, "conv2d_nchw_ry_i": 96, "conv2d_nchw_ry_o_i": 96, "conv2d_nchw_ry_o_o": 96, "conv2d_nchw_xx": 96, "conv2d_nchw_xx_i": 96, "conv2d_nchw_xx_o_i": 96, "conv2d_nchw_xx_o_o_i": 96, "conv2d_nchw_xx_o_o_o_i": 96, "conv2d_nchw_xx_o_o_o_o": 96, "conv2d_nchw_yi": 96, "conv2d_nchw_yy_i": 96, "conv2d_nchw_yy_o_i": 96, "conv2d_nchw_yy_o_o_i": 96, "conv2d_nchw_yy_o_o_o_i": 96, "conv2d_nchw_yy_o_o_o_o": 96, "conv2d_nchwc": [108, 147, 187], "conv2d_nchwc_int8": 187, "conv2d_nhwc": [56, 98, 99, 100, 187], "conv2d_nn": 194, "conv2d_no_batch": 104, "conv2d_pattern": 212, "conv2d_relu": 163, "conv2d_transpos": [65, 161, 170, 187], "conv2d_transpose_alter_layout": 187, "conv2d_transpose_leg": 187, "conv2d_transpose_nchw": 187, "conv2d_transpose_nchw_preprocess": 187, "conv2d_winograd": [98, 100], "conv2d_winograd_nchw": 187, "conv2d_winograd_nchw_without_weight_transform": 187, "conv2d_winograd_nhwc": 187, "conv2d_winograd_nhwc_without_weight_transform": 187, "conv2d_winograd_nnpack_weight_transform": 187, "conv2d_winograd_weight_transform": 187, "conv2dattr": 161, "conv2dnchw": 212, "conv2dtospars": 172, "conv2dtosparse2": 172, "conv2dtransposeattr": 161, "conv3d": [65, 160, 161, 170, 187], "conv3d_alter_layout": 187, "conv3d_ncdhw": 187, "conv3d_ndhwc": 187, "conv3d_transpos": [65, 170, 187], "conv3d_transpose_leg": 187, "conv3d_transpose_ncdhw": 187, "conv3d_transpose_ncdhw_preprocess": 187, "conv3d_winograd_weight_transform": 187, "conv3dattr": 161, "conv_1": 89, "conv_block": 171, "conv_bn": 171, "conv_mod": 148, "conv_nod": 194, "conv_np": 96, "conv_wmma_accumul": 89, "conv_wmma_accumulator_1": 89, "convei": [16, 27], "conveni": [4, 35, 59, 84, 113, 160, 162, 167, 169, 178, 188, 195], "convent": [2, 9, 20, 34, 35, 63, 65, 123, 147, 151, 155, 160, 161, 162, 169, 172, 175, 178, 180, 181, 183, 187, 189], "converg": [96, 97, 98, 99, 100, 101, 200, 202], "convers": [4, 5, 9, 11, 30, 56, 59, 65, 67, 75, 123, 160, 162, 163, 167, 172, 178, 182, 183, 185, 192], "convert": [1, 2, 5, 43, 44, 46, 47, 48, 49, 51, 52, 53, 56, 59, 63, 65, 68, 72, 74, 97, 98, 99, 100, 109, 113, 118, 119, 121, 122, 123, 139, 146, 147, 148, 155, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 176, 177, 178, 180, 181, 183, 186, 187, 189, 192, 202, 205, 208, 209, 210, 211], "convert_config": 167, "convert_func": 148, "convert_imag": 119, "convert_label": 119, "convert_map": 160, "convert_model_dense_to_spars": [97, 100], "convert_to_const": 75, "convert_to_expr": 162, "convert_to_graphdef": 75, "convert_variables_to_constants_v2": 75, "convertblockstoopaqu": 186, "convertforloopstoseri": 186, "convertlayout": [59, 85, 163, 172], "convertssa": 186, "converttodataflow": 163, "convf": 89, "convgemm": [170, 187], "convini": 56, "convnet": 193, "convolut": [18, 25, 34, 37, 58, 73, 74, 87, 91, 94, 95, 97, 98, 99, 100, 102, 103, 119, 123, 124, 127, 128, 130, 132, 147, 148, 160, 161, 164, 168, 170, 171, 172, 173, 182, 187, 192, 193, 194, 198, 202, 210], "convolution_algorithm": [170, 187], "convolution_infer": 148, "convolution_inference_weight_transform": 148, "convolution_inference_without_weight_transform": 148, "convolv": [160, 161, 170], "convtranspose1d": 160, "coo": [148, 169], "cool": [16, 146, 147], "cooldown": [152, 162, 178], "cooldown_interv": [146, 147], "cooldown_interval_m": [152, 162, 178], "cooper": [96, 104, 168, 171, 187], "coopert": 88, "coord": 47, "coord_start": 173, "coordin": [12, 35, 88, 161, 168, 169, 170, 173, 187], "coordinate_transformation_mod": [161, 168, 170, 187], "copi": [1, 5, 8, 17, 36, 41, 44, 61, 72, 80, 118, 123, 146, 151, 152, 155, 157, 160, 161, 162, 163, 169, 175, 176, 181, 183, 185, 186, 187, 208], "coprocsync": 186, "copy_crt_config_head": 157, "copy_from_worker_0": 175, "copy_shape_func": 169, "copy_to_worker_0": 175, "copydatafromto": 1, "copyfrom": [36, 116, 176], "copyintrin": 186, "copyright": 119, "copysign": 185, "copyto": [36, 132, 176], "cora": [126, 196], "cora_v2": 126, "coragraphdataset": 126, "core": [5, 14, 25, 26, 32, 43, 56, 64, 73, 74, 89, 90, 97, 98, 99, 100, 101, 108, 113, 118, 123, 143, 146, 147, 148, 156, 160, 161, 185, 190, 200, 201, 208], "coreml": [54, 55, 148, 167, 198, 206], "coremltool": [46, 167], "corner": [168, 170, 187], "correct": [5, 8, 9, 17, 27, 31, 36, 43, 48, 56, 62, 79, 85, 97, 101, 104, 105, 106, 107, 108, 113, 123, 134, 135, 139, 143, 147, 165, 172, 174, 183, 185, 189, 191, 195, 201, 204, 208], "correctli": [4, 9, 12, 16, 32, 79, 80, 96, 97, 98, 99, 100, 101, 119, 150, 160, 161, 162, 165, 167, 169, 183, 186, 187, 200], "correl": [170, 187], "correlation_nchw": 187, "correpsond": [183, 185], "correspond": [0, 1, 2, 3, 4, 5, 6, 8, 11, 13, 20, 23, 25, 27, 36, 37, 43, 52, 59, 63, 79, 80, 106, 139, 146, 147, 152, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 176, 178, 180, 181, 183, 185, 186, 187, 189, 191, 192, 194, 195, 201, 208], "correspondingli": 4, "corresspond": 181, "corston": 119, "corstone300": 119, "cortex": [115, 118, 125, 196, 198, 199], "cosh": [161, 169, 181, 185, 187], "cosin": 160, "cost": [11, 60, 61, 66, 67, 69, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 123, 141, 146, 147, 152, 156, 162, 163, 172, 178, 181, 200, 201, 205, 211], "cost_estim": 172, "cost_model": [96, 156, 200], "cost_model_fil": 146, "costestim": 172, "costmodel": [146, 156], "costmodeltyp": 156, "could": [2, 3, 4, 5, 8, 9, 11, 12, 14, 17, 35, 36, 53, 57, 66, 74, 84, 99, 105, 113, 117, 120, 122, 123, 126, 139, 143, 146, 155, 156, 158, 160, 162, 163, 169, 172, 173, 178, 183, 186, 188, 191, 192, 194, 199, 210], "count": [2, 36, 85, 93, 146, 147, 152, 156, 160, 161, 163, 164, 169, 171, 172, 173, 177, 181, 182, 185, 187], "count_include_pad": [111, 161, 170, 187], "count_lay": 164, "count_op": 171, "counter": [20, 93, 147, 162, 177], "counterpart": [35, 163, 172], "countnod": 177, "coupl": [7, 8, 150], "cours": [20, 35, 39, 172, 198, 203, 207], "cout": 35, "covari": 160, "cover": [2, 4, 11, 16, 18, 22, 36, 37, 56, 79, 84, 89, 101, 104, 129, 139, 160, 161, 183, 187, 192, 193, 202, 205, 208, 210], "coverag": 9, "covert": 211, "cp": [17, 56, 61, 62, 66, 70, 71, 80, 109, 143, 172, 185], "cpp": [56, 123, 160, 169, 181, 185], "cpp_deploi": 60, "cpp_rpc": 80, "cpp_rtvm": 56, "cpprefer": [181, 185], "cpptest": 143, "cprint": 183, "cpu": [1, 2, 3, 16, 31, 34, 36, 44, 46, 47, 49, 50, 51, 52, 53, 57, 58, 59, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 82, 87, 88, 91, 93, 94, 95, 98, 99, 102, 103, 106, 107, 110, 111, 113, 115, 116, 118, 121, 122, 124, 125, 130, 132, 139, 144, 146, 147, 150, 156, 157, 160, 161, 162, 164, 165, 171, 172, 174, 176, 178, 180, 185, 186, 187, 196, 198, 200, 201, 202, 205, 209, 210, 211, 212], "cpu0": 119, "cpu_count": 146, "cpu_implement": 79, "cpu_out": 43, "cpu_ver": 180, "cpuinfo": [67, 68, 69, 208], "cpunam": [109, 180], "cr": 49, "craft": [13, 58], "crash": [56, 96, 98, 169], "creat": [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 13, 14, 16, 17, 19, 23, 26, 35, 36, 37, 41, 44, 52, 53, 56, 58, 59, 61, 63, 64, 65, 66, 67, 69, 70, 71, 80, 88, 89, 97, 98, 99, 100, 104, 105, 106, 107, 109, 110, 111, 115, 117, 118, 122, 123, 125, 134, 135, 136, 138, 139, 143, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 178, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 194, 198, 199, 201, 202, 206, 210, 212], "create_aot_executor": [116, 121], "create_barri": 185, "create_bound_attribut": 186, "create_conv2d": 212, "create_dataflowblock_pass": 163, "create_dylib": 148, "create_empti": 162, "create_execut": 148, "create_executor": [48, 49, 50, 165, 169], "create_ffi_error": 151, "create_function_pass": [163, 172, 186], "create_graph": [52, 131, 148], "create_group": 181, "create_head": 119, "create_header_fil": [118, 119, 120], "create_labels_head": 119, "create_llvm": [139, 148], "create_local_aot_executor": 157, "create_local_debug_executor": [117, 157], "create_local_graph_executor": [122, 157], "create_measure_batch": 147, "create_micro_mod": 157, "create_module_pass": 188, "create_prim_func": [2, 30, 181, 209], "create_schedul": [37, 61, 82, 88, 89, 90, 104, 109, 132, 134, 135, 136, 139, 140, 147, 150, 181, 185, 187, 189, 201, 204, 208], "create_sdaccel_afi": 61, "create_shar": [3, 57, 61, 66, 67, 69, 97, 99, 105, 107, 148, 208], "create_staticlib": 148, "create_task": 146, "create_tir_paged_kv_cach": 113, "create_tvmjs_wasm": 148, "create_workload": [129, 130, 171], "createfunctionpass": [4, 35], "createimporttre": 3, "createmoduleindex": 3, "createmodulepass": 4, "createprimfuncpass": 4, "createstream": 1, "createview": 163, "creation": [2, 4, 11, 16, 19, 21, 24, 26, 28, 29, 36, 65, 141, 147, 160, 185, 187, 188, 198], "creator": [155, 166], "crhsla": 148, "criteria": 160, "critic": [9, 17, 88, 97, 98, 99, 100, 105, 106, 107], "crop": [161, 168, 170, 187], "crop_and_res": [168, 187], "crop_begin_list": 187, "crop_end_list": 187, "crop_height": 187, "crop_siz": [168, 187], "crop_width": 187, "cross": [5, 18, 19, 20, 22, 56, 58, 64, 65, 68, 97, 99, 105, 107, 112, 114, 119, 141, 143, 147, 148, 158, 160, 161, 174, 180, 186, 194, 198, 202, 210], "cross_build": 80, "cross_compil": [58, 68, 148], "cross_compilation_and_rpc": [64, 109, 114, 198], "cross_entropi": 170, "cross_entropy_with_logit": [161, 170], "crossentropi": [161, 170], "crt": [116, 117, 118, 119, 120, 121, 122, 123, 124], "crt_config": [118, 157], "crucial": [11, 18, 20, 25, 27, 31, 183], "cse": [163, 188], "cse_thresh": 183, "cse_var_1": [82, 89, 90, 96, 134, 135, 136, 139, 200, 204, 208], "cse_var_10": 89, "cse_var_2": [89, 90, 96, 135, 136, 200, 208], "cse_var_3": [89, 90, 96, 200, 208], "cse_var_4": [89, 90, 96, 208], "cse_var_5": 89, "cse_var_6": 89, "cse_var_7": 89, "cse_var_8": 89, "cse_var_9": 89, "csourc": 36, "csource_binary_op_": 36, "csource_binary_op_1d": 36, "csource_binary_op_2d": 36, "csource_module_cr": 36, "csource_relay_contrib_src": 36, "csourcemodul": [36, 122], "csourcemodulecodegenbas": 36, "csr": [3, 126, 148, 170, 187], "csr_matrix": [126, 170], "csrmm": 187, "csrmv": 187, "csrndarrai": [148, 187], "csrplaceholderop": 148, "cstdint": 36, "cstdlib": 36, "cstring": 36, "csv": 177, "ct": [98, 201], "ctx": [4, 82, 84, 158, 161, 163, 172, 186, 188, 209], "ctx_address": 3, "ctxt": 180, "ctype": [16, 47], "cu": 160, "cubic": [161, 168], "cubic_alpha": [161, 168], "cubic_exclud": [161, 168], "cubin": 148, "cubla": [20, 36, 75, 110, 113, 129, 143], "cublasdispatch": 110, "cuda": [1, 2, 3, 5, 8, 34, 37, 43, 48, 52, 65, 70, 75, 79, 96, 98, 104, 106, 110, 111, 113, 130, 134, 135, 142, 143, 144, 146, 148, 150, 152, 156, 160, 162, 163, 165, 174, 176, 180, 185, 186, 201, 204, 206, 208, 209, 211], "cuda_a": 209, "cuda_b": 209, "cuda_cal": 37, "cuda_device_api": 37, "cuda_mod": [3, 209], "cuda_modul": 37, "cuda_path": 148, "cuda_tgt": 150, "cuda_vers": 143, "cudadeviceapi": [1, 37], "cudagetdevic": 37, "cudamalloc": 37, "cudamemcpi": 37, "cudamodul": 2, "cudamodulenod": 37, "cudathreadentri": 37, "cudawrappedfunc": 37, "cudnn": [36, 104, 132, 143], "culaunchkernel": 37, "cumprod": [34, 161, 169, 187], "cumprod_strategi": 34, "cumprod_strategy_cuda": 34, "cumproduct": 187, "cumsum": [34, 135, 160, 161, 169, 181, 187], "cumsum_strategi": 34, "cumsum_strategy_cuda": 34, "cumul": [34, 160, 161, 169, 187], "cur_depth": 85, "cur_pass_ctx": [4, 85], "curesult": 37, "curl": [17, 119, 123], "curli": 192, "curr_nod": 36, "curr_subgraph": 36, "curr_subgraph_": 36, "current": [1, 2, 10, 11, 13, 16, 35, 36, 47, 49, 51, 53, 58, 59, 61, 66, 67, 68, 69, 70, 71, 72, 73, 79, 82, 84, 90, 101, 105, 106, 107, 108, 109, 110, 120, 121, 123, 126, 135, 142, 143, 146, 147, 148, 155, 156, 159, 160, 162, 163, 166, 167, 169, 170, 175, 180, 181, 183, 185, 186, 187, 188, 189, 192, 195, 199, 202, 206, 208, 210, 211], "current_block_is_dataflow": 159, "current_layout": 187, "curv": [67, 105, 106, 107, 108, 147, 202], "cuspars": [169, 187], "custom": [2, 4, 8, 18, 19, 22, 41, 44, 56, 81, 83, 84, 94, 95, 112, 114, 118, 130, 132, 141, 146, 147, 154, 156, 160, 162, 163, 167, 172, 174, 183, 186, 188, 194, 198, 208, 210], "custom_addr": 174, "custom_convert_map": [160, 167], "custom_dma": 119, "custom_pass": 84, "custom_path": 148, "customiz": [41, 163], "customize_legalize_add": 163, "customize_legalize_map": 163, "customize_opt": [110, 114, 198], "custompipelin": [84, 188], "customsketch": 101, "customsketchrul": [101, 146], "custream": 37, "cut": [15, 123], "cutlass": [143, 146, 163], "cutlass_build": 130, "cv2": [47, 72], "cvtcolor": 72, "cwd": 148, "cycl": [4, 93, 155, 158, 208, 209], "cython": [16, 66, 104, 105, 106, 107, 201], "cython3": [104, 105, 106, 107, 201], "cyulin": 126, "czf": 80, "czvf": 17, "d": [34, 36, 56, 73, 75, 80, 89, 97, 98, 99, 100, 113, 119, 126, 132, 160, 161, 168, 169, 170, 173, 185, 187, 191, 192, 204, 211], "d0": 169, "d1": [169, 170], "d2": [169, 170], "d3515ea31fce37df25c44b9fc6df3249": 97, "d37380659057397544e056461ea3bad3": 100, "d78e8eb6021c4cdda0ad7775d10f751a": 98, "d_": [75, 101, 187], "d_0": 187, "d_1": [161, 170, 187], "d_2": [161, 170, 187], "d_after": 85, "d_befor": 85, "d_cp": 161, "d_data": 58, "d_k": [161, 187], "d_n": 170, "daemon": 56, "dag": [96, 97, 98, 99, 100, 101, 146, 155, 200], "dai": [9, 10, 17], "daili": 7, "dandroid_abi": 56, "dandroid_platform": 56, "daniil": [56, 67], "darknet": [54, 55, 167, 173, 198], "darknet_lib": 47, "darknet_url": 47, "darwin": 47, "darwin20": 59, "data": [0, 1, 3, 4, 5, 12, 18, 20, 22, 27, 30, 34, 36, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 116, 117, 118, 119, 120, 121, 122, 129, 130, 131, 134, 135, 136, 139, 140, 146, 147, 148, 150, 152, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 181, 183, 185, 186, 187, 188, 189, 190, 192, 194, 197, 200, 204, 205, 206, 208, 209], "data1": [170, 187], "data2": [170, 187], "data_1": 96, "data_align": [89, 185, 187], "data_bit": [170, 187], "data_data": 187, "data_dep_optim": [75, 97, 100, 164, 172], "data_entry_": 36, "data_grad": 161, "data_hexstr": 119, "data_im2col": 97, "data_indic": 187, "data_indptr": 187, "data_io": 183, "data_io_loc": 183, "data_layout": [111, 160, 161, 168, 170, 171, 187, 194], "data_mean": [161, 170], "data_n_0": 130, "data_np": 96, "data_or_idx": 185, "data_pack": [98, 100], "data_pad": [97, 98, 100], "data_set": 147, "data_shap": [58, 70, 71, 89, 108, 117, 129, 130, 161, 171, 206], "data_tvm": [96, 97, 98, 99, 100, 105, 106, 107, 108], "data_typ": [58, 148, 160], "data_var": [161, 170], "databas": [111, 123, 147, 156, 163, 188], "databasetyp": 156, "dataclass": 113, "dataflow": [18, 22, 23, 43, 44, 110, 111, 113, 138, 158, 159, 162, 163, 171, 183, 190, 212], "dataflow_pattern": [153, 172, 194], "dataflowblock": [158, 159, 162, 163], "dataflowblock_pass": 163, "dataflowblocknod": 162, "dataflowblockpass": 163, "dataflowblockrewrit": 162, "dataflowscop": 159, "dataflowuseinplacecal": 163, "dataflowvar": [160, 162], "dataflowvarnod": 162, "dataload": 123, "datapar": [139, 204], "datapoint": 152, "dataproduc": 185, "dataset": [64, 66, 116, 161, 170], "dataspac": 1, "datatyp": [0, 34, 67, 81, 155, 160, 161, 162, 167, 170, 172, 185, 186, 187, 191], "datatypeimm": 162, "datatypeimmnod": 162, "datatypepattern": 166, "date": [17, 51, 58, 67, 68, 70, 71, 72, 73, 185], "db": 147, "dbuild_shared_lib": 143, "dce": [158, 163], "dcgan": 171, "dcmake_build_typ": 80, "dcmake_c_compil": [56, 62], "dcmake_cxx_compil": [56, 62, 143], "dcmake_cxx_compiler_launch": 143, "dcmake_find_root_path": [56, 62], "dcmake_find_root_path_mode_librari": [56, 62], "dcmake_find_root_path_mode_program": [56, 62], "dcmake_system_nam": 62, "dcmake_system_vers": [56, 62], "dcmake_toolchain_fil": [56, 80], "dcompile_with_cmsisnn": 120, "dcp": 61, "dcr": [170, 187], "dd": 160, "ddo": [75, 97, 100], "ddr": [66, 119], "de": 160, "dead": [2, 4, 163, 172, 183], "deadcodeelimin": [113, 158, 163, 172], "deadlin": 17, "deal": [2, 20, 56, 108, 172], "dealloc": 1, "deb": 65, "debt": [9, 11], "debug": [4, 5, 6, 16, 33, 56, 79, 90, 96, 97, 98, 99, 100, 104, 105, 106, 107, 117, 118, 129, 133, 137, 143, 146, 147, 148, 157, 160, 165, 169, 171, 172, 175, 177, 181, 183, 198, 200, 201, 212], "debug_copy_from": 175, "debug_cr": 0, "debug_executor": 0, "debug_func": 160, "debug_get_from_remot": 175, "debug_get_output": 152, "debug_mask": 183, "debug_modul": 117, "debug_skip_region": 181, "debugg": 2, "decad": 123, "decent": [66, 123], "decentr": 5, "decid": [4, 6, 9, 75, 123, 147, 172, 187], "decis": [10, 12, 15, 20, 146, 183, 195], "decision_provid": 183, "decision_typ": 183, "decl": 36, "decl_buff": [89, 139, 185, 187], "decl_stream": 36, "decl_tensor_intrin": [89, 139, 181], "declar": [1, 4, 6, 8, 27, 30, 34, 36, 58, 66, 96, 97, 98, 99, 100, 101, 132, 134, 136, 139, 146, 147, 148, 158, 160, 162, 166, 169, 181, 183, 185, 187, 189, 192, 200, 204, 208], "declaration_conv2d_transpose_impl": 187, "declaration_conv3d_transpose_impl": 187, "declare_funct": 162, "declbuff": 185, "decod": [44, 146, 147, 173], "decoded_logit": 44, "decodejpeg": 52, "decompos": [161, 163, 170, 183, 187], "decompose_pad": 183, "decompose_reduct": [31, 183], "decomposeopsforinfer": [161, 163], "decomposeopsfortrain": [161, 163], "decompress": [53, 74], "deconstruct": [191, 192, 195], "deconv": 171, "deconv2d": 171, "deconv2d_bn_relu": 171, "decor": [2, 4, 7, 8, 30, 34, 58, 79, 85, 119, 143, 146, 147, 148, 149, 154, 156, 163, 169, 171, 172, 174, 181, 186, 188, 189, 200, 201], "decoratedevicescop": 186, "decreas": [56, 85], "dedfa618": 119, "dedic": [6, 56, 106, 123, 181], "deduc": 163, "deduct": [159, 160, 161], "dedupl": 158, "deep": [2, 4, 5, 36, 37, 48, 56, 62, 65, 66, 70, 71, 73, 86, 123, 149, 156, 163, 167, 171, 193, 196, 198, 202, 203, 205, 207, 209, 210], "deep_div": [24, 29, 198], "deepai": 123, "deepcopi": [75, 184], "deeper": [3, 12, 27, 201, 203, 208], "deepest": 164, "deeplearn": 65, "deepli": [182, 203], "def": [4, 5, 7, 8, 12, 13, 18, 20, 22, 23, 25, 27, 30, 31, 34, 37, 43, 44, 52, 53, 63, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 82, 84, 85, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 119, 123, 126, 130, 131, 132, 134, 135, 136, 139, 140, 146, 147, 148, 149, 154, 156, 158, 159, 160, 162, 163, 164, 167, 172, 174, 178, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 194, 195, 200, 201, 204, 206, 208, 209, 212], "def_var": 159, "default": [0, 1, 4, 6, 7, 13, 14, 17, 32, 34, 35, 37, 43, 46, 47, 48, 49, 51, 52, 53, 58, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 82, 84, 90, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 116, 117, 118, 120, 121, 122, 123, 126, 129, 130, 131, 134, 136, 143, 146, 147, 148, 150, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 183, 185, 186, 187, 188, 194, 195, 197, 201, 202, 206, 210, 211], "default_buffer_param": 181, "default_build": [160, 162], "default_config": 157, "default_context": 4, "default_dtyp": 167, "default_funct": [37, 150], "default_function_kernel": [96, 134], "default_lib0": [122, 212], "default_lib1": [122, 212], "default_lib2": 212, "default_module_load": 147, "default_param": 146, "default_test_target": [79, 171], "default_trace_act": [181, 185], "default_typ": 167, "default_valu": [169, 187], "defaultgpuschedul": 186, "defaultvizpars": 148, "defer": [159, 160], "defin": [1, 2, 4, 5, 6, 7, 8, 22, 23, 30, 35, 36, 37, 44, 49, 56, 58, 62, 64, 66, 67, 68, 75, 79, 82, 84, 85, 88, 90, 102, 109, 110, 118, 124, 132, 140, 146, 147, 148, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 172, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 192, 193, 195, 201, 204, 205, 208, 209, 212], "definable_tir_vars_in_struct_info": 158, "define_annot": [147, 201], "define_knob": [104, 147, 201], "define_reord": [147, 201], "define_split": [104, 147], "define_xxxxx": 201, "defined_symbolic_var": 158, "definit": [2, 4, 9, 22, 30, 34, 35, 36, 37, 49, 52, 56, 67, 79, 97, 98, 99, 100, 104, 105, 106, 107, 108, 117, 136, 138, 139, 146, 147, 148, 154, 155, 156, 158, 160, 161, 162, 163, 169, 171, 172, 181, 184, 191, 192, 200, 201, 205], "defint": 168, "deform": [170, 187], "deformable_conv2d": 170, "deformable_conv2d_nchw": 187, "deformable_conv2d_nhwc": 187, "deformable_group": [170, 187], "defualt": 187, "defunction": 172, "defus": 172, "defuseop": 172, "deg": 126, "degre": [75, 126], "del": [96, 117], "delai": [123, 172], "deleg": [131, 156], "delet": [4, 17, 118, 147, 148, 155], "delin": [27, 30], "deliv": [17, 56], "deliveri": 196, "delv": [27, 31], "demand": [36, 101, 163], "demo": [4, 53, 73, 90, 131, 142, 144, 163, 172, 186, 199, 212], "demo_android": 69, "demo_ctx": 85, "demo_freerto": 119, "demo_mrvl": 64, "demo_vitis_ai": 66, "demonstr": [11, 12, 20, 22, 25, 30, 36, 43, 44, 56, 59, 64, 65, 67, 68, 69, 70, 71, 73, 75, 84, 85, 87, 88, 89, 90, 94, 96, 97, 98, 99, 100, 101, 102, 104, 110, 111, 113, 115, 123, 126, 129, 130, 131, 134, 135, 138, 139, 158, 176, 192, 194, 200, 201, 202, 205, 208, 209, 210, 212], "demostr": 54, "denial": 197, "denois": 160, "denot": [58, 147, 155, 161, 162, 163, 168, 170, 182, 187, 192], "dens": [56, 58, 59, 65, 67, 68, 72, 85, 107, 123, 126, 129, 130, 164, 167, 169, 170, 171, 172, 187, 194, 206], "dense_4_input": 122, "dense_alter_layout": 187, "dense_cubla": 75, "dense_data": [170, 187], "dense_leg": 187, "dense_mat": 170, "dense_nopack": [75, 108], "dense_pack": [108, 187], "dense_shap": [169, 187], "dense_weight": 130, "dense_weight_nam": 75, "densenet": 171, "densenet_s": 171, "densetospars": [75, 172], "densiti": [75, 101], "dep": 66, "depend": [3, 4, 5, 16, 18, 20, 35, 36, 37, 47, 49, 56, 58, 59, 60, 63, 64, 66, 79, 80, 84, 88, 131, 138, 146, 150, 158, 160, 161, 163, 167, 169, 172, 174, 177, 183, 185, 186, 187, 188, 190, 192, 195, 197, 199, 202, 204, 208, 210], "depict": [20, 27, 90], "depkind": 183, "depli": [56, 67, 68], "deploi": [3, 5, 16, 36, 41, 44, 46, 47, 48, 49, 50, 51, 52, 53, 61, 66, 72, 77, 86, 115, 123, 144, 152, 198, 205, 206, 209], "deploy": [2, 9, 36, 37, 41, 43, 56, 66, 110, 111, 113, 144, 167, 205], "deploy_graph": 57, "deploy_lib": [57, 66, 99, 206], "deploy_lib_edg": 66, "deploy_model": [77, 198], "deploy_model_on_adreno": [67, 77, 198], "deploy_model_on_adreno_tvmc": [68, 77, 198], "deploy_model_on_android": [69, 77, 198], "deploy_model_on_nano": [70, 77, 198], "deploy_model_on_rasp": [71, 77, 198], "deploy_object_detection_pytorch": [72, 77, 198], "deploy_param": 57, "deploy_prequant": [73, 77, 198], "deploy_prequantized_tflit": [74, 77, 198], "deploy_spars": [75, 77, 198], "deploymenmt": 56, "deposit": 16, "deprec": [17, 49, 51, 67, 68, 70, 71, 72, 73, 126, 146, 148, 169, 172, 176, 180, 183, 186], "deprecationwarn": [49, 67, 70, 71, 72, 126], "depth": [0, 4, 17, 58, 85, 123, 161, 163, 169, 170, 183, 187], "depth_to_spac": [170, 187], "depthwis": [34, 104, 105, 106, 107, 124, 170, 187], "depthwise_channel": 171, "depthwise_conv2d": 147, "depthwise_conv2d_backward_input_nhwc": 187, "depthwise_conv2d_backward_weight_nhwc": 187, "depthwise_conv2d_infer_layout": 187, "depthwise_conv2d_nchw": 187, "depthwise_conv2d_nchwc": 187, "depthwise_conv2d_nhwc": 187, "depthwise_conv2d_nhwc_output": 97, "depthwiseconv": 104, "depthwiseconv2d": 99, "dequant": [73, 161, 172, 187], "deriv": [34, 36, 156, 158, 162, 171, 182, 191], "derive_call_ret_struct_info": 158, "derive_func": 162, "derived_object": 156, "desc": [146, 185], "descend": [36, 160, 161, 169, 173, 177, 187], "descent": 146, "describ": [1, 2, 4, 7, 12, 30, 34, 35, 36, 53, 56, 62, 64, 69, 76, 81, 101, 104, 117, 118, 122, 132, 135, 136, 139, 146, 148, 155, 160, 161, 163, 166, 168, 169, 170, 172, 183, 185, 187, 190, 192, 194, 195, 196, 201, 205, 212], "descript": [1, 2, 9, 12, 13, 16, 17, 34, 35, 64, 120, 135, 146, 155, 158, 180, 181, 192, 208, 210], "descriptor": [6, 157], "descropt": 12, "deseri": [36, 146, 177, 183], "deserialize_arg": 147, "design": [3, 5, 7, 9, 10, 11, 12, 15, 20, 22, 25, 27, 43, 56, 63, 66, 82, 86, 88, 89, 101, 110, 113, 119, 123, 141, 156, 160, 161, 162, 163, 187, 188, 190, 191, 196, 202, 208, 209, 210, 211], "design_spac": 156, "desir": [5, 56, 67, 75, 161, 162, 163, 170, 171, 178, 187, 189, 192, 208, 211], "desired_layout": [85, 163, 172, 187], "desired_model_path": 211, "desk": 52, "desktop": 62, "despit": [5, 30, 165, 192], "dest": 172, "destin": [1, 20, 66, 156, 160, 161, 162, 167, 169, 175, 183, 185, 186, 187], "destinatin": 157, "destroi": 69, "destruct": 176, "destructor": 176, "det": 47, "detach": [17, 72, 160], "detach_param": [43, 111, 160], "detached_mod": 160, "detail": [2, 3, 4, 15, 16, 17, 20, 23, 25, 27, 34, 35, 37, 39, 43, 50, 52, 53, 56, 66, 73, 74, 84, 101, 104, 109, 123, 126, 131, 134, 143, 144, 147, 148, 151, 159, 160, 161, 162, 163, 170, 178, 181, 183, 185, 187, 191, 192, 195, 204, 205, 210], "detault": 171, "detect": [2, 47, 68, 76, 77, 90, 118, 120, 123, 143, 147, 162, 163, 164, 173, 180, 181, 182, 183, 186, 198, 208], "detect_buffer_access_lca": 182, "detect_featur": 164, "detect_recurs": 158, "detection_box": 173, "detection_class": 173, "detection_scor": 173, "determin": [1, 34, 36, 37, 49, 58, 65, 75, 79, 118, 123, 146, 147, 148, 154, 157, 160, 161, 163, 164, 169, 172, 182, 183, 185, 187, 191, 195], "determinist": [147, 201], "determinst": 2, "determint": 187, "detriment": 172, "dev": [0, 3, 8, 17, 36, 37, 43, 46, 47, 48, 51, 52, 58, 59, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 79, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 126, 129, 130, 132, 134, 135, 139, 152, 159, 162, 164, 174, 176, 177, 178, 180, 185, 187, 200, 202, 204, 206, 208], "dev0": [17, 130], "dev1": 130, "dev_config": 157, "dev_from": 1, "dev_id": [164, 174, 176], "dev_lib_cl": 67, "dev_mblob": 3, "dev_modul": 208, "dev_to": 1, "dev_typ": [174, 176], "devc": 3, "develop": [1, 2, 4, 5, 7, 9, 10, 12, 13, 15, 17, 34, 36, 37, 39, 41, 44, 46, 58, 61, 62, 65, 66, 69, 80, 81, 84, 85, 97, 105, 107, 110, 115, 119, 120, 123, 125, 129, 141, 142, 151, 159, 190, 192, 196, 198, 199], "deviat": [12, 16, 66, 148, 152, 161, 169, 170, 171, 187, 202], "devic": [0, 2, 4, 5, 6, 9, 12, 36, 37, 39, 41, 43, 44, 56, 58, 61, 64, 65, 66, 67, 68, 72, 73, 74, 75, 79, 90, 93, 96, 98, 100, 101, 104, 108, 110, 111, 113, 117, 118, 119, 122, 124, 126, 129, 130, 134, 139, 143, 144, 146, 147, 148, 150, 152, 157, 160, 161, 162, 163, 164, 165, 169, 171, 172, 174, 175, 176, 177, 178, 180, 183, 185, 186, 194, 199, 200, 201, 202, 205, 206, 208, 209, 210], "device_api": [1, 37], "device_copi": [169, 172], "device_id": [1, 36, 37, 175, 185], "device_index": 0, "device_kei": [58, 97, 99, 105, 107], "device_mesh": 161, "device_metr": 177, "device_typ": [36, 180, 185], "device_type_id": 152, "deviceapi": 37, "deviceapimanag": 1, "deviceattrkind": 1, "devicemesh": 161, "devicenam": 1, "devicewrapp": 177, "df": [3, 158, 159, 164, 172, 184], "dfb": [158, 162], "dfg": 138, "dfpattern": [163, 166, 172, 212], "dfpatterncallback": [166, 194], "dft": [169, 187], "dgl_g": 126, "dglbackend": 126, "dh": 160, "di": [99, 134], "diag_ctx": 4, "diagnos": 7, "diagnost": [4, 151], "diagnosticcontext": 4, "diagnosticerror": 151, "diagon": [160, 161, 169, 187], "diagram": 205, "dialect": [22, 27, 30, 73, 193], "dict": [75, 113, 126, 131, 146, 147, 148, 150, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 174, 177, 178, 180, 181, 182, 183, 184, 187, 188], "dict_to_tupl": 72, "dictattr": [155, 161, 162], "dictionari": [1, 4, 49, 59, 64, 68, 85, 147, 148, 150, 152, 155, 160, 162, 165, 166, 167, 169, 172, 178, 180, 181, 187, 194], "did": [9, 36, 37, 43, 85, 202, 204, 210, 212], "didn": [9, 35, 56], "dietcod": 196, "diff_num": 85, "differ": [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 16, 17, 18, 20, 22, 27, 30, 31, 34, 35, 36, 37, 38, 43, 44, 46, 47, 49, 54, 58, 62, 66, 67, 70, 71, 73, 74, 75, 76, 82, 84, 85, 88, 90, 94, 96, 97, 98, 99, 100, 102, 109, 110, 111, 113, 117, 119, 120, 122, 123, 124, 131, 134, 136, 138, 139, 143, 145, 147, 148, 152, 155, 157, 160, 161, 162, 163, 169, 170, 171, 172, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 191, 192, 195, 200, 201, 202, 204, 205, 209, 210], "differenti": [12, 34, 161, 163, 171, 172, 181, 187, 190, 195, 205], "differnt": 126, "difficult": [36, 39, 75, 80], "difficulti": [105, 106, 107], "diffus": 160, "dig": [3, 75, 203], "digraph": 148, "dilat": [34, 96, 104, 111, 138, 148, 160, 161, 168, 170, 172, 187], "dilatedinput": 187, "dilation2d": 168, "dilation2d_nchw": 187, "dilation2d_nhwc": 187, "dilation_depth": 187, "dilation_h": [148, 187], "dilation_height": 187, "dilation_valu": [170, 187], "dilation_w": [148, 187], "dilation_width": 187, "dim": [147, 148, 160, 163, 169, 170, 187, 189], "dim_match": 171, "dimens": [18, 53, 65, 88, 89, 90, 119, 123, 126, 134, 135, 139, 147, 150, 160, 161, 162, 165, 167, 169, 170, 172, 173, 175, 180, 181, 183, 185, 187, 195, 202, 208, 210, 212], "dimension": [2, 25, 56, 90, 147, 160, 161, 169, 170, 185, 186, 187, 202, 204, 208], "diplomat": 11, "dir": [69, 148, 162, 174], "dir_path": [53, 74], "direciton": 163, "direct": [2, 11, 18, 27, 147, 160, 161, 162, 163, 172, 178, 182, 186, 191], "directli": [0, 2, 4, 5, 13, 14, 16, 22, 27, 34, 36, 37, 41, 43, 44, 80, 82, 89, 101, 122, 124, 126, 134, 138, 139, 146, 147, 148, 152, 154, 158, 160, 161, 162, 163, 165, 167, 169, 172, 174, 180, 181, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 201, 208, 210], "directori": [3, 6, 17, 32, 61, 65, 66, 67, 69, 70, 71, 79, 80, 104, 105, 106, 107, 109, 118, 120, 122, 123, 124, 129, 142, 143, 148, 156, 157, 160, 162, 163, 174, 201, 212], "directory_path": 130, "directorycreatedpastatexit": 148, "dirnam": [53, 61, 74, 75, 130], "disabl": [4, 7, 8, 23, 32, 67, 68, 79, 84, 85, 99, 110, 113, 119, 123, 148, 169, 170, 172, 173, 174, 180, 183, 188, 202], "disable_pred": [31, 181, 183], "disable_storage_rewrit": 119, "disable_usmp": 118, "disable_vector": [116, 117, 118, 119, 120, 121, 122, 123, 124], "disabled_pass": [4, 58, 72, 84, 169, 172, 188], "disagr": 9, "disambigu": [160, 161, 170], "disassembl": 6, "disbl": 8, "discard": [14, 146, 147, 162, 178], "disclos": 197, "disco": 153, "disco_work": 175, "discontinu": 208, "discourag": 9, "discov": [122, 157, 201], "discoveri": 199, "discret": [17, 148, 169, 187], "discrib": 162, "discuss": [7, 8, 9, 10, 11, 12, 13, 16, 39, 49, 56, 75, 84, 90, 105, 106, 107, 146, 167, 172, 185, 187, 191, 192, 195, 197, 202, 208, 210, 212], "disk": [16, 36, 46, 49, 65, 66, 123, 163, 202], "dispatch": [2, 4, 5, 34, 35, 41, 44, 111, 113, 146, 147, 156, 160, 162, 169, 172, 180, 201], "dispatch_context": 104, "dispatch_ctx": 147, "dispatchcontext": [146, 147], "displac": [170, 187], "displai": [7, 67, 119, 123, 133, 137, 147, 180, 188, 198], "disregard": 30, "dist": 17, "distanc": [169, 187], "distil": [75, 97, 98, 99, 100, 147], "distinct": [8, 27, 160, 161, 183, 191, 192], "distinguish": [106, 123, 191, 192, 195], "distribut": [97, 105, 106, 107, 113, 142, 147, 148, 157, 160, 175, 183], "div": [181, 185, 187], "dive": [2, 23, 25, 37, 58], "divers": [9, 41, 44, 141, 147], "diversity_filter_ratio": 147, "divid": [12, 37, 62, 65, 82, 134, 148, 160, 161, 169, 170, 181, 185, 187], "divio": 12, "divis": [147, 160, 161, 169, 170, 172, 181, 183, 185, 187], "divtomul": 172, "dj": [99, 134], "dk": [169, 170], "dl": [43, 110], "dldatatyp": [36, 175], "dldevic": [36, 175], "dldevicetyp": [1, 36], "dlight": [43, 113, 141], "dlopen": [47, 180], "dlpack": [36, 41, 44, 62, 132, 152, 160, 176, 185, 187, 208], "dltensor": [5, 36, 63, 132, 160, 162, 175, 176, 178, 185, 186, 187], "dltensor_addr": 63, "dltype": 0, "dmachine_nam": [56, 62], "dmax_db_input_s": 120, "dmlc": [4, 36, 46, 47, 48, 49, 50, 51, 52, 53, 67, 69, 70, 71, 72, 73, 74, 97, 121, 126, 160, 208], "dmodul": 175, "dndebug": 143, "dnnl": [36, 163], "do": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 23, 32, 34, 35, 36, 37, 47, 56, 59, 62, 63, 65, 66, 69, 70, 71, 75, 79, 80, 82, 84, 85, 86, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 116, 118, 119, 120, 121, 122, 123, 126, 129, 134, 135, 144, 146, 147, 148, 149, 151, 155, 156, 158, 160, 161, 162, 163, 165, 167, 169, 172, 174, 180, 181, 183, 184, 185, 186, 187, 189, 191, 192, 194, 195, 200, 201, 202, 204, 206, 208, 209, 210, 211], "do_fork": [117, 147], "do_nms_sort": 47, "do_trac": 72, "doc": [4, 7, 8, 12, 15, 17, 32, 34, 39, 46, 50, 52, 64, 65, 80, 126, 145, 148, 160, 161, 169, 170, 183, 185, 187, 208], "docker": [8, 56, 58, 62, 66, 69, 90, 144, 208], "dockerfil": [7, 66, 69], "docstr": [12, 79, 169, 187], "document": [1, 2, 3, 8, 10, 11, 13, 15, 16, 34, 35, 49, 50, 56, 59, 64, 65, 80, 113, 118, 157, 167, 169, 170, 185, 190, 191, 192, 193, 195, 196, 202, 211], "docurl": 50, "doe": [1, 5, 7, 12, 20, 34, 35, 36, 52, 62, 65, 73, 74, 79, 82, 96, 97, 98, 99, 100, 109, 116, 117, 118, 120, 121, 122, 123, 124, 132, 134, 142, 143, 146, 147, 155, 157, 158, 160, 161, 162, 164, 167, 168, 169, 170, 172, 173, 174, 180, 181, 182, 183, 185, 186, 187, 188, 191, 194, 195, 197, 199, 200, 202, 205, 206, 210], "doesn": [35, 52, 66, 67, 75, 80, 84, 85, 97, 99, 123, 138, 163, 165, 169, 183, 185, 191, 194, 199, 204, 208], "dog": 47, "dollar": 123, "dom": [149, 181, 185], "dom_kind": 149, "dom_map": 187, "domain": [2, 22, 27, 30, 90, 135, 136, 147, 149, 181, 183, 185, 187, 205, 208, 209], "domin": [46, 48, 49, 50, 53, 123, 166, 172], "dominatorpattern": 166, "don": [3, 4, 5, 7, 16, 17, 27, 32, 35, 39, 59, 61, 69, 84, 85, 116, 117, 119, 121, 123, 126, 138, 152, 163, 172, 174, 181, 183, 188, 211], "done": [1, 4, 5, 6, 14, 17, 23, 37, 58, 62, 65, 73, 79, 82, 84, 105, 106, 107, 108, 123, 126, 134, 139, 142, 146, 147, 160, 161, 162, 163, 169, 170, 172, 189, 201, 202, 208, 210], "dont": [17, 75], "door": 2, "dot": [73, 74, 90, 132, 138, 139, 148, 160, 185, 200, 201, 208], "dot_file_path": 138, "dot_plott": 148, "dotgraph": 148, "dotplott": 148, "dotvizpars": 148, "doubl": [5, 56, 131, 143, 170, 173, 181, 186, 191], "double_buff": 181, "dout_quant_scal": 120, "dout_quant_zero": 120, "down": [8, 89, 116, 119, 123, 139, 141, 146, 147, 170, 175, 186, 187, 201, 205], "down_proj": 113, "downcast": [2, 4, 34, 35, 36], "downlaod": 118, "download": [8, 16, 17, 22, 23, 30, 31, 43, 44, 46, 48, 49, 50, 51, 58, 64, 65, 66, 67, 68, 69, 70, 71, 73, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 124, 126, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 174, 180, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212], "download_linked_modul": 174, "download_model": 75, "download_path": 120, "download_testdata": [46, 47, 48, 49, 50, 51, 52, 53, 67, 69, 70, 71, 72, 73, 74, 85, 116, 118, 120, 121, 122, 126, 202, 210], "downsampl": 171, "downscal": 123, "downscale_freq_shift": 160, "downstream": [2, 143, 157], "doxygen": [8, 12], "doyxgen": 145, "dp": [160, 182], "dp4a": 185, "dpackedfunc": 175, "dpexecutor": 108, "dptuner": 108, "dpu": [64, 66], "dpu_target": 66, "dpucadf8h": 66, "dpucahx8h": 66, "dpucahx8l": 66, "dpucvdx8g": 66, "dpucvdx8h": 66, "dpuczdx8g": 66, "dq": 172, "dr": 90, "draft": 17, "dram": 119, "dramat": 123, "draw": [79, 148], "draw_detect": 47, "drawn": 148, "dref": 175, "drive": [9, 25, 123, 138, 141, 143, 157], "driven": [116, 120, 121, 122, 124, 138, 141, 147, 163], "driver": [1, 2, 3, 5, 37, 56, 64, 67, 68, 80, 109, 118, 119, 124, 142, 153, 162, 165, 208, 209, 210, 211], "drop": [2, 16, 161, 163], "dropout": [123, 161, 170, 174], "dropout_raw": 170, "dropoutattr": 161, "ds_store": 17, "dshape": [108, 187], "dsl": [2, 43, 209], "dso": [3, 36], "dso_binari": 67, "dso_binary_path": 67, "dso_librari": 3, "dsomodul": 36, "dst": [162, 167, 168, 175, 183, 185, 186, 187], "dst_devic": [161, 169], "dst_index": 185, "dst_layout": [169, 185, 187], "dst_ptr": 185, "dst_shape": 185, "dst_stride": 185, "dst_vdevic": 161, "dtarget_model": 120, "dtensor": 161, "dtensorstructinfo": 161, "dth_model_vers": 120, "dtype": [0, 5, 18, 20, 22, 23, 27, 30, 31, 34, 36, 37, 43, 44, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 61, 65, 67, 69, 72, 74, 75, 80, 88, 89, 90, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 113, 120, 122, 132, 134, 135, 139, 140, 147, 148, 152, 155, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 181, 183, 185, 186, 187, 189, 200, 201, 202, 204, 208, 209], "dtype_bits_hint": 185, "dtype_code_hint": 185, "dtype_dict": [52, 53, 74, 116, 118, 120, 122, 152, 160, 167], "dtype_lik": 169, "dtype_or_expr": 162, "dtype_str": 185, "due": [27, 48, 72, 73, 82, 88, 89, 90, 123, 139, 143, 157, 158, 162, 182, 208], "dummi": [43, 73, 80, 147, 157, 161], "dummy_data": 75, "dummy_input": [68, 75], "dummy_out": 75, "dummyglobalinfo": 155, "dump": [36, 56, 73, 80, 84, 96, 97, 98, 99, 100, 101, 129, 131, 146, 155, 156, 166, 169, 181, 188], "dump_prun": 156, "dump_root": [0, 157], "dump_workload_to_dag_log": 146, "dumpmachin": 148, "duplic": [43, 131, 147, 163, 181, 183, 184, 187], "duplicated_": 131, "duplicated_id": 131, "duplicated_typ": 131, "durat": [96, 98, 146, 147, 162, 174, 177, 178], "durationnod": 177, "dure": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 39, 49, 65, 66, 69, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 117, 123, 126, 129, 143, 146, 147, 148, 151, 152, 155, 156, 160, 161, 162, 163, 165, 167, 168, 169, 170, 172, 174, 177, 182, 183, 185, 186, 187, 188, 195, 200, 201, 206, 208], "duse_graph_executor": 69, "duse_llvm": 69, "duse_rpc": 69, "duse_sort": 69, "duse_vulkan": 69, "dw": [160, 170], "dw1": 181, "dw2": 181, "dweight": 130, "dworkspace_s": 120, "dx": [160, 161, 168, 170], "dxf": 80, "dxwxh": 170, "dy": [161, 168, 170], "dylib": [59, 143], "dyn": 187, "dyn_shape_lib": 30, "dyn_strided_slic": 161, "dyn_te_func": 30, "dynam": [0, 1, 2, 3, 5, 18, 20, 34, 35, 49, 62, 65, 80, 97, 98, 99, 100, 108, 146, 147, 148, 160, 161, 162, 163, 167, 169, 171, 172, 178, 180, 186, 187, 196, 205, 210], "dynamic_strided_slic": [161, 187], "dynamicshapemodul": 30, "dynamictemodul": 30, "dynamictostat": 172, "dynamo": 160, "dynamo_capture_subgraph": 160, "dyntensortyp": 162, "dz": [161, 170], "e": [1, 2, 4, 5, 7, 8, 9, 11, 12, 16, 17, 18, 22, 32, 34, 35, 36, 39, 43, 44, 49, 52, 56, 58, 66, 69, 70, 71, 75, 79, 80, 82, 97, 98, 99, 100, 109, 110, 111, 113, 116, 118, 121, 123, 126, 140, 142, 143, 146, 147, 148, 149, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 172, 178, 180, 183, 185, 186, 187, 189, 191, 192, 194, 195, 197, 199, 200, 204, 205, 206, 210], "e2c58e45605443e8e4dd0ce586633232": 97, "e2e_opt_model": [111, 114, 198], "e5": 108, "e9ak845b3d7f2c126dab53632aea8e012d89477": 62, "e_out": 161, "each": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 16, 17, 20, 27, 30, 31, 34, 35, 36, 37, 43, 44, 49, 56, 58, 64, 65, 67, 75, 79, 80, 82, 84, 85, 88, 89, 97, 98, 99, 100, 106, 110, 111, 113, 117, 118, 123, 124, 146, 147, 148, 150, 151, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 175, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 194, 195, 202, 204, 205, 208, 209, 210, 211], "eager": [167, 212], "eagerli": 160, "earli": [8, 56, 80, 146, 147, 173, 202], "earlier": [5, 34, 97, 98, 99, 100, 123, 162, 163, 178, 208], "early_stop": [67, 68, 105, 106, 107, 108, 146, 147, 202], "eas": [4, 5, 16, 30, 36, 66, 84], "easi": [2, 4, 5, 16, 37, 41, 70, 71, 75, 110, 123, 131, 138, 139, 167, 190, 191, 208, 212], "easier": [9, 22, 34, 75, 131, 167, 192, 201], "easiest": [62, 89, 143, 171], "easili": [4, 5, 6, 9, 12, 13, 34, 36, 79, 80, 104, 110, 136, 139, 169, 191, 194, 195], "ebug": 56, "ec2": [61, 74, 108], "ec95d1874524b128a6afe8f7bff0c738": 97, "echo": [56, 66, 69, 143], "ecosystem": [18, 41, 44, 141], "ecr": 7, "edb6ed22a801665946c63d650ab9a0b23d98e1b1": 53, "eddi": [105, 106, 107, 108], "edg": [18, 41, 65, 66, 113, 119, 123, 131, 138, 148, 161, 170, 187, 192], "edge_attr": 148, "edit": [17, 70, 71, 109, 118, 143, 211], "editor": [14, 211], "edu": [93, 126], "educ": [9, 11], "ee_model_version_": 120, "eembc": 120, "effect": [4, 9, 12, 20, 48, 67, 79, 82, 84, 85, 138, 144, 146, 147, 158, 160, 161, 162, 163, 166, 172, 175, 177, 181, 185, 187, 208], "effect_mod": 113, "effici": [4, 12, 18, 34, 56, 66, 67, 80, 90, 104, 136, 139, 147, 149, 161, 165, 172, 183, 192, 196, 201, 205, 208], "efficientnet": 123, "effort": [6, 9, 10, 35, 36, 159, 163], "eg": 180, "egor": [56, 59], "egyptian": [48, 67, 73, 202, 210], "ehnahc": 56, "ehsan": 204, "eight": [66, 123], "einstein": [161, 169, 187], "einsum": [161, 169, 183, 187], "einsumattr": 161, "either": [0, 1, 2, 4, 6, 7, 36, 37, 79, 82, 93, 108, 123, 146, 148, 149, 152, 154, 155, 160, 161, 162, 163, 168, 169, 170, 172, 181, 183, 185, 187, 189, 192, 194, 195, 209], "elabor": 195, "elaps": [157, 211], "eleg": 5, "elem_idx": 101, "elem_offs": 185, "elem_offset": [89, 161, 183, 185, 186, 187], "element": [2, 5, 12, 18, 19, 26, 27, 30, 31, 34, 37, 56, 89, 136, 139, 140, 148, 154, 155, 160, 161, 167, 169, 170, 174, 181, 183, 185, 186, 187, 189, 192, 194, 201, 206, 208], "element_typ": 155, "elementwis": [2, 101, 149, 161, 163, 166, 169, 187, 192, 194], "elementwise_affin": 160, "elemwis": 204, "elemwise_shape_func": 34, "elemwise_sum": [187, 204], "eleph": [52, 74], "elepha": 52, "elf": [62, 118, 148], "elif": [8, 47, 67, 69, 97, 98, 99, 100, 105, 106, 107, 108, 202], "elig": 186, "elimin": [2, 4, 80, 84, 163, 172, 183, 186, 192, 197], "eliminatecommonsubexpr": [84, 163, 169, 172, 188], "elit": 147, "elite_num": 147, "ell": 148, "ellips": 148, "els": [3, 8, 34, 35, 36, 47, 48, 53, 61, 67, 68, 69, 70, 71, 72, 74, 75, 85, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 113, 118, 123, 126, 134, 160, 161, 167, 169, 170, 187, 189, 190, 202, 208], "else_cas": 185, "else_scop": 169, "elsewher": [118, 123, 161, 192], "email": 17, "emb": [3, 5, 12, 113, 167, 194], "embed": [5, 27, 41, 44, 62, 119, 121, 122, 123, 144, 157, 160, 172, 190, 205, 209], "embed_token": 113, "embedding_dim": 160, "embodi": 30, "emconfig": 61, "emconfigutil": 61, "emerg": 43, "emit": [22, 89, 139, 159, 160, 162, 163, 172], "emit_cal": 162, "emit_err_ctx": 163, "emit_func_output": [22, 159], "emit_goto": 162, "emit_if": 162, "emit_init": 160, "emit_norm": 159, "emit_output": [22, 159], "emit_ret": 162, "emit_t": [22, 159], "empathi": 9, "emphas": [123, 131], "emploi": [4, 18, 30, 31, 192], "empow": [18, 141], "empti": [0, 4, 6, 7, 20, 27, 36, 47, 52, 84, 85, 96, 101, 104, 129, 130, 131, 148, 157, 160, 162, 163, 164, 167, 169, 172, 175, 176, 181, 182, 183, 185, 186, 187, 188, 191, 192, 200, 201, 202, 206], "empty2": 191, "empty_row_ind": 169, "emptypolici": 146, "emscripten": 148, "emul": [62, 116, 121, 122, 169, 181, 190], "en": [7, 181, 185], "enabl": [0, 2, 3, 4, 6, 7, 10, 11, 16, 18, 20, 32, 36, 41, 44, 56, 58, 59, 61, 62, 64, 65, 66, 68, 69, 70, 79, 80, 84, 85, 97, 101, 105, 107, 109, 110, 113, 115, 116, 118, 119, 121, 123, 129, 141, 146, 147, 150, 155, 156, 160, 162, 163, 165, 167, 169, 170, 171, 172, 174, 180, 181, 183, 184, 186, 187, 192, 193, 200, 205, 206, 211], "enable_autoschedul": 211, "enable_check": 183, "enable_clml": [67, 68], "enable_cpu_cache_flush": [97, 100, 108, 146, 147, 202], "enable_cse_tir": 186, "enable_fold": 188, "enable_log": 174, "enable_vector": 186, "enable_warn": 163, "enabled_extens": 187, "enabled_target": [79, 171], "encapsul": [2, 30, 41, 44], "enclos": [181, 183], "encod": [47, 113, 126, 146, 147, 170, 172, 173, 174, 187, 191, 192, 195], "encompass": [25, 27, 43], "encount": [35, 65, 84, 172], "encourag": [7, 9, 10, 11, 12, 16, 37, 74, 90, 138, 181, 189, 197, 208], "encrypt": [174, 197], "end": [0, 2, 5, 12, 16, 18, 19, 30, 32, 34, 35, 36, 37, 48, 54, 61, 67, 74, 75, 80, 97, 98, 99, 100, 104, 105, 106, 107, 108, 112, 113, 114, 118, 119, 123, 132, 141, 143, 146, 147, 148, 152, 155, 159, 160, 161, 162, 163, 166, 169, 170, 172, 174, 181, 183, 185, 187, 190, 191, 192, 193, 196, 198, 200, 201, 204, 205, 211], "end_checkpoint": 161, "end_column": 155, "end_d": [168, 187], "end_forward_func": 113, "end_h": [161, 168, 187], "end_lin": 155, "end_nod": 148, "end_profile_intrins": 185, "end_scop": 159, "end_to_end": 152, "end_w": [161, 168, 187], "end_x": 187, "endif": [36, 69, 96, 122, 134], "endl": 35, "endpoint": [4, 35, 174], "endswith": [53, 74], "energi": 59, "enforc": [8, 9, 16, 34, 160, 183, 195], "engag": 12, "engin": [36, 64, 65, 110, 141, 148, 165, 167, 205], "english": 52, "enhanc": [62, 80, 90, 208], "eniron": 80, "enlarg": 171, "enough": [12, 17, 97, 98, 99, 100, 104, 105, 107, 118, 123, 152, 163, 171, 188, 195, 201, 203], "enqueu": 56, "enrich": [9, 73, 141], "ensur": [7, 8, 9, 11, 12, 17, 20, 30, 32, 35, 43, 80, 135, 139, 143, 152, 158, 159, 160, 161, 163, 181, 183, 185, 186, 191, 195, 202, 210], "ensure_zero_offset": 161, "enter": [4, 69, 79, 84, 85, 143, 154, 192], "enter_pass_ctx": [4, 85, 154, 188], "enter_postproc": 183, "enterpasscontext": 4, "enterpris": 143, "enterwithscop": 4, "entir": [0, 2, 34, 36, 56, 62, 75, 79, 117, 141, 144, 161, 172, 177, 192], "entireti": 43, "entiti": [147, 201], "entity_map": 147, "entranc": 3, "entri": [0, 1, 2, 4, 36, 56, 81, 146, 147, 155, 160, 161, 163, 169, 172, 173, 186, 187, 192, 205], "entry_funct": [163, 172], "entry_nam": [88, 89, 90, 96, 101, 104, 109, 177, 200, 208], "entrypoint": 175, "enum": [0, 1, 51, 67, 68, 70, 71, 72, 73, 113, 191], "enumer": [59, 67, 72, 97, 98, 99, 100, 105, 106, 107, 108, 113, 119, 123, 126, 146, 147, 162, 168, 170, 178, 187, 201, 202], "env": [22, 56, 143, 147, 148, 155, 174], "env_linear": 22, "env_thread": [89, 96, 135, 181, 186, 204], "envfunc": [155, 162], "enviromnet": 56, "environ": [1, 2, 12, 15, 41, 44, 61, 62, 65, 66, 67, 68, 70, 71, 73, 74, 79, 80, 97, 99, 108, 109, 110, 111, 113, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 142, 143, 146, 147, 148, 155, 160, 162, 169, 171, 174, 180, 183, 186, 192, 197, 198, 201, 206, 208], "eos_token_id": 113, "ep": [98, 100, 160, 170, 171, 194], "epoch": 123, "epsilon": [85, 111, 160, 161, 170, 171, 187, 194, 206], "eq": 185, "equal": [13, 73, 74, 84, 134, 146, 147, 148, 152, 155, 156, 158, 160, 161, 162, 169, 172, 173, 175, 176, 185, 187, 192, 195, 208], "equal_const_int": 187, "equat": [169, 170], "equip": 90, "equival": [2, 20, 27, 30, 51, 67, 68, 70, 71, 72, 73, 96, 132, 134, 152, 160, 161, 163, 167, 169, 170, 172, 181, 185, 187, 194, 200, 201, 204], "eras": [2, 5, 118, 158, 208], "erase_to_well_defin": 158, "erf": [65, 160, 161, 169, 181, 185, 187], "erf_leg": 187, "err": [47, 163], "err_inst": 151, "errno": 142, "error": [2, 4, 6, 7, 9, 15, 16, 27, 31, 35, 36, 49, 78, 79, 97, 98, 99, 100, 104, 105, 106, 107, 118, 123, 142, 143, 146, 147, 148, 153, 155, 157, 160, 161, 162, 163, 167, 169, 172, 178, 180, 181, 182, 183, 185, 187, 188, 191, 195, 208], "error_if_no_function_matches_regex": 188, "error_msg": 146, "error_no": [146, 147, 201], "error_render_level": 183, "errortest": 13, "errortyp": 13, "especi": [7, 8, 9, 10, 14, 16, 37, 80, 123, 143, 192], "essenti": [2, 4, 11, 16, 34, 35, 56, 75, 82, 158, 160, 189, 208], "essesti": 56, "est": 158, "establish": [11, 31, 122], "estim": [75, 97, 98, 99, 100, 118, 123, 146, 147, 158, 169, 172, 182], "estimate_memory_usag": 158, "estimate_tir_flop": 182, "et": [160, 161, 163, 170, 171], "eta": [48, 172], "etaexpand": 172, "etc": [1, 4, 17, 20, 36, 37, 41, 56, 66, 67, 68, 73, 85, 105, 106, 107, 113, 120, 147, 157, 158, 160, 162, 163, 167, 169, 173, 183, 187, 188, 206], "etcher": 66, "etho": [115, 125, 198], "ethos_u": 119, "ethosu": 119, "ethosu_driv": 119, "ethosu_find_and_reserve_driv": 119, "ethosu_init": 119, "ethosu_invok": 119, "ethosu_mod": 119, "ethosu_register_driv": 119, "ethosu_release_driv": 119, "ethosu_reserve_driv": 119, "ethosu_scratch": 119, "ethosuinit": 119, "eval": [43, 46, 48, 51, 67, 68, 69, 70, 71, 72, 73, 111, 121, 126], "evalu": [31, 35, 48, 49, 50, 66, 67, 68, 69, 80, 88, 89, 90, 101, 104, 105, 106, 107, 108, 109, 123, 147, 161, 162, 165, 169, 171, 172, 178, 183, 185, 187, 188, 191, 192, 202, 212], "evaluate_addit": 208, "evaluate_dynamic_shap": 30, "evaluate_oper": 208, "evaluate_perform": 108, "even": [4, 5, 9, 16, 34, 41, 73, 74, 75, 79, 82, 123, 131, 143, 146, 147, 158, 160, 161, 162, 172, 178, 181, 189, 191, 192, 195, 204], "evenli": [161, 169, 183, 187], "event": [8, 9, 85], "eventu": [123, 160], "ever": [123, 180, 194], "everi": [4, 9, 10, 35, 36, 41, 43, 79, 82, 89, 90, 96, 98, 104, 105, 106, 107, 118, 136, 138, 146, 147, 158, 159, 161, 162, 163, 172, 178, 183, 186, 187, 189, 191, 195], "everyon": [9, 10, 11, 15, 32, 73, 141], "everyth": [52, 75, 79, 110, 111, 118, 119, 123, 162, 191], "everywher": [41, 44, 169], "evid": 208, "evolut": 11, "evolutionari": [146, 156], "evolutionary_search": 146, "evolutionarysearch": 156, "evolv": [4, 9, 10, 193], "ewise_fma": 161, "ex": [44, 85, 93, 110, 111, 113, 162, 178], "exact": [148, 172, 186], "exactli": [9, 16, 17, 49, 74, 123, 160, 169, 172, 183, 187, 194], "examin": [31, 158, 163, 186, 191, 194, 204, 212], "exampl": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 34, 36, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 79, 80, 82, 83, 88, 89, 91, 93, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 143, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 198, 200, 201, 202, 206, 207, 209, 210], "example_arg": [43, 111, 160], "example_ext_runtim": 36, "example_project": 123, "examplejon": 36, "examplejson": 36, "examplejson_module_cr": 36, "examplejsoncompil": 36, "examplejsonmodul": 36, "exce": 163, "excel": 110, "except": [1, 2, 4, 5, 6, 7, 8, 32, 34, 52, 53, 66, 74, 75, 80, 89, 106, 110, 116, 118, 120, 122, 123, 132, 147, 148, 151, 155, 157, 160, 161, 163, 169, 170, 183, 185, 187, 191, 192], "exchang": [5, 41, 44, 197, 209], "excis": 187, "exclud": [4, 30, 79, 109, 118, 147, 148, 161, 168, 169, 170, 187], "exclude_target": 79, "exclus": [34, 90, 147, 148, 160, 161, 169, 187, 208], "exec": [43, 67, 69, 70, 71, 80, 97, 105, 106, 107, 109, 165, 175], "exec_mod": 162, "exec_nam": 148, "execbuild": 162, "execut": [0, 1, 4, 5, 6, 19, 24, 25, 29, 30, 31, 36, 37, 39, 44, 45, 55, 57, 62, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 77, 79, 80, 83, 84, 85, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 117, 118, 122, 123, 124, 125, 126, 128, 132, 136, 137, 139, 143, 146, 148, 151, 152, 154, 156, 157, 160, 161, 162, 163, 165, 169, 171, 172, 174, 175, 177, 178, 181, 183, 185, 186, 188, 192, 197, 198, 199, 200, 201, 206, 207, 208, 210, 211, 212], "executor": [49, 50, 53, 56, 58, 97, 98, 99, 100, 108, 116, 118, 119, 122, 123, 124, 126, 127, 128, 152, 157, 164, 165, 169, 198, 202, 206], "executor_factori": 169, "executor_kind": 171, "executorfactorymodul": 169, "exercis": [75, 183], "exist": [2, 4, 7, 8, 9, 11, 12, 13, 15, 16, 17, 20, 31, 34, 39, 41, 44, 52, 56, 65, 67, 72, 75, 79, 85, 97, 98, 99, 100, 105, 106, 107, 110, 111, 113, 117, 129, 136, 143, 146, 147, 152, 160, 161, 165, 167, 171, 172, 175, 176, 180, 182, 183, 185, 187, 188, 191, 194, 195, 210], "exist_ok": [118, 130], "exit": [4, 39, 79, 82, 84, 85, 118, 119, 148, 154], "exit_pass_ctx": [4, 85, 154, 188], "exitpasscontext": 4, "exitthesim": 119, "exitwithscop": 4, "exp": [65, 80, 97, 98, 99, 100, 160, 161, 169, 170, 181, 185, 187, 189, 204], "exp10": 185, "exp2": 185, "expand": [2, 79, 136, 147, 160, 161, 163, 169, 172, 183, 187, 194, 201, 208], "expand_constructor": 172, "expand_dim": [50, 51, 53, 65, 67, 72, 73, 85, 121, 158, 161, 163, 169, 172, 187, 202, 210], "expand_global_var": 172, "expand_lik": 187, "expanddimsattr": 161, "expandmatmulofsum": 163, "expandtupleargu": 163, "expans": 163, "expect": [7, 9, 11, 13, 27, 34, 35, 36, 56, 66, 67, 69, 73, 74, 79, 85, 97, 104, 105, 106, 107, 116, 132, 146, 147, 148, 155, 160, 161, 163, 166, 168, 169, 170, 172, 185, 186, 187, 191, 192, 202, 208, 210], "expect_tx": 185, "expens": [146, 163, 172, 202], "experess": 172, "experi": [5, 12, 56, 90, 194], "experienc": [105, 106, 107], "experiment": [52, 61, 75, 126, 148, 161, 165, 170, 181, 182], "experss": [181, 185], "expertis": 11, "expir": 151, "explain": [0, 5, 12, 15, 20, 35, 56, 66, 97, 98, 99, 100, 117, 124, 160, 161, 169, 201, 211], "explan": [12, 16, 27, 56, 119, 192], "explanatori": 34, "explicit": [3, 34, 36, 65, 79, 99, 163, 170, 172, 181, 183, 186, 187, 192, 195, 201, 204], "explicit_read_region": 183, "explicitli": [4, 6, 10, 11, 20, 59, 79, 84, 85, 89, 123, 126, 155, 172, 183, 189, 191, 192, 195, 210], "explict": 172, "explor": [5, 12, 56, 101, 118, 156, 194, 201, 202, 208, 210], "expon": [170, 181, 185, 187], "exponenti": [160, 169, 181, 185, 187], "export": [0, 2, 16, 17, 22, 34, 36, 43, 44, 53, 56, 58, 59, 61, 65, 66, 67, 69, 70, 71, 80, 97, 105, 107, 109, 111, 116, 117, 118, 119, 122, 124, 126, 130, 143, 148, 152, 157, 160, 162, 167, 174, 208], "export_cc": 130, "export_directori": 212, "export_librari": [0, 3, 36, 57, 58, 59, 65, 66, 67, 69, 70, 71, 97, 99, 105, 107, 109, 130, 148, 152, 162, 174, 206, 208], "export_model_library_format": [118, 120, 122, 157], "export_node_renamed_model_path": 167, "export_renamed_c_graph_path": 167, "export_rt_mod_fil": 66, "export_runtime_modul": 66, "export_tvm": [22, 23, 43, 44, 110, 113, 160], "exportablemodul": 157, "exported_program": [43, 111, 160], "exportedprogram": 160, "expos": [1, 2, 4, 5, 37, 56, 59, 142, 146, 160, 183, 185, 186, 208, 210], "expr": [4, 5, 8, 23, 34, 35, 52, 85, 111, 126, 131, 148, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 181, 183, 184, 185, 187, 189, 192, 194, 206], "expr_deep_equ": 182, "expr_functor": [23, 36, 162], "expr_id": 164, "expres": 172, "express": [2, 9, 15, 20, 22, 26, 34, 37, 66, 79, 84, 86, 97, 98, 99, 100, 134, 137, 140, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 181, 182, 183, 185, 186, 187, 190, 195, 198, 200, 201, 203, 205, 207, 209], "exprfunctor": [35, 162, 169], "exprmut": [35, 84, 162, 169], "exprop": 37, "exprpattern": 166, "exprrv": 183, "exprvisitor": [35, 36, 162, 169], "ext": [36, 64, 66, 110, 118, 120, 138, 160], "ext_dev": [174, 176], "ext_func_args_": 36, "ext_func_bodi": 36, "ext_func_id": 36, "ext_func_id_": 36, "ext_mod": [113, 160], "extend": [17, 35, 59, 65, 79, 86, 139, 169, 188, 195, 212], "extend_tvm": [83, 84, 198], "extens": [4, 5, 6, 16, 56, 58, 59, 81, 85, 90, 174, 176, 181, 187, 190, 191, 194, 199, 208], "extent": [82, 89, 146, 147, 155, 183, 185, 186], "exterior": [161, 168], "extern": [0, 2, 4, 22, 27, 34, 36, 43, 59, 96, 122, 127, 128, 133, 134, 137, 139, 148, 152, 160, 162, 163, 172, 181, 185, 186, 187, 192, 194, 198], "extern_modul": 163, "extern_op": [132, 137, 198], "extern_primfunc": 181, "extern_scop": 129, "external_mod": [110, 160], "externfunc": [161, 162, 163], "externfuncnod": 162, "externmodul": [113, 160, 163], "externop": 181, "externopnod": 189, "extra": [17, 26, 43, 90, 104, 105, 106, 107, 120, 139, 146, 147, 160, 162, 167, 171, 178, 183, 187, 201], "extra_arg": 119, "extra_files_tar": 120, "extra_get_item_param": 163, "extra_set_item_param": 163, "extra_tar_dir": 120, "extra_tar_fil": 120, "extract": [30, 36, 37, 50, 56, 65, 67, 105, 106, 107, 108, 118, 120, 123, 126, 146, 147, 156, 160, 161, 163, 164, 169, 172, 186, 187, 192, 202, 210], "extract_from": 156, "extract_from_program": [67, 105, 106, 107, 108, 117, 202], "extract_fused_funct": 164, "extract_intermdeiate_expr": 164, "extract_task": [97, 98, 99, 100, 146], "extractal": [53, 74], "extractedtask": 156, "extractfusedfunct": 164, "extractor": 156, "extractprimfuncconst": 186, "extrapol": [168, 187], "extrapolation_valu": [161, 168, 187], "extrem": [9, 32, 36, 80, 123], "extrema": [168, 187], "ey": [161, 187], "eye_lik": 161, "f": [4, 5, 34, 35, 37, 46, 47, 48, 50, 51, 52, 53, 66, 69, 70, 71, 73, 75, 82, 84, 88, 89, 90, 104, 113, 116, 117, 118, 119, 120, 121, 122, 123, 126, 131, 132, 134, 143, 146, 151, 155, 161, 162, 170, 174, 181, 183, 185, 187, 191, 192, 194, 202, 204, 208, 210, 212], "f0": 9, "f07e228ef5f642b386d23a62df615e7b": 100, "f1": [4, 9, 61, 163, 172], "f19692ed81d032b1697c08adee62f9a5": 98, "f1b4831e3be69b07c24f46d5513875ea": 97, "f2": [4, 9, 163, 172], "f3": 9, "f37072fd": 51, "f4": 9, "f42xxxxxxxxxxxxxxx": 17, "f439cb5bb83bb6be4824f8b51c68bdb9": 97, "f746zg": 199, "f_": 170, "f_act": 187, "f_out": 191, "f_preproc": [162, 178], "f_run": 156, "f_timer": 31, "face": [5, 8, 9, 10, 76, 77, 113, 147, 160, 162, 183, 198], "facil": [32, 191], "facilit": [12, 18, 25, 31, 162, 178, 204], "fact": [3, 5, 89, 123, 164, 181, 191, 192, 195], "facto": 160, "factor": [15, 31, 37, 88, 89, 90, 96, 104, 105, 106, 107, 109, 123, 135, 136, 139, 147, 152, 160, 161, 168, 170, 171, 181, 183, 185, 187, 191, 200, 201, 202, 208, 209], "factor_axi": [181, 183], "factor_of": 185, "factori": [2, 152, 169], "factory_modul": 169, "fadd": [37, 61, 185, 187, 208], "fadd1": 208, "fadd1_dev": 208, "fadd2": 208, "fadd_cl": 208, "fadd_dev": 61, "fadd_parallel": 208, "fadd_vector": 208, "fail": [4, 7, 11, 13, 16, 17, 39, 48, 49, 67, 79, 143, 156, 158, 160, 161, 167, 171, 183, 195], "fail_l0": 158, "fail_l1": 158, "fail_l2": 158, "failur": [8, 79, 90, 158], "fair": [110, 152], "fake": [75, 147, 164], "fake_quantization_to_integ": 172, "fakequantizationtointeg": 172, "fall": [4, 79, 119, 123, 129, 146, 147, 162, 178, 201, 202], "fallback": [4, 36, 43, 56, 75, 104, 108, 110, 113, 147, 172], "fallback_split": 147, "fallback_with_reference_log": 147, "fallbackconfigent": 147, "fallbackcontext": 147, "falloc": 66, "fals": [6, 7, 31, 34, 35, 36, 37, 65, 67, 68, 69, 70, 71, 75, 85, 97, 100, 105, 107, 108, 109, 110, 111, 113, 117, 118, 120, 121, 126, 130, 132, 143, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 192, 194, 195, 206, 208], "false_branch": [35, 162, 166, 169], "false_offset": 162, "false_valu": 185, "famili": 64, "familiar": [11, 30, 46, 104, 140, 203], "fan": 211, "far": [5, 34, 36, 82, 123, 139, 181, 183, 189, 208], "fashion": [5, 34, 35, 157, 189], "fast": [8, 16, 73, 74, 75, 96, 97, 98, 99, 100, 101, 110, 119, 123, 163, 169, 170, 172, 187, 193, 200, 208], "fast_erf": 187, "fast_exp": 187, "fast_memori": 119, "fast_memory_s": 119, "fast_softmax": [170, 187], "fast_tanh": 187, "faster": [0, 7, 62, 73, 74, 75, 90, 97, 98, 99, 100, 104, 105, 106, 107, 123, 146, 147, 170, 181, 182, 185, 187, 201, 202, 210, 211], "fastest": [5, 73, 74, 210], "fastmath": [169, 172], "fastmathtransform": 163, "fatal": [13, 36, 52, 151], "favor": [4, 8, 9, 11, 16, 25, 30], "favorit": [73, 211], "fb": 53, "fbgemm": 73, "fc": [164, 171], "fc1": [22, 23, 43, 44, 110], "fc1_bia": [22, 23, 43, 44, 85, 110, 206], "fc1_weight": [22, 23, 43, 44, 85, 110, 206], "fc2": [22, 23, 43, 44, 110], "fc2_bia": [22, 23, 43, 44], "fc2_weight": [22, 23, 43, 44, 110], "fcache_": 37, "fchollet": 48, "fcodegen": 163, "fcombin": [140, 181, 185], "fcompil": [3, 57, 66, 67, 69, 97, 99, 105, 107, 148, 162, 174], "fcomput": [30, 181, 187], "fcond": 186, "fcuda": 134, "fdefault": 180, "fdor": 187, "fea": 147, "feasibl": [30, 36], "feat": 126, "featur": [2, 8, 9, 11, 12, 16, 17, 19, 20, 25, 35, 36, 56, 61, 75, 80, 84, 89, 97, 98, 99, 100, 105, 106, 107, 108, 109, 118, 123, 126, 146, 147, 148, 156, 163, 164, 168, 170, 171, 173, 181, 183, 187, 190, 191, 194, 195, 200, 202, 205, 208, 210, 212], "feature_strid": 173, "feature_typ": [67, 105, 106, 107, 108, 147, 202], "featureextractor": 156, "feed": [53, 82, 113, 123, 152, 160, 181], "feedback": [5, 9, 17], "feel": [2, 9, 13, 36, 105, 106, 107, 197, 202, 210], "fellow": [9, 10], "feng": [89, 209], "fetch": [4, 14, 16, 34, 56, 96, 104, 147, 156, 162, 175, 178, 208], "fetch_head": 14, "few": [2, 4, 5, 8, 17, 23, 34, 35, 43, 67, 75, 118, 123, 126, 147, 163, 165, 194, 195, 201], "fewer": [162, 171, 178], "fewshottun": 163, "ff": [88, 96, 98, 99, 100], "ffi": [13, 37, 104, 105, 106, 107, 146, 151, 169, 201], "ffn": 113, "fgener": 180, "fget_item": 163, "fget_param": 163, "fgradient": 161, "fgraph": 164, "fi": [0, 75, 88, 104], "fident": [140, 181, 185], "field": [2, 4, 5, 12, 34, 35, 63, 113, 118, 123, 146, 147, 155, 158, 161, 162, 165, 166, 169, 170, 172, 173, 178, 185, 187, 191, 192, 193], "field_nam": 187, "fifo": [170, 187], "fifo_buff": [170, 187], "fig": 56, "figsiz": 123, "figur": [2, 36, 44, 56, 80, 88, 89, 90, 123, 138, 208], "file": [0, 3, 5, 7, 8, 12, 13, 14, 16, 17, 24, 29, 32, 34, 36, 45, 49, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 77, 80, 83, 91, 95, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 114, 119, 122, 123, 124, 125, 126, 128, 130, 137, 143, 146, 147, 148, 156, 157, 160, 162, 167, 172, 174, 175, 181, 183, 192, 195, 197, 198, 201, 202, 206, 207, 208, 210, 211, 212], "file_list": [148, 162], "file_nam": [3, 32, 146, 157, 162], "file_out": 147, "file_path": 119, "filelock": 148, "filenam": [32, 97, 99, 105, 107, 146, 147, 148], "filep": 36, "filepath": [147, 160], "filetyp": 68, "fill": [36, 56, 65, 68, 90, 117, 124, 146, 148, 155, 157, 160, 161, 162, 168, 169, 172, 183, 185, 186, 187, 195, 208], "fill_empty_row": 169, "fill_frag": [89, 185], "fill_mod": 68, "fill_network_box": 47, "fill_valu": [160, 161, 169, 187], "fillcolor": 148, "filt": 187, "filter": [56, 79, 88, 89, 123, 134, 147, 160, 163, 169, 170, 171, 172, 173, 181, 185, 186, 187], "filter_1": 134, "filter_depth": 187, "filter_height": 187, "filter_list": 171, "filter_s": 187, "filter_width": 187, "final": [2, 3, 4, 5, 8, 9, 14, 16, 17, 25, 34, 35, 36, 37, 52, 56, 59, 65, 74, 85, 88, 89, 104, 105, 106, 107, 108, 111, 113, 118, 119, 120, 123, 134, 138, 139, 147, 159, 160, 162, 163, 165, 169, 170, 171, 180, 181, 187, 192, 194, 205], "final_indic": [181, 185], "finalize_modul": 130, "find": [4, 5, 7, 9, 12, 16, 17, 35, 36, 37, 39, 53, 60, 66, 67, 68, 69, 75, 82, 85, 86, 93, 96, 104, 105, 106, 107, 109, 118, 134, 142, 143, 146, 147, 148, 152, 155, 157, 158, 160, 161, 164, 165, 166, 168, 169, 172, 182, 187, 194, 195, 200, 201, 202, 205, 208, 210, 211], "find_anchor_block": 182, "find_clang": 148, "find_cuda_path": 148, "find_first_valid": 130, "find_librari": 58, "find_lld": 148, "find_rocm_path": 148, "find_width8": 82, "fine": [14, 35, 75, 146, 158, 202, 210], "fineprun": 75, "finish": [4, 7, 36, 62, 66, 85, 108, 118, 123, 126, 147, 156, 175, 181, 186, 201, 205, 208], "finit": [161, 169, 181, 185, 187, 191, 192], "fintrin": 186, "firefli": 109, "firmwar": [116, 121, 122], "first": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 14, 15, 16, 17, 18, 20, 23, 25, 31, 34, 35, 36, 37, 39, 41, 43, 44, 47, 56, 65, 66, 69, 70, 71, 73, 75, 79, 80, 82, 84, 88, 89, 90, 97, 98, 99, 100, 105, 106, 107, 108, 109, 110, 111, 113, 117, 118, 120, 122, 123, 126, 129, 130, 131, 134, 135, 136, 138, 139, 143, 146, 147, 148, 152, 155, 158, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 178, 181, 182, 183, 185, 187, 189, 191, 192, 194, 197, 201, 206, 208, 209, 210, 211], "first_few_lin": 122, "first_ord": [171, 172], "firstli": 3, "firstordergradi": 172, "fit": [5, 49, 90, 119, 121, 123, 189, 208, 212], "five": [123, 126, 187], "fix": [3, 7, 14, 16, 17, 27, 34, 39, 79, 88, 89, 119, 131, 139, 146, 169, 187, 192, 197, 201], "fixed_point_multipli": [169, 187], "fixed_point_multiply_per_axi": 187, "fixm": 97, "fixpoint": [164, 195], "fixtur": 79, "fl": 194, "flag": [0, 6, 12, 32, 36, 58, 59, 65, 117, 123, 143, 149, 152, 158, 160, 161, 168, 174, 183, 185, 186, 187, 188, 208, 210], "flaki": [8, 16, 110], "flash": [16, 117, 118, 120, 122, 123], "flashinf": 143, "flat": [160, 161, 169, 185, 187], "flatbuff": [53, 119], "flatc": 53, "flatten": [0, 2, 4, 34, 82, 90, 123, 146, 147, 158, 160, 161, 163, 169, 170, 185, 186, 187, 191, 192, 195, 206, 208], "flatten_0": 68, "flatten_data": 0, "flattenatrousconv": 172, "flattenbuff": 186, "flattened_indic": 185, "flavor": 57, "flegal": 163, "flexibl": [18, 22, 34, 60, 84, 110, 111, 132, 144, 147, 172, 188, 192, 195, 199, 202], "flexibleshapedispatch": 172, "flexibli": [4, 136, 195], "flip": [67, 126, 161, 187], "flip_sin_to_co": 160, "flipattr": 161, "float": [2, 5, 36, 56, 63, 65, 66, 72, 73, 89, 90, 96, 113, 120, 123, 126, 132, 134, 139, 146, 147, 148, 156, 157, 160, 161, 162, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 185, 187, 195, 204, 208, 212], "float16": [6, 56, 67, 68, 80, 89, 113, 130, 159, 161, 172, 183, 186, 189], "float16_acc32": [56, 67], "float32": [0, 4, 18, 20, 22, 23, 25, 27, 30, 31, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 61, 64, 65, 67, 68, 69, 70, 71, 72, 75, 80, 82, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 113, 117, 119, 121, 122, 123, 126, 129, 132, 134, 135, 136, 139, 140, 147, 148, 155, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 176, 183, 185, 186, 187, 188, 189, 191, 192, 194, 195, 200, 201, 202, 204, 206, 208, 209, 210], "float32x32": [90, 101, 208], "float32x4": 204, "float32x8": 200, "float64": [6, 68, 80, 189], "float_": 80, "floatimm": [147, 161, 185], "floattensor": 126, "floor": [65, 72, 161, 168, 169, 170, 181, 185, 187], "floor_divid": [161, 169, 187], "floor_mod": [161, 169, 187], "floordiv": [97, 98, 100, 101, 181, 183, 185, 186, 187], "floormod": [97, 98, 100, 101, 181, 183, 185, 186, 187], "flop": [93, 147, 177, 182], "flopcalculationerror": 147, "flow": [1, 8, 9, 18, 20, 23, 31, 36, 43, 62, 66, 72, 121, 141, 158, 162, 164, 172, 185, 190, 191, 192, 194, 205], "flush": [108, 146, 147], "fly": [60, 66, 113, 183, 185], "fma": 161, "fmap_": 37, "fmatch": 164, "fmemoiz": 148, "fmod": [181, 185], "fmt": 212, "fn": [84, 191, 192, 194, 195], "fno": 84, "fo": [57, 75, 166, 181], "focu": [2, 4, 9, 12, 20, 25, 34, 80, 110, 111, 201], "focus": [2, 12, 84, 86, 110, 116, 208], "fold": [2, 4, 43, 84, 160, 163, 165, 167, 169, 172, 183, 186, 187, 191, 192], "fold_const": [4, 35, 84], "fold_qnn": 172, "fold_scale_axi": 192, "foldconst": [4, 35, 43, 84, 85, 113, 163, 169, 172, 188], "foldconstantexpr": 172, "folder": [0, 2, 7, 12, 16, 17, 34, 35, 53, 56, 61, 79, 109, 118, 123, 174], "foldexplicitpad": 172, "foldl": 191, "foldr": 191, "foldscaleaxi": [4, 72, 85, 154, 169, 172], "folk": [9, 16, 123, 197], "follow": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 20, 25, 27, 30, 31, 32, 34, 35, 36, 37, 39, 41, 44, 46, 53, 56, 57, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 79, 80, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 117, 118, 119, 120, 123, 129, 130, 132, 134, 135, 138, 139, 142, 143, 147, 155, 156, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 178, 180, 181, 183, 185, 186, 187, 188, 189, 191, 192, 194, 195, 199, 201, 202, 204, 208, 209, 210, 211, 212], "follow_split": 101, "followup": [9, 181], "follwo": [163, 172, 188], "font_nam": 47, "font_path": 47, "font_url": 47, "foo": [1, 7, 10, 32, 162, 189], "foodeviceapi": 1, "footprint": [4, 74, 123], "foral": 155, "forbid": [135, 174], "forc": [15, 120, 123, 181, 186], "force_pur": 163, "force_suppress": 173, "forcenarrowindextoint32": 186, "forcibli": [97, 98, 99, 100], "foreach": 191, "foremost": 9, "forest": 123, "forev": 123, "forg": 143, "forget": [69, 143, 187], "fork": [7, 14, 106, 147, 174, 183], "fork_se": 183, "forkind": [82, 185], "form": [4, 9, 11, 15, 16, 17, 31, 32, 35, 36, 37, 71, 97, 98, 99, 100, 105, 106, 107, 123, 131, 139, 146, 147, 148, 149, 158, 160, 161, 162, 163, 164, 167, 169, 170, 172, 180, 181, 182, 183, 186, 187, 190, 192, 195, 202, 208, 210], "formal": 12, "format": [1, 2, 5, 8, 9, 12, 13, 16, 17, 22, 36, 46, 47, 48, 51, 52, 53, 54, 56, 59, 67, 69, 70, 71, 72, 75, 85, 113, 119, 121, 122, 123, 126, 138, 146, 147, 148, 150, 151, 152, 155, 156, 157, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 180, 181, 183, 185, 187, 191, 192, 195, 204, 205, 206, 212], "format_arg": 161, "formatt": [9, 183], "former": [4, 146], "formul": 30, "formula": 134, "forrest": 171, "fortun": [25, 36, 101, 204, 209], "forum": [10, 11, 15, 39, 197, 199, 212], "forward": [0, 7, 9, 10, 22, 23, 43, 44, 67, 72, 75, 108, 110, 113, 126, 129, 130, 139, 152, 160, 170, 172, 183, 187], "forward_fold_scale_axi": 172, "forward_index": 185, "forward_shap": 185, "forwardfoldscaleaxi": [4, 172], "found": [2, 4, 17, 34, 35, 37, 39, 66, 73, 80, 82, 97, 98, 99, 100, 119, 123, 143, 146, 148, 151, 152, 155, 156, 157, 161, 164, 165, 166, 168, 169, 182, 185, 187, 191, 202, 208, 212], "foundat": [2, 197, 208], "four": [4, 15, 82, 89, 106, 123, 124, 136, 169, 173, 187, 201], "fourier": [169, 187], "fourth": 173, "fox": 67, "fp16": [56, 64, 65, 67, 89, 148, 163, 187], "fp16_acc16": 56, "fp16_input_nam": 163, "fp32": [56, 58, 73, 74, 89, 129, 148, 163, 172, 187], "fp64": 187, "fp8": 186, "fp8computeleg": 186, "fp8storageleg": 186, "fpass": [4, 163, 172, 182, 186], "fpass_nam": 4, "fpeq": 56, "fpga": [61, 66], "fpic": 148, "fprimalgradi": 34, "frac": [34, 160, 161, 170], "fraction": [123, 169, 185, 187], "fragment": [89, 164, 172, 182, 185, 186, 190], "fragment_a": 185, "fragment_b": 185, "fragment_c": 185, "fragment_d": 185, "frame": [52, 169, 177, 187, 211], "framework": [1, 4, 18, 20, 27, 36, 37, 41, 43, 44, 56, 59, 62, 67, 68, 75, 76, 77, 82, 110, 111, 113, 123, 126, 143, 148, 167, 172, 193, 196, 198, 202, 205, 211], "freduce_arg": 185, "free": [1, 2, 4, 20, 36, 67, 69, 80, 86, 90, 97, 105, 106, 107, 126, 155, 158, 161, 163, 164, 165, 169, 185, 192, 197, 202, 205, 208, 210], "free_symbolic_var": 158, "free_type_var": 164, "free_var": [126, 129, 130, 158, 164, 194], "freedataspac": 1, "freeli": [202, 210], "freerto": 119, "freertos_path": 119, "freestream": 1, "freeworkspac": 1, "freez": [59, 172], "freeze_param": [59, 167], "fregist": [151, 155], "frequenc": [146, 155, 160, 164, 169, 187], "frequent": [10, 12, 79, 164, 186], "fresh": [143, 195], "freshli": [160, 161, 162], "friend": 4, "friendli": [4, 16, 22, 52, 56, 75, 90, 119, 146, 181, 183, 208], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 17, 18, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 34, 35, 36, 37, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 77, 79, 80, 82, 83, 84, 85, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 144, 146, 147, 148, 149, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 194, 195, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212], "from_arrai": 175, "from_caff": 167, "from_caffe2": 167, "from_cal": 149, "from_const": 160, "from_coreml": [46, 55, 167, 198], "from_darknet": [47, 55, 167, 198], "from_devic": [6, 110, 113, 180], "from_dlpack": [44, 176], "from_exported_program": [43, 111, 160], "from_expr": [58, 84, 117, 155, 169, 194], "from_func": 185, "from_func_with_separ": 185, "from_fx": 160, "from_json": 177, "from_json_dict": 147, "from_kera": [48, 55, 69, 167, 198], "from_keras_model": 123, "from_legacy_te_schedul": [82, 89, 90, 96, 134, 135, 136, 139, 140, 200, 204, 208], "from_min_ext": 155, "from_mxnet": [59, 65, 66, 167], "from_numpi": [51, 73, 121], "from_oneflow": 167, "from_onnx": [49, 55, 64, 160, 167, 198, 202], "from_paddl": [50, 55, 167, 198], "from_pretrain": [75, 113], "from_pytorch": [51, 55, 67, 70, 71, 72, 73, 121, 167, 198], "from_raw": 113, "from_scalar": 160, "from_sourc": [64, 80], "from_stablehlo": 160, "from_struct_info": 160, "from_tensorflow": [52, 55, 75, 167, 198], "from_tflit": [53, 55, 74, 116, 118, 120, 122, 123, 167, 198], "fromarrai": 49, "fromm": 75, "front": [5, 54, 97, 98, 99, 100, 132, 170, 187, 190, 192, 193], "frontend": [0, 2, 5, 13, 16, 22, 23, 37, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 59, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 79, 93, 97, 98, 99, 100, 105, 106, 107, 108, 110, 111, 113, 116, 118, 120, 121, 122, 123, 151, 153, 173, 190, 193, 202, 205, 206], "frontend_nam": 151, "frontload": 35, "frozen_func": 75, "fscan": 135, "fset_item": 163, "fset_param": 163, "fshape": 187, "fskip": 172, "fssl": 123, "fstab": 66, "fstream": 36, "ftimer": [162, 178], "ftp": 66, "ftransform": 186, "ftvmlegal": 172, "ftvmmixedprecisionconversiontyp": 172, "fucntion": 186, "fulfil": [4, 195], "full": [4, 7, 30, 35, 49, 64, 66, 70, 71, 73, 75, 109, 120, 123, 124, 126, 143, 148, 157, 160, 161, 169, 172, 174, 183, 187, 192, 197, 200, 210], "full_dataset": 123, "full_lik": [161, 169, 181, 187], "fulli": [2, 12, 36, 41, 104, 123, 129, 139, 148, 155, 160, 163, 166, 169, 172, 181, 182, 185, 187, 193, 194, 195, 205, 208], "fully_connected_infer": 148, "fun": [2, 5, 75, 191, 192], "func": [4, 23, 36, 70, 71, 75, 82, 84, 88, 89, 90, 96, 101, 104, 109, 126, 139, 146, 147, 148, 149, 155, 156, 158, 159, 160, 161, 162, 163, 165, 171, 172, 174, 175, 178, 180, 181, 182, 183, 184, 185, 186, 188, 194, 200, 201, 204, 208, 209], "func1": 8, "func2": 8, "func3": 8, "func_attr": [22, 23, 30, 31, 43, 44, 82, 89, 90, 96, 110, 111, 113, 134, 135, 136, 139, 140, 159, 163, 200, 204, 208, 209], "func_decl_": 36, "func_idx": 36, "func_nam": [0, 31, 36, 93, 146, 151, 152, 159, 162, 163, 177, 178, 180, 183, 185], "func_name_": 37, "func_name_regex": 188, "func_name_sav": [162, 178], "func_or_mod": 182, "func_pattern": 194, "func_sinfo": 158, "func_symbol": [162, 178], "func_working_on": 183, "funcstructinfo": [158, 162], "function": [0, 1, 2, 3, 5, 7, 8, 9, 12, 13, 18, 20, 22, 23, 25, 26, 31, 34, 35, 36, 37, 43, 44, 47, 52, 56, 58, 59, 63, 65, 70, 71, 72, 73, 74, 75, 79, 82, 84, 85, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 113, 117, 118, 119, 120, 123, 129, 131, 133, 136, 137, 139, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 198, 200, 201, 204, 205, 206, 209, 210, 212], "function_pass": [4, 84, 163, 172, 186], "functioninfo": 37, "functionnod": [36, 162], "functionpass": [4, 84, 163, 172, 186, 188], "functionpassnod": 4, "functionpattern": [166, 194], "functions_item": [23, 155], "functionscop": 159, "functionvar_0_0": 194, "functionvar_0_1": 194, "functionvar_0_2": 194, "functor": [4, 148, 183, 184], "functyp": [155, 182, 195], "fundament": [25, 27, 30, 43, 208], "further": [8, 9, 16, 34, 35, 43, 56, 88, 110, 111, 113, 132, 157, 163, 164, 180, 181, 183, 184, 192, 195, 197, 209, 210, 211, 212], "furthermor": 90, "fusabl": 84, "fuse": [0, 2, 23, 25, 34, 43, 58, 84, 88, 89, 96, 101, 104, 110, 113, 129, 138, 161, 163, 164, 172, 181, 182, 183, 187, 189, 194, 195, 200, 206, 208], "fuse___layout_transform___4": 0, "fuse___layout_transform___broadcast_add_relu___layout_transform__": 0, "fuse___layout_transform___broadcast_add_relu___layout_transform___1": 0, "fuse___layout_transform___broadcast_add_reshape_transpose_reshap": 0, "fuse__contrib_conv2d_nchwc": 0, "fuse__contrib_conv2d_nchwc_1": 0, "fuse__contrib_conv2d_nchwc_2": 0, "fuse__contrib_conv2d_nchwc_3": 0, "fuse_l2_normalize_relu": 0, "fuse_model": 73, "fuse_op": 195, "fuse_opt_level": [84, 163, 172], "fused_loop": 183, "fused_matmul1_add1": [23, 43], "fused_matmul_add_relu": [23, 43], "fused_nn_batch_flatten": 93, "fused_nn_dense_nn_bias_add": 93, "fused_nn_dense_nn_bias_add_nn_relu": 93, "fused_nn_dense_nn_bias_add_nn_relu_1": 93, "fused_nn_softmax": 93, "fused_relax_permute_dims_relax_matmul_relax_add_relax_nn_relu_cubla": 110, "fuseop": [2, 23, 43, 84, 113, 163, 164, 165, 172, 205], "fuseopsbypattern": [110, 163], "fusetir": [2, 23, 43, 113, 163], "fusetransposematmul": [113, 163], "fusion": [2, 4, 20, 23, 41, 43, 44, 59, 84, 96, 101, 113, 129, 163, 172, 183, 186, 194, 200, 204, 205, 206], "fusionpattern": 163, "futur": [2, 3, 9, 16, 51, 64, 67, 68, 70, 71, 72, 73, 74, 105, 106, 107, 126, 146, 156, 162, 172, 195, 208], "futurewarn": 126, "fuzzi": [166, 190], "fvisibl": 143, "fvisit": [158, 164, 184], "fvp": [16, 119], "fvp_corstone_ss": 119, "fwrap": 181, "fx": 160, "g": [1, 2, 4, 5, 7, 8, 9, 11, 12, 16, 17, 18, 22, 32, 35, 36, 39, 43, 44, 58, 62, 66, 69, 70, 71, 79, 80, 97, 98, 99, 100, 109, 110, 111, 113, 116, 118, 121, 123, 126, 140, 142, 143, 146, 147, 148, 155, 160, 162, 163, 164, 166, 167, 168, 169, 170, 172, 180, 183, 186, 187, 191, 192, 195, 197, 204, 205, 206, 210], "g_act": 187, "g_aot_memori": 119, "g_data": 126, "g_nd": 204, "g_np": 204, "g_var": 23, "ga": [67, 105, 106, 107, 108, 202], "gain": [11, 90, 201, 208], "gall": 122, "galleri": [21, 22, 23, 28, 30, 31, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 84, 85, 87, 88, 89, 90, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212], "gamma": [146, 160, 161, 170, 187, 194], "gan": 171, "gap": 196, "gate": [113, 187], "gate_proj": 113, "gate_up": 113, "gate_up_proj": 113, "gate_x": 113, "gather": [82, 160, 161, 169, 175, 177, 187, 202], "gather_el": 161, "gather_nd": [161, 169, 187], "gather_to_worker0": 175, "gatun": [67, 105, 106, 107, 108, 117, 147, 201, 202], "gauss": [160, 161, 181, 185, 187], "gaussian": [160, 161], "gave": 202, "gavin": 123, "gcc": [4, 36, 62, 64, 80, 84, 97, 105, 107, 109, 118, 143, 148, 208], "gcc_0": 36, "gcc_0_": 36, "gcc_0_0": 36, "gcc_0_1": 36, "gcc_0_2": 36, "gcc_0__wrapper_": 36, "gcc_0_wrapper": 36, "gcc_binary_op_1d": 36, "gcc_binary_op_2d": 36, "gcc_input0": 36, "gcc_input1": 36, "gcc_input2": 36, "gcc_input3": 36, "gcn_cora": 126, "gcn_model": 126, "ge": 185, "gear": 4, "geforc": 111, "gelu": [23, 59, 160, 161, 163], "gelu_tanh": [161, 163], "gemm": [82, 87, 91, 104, 149, 163, 170, 182, 198], "gemv": [110, 113, 149], "gemv_impl": 139, "gemv_reset": 139, "gemv_upd": 139, "gen": [1, 36], "gen_func": 191, "gen_includ": 212, "gen_modul": [58, 59, 65], "gen_new_rang": 183, "gen_weight": 75, "gene": 147, "gener": [0, 2, 4, 5, 6, 8, 9, 10, 12, 13, 15, 16, 17, 21, 22, 23, 25, 27, 28, 30, 31, 32, 34, 35, 37, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 80, 81, 82, 84, 85, 87, 90, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 121, 124, 126, 127, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 143, 146, 147, 148, 150, 155, 156, 157, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 177, 180, 181, 183, 184, 185, 186, 187, 191, 192, 194, 196, 197, 200, 201, 202, 203, 205, 209, 210, 211, 212], "general_rnn": 191, "generalreduct": [110, 113], "generate_design_spac": 156, "generate_input": 191, "generate_measure_candid": 156, "generate_project": [16, 116, 117, 121, 122, 123, 157], "generate_project_from_mlf": [120, 157], "generate_sketch": 146, "generated_project": 122, "generated_project_dir": [116, 120, 122, 157], "generated_project_path": 157, "generatedproject": 157, "generatorfoocod": 1, "generic_func": 180, "genericfunc": 180, "genet": [147, 201], "genetr": 56, "geometr": [168, 187], "geometri": 56, "geral": 16, "gerum": 212, "get": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 16, 17, 22, 23, 31, 34, 35, 36, 37, 43, 44, 46, 47, 51, 52, 53, 56, 61, 62, 64, 66, 68, 69, 70, 71, 73, 75, 79, 80, 82, 85, 88, 89, 90, 92, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 120, 121, 122, 123, 124, 130, 131, 134, 136, 139, 140, 142, 146, 147, 148, 152, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 169, 170, 171, 173, 174, 175, 178, 180, 181, 182, 183, 185, 187, 188, 194, 198, 200, 201, 202, 203, 206, 207, 208, 209, 210, 212], "get_1d_indic": 187, "get_1d_pixel": 187, "get_2d_indic": 187, "get_2d_pixel": 187, "get_3d_indic": 187, "get_3d_pixel": 187, "get_active_lane_mask": 185, "get_all_tuning_record": 156, "get_attr": 155, "get_block": [31, 183, 209], "get_block_access_region": 182, "get_block_read_write_region": 182, "get_block_scop": [183, 185], "get_calibration_data": 164, "get_cc": 148, "get_child_block": 183, "get_classifi": 171, "get_closest_index": 187, "get_compile_opt": 160, "get_concrete_funct": 75, "get_config": [104, 147, 201], "get_const_int": 187, "get_const_tupl": [101, 139, 187], "get_constructor": 155, "get_consum": 183, "get_conv2d_workload": 147, "get_ctor": [169, 171], "get_ctor_stat": [169, 171], "get_cuda_vers": 148, "get_current_trac": 188, "get_decis": 183, "get_default_dtyp": 160, "get_default_qconfig": 73, "get_default_spec": 113, "get_deps_by_dst": 183, "get_deps_by_src": 183, "get_devic": 152, "get_dltensor_addr": 63, "get_exec": 165, "get_factor": 147, "get_featur": 171, "get_flatten_featur": 147, "get_flattened_buff": 185, "get_funct": 174, "get_global_func": [5, 110, 113, 132, 175], "get_global_symbol_section_map": 148, "get_global_type_var": 155, "get_global_var": [43, 155, 169, 171], "get_global_var_stat": [169, 171], "get_graph_json": [0, 117, 122], "get_imagenet_input": 73, "get_includ": 160, "get_init_st": 146, "get_input": [116, 152], "get_input_data": 2, "get_input_detail": [74, 120], "get_input_index": 152, "get_input_info": 152, "get_int": 155, "get_int_tupl": 155, "get_inx": 187, "get_item": 163, "get_kind_attr": 180, "get_last_ffi_error": 13, "get_lib": [56, 122], "get_logit": 113, "get_loop": [31, 183, 209], "get_microtvm_template_project": [116, 117, 120, 121, 122, 123, 157], "get_model": [59, 65], "get_nam": [169, 171], "get_name_stat": [169, 171], "get_native_generic_func": 180, "get_net": 171, "get_network": [97, 98, 99, 100, 105, 106, 107, 108, 130], "get_next_index": 147, "get_node_attr": 148, "get_node_edg": [131, 148], "get_num_input": 152, "get_num_output": [147, 152], "get_other_opt": 147, "get_output": [0, 2, 46, 47, 51, 52, 53, 64, 67, 69, 70, 71, 73, 74, 75, 116, 121, 122, 126, 129, 130, 152, 162, 178, 202, 206], "get_output_block": 183, "get_output_detail": [74, 120], "get_packed_func": 180, "get_pad_tupl": 187, "get_pad_tuple1d": [170, 187], "get_pad_tuple2d": 170, "get_pad_tuple3d": [170, 187], "get_pad_tuple_gener": 187, "get_param": [117, 118, 122, 165], "get_pass_to_op_diff": 85, "get_pattern": 110, "get_patterns_with_prefix": 110, "get_pipelin": [43, 44, 110, 111, 113, 162], "get_pow2": 147, "get_prim_func_arg_and_result_memory_constraint": 182, "get_produc": 183, "get_rand_index": 147, "get_real_imag": [73, 74], "get_region": 164, "get_result": 4, "get_shap": 165, "get_shape_from_rewritten_layout": 146, "get_shape_of": 162, "get_sourc": [56, 122, 134, 208], "get_sref": [183, 185], "get_standalone_crt_dir": 157, "get_start": [45, 198], "get_static_typ": 158, "get_str": 155, "get_synset": 73, "get_system_lib": [117, 122], "get_target": [116, 117, 120, 121, 122, 123], "get_target_by_dump_machin": 148, "get_target_default": 146, "get_target_device_typ": 180, "get_target_tripl": 148, "get_task": 147, "get_tensor": 74, "get_tensor_by_nam": 52, "get_tensor_ctor_stat": [169, 171], "get_timestep_embed": 160, "get_top_k": 156, "get_total_mac_numb": 164, "get_trace_stack": 188, "get_trace_stack_s": 188, "get_transform": 73, "get_tuning_api_databas": 188, "get_typ": [169, 171], "get_type_stat": [169, 171], "get_unique_nam": 159, "get_valid_count": 173, "get_valid_implement": 165, "get_var2v": 158, "get_var_remap": 162, "get_vscale_expr": 185, "get_vtcm_compaction_pass": 182, "get_workload": [3, 85, 93, 97, 98, 99, 100, 105, 106, 107, 108, 147, 148, 167, 171, 206], "get_workload_entri": 146, "getattr": [1, 51, 67, 70, 71, 75], "getattrmap": 35, "getblock": 183, "getconstint": 8, "getcurrentpasscontext": 4, "getcwd": [66, 120], "getenv": [68, 110, 111, 113, 116, 117, 120, 122], "getextsymbol": 36, "getfil": 130, "getfunc": 37, "getfunct": [2, 37, 44], "getlin": 36, "getlogg": [104, 105, 106, 107, 201], "getmemb": 122, "getnam": 50, "getopconvert": 65, "getpass": 4, "getref": 35, "getrootasmodel": [53, 74, 116, 118, 120, 122, 123], "getshap": 36, "getsourc": 36, "getsymbol": 3, "gfile": 52, "gflop": [97, 98, 99, 100, 104, 105, 106, 107, 108, 201, 202, 210, 211], "gfx900": 106, "gh": [7, 16], "gist": [46, 48, 49, 50, 69, 70, 71, 73, 171], "git": [7, 15, 16, 17, 39, 61, 62, 66, 69, 70, 71, 80, 109, 116, 117, 120, 122, 124, 142, 143], "git_commit_hash": 143, "github": [7, 8, 12, 16, 17, 46, 47, 48, 49, 50, 51, 52, 53, 58, 61, 62, 64, 66, 67, 69, 70, 71, 73, 74, 93, 109, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 142, 160, 161, 170, 171, 172, 202, 208, 210, 211], "githubusercont": [46, 48, 50, 51, 53, 69, 70, 71, 72, 73, 119, 121, 123], "give": [1, 2, 5, 8, 9, 12, 13, 35, 43, 56, 58, 60, 65, 73, 74, 82, 111, 123, 135, 143, 144, 147, 148, 151, 152, 161, 162, 169, 172, 174, 181, 187, 191, 192, 195, 201, 202, 210, 212], "given": [1, 4, 16, 30, 31, 34, 35, 36, 37, 51, 52, 56, 58, 65, 67, 73, 74, 79, 84, 88, 93, 101, 138, 139, 146, 147, 148, 149, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 194, 195, 202, 204, 208, 210], "givern": 124, "glob": [4, 36, 84], "global": [1, 4, 5, 18, 20, 32, 43, 82, 88, 89, 90, 101, 104, 129, 130, 134, 135, 140, 146, 147, 148, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 175, 180, 181, 183, 185, 186, 187, 190, 191, 200, 204, 208, 210], "global_avg_pool1d": 170, "global_avg_pool2d": [58, 65, 85, 170, 206], "global_avg_pool3d": 170, "global_call_count": 164, "global_func": 155, "global_info": 155, "global_max_pool1d": 170, "global_max_pool2d": [58, 65, 170], "global_max_pool3d": 170, "global_offset": 185, "global_pool": 187, "global_ptr": 185, "global_scop": 167, "global_symbol": [30, 101, 159, 162, 163, 172, 209], "global_type_var": 155, "global_var": [155, 172, 185], "global_workspace_1_var": 212, "globalinfo": 155, "globaltypevar": [155, 169, 195], "globalvar": [4, 43, 155, 158, 159, 161, 162, 163, 164, 171, 172, 183, 185, 188, 192], "globalvarnod": 162, "glossari": 183, "glue": [5, 34, 119, 157], "gluon": [4, 59, 65, 70, 84, 167, 171], "gluoncv": 72, "gmod": [2, 152], "gnn": 126, "gnn_model": 126, "gnu": [17, 56, 58, 62, 64, 66, 80, 97, 99, 105, 107, 109, 171], "gnueabihf": [62, 71, 109, 148], "gnupg": 17, "go": [2, 8, 9, 10, 13, 16, 17, 20, 34, 36, 37, 43, 56, 57, 59, 64, 65, 74, 75, 97, 105, 106, 107, 109, 116, 119, 123, 160, 191, 208, 210, 212], "goal": [2, 3, 4, 9, 32, 35, 36, 44, 75, 110, 123, 129, 176, 194, 202, 210], "gobbl": [52, 75], "goe": [17, 79], "good": [9, 11, 16, 34, 35, 36, 82, 96, 97, 98, 99, 100, 101, 104, 123, 136, 147, 200, 201, 208, 210], "googl": [8, 22, 23, 30, 31, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 143, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212], "googleapi": [48, 74, 119, 123], "googletest": 143, "got": [3, 56, 85, 123, 146], "goto": 162, "govern": [4, 11], "gpg": 15, "gpio": 118, "gpu": [2, 3, 16, 34, 36, 37, 44, 52, 58, 62, 65, 67, 68, 69, 70, 75, 79, 87, 89, 91, 94, 95, 102, 103, 110, 111, 113, 134, 136, 143, 146, 147, 148, 152, 163, 167, 171, 174, 176, 180, 181, 183, 186, 187, 196, 198, 201, 202, 205, 206, 211], "gpu_data": 111, "gpu_device_nam": 123, "gpu_implementation_large_batch": 79, "gpu_implementation_small_batch": 79, "gpu_mod": 43, "gpu_out": [43, 110, 111], "gpu_param": [43, 110, 111], "grab": [51, 67, 70, 71, 75, 208], "grad": [34, 170, 187], "grad_1": 163, "grad_2": 163, "grad_layout": 170, "gradient": [146, 156, 159, 160, 161, 162, 163, 170, 171, 172, 181, 187], "grain": 158, "grammar": 190, "grant": [11, 119], "granular": [4, 34, 84], "graph": [1, 2, 4, 6, 19, 20, 22, 36, 37, 41, 43, 44, 46, 48, 49, 50, 56, 57, 58, 62, 64, 65, 66, 68, 69, 74, 96, 97, 98, 99, 100, 101, 108, 110, 111, 113, 116, 117, 118, 119, 121, 122, 124, 127, 128, 129, 130, 141, 146, 147, 148, 152, 155, 157, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 187, 190, 198, 200, 202, 205, 206, 210, 211, 212], "graph_": 36, "graph_attr": 148, "graph_def": [52, 75], "graph_executor": [0, 46, 47, 51, 52, 53, 58, 59, 64, 65, 66, 67, 69, 70, 71, 73, 74, 75, 97, 98, 99, 100, 105, 106, 107, 108, 126, 129, 153, 165, 202, 206], "graph_executor_codegen": 165, "graph_executor_factori": 157, "graph_json": [0, 36, 165], "graph_json_": 36, "graph_json_str": [152, 157], "graph_mod": 122, "graph_modul": [152, 160], "graph_opt_sch_fil": 108, "graph_split": 130, "graph_tun": 108, "graphdef": [52, 75, 167], "graphexecutor": [116, 122, 152, 157], "graphexecutorcodegen": 165, "graphexecutorfactorymodul": 157, "graphic": [56, 180], "graphmodul": [46, 47, 51, 52, 53, 58, 59, 64, 65, 66, 67, 69, 70, 71, 73, 74, 75, 93, 97, 98, 99, 100, 105, 106, 107, 108, 126, 129, 130, 152, 160, 169, 202, 206], "graphmoduledebug": [0, 157], "graphproto": 160, "graphruntimefactori": 157, "graphviz": [131, 148], "grasp": 12, "grayscal": 123, "great": [9, 75, 104, 108, 129, 199], "greater": [1, 34, 49, 65, 148, 160, 161, 169, 185, 187], "greater_equ": [160, 161, 169, 187], "greatli": [56, 65, 84, 195], "green": 148, "grid": [20, 22, 23, 27, 30, 31, 43, 88, 89, 90, 96, 110, 134, 135, 136, 139, 140, 147, 159, 163, 168, 170, 181, 183, 185, 187, 200, 201, 202, 204, 208, 209, 210], "grid_dim": 37, "grid_sampl": [168, 187], "gridsearch": [67, 105, 106, 107, 108, 202], "gridsearchtun": [67, 105, 106, 107, 108, 147, 201, 202], "ground": [146, 161, 202], "group": [2, 4, 11, 35, 58, 111, 123, 135, 148, 158, 160, 161, 162, 163, 169, 170, 172, 175, 181, 185, 187, 191, 208], "group_conv1d_ncw": 187, "group_conv1d_nwc": 187, "group_conv1d_transpose_ncw": 187, "group_conv2d_nchw": 187, "group_conv2d_nhwc": 187, "group_conv2d_transpose_nchw": 187, "group_conv3d_transpose_ncdhw": 187, "group_count": 148, "group_norm": [160, 161, 170, 187], "groupnorm": 160, "grow": [9, 186], "gt": 185, "gtar": 17, "gtest": [16, 143], "gtx": 75, "gu": [138, 148], "guarante": [6, 16, 146, 158, 160, 161, 162, 164, 183, 184, 208], "guard": [174, 181, 183, 185], "guess": 148, "gui": 118, "guid": [2, 9, 35, 36, 37, 38, 39, 52, 56, 59, 64, 65, 75, 109, 123, 126, 141, 144, 146, 151, 183, 192, 201, 202, 205, 210], "guidanc": [11, 212], "guidelin": [9, 10, 15, 62], "gunzip": 119, "gussmith23": 167, "gv": [4, 18, 22, 23, 43, 44, 110, 111, 159, 188], "gv0": [159, 163], "gvar": [159, 161, 162], "gx": 169, "gy": 169, "gz": [17, 53, 66, 74, 80, 116, 117, 120, 122, 124], "h": [1, 4, 5, 32, 34, 35, 36, 37, 39, 47, 66, 69, 82, 89, 96, 97, 98, 100, 104, 118, 119, 122, 123, 126, 146, 160, 161, 168, 170, 173, 181, 187, 191, 195], "h1": 191, "h2": 191, "h5": [48, 56, 69, 123], "h5py": 66, "h_act": 187, "h_end": 173, "h_in": 173, "h_init": 187, "h_kv": 113, "h_q": 113, "h_start": 173, "ha": [1, 3, 4, 7, 9, 10, 11, 12, 15, 16, 17, 20, 30, 34, 35, 36, 37, 39, 48, 56, 58, 65, 67, 70, 71, 73, 74, 79, 84, 88, 89, 90, 93, 101, 105, 106, 107, 109, 113, 119, 122, 123, 126, 129, 138, 139, 143, 146, 147, 151, 155, 156, 158, 159, 160, 161, 162, 163, 164, 168, 169, 170, 172, 173, 178, 182, 183, 186, 187, 188, 191, 192, 194, 195, 201, 202, 205, 208, 210, 211, 212], "had": 204, "haichen": 88, "hal_delai": 118, "hal_gettick": 118, "hal_gpio_togglepin": 118, "hal_uart_transmit": 118, "half": [56, 89, 113, 148, 170, 185], "half_pixel": [161, 168, 170, 187], "halid": [82, 189], "halideir": [82, 181, 189], "halt": 79, "halv": 56, "hand": [36, 58, 126, 161, 169, 181, 185, 187, 188, 194, 210, 211], "handcraft": [4, 139, 160], "handi": 62, "handl": [1, 2, 3, 4, 5, 15, 20, 22, 23, 30, 35, 36, 37, 43, 52, 56, 59, 78, 84, 89, 101, 120, 126, 134, 135, 136, 140, 143, 151, 159, 160, 163, 164, 167, 172, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 195, 204, 208, 209], "handle_command_stream": 119, "handle_optimizer_config": 119, "handler": [151, 172], "hang": 152, "happen": [4, 9, 13, 14, 37, 59, 66, 85, 120, 129, 139, 147, 183, 187, 191, 208], "hard": [9, 14, 60, 80, 123, 131, 172], "hard_fail": 172, "hardwar": [1, 2, 8, 20, 23, 27, 36, 39, 41, 44, 56, 59, 61, 64, 66, 73, 74, 75, 79, 80, 82, 89, 99, 102, 116, 117, 119, 121, 122, 123, 124, 129, 133, 137, 141, 146, 147, 172, 194, 196, 198, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211], "hardware_param": [99, 146], "hardwareparam": [99, 146], "harm": 35, "harmless": 43, "has_attr": [155, 166, 194, 212], "has_complex_op": 146, "has_dtyp": [166, 194], "has_next": 147, "has_reshape_pattern": 158, "has_shap": [166, 194], "has_typ": [166, 194], "has_workload": 156, "hasattr": 85, "hash": [2, 8, 17, 39, 67, 146, 147, 155, 156], "hashabl": [146, 147], "hashtag": 14, "haskel": 191, "hasn": 155, "hat": 10, "have": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 23, 31, 34, 35, 36, 37, 39, 41, 43, 44, 46, 47, 49, 53, 56, 59, 62, 63, 65, 66, 67, 68, 69, 70, 71, 73, 75, 79, 80, 82, 84, 85, 89, 90, 97, 98, 99, 100, 101, 105, 106, 107, 113, 116, 117, 118, 119, 120, 121, 123, 124, 126, 129, 138, 139, 140, 142, 143, 146, 147, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 172, 174, 176, 178, 181, 182, 183, 185, 186, 187, 189, 191, 192, 193, 194, 195, 199, 200, 201, 202, 204, 205, 208, 210, 211], "have_cudagraph": 148, "have_fp16": 148, "have_int8": 148, "have_matrixcor": 148, "have_tensorcor": [89, 148], "haven": 14, "hbm": 66, "hc": 89, "hdf5": 66, "hdfgroup": 66, "he": [162, 171], "head": [0, 7, 14, 17, 56, 161, 181, 185, 191], "head_dim": [113, 161], "head_dim_v": 161, "head_siz": 160, "head_size_valu": 160, "header": [36, 69, 118, 119, 124, 155, 157, 160, 169, 188], "header_fil": 119, "health": 9, "healthi": 11, "hear": 9, "heavi": [2, 5, 37, 67, 69, 75, 199], "heavili": [148, 172], "height": [68, 72, 88, 89, 148, 161, 168, 170, 173, 185, 187], "hello": [5, 118, 148, 159, 211], "help": [0, 4, 7, 9, 10, 11, 12, 16, 17, 20, 27, 39, 43, 44, 56, 58, 80, 82, 84, 86, 90, 105, 106, 107, 109, 113, 119, 123, 124, 129, 132, 136, 139, 142, 143, 146, 152, 155, 159, 160, 161, 162, 163, 166, 167, 169, 172, 174, 185, 186, 187, 188, 201, 202, 208, 209, 210], "helper": [3, 4, 31, 34, 35, 67, 73, 79, 148, 160, 162, 165, 169, 171, 202, 208], "henc": [4, 9, 16, 19, 52, 56, 67, 68, 84, 123, 163, 191, 195], "her": 66, "here": [2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 17, 22, 23, 27, 30, 31, 32, 34, 35, 36, 37, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 82, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 142, 147, 158, 163, 169, 172, 174, 183, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 199, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212], "hessar": [116, 117, 120, 121, 124], "heterogen": [82, 152, 161, 165, 169, 180, 192, 194], "heurist": [35, 65], "hex": 119, "hexagon": [156, 174, 176, 180], "hf": 113, "hf_weight_path": 113, "hi": [66, 88, 211], "hidden": [113, 126, 143, 170, 187], "hidden_dim": 187, "hidden_s": [113, 159, 160], "hidden_st": 113, "hiddxen": 171, "hide": [160, 181, 183], "hide_private_symbol": 143, "hierarch": [4, 146], "hierarchi": [18, 89, 123], "hierearchi": 118, "high": [2, 9, 11, 18, 19, 22, 23, 35, 36, 37, 44, 56, 59, 62, 64, 66, 74, 75, 88, 89, 90, 93, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 110, 111, 113, 123, 141, 148, 156, 163, 165, 169, 171, 182, 185, 187, 189, 194, 196, 198, 201, 202, 203, 205, 206, 207, 208, 210], "higher": [12, 20, 32, 34, 65, 69, 74, 75, 89, 138, 146, 163, 172, 181, 183, 187, 188, 191, 192, 194, 201, 202, 204, 205], "higher_ord": [171, 172], "highest": [65, 113, 135, 165, 169], "highli": [9, 12, 16, 64, 72, 90, 143, 155, 208], "highlight": [36, 110, 183], "hill": 119, "hill_climb": 119, "hint": [13, 16, 34, 36, 39, 58, 90, 148, 155, 159, 160, 161, 162, 169, 181, 183, 185, 186, 187, 208], "hint_on_devic": 161, "hip": 143, "hiroyuki": 71, "histor": 31, "histori": [0, 11, 31, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 123, 146, 147, 199, 200, 201], "hit": [9, 13, 49, 90, 167, 177, 208], "hl": 62, "hlpuart1": 118, "hn": 191, "hoc": [7, 195], "hoge": [201, 202, 205, 210], "hoist": [90, 165, 186, 208], "hoistedcondit": 186, "hoistedletbind": 186, "hoistexpress": 186, "hoistexpressionconfig": 186, "hoistifthenels": 186, "hold": [4, 5, 37, 90, 148, 152, 155, 160, 169, 172, 183, 192, 195, 202, 208], "holder": 36, "hole": 195, "holist": 118, "home": [64, 65, 79, 126, 160], "homogen": [165, 169], "hood": [5, 20, 37, 73, 138, 208], "hook": [16, 131, 148], "hop_length": [169, 187], "horizont": 113, "host": [1, 2, 3, 4, 5, 8, 37, 47, 51, 52, 56, 58, 61, 62, 64, 65, 66, 67, 69, 70, 71, 80, 84, 97, 99, 105, 106, 107, 109, 116, 117, 118, 120, 121, 122, 124, 130, 142, 146, 147, 150, 157, 161, 162, 165, 169, 172, 174, 175, 178, 180, 182, 186, 208, 211, 212], "host_arrai": 175, "host_driven": [116, 117, 122, 124], "host_ip": [97, 105, 107], "host_ip_address": 211, "hostnam": [68, 211], "hot": [90, 161, 169, 187, 208], "hour": [7, 9, 17, 66, 105, 106, 107, 210, 211], "how": [1, 2, 3, 4, 5, 7, 9, 10, 15, 16, 17, 18, 20, 22, 23, 30, 31, 34, 36, 37, 38, 39, 43, 44, 53, 54, 56, 58, 59, 60, 61, 65, 66, 67, 68, 73, 74, 75, 76, 78, 79, 81, 82, 83, 87, 91, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 117, 119, 122, 123, 124, 129, 130, 131, 132, 134, 135, 136, 138, 139, 143, 146, 147, 148, 160, 161, 163, 164, 167, 168, 169, 170, 172, 176, 180, 183, 185, 187, 192, 194, 195, 198, 200, 201, 202, 203, 204, 205, 206, 208, 210, 212], "how_to": [49, 55, 64, 77, 83, 84, 91, 95, 103, 114, 118, 125, 126, 128, 137, 198], "howev": [1, 2, 3, 4, 5, 9, 10, 16, 20, 22, 34, 36, 58, 70, 71, 73, 75, 84, 85, 89, 104, 113, 120, 123, 124, 136, 139, 143, 155, 163, 166, 167, 169, 172, 182, 189, 191, 199, 201, 202, 204, 208, 210], "howto_deploi": 60, "hsa": 148, "hsaco": 208, "html": [7, 17, 39, 49, 50, 58, 64, 65, 73, 80, 126, 148, 160, 161, 169, 170, 183, 185, 187], "http": [7, 8, 12, 13, 17, 39, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 93, 105, 106, 107, 109, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 142, 143, 146, 148, 160, 161, 168, 169, 170, 171, 172, 181, 183, 185, 187, 202, 208, 210, 211], "hu": 48, "hua": 130, "huawei": [97, 105, 107], "hub": [7, 51, 68, 72, 73, 121, 142], "hug": [76, 77, 113, 198], "huge": [9, 172, 202, 210], "huggingfac": 75, "human": [2, 9, 52, 69, 70, 71, 123, 156, 177, 202, 204, 210], "human_str": 52, "hundr": 4, "hutton": 58, "hvx": 180, "hw": [61, 64, 66, 187], "hw_emu": 61, "hwc": 202, "hwcn": [88, 187], "hwd": 187, "hwio": [85, 187], "hwoi": 187, "hybrid": [153, 169], "hybrid_argwhere_1d": 187, "hybrid_argwhere_2d": 187, "hybrid_argwhere_3d": 187, "hybrid_argwhere_4d": 187, "hybrid_argwhere_5d": 187, "hybrid_func": [169, 181], "hybridblock": 167, "hybridmodul": 181, "hybridop": 181, "hyperbol": [160, 181, 185, 187], "hypercubestart": 167, "hypot": 185, "hypothet": 139, "hz": 155, "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 22, 23, 25, 26, 27, 30, 31, 32, 34, 35, 36, 37, 38, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 124, 126, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 143, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212], "i0": [22, 23, 43, 96, 97, 98, 99, 100, 101, 159, 183, 209], "i1": [22, 23, 43, 96, 97, 98, 99, 100, 101, 159, 181, 183], "i1_inn": 96, "i1_inner_out": 204, "i2": [96, 97, 98, 99, 100, 101, 181, 183], "i3": [96, 97, 98, 99, 100, 183], "i386": 16, "i3_inn": 96, "i7": [90, 210], "i_0": [183, 209], "i_1": [161, 170, 183, 187, 209], "i_2": [161, 170, 187, 209], "i_inn": [134, 135, 136, 200], "i_inner_": 208, "i_inner_j_inner_fus": 136, "i_j_fus": 183, "i_k": [161, 170, 187], "i_m": 183, "i_out": [82, 134, 135, 136, 208], "i_outer_inn": 200, "i_outer_outer_j_outer_outer_fus": 200, "iandola": 171, "ib": [89, 139, 187], "ic": [89, 120, 170, 187, 212], "ic_inn": 89, "ic_out": 89, "icheck": [4, 13, 34, 36, 39], "icheck_eq": [13, 34], "icheck_gt": 36, "icl": 93, "icon": 7, "id": [0, 2, 6, 17, 36, 46, 48, 50, 51, 52, 53, 56, 66, 67, 97, 98, 99, 100, 113, 121, 123, 147, 148, 152, 156, 162, 164, 169, 175, 176, 185], "id_index": 173, "id_to_str": 52, "idea": [20, 35, 36, 139, 147, 210], "ideal": [3, 4, 9, 12, 123, 172, 192], "ident": [4, 16, 73, 84, 131, 140, 147, 161, 170, 171, 176, 181, 185, 187, 191, 192, 195], "identifi": [2, 4, 5, 7, 11, 16, 66, 75, 123, 148, 155, 160, 162, 163, 172, 174, 183, 191, 192, 194, 195, 202, 208, 210], "identify_equiv_term": 186, "identity_el": 185, "identity_int8": 118, "identity_valu": 187, "idiom": 189, "idl": 80, "idx": [97, 98, 99, 100, 140, 162], "idx1": 187, "idx2": 187, "idx_1": 140, "idx_2": 140, "ie": 167, "ieee": 180, "if_scop": 169, "if_then_els": [88, 89, 96, 97, 98, 99, 100, 140, 181, 183, 185, 186, 204], "ifcollaps": 35, "ifdef": [96, 122, 134], "ifelseexpr": 186, "ifelsestmt": 186, "ifeq": 69, "ifgo": 187, "ifmap": 212, "ifnod": [35, 162], "ifpattern": 166, "ifstream": 36, "ifthenels": [185, 186], "ignor": [4, 52, 66, 75, 82, 97, 98, 99, 100, 123, 143, 147, 152, 156, 158, 160, 161, 163, 169, 170, 172, 180, 181, 185, 187, 191, 197, 201, 211], "ignore_error": 123, "ignore_impur": 172, "ignore_index": [161, 170, 187], "ih": 212, "ihw": 168, "ii": [89, 183], "iin": 161, "ij": [169, 187], "ik": 187, "illeg": [182, 186], "illumin": 12, "illustr": [20, 31, 36, 37, 44, 84, 90, 183, 191, 195, 201, 205, 208], "im": [73, 123], "im_data": [169, 187], "im_h": 47, "im_height": [73, 74, 173], "im_info": 173, "im_output": [169, 187], "im_scal": 173, "im_w": 47, "im_width": [73, 74, 173], "imag": [16, 56, 61, 64, 66, 69, 70, 71, 73, 79, 120, 121, 123, 144, 153, 160, 171, 173, 193, 206, 209, 210], "image2d_t": 56, "image_batch": 123, "image_data": [52, 53], "image_dataset_from_directori": 123, "image_depth": 187, "image_height": 187, "image_nam": 119, "image_path": 53, "image_s": 123, "image_shap": [70, 71, 85, 97, 98, 99, 100, 171, 206], "image_url": [52, 53, 74], "image_width": 187, "imagemagick": 123, "imagenet": [67, 68, 69, 70, 71, 123, 202, 210], "imagenet1000_clsid_to_human": [46, 48, 50, 69, 70, 71, 73], "imagenet1k_v1": [51, 67, 68, 70, 71, 73], "imagenet_2012_challenge_label_map_proto": 52, "imagenet_cat": [202, 210], "imagenet_class": [51, 121], "imagenet_mean": [202, 210], "imagenet_stddev": [202, 210], "imagenet_synset": [51, 121], "imagenet_synset_to_human_label_map": 52, "imagenetclassifi": 67, "imagin": 204, "imaginari": [169, 187], "img": [46, 47, 48, 49, 50, 51, 67, 72, 118, 121], "img_bgr": 46, "img_cb": 49, "img_cr": 49, "img_data": [119, 202, 210], "img_i": 49, "img_nam": [52, 69, 70, 71, 74], "img_path": [46, 47, 48, 49, 50, 51, 52, 67, 69, 70, 71, 72, 73, 74, 119, 121, 202, 210], "img_siz": 130, "img_url": [46, 47, 48, 49, 50, 51, 67, 69, 70, 71, 72, 73, 121, 202, 210], "img_ycbcr": 49, "imgur": 123, "imm": [162, 189], "immedi": [4, 17, 162, 163, 165], "immut": [162, 192], "impact": [20, 32, 97, 98, 99, 100, 138, 172, 202, 208, 210], "imper": [16, 195, 209], "imperfect": [9, 189], "impl": [8, 79, 163, 185], "implement": [1, 2, 3, 4, 6, 13, 20, 25, 27, 31, 34, 35, 37, 41, 44, 56, 58, 65, 74, 79, 80, 82, 85, 88, 90, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 113, 117, 122, 126, 129, 131, 136, 139, 146, 147, 148, 151, 154, 157, 160, 161, 162, 163, 165, 169, 170, 171, 172, 174, 183, 185, 186, 187, 188, 190, 192, 194, 195, 201, 202, 204, 205, 206, 208, 209, 210], "impli": [160, 172, 191], "implicit": [65, 79, 160, 161, 172, 187], "implicitli": [79, 126, 191], "implicitpad": 172, "import": [0, 2, 3, 5, 9, 10, 11, 12, 13, 17, 18, 20, 22, 23, 25, 30, 31, 32, 34, 35, 36, 37, 41, 46, 48, 49, 50, 53, 54, 56, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 80, 82, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 119, 121, 123, 126, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 143, 147, 148, 152, 159, 160, 163, 164, 167, 169, 171, 174, 175, 180, 181, 189, 191, 194, 195, 200, 201, 202, 204, 205, 206, 208, 209, 210], "import_graph_def": 52, "import_graphdef": 75, "import_llvm": 139, "import_modul": [61, 208], "import_python_modul": 175, "import_tree_child_indices_": 3, "import_tree_log": 3, "import_tree_row_ptr_": 3, "importantli": [2, 9, 16, 27, 129], "imported_modul": [3, 56, 61, 122, 134, 208], "importeroutput": 160, "importerror": [52, 74], "impos": 117, "imprecis": 20, "improv": [4, 9, 12, 15, 16, 17, 18, 41, 44, 65, 80, 110, 123, 146, 172, 186, 202, 205, 208, 209, 210, 211], "impur": [158, 162, 163], "imread": 72, "imshow": [47, 48, 49, 53, 67, 123], "in_batch": 170, "in_buff": [181, 187], "in_channel": [88, 89, 138, 160, 161, 168, 170, 187], "in_channel_block": 187, "in_channel_chunk": 187, "in_degre": 126, "in_depth": [168, 187], "in_dim": 187, "in_dtyp": 187, "in_featur": [113, 160], "in_fil": [147, 148], "in_filt": 187, "in_group": [160, 161, 175], "in_h": 161, "in_height": [168, 170, 187], "in_relay_integr": 146, "in_shap": [36, 170], "in_siz": [72, 88, 138], "in_tupl": 187, "in_typ": 191, "in_w": [160, 161], "in_width": [168, 170, 187], "in_x": 187, "inadvert": 31, "inbound": 187, "inc": [69, 118], "inc_num_ev": 188, "inc_scalar": 191, "incept": 171, "inception_preprocess": 53, "inception_v3": [97, 98, 99, 100, 105, 106, 107, 108, 167, 171], "inceptionv1": [52, 74], "inceptionv3": 171, "includ": [2, 4, 5, 8, 9, 11, 12, 13, 15, 17, 18, 20, 22, 25, 27, 35, 36, 37, 39, 41, 43, 44, 54, 60, 62, 63, 64, 65, 66, 69, 73, 74, 79, 81, 93, 96, 101, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 131, 139, 143, 144, 146, 147, 148, 152, 155, 158, 160, 161, 162, 163, 164, 165, 166, 169, 170, 172, 175, 177, 178, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 194, 195, 196, 200, 201, 202, 205, 206, 208, 210, 211, 212], "include_compat": 146, "include_config": 147, "include_input": 181, "include_non_call_op": 172, "include_return": [162, 178], "include_simple_task": 146, "include_top": [48, 69], "inclus": [11, 34, 147, 148, 160, 161, 169, 195], "incom": [161, 170], "incompat": 169, "incomplet": [34, 155, 190], "incompletetyp": [155, 195], "incompletetypenod": 34, "incorpor": [25, 27, 30, 35, 43, 56, 122, 129, 132, 160], "incorrect": [72, 181, 183], "incorrectli": [16, 20], "increas": [9, 36, 56, 65, 67, 69, 84, 85, 90, 119, 146, 147, 152, 162, 169, 178, 185, 187, 195, 202, 208, 211, 212], "increment": [16, 20, 146, 188, 209], "incub": 171, "incumb": 161, "inde": [35, 134], "indec": 169, "indent": 8, "independ": [2, 15, 25, 27, 56, 97, 98, 99, 100, 172, 201, 208, 210], "index": [0, 2, 3, 5, 12, 25, 30, 31, 34, 35, 36, 43, 46, 48, 50, 51, 64, 65, 74, 75, 80, 90, 113, 116, 119, 120, 121, 123, 126, 138, 139, 140, 146, 147, 152, 155, 158, 160, 161, 162, 163, 166, 169, 172, 173, 181, 183, 185, 186, 187, 189, 192, 194, 195], "index_0": 183, "index_1": 183, "index_a": 185, "index_b": 185, "index_c": 185, "index_d": 185, "index_dtyp": 185, "index_dtype_overrid": 181, "index_map": [161, 163, 183, 185], "index_of": 185, "index_rank": 169, "index_var_0": 183, "index_var_1": 183, "indexdiv": [181, 185], "indexerror": 183, "indexexpr": 195, "indexmap": [158, 161, 163, 183, 185, 186], "indexmod": [90, 181, 185, 208], "indian": 52, "indic": [0, 2, 3, 4, 10, 11, 13, 25, 32, 34, 37, 75, 82, 88, 101, 120, 124, 126, 138, 146, 147, 148, 155, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 172, 173, 181, 182, 183, 185, 186, 187, 188, 189, 191, 192, 194, 195, 202, 208, 210], "indices_or_sect": [160, 161, 164, 169, 187], "indices_shap": 161, "indirect": 13, "indirectli": [89, 158], "indispens": 191, "indivdu": 172, "individu": [4, 7, 11, 16, 58, 84, 88, 131, 138, 152, 161, 170, 172, 177], "indow": [170, 187], "indptr": [75, 101, 126, 170], "induc": 183, "induct": 195, "inevit": 85, "infeat": 126, "infeat_dim": 126, "infer": [0, 4, 20, 30, 35, 37, 58, 59, 62, 64, 65, 69, 70, 97, 98, 99, 100, 105, 106, 107, 108, 109, 113, 115, 118, 119, 120, 122, 126, 138, 139, 146, 147, 148, 152, 155, 159, 160, 161, 162, 163, 165, 169, 170, 172, 180, 181, 183, 185, 186, 187, 192, 195, 196, 199, 202, 206, 210], "infer_bound_from_st": 146, "inferbound": [37, 146], "infercorrectlayout": 172, "inference_input_typ": 123, "inference_output_typ": 123, "inferfrag": 186, "infertyp": [35, 59, 84, 85, 117, 154, 166, 172, 194], "infertypeloc": 172, "infin": 185, "infinit": [35, 118, 147, 161, 169, 181, 185, 187], "inflect": 212, "influenc": 11, "info": [4, 37, 65, 69, 70, 71, 84, 85, 97, 98, 99, 100, 105, 106, 107, 108, 109, 119, 124, 148, 154, 155, 158, 159, 160, 161, 162, 163, 172, 185, 186, 187, 188], "infom": [186, 187], "inform": [0, 2, 3, 4, 6, 8, 11, 12, 16, 17, 20, 25, 26, 34, 35, 36, 37, 39, 43, 44, 56, 58, 66, 67, 79, 80, 82, 85, 93, 97, 98, 99, 100, 105, 106, 107, 110, 111, 113, 118, 120, 124, 131, 138, 139, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 160, 161, 162, 163, 166, 167, 169, 172, 177, 180, 181, 183, 186, 187, 188, 191, 192, 195, 197, 202, 203, 204, 208, 210], "infra": [4, 35, 81, 83, 198], "infrastructur": [2, 35, 37, 58, 84, 85, 143, 147, 156, 157, 172, 188, 192], "ing": 16, "ingest": 205, "ingredi": [23, 31, 170], "inherit": [36, 113, 148, 162, 166, 192], "ini": 7, "init": [3, 17, 20, 22, 23, 27, 30, 31, 37, 43, 44, 89, 101, 110, 116, 117, 120, 122, 124, 134, 135, 143, 146, 181, 182, 183, 185, 186, 191, 204], "init_block": 183, "init_ccl": 175, "init_net": 167, "init_popul": 146, "init_search_callback": [96, 100, 101, 146, 200], "init_seq_len": 160, "initattr": 161, "initi": [0, 3, 4, 8, 16, 26, 30, 36, 37, 43, 56, 64, 101, 105, 106, 107, 113, 118, 123, 135, 146, 147, 148, 159, 160, 162, 169, 171, 174, 175, 178, 181, 185, 187, 188, 201, 206, 208, 209], "initial_indic": [181, 185], "inject": [82, 139, 149, 183, 186], "injectcopyintrin": 186, "injectdoublebuff": 186, "injectpermutedlayout": 186, "injectprefetch": 186, "injectptxasynccopi": 186, "injectrollingbuff": 186, "injectsoftwarepipelin": 186, "injectvirtualthread": 186, "inlcud": 160, "inlin": [37, 88, 101, 104, 113, 136, 139, 146, 149, 163, 172, 181, 183, 186, 192, 208], "inline_mark": 183, "inline_onc": 172, "inlinecompilerfunctionsboundto": 172, "inlineprivatefunct": [163, 186], "inner": [31, 82, 90, 101, 136, 138, 139, 147, 152, 159, 168, 169, 181, 183, 187, 192, 201, 208], "innermost": [139, 169, 183, 187, 208], "innerpart_factor": 183, "ino": 123, "inp": [72, 73, 147, 150, 187, 194], "inplac": [20, 73, 183], "inplace_indic": [160, 161, 162], "input": [0, 1, 2, 4, 5, 20, 22, 30, 31, 34, 37, 39, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 88, 89, 96, 101, 104, 108, 111, 113, 117, 118, 121, 122, 123, 124, 126, 130, 131, 132, 133, 134, 135, 137, 138, 139, 146, 147, 148, 150, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 194, 195, 198, 200, 201, 202, 206, 208, 209, 211], "input0": [36, 51, 67, 70, 71, 72, 121, 131, 167], "input1": [36, 131, 167, 211], "input2": [36, 131, 211], "input3": [36, 64], "input_0": 167, "input_1": [48, 69, 75, 116, 134, 167], "input_1_int8": 118, "input_2": 134, "input_axis_separ": 161, "input_channel": 148, "input_data": [51, 59, 65, 66, 67, 70, 71, 74, 119, 121, 171, 206], "input_detail": [74, 120], "input_dict": [75, 152], "input_dim": 126, "input_dtyp": [53, 120, 122], "input_emb": 113, "input_height": 148, "input_id": 113, "input_indic": 172, "input_info": [160, 167], "input_layernorm": 113, "input_len": 113, "input_mod": [4, 172], "input_modul": 188, "input_nam": [49, 51, 66, 67, 69, 70, 71, 72, 73, 108, 116, 118, 120, 121, 152, 202], "input_rv_typ": 183, "input_s": 159, "input_scal": 187, "input_shap": [48, 51, 53, 59, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 97, 98, 99, 100, 105, 106, 107, 108, 110, 116, 118, 120, 121, 122, 123], "input_spec": 75, "input_tensor": [37, 53, 104, 122, 160, 161, 181], "input_til": [98, 100], "input_total_s": 120, "input_width": 148, "input_zero_point": 187, "inputlay": 123, "inputmod": 163, "inputmodul": 162, "inputnod": 165, "inputs_dict": 64, "ins": [89, 132, 139, 181, 187], "insert": [4, 7, 22, 66, 84, 132, 136, 155, 160, 161, 162, 163, 167, 169, 172, 181, 183, 186, 187, 192, 208], "insert_transform_stag": 146, "insid": [3, 4, 7, 16, 43, 56, 66, 69, 79, 90, 104, 118, 129, 146, 147, 158, 162, 163, 169, 182, 183, 185, 186, 191, 192, 208], "inspect": [2, 3, 4, 8, 17, 34, 74, 90, 96, 101, 104, 123, 130, 132, 138, 191, 201, 208, 209], "inspir": [4, 131, 148, 192], "inst": [1, 85, 183], "instal": [7, 12, 16, 17, 46, 47, 48, 49, 50, 51, 52, 53, 56, 62, 64, 66, 67, 69, 70, 71, 72, 74, 79, 80, 97, 109, 126, 131, 141, 160, 203, 210, 212], "install_path": 58, "install_root": 61, "installdebugspan": 186, "instanc": [4, 16, 20, 25, 27, 30, 35, 61, 74, 79, 84, 85, 108, 113, 124, 147, 148, 152, 155, 157, 160, 161, 163, 166, 169, 170, 173, 180, 183, 185, 186, 187, 188, 191, 192, 195, 202], "instance_norm": [170, 187], "instant": 5, "instanti": [1, 147, 160, 187, 195], "instantiationerror": 147, "instead": [0, 1, 4, 5, 8, 12, 14, 16, 17, 20, 34, 35, 36, 44, 49, 51, 52, 62, 65, 67, 68, 70, 71, 72, 75, 80, 82, 84, 108, 110, 119, 123, 126, 131, 135, 139, 140, 144, 146, 147, 148, 157, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 176, 181, 183, 185, 186, 187, 188, 189, 191, 192, 195, 201, 205, 208], "instr": [162, 178], "instruct": [2, 9, 12, 16, 25, 27, 37, 50, 56, 62, 64, 67, 68, 69, 70, 71, 73, 74, 75, 80, 89, 90, 93, 100, 101, 109, 118, 119, 120, 139, 143, 149, 162, 169, 175, 178, 180, 183, 185, 186, 196, 202, 208], "instructionkind": 183, "instrument": [81, 83, 84, 153, 162, 178, 186, 188, 198], "instrumentafterpass": 4, "instrumentbeforepass": 4, "instrumentboundcheck": 186, "instrumententerpasscontext": 4, "instrumentexitpasscontext": 4, "instrumentprofileintrins": 186, "insul": 146, "insur": 194, "int": [2, 4, 5, 8, 12, 13, 30, 34, 36, 37, 67, 68, 69, 75, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 113, 118, 119, 123, 126, 130, 132, 134, 139, 146, 147, 148, 149, 152, 155, 156, 157, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 195, 204, 208, 212], "int16": [6, 68, 80, 170, 187, 189], "int32": [2, 30, 58, 68, 75, 80, 82, 89, 90, 96, 101, 113, 126, 134, 135, 136, 139, 140, 148, 155, 159, 160, 161, 162, 164, 166, 168, 169, 170, 181, 183, 185, 186, 187, 189, 191, 192, 195, 200, 204, 208], "int32_max": 99, "int32_t": [119, 122, 212], "int64": [6, 20, 22, 23, 43, 68, 80, 110, 113, 159, 160, 161, 163, 164, 169, 185, 187, 189], "int64_t": [5, 8, 36, 96, 134], "int8": [6, 64, 68, 80, 116, 118, 139, 148, 161, 164, 183, 187, 189, 195], "int8x4": 185, "int_set": 187, "int_valu": 8, "integ": [2, 5, 6, 15, 32, 34, 63, 66, 119, 123, 147, 148, 155, 156, 160, 161, 162, 163, 164, 169, 170, 171, 172, 175, 176, 177, 178, 181, 183, 185, 186, 187, 191, 192, 195], "integr": [2, 7, 23, 34, 36, 79, 86, 118, 119, 122, 144, 146, 157, 192, 212], "intel": [36, 72, 74, 90, 108, 139, 180, 208, 210, 211], "intel_graph": 180, "intellectu": 56, "intend": [1, 2, 6, 27, 34, 79, 123, 131, 148, 157, 161, 163, 180, 187, 191, 202, 210], "intens": [9, 67, 68, 90, 97, 98, 99, 100, 202, 208], "intent": [9, 16, 58, 163, 173], "intenum": 113, "intepret": 165, "inter": 4, "interact": [2, 4, 9, 10, 11, 16, 22, 23, 31, 37, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 146, 148, 150, 157, 162, 165, 175, 185, 188, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212], "interest": [1, 2, 4, 5, 9, 10, 30, 34, 37, 44, 56, 74, 84, 110, 120, 142, 144, 147, 161, 168, 187, 202, 209, 210], "interfac": [0, 1, 2, 4, 6, 9, 12, 16, 34, 35, 36, 37, 62, 65, 76, 77, 82, 84, 90, 93, 118, 119, 120, 123, 130, 131, 146, 147, 148, 156, 157, 162, 165, 172, 174, 177, 178, 180, 189, 194, 198, 203, 205, 207, 208, 210, 212], "interface_api": 212, "interleav": [59, 147, 170], "interm": 194, "intermedi": [1, 2, 20, 22, 27, 36, 37, 44, 59, 89, 113, 123, 132, 135, 159, 161, 162, 163, 166, 167, 170, 172, 181, 183, 187, 190, 205, 208], "intermediate_s": 113, "intern": [2, 4, 9, 11, 12, 13, 15, 22, 34, 35, 36, 39, 106, 119, 129, 132, 138, 146, 147, 151, 152, 155, 157, 158, 162, 163, 169, 172, 174, 178, 181, 183, 185, 186, 187, 192, 208, 212], "internal_kei": 174, "internal_lay": 171, "internal_log": 174, "internal_port": 174, "internal_url": 174, "internalerror": [13, 151], "internet": [8, 47], "interoper": 37, "interpol": [160, 161, 168, 187], "interpret": [1, 6, 30, 32, 39, 74, 120, 138, 150, 160, 161, 162, 165, 169, 195, 202, 210], "interpreter_wrapp": 74, "interprocedur": 172, "intersect": [158, 181, 185], "interv": [146, 147, 148, 152, 161, 162, 169, 178, 187], "interval_al": 147, "interwoven": 187, "intexpr": 160, "intimm": [82, 147, 155, 166, 172, 180, 185, 187], "intra": 4, "intract": 84, "intrin": [181, 183, 185], "intrin_func": [89, 139], "intrin_gemv": 139, "intrin_wmma_gemm": 89, "intrin_wmma_load_matrix": 89, "intrin_wmma_store_matrix": 89, "intrins": [2, 25, 34, 133, 137, 155, 161, 162, 163, 181, 183, 185, 186, 187, 198, 206], "intro_topi": [198, 204, 207], "introduc": [1, 2, 3, 4, 5, 9, 12, 13, 16, 20, 25, 27, 30, 36, 41, 44, 63, 84, 105, 106, 107, 109, 131, 138, 140, 148, 159, 160, 163, 183, 185, 186, 192, 194, 195, 208, 210, 212], "introduct": [2, 4, 5, 38, 62, 122, 134, 135, 136, 138, 139, 192, 198, 203, 207, 208], "introductori": [46, 47, 48, 49, 50, 51, 52, 53, 72, 126, 204, 208, 212], "introspect": [160, 169, 172], "intset": 187, "intuit": [4, 22], "invalid": [67, 97, 98, 99, 100, 104, 105, 106, 107, 108, 126, 135, 151, 159, 187, 202], "invalid_to_bottom": 173, "invalidshapeerror": 187, "invari": [3, 39, 159, 160, 163, 186], "inventori": [2, 34, 56, 187, 192, 204, 205], "invers": [98, 100, 147, 169, 171, 172, 185, 187], "inverse_index_map": 185, "inverse_indic": [169, 187], "inverse_map": 185, "invert": [169, 181], "invert_permut": [169, 187], "invest": [9, 27], "invoc": [4, 59, 192, 195], "invok": [3, 4, 5, 27, 35, 36, 37, 44, 65, 66, 74, 84, 89, 109, 132, 139, 147, 148, 160, 161, 162, 163, 164, 172, 174, 178, 183, 186, 188, 192, 194, 208], "invoke_closur": [161, 162, 178], "invoke_pure_closur": 161, "invoke_st": [162, 178], "involc": 67, "involv": [9, 10, 11, 27, 31, 35, 43, 56, 117, 134, 140, 146, 170, 186, 191, 192, 208], "io": [36, 48, 59, 60, 147, 160], "iodhw": 170, "ioeffect": 160, "ioff": [161, 170, 187], "iohw": [161, 170, 171], "ios_rpc": 80, "iostream": 36, "iot": [123, 199], "iotimeouterror": 157, "iou": 173, "iou_loss": 173, "iou_threshold": 173, "iow": [160, 161, 170], "ip": [56, 66, 69, 70, 71, 80, 97, 105, 107, 109, 142, 174, 211], "ipc": 163, "ipcallreducerewrit": 163, "iphon": 5, "ipo": 4, "ipynb": [22, 23, 30, 31, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212], "ir": [4, 5, 18, 22, 23, 30, 31, 37, 43, 44, 67, 73, 74, 75, 84, 85, 89, 90, 96, 101, 110, 111, 113, 129, 134, 135, 136, 139, 140, 141, 146, 147, 148, 153, 154, 156, 158, 159, 160, 162, 163, 164, 165, 166, 169, 171, 172, 181, 182, 183, 184, 185, 187, 188, 189, 190, 192, 194, 200, 201, 204, 205, 206, 208, 209], "ir_build": [89, 139], "ir_mod": 169, "ir_modul": [4, 20, 22, 23, 27, 30, 31, 43, 44, 45, 82, 89, 90, 96, 110, 111, 134, 135, 136, 139, 140, 156, 159, 163, 165, 198, 200, 204, 208, 209], "ir_module_from_t": 209, "ir_pass": 37, "ir_transform": [82, 184], "irbuild": 2, "irmodul": [1, 2, 4, 19, 20, 22, 23, 30, 31, 42, 44, 45, 58, 70, 71, 72, 82, 84, 116, 117, 121, 126, 131, 141, 146, 148, 149, 150, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169, 171, 172, 180, 182, 183, 185, 186, 188, 192, 194, 198], "irnod": [2, 155], "is_add_or_sub": 194, "is_ascend": [169, 187], "is_auto_scheduler_en": 146, "is_avail": 148, "is_base_of": 162, "is_caus": 160, "is_const": [166, 194], "is_conv2d": 194, "is_dfvar": 162, "is_elementwis": 149, "is_elemwis": 194, "is_equival": 185, "is_equivalent_to": 185, "is_expr": [166, 194], "is_gemm": 149, "is_gemv": 149, "is_if": [166, 194], "is_in_ci": [111, 113], "is_index_valid": 147, "is_inject": 149, "is_let": [166, 194], "is_lshift_requir": [185, 187], "is_meta_schedule_en": 156, "is_multipli": [170, 187], "is_op": [166, 194, 212], "is_proxi": 174, "is_pur": [159, 162, 183], "is_pure_funct": 182, "is_recurs": 164, "is_reduct": 149, "is_rshift_requir": [185, 187], "is_schedul": 110, "is_shallow": 171, "is_sort": [169, 187], "is_source_path": 148, "is_strict": 186, "is_target_avail": 149, "is_tun": [67, 68], "is_tupl": [166, 194], "is_tuple_get_item": [166, 194], "is_var": [166, 194], "is_void": 34, "isa": [90, 208], "isfil": [67, 105, 106, 107], "isfinit": [161, 169, 181, 185, 187], "ishap": [171, 187], "isinf": [161, 169, 181, 185, 187], "isinst": [4, 23, 36, 74, 82, 85, 131, 146, 151, 155, 160, 163, 166, 172, 186, 188], "isn": [1, 8, 25, 80, 96, 142, 146, 148, 191, 200], "isnan": [161, 169, 181, 185, 187], "isnullptr": 185, "isol": [5, 96, 97, 98, 99, 100, 147], "isop": 36, "issu": [6, 9, 11, 15, 16, 17, 39, 49, 84, 93, 123, 124, 126, 167, 177, 183, 194, 205], "issubclass": 160, "item": [75, 101, 113, 143, 147, 155, 160, 161, 162, 163, 165, 166, 169, 170, 172, 183, 187, 194], "item_list": 165, "iter": [2, 9, 16, 25, 26, 30, 67, 84, 88, 90, 101, 110, 131, 135, 146, 147, 148, 149, 156, 160, 171, 177, 181, 183, 185, 191, 202, 208, 209], "iter_typ": 185, "iter_valu": [185, 186], "iter_var": [129, 134, 139, 183, 185, 186, 204], "iterinfo": 149, "itertool": 75, "itervar": [67, 105, 106, 107, 108, 138, 147, 181, 183, 185, 186, 202], "ith": [160, 161], "its": [0, 1, 3, 4, 5, 7, 8, 9, 18, 20, 31, 35, 36, 37, 52, 63, 67, 68, 69, 70, 71, 75, 79, 80, 88, 96, 101, 108, 118, 123, 138, 141, 146, 147, 148, 149, 151, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 172, 178, 180, 182, 183, 185, 186, 187, 189, 191, 192, 194, 195, 197, 200, 201, 202, 209, 210], "itself": [1, 2, 4, 5, 7, 11, 34, 35, 56, 73, 74, 123, 158, 161, 162, 163, 172, 174, 175, 183, 185, 192, 194], "ivar": 181, "iw": 212, "j": [20, 22, 27, 30, 31, 34, 36, 46, 48, 49, 50, 51, 53, 62, 66, 67, 69, 70, 71, 73, 80, 89, 98, 99, 100, 101, 121, 132, 134, 136, 139, 140, 146, 147, 159, 160, 161, 162, 169, 170, 181, 183, 185, 186, 187, 189, 200, 201, 212], "j0": [31, 101], "j1": [31, 101], "j10": 69, "j2": [109, 120], "j4": [70, 71, 109], "j_0": [31, 183], "j_1": [31, 183], "j_1_init": 31, "j_inner": [136, 139], "j_outer": [136, 139], "jacobian": 181, "jan": 119, "java": [2, 5, 44, 53, 56, 57, 119, 145], "javadoc": 145, "javascript": [2, 5], "jbbehxn": 123, "jcf94": 146, "jenkin": 17, "jenkinsfil": [7, 79], "jetpack": 65, "jetson": [65, 76, 77, 198], "ji": 189, "jia": [96, 97, 100, 101, 200], "jian": [82, 90, 171], "jiang": [71, 109, 130, 136, 140], "jit": [36, 37, 50, 51, 63, 67, 68, 70, 71, 72, 73, 121, 160, 162, 165, 167], "jite": 165, "jited_func": 165, "jitimpl": 36, "jj": 89, "jk": 187, "jni": 56, "jo": 189, "job": [5, 7, 80, 105, 106, 107, 108, 123, 172, 201, 202], "jocelyn": [205, 211], "join": [10, 46, 48, 49, 50, 51, 52, 53, 66, 67, 69, 70, 71, 73, 74, 75, 119, 121, 122, 130, 143, 146, 156, 169, 177, 187], "join_running_task": 156, "joint": [129, 147], "jointli": 146, "jonathancmitchel": 69, "josh": 75, "joshua": [46, 49], "jpegdecod": 52, "jpg": [47, 52, 72, 74, 118, 119, 123, 202, 210], "json": [0, 1, 2, 36, 56, 57, 58, 61, 64, 68, 75, 96, 97, 98, 99, 100, 101, 116, 117, 118, 122, 126, 146, 147, 152, 155, 156, 165, 177, 183, 200, 202, 205, 206, 208, 210, 211, 212], "json_dict": 147, "json_obj": 183, "json_str": 155, "json_typ": 183, "jsonabl": 146, "jsondatabas": [156, 188], "jsonnod": 58, "judg": 123, "judgment": 9, "jump": 80, "june": 212, "jupyt": [22, 23, 30, 31, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 142, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212], "just": [2, 3, 4, 5, 14, 34, 36, 52, 56, 65, 79, 80, 82, 89, 97, 98, 99, 100, 105, 106, 107, 118, 119, 122, 123, 129, 130, 131, 138, 139, 143, 147, 160, 161, 162, 163, 169, 172, 186, 187, 188, 189, 191, 192, 194, 195, 201, 202, 208, 209, 210], "jw1": 181, "jw2": 181, "k": [0, 15, 16, 20, 22, 23, 27, 30, 31, 36, 43, 67, 75, 85, 89, 90, 97, 98, 99, 100, 101, 113, 118, 134, 135, 139, 140, 143, 146, 147, 148, 156, 160, 161, 169, 170, 173, 181, 183, 185, 187, 189, 200, 201, 204, 205, 208], "k0_k1_fused_k2_fused_inn": 204, "k0_k1_fused_k2_fused_inner_v": 204, "k0_k1_fused_k2_fused_out": 204, "k1": 204, "k_0": 183, "k_1": [30, 183], "k_elemwis": 194, "k_inner": [90, 134, 200, 204, 208], "k_inner_v": 134, "k_outer": [90, 134, 200, 208], "k_outer_1": 134, "k_proj": 113, "kaim": 171, "karen": 171, "karrayhandl": 36, "katanbaf": 118, "kato": 69, "kaxi": 90, "kazutaka": 46, "kb": [118, 123, 208], "kd": 160, "kdatapar": 138, "kdlcpu": 1, "kdlcuda": 1, "kdlextdev": 1, "kdlfloat": 36, "keep": [5, 10, 13, 16, 36, 37, 69, 70, 71, 82, 97, 105, 107, 123, 126, 129, 140, 146, 147, 148, 160, 161, 163, 169, 170, 172, 173, 181, 183, 191, 192, 195], "keep_background": 173, "keep_for_debug": [148, 212], "keep_orig_output_dtyp": 172, "keep_params_as_input": [43, 111, 160], "keep_params_in_input": 160, "keep_quantized_weight": 167, "keepdim": [160, 161, 163, 169, 187], "kei": [3, 4, 5, 9, 11, 12, 15, 19, 23, 26, 27, 35, 37, 39, 56, 58, 67, 69, 72, 75, 80, 85, 97, 98, 99, 100, 104, 105, 106, 107, 108, 113, 118, 122, 124, 126, 146, 147, 148, 152, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 174, 180, 182, 183, 185, 186, 192, 205, 211], "kept": [16, 84, 161, 169, 174, 187, 191], "kera": [54, 55, 56, 64, 75, 123, 167, 198, 210, 211], "keras_mobilenet_v2": 69, "keras_out": 48, "keras_resnet50": 48, "kermani": 204, "kernel": [2, 5, 6, 23, 37, 49, 56, 58, 59, 62, 67, 68, 75, 96, 104, 105, 106, 107, 108, 110, 113, 118, 119, 129, 132, 133, 134, 136, 137, 138, 139, 147, 148, 160, 161, 165, 167, 168, 170, 172, 174, 181, 186, 187, 188, 194, 198, 204, 208], "kernel_1": 96, "kernel_d": 161, "kernel_depth": 187, "kernel_h": [89, 161, 187], "kernel_height": [148, 168, 187], "kernel_layout": [111, 117, 160, 161, 168, 170, 171, 187], "kernel_s": [68, 85, 117, 129, 130, 160, 164, 170, 171, 172, 187, 194, 206], "kernel_scop": 104, "kernel_shap": [49, 89], "kernel_shar": 96, "kernel_shared_1": 96, "kernel_shared_ax0": 96, "kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fus": 96, "kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i": 96, "kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o": 96, "kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i": 96, "kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o": 96, "kernel_shared_ax1": 96, "kernel_shared_ax2": 96, "kernel_shared_ax3": 96, "kernel_w": [89, 160, 161, 187], "kernel_width": [148, 168, 187], "key_aft": 85, "key_befor": 85, "key_list": 180, "key_to_classnam": [51, 121], "keyword": [36, 116, 120, 124, 148, 154, 159, 161, 162, 180, 187, 192], "keyword_spot": 116, "keyword_spotting_int8_6": 116, "kfactor": 90, "kglobalsymbol": 186, "kh": [89, 96, 104, 160, 161, 170, 187, 212], "ki": [89, 90, 134, 208], "kick": [96, 101, 143, 200], "kill": [96, 97, 98, 99, 100, 161, 172, 174], "kill_storag": 161, "kill_tensor": 161, "killafterlastus": [113, 163], "kind": [1, 20, 43, 56, 70, 82, 97, 98, 99, 100, 123, 130, 149, 155, 156, 162, 163, 164, 165, 169, 180, 183, 185, 192, 195, 201, 208], "kind_nam": 180, "kindli": 10, "kit": [61, 120, 199], "kitten": [119, 202, 210], "klaiber": 212, "kmaxclockr": 1, "kmaxdeviceapi": 1, "kmd": 80, "kndarraycontain": 36, "knob": [9, 67, 105, 106, 107, 108, 123, 147, 201, 202, 205], "knob2point": 147, "know": [4, 6, 8, 10, 12, 16, 35, 36, 37, 58, 70, 71, 123, 139, 161, 162, 172, 181, 183, 212], "knowledg": [12, 36, 123, 139, 192, 208], "known": [8, 9, 17, 31, 34, 56, 82, 155, 158, 162, 169, 172, 181, 183, 185, 187, 192, 195, 208], "known_failing_target": 79, "knuminput": [158, 163], "ko": [89, 90, 134, 208], "kopaqu": 34, "kraw": 183, "kria": 66, "krishna": [56, 67, 68], "kshape": 171, "ktarget": 186, "kv": [113, 160], "kv260": 66, "kv_cach": [44, 113], "kv_state_add_sequ": 113, "kv_state_begin_forward": 113, "kv_state_end_forward": 113, "kvcach": 160, "kw": [89, 96, 104, 116, 120, 160, 161, 170, 187, 212], "kwarg": [80, 147, 148, 152, 154, 155, 156, 159, 160, 161, 162, 163, 166, 171, 178, 180, 181, 183], "kwarpsiz": 1, "kworkspaces": 163, "kws_ref_model": 116, "l": [49, 66, 122, 132, 135, 139, 147, 161, 170, 174, 181, 185, 187, 191, 200, 201, 202, 210, 212], "l1": [31, 56, 90, 191, 208], "l163": 160, "l2": [31, 56, 58, 170, 191], "l206": 160, "l243": 53, "l2_normal": 170, "l3": 31, "l4": 31, "l4r5zi": 118, "l5": 31, "l_": 183, "l_0": 158, "l_1": [158, 183], "l_2": 183, "l_b": 158, "l_i": 183, "l_n": 183, "label": [7, 10, 27, 52, 53, 69, 70, 71, 72, 74, 116, 123, 126, 147, 160, 161, 187, 202, 210], "label_batch": 123, "label_fil": 53, "label_file_url": 53, "label_lookup_path": 52, "label_map": 52, "label_map_url": 52, "label_mod": 123, "label_path": [52, 53], "labels_fil": 119, "labels_mobilenet_quant_v1_224": [53, 119], "labels_path": [119, 202, 210], "labels_url": [202, 210], "lack": [12, 192], "laid": 187, "lambda": [4, 30, 37, 56, 61, 75, 82, 88, 89, 90, 101, 109, 113, 123, 130, 132, 134, 135, 136, 139, 140, 146, 147, 150, 159, 166, 172, 181, 183, 185, 187, 194, 200, 201, 202, 204, 209], "lambdalift": [163, 172], "land": [7, 9, 16, 169, 187], "lane": [134, 147, 181, 185, 195], "langref": 185, "languag": [2, 5, 8, 13, 22, 27, 30, 31, 34, 37, 41, 44, 110, 112, 114, 118, 136, 141, 143, 148, 165, 166, 169, 181, 183, 191, 192, 195, 198, 200, 201, 202, 203, 205, 208, 209, 211], "lanteci": 146, "lapack": [169, 187], "laptop": 62, "larg": [4, 7, 9, 16, 41, 72, 74, 84, 88, 89, 96, 97, 98, 99, 100, 104, 106, 112, 114, 123, 141, 147, 169, 171, 172, 190, 198, 200], "larger": [9, 105, 106, 107, 139, 146, 163, 169, 172, 177, 181, 187, 202], "largest": [148, 160, 161], "last": [13, 14, 17, 30, 34, 36, 75, 82, 89, 96, 97, 98, 99, 100, 104, 123, 138, 146, 155, 160, 161, 163, 166, 167, 169, 170, 172, 173, 181, 183, 185, 187, 209], "last_lay": 47, "last_token": 113, "lastli": [66, 123], "latenc": [66, 74, 88, 89, 97, 98, 99, 100, 108, 146, 147, 155, 157, 172, 181], "latent": 48, "later": [4, 9, 11, 14, 36, 56, 69, 79, 80, 84, 88, 96, 97, 98, 99, 100, 101, 117, 119, 135, 136, 139, 146, 147, 155, 158, 166, 169, 183, 189, 191, 192, 195, 200, 201, 202, 208, 210, 211, 212], "latest": [15, 17, 75, 85, 93, 143, 160, 161], "latin1": 126, "latter": [4, 160, 182], "launch": [2, 5, 32, 36, 37, 56, 61, 67, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 122, 142, 146, 174, 181], "launch_param_config_": 37, "launch_param_tag": 37, "launch_thread": [89, 96, 134, 135, 136, 204], "layer": [2, 4, 6, 9, 18, 20, 27, 44, 47, 58, 65, 75, 84, 94, 95, 104, 113, 118, 120, 123, 124, 157, 160, 161, 164, 170, 171, 172, 173, 187, 193, 198, 202, 205, 208, 210, 212], "layer_attr": 47, "layer_count": 164, "layer_id": 113, "layer_nam": 126, "layer_norm": [65, 160, 161, 170, 187], "layer_out": 47, "layer_partit": 113, "layernorm": 160, "layernormattr": 161, "layout": [0, 4, 41, 44, 48, 52, 53, 56, 58, 62, 88, 89, 97, 98, 99, 100, 101, 108, 111, 122, 129, 146, 150, 157, 158, 160, 161, 163, 167, 168, 169, 170, 171, 172, 173, 181, 183, 185, 186, 187, 194, 195, 200, 202, 206], "layout_free_placehold": [146, 200], "layout_info": 187, "layout_rewrit": 146, "layout_rewrite_opt": 146, "layout_str": 185, "layout_transform": [65, 85, 161, 169, 187], "layout_transform_map": 186, "layoutconfig": 172, "layoutrewriteopt": 146, "layouttransformattr": 161, "lazi": [11, 162, 163, 178], "lazili": [163, 172], "lazygetinput": 163, "lazygradientinit": 172, "lazysetoutput": 163, "lazytransformparam": 163, "lbl": 123, "lca": [158, 182, 183, 186], "ld": [66, 119, 143, 148], "ld2_gpio_port": 118, "ld2_pin": 118, "ld_library_path": [67, 80], "ldexp": 185, "ldmatrix": 185, "ldot": [161, 170], "le": 185, "lead": [8, 20, 30, 70, 71, 147, 169, 183, 185], "leader": 9, "leaf": [138, 183], "leaki": [170, 187], "leaky_relu": [65, 126, 170, 187, 194], "leakyrelu": 161, "leandro": 210, "learn": [2, 4, 5, 10, 18, 20, 27, 36, 37, 41, 44, 48, 56, 62, 65, 66, 70, 71, 73, 82, 86, 96, 97, 98, 99, 100, 111, 139, 141, 147, 149, 167, 171, 190, 193, 196, 198, 199, 200, 201, 202, 203, 205, 207, 209, 211], "learnabl": 170, "learning_r": 123, "leas": 212, "least": [11, 17, 75, 97, 98, 99, 100, 146, 157, 158, 160, 161, 162, 172, 183, 189, 192], "leav": [2, 4, 9, 12, 16, 36, 56, 97, 143, 181, 183], "led": 118, "left": [16, 47, 58, 116, 118, 126, 148, 155, 156, 158, 160, 161, 163, 166, 168, 169, 170, 172, 181, 182, 185, 187, 191, 192], "left_left": [169, 187], "left_right": [169, 187], "left_shift": [161, 169, 187], "legaci": [30, 165, 170, 180, 183, 186, 187], "legal": [43, 146, 161, 163, 172, 186, 187], "legalize_map_attr_nam": 172, "legalizefunc": 163, "legalizeop": [2, 23, 43, 110, 113, 163], "legalizepackedcal": 186, "legend": 138, "lei": [160, 161, 170], "len": [8, 67, 72, 74, 75, 85, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 113, 117, 118, 119, 120, 123, 126, 160, 169, 187, 189, 201, 202], "length": [2, 31, 75, 118, 147, 155, 157, 160, 161, 169, 170, 171, 172, 183, 185, 187, 192, 195, 201, 208], "less": [1, 4, 9, 10, 13, 34, 84, 143, 146, 147, 148, 152, 157, 160, 161, 162, 169, 173, 178, 187, 194, 201, 210], "less_equ": [160, 161, 169, 187], "lesson": [8, 10, 16], "let": [2, 3, 4, 8, 12, 16, 20, 23, 25, 27, 30, 31, 35, 36, 37, 43, 44, 67, 68, 74, 75, 84, 85, 88, 96, 101, 113, 117, 118, 122, 123, 129, 130, 131, 134, 138, 139, 146, 155, 166, 169, 170, 172, 182, 185, 186, 190, 191, 195, 200, 204, 205, 206, 208, 210, 211, 212], "let_binding_typ": 186, "let_var": 194, "letexpr": 186, "letnod": 35, "letpattern": 166, "letstmt": [185, 186], "letter": 16, "level": [11, 12, 13, 18, 19, 22, 23, 27, 32, 34, 35, 37, 39, 41, 44, 56, 69, 81, 82, 84, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 108, 110, 111, 113, 118, 123, 129, 146, 147, 155, 156, 157, 158, 161, 162, 163, 164, 167, 169, 171, 172, 181, 182, 185, 186, 187, 188, 189, 191, 193, 194, 195, 198, 200, 201, 203, 204, 205, 206, 207, 208, 210, 212], "leverag": [26, 44, 56, 67, 68, 75, 82, 111, 113, 133, 137, 141, 194, 198], "lh": [140, 148, 155, 158, 160, 161, 162, 163, 169, 170, 181, 182, 183, 185, 187], "lhs_begin": 169, "lhs_end": 169, "li": [5, 27, 82], "lianmin": [96, 97, 98, 100, 104, 105, 106, 107, 109, 200, 201, 205], "lib": [0, 3, 30, 31, 46, 47, 51, 52, 53, 56, 57, 58, 59, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 97, 98, 99, 100, 105, 106, 107, 108, 109, 116, 117, 121, 122, 123, 124, 126, 129, 130, 143, 148, 152, 162, 174, 180, 202, 206, 212], "lib0": 130, "lib1": 130, "lib_acl": 58, "lib_cl": 109, "lib_edg": 66, "lib_fnam": [69, 70, 71], "lib_format": [146, 147], "lib_kwarg": 66, "lib_osx": 47, "lib_path": [36, 47, 58, 66, 68], "libari": 3, "libc": [67, 80], "libdarknet2": 47, "libdarknet_mac2": 47, "libinfo": 143, "libllvm": 143, "libmod": 152, "libopencl": 69, "libpapi": 93, "librari": [0, 2, 3, 5, 16, 20, 36, 41, 43, 44, 47, 52, 56, 59, 64, 65, 66, 67, 68, 69, 70, 71, 79, 80, 93, 97, 104, 105, 107, 111, 113, 119, 122, 123, 126, 127, 128, 143, 148, 152, 157, 162, 165, 174, 175, 176, 180, 187, 191, 197, 198, 199, 202, 210, 212], "libtvm": [13, 79, 143, 174], "libtvm_runtim": [0, 56, 60, 62, 67, 80, 143], "lie": [161, 169], "life": [4, 9, 209], "lifetim": 172, "lift": [4, 5, 37, 75, 161, 163, 172, 186], "liftattrscop": 186, "liftthreadbind": 186, "lifttransformparam": 163, "light": [2, 62, 123], "lightweight": [2, 63, 131, 174, 176, 205], "like": [0, 2, 3, 4, 5, 7, 8, 9, 12, 13, 14, 16, 17, 20, 22, 30, 36, 37, 39, 43, 48, 52, 56, 57, 58, 65, 67, 68, 70, 71, 74, 75, 80, 82, 84, 85, 86, 93, 96, 106, 109, 110, 113, 116, 119, 120, 122, 123, 129, 130, 131, 134, 135, 136, 140, 142, 143, 144, 146, 147, 148, 152, 155, 158, 160, 163, 164, 165, 167, 169, 172, 173, 176, 177, 180, 181, 185, 186, 187, 189, 191, 192, 194, 195, 201, 202, 204, 205, 208, 210, 211], "likelihood": [161, 170, 187], "limit": [1, 12, 15, 20, 30, 52, 75, 80, 88, 89, 99, 109, 110, 119, 126, 141, 146, 147, 157, 163, 164, 169, 170, 173, 180, 185, 186, 187, 189, 197, 202], "limit_zero_time_iter": 152, "limiting_gpu_memory_growth": [52, 75], "limt": 210, "lin": 126, "linaro": 80, "line": [9, 12, 13, 16, 20, 22, 27, 36, 51, 56, 62, 66, 67, 70, 71, 75, 79, 85, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 113, 119, 121, 122, 123, 124, 132, 134, 135, 138, 139, 143, 146, 155, 169, 177, 186, 202, 204, 205, 208, 210], "linear": [20, 22, 23, 27, 43, 44, 110, 113, 134, 159, 160, 161, 163, 168, 170, 172, 187, 191], "linear_0": 68, "linearl": 187, "lineno": [155, 160], "link": [0, 3, 5, 7, 12, 17, 34, 36, 59, 60, 62, 65, 66, 69, 74, 116, 118, 121, 143, 145, 148, 160, 162, 167, 169, 174, 180, 183, 187, 208, 212], "linkabl": 205, "linker": [148, 174], "lint": [7, 8, 16, 30], "linter": 8, "linux": [7, 47, 50, 56, 58, 62, 64, 66, 67, 68, 69, 70, 71, 80, 97, 99, 105, 107, 109, 115, 142, 143, 144, 148, 171], "linux2": 47, "linux64_gcc": 119, "list": [0, 4, 5, 11, 12, 13, 14, 17, 32, 34, 35, 36, 37, 52, 53, 56, 59, 64, 66, 68, 74, 75, 79, 80, 82, 85, 93, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 113, 117, 118, 123, 131, 132, 135, 136, 146, 147, 148, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 197, 199, 200, 201, 202, 208, 210], "list_config": 188, "list_fake_quantized_op_freq": 164, "list_field_info": 155, "list_int": 0, "list_kind": 180, "list_op_freq": 164, "list_op_nam": 155, "list_physical_devic": [52, 75], "list_shap": 0, "list_str": 0, "list_sum": 191, "list_tag": 180, "listdir": [123, 148, 174, 206, 208], "listen": [9, 56, 119], "lite": [53, 74, 119, 120, 123, 124], "liter": [149, 156, 162, 172, 185, 192, 194], "literatur": [191, 195], "littl": [3, 10, 35, 52, 75, 106, 119, 123, 165], "littlen": 90, "liu": 139, "live": [9, 122, 123, 157, 161, 162, 172], "ll": [22, 35, 50, 75, 117, 118, 123, 139, 165, 191, 206], "ll_code": 139, "ll_path": 139, "llamaattent": 113, "llamaconfig": 113, "llamadecoderlay": 113, "llamaffn": 113, "llamaforcasuallm": 113, "llamamodel": 113, "llc": [109, 208], "lld": [143, 148], "llm": [44, 113], "llvm": [1, 2, 3, 4, 8, 30, 31, 37, 43, 44, 46, 47, 49, 50, 51, 52, 53, 56, 58, 59, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 82, 84, 90, 93, 97, 99, 100, 101, 105, 107, 108, 109, 126, 130, 132, 138, 139, 143, 148, 150, 154, 156, 162, 165, 169, 171, 178, 180, 181, 185, 187, 189, 192, 200, 201, 202, 205, 206, 208, 209, 210, 211], "llvm_mod": 3, "llvm_modul": 37, "llvm_option": 180, "llvm_version": 143, "llvmdev": 143, "llvmmodulenod": 37, "lm": 148, "lm_head": 113, "lnumpy_linear": 20, "lnumpy_matmul": 20, "lnumpy_mlp": 20, "lnumpy_mm_relu": 27, "lnumpy_relu": 20, "lnumpy_relu0": 20, "lo": [17, 82], "load": [0, 2, 3, 5, 56, 57, 59, 60, 64, 65, 66, 70, 71, 79, 88, 89, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 113, 116, 117, 118, 120, 122, 124, 139, 146, 147, 152, 155, 156, 160, 162, 163, 165, 167, 169, 174, 175, 180, 181, 183, 185, 186, 200, 201, 205, 210], "load_best_record": 146, "load_data": [64, 126], "load_execut": 44, "load_fil": 113, "load_from_buff": 147, "load_from_fil": [105, 106, 107, 147], "load_histori": [105, 106, 107, 147], "load_imag": 47, "load_image_color": 47, "load_inference_model": 167, "load_json": [75, 155], "load_keras_model": 75, "load_librari": [130, 174], "load_log_fil": [97, 98, 99, 100, 146], "load_matrix": 89, "load_matrix_sync": 89, "load_model_fil": 146, "load_modul": [0, 2, 3, 36, 58, 59, 61, 65, 66, 67, 69, 70, 71, 97, 99, 105, 107, 109, 152, 162, 174, 206, 208], "load_network": 47, "load_param": [0, 152, 169], "load_param_dict": [75, 169], "load_prelud": [169, 171], "load_record": 146, "load_runtime_modul": 66, "load_state_dict": [126, 160], "load_vm_modul": 175, "load_weight": [48, 69], "loadbinary_blob_type_kei": 3, "loadbinary_cuda": 3, "loadbinary_examplejson": 36, "loaded_lib": [3, 58, 59, 65, 99, 206], "loaded_param": 0, "loader": [117, 157], "loadfile_examplejson": 36, "loadfile_so": 3, "loadfromfil": 3, "loc": 148, "loc_pr": 173, "locahost": 147, "local": [4, 7, 14, 22, 23, 26, 30, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 58, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 142, 143, 144, 146, 147, 152, 156, 157, 158, 161, 162, 163, 164, 166, 169, 170, 174, 183, 185, 186, 187, 189, 191, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212], "local_demo": [67, 68, 69, 70, 71, 109], "local_memori": 99, "local_offset": 185, "local_ptr": 185, "local_s": 185, "localbuild": [67, 97, 99, 104, 105, 106, 107, 108, 117, 146, 147, 202], "localhost": 142, "localrpcmeasurecontext": [96, 98, 146], "localrunn": [97, 99, 100, 104, 106, 108, 117, 146, 147, 156, 201, 202], "localsess": [67, 69, 70, 71, 109, 174], "localvar": 192, "locat": [1, 3, 17, 27, 36, 52, 58, 65, 75, 79, 118, 120, 135, 143, 148, 155, 156, 160, 161, 168, 169, 170, 173, 174, 181, 183, 185, 186, 187, 210], "locate_cach": 147, "lock": 148, "log": [2, 4, 13, 16, 17, 32, 36, 39, 52, 56, 61, 65, 66, 67, 68, 80, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 111, 117, 123, 129, 146, 147, 148, 151, 156, 157, 161, 169, 170, 172, 174, 181, 185, 187, 189, 200, 201, 208, 211], "log10": [169, 181, 185, 187], "log1p": 185, "log2": [169, 181, 185, 187], "log_fil": [96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 146, 200, 211], "log_filenam": [105, 106, 107, 108], "log_interv": 147, "log_softmax": [126, 148, 161, 170, 187], "log_to_databas": 147, "log_to_fil": [67, 104, 105, 106, 107, 108, 117, 147, 201, 202], "logarithm": [161, 187], "logestimatedlat": 146, "logger": [147, 156, 157], "logic": [2, 3, 4, 8, 9, 12, 22, 130, 148, 156, 160, 161, 169, 187], "logical_and": [161, 169, 187], "logical_not": [161, 169, 187], "logical_or": [161, 169, 187], "logical_xor": [161, 169, 187], "logit": [113, 126, 161, 170], "logits_np": 113, "logits_torch": 126, "logits_tvm": 126, "logsoftmax": 159, "logsumexp": 169, "long": [5, 8, 9, 11, 14, 65, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 123, 131, 134, 143, 160, 161, 169, 171, 180, 187, 192, 195, 202, 210], "longer": [5, 8, 9, 65, 79, 105, 106, 107, 123, 126, 152, 157, 163, 174, 187, 201], "longest": 160, "look": [7, 10, 11, 12, 13, 17, 31, 34, 35, 36, 37, 56, 58, 82, 85, 90, 109, 117, 123, 129, 130, 131, 138, 152, 155, 158, 160, 162, 163, 181, 185, 186, 189, 192, 195, 202, 208, 210, 211], "lookup": [1, 3, 36, 52, 147, 159, 160, 162, 178, 202, 210], "lookup_bind": [159, 162], "lookup_param": 185, "loop": [2, 4, 9, 20, 25, 26, 30, 35, 37, 56, 79, 82, 89, 101, 118, 123, 135, 136, 138, 139, 140, 147, 149, 152, 163, 181, 182, 183, 185, 186, 191, 194, 205, 209], "loop_partit": 183, "loop_rv": 149, "loop_stat": 101, "loop_unrol": 9, "loop_var": [82, 185], "looppartit": [150, 186], "looprv": [149, 183], "loopstat": 146, "loos": [12, 109], "lora": 163, "loraa": 163, "lorab": 163, "lorien": 196, "lose": 146, "loss": [4, 65, 67, 123, 146, 147, 161, 170, 171, 173, 187], "loss_typ": [67, 105, 106, 107, 108, 147, 202], "lossi": 75, "lost": 14, "lot": [5, 9, 97, 98, 99, 100, 123, 131, 194], "low": [2, 18, 22, 23, 27, 32, 37, 41, 44, 56, 59, 66, 75, 93, 97, 98, 99, 100, 110, 111, 113, 119, 123, 148, 155, 156, 163, 169, 173, 182, 185, 186, 187, 201, 205, 212], "low_level_custom_pass": [82, 83, 198], "lower": [2, 18, 23, 37, 56, 61, 67, 73, 81, 90, 96, 101, 110, 113, 117, 118, 122, 134, 135, 136, 138, 139, 140, 146, 148, 150, 155, 161, 163, 165, 167, 169, 172, 173, 181, 182, 183, 185, 186, 187, 188, 189, 200, 201, 204, 205, 206, 208, 209, 211], "lower_to_primfunc": 165, "loweralloctensor": [113, 163], "lowerautocopi": 186, "lowercas": 126, "lowercrossthreadreduct": 186, "lowercustomdatatyp": 186, "lowerdevicekernellaunch": 186, "lowerdevicestorageaccessinfo": 186, "lowered_tun": 117, "loweredoutput": 165, "lowergpuipcallocstorag": 163, "lowerinitblock": 186, "lowerintrin": 186, "lowermatchbuff": 186, "loweropaqueblock": 186, "lowerruntimebuiltin": [113, 163], "lowerthreadallreduc": 186, "lowertvmbuiltin": 186, "lowerwarpmemori": 186, "lowest": [22, 148, 182, 201], "loxodonta": 52, "lp64d": 180, "lpuart1": 118, "lrn": [170, 187], "lsb": 62, "lscpu": 58, "lshift": 187, "lstm": [171, 187], "lstm_cell": 171, "lt": 185, "lu": 118, "lua": 5, "luckili": 129, "luke": [58, 171], "lumin": 49, "lv": [20, 22, 23, 43, 110, 111, 194], "lv0": [18, 20, 22, 159, 163], "lv1": [18, 20, 22, 43, 111, 159, 160, 161, 163], "lv10": 111, "lv11": 111, "lv12": 111, "lv13": 111, "lv14": 111, "lv15": 111, "lv16": 111, "lv17": 111, "lv18": 111, "lv19": 111, "lv1_1": 22, "lv1_adjoint": 163, "lv2": [20, 22, 43, 111, 160, 161, 163], "lv20": 111, "lv21": 111, "lv22": 111, "lv23": 111, "lv24": 111, "lv25": 111, "lv26": 111, "lv27": 111, "lv28": 111, "lv29": 111, "lv2_adjoint": 163, "lv3": [22, 43, 111], "lv30": 111, "lv31": 111, "lv32": 111, "lv33": 111, "lv34": 111, "lv35": 111, "lv36": 111, "lv37": 111, "lv38": 111, "lv39": 111, "lv4": [22, 43, 111], "lv40": 111, "lv41": 111, "lv42": 111, "lv43": 111, "lv44": 111, "lv45": 111, "lv46": 111, "lv47": 111, "lv48": 111, "lv49": 111, "lv5": [22, 43, 111], "lv50": 111, "lv51": 111, "lv52": 111, "lv53": 111, "lv54": 111, "lv55": 111, "lv56": 111, "lv57": 111, "lv58": 111, "lv59": 111, "lv6": [22, 43, 111], "lv60": 111, "lv61": 111, "lv62": 111, "lv63": 111, "lv64": 111, "lv65": 111, "lv66": 111, "lv67": 111, "lv68": 111, "lv69": 111, "lv7": 111, "lv70": 111, "lv71": 111, "lv72": 111, "lv73": 111, "lv74": 111, "lv75": 111, "lv76": 111, "lv77": 111, "lv78": 111, "lv79": 111, "lv8": 111, "lv80": 111, "lv81": 111, "lv82": 111, "lv83": 111, "lv84": 111, "lv85": 111, "lv86": 111, "lv87": 111, "lv88": 111, "lv89": 111, "lv9": 111, "lv90": 111, "lv_1": 43, "lxml": 119, "lynx": [67, 73], "m": [0, 4, 7, 14, 16, 17, 20, 22, 30, 31, 35, 46, 47, 51, 52, 56, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 79, 80, 88, 89, 90, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 116, 117, 118, 119, 120, 122, 124, 126, 132, 134, 135, 136, 139, 140, 143, 146, 147, 148, 150, 159, 161, 163, 170, 172, 174, 181, 183, 185, 186, 187, 188, 191, 192, 199, 200, 201, 204, 208, 210, 211], "m0": [101, 185, 187], "m1": [101, 150, 185, 187], "m2": [150, 185, 187], "m4": 118, "m55": [115, 125, 198], "m7": 118, "m_": 37, "m_c": 90, "m_c_init": 90, "m_inner": 90, "m_inner_init": 90, "m_outer": 90, "ma": 50, "mabi": 180, "mac": [118, 164, 212], "macbook": 90, "macdonald": 116, "machin": [4, 16, 17, 18, 20, 27, 37, 41, 44, 56, 58, 59, 62, 65, 66, 67, 69, 70, 71, 72, 75, 79, 82, 97, 100, 101, 105, 106, 107, 108, 111, 116, 118, 121, 123, 124, 141, 143, 146, 147, 162, 165, 169, 174, 178, 190, 196, 202, 205, 206, 210, 211], "machine_nam": 56, "machineri": 194, "maco": [7, 59, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 142, 144, 200, 201], "macosx": 148, "macro": [8, 13, 34, 36, 37, 39], "macro_func": 8, "macro_impl": 8, "macro_stream": 36, "macs_per_cc": 119, "made": [10, 11, 75, 155, 160, 161, 162, 172, 183, 185, 208], "magic": [5, 96, 101, 200], "magnitud": 160, "mai": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17, 22, 25, 32, 34, 35, 36, 39, 49, 51, 56, 58, 59, 64, 65, 67, 68, 70, 71, 72, 73, 75, 79, 80, 82, 84, 85, 89, 101, 104, 108, 109, 110, 111, 123, 126, 129, 138, 139, 143, 146, 155, 157, 158, 159, 160, 161, 162, 163, 167, 171, 172, 175, 178, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 194, 195, 202, 205, 208, 210, 211], "mail": [11, 197], "main": [1, 2, 4, 7, 8, 12, 15, 16, 18, 20, 23, 25, 31, 36, 43, 46, 47, 48, 49, 50, 51, 52, 53, 62, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 85, 89, 90, 93, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 110, 111, 116, 117, 118, 119, 121, 122, 123, 124, 126, 130, 131, 134, 135, 136, 139, 140, 148, 150, 156, 158, 159, 160, 161, 162, 163, 164, 169, 171, 172, 182, 183, 187, 191, 194, 200, 202, 204, 206, 208, 209, 210, 212], "main_adjoint": 163, "main_func": 131, "main_gvar": 131, "mainli": [4, 5, 36, 82, 84, 96, 146, 155, 163, 183], "maintain": [4, 9, 11, 15, 16, 31, 65, 79, 84, 143, 147, 161, 169, 170, 172, 183, 187, 199], "mainten": 16, "major": [2, 4, 9, 11, 25, 36, 62, 65, 136, 148, 169, 181, 185, 187, 200, 205, 208, 209], "make": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 15, 16, 17, 27, 34, 35, 36, 37, 44, 53, 56, 58, 62, 65, 66, 67, 69, 70, 71, 73, 74, 75, 79, 80, 84, 85, 89, 93, 96, 97, 101, 104, 105, 106, 107, 108, 109, 113, 117, 118, 120, 123, 131, 132, 138, 139, 141, 143, 146, 147, 151, 155, 164, 166, 167, 168, 169, 172, 181, 185, 186, 187, 188, 190, 191, 192, 194, 195, 198, 200, 201, 202, 203, 205, 207, 209, 210, 211], "make_arch": 123, "make_closur": 161, "make_compilation_config": 180, "make_const": 8, "make_filled_simdgroup_matrix": 185, "make_idx": 187, "make_nat_expr": 171, "make_nat_valu": 171, "make_nod": [4, 155, 166], "make_object": [34, 36], "make_trac": 188, "make_workload_kei": 146, "makecumprod": 34, "makecumsum": 34, "makedir": [123, 130], "makefil": 119, "makepackedapi": 186, "maker": 82, "makeunpackedapi": 186, "makino": 71, "mali": [94, 95, 107, 146, 180, 198], "malici": 126, "malloc": [36, 197], "malyshev": 56, "manag": [1, 4, 11, 15, 17, 37, 56, 80, 84, 85, 88, 93, 97, 105, 106, 107, 116, 118, 143, 147, 148, 172, 197], "mandatori": 9, "manger": 181, "mani": [2, 4, 5, 9, 10, 11, 12, 20, 34, 35, 36, 39, 56, 59, 62, 65, 69, 73, 74, 75, 76, 80, 81, 85, 97, 98, 99, 100, 104, 105, 106, 107, 108, 113, 123, 124, 146, 147, 148, 149, 163, 172, 186, 187, 191, 192, 194, 202, 205, 208, 210], "manifest": 172, "manifestlifetim": 172, "manifestsharedmemorylocalstag": 186, "manipul": [2, 4, 5, 82, 163, 183, 189, 191, 195], "manner": [4, 31, 84, 136, 172, 188, 191, 195], "manual": [2, 4, 12, 14, 16, 20, 36, 59, 62, 80, 96, 97, 98, 99, 100, 104, 123, 132, 143, 147, 148, 161, 169, 181, 183, 200, 201], "map": [2, 4, 8, 25, 27, 35, 36, 37, 41, 44, 52, 58, 59, 65, 73, 79, 82, 89, 123, 146, 147, 148, 149, 150, 152, 155, 156, 158, 159, 160, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 194, 212], "map_accmul": 191, "map_accuml": 191, "map_accumr": 191, "map_accumr_fold": 191, "map_free_var": 155, "map_indic": 185, "map_input": 58, "map_ndarrai": 185, "map_proto": 52, "map_proto_path": 52, "map_proto_url": 52, "map_shap": 185, "mapndarrai": 186, "mapped_valu": 27, "mapping_funct": [181, 185], "mark": [3, 4, 6, 7, 10, 14, 20, 36, 64, 65, 79, 118, 134, 136, 159, 161, 162, 163, 172, 181, 183, 185, 186, 194, 201, 208], "markcompilerfunctionsasextern": 172, "markdown": 12, "marker": 79, "markup": [12, 59], "marvel": 62, "masahiro": [73, 129], "mask": [47, 72, 134, 160, 161, 169, 176, 185, 187], "mask2str": 1, "mask_valu": [169, 187], "masked_fil": 161, "maskrcnn_resnet50_fpn": 72, "maskrcnn_resnet50_fpn_coco": 72, "maskrcnn_resnet50_fpn_weight": 72, "masquerad": 143, "master": [51, 53, 72, 119, 121, 123, 126, 171], "masuda": [73, 129], "match": [1, 7, 8, 17, 34, 49, 85, 89, 90, 101, 116, 122, 126, 129, 132, 139, 147, 148, 158, 159, 160, 162, 163, 164, 166, 169, 171, 172, 174, 175, 180, 183, 185, 186, 187, 188, 190, 195, 208, 212], "match_buff": [20, 22, 23, 30, 134, 135, 136, 140, 159, 181, 183, 185, 204, 208, 209], "match_cast": [159, 163], "match_order_bewar": 191, "matchbufferregion": 185, "matchcast": [159, 162], "matchcastnod": 162, "matched_bind": 163, "matched_expr": 163, "matchresult": 163, "mate10": [97, 105, 107], "mate10pro": [97, 105, 107], "materi": [12, 134, 135, 139], "math": [122, 169, 170, 172, 181, 185, 193, 208], "mathbb": 27, "mathemat": [34, 185], "mathrm": 160, "matmul": [18, 20, 22, 23, 43, 44, 101, 110, 111, 113, 132, 146, 147, 148, 160, 161, 163, 167, 170, 172, 181, 183, 187, 200, 201], "matmul1": [22, 23, 43, 44, 110], "matmul_1": 200, "matmul_add": 200, "matmul_after_reorder_block_iter_var": 183, "matmul_bas": 201, "matmul_i": 200, "matmul_i_i": 200, "matmul_i_o_i": 200, "matmul_i_o_o_i": 200, "matmul_i_o_o_o": 200, "matmul_intermedi": [23, 43], "matmul_j": 200, "matmul_j_i": 200, "matmul_j_o_i": 200, "matmul_j_o_o_i": 200, "matmul_j_o_o_o": 200, "matmul_k": 200, "matmul_k_i": 200, "matmul_k_o": 200, "matmul_leg": 187, "matmul_nt": 187, "matmul_rf_init": 110, "matmul_rf_loc": 110, "matmul_rf_upd": 110, "matmul_transposed_bias_relu": 110, "matmul_v1": 201, "matmulattr": 161, "matplotlib": [47, 48, 49, 53, 67, 123], "matric": [27, 75, 89, 160, 161, 169, 170, 185, 187, 200, 208], "matrix": [18, 75, 88, 89, 90, 94, 95, 126, 136, 147, 148, 160, 161, 163, 168, 169, 170, 185, 187, 198], "matrix_a": 89, "matrix_b": 89, "matrix_set_diag": [169, 187], "matrixcor": 148, "matt": 192, "matter": [3, 9, 70, 71, 123, 126, 186], "matthew": 210, "mattr": [58, 64, 71, 97, 109, 180], "matur": 4, "max": [20, 22, 23, 27, 30, 31, 43, 65, 67, 69, 73, 74, 96, 97, 98, 99, 100, 101, 119, 120, 129, 134, 146, 152, 160, 161, 169, 170, 173, 175, 180, 181, 183, 185, 187, 204, 210, 211], "max_": [161, 168, 170], "max_batch_s": [65, 113], "max_block_size_i": 180, "max_block_size_x": 180, "max_detect": 173, "max_detections_per_class": 173, "max_diag_len": [169, 187], "max_displac": [170, 187], "max_factor": 147, "max_function_arg": 172, "max_index": 119, "max_innermost_factor": 183, "max_length": [169, 187], "max_lin": 146, "max_local_memory_per_block": [99, 146], "max_num_thread": [1, 75, 104, 180, 189], "max_number_of_tri": 201, "max_output_boxes_per_class": 173, "max_output_s": 173, "max_per_stage_descriptor_storage_buff": 6, "max_period": 160, "max_pool1d": [161, 170], "max_pool2d": [58, 65, 68, 85, 111, 161, 170, 206], "max_pool2d_0": 68, "max_pool2d_backward": 161, "max_pool2d_grad": 170, "max_pool3d": [65, 161, 170], "max_push_constants_s": 6, "max_r": [181, 185], "max_retri": 174, "max_seqlen_k": 161, "max_seqlen_q": 161, "max_shared_memory_per_block": [99, 146], "max_storage_buffer_rang": 6, "max_threads_per_block": [70, 99, 146], "max_total_seq_len": 113, "max_trial": 156, "max_trials_gloabl": 163, "max_trials_glob": [110, 156, 163], "max_trials_per_task": [156, 163], "max_uniform_buffer_rang": 6, "max_unrol": 147, "max_valu": [119, 181, 185], "max_vthread_ext": [99, 146], "max_workspace_s": 65, "maxim": [88, 169, 187], "maximu": 52, "maximum": [1, 20, 58, 64, 65, 96, 101, 144, 146, 147, 152, 156, 157, 160, 161, 163, 169, 170, 172, 173, 174, 181, 183, 185, 186, 187], "maxinum": 173, "maxperstagedescriptorstoragebuff": 6, "maxpool2d": 58, "maxpushconstantss": 6, "maxstoragebufferrang": 6, "maxuniformbufferrang": 6, "mayb": [80, 146], "mb": [24, 29, 45, 48, 55, 77, 83, 91, 95, 103, 114, 123, 125, 128, 137, 171, 198, 207], "mbarrier": 185, "mbed_nano": 123, "mbox": [126, 160, 161, 168, 170], "mc": 90, "mcpu": [64, 72, 73, 74, 75, 90, 100, 101, 108, 109, 118, 119, 120, 180, 200, 202, 208, 210, 211], "mcu": 118, "md": [7, 11, 12, 52, 122, 126, 160, 161, 172], "mean": [0, 4, 5, 7, 9, 12, 17, 27, 31, 34, 35, 36, 43, 50, 51, 58, 65, 67, 69, 70, 71, 72, 73, 74, 85, 88, 89, 90, 98, 100, 104, 105, 106, 107, 108, 109, 110, 121, 123, 126, 132, 146, 147, 149, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 174, 183, 185, 187, 191, 192, 194, 195, 202, 208, 210, 211], "mean_std": 169, "mean_tim": 208, "mean_vari": 169, "meaning": [12, 14, 101, 146, 187], "meant": [12, 162, 178, 203], "meantim": 9, "meanwhil": [4, 27, 41, 43], "measur": [96, 97, 98, 99, 100, 101, 104, 105, 107, 108, 109, 117, 146, 148, 152, 156, 162, 178, 200, 201, 202, 205, 208], "measure_batch": 147, "measure_callback": [96, 97, 98, 99, 100, 101, 146, 156, 200], "measure_candid": 156, "measure_ctx": [96, 98], "measure_method": 147, "measure_opt": [67, 104, 105, 106, 107, 108, 117, 147, 201, 202], "measure_record": [97, 98, 99, 100], "measure_spars": 75, "measure_str_kei": 147, "measurecallback": [146, 156], "measurecandid": 156, "measureerrorno": [147, 201], "measureinput": [146, 147], "measureresult": [146, 147, 201], "meausr": 146, "mechan": [2, 3, 4, 9, 13, 35, 37, 58, 80, 84, 85, 124, 129, 147, 172, 191], "media": [47, 126], "median": [31, 67, 69, 73, 74, 96, 98, 100, 101, 152, 200, 202], "meet": [2, 146, 147, 162, 178, 186, 201], "meet_condition_func": [101, 146], "mehrdad": [116, 117, 120, 121, 124], "mem": [24, 29, 45, 55, 77, 83, 91, 95, 103, 114, 125, 128, 137, 198, 207], "mem_copi": 185, "mem_copy_16_16": 185, "mem_scop": 176, "member": [4, 5, 8, 9, 10, 11, 15, 17, 36, 146, 155, 158, 160, 161, 162, 171, 181, 186, 187, 188, 191, 192, 195], "memcpi": 1, "memo_": 35, "memoiz": [35, 148, 162, 169], "memor": 123, "memori": [0, 1, 2, 4, 6, 20, 27, 36, 37, 43, 48, 52, 56, 64, 65, 66, 74, 75, 90, 99, 113, 116, 118, 119, 120, 123, 124, 138, 146, 152, 155, 156, 158, 160, 163, 171, 172, 176, 181, 182, 183, 185, 186, 187, 202, 208, 212], "memort": 185, "memory_cfg": [162, 178], "memory_scop": [155, 180], "memorydatabas": 156, "mention": [5, 36, 88, 90, 123, 140, 189, 202, 208, 210], "menu": 118, "merg": [9, 10, 11, 12, 14, 16, 17, 49, 146, 147, 155, 163, 172, 183, 186], "mergecompilerregion": 172, "mergecomposit": 172, "mergecompositefunct": 163, "merger": 9, "mergesharedmemoryalloc": 186, "merit": [10, 11], "merrymerci": [97, 171], "mesg": 189, "mesh": 161, "meshgrid": [169, 187], "messag": [6, 7, 9, 10, 13, 14, 15, 32, 39, 72, 105, 106, 107, 113, 119, 138, 146, 147, 151, 161, 185, 189], "message_pass": 37, "met": 183, "meta": [3, 84, 110, 130, 155, 156, 166, 169, 180, 185, 187, 188, 192, 206, 208], "meta_index": 185, "meta_schedul": [141, 163], "meta_schedule_origin_shap": 187, "meta_schedule_original_shap": 187, "metadata": [4, 35, 79, 110, 111, 118, 120, 122, 139, 172, 183, 185, 188, 192, 212], "metal": [5, 41, 43, 62, 115, 125, 141, 143, 148, 157, 174, 176, 180, 198, 208, 211], "metallib": 148, "metaschedul": [2, 111, 163, 186], "metascheduleapplydatabas": [110, 163], "metascheduletuneirmod": 163, "metascheduletunetir": [110, 163], "method": [1, 2, 4, 7, 8, 16, 23, 30, 34, 35, 37, 49, 56, 58, 65, 66, 73, 75, 79, 85, 110, 111, 123, 126, 136, 139, 146, 149, 154, 155, 156, 157, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 173, 174, 176, 180, 181, 183, 185, 187, 188, 189, 201, 208, 209, 210, 211], "methodologi": 90, "metric": [4, 93, 123, 147, 177], "metriccollector": 177, "metz": 171, "mi": 90, "michael": 212, "micro": [116, 117, 118, 120, 121, 122, 123, 139, 153], "micro_aot": [116, 125, 198], "micro_autotun": [117, 125, 198], "micro_custom_id": [118, 125, 198], "micro_ethosu": [119, 125, 198], "micro_mlperftini": [120, 125, 198], "micro_mod": 157, "micro_pytorch": [121, 125, 198], "micro_speech": 124, "micro_tflit": [122, 125, 198], "micro_train": [123, 125, 198], "micro_tvmc": [124, 125, 198], "microcontrol": [116, 120, 121, 122, 123, 199], "micronpu": 119, "microprocessor": [123, 205], "microtvm": [12, 16, 86, 119, 125, 141, 157, 198], "microtvm_api_serv": 122, "microtvm_autotun": 117, "microtvm_vww_demo": 118, "microtvmtemplateproject": 157, "middl": [138, 159], "might": [5, 8, 9, 10, 12, 14, 20, 34, 35, 39, 59, 62, 66, 72, 109, 118, 120, 122, 123, 132, 135, 142, 158, 160, 164, 176, 191, 192, 194, 201, 202, 208, 210], "million": [123, 202, 210], "millisecond": [146, 147, 152, 162, 178], "mimic": [35, 147, 187], "min": [31, 62, 65, 66, 67, 69, 72, 73, 74, 98, 100, 105, 106, 107, 117, 134, 138, 152, 155, 160, 161, 169, 175, 181, 183, 185, 187, 202, 210, 211], "min_exec_num": 108, "min_num_branch": 172, "min_os_vers": 148, "min_r": [181, 185], "min_repeat_m": [96, 97, 98, 99, 100, 101, 104, 106, 108, 146, 147, 152, 162, 178, 200, 202], "min_seed_record": 147, "min_siz": [163, 185], "min_valu": [140, 155, 181, 185], "mind": [10, 20, 27, 66, 123, 129, 143], "mini": [160, 170], "minim": [2, 5, 7, 59, 67, 120, 146, 162, 169, 172, 176, 178, 187, 192, 196, 199, 208], "minimum": [5, 6, 9, 12, 37, 41, 44, 60, 65, 96, 98, 143, 146, 147, 152, 155, 160, 161, 162, 163, 169, 172, 173, 178, 181, 185, 187, 197, 202, 208], "minor": [9, 16, 36, 65, 148, 187], "minrpc": 174, "minu": 85, "minut": [47, 50, 52, 67, 68, 69, 72, 73, 98, 100, 113, 116, 117, 121, 122, 123, 200, 202, 208, 210], "miopen": 129, "miopenconvolut": 148, "miopenfloat": 148, "miopenhalf": 148, "miopentranspos": 148, "mirror": [17, 34, 50, 170, 187, 194], "mirror_pad": [170, 187], "mirrorpad": 170, "mirrorpadinput": 187, "mismatch": [27, 49, 74, 160], "miss": [20, 36, 93, 108, 156, 160, 169, 170, 172, 185], "missing_kei": 160, "missing_op": 151, "missing_op_mod": 172, "missing_pattern": 164, "missingtask": 147, "mistak": 143, "mistakenli": 14, "mix": [43, 49, 56, 66, 67, 132, 160, 161, 163, 167, 170, 172, 187, 205], "mixed_precis": [56, 67], "mixed_precision_acc_typ": [56, 67], "mixed_precision_calculation_typ": [56, 67], "mixed_precision_op": [56, 67], "mixed_precision_typ": 172, "mixin": 160, "mixtur": 161, "mk": 69, "mkdir": [17, 56, 62, 66, 69, 70, 71, 80, 118, 119, 120, 123, 143, 210, 211], "mkl": [36, 72, 90, 208], "mkswap": 66, "ml": [12, 19, 20, 22, 23, 41, 43, 44, 56, 64, 110, 119, 141, 191, 202, 210], "mlc": [20, 27], "mlcommon": [116, 118, 120], "mlf": [119, 123, 124, 157, 212], "mlf_extract_workspace_size_byt": 120, "mlip": 64, "mlir": 160, "mlmodel": [46, 167], "mlp": [22, 44, 93, 97, 100, 113, 156, 171], "mlperf": [116, 118, 120], "mlperftini": [115, 125, 198, 199], "mlpmodel": 44, "mlsim": 64, "mm_relu": [27, 30, 31], "mma": [185, 186], "mma_desc": 183, "mma_fil": 185, "mma_intrin": 183, "mma_stor": 185, "mma_sync": [89, 185], "mmult": [90, 208], "mnist": 64, "mo": 90, "mobil": [41, 44, 102, 103, 109, 144, 198], "mobile_net": 171, "mobilenet": [46, 53, 62, 74, 97, 98, 99, 100, 105, 106, 107, 108, 119, 123, 171], "mobilenet_2_5_128_tf": 123, "mobilenet_v1_1": [53, 119], "mobilenet_v1_2018_08_02": [53, 119], "mobilenet_v2": [69, 73, 121], "mobilenet_v2_1": 74, "mobilenet_v2_kera": 69, "mobilenet_v2_qnnpack_37f702c5": 121, "mobilenet_v2_weight": [69, 73], "mobilenet_v2_weights_tf_dim_ordering_tf_kernels_0": 69, "mobilenetv1": 123, "mobilenetv2": [69, 121], "mobilenetv2_1": 59, "mock": 212, "mod": [1, 2, 3, 4, 22, 23, 31, 35, 36, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 85, 93, 97, 98, 99, 100, 105, 106, 107, 108, 110, 111, 113, 122, 123, 126, 130, 131, 146, 148, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 174, 177, 178, 182, 183, 185, 186, 187, 188, 194, 202, 206, 209, 210, 212], "mod0": 130, "mod1": [84, 130], "mod2": 84, "mod3": 84, "mod_": 3, "mod_from_relax": 43, "mod_from_script": 43, "mod_from_torch": 43, "mod_nam": [130, 165, 169, 172], "mod_spec": 113, "mode": [49, 56, 60, 65, 67, 68, 97, 98, 99, 100, 108, 113, 118, 120, 124, 126, 130, 143, 147, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 180, 181, 185, 187, 188, 212], "model": [2, 4, 8, 11, 12, 16, 19, 22, 30, 36, 39, 41, 55, 56, 58, 59, 65, 77, 80, 86, 94, 96, 97, 98, 99, 100, 102, 105, 106, 107, 108, 112, 114, 115, 122, 125, 138, 141, 146, 147, 148, 152, 156, 157, 159, 160, 161, 163, 164, 165, 167, 169, 171, 172, 173, 180, 188, 190, 193, 196, 198, 199, 200, 201, 203, 207, 209, 212], "model_config": 113, "model_cont": 74, "model_dir": [53, 74], "model_dir_path": 167, "model_embed_tokens_weight1": 113, "model_fil": [46, 64, 122, 146], "model_file_nam": 68, "model_format": 68, "model_func": [72, 75], "model_index": 120, "model_layers_0_input_layernorm_weight1": 113, "model_layers_0_mlp_down_proj_weight1": 113, "model_layers_0_mlp_gate_up_proj_weight1": 113, "model_layers_0_post_attention_layernorm_weight1": 113, "model_layers_0_self_attn_o_proj_weight1": 113, "model_layers_0_self_attn_qkv_proj_weight1": 113, "model_layers_1_input_layernorm_weight1": 113, "model_layers_1_mlp_down_proj_weight1": 113, "model_layers_1_mlp_gate_up_proj_weight1": 113, "model_layers_1_self_attn_o_proj_weight1": 113, "model_layers_1_self_attn_qkv_proj_weight1": 113, "model_lib": 64, "model_library_format_path": 157, "model_nam": [47, 51, 52, 67, 70, 71, 108, 118, 148], "model_param": [126, 163], "model_path": [46, 49, 50, 52, 53, 74, 116, 118, 120, 122, 126, 202], "model_rt_graph": 64, "model_short_nam": 120, "model_tar_path": [120, 122], "model_trac": 72, "model_url": [46, 49, 52, 53, 74, 116, 118, 120, 122, 126, 202], "model_zoo": [59, 65, 171], "modeloptim": 147, "modelproto": [160, 167], "moder": [10, 11], "modern": [4, 59, 62, 208], "modif": [31, 201], "modifi": [4, 6, 14, 17, 32, 35, 36, 56, 58, 62, 65, 80, 84, 97, 104, 105, 107, 109, 120, 147, 156, 161, 162, 163, 172, 186, 187, 188, 191, 208], "modul": [0, 1, 2, 9, 11, 13, 20, 22, 23, 30, 31, 35, 36, 37, 41, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 82, 84, 85, 89, 90, 96, 97, 98, 99, 100, 105, 106, 107, 108, 109, 111, 113, 116, 117, 118, 119, 120, 121, 122, 124, 126, 129, 130, 134, 135, 136, 139, 140, 143, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169, 171, 172, 174, 175, 177, 178, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 195, 200, 201, 202, 204, 205, 209, 212], "modular": [2, 90, 187, 212], "modular_set": 187, "modularset": 187, "module0": 130, "module1": 130, "module_attr": 110, "module_equ": 156, "module_load": [117, 147], "module_nam": 175, "module_pass": [4, 23, 110, 113, 188], "modulelist": [113, 126, 160], "moduleload": 147, "modulenod": [5, 36, 37], "modulepass": [4, 84, 188], "modulepassnod": 4, "moduleseri": 3, "modulespec": [113, 160], "modulespectyp": 160, "modulo": 161, "modulu": 187, "mohamad": 118, "moment": [56, 67, 80, 129, 183, 208], "momentum": [111, 161, 170, 187], "momodulelistdul": 160, "monitor": [123, 147], "monkei": 146, "monoton": [169, 187], "month": 17, "monthli": 17, "mood": 16, "more": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 20, 22, 27, 30, 32, 34, 35, 36, 37, 39, 41, 43, 44, 50, 52, 56, 60, 62, 65, 66, 73, 74, 75, 79, 84, 85, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 118, 119, 121, 123, 124, 126, 129, 131, 132, 134, 135, 139, 144, 146, 147, 148, 151, 154, 155, 158, 160, 161, 162, 163, 166, 167, 168, 169, 170, 172, 178, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 194, 195, 199, 200, 202, 203, 204, 205, 208, 210], "moreau": 97, "moreov": [73, 74, 139, 169], "morita": 46, "morpholog": [168, 187], "morri": 65, "most": [1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 20, 30, 35, 36, 43, 48, 51, 56, 60, 67, 68, 70, 71, 72, 73, 75, 79, 97, 98, 99, 100, 104, 123, 138, 139, 146, 147, 158, 160, 161, 162, 169, 171, 172, 181, 183, 185, 186, 191, 192, 195, 202, 210, 211], "mostli": [75, 123, 160, 161], "motiv": 27, "mount": [69, 142], "mouser": 123, "move": [7, 8, 9, 10, 16, 17, 66, 89, 120, 123, 136, 139, 173, 181, 183, 186, 208, 209], "movement": [5, 185], "moving_mean": [161, 170, 187, 194], "moving_var": [161, 170, 187, 194], "mpi": 175, "mps2": 122, "mps2_an521": [121, 122], "mps3_board": 119, "mpsoc": 66, "mrvl": 62, "msg": [5, 51, 67, 68, 70, 71, 72, 73, 118, 147, 151, 159], "msvc": 143, "mtl": 176, "mtripl": [56, 58, 59, 64, 67, 68, 69, 71, 97, 99, 105, 107, 109, 171, 180], "much": [4, 8, 11, 12, 16, 39, 43, 60, 62, 75, 123, 132, 147, 160, 169, 183, 191, 195, 204, 210], "mul": [36, 160, 161, 169, 185, 187], "mult": 148, "multi": [2, 13, 18, 25, 90, 96, 101, 161, 165, 169, 170, 174, 175, 185, 186, 193, 200, 201, 208], "multi_filt": 147, "multi_target": 180, "multibox": 173, "multibox_prior": 173, "multibox_transform_loc": 173, "multilay": 171, "multilib": 62, "multinomi": [160, 161], "multinomial_from_uniform": [160, 161], "multipl": [1, 2, 4, 5, 9, 11, 15, 16, 18, 22, 25, 27, 31, 56, 75, 79, 80, 84, 89, 90, 94, 95, 97, 98, 99, 100, 105, 107, 110, 117, 123, 134, 136, 140, 143, 146, 147, 148, 152, 155, 160, 161, 163, 169, 170, 172, 177, 181, 182, 183, 185, 186, 187, 188, 191, 192, 194, 198, 202, 209, 210], "multipli": [34, 36, 65, 75, 84, 88, 126, 136, 139, 159, 160, 161, 163, 164, 169, 170, 181, 185, 187, 192], "multiplicand": 185, "multiplicand_a": 185, "multiplicand_b": 185, "multiply_grad": 34, "multiplygrad": 34, "multiprocess": [146, 174], "must": [1, 4, 6, 7, 8, 9, 11, 16, 17, 34, 36, 37, 46, 58, 59, 62, 65, 67, 73, 79, 82, 89, 105, 106, 107, 116, 117, 118, 120, 121, 122, 123, 124, 143, 156, 158, 159, 160, 161, 162, 163, 169, 170, 171, 172, 174, 175, 176, 178, 181, 183, 185, 187, 189, 191, 192, 195, 208], "mutabl": [4, 148, 189], "mutat": [2, 23, 147, 156, 160, 161, 162, 163, 167, 172, 181, 183, 184], "mutate_irmodul": 162, "mutated_dfb": 162, "mutated_root_fn": 162, "mutation_prob": 147, "mutual": [158, 192], "mv": [17, 58, 116, 117, 120, 122, 124, 211], "mx": 167, "mxgan": 171, "mxnet": [4, 13, 46, 48, 49, 50, 51, 53, 59, 65, 66, 67, 69, 70, 71, 74, 84, 97, 98, 99, 100, 105, 106, 107, 108, 121, 126, 167, 169, 171, 191, 206], "my": [10, 12, 70, 71, 109, 163, 172, 186], "my_fix": 7, "my_func": [160, 180], "my_func_cuda": 180, "my_model": 211, "my_preprocess": [51, 67, 121], "my_repo": 7, "my_rul": 149, "my_tvm_addon": 132, "my_tvmc_script": 211, "myadd": [5, 61, 208], "myadd_pack": 208, "myadd_parallel": 208, "myarrai": 63, "myerror": 151, "myexprmut": 162, "myexprvisitor": 162, "myfunct": 12, "mymodul": [27, 30, 31, 160, 209], "mymodulewithaxisremapsugar": 27, "mypackag": 174, "mypkg": 63, "myrul": 149, "myscan": 135, "myscript": 211, "mysubgraph": 36, "mysum": [181, 185], "n": [3, 6, 20, 22, 23, 30, 32, 35, 36, 37, 47, 61, 66, 67, 75, 82, 85, 89, 90, 96, 97, 98, 100, 101, 104, 109, 113, 118, 119, 122, 124, 126, 130, 132, 134, 135, 136, 139, 140, 143, 146, 147, 148, 150, 152, 155, 157, 159, 160, 161, 163, 168, 169, 170, 171, 173, 177, 181, 183, 185, 186, 187, 191, 192, 200, 201, 204, 208], "n0": [101, 185, 187], "n02123045": [202, 210], "n02123159": [202, 210], "n02124075": [202, 210], "n02129604": [202, 210], "n04040759": [202, 210], "n1": [101, 185, 187], "n2": [64, 185, 187], "n_c": 89, "n_c_init": 89, "n_class": 126, "n_dim": [169, 187], "n_elem": 187, "n_fft": [169, 187], "n_hidden": 126, "n_infeat": 126, "n_inner": [89, 90], "n_inner_init": 90, "n_layer": [97, 98, 99, 100, 105, 106, 107, 108, 126], "n_line": 146, "n_outer": 90, "n_parallel": [117, 146, 147], "n_repeat": [73, 74], "n_stage_0": 146, "n_stage_1": 146, "n_stage_i": 146, "n_trial": [67, 104, 105, 106, 107, 108, 117, 147, 201, 202], "nag": 161, "naiv": [113, 139, 146, 208], "name": [0, 1, 2, 3, 4, 5, 8, 9, 13, 16, 17, 23, 27, 30, 31, 32, 34, 35, 36, 37, 43, 47, 49, 52, 53, 58, 61, 67, 68, 69, 70, 73, 74, 75, 79, 80, 82, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 113, 117, 118, 119, 120, 122, 123, 126, 130, 131, 132, 134, 135, 136, 138, 139, 140, 142, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 191, 192, 194, 195, 200, 201, 202, 204, 208, 209, 211], "name_befor": 85, "name_hint": [36, 113, 131, 155, 159, 160, 162, 166, 169, 185], "name_of_debug_func": 160, "name_prefix": 159, "name_to_bind": 158, "named_param": 113, "named_paramet": 160, "namedtupl": [126, 170, 187], "namer": 167, "namespac": [4, 35, 36, 126, 146, 147, 150, 160, 162, 164, 169, 172, 174, 179, 181, 183, 185, 186], "nan": [161, 169, 181, 185, 187], "nano": [65, 76, 77, 123, 198], "nano33bl": 123, "narrow": 186, "narrowdatatyp": 186, "nat": [171, 192], "nativ": [20, 27, 30, 41, 44, 56, 62, 64, 118, 123, 132, 163, 196], "natur": [5, 9, 75, 161, 162, 192], "navig": [12, 37, 118], "nb_j": 101, "nbest": 104, "nbr": 119, "nbyte": 185, "nc": [89, 90, 170], "nc8n": 170, "nccl": 175, "ncdhw": [160, 161, 168, 170, 187], "ncdhw16c": 187, "ncdhw16d": 187, "ncdhw16h": 187, "ncdhw16w": 187, "ncdhwc": 187, "nch": 187, "nchw": [48, 52, 56, 59, 74, 97, 98, 99, 100, 108, 111, 119, 129, 147, 148, 160, 161, 163, 167, 168, 169, 170, 171, 173, 187, 194, 202, 210], "nchw16c": [169, 185, 187], "nchw16h": 187, "nchw16w": 187, "nchw8c": 170, "nchw_pack_layout": 187, "nchw_xc_layout": 187, "nchwc": [74, 108, 170, 181, 187], "nchwinic": 187, "nchwxc": 187, "nci": 89, "ncw": [160, 161, 168, 170, 187], "ncw16c": 187, "ncw16w": 187, "ncwc": 187, "nd": [0, 2, 30, 31, 37, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 61, 64, 67, 69, 70, 71, 75, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 121, 122, 126, 129, 130, 132, 134, 135, 139, 146, 160, 162, 165, 167, 168, 169, 170, 176, 181, 185, 186, 187, 194, 200, 201, 202, 204, 206, 208, 209], "nd_view_func": 113, "ndarrai": [0, 2, 20, 27, 36, 37, 44, 67, 80, 101, 113, 131, 132, 146, 148, 152, 153, 156, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 175, 178, 181, 185, 186, 187, 192], "ndarray_s": [169, 187], "ndata": 126, "ndhwc": [167, 187], "ndim": [159, 160, 161, 162, 169, 181, 183, 185, 187], "ndk": [56, 57, 67, 69, 97, 99, 105, 107, 146, 147], "ne": 185, "nearbyint": [181, 185], "nearest": [160, 161, 168, 181, 185, 187], "nearest_neighbor": [161, 168, 170, 187], "nearli": [12, 208], "neater": 34, "neatli": 35, "necessari": [7, 8, 10, 11, 12, 13, 16, 17, 20, 34, 35, 37, 56, 61, 62, 64, 73, 79, 80, 96, 98, 129, 135, 143, 147, 155, 156, 161, 166, 169, 170, 181, 186, 187, 191, 195, 202, 204, 209, 211], "necessarili": [1, 12, 35], "neck": [49, 171], "need": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 20, 23, 30, 31, 32, 34, 35, 36, 37, 39, 43, 44, 52, 53, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 79, 80, 82, 84, 88, 89, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 131, 132, 134, 135, 139, 140, 142, 143, 144, 146, 147, 150, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 171, 172, 174, 181, 182, 185, 187, 188, 189, 191, 192, 194, 195, 197, 200, 201, 202, 204, 206, 208, 209, 210, 211], "needn": 80, "neg": [65, 138, 147, 158, 160, 161, 169, 170, 171, 172, 181, 183, 185, 187], "negat": 187, "negative_slop": 161, "neighbor": [169, 187], "neighborhood": [147, 170, 208], "neighbourhood": 90, "neightborhood": [170, 187], "neither": [191, 192], "neon": [58, 71, 97], "neovers": 64, "nest": [2, 25, 27, 30, 37, 85, 90, 134, 158, 160, 162, 163, 164, 169, 178, 182, 183, 191, 192, 194, 208, 209], "nested_cal": 185, "net": [47, 69, 70, 71, 97, 105, 107, 129, 130, 163, 167, 171, 190, 204], "netdef": 167, "neth": 47, "netparamet": 167, "netron": [123, 202, 210, 211], "netw": 47, "network": [0, 4, 15, 18, 20, 22, 27, 37, 44, 46, 56, 58, 59, 61, 65, 66, 74, 75, 80, 84, 85, 94, 95, 102, 103, 109, 110, 111, 113, 119, 127, 128, 135, 142, 146, 147, 159, 160, 161, 164, 167, 168, 170, 171, 173, 174, 187, 191, 196, 197, 198, 202, 205, 210, 212], "networkx": 126, "neural": [4, 18, 20, 22, 27, 37, 44, 59, 61, 66, 80, 94, 95, 105, 106, 107, 108, 110, 111, 113, 119, 123, 126, 135, 159, 160, 161, 164, 170, 187, 190, 196, 198, 202, 204, 205, 210, 212], "neuralnetworkclassifi": 167, "neuron": 123, "nevalu": 108, "never": [4, 10, 56, 62, 80, 123, 146, 157, 160, 161, 171, 186, 192], "nevertheless": [20, 191, 195], "new": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 16, 17, 20, 34, 35, 36, 37, 39, 41, 43, 44, 56, 59, 60, 62, 64, 66, 69, 70, 71, 79, 81, 82, 85, 90, 97, 98, 99, 100, 105, 106, 107, 110, 113, 118, 119, 131, 134, 139, 146, 147, 150, 152, 155, 159, 160, 161, 162, 163, 166, 167, 169, 170, 171, 172, 174, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 197, 201, 203, 205, 208, 209, 210, 212], "new_attr": 147, "new_bind": 163, "new_block": 163, "new_bodi": 185, "new_el": 160, "new_expr": 172, "new_func": [4, 163, 172, 185, 186], "new_input": 147, "new_ir_modul": 4, "new_iter_var": 181, "new_layout": 146, "new_loop": 183, "new_mod": [4, 35, 188], "new_ord": 183, "new_packag": 211, "new_param": 75, "new_point": 147, "new_shap": [169, 187], "new_shape_arrai": 187, "new_shape_shap": 187, "new_sparse_indic": [169, 187], "new_sparse_indices_shap": 187, "new_sparse_valu": 169, "new_transform": 188, "new_var": 162, "new_vdevic": 163, "new_w": 75, "new_workload": 147, "newaxi": [46, 48, 49, 69, 70, 71, 187], "newcom": 12, "newer": [39, 73, 74], "newli": [7, 159, 175, 208], "newshap": [68, 169, 187], "next": [2, 3, 10, 12, 17, 27, 36, 37, 43, 65, 66, 69, 70, 71, 75, 82, 84, 85, 90, 96, 97, 98, 99, 100, 101, 109, 111, 113, 116, 118, 119, 121, 122, 124, 126, 140, 147, 156, 170, 185, 194, 200, 201, 202, 205, 206, 208, 210, 211], "next_batch": 147, "next_task_id": 156, "nextaft": 185, "ng": [116, 117, 120, 122, 124], "ngf": 171, "nhwc": [48, 53, 58, 59, 85, 97, 98, 99, 100, 163, 167, 170, 172, 181, 187, 194], "nhwcnc": 89, "ni": [88, 90], "nice": 129, "nightli": [7, 17, 123], "nil": [68, 191, 195], "nimbl": 196, "ninja": [116, 117, 120, 122, 124], "nll_loss": [161, 170, 187], "nll_loss_backward": 161, "nlp": 172, "nm": [148, 173], "nms_thresh": 47, "nn": [4, 18, 20, 22, 23, 44, 48, 56, 58, 59, 65, 67, 68, 70, 71, 72, 80, 84, 85, 88, 89, 96, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 113, 115, 117, 118, 125, 126, 129, 130, 134, 138, 148, 153, 159, 163, 164, 167, 172, 181, 191, 194, 198, 204, 206, 212], "nn_c": 89, "nn_c_init": 89, "nnc": 89, "nnf": 89, "nnmodul": [2, 19, 23], "nnmodulewithtir": 22, "nnp_initi": 148, "nnp_status_success": 148, "nnpack": 187, "nnvm": [167, 171, 192], "nnz": [75, 187], "no_bind_return_tupl": 160, "no_error": 201, "no_fork": 174, "no_grad": [43, 51, 72, 73, 111, 121, 126, 161], "no_rewrit": 146, "no_tail": 147, "noalia": [22, 23, 30, 31, 43, 82, 89, 90, 96, 101, 110, 134, 135, 136, 139, 140, 159, 163, 200, 204, 208, 209], "node": [0, 5, 18, 35, 36, 37, 49, 52, 58, 59, 64, 65, 72, 82, 85, 97, 105, 106, 107, 117, 126, 131, 138, 141, 147, 148, 152, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 172, 174, 175, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 206, 211], "node_attr": 148, "node_detail": 148, "node_id": [52, 148], "node_lookup": 52, "node_map": [166, 194], "node_row_ptr": 0, "node_to_id": [131, 148], "node_typ": 148, "nodeentri": 36, "nodeid": 0, "nodelookup": 52, "noderef": [4, 36, 165], "nois": [104, 202], "nomal": 160, "nomin": 11, "non": [6, 31, 37, 41, 44, 58, 75, 90, 93, 104, 123, 138, 148, 155, 157, 158, 160, 161, 162, 163, 164, 167, 169, 171, 172, 173, 181, 183, 185, 186, 187, 191, 208], "non_max_suppress": 173, "non_surjective_invers": 185, "none": [0, 5, 22, 23, 25, 31, 34, 37, 43, 44, 48, 51, 52, 67, 68, 69, 70, 71, 72, 73, 75, 82, 101, 104, 105, 106, 107, 108, 110, 111, 113, 116, 117, 121, 122, 126, 130, 131, 139, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 194, 201, 208], "nonmaxsuppress": 173, "nonneg": 183, "nonzero": [75, 148, 161, 187], "nop": 119, "nor": [171, 172], "norewrit": 146, "norm": [113, 126, 129, 160, 163, 170, 171, 172], "norm_img_data": [202, 210], "normal": [4, 5, 7, 8, 16, 17, 22, 35, 50, 51, 58, 66, 67, 73, 113, 121, 126, 129, 130, 134, 135, 138, 140, 146, 147, 148, 149, 155, 156, 158, 159, 160, 161, 162, 163, 168, 169, 170, 171, 172, 174, 178, 181, 183, 185, 187, 189, 192, 195, 202, 210], "normal_reduce_temp0": 204, "normal_reduce_temp0_1": 204, "normal_reduce_temp0_2": 204, "normalis": 187, "normalize_file_list_by_unpacking_tar": 148, "normalize_prim_func": 149, "normalized_shap": 160, "normalizeglobalvar": [159, 163], "nose": 119, "not_equ": [160, 161, 169, 187], "not_person": 118, "not_pref": 13, "notabl": [2, 43, 110, 181, 185], "notat": 187, "note": [2, 3, 4, 5, 7, 8, 12, 13, 14, 15, 16, 20, 22, 23, 32, 34, 35, 36, 48, 59, 62, 66, 67, 68, 72, 74, 75, 79, 84, 85, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 118, 120, 121, 122, 123, 126, 129, 135, 139, 142, 143, 146, 147, 148, 150, 155, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 174, 175, 178, 180, 181, 183, 185, 187, 188, 191, 192, 194, 195, 197, 209, 211], "notebook": [22, 23, 30, 31, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 142, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212], "noth": [35, 52, 68, 85, 147, 169, 183], "notic": [7, 17, 22, 34, 35, 36, 101, 138, 140, 191, 192, 206, 208, 211], "notify_runner_result": 156, "notimplementederror": [47, 156], "now": [2, 3, 4, 20, 27, 30, 31, 34, 35, 36, 43, 46, 49, 51, 52, 53, 56, 61, 66, 67, 68, 69, 70, 71, 74, 75, 84, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 113, 116, 117, 118, 119, 120, 121, 122, 123, 126, 134, 138, 139, 146, 152, 155, 156, 160, 161, 163, 167, 170, 172, 176, 183, 186, 187, 188, 189, 194, 200, 201, 202, 204, 206, 208, 209, 210, 211, 212], "np": [20, 27, 30, 31, 37, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 61, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 88, 89, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 126, 129, 130, 132, 134, 135, 136, 139, 140, 147, 156, 160, 161, 162, 163, 169, 171, 175, 178, 183, 185, 187, 194, 200, 201, 202, 204, 206, 208, 209, 210], "np_arr": 176, "np_data": [176, 187], "np_input": 75, "np_out": 75, "np_repeat": [90, 208], "np_runing_tim": 90, "np_running_tim": 208, "np_x": 160, "nparamet": 113, "npart": [61, 88, 89, 104, 136, 181, 201], "npo": 36, "nprint": 130, "nproc": [62, 66, 143], "npu": [115, 125, 198], "npy": 116, "npy_data": 119, "npz": [64, 202, 210], "nrf": 199, "nrf52840": 123, "nrf5340dk": 124, "nrf5340dk_nrf5340_cpuapp": [121, 123, 124], "nt": [167, 170, 187], "nth": 147, "nthread": 148, "ntop5": 67, "nu": [98, 100], "nucleo": [117, 118, 122, 199], "nucleo_l4r5zi": [116, 117, 118, 120, 122], "nucleu": 160, "null": [0, 161, 162, 169, 187, 191], "null__unsort": 169, "null_valu": 161, "nullopt": [162, 175, 183], "nullptr": [1, 3, 4, 34, 35, 36, 37, 185], "nullvalu": 34, "num": [160, 185, 188], "num_anchor": 173, "num_arg": 122, "num_attention_head": 113, "num_batch": 123, "num_block": [75, 187], "num_box": [168, 173, 187], "num_channel": [160, 170], "num_class": [70, 71, 97, 100, 126, 171, 173, 206], "num_classes_with_background": 173, "num_cor": [146, 180], "num_detect": 173, "num_ev": 188, "num_filt": [138, 171, 187], "num_filter_block": 187, "num_filter_chunk": 187, "num_group": [160, 161, 170, 175, 187], "num_head": [160, 161], "num_heads_kv": 160, "num_hidden": [126, 171], "num_hidden_lay": 113, "num_input": [0, 22, 23, 34, 43, 44, 110, 111, 113, 155, 162, 163], "num_key_value_head": 113, "num_kv_head": 113, "num_lay": [3, 85, 97, 98, 99, 100, 105, 106, 107, 108, 126, 148, 171, 206], "num_mac": 119, "num_measur": 146, "num_measure_tri": [96, 97, 98, 99, 100, 101, 146, 200], "num_measures_per_round": 146, "num_newaxi": [169, 187], "num_nod": [126, 175], "num_nonzero": 126, "num_of_image_class": 85, "num_output": [0, 104, 147, 201], "num_q_head": 113, "num_random_class": 123, "num_ratio": 173, "num_roi": 173, "num_rpc_dev": 152, "num_seg": 169, "num_siz": 173, "num_stag": 171, "num_target_class": 123, "num_task": 181, "num_thread": [88, 108, 135, 147, 156], "num_til": 64, "num_total_detect": 173, "num_trial": 117, "num_trials_per_it": 156, "num_tuning_cor": 156, "num_uniqu": [169, 187], "num_unique_subset": 8, "num_valid_anchor": 173, "num_warmup_sampl": 146, "num_work": [160, 161, 175], "num_workers_per_nod": 175, "number": [0, 1, 3, 4, 5, 7, 14, 16, 17, 34, 36, 37, 49, 62, 64, 66, 67, 69, 70, 71, 73, 74, 75, 80, 84, 85, 88, 89, 90, 94, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 117, 118, 120, 122, 123, 126, 143, 146, 147, 148, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 183, 185, 186, 187, 188, 191, 192, 194, 195, 200, 201, 202, 206, 208, 210, 212], "number_format": 185, "number_of_nod": 126, "numbers2": 191, "numclass": 126, "numedg": 126, "numel": 126, "numer": [56, 73, 79, 90, 147, 160, 169, 171, 181, 185, 187, 189, 192, 208], "numfeat": 126, "numnod": 126, "numpi": [0, 2, 5, 9, 20, 27, 30, 31, 34, 37, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 59, 61, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 126, 129, 130, 132, 134, 135, 136, 139, 140, 143, 146, 147, 148, 160, 161, 162, 167, 168, 169, 170, 175, 176, 181, 183, 185, 187, 189, 194, 200, 201, 202, 206, 208, 209, 210], "numpy_mlp": 20, "numpyasarrai": 176, "numpydoc": [8, 12], "numtestsampl": 126, "numtrainingsampl": 126, "numvalidationsampl": 126, "nune": 210, "nvcc": [89, 130, 143, 162, 205], "nvidia": [36, 65, 70, 89, 94, 95, 102, 103, 111, 142, 147, 185, 198, 205, 206, 208, 211], "nvprof": 104, "nvptx": [37, 205], "nvrtc": 37, "nwc": [167, 187], "nx": [124, 126], "nx_graph": 126, "o": [3, 39, 52, 53, 56, 61, 64, 66, 67, 68, 69, 74, 75, 89, 96, 97, 99, 101, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 122, 123, 124, 130, 146, 147, 149, 157, 160, 163, 170, 176, 187, 195, 208, 210], "o0": [143, 185, 187], "o1": [185, 187], "o2": [118, 143, 185, 187], "o3": [143, 160], "o_c": 89, "o_c_init": 89, "o_inn": 89, "o_proj": 113, "obei": [85, 131], "obj": [84, 158, 160, 166, 169, 182], "object": [0, 1, 2, 9, 13, 20, 27, 35, 36, 37, 56, 62, 63, 76, 77, 97, 98, 99, 100, 101, 109, 113, 122, 123, 126, 130, 146, 147, 148, 152, 155, 156, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 192, 198, 201, 205, 208, 209], "object_typ": 113, "objective_func": 146, "objectmodul": 160, "objectptr": 36, "objectref": [4, 5, 177, 184], "objectstructinfo": [160, 162], "objecttyp": 162, "observ": [16, 27, 73, 84, 85, 90, 121, 208], "obtain": [2, 4, 16, 35, 36, 43, 70, 71, 73, 75, 109, 143, 147, 162, 178, 192, 197, 201, 202], "obviou": 37, "oc": [89, 170, 187, 212], "occasion": 7, "occup": 93, "occur": [4, 39, 79, 85, 147, 155, 157, 169, 185, 186, 187], "occurr": [85, 155, 158, 162], "oci": 89, "octeon": 62, "od": 160, "odd": [170, 187], "off": [8, 9, 58, 59, 65, 66, 80, 96, 101, 109, 116, 122, 123, 143, 163, 186, 200], "off_valu": [161, 169, 187], "offend": 7, "offer": [4, 18, 94, 102, 167, 192, 195, 205, 210], "offici": [9, 46, 48, 49, 50, 51, 53, 69, 72, 74, 80, 113, 123, 142, 144, 189, 190], "offload": [36, 56, 58, 62, 64, 65, 68, 118, 119, 163, 212], "offset": [120, 134, 139, 155, 160, 161, 169, 170, 173, 181, 183, 185, 187, 191], "offset_factor": [89, 139, 183, 185, 187], "offset_of": 185, "often": [4, 5, 8, 16, 30, 35, 75, 123, 136, 140, 168, 172, 187, 191, 192, 208], "oh": 160, "ohwi": [163, 172], "oidhw": [161, 170], "oihw": [111, 117, 161, 168, 170, 187], "oiw": [160, 161, 170, 187], "ok": [5, 8, 118, 189], "okai": [104, 106, 201], "ol": 104, "olah": 191, "old": [4, 79, 85, 113, 146, 147, 162, 183], "old_var": 162, "older": [49, 118, 123], "omit": [4, 79, 98, 100, 110, 111, 138, 139, 143, 155, 183, 192, 195], "omod": 56, "on_devic": 172, "on_valu": [161, 169, 187], "onc": [1, 2, 3, 7, 8, 9, 14, 17, 30, 34, 35, 62, 66, 73, 75, 79, 117, 118, 119, 123, 143, 154, 158, 159, 160, 163, 164, 165, 166, 172, 181, 184, 192, 210], "one": [1, 2, 3, 4, 5, 8, 9, 11, 12, 15, 16, 17, 20, 22, 23, 25, 26, 27, 30, 34, 35, 36, 37, 56, 60, 65, 66, 69, 70, 71, 73, 75, 79, 80, 84, 85, 89, 90, 96, 97, 98, 99, 100, 106, 108, 109, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 131, 132, 135, 136, 138, 139, 140, 143, 146, 147, 148, 152, 155, 156, 157, 160, 161, 162, 163, 166, 168, 169, 170, 172, 178, 181, 182, 183, 185, 186, 187, 191, 192, 194, 195, 201, 206, 208, 210, 211, 212], "one_hot": [161, 169, 187], "one_lay": 194, "onednn": 36, "oneflow": 167, "ones": [2, 5, 9, 14, 16, 35, 82, 123, 124, 129, 140, 152, 160, 161, 162, 163, 167, 169, 170, 186, 187, 194, 210], "ones_lik": [34, 161, 169], "onesid": [169, 187], "onli": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 15, 16, 17, 20, 22, 23, 27, 30, 32, 34, 35, 36, 43, 44, 48, 56, 58, 59, 60, 62, 63, 64, 65, 70, 71, 72, 75, 79, 80, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 108, 109, 110, 111, 113, 117, 119, 120, 121, 123, 126, 129, 134, 139, 140, 143, 144, 146, 147, 148, 149, 150, 152, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 194, 195, 197, 199, 200, 201, 202, 204, 208, 210, 212], "onlin": [12, 58, 118], "only_en": 184, "onnx": [43, 44, 54, 55, 56, 59, 62, 68, 97, 98, 99, 100, 105, 106, 107, 108, 110, 111, 113, 161, 167, 170, 173, 187, 198, 205, 206, 211], "onnx_model": [49, 64, 202], "onnxoptim": [49, 210], "onto": [14, 34, 66, 123, 169, 183], "onward": 66, "oo": 89, "oo_c": 89, "oo_c_init": 89, "oobcheck": 182, "ooc": 89, "oof": 89, "op": [0, 2, 5, 22, 23, 34, 35, 36, 37, 52, 56, 58, 59, 61, 64, 65, 66, 67, 72, 82, 84, 85, 88, 89, 90, 96, 97, 104, 105, 106, 107, 108, 109, 110, 113, 117, 118, 120, 126, 130, 132, 134, 135, 136, 139, 140, 146, 147, 148, 150, 153, 154, 155, 158, 160, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 175, 177, 178, 180, 181, 183, 185, 186, 187, 189, 192, 195, 200, 201, 204, 208], "op1": 172, "op2": 172, "op_buffer_axis_separ": 163, "op_buffer_input_axis_separ": 163, "op_buffer_transform": 163, "op_convert": 167, "op_diff": 85, "op_id_": 36, "op_impl_map": 163, "op_index": 130, "op_kind": 163, "op_macro": 36, "op_nam": [13, 85, 130, 151, 155, 161, 163, 166, 172, 187, 194], "op_pat": 194, "op_pattern": [23, 43, 110], "op_stat": 35, "op_to_cnt_aft": 85, "op_to_cnt_befor": 85, "op_typ": [160, 161], "opaddtyperel": 155, "opaqu": [1, 25, 34, 162, 182, 183, 186, 191, 192], "opaque_func": 162, "opattributeinvalid": 151, "opattributerequir": 151, "opattributeunimpl": 151, "open": [0, 2, 7, 9, 10, 12, 13, 17, 36, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 67, 69, 70, 71, 73, 74, 75, 97, 105, 106, 107, 116, 118, 119, 120, 121, 122, 123, 124, 126, 148, 157, 174, 202, 205, 210, 211], "open_transport": 16, "opencl": [2, 3, 5, 16, 43, 57, 61, 62, 67, 68, 69, 99, 107, 174, 176, 180], "opencl_device_host": 109, "opencl_device_port": 109, "opencl_modul": 56, "openclml": [62, 68], "opencv": 47, "opengl": 185, "openmp": 72, "openpgp": 17, "oper": [0, 1, 2, 4, 5, 9, 12, 13, 16, 18, 22, 23, 25, 31, 33, 37, 39, 41, 43, 44, 49, 52, 56, 62, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 80, 84, 85, 86, 89, 96, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 115, 117, 119, 122, 123, 126, 129, 131, 135, 136, 138, 146, 147, 148, 151, 152, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 181, 183, 185, 186, 187, 189, 190, 191, 194, 195, 198, 199, 202, 203, 205, 206, 207, 209, 210, 211, 212], "operand": [140, 148, 155, 158, 161, 163, 181, 182, 185, 187], "operaton": [181, 185], "operator_macro": 36, "operator_nam": 163, "operatorconvert": 167, "operatormodul": [157, 209], "operror": 151, "opfus": [169, 172], "opimplement": 165, "opnam": 58, "opnod": [35, 162, 165, 181, 189], "opnotimpl": [13, 151], "opportun": [12, 20, 34, 183], "opposit": [147, 169, 187], "opset": [160, 167], "opsset": 123, "opstrategi": 34, "opt": [69, 84, 119, 148, 191], "opt1": 90, "opt2": 90, "opt3": 90, "opt4": 90, "opt5": 90, "opt6": 90, "opt6_tim": 90, "opt_conv_cuda": [88, 91, 198], "opt_conv_tensorcor": [89, 91, 198], "opt_gemm": [90, 91, 198], "opt_level": [3, 4, 23, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 82, 84, 85, 97, 98, 99, 100, 105, 106, 107, 108, 110, 113, 116, 117, 118, 120, 121, 122, 123, 126, 130, 146, 147, 163, 169, 172, 186, 188, 202, 206], "opt_llm": 113, "opt_pass_level": [169, 172], "opt_sch_fil": 108, "optim": [0, 1, 2, 4, 9, 12, 18, 19, 20, 23, 26, 31, 32, 34, 35, 36, 37, 41, 43, 56, 59, 64, 65, 66, 69, 70, 71, 75, 81, 82, 86, 91, 96, 97, 98, 99, 100, 101, 102, 104, 105, 108, 112, 114, 118, 119, 123, 129, 131, 139, 141, 146, 147, 148, 154, 155, 156, 160, 161, 163, 165, 167, 169, 170, 172, 183, 186, 187, 188, 190, 192, 193, 194, 195, 196, 198, 203, 204, 206, 207, 209], "optimize_llm": [113, 114, 198], "optimize_oper": [91, 198], "optimizelayouttransform": 163, "optimizer_config": 119, "option": [0, 1, 4, 6, 7, 9, 12, 16, 17, 18, 27, 34, 35, 36, 52, 56, 58, 62, 63, 65, 66, 67, 68, 70, 71, 75, 79, 80, 81, 84, 98, 99, 100, 109, 113, 116, 117, 118, 119, 120, 122, 124, 126, 129, 138, 143, 146, 147, 148, 150, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 202, 210], "option_constructor": 166, "option_dict": 64, "optiona": [175, 187], "optionail": 173, "optional_qnn_op": 172, "options_from_nam": 180, "optyp": 49, "orchestr": [4, 84, 212], "order": [0, 1, 4, 6, 9, 11, 12, 34, 35, 36, 62, 65, 69, 70, 71, 79, 82, 85, 88, 90, 104, 105, 106, 107, 119, 123, 136, 139, 146, 147, 148, 152, 155, 156, 158, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 177, 181, 182, 183, 184, 187, 190, 191, 192, 194, 195, 199, 200, 201, 208, 211], "ordered_loop": 183, "ordered_union": 156, "ordinari": 191, "ordr": 164, "org": [7, 17, 39, 49, 50, 51, 52, 53, 58, 64, 66, 68, 72, 73, 74, 75, 80, 105, 106, 107, 119, 121, 123, 126, 146, 148, 160, 161, 167, 168, 169, 170, 172, 183, 185, 187, 197], "organ": [2, 11, 12, 56, 90], "orgin": 146, "orient": [12, 192], "orig": 34, "orig_cal": [34, 161], "orig_return_valu": 163, "orig_var": 161, "origin": [9, 14, 17, 27, 31, 34, 35, 56, 75, 82, 90, 113, 116, 118, 120, 123, 131, 139, 146, 147, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 181, 183, 185, 186, 187, 206, 208], "origin_mod": 23, "origin_s": 187, "original_output": 163, "original_paramet": 163, "original_return_valu": 163, "ormod": 98, "osci": 119, "oserror": 142, "oshap": [171, 187], "oss": 9, "ostringstream": 36, "ot": 147, "other": [1, 2, 3, 4, 7, 8, 10, 11, 12, 13, 14, 16, 20, 22, 27, 35, 36, 37, 39, 44, 46, 47, 51, 56, 60, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 79, 80, 85, 96, 104, 109, 110, 111, 113, 117, 118, 120, 123, 129, 131, 135, 138, 139, 141, 144, 146, 147, 148, 152, 155, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 172, 175, 176, 178, 180, 181, 183, 185, 186, 187, 188, 189, 191, 192, 194, 195, 197, 199, 200, 201, 205, 206, 208, 210, 212], "other_map": 185, "other_opt": 147, "other_target": 146, "otheropt": 104, "otheroptionent": 147, "otheroptionspac": 147, "otherwis": [4, 34, 36, 82, 113, 116, 122, 138, 139, 146, 147, 148, 150, 152, 155, 156, 160, 161, 162, 163, 165, 166, 169, 171, 172, 175, 180, 181, 182, 183, 185, 186, 187, 188, 192], "ought": 123, "our": [3, 5, 9, 12, 16, 23, 27, 34, 35, 36, 44, 56, 67, 68, 69, 70, 71, 72, 73, 80, 82, 84, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 117, 118, 119, 121, 126, 134, 139, 140, 147, 164, 165, 183, 197, 201, 202, 206, 208, 210, 211], "ourselv": [35, 96, 113, 200, 204], "out": [2, 5, 9, 16, 17, 20, 22, 27, 36, 44, 56, 58, 65, 66, 69, 70, 71, 72, 73, 75, 84, 85, 89, 90, 96, 97, 101, 110, 118, 122, 123, 129, 130, 132, 134, 139, 142, 143, 144, 146, 147, 148, 149, 152, 156, 157, 159, 160, 161, 163, 168, 169, 170, 172, 173, 181, 182, 183, 185, 186, 187, 191, 194, 200, 204, 206, 208, 210, 212], "out1_typ": 191, "out2_typ": 191, "out_": 36, "out_1": 200, "out_buff": [181, 187], "out_c": 47, "out_cb": 49, "out_channel": [88, 89, 129, 130, 160, 161, 170, 187], "out_channel_block": 187, "out_channel_chunk": 187, "out_cr": 49, "out_cuda": 129, "out_cudnn": 129, "out_data": 187, "out_deploi": 206, "out_depth": [168, 187], "out_dict": 72, "out_dim": 187, "out_dir": 148, "out_dtyp": [22, 23, 43, 44, 96, 104, 110, 111, 117, 160, 161, 163, 168, 170, 172, 187], "out_featur": [113, 160], "out_fil": [119, 147, 148], "out_filt": 187, "out_format": 160, "out_grad": [161, 170, 187], "out_h": [47, 161], "out_height": [168, 170, 187], "out_i": [49, 200], "out_i_i": 200, "out_i_o_i": 200, "out_i_o_o": 200, "out_i_o_o_j_o_o_fus": 200, "out_idx": 36, "out_indic": [173, 187], "out_indptr": 187, "out_j": 200, "out_j_i": 200, "out_j_o_i": 200, "out_j_o_o": 200, "out_layout": [111, 160, 161, 170, 187], "out_np": [96, 200], "out_ret_tcod": 122, "out_ret_valu": 122, "out_shap": [0, 36, 47, 106, 108, 129, 130, 206], "out_sinfo": [20, 22, 23, 43, 110, 161, 162], "out_siz": [36, 88, 146], "out_tensor": 173, "out_tupl": 187, "out_tvm": [96, 200], "out_typ": [34, 165, 187, 191], "out_valu": 187, "out_w": [47, 160, 161], "out_width": [168, 170, 187], "outcom": [31, 156, 160], "outdat": 16, "outer": [27, 31, 82, 90, 101, 129, 136, 138, 152, 158, 163, 169, 181, 183, 186, 187, 192, 201, 208], "outer_product": 189, "outermost": [183, 186, 208], "outlin": [12, 172], "outlinecompilerfunctionswithexistingglobalsymbol": 172, "outmost": 181, "outperform": [90, 104, 208], "output": [1, 2, 5, 6, 7, 17, 18, 20, 22, 23, 25, 30, 31, 34, 36, 37, 43, 44, 46, 47, 48, 49, 51, 53, 56, 57, 64, 65, 66, 67, 68, 70, 71, 74, 79, 80, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 110, 111, 113, 116, 117, 118, 119, 121, 123, 124, 126, 130, 132, 134, 138, 139, 140, 146, 147, 148, 150, 152, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 181, 182, 183, 185, 187, 189, 191, 194, 195, 200, 206, 208, 209, 211, 212], "output_0": [68, 210, 211], "output_1": 134, "output_2": 134, "output_arrai": 175, "output_block": 183, "output_channel": 148, "output_data": [119, 120], "output_data_sec": 119, "output_depth": [161, 170], "output_detail": [74, 120], "output_dim": 126, "output_dtyp": 120, "output_expr": 172, "output_fil": 210, "output_format": [148, 160, 173], "output_grad": [34, 161], "output_height": [148, 161, 170], "output_len": 119, "output_list": 212, "output_modul": 188, "output_nam": 120, "output_pad": [160, 161, 170, 187], "output_path": [119, 157, 160], "output_rv_typ": 183, "output_s": [68, 111, 159, 161, 170, 187], "output_scal": 187, "output_shap": [30, 58, 85, 89, 97, 98, 99, 100, 105, 106, 107, 108, 120, 161, 169, 187, 202], "output_t": 126, "output_tensor": [64, 189], "output_token": 113, "output_typ": 34, "output_width": [148, 161, 170], "output_zero_point": 187, "outreach": 11, "outsid": [11, 20, 34, 35, 90, 118, 124, 135, 161, 168, 169, 181, 182, 183, 186, 187, 192, 194, 208, 209], "outstand": 10, "outtyp": 160, "over": [8, 9, 11, 16, 34, 35, 56, 67, 68, 79, 90, 109, 134, 135, 136, 139, 148, 155, 157, 158, 160, 161, 162, 169, 170, 172, 177, 178, 181, 183, 185, 187, 191, 201, 208], "overal": [9, 11, 56, 67, 141, 172, 177], "overarch": 2, "overcomput": 186, "overfit": 123, "overflow": [8, 84, 169], "overhead": [5, 73, 104, 109, 116, 152, 162, 178], "overlap": [9, 12, 169, 183, 187], "overload": [34, 37, 155, 160, 162, 185], "overrid": [1, 5, 6, 35, 36, 37, 65, 67, 109, 131, 146, 147, 160, 162, 163, 167, 178, 180, 183, 185, 187, 188], "overridden": [56, 162, 163, 178, 180], "override_instru": [4, 85, 188], "override_native_generic_func": [34, 180], "overriden": [4, 65], "overse": 11, "overview": [2, 10, 12, 35, 56, 118, 141, 190, 192, 195, 202, 210], "overwhelm": 10, "overwrit": [146, 162, 211], "ow": 160, "own": [4, 9, 11, 12, 14, 23, 33, 35, 43, 58, 79, 82, 88, 115, 123, 125, 126, 131, 142, 143, 147, 163, 167, 176, 183, 185, 187, 192, 194, 196, 198, 202, 205, 210], "own_nam": 158, "owner": 9, "ownership": 11, "p": [43, 56, 69, 98, 100, 110, 111, 119, 123, 146, 161, 167, 170, 187, 191], "p0": [56, 84, 97, 98, 99, 100], "p01": 84, "p02": 84, "p03": 84, "p1": [56, 84, 97, 98, 99, 100], "p11": 84, "p12": 84, "p2": [84, 97, 98, 99, 100], "p3": [84, 97, 98, 99, 100], "p4": [98, 100], "p_bn1_bia": 111, "p_bn1_weight": 111, "p_conv1_weight": 111, "p_dim1_": 36, "p_dim2_": 36, "p_f": 187, "p_fc1_bia": 43, "p_fc1_weight": 43, "p_fc2_bia": 43, "p_fc2_weight": 43, "p_fc_bia": 111, "p_fc_weight": 111, "p_getattr_l__self___layer1___0___bn1_bia": 111, "p_getattr_l__self___layer1___0___bn1_weight": 111, "p_getattr_l__self___layer1___0___bn2_bia": 111, "p_getattr_l__self___layer1___0___bn2_weight": 111, "p_getattr_l__self___layer1___0___conv1_weight": 111, "p_getattr_l__self___layer1___0___conv2_weight": 111, "p_getattr_l__self___layer1___1___bn1_bia": 111, "p_getattr_l__self___layer1___1___bn1_weight": 111, "p_getattr_l__self___layer1___1___bn2_bia": 111, "p_getattr_l__self___layer1___1___bn2_weight": 111, "p_getattr_l__self___layer1___1___conv1_weight": 111, "p_getattr_l__self___layer1___1___conv2_weight": 111, "p_getattr_l__self___layer2___0___bn1_bia": 111, "p_getattr_l__self___layer2___0___bn1_weight": 111, "p_getattr_l__self___layer2___0___bn2_bia": 111, "p_getattr_l__self___layer2___0___bn2_weight": 111, "p_getattr_l__self___layer2___0___conv1_weight": 111, "p_getattr_l__self___layer2___0___conv2_weight": 111, "p_getattr_l__self___layer2___0___downsample_0_weight": 111, "p_getattr_l__self___layer2___0___downsample_1_bia": 111, "p_getattr_l__self___layer2___0___downsample_1_weight": 111, "p_getattr_l__self___layer2___1___bn1_bia": 111, "p_getattr_l__self___layer2___1___bn1_weight": 111, "p_getattr_l__self___layer2___1___bn2_bia": 111, "p_getattr_l__self___layer2___1___bn2_weight": 111, "p_getattr_l__self___layer2___1___conv1_weight": 111, "p_getattr_l__self___layer2___1___conv2_weight": 111, "p_getattr_l__self___layer3___0___bn1_bia": 111, "p_getattr_l__self___layer3___0___bn1_weight": 111, "p_getattr_l__self___layer3___0___bn2_bia": 111, "p_getattr_l__self___layer3___0___bn2_weight": 111, "p_getattr_l__self___layer3___0___conv1_weight": 111, "p_getattr_l__self___layer3___0___conv2_weight": 111, "p_getattr_l__self___layer3___0___downsample_0_weight": 111, "p_getattr_l__self___layer3___0___downsample_1_bia": 111, "p_getattr_l__self___layer3___0___downsample_1_weight": 111, "p_getattr_l__self___layer3___1___bn1_bia": 111, "p_getattr_l__self___layer3___1___bn1_weight": 111, "p_getattr_l__self___layer3___1___bn2_bia": 111, "p_getattr_l__self___layer3___1___bn2_weight": 111, "p_getattr_l__self___layer3___1___conv1_weight": 111, "p_getattr_l__self___layer3___1___conv2_weight": 111, "p_getattr_l__self___layer4___0___bn1_bia": 111, "p_getattr_l__self___layer4___0___bn1_weight": 111, "p_getattr_l__self___layer4___0___bn2_bia": 111, "p_getattr_l__self___layer4___0___bn2_weight": 111, "p_getattr_l__self___layer4___0___conv1_weight": 111, "p_getattr_l__self___layer4___0___conv2_weight": 111, "p_getattr_l__self___layer4___0___downsample_0_weight": 111, "p_getattr_l__self___layer4___0___downsample_1_bia": 111, "p_getattr_l__self___layer4___0___downsample_1_weight": 111, "p_getattr_l__self___layer4___1___bn1_bia": 111, "p_getattr_l__self___layer4___1___bn1_weight": 111, "p_getattr_l__self___layer4___1___bn2_bia": 111, "p_getattr_l__self___layer4___1___bn2_weight": 111, "p_getattr_l__self___layer4___1___conv1_weight": 111, "p_getattr_l__self___layer4___1___conv2_weight": 111, "p_i": 187, "p_id_": 36, "p_o": 187, "p_op_": 36, "p_output0": 23, "p_relu": 23, "p_x": 23, "p_y_inn": 181, "pace": 10, "pack": [3, 4, 5, 7, 12, 20, 22, 36, 74, 79, 84, 113, 116, 118, 122, 146, 161, 162, 169, 170, 175, 180, 181, 185, 186, 187], "pack_axi": [170, 187], "pack_dtyp": [170, 187], "pack_typ": [170, 187], "pack_weight_til": 170, "packag": [9, 17, 49, 51, 53, 56, 58, 65, 67, 68, 69, 70, 71, 72, 73, 74, 80, 93, 104, 105, 106, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 143, 148, 149, 156, 160, 162, 171, 178, 181, 201, 205, 210], "package_path": [68, 211], "packed_func": [5, 36, 160, 162], "packed_out": 187, "packed_param": 113, "packedb": [90, 208], "packedb_1": [90, 208], "packedfunc": [1, 2, 13, 22, 36, 37, 63, 132, 152, 161, 162, 165, 171, 175, 177, 178, 180, 181, 185, 186, 187], "packedfunctyp": 162, "packedinput": 187, "packfuncvoidaddr": 37, "pad": [58, 65, 68, 72, 84, 85, 88, 89, 96, 104, 111, 117, 129, 130, 138, 148, 160, 161, 164, 168, 169, 170, 171, 172, 183, 185, 186, 187, 194, 196, 206, 212], "pad_aft": [186, 187], "pad_back": [170, 187], "pad_befor": [186, 187], "pad_bottom": [148, 170, 187], "pad_data": 104, "pad_down": [170, 187], "pad_einsum": 183, "pad_front": [170, 187], "pad_h": [89, 148], "pad_height": [170, 187], "pad_left": [148, 170, 187], "pad_mod": [161, 170], "pad_right": [148, 170, 187], "pad_temp": [96, 98, 99, 100, 129], "pad_temp_global_textur": 56, "pad_temp_i0": 96, "pad_temp_i1": 96, "pad_temp_i2": 96, "pad_temp_i3": 96, "pad_temp_shar": [96, 204], "pad_temp_shared_1": [96, 204], "pad_temp_shared_ax0": 96, "pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fus": 96, "pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i": 96, "pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o": 96, "pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i": 96, "pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o": 96, "pad_temp_shared_ax1": 96, "pad_temp_shared_ax2": 96, "pad_temp_shared_ax3": 96, "pad_top": [148, 170, 187], "pad_valu": [161, 170, 172, 183, 186, 187], "pad_value_block": 183, "pad_w": [89, 148], "pad_width": [161, 170, 187], "padb": 187, "padded_data": 170, "paddedinput": 99, "padding_mod": [168, 187], "paddl": [50, 167], "paddle_resnet50": 50, "paddlepaddl": [54, 55, 167, 198], "padinput": 187, "padl": 187, "padr": 187, "padt": 187, "pae": 124, "page": [2, 7, 12, 17, 32, 36, 39, 62, 66, 69, 90, 97, 105, 107, 113, 143, 144, 145, 190, 193, 208, 210], "page_s": 113, "paged_kv_cach": 113, "pagedkvcach": 113, "pai": 9, "pain": 7, "pair": [36, 79, 85, 146, 147, 148, 155, 163, 167, 169, 171, 172, 183, 187, 191, 192, 195, 201], "pair2": 191, "pairwis": 147, "palomero": 212, "panel": 118, "panic": 39, "panthera": [202, 210], "paper": [12, 123, 160, 171], "papi": 92, "papi_avail": 93, "papi_fp_op": 93, "papi_native_avail": 93, "papimetriccollector": 93, "paraet": 171, "paragraph": 35, "parallel": [1, 8, 25, 37, 97, 98, 99, 100, 101, 105, 106, 107, 143, 146, 147, 164, 172, 181, 183, 185, 186, 189, 200, 205], "parallel_barrier_when_finish": 181, "parallel_launch_point": 181, "parallel_stride_pattern": 181, "param": [0, 3, 12, 22, 23, 34, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 93, 97, 98, 99, 100, 105, 106, 107, 108, 110, 111, 113, 116, 117, 118, 120, 121, 122, 123, 126, 129, 130, 146, 148, 152, 155, 156, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 181, 185, 186, 187, 191, 194, 202, 206, 210], "param0": 169, "param1": [163, 169], "param2": 163, "param_0": 167, "param_1": 167, "param_byt": 169, "param_d": 75, "param_dict": 113, "param_map": 185, "param_mod": 113, "param_nam": [1, 162, 185], "param_spec": 44, "param_tensor": 126, "param_tuple_nam": 163, "paramet": [0, 1, 2, 6, 7, 12, 25, 26, 30, 34, 49, 51, 52, 56, 67, 68, 69, 70, 71, 72, 75, 79, 84, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 113, 117, 118, 119, 120, 122, 123, 130, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 206, 208, 210, 212], "parameter": [79, 147, 194, 201], "parameter_s": 118, "parametr": [78, 84, 191], "parametrize_target": [8, 79, 171], "params_byt": 152, "params_dict": 160, "params_from_relax": 43, "params_from_torch": 43, "paramt": [65, 163], "parent": [3, 152, 160, 166, 181, 183, 185, 194, 212], "parent_pattern": 194, "parit": 166, "parm": 68, "pars": [30, 36, 43, 46, 47, 53, 116, 122, 131, 148, 152, 155, 166, 167, 169, 171, 172, 181, 189, 192], "parse_compute_vers": 148, "parsefromstr": 52, "parsejson": 36, "parser": [1, 74, 148, 167, 172, 189], "part": [2, 3, 9, 11, 18, 20, 36, 38, 49, 56, 59, 76, 77, 79, 80, 88, 97, 98, 99, 100, 101, 106, 110, 113, 118, 124, 126, 135, 139, 146, 148, 160, 161, 163, 169, 170, 172, 181, 183, 187, 192, 194, 196, 198, 202, 210, 212], "parti": [9, 36, 142], "partial": [18, 34, 110, 123, 161, 172, 183], "partialevalu": 172, "particip": [10, 11, 15], "particular": [1, 12, 27, 36, 37, 49, 79, 161, 169, 186, 187, 191, 192, 194, 195, 197, 200, 202, 210], "particularli": [20, 191], "partit": [58, 62, 64, 66, 97, 98, 99, 100, 166, 172, 183, 205, 212], "partition": 59, "partition_for_arm_compute_lib": 58, "partition_for_bnn": 59, "partition_for_clml": 67, "partition_for_cmsisnn": [118, 120], "partition_for_cutlass": 130, "partition_for_mrvl": 64, "partition_for_tensorrt": 65, "partition_for_vitis_ai": 66, "partition_loop": 183, "partition_po": 183, "partitionedfrompattern": 194, "partitiongraph": 172, "pass": [1, 2, 3, 5, 7, 8, 9, 16, 17, 19, 20, 22, 32, 33, 34, 36, 37, 41, 43, 48, 49, 51, 52, 56, 58, 59, 62, 63, 65, 66, 67, 68, 70, 71, 72, 73, 75, 79, 80, 81, 83, 90, 93, 97, 99, 101, 105, 107, 108, 109, 110, 113, 117, 118, 119, 122, 123, 124, 126, 131, 139, 146, 147, 148, 149, 151, 154, 155, 157, 159, 160, 161, 162, 163, 164, 167, 169, 172, 174, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 195, 198, 201, 205, 206, 208, 209, 211, 212], "pass1": 4, "pass2": 4, "pass_context": [117, 169, 172], "pass_ctx": 4, "pass_func": [4, 35, 163, 172, 186, 188], "pass_info": [4, 85, 154], "pass_inst": 4, "pass_instru": [4, 84, 85, 154], "pass_nam": [4, 85], "pass_seq": [4, 85], "pass_xx": 4, "passbadenterctx": 85, "passbadexitctx": 85, "passbadrunbefor": 85, "passcontext": [2, 23, 35, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 82, 84, 89, 97, 98, 99, 100, 105, 106, 107, 108, 110, 113, 116, 117, 118, 120, 121, 122, 123, 126, 130, 154, 163, 169, 172, 186, 188, 202, 206], "passcontextnod": 4, "passcontextthreadlocalentri": 4, "passcontextthreadlocalstor": 4, "passen": 4, "passexamplebas": 85, "passfin": 85, "passfine_0": 85, "passfine_1": 85, "passinfo": [4, 154, 169, 172, 188], "passinfonod": 4, "passinstru": [4, 84, 85, 154, 188], "passinstrumentnod": 4, "passinstur": 84, "passnod": 4, "passphas": 212, "passprintinginstru": 154, "passtiminginstru": [4, 85, 154], "password": 17, "past": [17, 118, 123, 142, 148, 183, 191, 199], "pat": [166, 194], "pat1": 194, "pat2": 194, "pat3": 194, "patch": [5, 11, 15, 16, 65, 119, 146, 170, 197], "patern": 166, "path": [0, 3, 6, 8, 13, 14, 32, 36, 52, 53, 56, 58, 61, 65, 66, 67, 74, 75, 79, 93, 99, 105, 106, 107, 109, 113, 116, 117, 118, 119, 120, 121, 122, 124, 130, 142, 143, 147, 148, 156, 157, 160, 162, 166, 167, 174, 175, 181, 187, 194, 202, 210, 212], "path1": 194, "path2": 194, "path_dso": 148, "path_lib": [3, 99, 206], "path_param": 0, "path_pattern": 194, "path_target": 148, "pathlib": [113, 116, 117, 118, 119, 120, 121, 122, 157, 160, 212], "pathlik": [147, 157], "patten": 164, "pattern": [2, 17, 30, 34, 35, 36, 43, 59, 82, 90, 110, 118, 135, 139, 158, 163, 164, 166, 169, 172, 181, 183, 185, 186, 187, 190, 192, 195, 208, 212], "pattern1": 194, "pattern2": 194, "pattern_nam": 172, "pattern_t": 172, "pattern_util": 34, "patterncheckcontext": 163, "patternconstructor": 169, "patternn": 194, "patterntupl": 169, "patternvar": 169, "patternwildcard": 169, "paul": 212, "pave": 4, "pb": 52, "pbqptuner": 108, "pbtxt": 52, "pc": [4, 35, 80, 93, 118, 171], "pc_offset": 162, "pdf": [168, 170, 187], "peephol": 187, "peer": 196, "penalti": 59, "pend": [67, 69, 80, 97, 105, 106, 107, 161, 169, 185], "peopl": [9, 10, 44, 123, 139], "pep": 160, "per": [16, 32, 73, 80, 85, 88, 109, 126, 146, 155, 156, 158, 162, 163, 170, 173, 177, 178, 182, 186, 187], "per_task_early_stop": 146, "percent": [75, 177], "percentag": 75, "percentnod": 177, "perceptron": [171, 193], "perciev": 123, "perf": 93, "perfect": [8, 123, 183], "perfectli": [9, 194], "perform": [1, 2, 4, 5, 9, 18, 20, 27, 31, 34, 35, 36, 37, 41, 43, 56, 58, 59, 64, 65, 70, 71, 72, 75, 84, 88, 89, 90, 93, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 117, 118, 123, 124, 129, 134, 136, 138, 139, 140, 141, 143, 146, 147, 148, 158, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 181, 183, 185, 186, 187, 188, 194, 195, 196, 198, 201, 204, 209, 210], "performac": 62, "period": [9, 16, 167, 185], "peripher": 118, "perm": 147, "permit": [136, 192, 195], "permut": [147, 160, 161, 169, 186, 187], "permute_dim": [22, 23, 43, 44, 110, 111, 160, 161, 163], "permute_dims1": [22, 23, 43, 44, 110], "permutedimsattr": 161, "persist": 36, "person": [9, 10, 118], "perspect": [192, 195], "pertain": 9, "pertin": [30, 195], "petalinux": 66, "pf": 36, "phase": [2, 31, 49, 82, 89, 113, 172, 181, 183, 195, 205, 208], "philosophi": 5, "phone": [97, 105, 107, 180], "physic": [1, 6, 10, 11, 73, 74, 79, 80, 108, 116, 117, 121, 122, 124, 143, 156], "pi": [4, 5, 12, 62, 76, 77, 97, 105, 107, 109, 161, 198], "pi_cl": 154, "pi_class": 154, "pick": [9, 14, 15, 34, 58, 67, 75, 90, 104, 105, 106, 107, 113, 117, 118, 122, 123, 147, 165, 201, 205, 208], "pick_best": [67, 105, 106, 107, 147], "pickl": [126, 147, 148, 160], "pictur": 4, "pid": 69, "piec": [9, 39, 67, 124, 160, 165, 172], "piecewis": 170, "pil": [46, 48, 49, 50, 51, 52, 53, 67, 69, 70, 71, 73, 74, 118, 119, 121, 202, 210], "pillow": [49, 66, 118, 119, 210], "ping": 9, "pip": [16, 46, 47, 48, 49, 50, 51, 52, 53, 67, 72, 74, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 131, 143, 144, 210, 212], "pip3": [66, 104, 105, 106, 107, 143, 201, 210], "pipe": [122, 175], "pipe_config": 130, "pipelin": [2, 4, 7, 37, 41, 43, 44, 56, 61, 84, 110, 111, 127, 128, 132, 160, 162, 183, 186, 188, 195, 198, 206], "pipeline_executor": 130, "pipeline_executor_build": 130, "pipeline_mod_factori": 130, "pipeline_modul": 130, "pipelineconfig": 130, "pixel": [88, 123, 160, 161, 168, 170, 187], "pjreddi": 47, "pkg_path": 68, "pkl": 126, "pkl_file": 126, "pl": 66, "place": [5, 7, 9, 12, 17, 34, 35, 39, 58, 60, 79, 80, 82, 89, 93, 118, 119, 123, 146, 148, 160, 161, 162, 163, 169, 170, 181, 183, 186, 187, 194, 199, 202], "placehold": [0, 5, 22, 30, 36, 37, 61, 82, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 109, 129, 132, 134, 135, 136, 138, 139, 140, 146, 147, 148, 150, 155, 159, 160, 165, 181, 185, 187, 189, 195, 200, 201, 204, 208, 209, 212], "placeholder1": 212, "placeholder_1": [101, 204], "placeholder_10": 101, "placeholder_11": 101, "placeholder_12": 101, "placeholder_13": 101, "placeholder_14": 101, "placeholder_2": [101, 204], "placeholder_3": [101, 204], "placeholder_4": 101, "placeholder_5": 101, "placeholder_6": 101, "placeholder_7": 101, "placeholder_8": 101, "placeholder_9": 101, "placeholder_shar": 204, "placeholder_shared_1": 204, "placeholderop": [146, 181], "placement": [9, 161], "plai": [84, 131], "plain": [108, 160, 187, 197], "plaintext": 7, "plan": [118, 119, 147, 158, 161, 163, 186], "plan_siz": 147, "planandupdatebufferallocationloc": 186, "planar": 59, "plandevic": 172, "plane": [147, 160], "planner": 163, "platform": [7, 9, 16, 38, 47, 58, 59, 60, 61, 62, 66, 69, 74, 75, 76, 80, 81, 93, 94, 102, 109, 110, 115, 116, 117, 118, 119, 121, 122, 124, 143, 148, 157, 165, 169, 194, 200, 202, 205, 208, 210], "platinum": 108, "pleas": [2, 4, 9, 10, 12, 13, 16, 17, 23, 30, 35, 39, 41, 43, 44, 46, 47, 48, 49, 51, 52, 53, 56, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 80, 84, 85, 89, 90, 99, 111, 113, 119, 126, 131, 140, 143, 148, 151, 159, 161, 167, 169, 170, 176, 183, 186, 187, 192, 197, 202, 210], "plenti": 104, "plevel": [155, 165], "plotter": 148, "plt": [47, 48, 49, 53, 67, 123], "plu": [16, 157, 183, 195], "plug": [4, 66, 84, 101], "plugin": 176, "pmc": [9, 11, 17], "png": [46, 48, 49, 50, 51, 53, 67, 69, 70, 71, 73, 121, 123, 202, 210], "pod": [2, 132, 162, 185], "point": [1, 4, 17, 27, 35, 56, 58, 65, 66, 73, 81, 97, 118, 123, 138, 146, 147, 152, 155, 162, 168, 169, 170, 175, 180, 181, 183, 185, 186, 187, 191, 192, 194, 195, 205, 208, 211], "point2knob": 147, "pointer": [1, 2, 36, 63, 101, 132, 139, 155, 176, 185, 186, 187, 191, 192, 195, 209, 212], "pointertyp": 155, "pointervaluetyperewrit": 186, "pointwise_channel": 171, "polici": [9, 16, 90, 96, 101, 104, 146, 147, 200, 201, 208], "polish": 9, "pollut": 189, "polymorph": [172, 190, 195], "ponit": 56, "pool": [36, 58, 155, 161, 169, 170, 173, 187], "pool1d": 187, "pool2d": 187, "pool2dattr": 161, "pool3d": 187, "pool_grad": 187, "pool_info_properti": 155, "pool_max": [98, 100], "pool_nam": 155, "pool_siz": [58, 68, 85, 111, 161, 170, 206], "pool_typ": 187, "pooled_s": 173, "poolinfo": 155, "poolinfoproperti": 155, "poor": [101, 172], "poorli": 123, "pop": [14, 85, 113, 183, 188], "pop_siz": [67, 105, 106, 107, 108, 147, 202], "pop_trac": 188, "popcount": [181, 185, 189], "popen": 174, "popensess": 174, "popped_inst": 183, "popul": [20, 35, 123, 146, 162, 172], "popular": [4, 113, 202], "port": [56, 58, 66, 67, 68, 69, 70, 71, 80, 97, 99, 105, 106, 107, 109, 119, 142, 146, 147, 171, 174, 175, 211], "port_end": 174, "port_numb": 211, "portabl": [63, 70, 71, 123, 199, 201], "portion": [162, 178, 192, 195, 208], "posit": [0, 2, 12, 34, 56, 63, 113, 147, 148, 158, 160, 161, 169, 172, 173, 174, 181, 183, 185, 186, 187, 208], "posites2": 167, "posix": 122, "posix_popen_serv": 174, "posixpath": 118, "possess": [25, 31], "possibl": [1, 2, 4, 5, 7, 8, 9, 12, 13, 16, 20, 27, 35, 56, 59, 62, 63, 64, 65, 75, 119, 126, 129, 131, 134, 135, 146, 147, 148, 149, 155, 161, 162, 163, 165, 166, 169, 170, 172, 174, 178, 183, 185, 186, 187, 191, 192, 193, 195, 201, 208, 209, 211], "possibli": [2, 159, 163, 183], "post": [7, 15, 39, 73, 82, 148, 156, 158, 162, 164, 166, 172, 181, 184, 191, 202], "post_attention_layernorm": 113, "post_order_visit": [82, 85, 158, 164, 184], "post_tun": 156, "postord": 184, "postproc": 156, "postprocess": [80, 183, 210], "postprocessor": 156, "potenti": [8, 9, 11, 20, 35, 43, 66, 143, 156, 158, 160, 162, 178, 183, 208, 211], "pov": 20, "pow": 185, "power": [2, 4, 18, 56, 58, 65, 66, 80, 119, 123, 126, 147, 161, 169, 181, 185, 187, 189, 191, 195, 208], "power2": 147, "pprint": [85, 113], "pr": [7, 8, 9, 10, 14, 16, 17, 32, 34, 64, 194], "practic": [9, 11, 12, 20, 31, 36, 56, 96, 97, 98, 99, 100, 101, 104, 113, 123, 200, 201, 210], "practition": 190, "pragma": [96, 104, 139, 181, 186, 200], "pragma_import_llvm": 139, "pragma_kei": 186, "pragma_scop": 181, "pragma_typ": 181, "pragma_valu": 181, "pragmat": 30, "prc": 80, "pre": [2, 17, 36, 41, 44, 56, 58, 68, 73, 74, 82, 85, 97, 98, 99, 100, 105, 106, 107, 108, 110, 111, 113, 142, 144, 146, 147, 148, 152, 156, 160, 161, 162, 166, 169, 170, 172, 180, 181, 183, 184, 185, 191, 192, 193, 194, 202, 205, 206], "pre_comput": 187, "pre_order_visit": 184, "pre_tun": 156, "prebuilt": [56, 58, 68], "precis": [8, 30, 65, 66, 89, 108, 160, 161, 163, 170, 171, 172, 187], "precomput": [183, 187], "precondit": 183, "pred": 126, "predefin": [56, 155], "predic": [147, 181, 183, 185], "predict": [46, 48, 50, 51, 52, 53, 64, 69, 70, 71, 74, 90, 97, 98, 99, 100, 121, 122, 146, 147, 156, 161, 170, 173, 187, 201, 202, 210], "predict_net": 167, "predict_stag": 146, "prefer": [8, 13, 16, 36, 79, 97, 98, 99, 100, 165, 172], "prefetch": [181, 185, 186], "prefil": 44, "prefill_chunk_s": 113, "prefill_logit": 44, "prefill_str": 113, "prefix": [13, 66, 67, 101, 105, 106, 107, 108, 143, 147, 159, 160, 163, 171, 172, 181, 187, 192, 202], "preliminari": [181, 189], "preload": 64, "preloadcustomsketchrul": [101, 146], "preloadmeasuredst": [96, 146, 200], "prelu": [170, 187], "prelud": [169, 171, 191], "preorder": 184, "prepack": 163, "prepapr": 76, "prepar": [15, 16, 43, 62, 73, 80, 118, 156, 165, 172, 203, 209], "prepare_param": 126, "prepare_test_lib": 60, "prepend": [160, 161, 169], "preper": 75, "preprint": 171, "preprocess": [48, 51, 52, 53, 66, 67, 73, 80, 121, 123, 126, 162, 163, 178, 187, 210], "preprocess_input": 48, "prequant": [76, 77, 198], "prerequisit": [4, 53, 56, 74, 183], "presenc": 143, "present": [16, 20, 30, 34, 43, 79, 118, 146, 162, 163, 167, 178, 183, 185, 187, 189, 191, 195, 202, 210], "preserv": [82, 161, 167, 169, 183], "preserve_pytorch_scop": 167, "preserve_unit_it": [31, 183], "preserve_unit_loop": [31, 183], "press": 118, "presum": [10, 30], "pretrain": [59, 62, 65, 72, 76, 77, 121, 123, 126, 167, 198], "pretti": [36, 96, 123, 166, 169, 172, 192, 200], "pretty_print": [166, 169], "prev_shap": [169, 187], "prevent": [11, 123, 143, 169], "previou": [2, 9, 15, 17, 23, 31, 36, 43, 56, 79, 97, 98, 99, 100, 110, 132, 135, 147, 164, 169, 170, 187, 192, 195, 201, 202, 208, 210], "previous": [0, 1, 119, 159, 192, 201, 202, 210, 211], "prim": [162, 163, 165], "prim_func": [20, 22, 23, 25, 27, 30, 31, 43, 82, 89, 90, 96, 110, 134, 135, 136, 139, 140, 159, 161, 162, 163, 165, 181, 183, 185, 200, 204, 208, 209], "prim_func_pass": [82, 186], "prim_valu": 163, "primal": 185, "primari": [1, 2, 35, 56, 75, 183, 186, 191], "primarili": [2, 7, 31, 37, 75, 160, 163, 172], "primexpr": [146, 149, 155, 158, 160, 161, 162, 163, 166, 168, 181, 182, 183, 184, 185, 186, 187], "primexprlik": 161, "primexprwithop": [181, 185], "primfn": 101, "primfunc": [2, 4, 149, 150, 156, 158, 159, 160, 161, 162, 163, 165, 177, 181, 182, 183, 184, 185, 186], "primfunc_attr": 159, "primfunc_name_hint": 159, "primfuncnod": 186, "primfuncpass": [84, 186], "primit": [2, 4, 5, 20, 25, 26, 27, 31, 37, 59, 82, 84, 89, 104, 133, 134, 135, 137, 138, 139, 155, 161, 162, 163, 164, 165, 172, 183, 187, 192, 193, 198, 204, 205, 209], "primstructinfo": 162, "primtyp": 155, "primvalu": [113, 161, 162], "primvaluenod": 162, "princip": [20, 27], "principl": [9, 12, 15, 44], "print": [2, 4, 5, 16, 22, 23, 30, 31, 32, 35, 43, 44, 46, 47, 48, 50, 51, 52, 53, 56, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 130, 132, 134, 135, 136, 139, 140, 143, 146, 148, 154, 155, 156, 160, 161, 162, 163, 164, 166, 169, 172, 180, 181, 183, 185, 188, 192, 194, 200, 201, 202, 204, 206, 208, 209, 210, 211, 212], "print0": 17, "print_": 160, "print_after_pass_nam": 154, "print_before_pass_nam": 154, "print_best": [96, 146, 200], "print_for_debug": 146, "print_funct": [132, 134, 135, 136, 139, 140], "print_mod": [96, 146], "print_python_code_from_st": 146, "print_tabular": 160, "print_tuning_statist": 156, "print_var": 164, "printaft": 4, "printafteral": 154, "printbeforeal": 154, "printer": [165, 186], "printf": 119, "printir": [4, 84, 188], "printirbefor": 4, "println": 123, "printtableinfo": 146, "printvisitor": 35, "prior": [1, 12, 16, 66, 146, 173, 185, 186], "prior_record": 211, "priorbox": 173, "priorit": [97, 98, 99, 100], "prioriti": [56, 67, 69, 146, 147, 155, 161, 163, 172, 174], "privat": [3, 4, 10, 17, 20, 22, 23, 35, 36, 43, 59, 110, 159, 163, 186, 197], "privileg": 119, "pro": [97, 105, 107], "proactiv": 16, "prob": [160, 161, 183], "probabilist": 160, "probabl": [70, 71, 113, 118, 123, 147, 160, 161, 170, 173, 183, 202, 210], "problem": [2, 5, 7, 9, 10, 12, 16, 39, 56, 80, 101, 134, 140, 147, 157, 191, 192, 195, 197, 199, 212], "proc": [67, 68, 69, 208], "proce": [1, 17, 31, 166, 181, 184], "procedur": [4, 8, 16, 31, 35, 80, 140, 192, 211], "proceed": [66, 67], "process": [0, 1, 7, 8, 9, 10, 12, 15, 16, 18, 27, 31, 35, 36, 37, 41, 43, 44, 46, 47, 56, 64, 66, 67, 69, 80, 89, 90, 96, 97, 98, 99, 100, 101, 105, 106, 107, 110, 113, 122, 123, 124, 143, 146, 147, 156, 159, 161, 172, 174, 175, 183, 187, 191, 194, 197, 201, 202, 205, 208, 212], "process_param": 172, "processgraphdefparam": 52, "processmoduleblob": 3, "processor": [56, 62, 64, 66, 90, 93, 123, 152, 186, 199, 202, 205, 208, 210, 211], "processsess": 175, "prod": [17, 34, 65, 160, 161, 169, 170, 175, 187, 195], "produc": [0, 12, 34, 35, 56, 62, 68, 75, 79, 105, 106, 107, 117, 122, 129, 139, 143, 146, 158, 160, 161, 163, 166, 168, 170, 171, 172, 176, 181, 183, 185, 186, 191, 192, 195, 201, 202, 205, 208, 210], "producerload": 185, "producerr": 185, "producerstor": 185, "product": [4, 11, 32, 34, 56, 73, 74, 75, 104, 134, 160, 161, 169, 173, 185, 187, 197, 201, 202, 205], "prof": 177, "profil": [4, 5, 73, 85, 86, 153, 154, 156, 162, 165, 178, 185, 186, 202, 208, 210], "profile_all_align": 130, "profile_funct": 177, "profiler_vm": 93, "profileresult": [162, 178], "profit": 172, "program": [2, 4, 5, 12, 19, 20, 23, 26, 27, 34, 35, 36, 41, 43, 44, 65, 70, 71, 89, 90, 93, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 124, 136, 141, 146, 147, 148, 150, 155, 160, 162, 164, 165, 167, 171, 172, 174, 177, 180, 181, 183, 190, 191, 192, 194, 195, 196, 201, 205, 208], "program_cost_model": [100, 101, 146], "program_or_lay": 167, "programbuild": 146, "programm": [88, 89, 119, 141], "programmat": 4, "programrunn": 146, "progress": [9, 17, 27, 32, 105, 106, 107, 108, 147, 202, 210, 211], "progress_bar": [67, 105, 106, 107, 108, 117, 147, 202], "proj": 187, "proj_dim": 187, "project": [2, 9, 11, 12, 15, 16, 58, 60, 62, 113, 117, 122, 143, 157, 176, 187, 195, 203, 205], "project_dir": 157, "project_opt": [116, 117, 120, 121, 122, 157], "project_tar_path": 120, "project_typ": [116, 117, 120, 122, 123, 124], "prolog": 195, "promis": [9, 90, 147], "promot": [7, 9, 11, 15, 32, 161, 169, 186], "promote_dtyp": 186, "promote_dtype_str": 186, "prompt": 113, "prone": [105, 106, 107, 143], "proof": 187, "proofstrength": 187, "propag": [35, 75, 85, 161, 163], "proper": [16, 32, 36, 51, 72, 122, 143, 162, 170, 172], "properli": [7, 34, 53, 123, 143, 159, 191], "properti": [1, 2, 25, 26, 32, 56, 63, 118, 147, 148, 149, 155, 158, 160, 162, 163, 164, 169, 172, 175, 176, 180, 181, 183, 187, 188, 192, 194, 195, 212], "propos": [9, 10, 11, 13, 147, 173, 194, 201], "proposit": 8, "proprietori": [67, 68], "protect": [17, 96, 98], "protobuf": [52, 160, 167], "protocol": [37, 122, 147, 157], "prototxt": 167, "prototyp": [4, 5, 194, 208], "provd": 148, "prove": [25, 123, 158, 187], "proven": 12, "provi": 172, "provid": [0, 1, 2, 4, 5, 9, 10, 11, 12, 16, 17, 18, 22, 25, 27, 31, 32, 34, 35, 36, 37, 41, 43, 46, 48, 49, 50, 53, 56, 58, 59, 60, 64, 65, 66, 67, 69, 74, 75, 79, 80, 82, 84, 85, 88, 89, 90, 93, 96, 98, 101, 102, 104, 105, 106, 107, 109, 110, 111, 113, 116, 119, 122, 124, 129, 131, 132, 134, 135, 136, 139, 142, 143, 146, 147, 148, 149, 155, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 174, 175, 181, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 201, 202, 203, 204, 205, 208, 210, 211, 212], "proxi": 174, "proxy_server_kei": 174, "proxy_server_port": 174, "proxy_server_url": 174, "prune": [76, 77, 156, 198, 206], "prunebert": 75, "pseudo": [129, 201], "pseudocod": 183, "pssed": [185, 187], "psutil": [104, 105, 106, 107, 119, 143, 201], "pt": 68, "pt_inp": 73, "pt_result": 73, "pt_tensor": 73, "pt_top3_label": 73, "pth": [51, 68, 72, 73, 121], "ptr": 185, "ptr_type": 185, "ptress": 185, "ptx": [37, 148, 185, 208], "ptx_arrive_barri": 185, "ptx_arrive_barrier_expect_tx": 185, "ptx_commit_group": 185, "ptx_cp_async": 185, "ptx_cp_async_barri": 185, "ptx_cp_async_bulk": 185, "ptx_init_barrier_thread_count": 185, "ptx_ldmatrix": 185, "ptx_mma": 185, "ptx_mma_sp": 185, "ptx_wait_barri": 185, "ptx_wait_group": 185, "ptype": [4, 185], "public": [4, 5, 8, 9, 11, 12, 15, 17, 23, 34, 35, 36, 37, 141, 159, 163, 197], "publicli": 123, "publish": [17, 197], "pull": [7, 8, 9, 11, 12, 14, 15, 17, 93], "pure": [4, 20, 80, 159, 161, 162, 163, 172, 182, 183, 185, 192, 194, 208], "puriti": [158, 162, 163], "purpos": [2, 4, 5, 6, 20, 37, 66, 75, 84, 97, 98, 99, 100, 110, 122, 139, 142, 148, 152, 159, 161, 162, 163, 172, 175, 181, 185, 186, 192, 195, 205, 209], "push": [7, 15, 16, 17, 36, 56, 65, 67, 110, 141, 188], "push_back": 36, "push_trac": 188, "pusharg": 44, "pushd": 17, "put": [4, 13, 14, 16, 36, 49, 63, 80, 82, 85, 131, 138, 139, 140, 170, 195, 208], "pwd": [16, 53, 69, 80], "px": 61, "px_quant_siz": 66, "py": [4, 8, 12, 13, 14, 16, 17, 22, 23, 24, 29, 30, 31, 34, 37, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 80, 82, 83, 84, 85, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 143, 147, 156, 157, 158, 161, 163, 168, 170, 171, 172, 182, 186, 194, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212], "py3": [51, 67, 68, 70, 71, 72, 73, 121, 123, 126], "py_stmt": 183, "pyc": [16, 116], "pyexprmut": [23, 162], "pyexprvisitor": 162, "pyfunc": [169, 181], "pygment": 183, "pylint": [8, 23, 110, 113], "pypi": 50, "pyplot": [47, 48, 49, 53, 67, 123], "pyrunn": 156, "pyseri": [116, 117, 118, 120, 121, 122, 124], "pytest": [7, 8, 16, 79], "python": [1, 2, 5, 7, 9, 13, 15, 22, 23, 27, 31, 32, 35, 36, 37, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 80, 82, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 123, 126, 129, 130, 131, 134, 135, 136, 138, 139, 140, 141, 146, 147, 148, 151, 155, 157, 160, 161, 162, 165, 167, 169, 171, 174, 175, 177, 180, 181, 183, 185, 189, 191, 192, 193, 194, 195, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 212], "python2": [104, 105, 106, 107], "python3": [17, 32, 51, 56, 64, 66, 67, 68, 69, 70, 71, 72, 73, 80, 97, 98, 99, 100, 116, 117, 120, 121, 122, 123, 124, 126, 143], "pythonpath": [16, 53, 56, 69, 70, 71, 80, 109, 124, 143, 210], "pytorch": [4, 22, 41, 43, 44, 49, 54, 55, 56, 71, 76, 77, 84, 97, 98, 99, 100, 110, 111, 113, 115, 125, 143, 148, 160, 161, 167, 169, 187, 198, 205, 211], "pytorch_half_pixel": [161, 168, 187], "pyxir": 66, "q": [7, 113, 123, 161, 169, 170, 172, 185, 187], "q_": 185, "q_multiply_shift": 185, "q_multiply_shift_per_axi": 185, "q_output": 161, "q_proj": 113, "qat": 172, "qbase": 119, "qconfig": [73, 119], "qemu": [122, 124, 199], "qemu32": 124, "qemu_x86": [116, 124], "qfloat": 180, "qkv": 113, "qkv_proj": 113, "qmobilenet": 73, "qmodel": 73, "qnn": [58, 74, 167, 172, 187], "qnn_conv2d_alter_layout": 187, "qnn_dense_alter_layout": 187, "qnn_requantize_alter_layout": 187, "qq": 123, "qread": 119, "qsize": 119, "qualcomm": 56, "qualifi": [167, 172], "qualiti": [11, 15, 16], "quant_max": 73, "quant_min": 73, "quant_output_scal": 120, "quant_output_zero_point": 120, "quantifi": 123, "quantiz": [2, 64, 66, 120, 121, 139, 155, 161, 164, 167, 170, 172, 187, 194], "quantization_paramet": 120, "quantize_conv_bias_mkldnn_from_var": 167, "quantize_model": 73, "quantized_model": 123, "quantized_model_path": 123, "quantizeinput": 187, "queri": [1, 2, 6, 36, 37, 56, 62, 69, 80, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 113, 146, 147, 156, 160, 161, 165, 183, 185, 191, 192, 197, 200, 201], "query_ir_modul": 156, "query_rpc_track": [67, 69, 80, 97, 105, 106, 107], "query_schedul": 156, "query_tuning_record": 156, "question": [8, 10, 12, 20, 86, 89, 197], "queu": 1, "queue": [1, 56, 67, 69, 80, 97, 105, 106, 107, 119, 170, 175, 187], "quick": [5, 41, 42, 45, 48, 50, 51, 56, 66, 67, 72, 123, 131, 141, 176, 181, 185, 198, 201, 203, 207, 208], "quick_start": [44, 45, 198], "quickli": [4, 9, 11, 16, 17, 37, 41, 44, 56, 110, 123, 138, 144, 146], "quit": [5, 16, 62, 75, 123, 134, 194], "r": [2, 18, 22, 23, 34, 36, 43, 44, 64, 66, 75, 89, 110, 111, 113, 115, 116, 117, 118, 120, 122, 124, 125, 126, 139, 142, 149, 152, 159, 160, 161, 162, 163, 182, 185, 195, 198, 202, 210], "r1": 53, "r_": 187, "r_0": [158, 187], "r_1": [158, 187], "r_a": [98, 100, 158], "r_b": [98, 100], "r_k": 187, "race": 183, "radeon": 208, "radford": 171, "radiat": [202, 210], "rag": 196, "rais": [2, 4, 6, 15, 47, 53, 67, 74, 85, 97, 98, 99, 100, 105, 106, 107, 108, 110, 113, 132, 141, 147, 148, 151, 155, 156, 157, 160, 162, 169, 172, 180, 182, 183, 185, 187, 188, 194, 202, 208], "raise_error": 147, "ram": [118, 123], "rama": [56, 67, 68], "ramp": [101, 185], "ran": [7, 174], "rand": [43, 44, 90, 93, 110, 111, 117, 147, 160, 163, 169, 208], "rand_stat": 156, "rand_var": 183, "rand_var_or_sref": 183, "rand_var_or_stmt": 183, "randint": 148, "randn": [43, 51, 67, 68, 70, 71, 101, 111, 121, 160, 189], "random": [30, 31, 37, 43, 44, 56, 58, 59, 61, 65, 67, 68, 72, 75, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 117, 123, 129, 130, 132, 134, 135, 139, 146, 147, 156, 160, 163, 169, 171, 183, 185, 186, 187, 189, 200, 201, 202, 204, 206, 208], "random_bsr_matrix": [75, 101], "random_len": 171, "random_param": [97, 100], "random_sparse_bert_param": 75, "random_walk": 147, "randomli": [75, 117, 123, 146], "randommodel": [146, 156], "randomtun": [67, 105, 106, 107, 108, 147, 201, 202], "rang": [2, 20, 25, 27, 30, 31, 32, 43, 47, 66, 73, 74, 75, 82, 89, 90, 113, 119, 120, 123, 126, 134, 135, 136, 138, 139, 140, 147, 152, 155, 160, 161, 169, 170, 173, 181, 183, 185, 186, 187, 189, 191, 200, 201, 202, 204, 208, 209, 210], "range_idx": 147, "range_length": [104, 147, 201], "range_of_i": 27, "range_of_j": 27, "range_of_k": 27, "rank": [67, 105, 106, 107, 108, 146, 147, 161, 169, 183, 187, 192, 202, 210], "rapese": 52, "rare": [9, 155, 174], "rasp": 180, "rasp3b": [71, 147], "rasp4b": 97, "raspberri": [5, 12, 62, 76, 77, 97, 105, 107, 109, 180, 198], "rate": [90, 118, 123, 160, 161, 168, 170, 187, 208], "rather": [2, 31, 34, 56, 72, 75, 90, 116, 118, 121, 157, 160, 161, 162, 163, 164, 165, 167, 168, 169, 183, 186, 187, 191, 192, 194], "ratio": [123, 173, 177], "rational": 16, "raw": [46, 47, 48, 49, 50, 51, 52, 53, 64, 67, 69, 70, 71, 72, 73, 74, 82, 116, 118, 119, 120, 121, 122, 123, 124, 147, 156, 173, 183, 186, 187, 202, 210, 211], "raw_data": [43, 104], "raw_path": 119, "rb": [0, 52, 53, 74, 75, 116, 118, 120, 122], "rc": [17, 88, 96, 98, 99, 100, 104, 129], "rc0": 17, "rc1": 17, "rc2": 17, "rc_outer": 204, "rc_outer_out": 96, "rccl": 175, "rci": [88, 104], "rcm": 104, "rcnn": 72, "rco": [88, 104], "rdom": 185, "re": [7, 8, 17, 20, 30, 34, 35, 36, 49, 90, 96, 97, 119, 123, 146, 170, 176, 181, 183, 184, 185, 187, 200, 202, 205, 208, 210], "re_data": [169, 187], "re_output": [169, 187], "reach": [8, 11, 13, 37, 141, 147, 191, 195], "read": [0, 2, 3, 7, 15, 20, 22, 23, 27, 30, 31, 36, 43, 46, 48, 52, 53, 56, 65, 67, 69, 70, 71, 73, 74, 75, 82, 97, 98, 100, 110, 116, 118, 120, 122, 123, 124, 131, 142, 146, 148, 149, 155, 157, 159, 163, 169, 181, 182, 183, 185, 186, 202, 209, 210], "read_bandwidth_bytes_per_cycl": 155, "read_buffer_index": 183, "read_latency_cycl": 155, "read_lin": 146, "readabl": [9, 11, 12, 13, 15, 52, 90, 136, 138, 151, 156, 177, 202, 204, 208, 210], "reader": [8, 12, 74, 82, 146, 181], "readi": [11, 20, 27, 36, 67, 90, 96, 101, 113, 170, 198, 200, 203, 207, 208], "readlin": [47, 50, 51, 53, 119, 121], "readm": [12, 69, 97, 105, 107], "real": [4, 12, 36, 56, 67, 68, 69, 70, 71, 75, 80, 109, 110, 116, 122, 136, 147, 155, 163, 167, 169, 172, 181, 187, 201, 202, 210], "realiti": [123, 161, 162], "realiz": [4, 75, 185], "realizevdevic": [161, 163], "realli": [8, 80, 123, 162, 178], "rearrang": [163, 173], "reason": [2, 7, 8, 11, 13, 18, 20, 35, 36, 56, 58, 73, 84, 119, 170, 172, 187, 191, 195, 202, 210], "rebas": [14, 16, 181], "rebuild": [7, 16, 66, 146], "rebuilt": 65, "recal": [34, 36, 201, 208, 210], "recalcul": 172, "recast": 172, "receiv": [0, 4, 9, 118, 119, 157, 161, 185, 191], "recent": [7, 13, 15, 16, 17, 39, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 143, 185, 200, 201], "recept": 173, "reciev": 185, "recip": 204, "reciproc": [9, 161, 173, 181, 185], "recogn": [8, 11, 34, 58, 124, 151, 180], "recognit": [123, 171], "recombin": 49, "recommend": [4, 8, 12, 13, 15, 17, 22, 34, 58, 59, 61, 62, 69, 72, 73, 79, 89, 93, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 118, 123, 124, 126, 135, 143, 147, 151, 163, 172, 177, 185, 194, 197, 199, 201, 202, 210], "recompil": 41, "recomput": [160, 161, 183], "recompute_scale_factor": 160, "reconstruct": [3, 8, 147, 161, 169, 183], "record": [3, 8, 36, 56, 67, 72, 85, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 146, 156, 188, 201, 202, 205, 210, 211], "record_fil": 104, "recordread": 146, "recordtofil": [96, 97, 98, 99, 100, 101, 146, 200], "recov": [3, 15, 36, 187], "recover_measure_input": 146, "recreat": 208, "rectifi": [160, 161, 170], "recur": 9, "recurisv": 164, "recurr": [133, 137, 191, 198], "recurs": [5, 17, 35, 36, 62, 66, 69, 70, 71, 82, 109, 142, 143, 155, 158, 160, 164, 169, 184, 190, 192, 194, 195, 196], "red": [7, 67, 148], "red_buf0": 134, "redirect": 166, "redirect_to": 166, "redistribut": 161, "redistribute_replica_to_shard": 161, "redo": 5, "reduc": [16, 27, 30, 31, 56, 65, 66, 75, 88, 90, 97, 98, 99, 100, 104, 110, 116, 120, 123, 133, 134, 137, 143, 146, 160, 161, 163, 169, 170, 172, 175, 181, 183, 185, 186, 187, 198, 201, 204], "reduce_axi": [30, 88, 89, 90, 96, 104, 134, 139, 140, 146, 147, 181, 183, 185, 200, 201, 204, 208], "reduce_h": 97, "reduce_init": 181, "reduce_rang": 73, "reduce_reset": 139, "reduce_scop": 204, "reduce_temp0": 204, "reduce_temp0_1": 204, "reduce_temp0_2": 204, "reduce_upd": [139, 181], "reduce_w": 97, "reducebranchingthroughovercomput": 186, "reduct": [26, 27, 88, 89, 90, 104, 110, 113, 133, 137, 146, 147, 149, 160, 161, 169, 170, 181, 183, 185, 186, 187, 193, 194, 198, 208], "reduction_block": 149, "redund": [16, 163, 186], "ref": [12, 17, 35, 36, 169, 201], "ref_count": 164, "ref_log": 147, "refcreat": 169, "refer": [2, 4, 5, 8, 9, 13, 17, 23, 27, 30, 31, 35, 36, 41, 43, 44, 46, 48, 49, 50, 51, 52, 53, 56, 57, 58, 62, 64, 66, 68, 72, 73, 75, 80, 84, 85, 89, 99, 104, 106, 113, 126, 131, 135, 140, 145, 147, 148, 151, 155, 158, 159, 160, 161, 162, 164, 165, 167, 168, 169, 170, 171, 172, 175, 176, 180, 181, 183, 187, 191, 192, 195, 196, 202, 208, 210, 211], "referenc": [5, 172, 192], "referenti": 155, "refit": 147, "reflect": [2, 5, 16, 37, 59, 90, 143, 161, 168, 170, 176, 185, 187, 208], "reflog": 14, "reformat": 16, "refread": 169, "refresh": [82, 118], "reftyp": 169, "refvalu": 165, "refwrit": 169, "reg": [67, 105, 106, 107, 108, 147, 202], "regard": [9, 16, 147, 158, 161, 171, 183, 189, 194, 201], "regardless": [161, 169, 172, 173, 208], "regener": [118, 183], "regex": 188, "region": [8, 20, 27, 47, 64, 88, 149, 161, 163, 164, 168, 170, 172, 181, 182, 183, 185, 186, 187], "region_begin_op": 164, "region_cov": 183, "region_end_op": 164, "regioncfg0": 119, "regioncfg1": 119, "regioncfg2": 119, "regioncfg3": 119, "regioncfg4": 119, "regioncfg5": 119, "regioncfg6": 119, "regioncfg7": 119, "regist": [1, 2, 4, 5, 13, 34, 37, 56, 58, 63, 65, 67, 85, 88, 89, 101, 106, 119, 132, 146, 147, 151, 155, 156, 159, 160, 161, 162, 163, 166, 172, 174, 175, 180, 183, 185, 188, 192, 206, 212], "register_comput": 34, "register_df_nod": 166, "register_error": 151, "register_extens": 63, "register_func": [132, 160, 174], "register_gradi": [34, 161], "register_intrin_low": 155, "register_object": [4, 37, 156], "register_op_attr": 155, "register_pipelin": [113, 162], "register_relay_nod": 4, "register_shape_func": 34, "register_strategi": 34, "register_task_input_check_func": 146, "register_topi_comput": 147, "register_topi_schedul": 147, "register_workload": [96, 101, 146, 200], "registers_per_block": 70, "registor": 185, "registr": [34, 35, 36, 63, 147, 177, 180], "registri": [1, 4, 5, 34, 36, 37, 146, 155, 180, 186, 192], "regress": [75, 104, 108, 147, 173], "regular": [9, 56, 59, 64, 65, 75, 160, 173, 187, 194, 197, 208], "regular_non_max_suppress": 173, "regularli": 16, "reimport": 75, "reindex": 183, "reindex_block": 183, "reindex_cache_read": 183, "reindex_cache_writ": 183, "reinterpret": [169, 185, 187, 204], "reinterpret_cast": 3, "reinvent": 9, "reject": [191, 195], "rel": [9, 32, 35, 36, 66, 79, 113, 147, 148, 160, 161, 171, 174, 194, 195], "rel_nam": 155, "relai": [0, 2, 3, 4, 33, 36, 37, 56, 57, 62, 64, 66, 68, 70, 71, 74, 86, 93, 97, 98, 99, 100, 105, 106, 107, 108, 116, 117, 118, 120, 121, 122, 123, 128, 146, 147, 148, 152, 153, 154, 155, 157, 158, 161, 182, 187, 188, 198, 205, 208, 210, 211, 212], "relat": [4, 5, 7, 9, 10, 16, 20, 35, 52, 56, 59, 62, 67, 126, 146, 147, 155, 158, 161, 163, 168, 170, 173, 174, 183, 186, 187, 190, 197, 208], "relationship": [2, 3, 18, 20, 27, 36, 80, 138, 183, 194, 195], "relative_byte_offset": 161, "relax": [23, 24, 30, 41, 44, 111, 141, 155, 178, 187, 188, 198], "relax_cr": [22, 24, 198], "relax_dynamo": 160, "relax_mlp": 20, "relax_transform": [23, 24, 198], "relax_vm": 153, "relaxmodel": [43, 110], "relaxmodul": 22, "relaxmodulewithtir": 22, "relay_fil": 75, "relay_func": 165, "relay_func_typ": 182, "relay_mod": [85, 116, 117, 118, 120, 121, 148, 154], "relay_param": [75, 85, 131, 148], "relay_quick_start": [198, 206, 207], "relay_register_op": 34, "relay_viz": 131, "relaycallnodediff": 85, "relayexpr": [148, 155, 158, 159, 160, 161, 162, 163, 166, 169, 170, 171, 187], "relaynod": 4, "relayreftyp": [155, 169], "relaytotir": 172, "relayvisu": [131, 148], "releas": [11, 15, 16, 48, 56, 58, 66, 67, 69, 73, 80, 105, 106, 107, 116, 117, 118, 119, 120, 122, 124, 126, 142, 143, 144, 148, 157, 176, 195, 197], "relev": [5, 7, 9, 12, 16, 17, 30, 143, 192, 210], "reli": [4, 7, 25, 35, 62, 84, 85, 96, 97, 98, 99, 100, 104, 118, 158, 167, 172, 183, 197, 200, 210], "reliabl": 12, "relink": 109, "reloc": 31, "relocat": 148, "relpath": [3, 66, 67, 68, 69, 70, 71, 97, 99, 105, 107, 109, 139, 148, 206, 208], "relu": [13, 18, 20, 22, 23, 25, 27, 43, 44, 58, 59, 65, 68, 85, 96, 101, 110, 111, 126, 129, 130, 159, 160, 161, 163, 170, 171, 187, 191, 194, 204, 206], "relu0": 0, "relu0_nchw8c": 0, "relu1": [22, 23, 43, 44, 110], "relu1_nchw8c": 0, "relu2_nchw2c": 0, "relu__0": 68, "relu__1": 68, "relu__10": 68, "relu__11": 68, "relu__12": 68, "relu__13": 68, "relu__14": 68, "relu__15": 68, "relu__16": 68, "relu__17": 68, "relu__18": 68, "relu__19": 68, "relu__2": 68, "relu__20": 68, "relu__21": 68, "relu__22": 68, "relu__23": 68, "relu__24": 68, "relu__25": 68, "relu__26": 68, "relu__27": 68, "relu__28": 68, "relu__29": 68, "relu__3": 68, "relu__30": 68, "relu__31": 68, "relu__32": 68, "relu__33": 68, "relu__34": 68, "relu__35": 68, "relu__36": 68, "relu__37": 68, "relu__38": 68, "relu__39": 68, "relu__4": 68, "relu__40": 68, "relu__41": 68, "relu__42": 68, "relu__43": 68, "relu__44": 68, "relu__45": 68, "relu__46": 68, "relu__47": 68, "relu__48": 68, "relu__5": 68, "relu__6": 68, "relu__7": 68, "relu__8": 68, "relu__9": 68, "relu_cel": 191, "relurewrit": 23, "relutogelu": 23, "relwithdebinfo": 143, "remain": [1, 31, 149, 158, 163, 169, 187, 195, 208], "remaind": [8, 160, 161, 163, 169, 181, 185, 205], "remaining_shap": [170, 187], "remap": [20, 22, 23, 27, 30, 31, 43, 110, 155, 159, 162, 163, 181, 182, 183, 185], "remark": [9, 58, 59, 65], "remedi": 35, "rememb": [9, 10, 11, 16, 17, 36, 167, 208], "remind": 16, "remor": 56, "remot": [2, 8, 12, 14, 16, 56, 58, 64, 73, 80, 97, 99, 105, 107, 124, 146, 147, 151, 152, 157, 162, 174, 175, 178, 197, 202, 210], "remote_arrai": 175, "remote_path": 67, "remov": [4, 6, 9, 16, 17, 49, 51, 65, 66, 67, 68, 70, 71, 72, 73, 74, 105, 106, 107, 117, 119, 123, 126, 143, 146, 147, 148, 155, 157, 158, 160, 161, 162, 163, 169, 172, 174, 176, 183, 186, 187, 210], "remove_all_unus": [158, 162, 163], "remove_index_check": 146, "remove_no_mac_subgraph": 65, "remove_postproc": 183, "remove_rv": 183, "remove_unus": 162, "removeassum": 186, "removenoop": 186, "removepuritycheck": [113, 163], "removepuritytrack": 163, "removeredundantreshap": 163, "removestoreundef": 186, "removeunusedfunct": 172, "removeunusedoutput": 163, "removeunusedparamet": 163, "removeweightlayoutrewriteblock": 186, "ren": 171, "renam": [118, 123, 155, 159, 163, 167, 187], "render": [16, 56, 85, 148, 151, 154, 192, 202, 210], "render_kwarg": 148, "renew_def": 184, "renorm": [160, 186], "renormalize_top_p_top_k_prob": 160, "renormalizesplitpattern": 186, "reorder": [25, 31, 37, 59, 88, 89, 90, 96, 101, 104, 139, 147, 161, 162, 163, 181, 183, 186, 189, 192, 200, 201, 208, 209], "reorder_block_iter_var": 183, "reorderd": 189, "reorderent": 147, "reorderpermutedimsafterconcat": 163, "reorderspac": 147, "reordertakeaftermatmul": 163, "reorg": 173, "reorganis": 173, "rep": [161, 169, 187], "repeat": [12, 56, 67, 68, 69, 73, 74, 75, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 117, 146, 147, 152, 160, 161, 162, 169, 178, 183, 187, 202, 210], "repeatattr": 161, "repeatedli": [152, 192, 208], "repeats_to_cooldown": [152, 162, 178], "repetit": [160, 161, 169, 187, 202, 210], "repl": 204, "replac": [2, 4, 11, 17, 23, 35, 36, 74, 75, 84, 89, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 116, 121, 123, 129, 139, 142, 143, 147, 155, 160, 161, 162, 163, 165, 166, 167, 169, 172, 183, 186, 187, 192, 194, 195, 200, 204, 210], "replace_all_us": 162, "replace_global_var": 155, "replaceconst": 84, "replai": 156, "replic": [16, 161], "repo": [5, 7, 14, 16, 17, 32, 62, 66, 90, 142, 143], "repo_bas": [52, 74], "repo_url": 47, "report": [4, 13, 16, 17, 34, 35, 67, 79, 93, 104, 147, 151, 152, 158, 162, 169, 174, 177, 178, 188, 210], "report_runtim": 75, "reportedli": 142, "repositori": [7, 12, 17, 37, 80, 116, 118, 120, 143, 208], "repostitori": 12, "repres": [1, 2, 3, 4, 5, 18, 19, 20, 22, 26, 27, 30, 34, 36, 37, 56, 58, 73, 123, 136, 138, 148, 155, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 173, 180, 181, 183, 185, 186, 187, 190, 191, 192, 193, 195, 205, 208, 210], "represent": [1, 2, 18, 22, 44, 56, 58, 59, 64, 73, 75, 123, 126, 129, 147, 148, 157, 160, 161, 165, 167, 169, 170, 171, 172, 176, 180, 182, 185, 187, 190, 195, 205, 208, 210, 211], "representative_dataset": 123, "reproduc": [16, 39, 183, 191], "reprsent": 185, "repsent": 187, "requant": [58, 73, 74, 187], "request": [7, 11, 12, 14, 15, 17, 67, 69, 80, 99, 113, 123, 142, 146, 147, 157, 160, 163, 174, 185], "request_and_run": 174, "request_hook": 8, "request_remot": [97, 99, 105, 107], "requir": [1, 3, 4, 5, 6, 7, 10, 12, 14, 16, 17, 22, 27, 34, 36, 37, 43, 48, 51, 56, 57, 58, 59, 62, 65, 67, 68, 69, 72, 73, 80, 84, 90, 96, 97, 98, 99, 100, 105, 106, 107, 113, 116, 117, 118, 119, 120, 122, 123, 124, 136, 139, 140, 143, 146, 147, 148, 150, 151, 158, 160, 161, 162, 163, 165, 166, 167, 169, 170, 172, 175, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 192, 194, 195, 199, 200, 201, 202, 205, 208, 210, 211, 212], "require_grad": 163, "require_typ": [166, 194], "required_pass": [4, 169, 172, 188], "requiredbycondit": 186, "requires_cuda": [8, 79], "requires_gpu": 79, "requires_grad_": 72, "requires_runtim": 79, "requisit": [30, 31, 56, 147], "res_mod": [4, 172], "resampl": 49, "rescal": [123, 170], "research": [5, 53, 110, 113, 141, 190, 196], "resembl": 27, "reserv": [17, 119, 159, 161, 176], "reset": [15, 119, 147, 155, 161, 170], "reset_attr": 155, "reshap": [47, 58, 64, 65, 68, 74, 111, 113, 123, 126, 158, 160, 161, 163, 169, 170, 172, 186, 187, 202], "reshape1": 0, "reshape_lik": 169, "resid": [12, 175], "residu": 171, "residual_unit": 171, "resiz": [36, 46, 48, 49, 50, 51, 52, 53, 67, 69, 70, 71, 72, 73, 74, 119, 121, 123, 160, 161, 168, 170, 183, 187, 202, 210], "resize1d": [168, 187], "resize2d": [161, 168, 187], "resize2dattr": 161, "resize3d": [168, 187], "resize_cache_index": 183, "resized_imag": [53, 119, 202, 210], "resnet": [3, 48, 62, 67, 70, 71, 85, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 111, 148, 171, 202, 206, 211], "resnet18": [2, 3, 51, 67, 70, 71, 111], "resnet18_lib": 3, "resnet18_mod": 3, "resnet18_param": 3, "resnet18_v1": 65, "resnet18_weight": [51, 67, 70, 71, 111], "resnet3d": [97, 98, 99, 100], "resnet50": [48, 56, 202, 210, 211], "resnet50_keras_new": 48, "resnet50_keras_old": 48, "resnet50_trac": 68, "resnet50_weight": 68, "resnet50_weights_tf_dim_ordering_tf_kernel": 48, "resolut": [9, 49, 168, 187], "resolv": [4, 15, 80, 84, 119, 147, 188], "resort": 183, "resourc": [15, 62, 80, 97, 98, 99, 100, 109, 118, 119, 146, 156, 157, 174, 185], "resource_handl": 122, "respap": 123, "respect": [3, 4, 15, 31, 34, 66, 84, 116, 118, 160, 161, 163, 168, 169, 170, 173, 183, 185, 187, 190, 192], "respectfulli": 9, "respond": 9, "respons": [7, 9, 11, 16, 17, 37, 88, 146, 170, 176, 183, 185, 187], "rest": [10, 36, 37, 58, 59, 64, 65, 73, 75, 110, 120, 129, 132, 138, 163, 169, 191], "restart": 17, "restor": [3, 36, 146, 163], "restrict": [3, 5, 12, 56, 79, 129, 147, 155, 161, 182, 192], "restructuredtext": 12, "result": [0, 2, 4, 5, 9, 10, 12, 17, 20, 23, 27, 31, 34, 35, 36, 37, 39, 43, 46, 51, 52, 56, 58, 67, 68, 69, 70, 71, 75, 79, 80, 82, 85, 90, 96, 98, 101, 104, 105, 106, 107, 108, 116, 118, 119, 121, 122, 130, 134, 135, 136, 139, 146, 147, 148, 149, 150, 152, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 194, 196, 200, 201, 202, 204, 206, 208, 209, 210, 212], "result_": 35, "result_data": 123, "resum": [96, 97, 98, 99, 100, 101, 146, 200], "resume_search": [96, 200], "ret": [75, 85, 101, 147, 148, 150, 158, 159, 160, 161, 162, 163, 164, 165, 169, 172, 173, 176, 178, 185, 186, 187], "ret_list": 148, "ret_nod": 160, "ret_struct_info": 162, "ret_typ": [155, 160, 161, 169, 185, 187, 195], "ret_valu": [162, 178], "retain": [16, 31, 49, 167, 172], "rethink": 171, "retrain": 75, "retreiv": 176, "retri": 174, "retriev": [4, 36, 147, 154, 156, 182, 183, 185, 192, 195], "retriv": 185, "return": [1, 2, 3, 4, 5, 8, 12, 13, 16, 18, 20, 22, 23, 30, 34, 35, 36, 37, 43, 44, 52, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 79, 82, 84, 85, 89, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 119, 121, 122, 126, 130, 131, 132, 136, 139, 140, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 195, 200, 201, 206, 208, 211, 212], "return_count": [161, 169, 187], "return_curr": 188, "return_index": 161, "return_indic": 173, "return_invers": 161, "return_unexpect": 185, "return_valu": 175, "reus": [5, 9, 88, 126, 146, 147, 148, 160, 163, 170, 172, 174, 181, 183, 187, 211], "reusch": 117, "reuse_addr": 174, "reuseabl": 191, "rev": [16, 119], "reveres": 187, "revers": [67, 105, 106, 107, 160, 161, 163, 169, 181, 183, 187], "reverse_compute_at": [31, 183], "reverse_compute_inlin": 183, "reverse_reshap": 169, "reverse_sequ": [169, 187], "revert": [7, 16], "review": [2, 7, 8, 10, 12, 15, 16, 17, 20, 196], "revisit": [204, 212], "reward": 10, "rework": 16, "rewrit": [20, 23, 26, 41, 44, 119, 134, 146, 162, 163, 166, 172, 186, 187], "rewrite_compute_bodi": 146, "rewrite_for_pre_transform": 146, "rewrite_layout_from_st": 146, "rewrite_onc": [166, 194], "rewrite_simplifi": 187, "rewrite_tensor_shap": 146, "rewritecudagraph": [113, 163], "rewritedataflowreshap": [113, 163], "rewriteunsafeselect": 186, "rewritten": [4, 23, 110, 134, 146, 162, 163, 166, 181, 182], "rewritten_layout": 146, "rf": [16, 17, 66, 134, 143, 183, 204], "rf_block": 183, "rfactor": [134, 181, 183], "rfc": [10, 11, 12, 13, 122, 146, 172, 212], "rgb": [49, 118, 123, 206], "rh": [140, 148, 155, 158, 160, 161, 162, 163, 169, 170, 181, 182, 183, 185, 187], "rhs_begin": 169, "rhs_end": 169, "rich": 56, "richer": 12, "right": [4, 14, 16, 36, 46, 47, 56, 66, 75, 116, 118, 119, 122, 123, 126, 148, 158, 161, 166, 168, 169, 170, 181, 182, 183, 185, 187, 191, 204, 208], "right_left": [169, 187], "right_right": [169, 187], "right_shift": [161, 169, 187], "risc": [180, 199], "riscv64": 62, "riscv_cpu": 180, "rjust": 208, "rk3399": [97, 99, 105, 107, 109], "rlib": [67, 69, 70, 71, 97, 105, 107], "rm": [16, 17, 66, 116, 117, 120, 122, 124, 143, 160], "rms_norm": [160, 161, 187], "rms_norm_ep": 113, "rmse": 146, "rmsnorm": [113, 160], "rmtree": [120, 123], "rng": [155, 202], "rnn": [66, 135, 171, 191], "ro": 155, "robin": [146, 156], "robust": [2, 9, 15], "rocbla": 129, "rocm": [43, 75, 106, 129, 152, 174, 176, 180, 208], "rocm_link": 148, "rocm_path": 143, "roi": [161, 168, 173, 187], "roi_align": 173, "roi_head": 72, "roi_pool": 173, "role": [9, 10, 17, 35, 113], "roll": [123, 181, 183, 186], "rollabl": 183, "rolling_buff": [181, 183], "root": [3, 16, 22, 23, 30, 31, 37, 43, 61, 66, 71, 80, 104, 105, 106, 107, 109, 110, 118, 122, 123, 136, 138, 143, 147, 148, 159, 160, 161, 162, 172, 181, 183, 185, 187, 201, 208, 209, 210], "root_dir": 80, "root_fn": 162, "root_mark": 183, "root_mod": 3, "root_modul": 3, "rope": 113, "rope_ext_factor": 113, "rope_mod": 113, "rope_sc": 113, "rope_scal": 113, "rope_theta": 113, "ropemod": 113, "rose": 68, "rotary_dim": 113, "rough": [97, 98, 99, 100, 210], "roughli": [5, 17, 181, 189], "round": [123, 146, 156, 161, 168, 169, 172, 181, 185, 187, 189, 209], "rounding_method": [161, 168, 187], "roundtripp": 183, "rout": 35, "routin": [58, 187], "row": [0, 3, 75, 90, 136, 138, 146, 147, 160, 161, 168, 169, 173, 181, 185, 187, 204, 208], "row_major": [89, 185], "row_offset": 101, "rp2040": 123, "rpc": [2, 5, 58, 62, 64, 68, 78, 98, 100, 106, 108, 112, 114, 122, 124, 141, 143, 146, 147, 151, 152, 153, 156, 157, 162, 178, 197, 198, 199, 210, 211], "rpc_host": 97, "rpc_kei": [68, 80, 211], "rpc_key0": 80, "rpc_key1": 80, "rpc_key2": 80, "rpc_port": 97, "rpc_proxi": 80, "rpc_proxy_ip": 80, "rpc_proxy_port": 80, "rpc_server": [70, 71, 80, 97, 105, 106, 107, 109], "rpc_tracker": [67, 68, 69, 80, 97, 105, 106, 107, 211], "rpc_tracker_host": [67, 68], "rpc_tracker_ip": 80, "rpc_tracker_port": [67, 68, 80], "rpcclientsess": 174, "rpcerror": 151, "rpcmodul": 5, "rpcrunner": [67, 97, 98, 99, 100, 105, 106, 107, 146, 147], "rpcserver": [70, 71, 109], "rpcsession": 174, "rpcsessiontimeouterror": 151, "rpctracker": [69, 97, 105, 106, 107], "rpi3b": [105, 107], "rpm": 65, "rpn": 173, "rpn_min_siz": 173, "rpn_post_nms_top_n": 173, "rpn_pre_nms_top_n": 173, "rr": 183, "rshift": 187, "rsqrt": [161, 169, 181, 185, 187, 189], "rss": 183, "rst": 12, "rstrip": [119, 202, 210], "rt_mod": [73, 74, 150, 162, 178], "rtmod": 66, "rto": [116, 117, 120, 122, 124, 199], "rtol": [31, 90, 96, 101, 104, 129, 132, 134, 139, 171, 200, 201, 204, 208], "rtvm": 56, "rtx": 111, "rtype": [154, 165, 185, 188], "rtype1": 12, "rule": [2, 12, 16, 34, 65, 67, 94, 95, 146, 149, 155, 156, 160, 161, 162, 163, 168, 169, 170, 172, 181, 185, 187, 188, 195, 198, 208], "rule_nam": 146, "run": [0, 1, 2, 4, 5, 7, 8, 9, 12, 16, 17, 22, 23, 30, 31, 32, 35, 37, 39, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 62, 65, 69, 70, 71, 72, 74, 80, 82, 84, 85, 88, 89, 90, 93, 97, 98, 99, 100, 104, 105, 106, 107, 108, 110, 111, 113, 115, 116, 118, 120, 121, 122, 123, 125, 131, 132, 134, 135, 136, 138, 139, 140, 142, 143, 144, 146, 147, 148, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 177, 178, 182, 186, 187, 188, 191, 192, 194, 195, 198, 199, 201, 202, 204, 205, 208, 212], "run_after_pass": [4, 85, 154], "run_as_python": 171, "run_before_pass": [4, 84, 85, 154], "run_cuda": 208, "run_dens": 75, "run_exampl": 60, "run_inference_on_imag": 52, "run_mod": 64, "run_opencl": 109, "run_pass": 4, "run_relay_graph": 75, "run_spars": 75, "run_tflite_model": 74, "run_tun": [97, 98, 99, 100], "run_tvm": 74, "run_tvm_model": 73, "runafterpass": 4, "runbeforepass": 4, "runcodegen": [110, 163], "runnabl": [37, 41, 44, 79, 109, 146, 162, 208, 209], "runner": [67, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 117, 120, 143, 146, 147, 156, 163, 201, 202, 212], "runner_futur": 156, "runner_input": 156, "runner_result": 156, "runnerfutur": 156, "runnerinput": 156, "runnerpyrunn": 156, "runnerresult": 156, "runnertyp": 156, "running_mean": [68, 161], "running_var": [68, 161], "runpass": 4, "runtim": [0, 1, 3, 4, 30, 32, 35, 37, 39, 41, 43, 44, 52, 53, 56, 58, 59, 61, 63, 64, 66, 67, 69, 72, 73, 75, 79, 82, 93, 96, 97, 98, 101, 105, 106, 107, 108, 110, 111, 113, 116, 117, 118, 119, 122, 123, 124, 129, 130, 131, 132, 141, 143, 144, 147, 148, 150, 152, 155, 157, 160, 161, 162, 163, 165, 166, 167, 169, 171, 174, 180, 181, 183, 185, 186, 195, 197, 199, 205, 206, 212], "runtime_device_index": 161, "runtimeerror": [52, 53, 74, 75, 151, 160], "runtimewarn": 84, "ruofei": 90, "rust": [2, 205], "rv": [5, 36, 37, 181], "rv0": [97, 98, 99, 100, 183], "rv1": [12, 97, 98, 99, 100, 148, 183], "rv2": 148, "rv64gc": 180, "rw": [155, 185], "rw_mask": 185, "rx": [88, 96, 98, 99, 100, 104, 138, 159, 160], "rx_func": 159, "rxi": 104, "rxm": 104, "rxo": 104, "rxplacehold": 159, "rxplaceholder_1": 159, "ry": [88, 96, 98, 99, 100, 104], "ry_out": 204, "ry_outer_out": 96, "ryi": 104, "rym": 104, "ryo": 104, "ryzen": [105, 106, 107], "s0": 101, "s1": [135, 139, 150], "s1_1": 135, "s2": [135, 150, 191], "s2b": 172, "s3": [8, 17, 61, 119, 202, 210], "s3_bucket": 61, "s3_dcp_kei": 61, "s3_logs_kei": 61, "s_": [75, 170], "s_graph_opt": 108, "s_init": [135, 181], "s_init1": 135, "s_init2": 135, "s_orig": 72, "s_scan": 135, "s_scan1": 135, "s_scan2": 135, "s_state": [135, 181], "s_state1": 135, "s_state2": 135, "s_type": 169, "s_updat": [135, 181], "s_update1": 135, "s_update2": 135, "s_update_s1": 135, "s_update_s2": 135, "sa": 147, "safe": [4, 14, 85, 97, 98, 99, 100, 161, 162, 174, 192, 208], "safetensor": 113, "safeti": [146, 158, 191], "sai": [14, 97, 98, 99, 100, 160, 161, 170, 191], "said": [3, 84], "same": [1, 2, 3, 5, 8, 9, 11, 12, 13, 16, 17, 20, 22, 27, 30, 31, 34, 36, 37, 41, 43, 44, 49, 56, 57, 61, 65, 66, 69, 70, 71, 73, 74, 75, 79, 80, 84, 88, 89, 109, 113, 117, 118, 121, 122, 123, 136, 138, 139, 140, 142, 147, 151, 155, 156, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 195, 201, 202, 204, 208, 210, 211, 212], "same_a": [35, 155, 162, 176, 182], "samp": 160, "sampl": [57, 97, 98, 99, 100, 113, 116, 119, 123, 146, 147, 148, 160, 161, 163, 168, 173, 183, 187], "sample_categor": 183, "sample_compute_loc": 183, "sample_indic": [160, 161], "sample_initial_popul": 146, "sample_int": 147, "sample_not_person": 118, "sample_not_person_path": 118, "sample_not_person_url": 118, "sample_partitioned_til": 183, "sample_path": 116, "sample_perfect_til": 183, "sample_person": 118, "sample_person_path": 118, "sample_person_url": 118, "sample_ratio": 173, "sample_simple_workload": 146, "sample_token": 113, "sample_top_p_top_k_from_sorted_prob": 160, "sample_url": 116, "samples_dir": 118, "samples_to_show": 123, "samuel": [47, 74], "sanit": 160, "saniti": [118, 160], "sanitize_input_nam": 160, "satisfi": [5, 34, 59, 147, 181, 183, 185, 186, 192, 194, 195, 210], "satur": 185, "save": [0, 2, 3, 5, 6, 10, 12, 14, 36, 49, 52, 56, 57, 61, 65, 68, 69, 70, 71, 75, 97, 98, 99, 100, 109, 110, 113, 118, 123, 126, 146, 147, 148, 155, 156, 157, 160, 161, 162, 163, 167, 169, 178, 183, 202, 204, 210], "save_at_exit": 148, "save_funct": [162, 178], "save_json": [75, 155], "save_param_dict": [57, 75, 118, 169], "save_record": 146, "save_relai": 75, "saveabl": 211, "saved_nam": [162, 178], "saver": 52, "saves_model": 68, "savetobinari": 3, "savez": 210, "scalabl": [181, 183, 185, 187], "scalar": [160, 161, 162, 163, 169, 170, 173, 181, 185, 186, 187, 192, 195], "scalar_input": 181, "scalar_param": 181, "scalar_typ": 169, "scale": [49, 73, 85, 97, 105, 107, 111, 120, 123, 147, 148, 155, 160, 161, 168, 170, 171, 172, 173, 187, 190, 192, 206], "scale_d": [170, 187], "scale_factor": [72, 160], "scale_h": [170, 187], "scale_shift_nchw": 187, "scale_shift_nchwc": 187, "scale_shift_nhwc": 187, "scale_w": [170, 187], "scaled_dot_product_attent": 160, "scaled_s": 187, "scan": [34, 133, 137, 161, 181, 187, 198], "scan_1": 135, "scan_2": 135, "scan_3": 135, "scan_4": 135, "scan_5": 135, "scan_axi": [135, 181], "scan_idx": 135, "scan_op": 135, "scanop": [34, 181, 187], "scanopattr": [34, 161], "scanoprel": 34, "scatter": [75, 161, 169, 175, 187], "scatter_el": [161, 169, 187], "scatter_from_worker0": [161, 175], "scatter_nd": [161, 169, 187], "scenario": [41, 58, 186, 194], "scene": 206, "sch": [31, 37, 82, 96, 101, 147, 149, 156, 181, 183, 189, 200, 209], "scheduer": 146, "schedul": [2, 4, 25, 26, 30, 34, 37, 56, 65, 69, 74, 82, 86, 88, 90, 95, 102, 104, 105, 106, 107, 108, 109, 110, 117, 118, 119, 132, 137, 146, 147, 149, 150, 153, 155, 156, 163, 180, 181, 186, 187, 189, 198, 203, 205, 207, 209, 211], "schedule_argsort": 187, "schedule_conv2d_hwcn": 138, "schedule_conv2d_nchw": 204, "schedule_extern": 34, "schedule_inject": 150, "schedule_nam": 147, "schedule_op": 37, "schedule_primit": [136, 137, 183, 198], "schedule_reduc": 204, "schedule_rul": 187, "schedule_scan": 34, "schedule_softmax": 204, "scheduledebugmask": 183, "scheduleerror": 183, "schedulefntyp": 156, "scheduleop": 37, "schedulerul": [149, 156], "schedulest": 183, "scheduletre": 138, "scheduletree2": 138, "schema": 53, "scheme": [4, 12, 88, 147], "scientist": 36, "scipi": [75, 119, 126, 170, 187, 202, 210], "sconv": 204, "scope": [4, 9, 16, 20, 34, 73, 96, 104, 110, 138, 148, 155, 156, 159, 160, 161, 162, 167, 169, 172, 176, 181, 182, 183, 185, 186, 187, 189, 191, 192, 204, 205], "scope_block": 183, "scopebuild": 169, "score": [52, 113, 146, 147, 156, 161, 173, 202, 210], "score_index": 173, "score_s0": 146, "score_s1": 146, "score_si": 146, "score_sn": 146, "score_threshold": [72, 173], "scratch": [5, 9, 16, 65, 123, 146], "screen": [97, 104, 105, 107, 118, 160, 201], "script": [0, 5, 7, 8, 16, 17, 18, 20, 22, 23, 25, 27, 30, 31, 43, 44, 47, 50, 52, 56, 58, 61, 66, 67, 68, 69, 72, 73, 75, 79, 82, 89, 90, 96, 98, 100, 105, 106, 107, 110, 111, 113, 116, 117, 118, 120, 121, 122, 124, 134, 135, 136, 139, 140, 142, 143, 159, 160, 163, 167, 169, 171, 181, 183, 189, 200, 202, 204, 208, 209, 210, 211, 212], "script_modul": [72, 73, 167], "scripted_model": [51, 67, 70, 71, 121], "scroll": 7, "sd": [66, 160], "sdaccel": 61, "sdaccel_dir": 61, "sdaccel_setup": 61, "sdk": [56, 59, 65, 116, 117, 120, 122, 123, 124, 143, 148], "sdk_path": 69, "se": 16, "searc": 102, "search": [0, 2, 7, 16, 39, 58, 59, 79, 110, 118, 146, 147, 148, 156, 163, 164, 169, 174, 183, 186, 187, 201, 205, 208, 211], "search_fc_transpos": [164, 172], "search_polici": [96, 100, 101, 146, 200], "search_policy_param": 146, "search_rang": 187, "search_strategi": 156, "search_task": [101, 146], "searchabl": 199, "searchcallback": 146, "searchpolici": 146, "searchpolicyutilsgetconsum": 101, "searchpolicyutilsiselementwisematch": 101, "searchsort": [169, 187], "searchstrategi": 156, "searchstrategytyp": 156, "searchtask": [96, 101, 146, 187, 200], "sec": 109, "secion": [97, 98, 99, 100], "second": [1, 17, 35, 36, 37, 43, 47, 50, 52, 62, 65, 66, 67, 68, 69, 72, 73, 98, 100, 104, 113, 117, 118, 121, 123, 129, 130, 132, 138, 139, 146, 152, 156, 157, 160, 161, 162, 163, 169, 170, 172, 173, 174, 178, 182, 183, 185, 187, 189, 191, 192, 194, 200, 201, 202, 208], "second_opt": 191, "secondli": 113, "section": [2, 4, 6, 7, 12, 17, 20, 22, 23, 30, 31, 33, 35, 36, 38, 56, 58, 64, 66, 67, 68, 70, 71, 78, 85, 97, 98, 99, 100, 104, 105, 106, 107, 109, 117, 118, 119, 148, 151, 155, 160, 161, 166, 169, 191, 192, 194, 195, 201, 202, 210, 211], "secur": [119, 123, 126, 141], "sed": [80, 109], "see": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 20, 23, 31, 35, 36, 37, 39, 46, 56, 58, 62, 65, 66, 67, 68, 70, 71, 73, 74, 75, 79, 82, 84, 85, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 110, 118, 119, 121, 122, 123, 126, 131, 134, 136, 138, 139, 140, 142, 143, 144, 146, 147, 148, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 172, 174, 178, 181, 183, 185, 186, 187, 192, 195, 200, 202, 204, 208, 210, 211, 212], "seed": [146, 156, 171, 183, 202], "seek": [16, 32], "seem": [7, 123, 146], "seemingli": 90, "seen": [3, 27, 34, 36, 160, 161, 204], "segment": [169, 192], "segment_id": 169, "segment_sum": 169, "segreg": 31, "select": [9, 17, 18, 58, 66, 67, 68, 69, 79, 84, 97, 98, 99, 100, 110, 116, 117, 118, 120, 121, 122, 123, 126, 140, 147, 157, 160, 161, 162, 165, 169, 171, 173, 181, 183, 185, 186, 187, 188, 189, 194, 205], "select_implement": 165, "select_last_index": [169, 187], "selector": [118, 185], "self": [2, 4, 22, 23, 27, 34, 37, 43, 44, 63, 72, 80, 84, 85, 110, 113, 126, 131, 147, 154, 155, 156, 158, 160, 162, 163, 166, 172, 176, 180, 186, 188, 194, 212], "self_attn": 113, "semant": [34, 134, 160, 161, 162, 168, 169, 170, 172, 181, 183, 185, 187, 192, 208], "semicolon": [79, 192], "semiconductor": 56, "semnat": 172, "send": [2, 7, 8, 10, 11, 13, 16, 17, 32, 97, 105, 107, 118, 120, 157, 162, 178], "sens": [9, 12, 13, 35, 117, 191], "sensit": 172, "sent": [10, 11, 160, 161, 197], "sep": 113, "separ": [10, 12, 31, 32, 34, 41, 44, 58, 63, 65, 79, 90, 117, 135, 136, 147, 160, 161, 163, 170, 171, 173, 174, 181, 183, 185, 186, 187, 192, 194, 195, 206, 208], "separable_conv_block": 171, "seper": 170, "seq": [35, 84, 113, 159, 169, 185, 187], "seq_axi": [169, 187], "seq_id": 113, "seq_len": [75, 113, 160, 161, 187], "seq_len_kv": [160, 161], "seq_length": [169, 187], "seqexpr": 162, "seqexprnod": 162, "seqstart_k": 161, "seqstart_q": 161, "seqstmt": 185, "sequanti": 188, "sequenc": [4, 8, 23, 25, 27, 30, 35, 37, 43, 73, 75, 113, 130, 148, 155, 160, 161, 162, 163, 169, 172, 175, 176, 177, 183, 185, 187, 188, 191, 192, 195, 209], "sequence_mask": [169, 187], "sequence_offset": 187, "sequenti": [23, 35, 85, 90, 105, 106, 107, 110, 111, 113, 123, 147, 159, 172, 181, 187, 188, 201, 202, 208], "sequentialnod": 4, "sequentialpass": 4, "sequentialpassnod": 4, "sequentialspan": [155, 169], "seri": [4, 44, 56, 58, 65, 108, 110, 111, 113, 136, 166, 180, 188, 192, 194, 200, 204, 208], "serial": [0, 2, 5, 36, 64, 66, 82, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 136, 146, 147, 152, 155, 159, 169, 177, 183, 186, 189, 208, 210], "serial_numb": [116, 117, 122], "serializ": 147, "serialize_arg": 147, "serializemodul": 3, "serv": [2, 4, 9, 10, 11, 30, 56, 80, 122, 148, 160, 161, 174, 183, 187, 188, 192, 195, 206, 208, 209], "server": [5, 8, 12, 17, 68, 69, 89, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 119, 122, 124, 146, 147, 151, 157, 174, 197, 199, 202, 210, 211], "server_init_callback": 174, "server_kei": 174, "server_port": 174, "server_url": 174, "servic": [80, 157, 197], "sess": [52, 157, 174], "session": [52, 69, 70, 71, 79, 97, 105, 107, 109, 116, 117, 121, 122, 151, 157, 174, 175, 210], "session_constructor": 174, "session_constructor_arg": 174, "session_nam": 157, "session_timeout": [67, 69, 174], "sessionterminatederror": 157, "sestion": [67, 68], "set": [0, 1, 2, 3, 4, 5, 6, 9, 14, 17, 23, 27, 32, 34, 35, 36, 41, 43, 44, 46, 47, 51, 52, 56, 58, 59, 62, 66, 67, 68, 69, 73, 74, 79, 80, 85, 93, 96, 98, 99, 100, 101, 110, 113, 116, 118, 120, 121, 122, 123, 124, 129, 130, 131, 136, 139, 143, 146, 147, 148, 152, 155, 158, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 174, 177, 178, 180, 181, 183, 185, 186, 187, 188, 191, 192, 194, 195, 197, 201, 206, 208, 210, 211], "set_attr": [34, 155], "set_attrs_type_kei": 155, "set_axis_separ": 183, "set_bodi": [5, 36, 37], "set_body_typ": [1, 4, 34, 35, 36], "set_default": [34, 180], "set_dtyp": 183, "set_error_threshold": 147, "set_input": [0, 2, 46, 47, 51, 52, 53, 58, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 97, 98, 99, 100, 105, 106, 107, 108, 117, 121, 122, 129, 130, 152, 162, 178, 202, 206], "set_input_zero_copi": 152, "set_instru": [162, 178], "set_item": 163, "set_keep_for_debug": 148, "set_memory_growth": [52, 75], "set_num_ev": 188, "set_num_input": [34, 155], "set_output_zero_copi": 152, "set_param": 165, "set_scop": [181, 183], "set_stat": 160, "set_store_pred": [134, 181], "set_support_level": [34, 155], "set_target_pars": 1, "set_tensor": 74, "set_to": 148, "set_var_remap": 162, "setaxissepar": 183, "setdevic": 1, "setion": 99, "setlevel": [104, 105, 106, 107, 201], "setrecursionlimit": 169, "setstream": 1, "setter": 36, "settings64": 61, "setup": [17, 58, 62, 68, 78, 90, 108, 109, 118, 121, 123, 124, 142, 150, 155, 159, 162, 165, 166, 208], "sevar": 160, "sever": [2, 4, 7, 11, 16, 18, 56, 63, 67, 70, 71, 73, 79, 101, 108, 134, 136, 143, 146, 147, 161, 162, 163, 169, 181, 187, 205, 210], "sg": 204, "sh": [8, 16, 56, 58, 60, 61, 64, 66, 69, 79, 123, 142, 143, 160, 195], "sha": 17, "sha1": 62, "sha256": 8, "sha512": 17, "shader": 6, "shaderfloat16": 6, "shaderfloat64": 6, "shaderint16": 6, "shaderint64": 6, "shaderint8": 6, "shadow": 192, "shall": 155, "shaoq": 171, "shape": [0, 2, 4, 5, 8, 18, 20, 22, 27, 34, 35, 36, 37, 44, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 61, 65, 67, 68, 69, 70, 71, 74, 75, 84, 89, 90, 96, 101, 104, 110, 111, 113, 117, 120, 123, 126, 132, 136, 139, 140, 146, 147, 148, 150, 152, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 181, 183, 185, 186, 187, 189, 190, 192, 195, 200, 201, 202, 204, 208, 210, 211], "shape_": 163, "shape_data": 36, "shape_dict": [46, 47, 48, 49, 50, 52, 53, 64, 68, 69, 74, 75, 116, 118, 120, 122, 152, 160, 167, 202, 211], "shape_dtype_infer": 160, "shape_lik": [169, 187], "shape_list": [51, 67, 70, 71, 72, 121], "shape_of": [161, 162, 169], "shape_to_tensor": 161, "shape_var_map": 158, "shapeexpr": [113, 160, 161, 162], "shapeexprnod": 162, "shapepattern": 166, "shapestructinfo": 162, "shapetupl": [113, 176], "shapetyp": 162, "shapevar": [169, 195], "shard": 161, "share": [0, 2, 3, 5, 9, 37, 43, 56, 60, 62, 88, 89, 96, 97, 104, 129, 138, 139, 146, 147, 148, 152, 161, 162, 163, 164, 172, 181, 183, 185, 186, 189, 191, 204, 208, 212], "share_param": 152, "shared_memory_per_block": 70, "shared_offset": 185, "shared_ptr": [5, 37, 185], "shared_transform": 163, "shasum": 17, "shell": [16, 56, 66, 67, 68, 69, 116, 117, 120, 121, 122, 124], "shen": 88, "shepherd": [9, 15, 16], "shift": [56, 161, 169, 185, 187], "shift_left": 185, "shift_right": 185, "ship": [5, 56, 143], "shiue": [205, 211], "short": [8, 13, 20, 73, 96, 120, 129, 130, 132, 134, 169, 171, 187, 202], "shortcut": 7, "shorten": 17, "shorter": [169, 187, 204], "shot": [2, 163], "should": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 34, 35, 36, 46, 48, 49, 51, 56, 58, 59, 62, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 85, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 107, 108, 109, 113, 117, 118, 119, 123, 126, 129, 130, 131, 142, 143, 146, 147, 150, 152, 155, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 176, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 192, 195, 197, 200, 202, 203, 204, 205, 208, 210, 211], "should_run": [4, 85, 154], "shouldn": [66, 172], "shouldrun": 4, "show": [2, 4, 7, 12, 14, 20, 22, 23, 27, 30, 31, 37, 43, 44, 47, 48, 49, 53, 56, 58, 67, 75, 84, 88, 89, 109, 110, 111, 113, 119, 120, 123, 124, 129, 131, 136, 138, 139, 143, 160, 162, 163, 178, 183, 192, 200, 201, 202, 206, 208, 210], "show_detect": 47, "show_meta": [110, 111, 139], "show_meta_data": [85, 155, 166, 169, 188, 206], "show_svg": 138, "showcas": [116, 120, 121], "shown": [12, 23, 35, 36, 39, 56, 79, 80, 88, 129, 138, 200, 201, 208, 212], "shram_siz": 119, "shuffl": [123, 173, 185], "shut": [119, 175], "shutdown": 175, "shutdown_tag": 119, "shutil": [120, 123], "si": 147, "si_prefix": [117, 147], "sid": 36, "side": [2, 4, 20, 37, 56, 82, 118, 126, 138, 142, 147, 150, 155, 158, 160, 161, 162, 165, 168, 169, 170, 171, 172, 175, 181, 182, 183, 186, 187, 208], "sifiv": 180, "sig": 17, "sigil": 192, "sigma": 34, "sigmoid": [34, 65, 126, 160, 161, 169, 181, 185, 187, 189], "sigmoid_grad": 34, "sign": [8, 9, 17, 118, 148, 161, 169, 181, 185, 187], "signal": [7, 169, 187], "signatur": [2, 5, 17, 30, 132, 147, 150, 158, 160, 162, 163, 178, 181, 183, 184, 185, 186, 187, 191, 192, 193, 195, 208], "signifi": [25, 27], "signific": [9, 27, 56, 75, 169, 173, 208], "significantli": 27, "signl": 84, "siju": [47, 74], "silent": [79, 146, 147, 172, 174], "silu": [113, 160, 161, 163], "sim": 64, "simd": [90, 109, 180, 208], "simdgroup": 185, "simdgroup_load": 185, "simdgroup_multiply_accumul": 185, "simdgroup_stor": 185, "similar": [0, 4, 8, 34, 36, 43, 44, 56, 84, 117, 118, 123, 131, 134, 147, 160, 161, 163, 169, 170, 174, 181, 183, 187, 191, 194, 209], "similarli": [4, 27, 56, 84, 108, 161, 162, 180, 191, 192], "similiar": 34, "simonyan": 171, "simpl": [1, 2, 4, 5, 8, 12, 22, 23, 35, 36, 37, 44, 49, 50, 56, 58, 67, 71, 75, 80, 82, 84, 90, 93, 96, 105, 106, 107, 109, 110, 123, 131, 134, 146, 147, 150, 160, 161, 163, 165, 169, 171, 174, 183, 184, 188, 191, 192, 194, 195, 200, 201, 202, 204, 208, 209, 210, 212], "simple_mod": [37, 89, 90, 96, 101, 134, 135, 136, 139, 140, 150, 200, 204, 208], "simple_net": [129, 130], "simpler": 210, "simplest": [5, 90, 122, 202, 210], "simpli": [13, 34, 35, 36, 58, 69, 70, 71, 75, 84, 90, 110, 118, 122, 132, 134, 139, 143, 146, 148, 152, 157, 158, 172, 181, 184, 185, 189, 191, 192, 195], "simplic": [124, 201, 206, 210], "simplif": [4, 139, 172, 182, 185, 186, 187], "simplifi": [2, 4, 36, 43, 56, 67, 113, 163, 172, 183, 186, 187, 194], "simplify_fc_transpos": [75, 164, 172], "simplifyexpr": 172, "simplifyfctranspos": 172, "simplifyinfer": [164, 169, 172], "simul": [62, 116, 119, 121, 122, 123, 147, 176, 187], "simulated_dequant": 187, "simulated_quant": 187, "simultan": [89, 162, 191], "sin": [65, 161, 169, 181, 185, 187], "sinc": [0, 4, 5, 6, 9, 16, 17, 20, 27, 34, 36, 43, 48, 51, 67, 68, 69, 70, 71, 72, 73, 79, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 119, 120, 121, 122, 123, 124, 132, 135, 139, 155, 158, 159, 160, 169, 170, 172, 186, 191, 192, 193, 194, 201, 202, 208], "sine": [122, 160], "sine_model": 122, "sinfo": 158, "sinfo_arg": [161, 162], "sinfo_func": 163, "singl": [1, 2, 3, 4, 5, 8, 13, 16, 20, 22, 25, 27, 31, 36, 46, 48, 49, 50, 53, 58, 66, 75, 79, 82, 90, 101, 110, 117, 118, 119, 120, 122, 129, 140, 146, 147, 155, 157, 160, 161, 162, 163, 164, 165, 166, 169, 170, 172, 177, 180, 181, 182, 183, 186, 187, 191, 192, 194, 201, 205, 208, 212], "single2": 191, "singleton": [158, 160, 161, 162], "singular": 25, "sinh": [161, 169, 181, 185, 187], "sinusoid": 160, "site": [17, 35, 46, 48, 49, 51, 67, 68, 70, 71, 72, 73, 80, 121, 123, 126, 143, 155, 162, 163, 172, 186, 192, 195], "situat": [7, 27, 80, 108, 159, 172, 191, 210], "siva": [56, 67, 68], "six": 187, "siyuan": [89, 209], "size": [2, 27, 30, 31, 32, 34, 35, 36, 37, 49, 56, 61, 65, 68, 72, 75, 88, 89, 90, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 113, 118, 119, 120, 123, 126, 129, 130, 132, 134, 135, 139, 146, 147, 148, 155, 158, 160, 161, 162, 163, 168, 169, 170, 171, 172, 173, 180, 181, 182, 183, 185, 186, 187, 188, 189, 192, 194, 195, 200, 201, 202, 204, 206, 208, 210], "size_hint_byt": 155, "size_t": [3, 34, 36, 119], "size_var": 181, "sizeof": [90, 187, 208], "sizevar": [181, 185], "skeleton": [36, 212], "sketch": [4, 94, 95, 123, 146, 198], "sketch_search_polici": 146, "sketchpolici": [96, 100, 101, 146, 200], "sketchsearchpolici": 146, "skinni": 186, "skip": [0, 6, 14, 16, 17, 35, 36, 49, 75, 79, 82, 105, 106, 107, 108, 110, 111, 116, 117, 121, 122, 123, 138, 146, 150, 154, 155, 157, 166, 169, 172, 181, 183, 186], "skip_annot": 154, "skip_lay": 172, "skip_lin": 146, "skip_ndarray_rewrit": 186, "skip_pass_nam": 154, "skipassert": 186, "skipfunct": 4, "skipif": 79, "skipoptim": 4, "skippass": 154, "skylak": [72, 73, 74, 100, 101, 108, 200, 202, 208, 210], "slash": 8, "slice": [97, 98, 99, 100, 160, 161, 163, 169, 181, 183, 187], "slice_axi": [170, 187], "slice_lik": 169, "slice_mod": [169, 187], "slid": [169, 187], "slide": [161, 169, 170, 187, 196], "sliding_window": [169, 187], "slight": 65, "slightli": [0, 34, 66, 82, 84, 90, 123, 208], "slim": 53, "slip": 9, "slope": [161, 170, 187], "slot": 0, "slow": [8, 16, 105, 107, 123, 186], "slower": [69, 181], "slowest": 181, "slowli": 123, "sm": 130, "sm_53": 70, "sm_61": 180, "sm_75": 104, "sm_80": 180, "sm_xx": [106, 204, 206], "small": [4, 5, 90, 97, 98, 99, 100, 118, 119, 123, 152, 160, 161, 169, 170, 172, 187, 201, 202, 205, 208], "smaller": [123, 161, 172, 186, 187], "smallest": [75, 160, 161], "smarter": 201, "sme": 187, "smem_offset": 185, "smem_ptr": 185, "smooth": 194, "snapdragon": 69, "snippet": [2, 12, 35, 44, 56], "so": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 20, 22, 27, 34, 35, 36, 37, 41, 44, 47, 51, 53, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 82, 85, 89, 90, 93, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 130, 131, 136, 139, 140, 142, 143, 146, 147, 151, 152, 155, 158, 161, 162, 166, 167, 169, 172, 173, 174, 178, 181, 183, 187, 189, 191, 192, 194, 195, 201, 202, 206, 208, 210], "soc": [56, 180], "socket": [2, 174, 175], "socketsess": 175, "soft": 119, "softmax": [52, 65, 70, 71, 85, 113, 123, 126, 148, 160, 161, 170, 172, 187, 202, 204, 206, 210], "softmax_common": 187, "softmax_tensor": 52, "softmax_topi": 204, "softmaxattr": 161, "softwar": [12, 58, 61, 64, 66, 119, 120, 141, 190, 197], "sole": 43, "solicit": 11, "solitari": 25, "solut": [5, 8, 9, 12, 36, 39, 41, 48, 51, 56, 67, 72, 79, 89, 139, 143, 212], "solv": [5, 9, 12, 63, 89, 101, 155, 192, 195], "solver": 195, "some": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 14, 16, 17, 32, 34, 35, 36, 39, 56, 62, 65, 68, 69, 70, 71, 75, 79, 80, 81, 82, 84, 85, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 113, 117, 119, 122, 123, 129, 132, 136, 140, 142, 143, 144, 146, 147, 148, 157, 158, 160, 161, 162, 163, 164, 167, 169, 171, 172, 181, 183, 185, 187, 188, 189, 190, 191, 192, 194, 200, 201, 202, 203, 208, 210, 211], "somehow": 60, "someon": 12, "someth": [7, 9, 12, 17, 75, 80, 85, 105, 106, 107, 116, 129, 130, 149, 166, 177, 189, 202, 210], "sometim": [9, 10, 14, 67, 82, 90, 101, 129, 131, 132, 134, 140, 143, 146, 186, 189, 191, 194, 195, 208], "somewher": 118, "soni": 123, "soon": [7, 56, 212], "sophist": [105, 106, 107], "sort": [123, 160, 161, 163, 169, 173, 177, 182, 187, 210], "sortattr": 161, "sorted_index": 160, "sorted_prob": 160, "sorted_sequ": [169, 187], "soumith": 171, "sourc": [1, 2, 3, 5, 8, 9, 10, 12, 16, 17, 22, 23, 30, 31, 32, 36, 37, 39, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 61, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 82, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 144, 146, 147, 148, 155, 157, 160, 161, 162, 165, 167, 168, 169, 170, 172, 176, 178, 181, 183, 185, 187, 191, 197, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212], "source_arrai": [148, 176], "source_cod": 160, "source_format": 160, "source_func": 165, "source_nam": 155, "source_to_op": 181, "sourcemodul": 160, "sourcenam": 155, "sourcetensor": 72, "sp": 75, "space": [1, 2, 16, 49, 65, 66, 88, 89, 96, 97, 98, 99, 100, 102, 110, 123, 146, 147, 155, 156, 160, 161, 163, 169, 175, 185, 186, 187, 200, 201, 205, 210, 211], "space_gener": 156, "space_map": [104, 201], "space_to_batch_nd": [170, 172, 187], "space_to_depth": [170, 187], "spacegener": 156, "spacegeneratortyp": 156, "span": [18, 68, 155, 162, 163, 166, 167, 168, 169, 170, 172, 181, 185, 186, 187, 201], "spancheck": 169, "spars": [94, 95, 97, 100, 126, 146, 169, 170, 172, 183, 185, 198], "sparse_add": [170, 187], "sparse_conv2d": [172, 187], "sparse_data": [170, 187], "sparse_dens": [75, 101, 126, 170, 172, 187], "sparse_dense_alter_layout": 187, "sparse_dense_block": 101, "sparse_dense_bsr_": 101, "sparse_dense_sp_lh": 187, "sparse_dense_sp_rh": 187, "sparse_dense_sp_rhs_bsrmm": 101, "sparse_dense_sp_rhs_bsrmm_block": 101, "sparse_fill_empty_row": 169, "sparse_indic": [169, 170, 187], "sparse_indptr": [170, 187], "sparse_lh": [170, 187], "sparse_mat": 170, "sparse_reshap": [169, 187], "sparse_selector": 185, "sparse_sketch_rul": 100, "sparse_to_dens": [169, 187], "sparse_transpos": [170, 187], "sparse_valu": [169, 187], "sparsedens": 101, "sparseplaceholderop": 148, "sparsiti": 75, "sparsity_threshold": [75, 172], "spatial": [25, 27, 30, 31, 74, 104, 110, 147, 149, 159, 160, 168, 170, 182, 183, 187, 209], "spatial_scal": 173, "spatial_shap": [170, 187], "speak": [9, 27], "spec": [6, 22, 23, 32, 43, 44, 49, 110, 113, 123, 160], "special": [4, 6, 8, 18, 27, 32, 36, 58, 59, 73, 74, 82, 84, 89, 104, 113, 146, 148, 152, 156, 160, 161, 163, 169, 170, 172, 180, 181, 183, 185, 187, 188, 192, 202, 205, 210], "special_spac": 156, "specialized_ndk": 148, "specializedcondit": 181, "specif": [1, 2, 4, 7, 8, 12, 15, 16, 20, 22, 25, 27, 30, 35, 36, 37, 44, 51, 52, 56, 62, 66, 73, 75, 79, 86, 89, 90, 97, 98, 99, 100, 105, 106, 107, 109, 110, 113, 116, 118, 119, 120, 121, 122, 123, 124, 129, 131, 132, 136, 143, 146, 147, 148, 150, 151, 152, 155, 156, 157, 160, 161, 162, 163, 165, 168, 169, 170, 172, 180, 181, 183, 185, 186, 187, 188, 189, 191, 192, 194, 195, 200, 202, 204, 205, 206, 208, 209, 210], "specifi": [0, 1, 2, 4, 6, 7, 8, 16, 17, 27, 30, 32, 34, 43, 56, 58, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 79, 84, 88, 93, 96, 106, 109, 113, 119, 122, 123, 124, 129, 136, 139, 143, 146, 147, 148, 150, 151, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 180, 181, 183, 184, 185, 186, 187, 188, 191, 194, 195, 200, 202, 204, 205, 206, 208, 210, 212], "specifici": 162, "specul": 191, "speech": 124, "speed": [5, 56, 64, 69, 75, 89, 97, 98, 99, 100, 105, 107, 146, 152, 170, 187, 201, 202, 208, 210, 211], "speedup": [16, 75, 90], "spell": 16, "spend": [9, 202], "spent": [97, 98, 99, 100, 202], "sphinx": [21, 22, 23, 28, 30, 31, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 84, 85, 87, 88, 89, 90, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212], "spir": 187, "spl": [51, 121], "spline": [161, 168, 187], "split": [31, 37, 48, 49, 51, 56, 58, 61, 65, 82, 85, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 113, 121, 122, 123, 134, 135, 138, 139, 147, 160, 161, 163, 164, 166, 169, 172, 174, 181, 183, 185, 186, 187, 189, 192, 200, 201, 208, 209], "split_config": 130, "split_k_slic": 130, "split_loop": 183, "split_workload": 147, "splitarg": 172, "splitattr": 161, "splitcalltirbypattern": 163, "splitent": [147, 201], "splithostdevic": 186, "splitlayoutrewritepreproc": 163, "splitspac": 147, "spontan": 189, "spot": [9, 90, 116, 120, 208], "spread": 32, "spresens": 123, "sprintf": 118, "sptr_to_self": [36, 37], "spv_bin": 148, "spv_khr_16bit_storag": 6, "spv_khr_8bit_storag": 6, "spv_khr_storage_buffer_storage_class": 6, "spvvalid": 6, "sqnn_dtype_to_cod": 187, "sqrt": [58, 65, 80, 160, 161, 169, 170, 181, 185, 187, 189, 194], "squad": 75, "squar": [16, 88, 90, 139, 160, 161, 168, 170, 181, 185, 187, 200, 201], "squash": [14, 17], "squeez": [52, 53, 65, 68, 74, 158, 160, 161, 169, 187, 202, 210], "squeezeattr": 161, "squeezenet": [97, 98, 99, 100, 105, 106, 107, 108, 171], "squeezenet_v1": [97, 98, 99, 100, 105, 106, 107, 108], "sr": 183, "sram": 119, "src": [4, 13, 17, 32, 34, 35, 36, 37, 53, 56, 58, 65, 66, 82, 116, 118, 119, 121, 122, 123, 146, 167, 168, 175, 181, 183, 185, 186, 187, 192, 195, 212], "src_devic": 169, "src_index": 185, "src_layout": [169, 185, 187], "src_offset": 185, "src_ptr": 185, "src_shape": 185, "src_sref": 183, "sref": [183, 185], "sref2scop": 185, "srr": 183, "ss": [20, 22, 23, 27, 30, 31, 36, 43, 119, 159, 163, 181, 183, 185], "ss2": 36, "ssa": [182, 186], "sse": 37, "ssr": [20, 22, 23, 27, 30, 31, 43, 181, 183], "sssr": 149, "ssss": [149, 183], "sst": 204, "sstream": 36, "st": 123, "stabl": [2, 9, 16, 97, 105, 107, 123, 143, 160, 161, 162, 169, 212], "stablehlo_modul": 160, "stack": [2, 4, 19, 26, 30, 33, 41, 62, 66, 78, 84, 85, 120, 141, 144, 155, 169, 171, 174, 185, 187, 188, 190], "stackmemorymanager_init": 119, "stacktrac": 13, "stackvm": [147, 150, 162, 165], "stage": [1, 37, 41, 43, 44, 56, 66, 67, 79, 80, 101, 104, 123, 129, 132, 136, 138, 146, 147, 160, 161, 171, 181, 183, 186, 188, 204, 208, 209, 210], "stage1_unit1_bn1_beta": [85, 206], "stage1_unit1_bn1_gamma": [85, 206], "stage1_unit1_bn1_moving_mean": [85, 206], "stage1_unit1_bn1_moving_var": [85, 206], "stage1_unit1_bn2_beta": [85, 206], "stage1_unit1_bn2_gamma": [85, 206], "stage1_unit1_bn2_moving_mean": [85, 206], "stage1_unit1_bn2_moving_var": [85, 206], "stage1_unit1_conv1_weight": [85, 206], "stage1_unit1_conv2_weight": [85, 206], "stage1_unit1_sc_weight": [85, 206], "stage1_unit2_bn1_beta": [85, 206], "stage1_unit2_bn1_gamma": [85, 206], "stage1_unit2_bn1_moving_mean": [85, 206], "stage1_unit2_bn1_moving_var": [85, 206], "stage1_unit2_bn2_beta": [85, 206], "stage1_unit2_bn2_gamma": [85, 206], "stage1_unit2_bn2_moving_mean": [85, 206], "stage1_unit2_bn2_moving_var": [85, 206], "stage1_unit2_conv1_weight": [85, 206], "stage1_unit2_conv2_weight": [85, 206], "stage2_unit1_bn1_beta": [85, 206], "stage2_unit1_bn1_gamma": [85, 206], "stage2_unit1_bn1_moving_mean": [85, 206], "stage2_unit1_bn1_moving_var": [85, 206], "stage2_unit1_bn2_beta": [85, 206], "stage2_unit1_bn2_gamma": [85, 206], "stage2_unit1_bn2_moving_mean": [85, 206], "stage2_unit1_bn2_moving_var": [85, 206], "stage2_unit1_conv1_weight": [85, 206], "stage2_unit1_conv2_weight": [85, 206], "stage2_unit1_sc_weight": [85, 206], "stage2_unit2_bn1_beta": [85, 206], "stage2_unit2_bn1_gamma": [85, 206], "stage2_unit2_bn1_moving_mean": [85, 206], "stage2_unit2_bn1_moving_var": [85, 206], "stage2_unit2_bn2_beta": [85, 206], "stage2_unit2_bn2_gamma": [85, 206], "stage2_unit2_bn2_moving_mean": [85, 206], "stage2_unit2_bn2_moving_var": [85, 206], "stage2_unit2_conv1_weight": [85, 206], "stage2_unit2_conv2_weight": [85, 206], "stage3_unit1_bn1_beta": [85, 206], "stage3_unit1_bn1_gamma": [85, 206], "stage3_unit1_bn1_moving_mean": [85, 206], "stage3_unit1_bn1_moving_var": [85, 206], "stage3_unit1_bn2_beta": [85, 206], "stage3_unit1_bn2_gamma": [85, 206], "stage3_unit1_bn2_moving_mean": [85, 206], "stage3_unit1_bn2_moving_var": [85, 206], "stage3_unit1_conv1_weight": [85, 206], "stage3_unit1_conv2_weight": [85, 206], "stage3_unit1_sc_weight": [85, 206], "stage3_unit2_bn1_beta": [85, 206], "stage3_unit2_bn1_gamma": [85, 206], "stage3_unit2_bn1_moving_mean": [85, 206], "stage3_unit2_bn1_moving_var": [85, 206], "stage3_unit2_bn2_beta": [85, 206], "stage3_unit2_bn2_gamma": [85, 206], "stage3_unit2_bn2_moving_mean": [85, 206], "stage3_unit2_bn2_moving_var": [85, 206], "stage3_unit2_conv1_weight": [85, 206], "stage3_unit2_conv2_weight": [85, 206], "stage4_unit1_bn1_beta": [85, 206], "stage4_unit1_bn1_gamma": [85, 206], "stage4_unit1_bn1_moving_mean": [85, 206], "stage4_unit1_bn1_moving_var": [85, 206], "stage4_unit1_bn2_beta": [85, 206], "stage4_unit1_bn2_gamma": [85, 206], "stage4_unit1_bn2_moving_mean": [85, 206], "stage4_unit1_bn2_moving_var": [85, 206], "stage4_unit1_conv1_weight": [85, 206], "stage4_unit1_conv2_weight": [85, 206], "stage4_unit1_sc_weight": [85, 206], "stage4_unit2_bn1_beta": [85, 206], "stage4_unit2_bn1_gamma": [85, 206], "stage4_unit2_bn1_moving_mean": [85, 206], "stage4_unit2_bn1_moving_var": [85, 206], "stage4_unit2_bn2_beta": [85, 206], "stage4_unit2_bn2_gamma": [85, 206], "stage4_unit2_bn2_moving_mean": [85, 206], "stage4_unit2_bn2_moving_var": [85, 206], "stage4_unit2_conv1_weight": [85, 206], "stage4_unit2_conv2_weight": [85, 206], "stage_id": [101, 146], "stage_pipelin": 183, "stage_scores_0": 146, "stage_scores_1": 146, "stai": 58, "stale": 16, "stall": 93, "stamp": [146, 147], "stanc": 197, "stand": [2, 36, 56, 88, 122], "standalon": [30, 35, 56, 69, 120, 122, 146, 155, 199], "standalone_crt": 157, "standard": [2, 4, 7, 11, 22, 27, 35, 37, 56, 63, 65, 73, 82, 93, 119, 122, 147, 148, 152, 157, 160, 161, 169, 170, 171, 180, 186, 187, 189, 191, 199, 200, 202, 205, 208], "stanford": 123, "stanfordcar": 123, "stapl": 191, "start": [0, 2, 5, 9, 12, 16, 17, 27, 39, 41, 43, 45, 51, 53, 56, 62, 66, 70, 71, 72, 74, 75, 79, 80, 92, 106, 108, 109, 113, 118, 119, 123, 126, 139, 142, 143, 146, 147, 148, 152, 155, 159, 161, 163, 169, 172, 173, 174, 181, 183, 185, 187, 198, 200, 201, 203, 205, 207, 208], "start_checkpoint": 161, "start_d": [168, 187], "start_h": [161, 168, 187], "start_nod": 148, "start_profile_intrins": 185, "start_telnet": 119, "start_w": [161, 168, 187], "start_x": 187, "startswith": [97, 98, 99, 100, 122, 208], "startup": [32, 180, 210], "stat": 162, "state": [2, 9, 10, 31, 35, 101, 113, 123, 146, 147, 156, 160, 161, 162, 170, 171, 174, 178, 183, 187, 191, 192], "state1": 191, "state1_typ": 191, "state2": 191, "state2_typ": 191, "state_dict": [126, 160], "state_object": 101, "state_placehold": 181, "state_typ": 191, "state_var": 160, "stateless": 174, "statement": [25, 27, 32, 35, 36, 82, 132, 136, 150, 162, 175, 181, 182, 183, 184, 185, 186, 187, 192, 208], "stateobject": 146, "static": [1, 2, 4, 5, 34, 35, 36, 49, 60, 69, 73, 116, 118, 119, 121, 123, 124, 143, 146, 147, 148, 149, 154, 155, 156, 158, 159, 160, 162, 163, 167, 169, 172, 180, 181, 183, 185, 186, 188, 192, 195, 212], "static_cast": [36, 37], "static_quantization_tutori": 73, "static_shape_tun": 111, "staticmethod": [4, 85], "staticplanblockmemori": [113, 163], "statist": [123, 147, 156, 161, 162, 165, 170, 202], "statisticalattr": 161, "stats": 146, "statu": [7, 10, 67, 69, 80, 96, 97, 105, 106, 107, 119, 146, 147, 156, 200], "std": [4, 5, 31, 32, 35, 36, 37, 50, 51, 67, 69, 73, 74, 98, 100, 105, 106, 107, 108, 121, 160, 161, 169, 175, 202, 210, 211], "stdarg": 118, "stdbool": 122, "stdin": 13, "stdio": [36, 118, 119, 148], "stdout": [104, 201], "steadi": 9, "step": [1, 2, 3, 4, 7, 12, 13, 14, 16, 17, 23, 27, 31, 34, 36, 37, 43, 44, 48, 53, 56, 63, 66, 67, 68, 69, 70, 71, 79, 80, 82, 88, 90, 97, 105, 107, 109, 110, 111, 113, 116, 118, 119, 120, 121, 124, 135, 139, 146, 147, 150, 161, 163, 169, 170, 173, 181, 183, 187, 202, 205, 206, 208, 210, 212], "step_nam": 16, "stermin": 106, "stft": [169, 187], "stick": 8, "still": [4, 5, 9, 17, 32, 34, 35, 49, 58, 61, 79, 84, 109, 123, 131, 148, 158, 160, 162, 163, 167, 169, 172, 186, 188, 189, 191, 204, 210], "stm": 199, "stm32": 180, "stm32cube": 118, "stm32cubeid": 118, "stm32f4xx": 180, "stm32f746": 199, "stm32f746xx": 157, "stm32h7xx": 180, "stm32l4r5zi": [117, 118, 122], "stm32project": 118, "stmcube": 118, "stmcubemx": 118, "stmt": [37, 82, 90, 181, 182, 183, 184, 185, 186, 187, 208], "stmt2ref": 185, "stmt_functor": [82, 153], "stmt_list": 185, "stmt_or_mod": 182, "stmt_seq": 185, "stmtsref": [183, 185], "stoi": 36, "stoll": 36, "stop": [56, 67, 116, 119, 146, 147, 152, 169, 187, 194, 202, 204], "stop_lift_param": 161, "storag": [0, 1, 4, 48, 74, 82, 90, 119, 123, 126, 148, 155, 158, 161, 163, 181, 182, 183, 185, 186, 187, 195], "storage_align": [181, 183], "storage_id": 0, "storage_scop": [101, 129, 155, 161, 183, 185, 186], "storagebuffer16bitaccess": 6, "storagebuffer8bitaccess": 6, "storageflatten": 186, "storagerewrit": 186, "store": [0, 1, 2, 3, 4, 36, 56, 60, 66, 82, 88, 89, 90, 105, 106, 107, 111, 113, 118, 122, 123, 134, 146, 147, 152, 155, 156, 161, 167, 169, 172, 180, 181, 183, 185, 186, 189, 191, 192, 195, 201, 202, 208, 210], "store_matrix": 89, "stori": 73, "str": [36, 49, 53, 68, 75, 85, 90, 98, 100, 105, 106, 107, 108, 113, 117, 120, 121, 122, 126, 131, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 202, 208, 212], "str2mask": 1, "straight": 75, "straightforward": [4, 30, 36, 37, 191], "strap": 123, "strateg": 11, "strategi": [2, 15, 18, 19, 20, 90, 97, 123, 139, 146, 156, 165, 201, 212], "stream": [1, 3, 36, 37, 119, 123], "streamhandl": [104, 201], "streamlin": 30, "streamsync": 1, "street_smal": 72, "strength": 187, "strict": [7, 160, 167], "strictli": [27, 160, 176], "strid_depth": 187, "stride": [34, 58, 68, 85, 88, 89, 96, 104, 111, 134, 135, 136, 138, 139, 140, 148, 160, 161, 168, 169, 170, 171, 173, 181, 183, 185, 186, 187, 194, 204, 206, 208, 212], "stride1": [170, 187], "stride2": [170, 187], "stride_1": 134, "stride_2": 134, "stride_depth": 187, "stride_h": [89, 148, 187], "stride_height": [148, 187], "stride_w": [89, 148, 187], "stride_width": [148, 187], "strided_set": [169, 187], "strided_slic": [65, 161, 169, 187], "stridedsliceattr": 161, "string": [1, 2, 4, 5, 6, 12, 32, 34, 36, 37, 52, 63, 97, 106, 118, 119, 129, 146, 147, 148, 150, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 181, 182, 183, 185, 186, 187, 211], "stringimm": [4, 139, 161, 162, 185], "stringimmnod": 162, "stringstream": 36, "strip": [47, 51, 62, 120, 121], "strive": [9, 11], "strlen": 118, "strm": [36, 37], "strongli": [80, 89, 143, 197], "struct": [4, 34, 118, 119, 155, 158, 159, 161, 162, 163, 185, 191], "struct_info": [155, 159, 160, 161, 162], "struct_info_base_check": 158, "struct_info_lca": 158, "structinfo": [155, 158, 159, 161, 162, 163], "structrual_equ": 155, "structtyp": 185, "structur": [0, 4, 5, 12, 13, 18, 26, 41, 44, 75, 82, 89, 119, 123, 139, 147, 151, 155, 156, 158, 160, 161, 162, 163, 167, 172, 176, 181, 182, 183, 185, 187, 189, 191, 192, 195, 202, 206, 208, 209, 210], "structural_equ": [30, 155, 182, 194], "structural_hash": 155, "structuralequ": [156, 182], "stuck": 106, "studi": 2, "studio": [56, 143], "stuff": [17, 123], "style": [4, 9, 11, 12, 15, 20, 34, 79, 84, 116, 118, 119, 121, 148, 160, 161, 162, 167, 169, 172, 181, 183, 187, 192, 195, 205, 208, 209], "styliz": 170, "stype": 148, "su": 66, "sub": [2, 11, 36, 56, 160, 162, 163, 172, 183, 185, 187, 192, 194, 195], "subclass": [1, 2, 4, 5, 35, 37, 154, 156, 160, 187], "subcommand": [124, 210], "subdiagon": [169, 187], "subdirectori": [2, 37, 123, 160], "subexpress": [4, 163, 172], "subgraph": [36, 59, 64, 65, 97, 98, 99, 100, 138, 146, 160, 166, 172, 187, 192, 194, 205], "subgraph_": 36, "subgraph_0": 36, "subgraph_end": 172, "subgraph_start": 172, "subject": [7, 9, 17, 35, 123, 181, 192], "sublinear": 163, "submiss": [16, 115, 125, 198, 199], "submit": [1, 7, 15, 194], "submitt": 7, "submodul": [17, 143, 160], "subordin": 185, "subplot": 123, "subprocess": 122, "subrang": 147, "subrange_length": 147, "subraph": 172, "subregion": 185, "subroutin": 186, "subroutinemixin": 160, "subscrib": 16, "subscript": [161, 187], "subsect": [30, 192, 195], "subsequ": [5, 30, 31, 43, 169, 192], "subset": [90, 123, 181, 187, 195, 208], "subspac": 183, "substanti": 11, "substitut": [82, 119, 126, 163, 172, 184, 186, 192, 195, 202, 210], "substract": [170, 187], "subsum": 158, "subtensor": 169, "subtract": [36, 65, 160, 161, 169, 181, 185, 187, 192, 194], "subtre": 183, "subtyp": 5, "succe": 195, "succeed": 123, "success": [7, 9, 10, 11, 12, 56, 66, 79, 108, 143], "successfulli": [4, 7, 12, 53, 69, 70, 71, 74, 80, 85, 96, 108, 109, 126, 156, 201], "successor": 192, "succinctli": 30, "sudo": [61, 62, 66, 104, 105, 106, 107, 143, 201], "suffic": [34, 192], "suffici": [2, 5, 9, 56], "sugar": [22, 26, 132, 166, 183, 187, 192], "suggest": [9, 11, 32, 138, 151, 158, 172, 211], "suggest_layout_transform": 158, "suit": [4, 79, 111], "suitabl": [16, 64, 104, 119, 148, 157, 169, 171, 187], "sum": [25, 30, 34, 65, 73, 88, 89, 90, 93, 97, 98, 99, 100, 139, 146, 147, 160, 161, 163, 169, 170, 175, 177, 181, 183, 185, 187, 191, 200, 201, 204, 208], "sum1": 192, "sum2": 192, "sum_": [160, 161, 170, 187], "sum_data": 170, "sum_i": 161, "sum_j": [160, 161, 170], "sum_k": [27, 30], "sum_r": [181, 185], "sum_sqr_up": 187, "summar": [7, 8, 9, 16], "summari": [5, 10, 11, 17, 19, 31, 67, 69, 73, 74, 98, 100, 174, 210, 211], "summat": [161, 169, 187], "sun": 171, "super": [22, 23, 43, 44, 49, 72, 110, 113, 126, 131, 160, 194, 212], "super_resolut": 49, "super_resolution_0": 49, "super_resolution_with_caffe2": 49, "superdiagon": [169, 187], "supersed": 30, "supplement": 148, "supplementari": 31, "suppli": [32, 52, 119, 147, 181], "support": [1, 3, 4, 5, 6, 8, 12, 17, 18, 20, 22, 34, 36, 41, 43, 44, 47, 49, 51, 52, 56, 61, 62, 66, 67, 68, 72, 73, 74, 75, 76, 79, 80, 82, 89, 97, 98, 99, 100, 101, 109, 116, 118, 119, 120, 121, 122, 123, 126, 129, 132, 135, 139, 141, 142, 146, 147, 148, 151, 155, 156, 157, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 180, 181, 183, 186, 187, 189, 190, 191, 192, 193, 194, 195, 202, 205, 208, 211], "support_block_scope_host": 186, "support_sliding_window": 113, "supported_op": 123, "supported_subgroup_oper": 6, "supportedoper": 6, "supports_float16": 6, "supports_float64": 6, "supports_int16": 6, "supports_int64": 6, "supports_int8": 6, "supports_storage_buffer_16bit_access": 6, "supports_storage_buffer_8bit_access": 6, "supports_storage_buffer_storage_class": 6, "supportsint": 176, "suppos": [27, 34, 139, 148, 149, 160, 161, 162, 164, 183, 187, 191, 192], "suppress": [163, 173], "sur": 59, "sure": [7, 16, 17, 34, 36, 53, 58, 66, 85, 89, 97, 105, 106, 107, 118, 123, 143, 146, 147, 169, 187, 211], "surpris": 9, "surround": [181, 183, 209], "sustain": 11, "svg": 138, "svn": 17, "svn_editor": 17, "sw": 160, "sw_emu": 61, "swap": [66, 169], "swapfil": 66, "swapon": 66, "swift": 5, "switch": [2, 12, 56, 85, 142, 147, 152, 172, 183, 188, 192], "sy": [47, 97, 98, 99, 100, 104, 119, 130, 201], "sym": [52, 147], "symbol": [0, 3, 8, 18, 20, 30, 36, 97, 98, 99, 100, 105, 106, 107, 108, 118, 132, 135, 143, 148, 150, 155, 158, 159, 160, 161, 162, 163, 165, 167, 171, 172, 178, 181, 183, 185, 186, 187, 204, 208], "symbol_resnet": 171, "symbol_section_map": 148, "symbolc": 160, "symbolic_trac": 160, "symlink": 79, "symmetr": [170, 187], "symmetri": [169, 187], "symplif": 183, "sync": [16, 186], "sync_worker_0": 175, "synchon": 152, "synchron": [1, 31, 130, 175, 176, 181, 185], "syncstreamfromto": 1, "synset": [67, 69, 70, 71, 73, 202, 210], "synset_nam": [46, 48, 50, 51, 69, 70, 71, 73, 121], "synset_path": [46, 48, 50, 51, 69, 70, 71, 73, 121], "synset_url": [46, 48, 50, 51, 69, 70, 71, 73, 121], "syntact": [27, 192], "syntat": 166, "syntax": [4, 12, 22, 27, 30, 36, 37, 43, 62, 85, 181, 183, 191, 195, 204, 209, 211], "synthes": 61, "synthesi": 62, "sysroot": 148, "system": [2, 4, 12, 13, 32, 34, 35, 37, 39, 56, 59, 62, 63, 65, 78, 79, 115, 116, 117, 118, 119, 121, 122, 124, 132, 142, 143, 145, 148, 151, 155, 160, 161, 162, 165, 174, 180, 190, 191, 192, 197, 199, 208, 210], "system_lib": [162, 174, 180], "systemat": [4, 191], "systemc": 119, "szegedi": [161, 170, 171, 187], "t": [1, 3, 4, 5, 7, 8, 9, 14, 16, 17, 20, 22, 23, 25, 27, 30, 31, 32, 34, 35, 39, 43, 50, 52, 56, 59, 61, 66, 67, 69, 72, 75, 82, 84, 85, 89, 90, 93, 96, 97, 98, 99, 100, 101, 110, 113, 116, 117, 119, 121, 123, 126, 132, 134, 135, 136, 138, 139, 140, 142, 146, 148, 152, 155, 159, 160, 161, 163, 164, 165, 169, 170, 172, 174, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 194, 195, 199, 200, 204, 208, 209, 211], "t0": [134, 140], "t1": [140, 191, 195], "t2": [191, 195], "t3": 195, "t_1": 140, "t_2": 140, "t_3": 140, "t_4": 140, "t_5": 140, "t_6": 140, "t_add": [23, 43, 96, 97, 98, 99, 100, 163, 204], "t_add_ax0": 96, "t_add_ax1": 96, "t_add_ax2": 96, "t_add_ax3": 96, "t_add_intermedi": [23, 43], "t_bia": 138, "t_conv": 138, "t_divid": 204, "t_divide_r": 204, "t_divide_red_1": 204, "t_divide_red_rf": 204, "t_divide_red_rf_1": 204, "t_elemwise_sum": 204, "t_matmul_nt": [97, 98, 99, 100], "t_multipli": [97, 98, 99, 100, 163, 204], "t_relu": [97, 98, 99, 100, 138], "t_reshap": 97, "t_softmax_exp": [97, 98, 99, 100, 204], "t_softmax_exp_1": 204, "t_softmax_expsum": [97, 98, 99, 100], "t_softmax_maxelem": [97, 98, 99, 100], "t_softmax_norm": [97, 98, 99, 100, 204], "t_softmax_norm_1": 204, "t_transpos": [23, 43, 110], "tab": [9, 17, 118], "tabbi": [51, 67, 70, 71, 73, 119, 202, 210], "tabl": [1, 6, 66, 97, 98, 99, 100, 146, 156, 159, 177, 183, 202, 210], "tabular": 160, "tack": 34, "tag": [12, 16, 17, 36, 56, 79, 93, 101, 155, 165, 180, 181, 185, 186, 187, 191, 192, 195, 204], "tag_dict": 180, "tag_scop": 181, "tagscop": 181, "tail": [123, 191], "take": [1, 2, 3, 4, 5, 7, 9, 10, 11, 16, 17, 20, 23, 27, 30, 31, 34, 35, 36, 37, 41, 43, 44, 49, 56, 62, 63, 65, 66, 67, 68, 73, 75, 79, 82, 84, 96, 98, 100, 101, 104, 105, 106, 107, 108, 109, 116, 117, 118, 122, 123, 132, 134, 135, 138, 139, 146, 147, 148, 149, 151, 152, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 175, 177, 178, 181, 183, 185, 186, 187, 191, 192, 194, 195, 197, 200, 201, 202, 205, 208, 210, 211], "take_backward": 161, "take_leg": 187, "takeattr": 161, "takeawai": 35, "taken": [9, 160, 161, 162, 170, 178], "talk": [2, 7, 11, 15, 20, 123], "tan": [161, 169, 181, 185, 187], "tangent": [160, 187], "tanh": [65, 80, 160, 161, 169, 181, 185, 187, 189], "tar": [17, 50, 53, 56, 64, 65, 66, 68, 70, 71, 74, 80, 97, 105, 107, 109, 116, 117, 118, 119, 122, 124, 157, 174, 206, 210, 212], "tar_f": 122, "tar_fil": [118, 148], "tar_path": 118, "tarbal": [122, 124, 148], "tarfil": [50, 53, 74, 118, 120, 122], "target": [6, 8, 17, 30, 31, 34, 35, 36, 37, 39, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 78, 84, 87, 90, 93, 94, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 118, 119, 123, 126, 129, 138, 139, 141, 146, 147, 148, 149, 150, 153, 155, 156, 157, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 174, 176, 178, 183, 185, 186, 187, 199, 201, 204, 205, 206, 209, 211, 212], "target_1": [8, 79], "target_2": [8, 79], "target_bit": 186, "target_burst_byt": 155, "target_devic": 171, "target_format": 148, "target_height": [168, 187], "target_host": [56, 67, 68, 130, 146, 147, 150, 165, 169, 180, 211], "target_index": 163, "target_kei": 146, "target_kind": [1, 180], "target_lib": 58, "target_map": 180, "target_nam": 212, "target_op": 108, "target_opt": 163, "target_or_curr": 180, "target_shap": [168, 187], "target_spec": 123, "target_weight_nam": 172, "target_width": [168, 187], "targetkind": 180, "tarrai": 204, "tarray_1": 204, "task": [0, 12, 36, 67, 68, 79, 104, 105, 106, 107, 113, 119, 123, 124, 143, 146, 156, 163, 199, 201, 202, 210, 211], "task_config_build_": 79, "task_cpp_unittest": [16, 143], "task_id": [156, 181], "task_input": [101, 146, 187], "task_inputs_overwrit": 146, "task_inputs_save_to_fil": [101, 146], "task_nam": [147, 156], "task_python_unittest": [16, 79], "task_schedul": 156, "task_weight": [97, 98, 99, 100, 146, 156], "taskextractenv": 147, "tasknam": 147, "taskschedul": [97, 98, 99, 100, 146, 156], "taskschedulercallback": 146, "taskschedulertyp": 156, "tasktempl": 147, "tba": 36, "tcp": [56, 67], "te": [5, 22, 30, 37, 46, 47, 48, 49, 52, 53, 61, 67, 69, 70, 71, 82, 84, 88, 89, 90, 96, 101, 104, 109, 113, 126, 129, 130, 132, 134, 135, 136, 138, 139, 140, 141, 146, 147, 148, 150, 159, 160, 161, 162, 165, 169, 170, 185, 187, 189, 200, 204, 205, 206, 209], "te_compil": 165, "te_func": [30, 159], "te_grad_kwarg": [159, 161, 162], "te_grad_nam": [159, 161, 162], "teach": 12, "technic": [9, 11, 15, 39], "techniqu": [18, 23, 30, 31, 32, 75, 104, 208], "technologi": 141, "tecompil": 165, "tedd": [133, 137, 198], "tediou": [2, 84], "tell": [12, 34, 36, 49, 119, 123, 138], "telnetterminal0": 119, "telnetterminal1": 119, "telnetterminal2": 119, "telnetterminal5": 119, "temodul": 30, "temp": [3, 66, 67, 99, 109, 134, 139, 148, 174, 206, 208], "temp_dir": [116, 117, 120, 121, 122, 130], "tempdir": [3, 66, 67, 69, 70, 71, 97, 99, 105, 107, 109, 116, 117, 120, 121, 122, 130, 139, 148, 206, 208, 212], "tempdirectori": 148, "tempexpr": 190, "tempfil": [110, 120, 122], "templat": [5, 7, 16, 56, 86, 96, 97, 98, 99, 100, 104, 105, 106, 107, 116, 118, 120, 122, 123, 124, 147, 157, 169, 187, 198, 200, 203, 205, 207, 208], "template_project_dir": [117, 157], "template_project_path": [116, 120, 121, 122, 157], "templateproject": 157, "tempor": [134, 185], "temporari": [0, 36, 69, 70, 71, 120, 122, 126, 134, 146, 148, 162, 163, 192, 193], "temporarydirectori": 110, "tempori": 3, "ten": 123, "tenant": 9, "tend": [10, 75], "tendenc": 4, "tensor": [2, 5, 9, 18, 20, 22, 23, 26, 27, 31, 34, 36, 37, 41, 43, 44, 51, 52, 53, 59, 65, 67, 68, 72, 75, 84, 85, 86, 88, 90, 96, 97, 98, 99, 100, 101, 110, 111, 113, 118, 121, 122, 126, 129, 130, 135, 136, 137, 140, 141, 146, 147, 148, 150, 152, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 181, 182, 183, 185, 186, 187, 189, 190, 191, 192, 194, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210], "tensor0_float16": 68, "tensor0_float32": 68, "tensor0_float64": 68, "tensor0_int16": 68, "tensor0_int32": 68, "tensor0_int64": 68, "tensor0_int8": 68, "tensor0_uint16": 68, "tensor0_uint8": 68, "tensor1_float16": 68, "tensor1_float32": 68, "tensor1_float64": 68, "tensor1_int16": 68, "tensor1_int32": 68, "tensor1_int64": 68, "tensor1_int8": 68, "tensor1_uint16": 68, "tensor1_uint8": 68, "tensor2_float16": 68, "tensor2_float32": 68, "tensor2_float64": 68, "tensor2_int16": 68, "tensor2_int32": 68, "tensor2_int64": 68, "tensor2_int8": 68, "tensor2_uint16": 68, "tensor2_uint8": 68, "tensor3_float16": 68, "tensor3_float32": 68, "tensor3_float64": 68, "tensor3_int16": 68, "tensor3_int32": 68, "tensor3_int64": 68, "tensor3_int8": 68, "tensor3_uint16": 68, "tensor3_uint8": 68, "tensor4_float16": 68, "tensor4_float32": 68, "tensor4_float64": 68, "tensor4_int16": 68, "tensor4_int32": 68, "tensor4_int64": 68, "tensor4_int8": 68, "tensor4_uint16": 68, "tensor4_uint8": 68, "tensor5_float16": 68, "tensor5_float32": 68, "tensor5_float64": 68, "tensor5_int16": 68, "tensor5_int32": 68, "tensor5_int64": 68, "tensor5_int8": 68, "tensor5_uint16": 68, "tensor5_uint8": 68, "tensor6_float16": 68, "tensor6_float32": 68, "tensor6_float64": 68, "tensor6_int16": 68, "tensor6_int32": 68, "tensor6_int64": 68, "tensor6_int8": 68, "tensor6_uint16": 68, "tensor6_uint8": 68, "tensor_a": [170, 187], "tensor_b": [170, 187], "tensor_data": 119, "tensor_expr_func": 160, "tensor_expr_get_start": [198, 201, 207, 208], "tensor_expr_op": [22, 113, 160], "tensor_float16_t": 68, "tensor_float32_t": 68, "tensor_float64_t": 68, "tensor_input_map": 146, "tensor_int16_t": 68, "tensor_int32_t": 68, "tensor_int64_t": 68, "tensor_int8_t": 68, "tensor_intrin": [2, 181, 183], "tensor_ir": [29, 198], "tensor_ir_blitz_cours": [198, 207, 209], "tensor_ir_inplace_op": 160, "tensor_ir_op": [22, 160], "tensor_nam": 119, "tensor_nil_float16": 68, "tensor_nil_float32": 68, "tensor_nil_float64": 68, "tensor_nil_int16": 68, "tensor_nil_int32": 68, "tensor_nil_int64": 68, "tensor_nil_int8": 68, "tensor_nil_uint16": 68, "tensor_nil_uint8": 68, "tensor_to_shap": [161, 163], "tensor_typ": 148, "tensor_uint16_t": 68, "tensor_uint8_t": 68, "tensoraffinetyp": 155, "tensorcomputeop": 181, "tensorcor": [87, 91, 148, 156, 186, 198], "tensordot": 187, "tensorflow": [12, 41, 48, 53, 54, 55, 56, 66, 68, 74, 75, 97, 98, 99, 100, 105, 106, 107, 108, 119, 120, 122, 123, 124, 126, 167, 169, 173, 187, 198, 205, 206, 210, 211], "tensorflow_op": 52, "tensorintrin": [181, 183, 185], "tensorir": [2, 19, 22, 29, 31, 43, 44, 110, 111, 113, 141, 150, 181, 183, 198, 203, 207], "tensornod": 5, "tensorrt": [36, 41, 62, 106], "tensorrt_op": 65, "tensorrtopconvert": 65, "tensorslic": 181, "tensorspec": 75, "tensorstructinfo": [20, 22, 159, 160, 161, 162, 163], "tensortyp": [4, 34, 84, 117, 129, 130, 155, 169, 188, 195], "tensortypenod": [34, 36], "term": [9, 11, 27, 34, 49, 132, 140, 163, 167, 169, 171, 183, 185, 187, 192, 194, 210], "termgraph": [131, 148], "termin": [56, 66, 69, 97, 98, 99, 100, 105, 106, 107, 118, 148, 156, 157, 174, 185], "terminate_task": 156, "terminologi": [37, 162, 169], "termnod": 148, "termplott": [131, 148], "termvizpars": [131, 148], "ternari": 192, "tesor": 86, "test": [3, 5, 6, 7, 9, 11, 13, 15, 17, 31, 52, 56, 58, 61, 62, 64, 65, 66, 69, 70, 71, 80, 84, 85, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 120, 121, 122, 129, 130, 132, 134, 135, 139, 142, 146, 147, 148, 153, 156, 158, 159, 160, 161, 162, 163, 167, 169, 170, 172, 173, 174, 176, 180, 182, 185, 187, 194, 199, 200, 201, 204, 206, 208, 210], "test_add": 150, "test_add1": 150, "test_add2": 150, "test_all_elemwis": 16, "test_arm_compute_lib": 58, "test_config": 58, "test_dataflow_pattern": 194, "test_dir": 212, "test_forward": 16, "test_funct": 79, "test_i": 64, "test_imag": 47, "test_input": 171, "test_mask": 126, "test_match_const": 194, "test_match_data_layout": 194, "test_match_diamond": 194, "test_match_dom_diamond": 194, "test_match_func": 194, "test_match_funct": 194, "test_match_if": 194, "test_match_kernel_s": 194, "test_match_let": 194, "test_match_op_or": 194, "test_match_opt": 194, "test_match_plus_zero": 194, "test_match_tupl": 194, "test_match_tuple_get_item": 194, "test_match_typ": 194, "test_mma_intrin": 183, "test_mytest": 8, "test_nam": 7, "test_no_match_attr": 194, "test_op_level3": 34, "test_opencl": 69, "test_pass_storage_rewrit": 16, "test_pipeline_executor": 130, "test_something_flaki": 7, "test_street_smal": 72, "test_target": [67, 68, 69], "test_tensorrt": 65, "test_tir_transform_inject_rolling_buff": 16, "test_upscal": 16, "test_vulkan": 69, "test_x": 64, "testcas": 148, "testdata": [116, 118, 122], "testing_scop": 159, "testingscop": 159, "testreplacebind": 163, "testreplacefunc": [4, 163, 172, 186], "testtimeevalu": [162, 178], "text": [14, 16, 17, 52, 118, 119, 131, 148, 155, 160, 161, 162, 166, 167, 169, 170, 171, 174, 181, 191, 192, 195, 197, 210, 211], "text_summari": 174, "textiobas": 147, "textual": 172, "textur": [56, 67, 68], "textureflatten": 186, "tf": [48, 52, 53, 66, 69, 74, 75, 104, 120, 123, 167, 169], "tf_compat_v1": 52, "tf_crop_and_res": [161, 168, 187], "tf_half_pixel_for_nn": [161, 168, 187], "tf_test": 52, "tfactor": 181, "tfbertforsequenceclassif": 75, "tflite": [16, 54, 55, 68, 76, 77, 115, 117, 119, 120, 121, 123, 125, 167, 173, 198, 199, 210, 211], "tflite_11_05_08": 74, "tflite_builtins_int8": 123, "tflite_model": [53, 74, 116, 118, 120, 122, 123], "tflite_model_buf": [53, 74, 116, 118, 120, 122], "tflite_model_fil": [53, 74], "tflite_output": 74, "tflite_pr": 74, "tflite_r": 74, "tfliteconvert": 123, "tgt": [61, 208], "tgt_gpu": 208, "tgt_stmt": 183, "tgz": [17, 53, 74, 119, 123], "th": [34, 152, 160, 161, 162, 163, 166, 168, 169, 170, 183, 187, 208], "tha": 14, "than": [1, 2, 4, 8, 9, 12, 16, 17, 22, 27, 31, 34, 35, 36, 49, 51, 67, 68, 69, 70, 71, 73, 74, 75, 79, 90, 105, 116, 118, 120, 121, 123, 135, 139, 146, 147, 148, 152, 155, 157, 160, 161, 162, 163, 164, 165, 167, 168, 169, 173, 174, 177, 178, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 194, 201, 202, 204, 209, 210], "thank": [2, 5], "thei": [1, 2, 3, 4, 7, 9, 10, 11, 12, 16, 17, 20, 27, 35, 36, 37, 39, 43, 56, 58, 59, 65, 75, 79, 80, 84, 90, 96, 97, 98, 99, 100, 122, 123, 126, 129, 138, 139, 140, 142, 147, 155, 158, 160, 161, 162, 163, 164, 168, 169, 170, 172, 178, 181, 183, 186, 187, 188, 191, 192, 193, 195, 199, 201, 204, 208, 211], "them": [2, 3, 4, 5, 7, 8, 9, 10, 12, 16, 20, 23, 27, 34, 35, 36, 43, 56, 59, 60, 61, 67, 75, 79, 80, 84, 90, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 118, 119, 122, 123, 129, 131, 138, 139, 140, 143, 146, 147, 148, 155, 158, 160, 161, 163, 164, 167, 168, 169, 170, 172, 175, 181, 183, 186, 191, 192, 194, 195, 197, 199, 201, 202, 204, 205, 206, 208, 209], "themselv": [11, 25, 192], "then_cas": 185, "therebi": 90, "therefor": [4, 34, 79, 84, 88, 93, 143, 152, 161], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 22, 23, 25, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 82, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 121, 122, 123, 124, 126, 129, 131, 132, 134, 135, 136, 138, 139, 140, 142, 143, 145, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212], "thie": 185, "thierri": 97, "thin": [148, 149, 152, 186], "thing": [9, 10, 12, 17, 35, 36, 44, 60, 63, 89, 123, 131, 142, 160, 177, 192, 201, 202, 210, 211], "think": [9, 194], "third": [36, 142, 173, 182, 185], "thirdparti": 148, "those": [1, 4, 7, 9, 12, 16, 22, 35, 37, 59, 65, 66, 75, 79, 89, 115, 119, 123, 138, 143, 160, 161, 162, 163, 172, 183, 187, 191, 192, 195, 204], "though": [9, 16, 35, 109, 123, 139, 147, 157, 161, 162, 169, 172, 178, 186, 189, 192, 195, 202], "thought": [9, 37], "thousand": 123, "thread": [1, 2, 4, 10, 13, 17, 27, 37, 39, 43, 62, 82, 89, 90, 108, 110, 136, 146, 147, 156, 175, 180, 181, 183, 185, 186, 201, 209, 212], "thread_axi": [37, 61, 88, 89, 96, 104, 109, 134, 135, 136, 181, 183, 185, 208], "thread_bind": [110, 183, 185, 209], "thread_count": 185, "thread_ext": 129, "thread_i": [88, 89], "thread_ivar": 181, "thread_tag": [181, 185], "thread_warp_s": [70, 75, 104, 180], "thread_x": [88, 89, 135], "thread_xz": 88, "thread_yz": 88, "thread_z": 89, "threadbind": 185, "threadblock": 185, "threadedsess": 175, "threadgroup": 185, "threadidx": [37, 88, 89, 96, 104, 109, 110, 129, 134, 135, 136, 138, 183, 186, 189, 204, 208, 209], "threadidx_i": [89, 204], "threadidx_x": [89, 96, 134, 135, 136, 204], "threadidx_x_1": [96, 204], "threadidx_x_2": 204, "threadidx_y_1": 204, "threadidx_y_2": 204, "threadidx_z": [89, 204], "threadidx_z_1": 204, "threadidx_z_2": 204, "threadloc": 37, "threadlocalstor": 4, "threadripp": [105, 106, 107], "threadsaf": 5, "threadsync": 186, "threadworkload": 37, "three": [1, 3, 9, 25, 27, 35, 36, 37, 56, 63, 69, 70, 71, 89, 113, 123, 138, 158, 160, 173, 181, 182, 187, 192, 202, 206, 208, 210, 212], "thresh": 47, "threshold": [47, 66, 147, 160, 173, 183], "through": [1, 4, 7, 8, 9, 11, 13, 17, 18, 20, 30, 34, 35, 37, 52, 56, 59, 62, 64, 65, 66, 67, 74, 75, 79, 80, 84, 109, 116, 122, 131, 134, 135, 142, 144, 157, 161, 162, 163, 172, 178, 180, 183, 186, 188, 191, 199, 201, 202, 203, 205, 209, 210, 211], "throughout": [17, 75], "throughput": [66, 146], "throw": [4, 49, 85, 146, 172, 180, 185, 191], "thrown": [4, 123, 151, 160, 161], "thu": [31, 34, 82, 88, 89, 123, 139, 147, 155, 161, 164, 169, 181, 187, 189, 191, 192, 195], "ti": [2, 89, 106, 111], "tian": [129, 206], "tianqi": [132, 134, 135, 163, 208], "tiger": [46, 50, 53, 67, 69, 73, 121, 202, 210], "tigri": [202, 210], "tile": [26, 64, 75, 88, 89, 90, 96, 101, 104, 105, 106, 107, 139, 146, 147, 148, 161, 169, 170, 181, 183, 187, 200, 201, 205, 208, 209], "tile_0": 147, "tile_f": 104, "tile_i": [104, 147, 201], "tile_k": [170, 187], "tile_n": [170, 187], "tile_rc": 104, "tile_ri": 104, "tile_rx": 104, "tile_s": [170, 187], "tile_x": [104, 147, 201], "tileattr": 161, "time": [0, 4, 5, 8, 9, 11, 15, 16, 17, 27, 30, 31, 32, 34, 37, 39, 43, 47, 49, 50, 52, 56, 59, 65, 67, 68, 69, 72, 73, 74, 75, 79, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 113, 115, 118, 119, 120, 121, 123, 124, 135, 143, 146, 147, 148, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 167, 169, 170, 171, 172, 174, 178, 180, 181, 183, 186, 187, 192, 195, 200, 201, 202, 208, 210, 211], "time_end": 152, "time_evalu": [31, 88, 89, 90, 96, 101, 104, 109, 162, 178, 200, 208], "time_f": 109, "time_start": 152, "time_wait": 174, "timeit": [90, 156, 202, 208], "timeout": [67, 97, 98, 99, 104, 105, 106, 107, 117, 146, 147, 157, 174, 202, 211], "timeout_overrid": 157, "timeout_sec": 157, "timer": [152, 202], "timer_v": 118, "timestamp": [146, 147, 181, 201], "timestep": [135, 160], "timing_inst": [85, 154], "timing_numb": 202, "timing_r": [162, 178], "timing_repeat": 202, "timing_result": 152, "tindex": 181, "tinfo": [147, 187], "tini": [47, 116, 118, 120], "tinyllama": 113, "tip": [9, 10, 15, 32, 33, 73, 74, 78], "tir": [4, 6, 16, 22, 23, 25, 30, 31, 37, 43, 82, 84, 88, 89, 90, 96, 97, 98, 99, 100, 101, 110, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 132, 134, 135, 136, 139, 140, 141, 149, 150, 155, 156, 158, 159, 160, 161, 162, 163, 165, 166, 181, 187, 200, 204, 205, 208, 209, 212], "tir_creat": [29, 30, 198], "tir_gv": 22, "tir_linear": 22, "tir_matmul": 181, "tir_phase_0": 212, "tir_transform": [29, 31, 198], "tir_var": [161, 162], "tir_var_upper_bound": 163, "tir_vars_in_struct_info": 158, "tirpagedkvcach": 113, "titanx": 106, "titl": [7, 12, 16, 17, 89, 123], "tl": 90, "tlc": [7, 12, 116, 118, 122], "tlcpack": [7, 79, 119, 123, 142, 144], "tlcpackstag": 7, "tm": [115, 125, 198], "tmlc": 64, "tmoreau89": 97, "tmp": [0, 66, 67, 69, 70, 71, 85, 97, 105, 106, 107, 123, 130, 138, 148, 162, 212], "tmp7rv4p5iq": 123, "tmp_dir": [110, 130], "tmp_log_fil": [67, 105, 106, 107], "tmp_path": 68, "tn": 191, "to_arrai": 175, "to_batch": 172, "to_batch_matmul": 172, "to_cp": 172, "to_dlpack": 44, "to_dlpack_func": 148, "to_exclud": 147, "to_json_dict": 147, "to_mxnet_func": 148, "to_networkx": 126, "to_python": 171, "to_pytorch_func": 148, "to_scipy_sparse_arrai": 126, "to_sourc": 171, "to_str": 36, "to_vdevic": 161, "toanormalform": [35, 84, 172], "toanormalformexpr": 172, "tobasicblocknormalform": 172, "tobyt": 119, "tocp": 172, "todai": [75, 194], "todens": [75, 101], "todo": [4, 48, 73, 90, 146, 167], "togeth": [3, 9, 19, 31, 35, 36, 37, 43, 75, 84, 131, 138, 139, 140, 141, 146, 162, 163, 169, 170, 172, 178, 187, 204, 208], "tographnormalform": 172, "token": [36, 142, 160, 161, 174], "toler": 171, "tolist": 72, "tom": 122, "tomixedprecis": [56, 67, 163, 172], "tomohiro": 69, "tonondataflow": [113, 163], "too": [3, 23, 56, 80, 96, 98, 100, 101, 104, 105, 106, 107, 108, 113, 118, 123, 146, 147], "took": [36, 56], "tool": [2, 9, 16, 30, 61, 62, 66, 69, 75, 80, 97, 99, 115, 118, 125, 148, 160, 166, 198, 199, 202, 203, 210, 211], "toolchain": [56, 62, 68, 69, 80, 143, 148], "toolkit": 61, "top": [2, 5, 7, 14, 16, 32, 35, 46, 47, 48, 50, 51, 52, 53, 66, 67, 69, 70, 71, 74, 79, 121, 124, 138, 146, 147, 156, 160, 161, 164, 168, 169, 170, 173, 183, 187, 188, 191, 194, 195, 196, 200, 203], "top1": [46, 50, 69, 70, 71], "top1_kera": 48, "top1_torch": [51, 121], "top1_tvm": [48, 51, 121], "top3": 73, "top5": 67, "top_categori": 67, "top_k": [52, 156, 160, 173], "top_k_record": 156, "top_p": 160, "topdir": 212, "tophub": 147, "topi": [22, 34, 37, 96, 97, 98, 99, 100, 101, 104, 108, 138, 139, 141, 147, 150, 153, 161, 163, 168, 169, 181, 198, 203, 205, 207], "topi_comput": 34, "topi_integr": 147, "topi_schedul": 147, "topic": [12, 16, 44, 82, 113], "topisst": 35, "topk": [160, 161, 169, 187], "topkattr": 161, "topleft": 161, "topleveltracedmodul": 167, "topmost": 188, "topolog": 36, "topologi": [59, 192, 194], "topologicalsort": 163, "toppattern": [34, 194], "torch": [43, 44, 51, 67, 68, 70, 71, 72, 73, 84, 111, 113, 121, 126, 161, 167, 210], "torch_class_kei": [51, 121], "torch_fx": 160, "torch_img": [51, 121], "torch_model": [111, 126, 160], "torchfximport": 160, "torchmodel": 43, "torchscript": [51, 67, 68, 70, 71, 167], "torchvis": [51, 67, 68, 70, 71, 111, 121], "tornado": [104, 105, 106, 107, 119, 143], "tornadomeet": 171, "tos": [12, 54, 62, 76, 81, 87, 94, 102, 115], "total": [17, 24, 29, 45, 47, 50, 52, 55, 67, 68, 69, 72, 73, 77, 80, 83, 90, 91, 93, 95, 97, 98, 99, 100, 103, 105, 106, 107, 113, 114, 117, 121, 123, 125, 128, 137, 146, 147, 152, 158, 162, 163, 164, 169, 173, 178, 181, 183, 189, 198, 200, 202, 207, 208], "total_el": 36, "total_seq_len": 161, "total_seq_len_kv": 161, "total_tim": [117, 152], "total_tri": 111, "totensor": [50, 51, 67, 73, 121], "touch": [16, 80, 156, 211], "touch_task": 156, "tour": 205, "toward": [12, 152, 185, 208], "tp": [4, 56, 188], "tp1": 164, "tqchen": 171, "trace": [4, 26, 32, 51, 67, 68, 70, 71, 84, 121, 156, 160, 167, 169, 172, 181, 183, 185, 188], "trace_act": [181, 185], "trace_stack": 188, "traceabl": [163, 186, 188], "traceback": 13, "traced_model": 68, "tracer": 160, "tracerwarn": 72, "tracewrapp": 72, "track": [5, 18, 20, 37, 123, 159, 163, 183, 185, 191, 192, 195], "tracker": [56, 58, 67, 98, 100, 106, 108, 143, 146, 147, 174, 197, 210, 211], "tracker_addr": 174, "tracker_host": 69, "tracker_port": 69, "trackersess": 174, "tradit": [62, 89, 115, 192, 205], "tradition": 167, "traffic": [123, 157], "trail": [8, 202], "train": [2, 12, 41, 44, 59, 67, 68, 73, 110, 111, 113, 115, 116, 118, 119, 120, 125, 126, 146, 147, 161, 163, 167, 170, 187, 191, 198, 201, 202, 210, 211], "train_dataset": 123, "train_i": 64, "train_resnet": 171, "train_x": 64, "trained_cel": 191, "trained_model": [116, 118, 120], "trait": 11, "tran": 185, "trans_a": 187, "trans_b": 187, "transa": 148, "transact": 185, "transb": 148, "transfer": [1, 17, 36, 37, 66, 88, 147, 152, 161, 169, 206], "transform": [0, 4, 16, 18, 19, 21, 22, 24, 25, 26, 28, 29, 34, 35, 36, 37, 41, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 84, 85, 89, 90, 97, 98, 99, 100, 101, 105, 106, 107, 108, 110, 111, 113, 116, 117, 118, 120, 121, 122, 123, 126, 130, 136, 138, 141, 146, 147, 148, 153, 154, 155, 158, 159, 160, 161, 162, 168, 169, 170, 171, 173, 181, 182, 183, 184, 185, 187, 190, 192, 193, 194, 195, 198, 200, 202, 205, 206, 208], "transform_block_layout": 183, "transform_dataflowblock": 163, "transform_funct": [4, 84, 163, 172, 186], "transform_imag": [69, 70, 71], "transform_layout": [181, 183], "transform_modul": [23, 110, 188], "transform_param": [161, 163], "transform_step": 101, "transformed_kernel": 148, "transformlayout": 183, "transformmmabufferlayout": 186, "transformspac": 147, "transit": [135, 147], "translat": [37, 58, 89, 160, 181, 183, 185, 205, 211], "translatedlay": 167, "transp_a": 187, "transp_b": 187, "transpar": [36, 129, 132, 192], "transport": [116, 117, 121, 122, 157], "transport_context_manag": [122, 157], "transportclosederror": 157, "transportlogg": 157, "transporttimeout": 157, "transpos": [23, 43, 46, 47, 48, 65, 69, 70, 71, 72, 75, 110, 119, 126, 148, 160, 161, 163, 164, 167, 169, 170, 171, 172, 181, 185, 187, 202, 205, 210], "transpose1": [23, 43], "transpose_a": [167, 170, 187], "transpose_b": [167, 170, 187], "transpose_matrix": 185, "travel": 9, "travers": [4, 25, 36, 56, 160, 164, 169, 181, 208], "treat": [9, 16, 72, 97, 98, 99, 100, 129, 132, 152, 155, 160, 161, 162, 167, 169, 170, 180, 191, 192, 195], "tree": [3, 16, 39, 68, 126, 138, 157, 160, 163, 183, 191, 194, 195], "tremend": 202, "trevor": 65, "tri": [192, 211], "triag": 17, "trial": [56, 68, 96, 97, 98, 99, 100, 101, 104, 110, 146, 147, 156, 162, 163, 178, 200, 201, 202, 211], "trial_scor": 147, "trial_timestamp": 147, "triangular": [160, 161, 169, 187], "trick": [5, 90, 208], "trigger": 7, "tril": 161, "trilinear": [168, 170, 187], "trilu": [169, 187], "triluattr": 161, "tripl": [109, 148, 163, 180], "triplet": 139, "trippabl": 209, "triu": [160, 161], "trivial": [7, 117, 149, 183], "tru": 194, "truck": 47, "true": [6, 9, 20, 22, 23, 30, 31, 34, 35, 36, 37, 39, 43, 46, 47, 48, 49, 50, 51, 52, 53, 56, 59, 65, 67, 68, 69, 70, 71, 72, 73, 75, 79, 82, 85, 89, 90, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 120, 121, 122, 123, 126, 130, 132, 134, 135, 136, 138, 139, 140, 143, 146, 147, 148, 149, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 192, 194, 195, 200, 202, 204, 206, 208, 209, 211, 212], "true_branch": [35, 162, 166, 169], "true_valu": 185, "truman": [129, 206], "trunc": [169, 181, 185, 187], "trunc_divid": 169, "trunc_mod": 169, "truncat": [181, 185, 187], "truncdiv": [181, 185, 187], "truncmod": [181, 185], "trust": [15, 174, 197], "truth": [146, 161], "try": [3, 8, 9, 10, 13, 23, 34, 37, 51, 52, 53, 56, 67, 68, 74, 75, 85, 90, 97, 98, 99, 100, 101, 104, 106, 110, 116, 118, 120, 122, 123, 136, 144, 146, 147, 148, 149, 160, 162, 163, 165, 172, 183, 185, 186, 199, 202, 204, 205, 206, 208, 209, 210], "try_get_conv2d_sparse_input": 187, "try_get_sparse_input": 187, "try_inlin": 149, "try_inline_contiguous_spati": 149, "try_spatial_pack_depthwis": 105, "try_unrol": 147, "try_unroll_vec": 147, "try_wait": 185, "tsk": [67, 105, 106, 107, 147], "tsk_trial": [67, 105, 106, 107], "ttf": 47, "tty": 118, "ttype": 166, "tun": [67, 68], "tunabl": [67, 104, 105, 106, 107, 117, 147, 149, 201, 205, 208], "tune": [2, 56, 65, 67, 68, 69, 74, 75, 86, 94, 96, 101, 103, 111, 115, 119, 125, 143, 146, 147, 156, 163, 172, 180, 186, 188, 198, 200, 203, 205], "tune_and_evalu": [97, 99, 101, 105, 106, 107, 108], "tune_conv2d_cuda": [103, 104, 198], "tune_conv2d_layer_cuda": [95, 96, 198], "tune_graph": 108, "tune_kernel": 108, "tune_log": [67, 68], "tune_network_arm": [95, 97, 198], "tune_network_cuda": [95, 98, 198], "tune_network_mali": [95, 99, 198], "tune_network_x86": [95, 100, 198], "tune_opt": [96, 97, 98, 99, 100, 101, 146, 200], "tune_relay_arm": [103, 105, 198], "tune_relay_cuda": [103, 106, 198], "tune_relay_mobile_gpu": [103, 107, 198], "tune_relay_x86": [103, 108, 198], "tune_sparse_x86": [95, 101, 198], "tune_task": [105, 106, 107, 156], "tune_tir": 156, "tune_with_autoschedul": [95, 198], "tune_with_autotvm": [103, 198], "tunecontext": 156, "tuner": [56, 67, 68, 97, 98, 99, 100, 104, 105, 106, 107, 108, 117, 196, 202, 210], "tuner_obj": [67, 105, 106, 107, 108, 202], "tuning_api": 188, "tuning_api_databas": 188, "tuning_log": 111, "tuning_opt": [105, 106, 107, 108, 146, 202], "tuning_record": [68, 156, 202, 211], "tuningopt": [96, 97, 98, 99, 100, 101, 146, 200], "tuningrecord": 156, "tunner": 117, "tup": [34, 192], "tupl": [0, 34, 35, 48, 65, 79, 82, 96, 111, 113, 120, 131, 133, 134, 137, 146, 147, 148, 152, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 185, 187, 188, 189, 190, 191, 194, 198, 200, 201], "tuple_get_item_nod": 194, "tuple_input": [137, 140, 198], "tuple_pattern": 194, "tuple_valu": [162, 166, 169], "tupleaffinetyp": 155, "tuplegetitem": [35, 162, 166, 169, 192, 194], "tuplegetitemnod": [35, 162], "tuplegetitempattern": 166, "tupleitemgetnod": 35, "tuplenod": [35, 36, 162], "tuplepattern": 166, "tuplestructinfo": [20, 162], "tupletyp": [155, 164, 195], "tuplewrapp": [169, 206], "ture": 167, "turn": [2, 7, 12, 37, 59, 75, 119, 122, 123, 129, 141, 143, 148, 163, 172, 181, 186, 208], "tusker": 52, "tutori": [4, 8, 11, 15, 18, 22, 23, 24, 29, 30, 31, 34, 36, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 56, 58, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 144, 183, 192, 196, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212], "tutorial_dir": 130, "tvfm": 79, "tvm": [0, 1, 3, 4, 6, 8, 9, 10, 13, 14, 15, 16, 18, 19, 20, 22, 23, 25, 26, 27, 30, 31, 33, 34, 35, 38, 41, 43, 44, 54, 58, 61, 66, 68, 72, 75, 76, 77, 78, 79, 82, 83, 86, 88, 89, 90, 94, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 113, 115, 116, 117, 118, 120, 121, 122, 124, 125, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 142, 143, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 203, 204, 207, 208, 209], "tvm4j": 56, "tvm_access_ptr": [89, 139, 185], "tvm_add_filelin": 34, "tvm_attr_field": 34, "tvm_autotun": 210, "tvm_black_format": 183, "tvm_bmma_sync": 185, "tvm_call_pack": [129, 186], "tvm_check_return": 185, "tvm_class_kei": [51, 121], "tvm_data": [44, 187], "tvm_declare_attr": 34, "tvm_define_object_ref_method": 4, "tvm_dev_mblob": 3, "tvm_dll": [4, 122, 212], "tvm_dll_export_typed_func": [36, 160], "tvm_enable_l2_prefetch": [96, 134], "tvm_export": 122, "tvm_ffi": 16, "tvm_fill_frag": [89, 185], "tvm_func": 148, "tvm_home": [56, 79, 143, 160, 212], "tvm_if_then_els": 129, "tvm_lib": 66, "tvm_library_path": [79, 143], "tvm_load_matrix_sync": [89, 185], "tvm_log_debug": 32, "tvm_micro_board": [116, 117, 120, 122], "tvm_micro_seri": [116, 117, 122], "tvm_micro_use_hw": [116, 117, 122], "tvm_mma_sync": [89, 183, 185], "tvm_ndk_cc": [69, 97, 99], "tvm_num_thread": [73, 74, 108], "tvm_op": [0, 152], "tvm_out": [0, 47, 48, 187], "tvm_output": [46, 49, 50, 51, 52, 53, 67, 75, 122, 202], "tvm_pkg": 160, "tvm_pred": 74, "tvm_re": [72, 74], "tvm_register_": 37, "tvm_register_glob": [1, 4, 5, 34, 35, 36, 37, 160], "tvm_register_node_typ": 34, "tvm_register_pass_config_opt": 4, "tvm_register_target_kind": 1, "tvm_result": 73, "tvm_root": 16, "tvm_rpc": [56, 67], "tvm_runtim": [56, 66, 80, 119], "tvm_runtime_pack": 60, "tvm_stack_alloca": 185, "tvm_stack_make_arrai": [129, 185], "tvm_stack_make_shap": [129, 185], "tvm_store_matrix_sync": [89, 185], "tvm_struct_get": 185, "tvm_struct_set": 185, "tvm_target": [64, 66], "tvm_tensorrt_cache_dir": 65, "tvm_tensorrt_max_workspace_s": 65, "tvm_tensorrt_multi_engin": 65, "tvm_tensorrt_use_fp16": 65, "tvm_test_target": [79, 171], "tvm_thread_allreduc": [185, 204], "tvm_throw_last_error": 185, "tvm_top3_label": 73, "tvm_tracker_host": [67, 68, 69], "tvm_tracker_port": [67, 68, 69], "tvm_tupl": 185, "tvm_use_cmsi": 120, "tvm_vulkan_debug_shader_savepath": 6, "tvm_vulkan_disable_dedicated_alloc": 6, "tvm_vulkan_disable_push_descriptor": 6, "tvm_vulkan_disable_shader_valid": 6, "tvm_vulkan_enable_validation_lay": 6, "tvm_workspace_size_byt": 118, "tvmarg": [5, 36, 37, 186], "tvmargssett": 36, "tvmarrai": 176, "tvmarrayhandl": 185, "tvmbackendallocworkspac": 185, "tvmbackendfreeworkspac": 185, "tvmc": [16, 56, 62, 67, 76, 77, 119, 123, 198, 202, 203, 207], "tvmc_command_line_driv": [64, 198, 207, 210], "tvmc_mode": 68, "tvmc_model": 68, "tvmc_packag": 68, "tvmc_python": [198, 207, 210, 211], "tvmcmodel": 56, "tvmcpackag": [56, 68, 211], "tvmcpythonintro": 211, "tvmdbg": 0, "tvmdeviceexttyp": 1, "tvmerror": [13, 151, 155, 162], "tvmexecut": 123, "tvmfunccal": 13, "tvmgen_": 172, "tvmgen_default": [118, 119], "tvmgen_default_": 122, "tvmgen_default_devic": 119, "tvmgen_default_fused_layout_transform": 117, "tvmgen_default_fused_layout_transform_1": 117, "tvmgen_default_fused_nn_contrib_conv2d_nchwc": 117, "tvmgen_default_fused_nn_contrib_dense_pack_add": 122, "tvmgen_default_fused_nn_conv2d_kernel0": 56, "tvmgen_default_input": [118, 119], "tvmgen_default_output": [118, 119], "tvmgen_default_run": [118, 119], "tvmgen_default_vanilla_accelerator_main_0": 212, "tvmgen_mod_name_": 172, "tvmgetlasterror": 185, "tvminiti": 123, "tvmj": 148, "tvmlogf": 118, "tvmpackag": [56, 68], "tvmplatformformatmessag": 118, "tvmplatforminiti": 118, "tvmretvalu": [5, 36, 37, 186], "tvmrunner": 56, "tvmscript": [2, 19, 20, 26, 27, 110, 159, 181, 183, 209], "tvmscriptmodul": 43, "tvmstreamhandl": 1, "tvmvalu": [5, 36, 186], "tvm\u015b": 212, "tvo": 59, "tweak": 143, "twice": [11, 31, 43, 131, 165, 192], "two": [1, 2, 5, 7, 10, 12, 14, 17, 20, 25, 27, 30, 31, 34, 35, 36, 37, 41, 43, 44, 56, 58, 60, 61, 62, 65, 66, 67, 75, 82, 84, 85, 90, 101, 106, 113, 118, 122, 123, 126, 129, 135, 136, 139, 140, 143, 146, 147, 148, 150, 155, 158, 160, 161, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 177, 181, 182, 183, 185, 186, 187, 188, 191, 192, 195, 200, 201, 202, 204, 205, 208, 209, 210], "two_elementwise_transformed_intermediate_buff": 183, "tx": [37, 88, 89, 104, 134, 136, 185, 189, 208], "tx1": 65, "tx2": 65, "txt": [46, 48, 50, 51, 52, 53, 67, 69, 70, 71, 73, 116, 117, 119, 120, 121, 122, 124, 202, 210], "txz": 88, "ty": [84, 85, 88, 89, 104, 130, 183, 194, 206], "ty_nam": [169, 171], "typ": 169, "type": [0, 1, 2, 3, 4, 5, 8, 9, 14, 15, 16, 20, 27, 30, 35, 36, 37, 47, 49, 53, 56, 58, 59, 62, 63, 64, 67, 68, 75, 79, 84, 85, 90, 106, 113, 118, 119, 120, 121, 123, 124, 129, 132, 138, 140, 142, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 202, 208, 209, 210], "type1": 12, "type2": 12, "type3": 12, "type_annot": [89, 139, 155, 166, 169, 185], "type_arg": [161, 169], "type_cal": 155, "type_cod": 36, "type_constraint": [155, 195], "type_def": 155, "type_definit": 155, "type_index": 5, "type_kei": [3, 5, 36, 56, 122, 155, 166], "type_nam": [131, 148], "type_nod": 36, "type_of": 169, "type_param": [70, 71, 155, 169, 195], "type_rel": 155, "type_rel_func": 155, "type_var": [155, 169], "typecal": [155, 195], "typecheck": [191, 195], "typecod": 63, "typeconstraint": [155, 195], "typedata": [155, 169, 195], "typedef": 4, "typedoc": 145, "typedpackedfunc": [4, 35], "typedstorag": 126, "typeerror": [155, 160], "typefunctor": 169, "typekind": 155, "typematch": 36, "typemut": 169, "typenam": 187, "typeparam": [164, 169], "typepattern": 166, "typerel": [155, 195], "typereport": [34, 155], "typescript": 145, "typevar": [155, 160, 164, 169, 195], "typevisitor": 169, "typic": [1, 2, 4, 7, 16, 25, 27, 37, 41, 49, 66, 75, 90, 96, 97, 98, 99, 100, 108, 122, 134, 135, 143, 147, 150, 166, 170, 172, 183, 192, 193, 195, 209], "typical": 124, "typing_extens": [118, 149, 156], "tyz": 88, "tz": 104, "u": [0, 2, 3, 5, 7, 9, 17, 20, 27, 35, 48, 51, 52, 56, 67, 72, 75, 80, 90, 96, 101, 110, 117, 119, 122, 123, 134, 138, 139, 183, 191, 192, 201, 204, 208], "u16": 186, "u200": 66, "u250": 66, "u280": 66, "u50": 66, "u54": 180, "u55": [115, 125, 198], "u8": 186, "uart": [119, 124], "uart0": 119, "uart_stdout": 119, "uartstdoutinit": 119, "uberti": 123, "ubiquit": 191, "ubuntu": [65, 93, 97], "ubuntu_download_arm_compute_lib_binari": 58, "ucb": 62, "uchar": [96, 134], "udchain": 158, "uid_lookup_path": 52, "uint": [96, 134], "uint16": [68, 80, 189], "uint16_t": 118, "uint32": [80, 170, 187, 189, 204], "uint32_t": 118, "uint64": [80, 189, 204], "uint64_t": [5, 96, 134], "uint8": [49, 52, 58, 68, 73, 74, 80, 119, 123, 170, 189], "uint8_t": [118, 119, 123, 212], "uintimm": 185, "ultim": [7, 34, 123, 194, 210], "ultra96": 66, "ultrascal": 66, "ulyanov": 170, "uma": [198, 203, 207], "uma_backend": 212, "uma_cli": 212, "umabackend": 212, "un": [142, 162], "un_cp": 172, "unabl": 25, "unannot": 183, "unari": 183, "unbatch": 123, "unbias": 169, "unbound": [160, 180], "uncas": 75, "uncertain": 9, "unchang": [161, 170, 183], "uncom": [75, 85, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 123, 154], "uncommit": 185, "uncompress": 123, "uncontrol": 172, "undef": 185, "undefin": [4, 162, 169, 182, 185, 186, 187], "undefined_var": 182, "under": [4, 5, 7, 12, 13, 20, 36, 37, 56, 67, 73, 80, 84, 118, 124, 138, 143, 147, 156, 158, 160, 162, 178, 180, 181, 183, 189, 191, 194, 197, 199, 201, 202, 204, 208, 210], "underflow": 169, "underli": [12, 37, 148, 152, 157, 169, 175, 176, 183, 202, 208], "underlin": 36, "underneath": 123, "understand": [0, 1, 2, 3, 9, 12, 19, 26, 30, 31, 35, 69, 70, 71, 84, 104, 123, 131, 138, 141, 143, 201, 205, 208, 210, 211], "understood": [169, 191], "underwai": 6, "undetermin": 4, "undisclos": 197, "undo": 172, "unexpect": [80, 160, 185], "unexpected_kei": 160, "unfold": 191, "unfoldr": 191, "unfortun": [9, 123], "unidirect": 37, "unif": 186, "unifi": [2, 3, 36, 118, 119, 141, 158, 186, 196, 211], "uniform": [16, 30, 31, 37, 58, 59, 61, 65, 72, 75, 88, 89, 90, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 129, 130, 132, 134, 135, 139, 148, 168, 185, 187, 200, 201, 204, 206, 208], "uniform_sampl": [160, 161], "uniformli": [148, 160, 161], "unifythreadbind": 186, "unimport": 146, "unind": 8, "uniniti": 160, "union": [5, 131, 146, 148, 149, 150, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 168, 169, 170, 172, 174, 175, 176, 178, 180, 181, 182, 183, 185, 186, 187, 188, 191, 195], "unipolar": [170, 187], "uniqu": [5, 36, 65, 89, 147, 148, 155, 159, 161, 162, 163, 164, 165, 169, 172, 175, 183, 187, 191, 192, 195], "unit": [16, 17, 25, 27, 56, 58, 64, 65, 66, 68, 85, 89, 90, 126, 130, 139, 146, 155, 159, 160, 161, 170, 171, 173, 180, 183, 185, 196, 206, 208], "unit_shap": 160, "uniti": [2, 18, 19, 20, 30, 43, 110, 111], "units_in": 170, "unittest": 16, "univers": [5, 12, 41, 110, 111, 113, 212], "unknown": [36, 158, 162, 180, 194], "unleash": 66, "unless": [3, 73, 74, 126, 182, 185, 187], "unlik": [1, 62, 160, 161, 170, 181, 183, 185, 187, 189, 192, 211], "unlink": 120, "unlist": 147, "unload": 163, "unmatched_cas": 164, "unmodifi": [161, 181, 188], "unnecessari": [8, 35], "unnecessarili": 16, "uno": 123, "unoptim": [202, 210], "unpack": [1, 36, 79, 116, 118, 119, 120, 121, 123, 146, 148, 161, 162, 167, 185, 187], "unpack_arch": 123, "unpack_nchwc_to_nchw": 187, "unpacked_out": 187, "unpartit": 161, "unpickl": 126, "unprun": 75, "unravel_index": [169, 187], "unrecogn": 36, "unrel": [7, 16], "unreli": [90, 208], "unrol": [4, 37, 82, 90, 96, 101, 104, 105, 106, 107, 147, 150, 171, 181, 183, 186, 189, 200, 201, 205, 208], "unroll_explicit": [37, 96, 104, 200], "unroll_loop": 4, "unrollloop": [2, 4, 37, 89, 186], "unrollloopconfig": 4, "unsaf": [183, 186], "unsafe_hide_buffer_access": 183, "unsafe_set_dtyp": 183, "unscaled_dataset": 123, "unschedul": 186, "unseen": 147, "unset": [6, 61, 79], "unsign": [96, 119, 123, 134], "unsorted_segment_sum": 169, "unspecifi": [6, 163, 169, 187], "unsqueez": [160, 187], "unstabl": [51, 72], "unstructur": [75, 183], "unsuit": 147, "unsupervis": 171, "unsupport": [36, 105, 106, 107, 108, 175], "unsupportedinmodellibraryformaterror": 157, "unsur": 122, "untar": 148, "until": [1, 31, 113, 146, 152, 156, 157, 159, 175, 191, 194, 195], "untouch": 183, "untri": 147, "untrust": 126, "untyped_storag": 126, "untypedstorag": 126, "unus": [1, 4, 158, 162, 163, 170, 172, 191], "unwant": 163, "unwrap": [160, 163], "unwrap_unit_return_tupl": [43, 160], "up": [1, 4, 5, 7, 9, 10, 13, 14, 17, 36, 37, 47, 58, 66, 67, 68, 69, 72, 73, 75, 80, 82, 85, 90, 97, 105, 107, 113, 116, 122, 123, 146, 147, 152, 155, 157, 160, 161, 162, 163, 169, 172, 174, 178, 185, 189, 191, 192, 195, 202, 204, 208, 210, 211], "up_proj": 113, "up_x": 113, "upcom": [201, 208], "updat": [4, 8, 13, 15, 16, 27, 31, 35, 36, 39, 62, 70, 71, 84, 89, 109, 116, 117, 119, 120, 122, 123, 124, 126, 135, 143, 146, 147, 148, 155, 156, 159, 161, 162, 163, 165, 169, 170, 172, 181, 183, 186, 187, 188, 191, 195], "update_from_fil": [96, 146, 200], "update_func": [23, 155, 159], "update_global_info": 155, "update_o": 183, "updated_dag": 146, "updated_func": 159, "updated_mod": [163, 172, 186, 188], "updated_st": 146, "updateparamstructinfo": 163, "updatevdevic": 163, "upfront": 66, "uphold": 11, "upload": [7, 8, 15, 61, 67, 69, 70, 71, 97, 99, 105, 107, 108, 109, 174], "upload_ci_resourc": 8, "upon": [4, 30, 34, 49, 160, 161, 165, 167, 169, 183, 195, 202, 210], "upper": [16, 146, 147, 148, 160, 161, 163, 169, 185, 187, 202], "uppercas": 16, "upsampl": [170, 187], "upsampling3d": [170, 187], "upstream": [14, 16, 17], "url": [8, 12, 14, 16, 17, 50, 120, 123, 142, 174, 202], "url_map": 8, "urllib": 123, "urlretriev": 123, "urrent": 148, "us": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 31, 32, 34, 35, 36, 37, 39, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 79, 80, 81, 82, 83, 86, 87, 88, 90, 91, 97, 98, 99, 100, 101, 104, 105, 107, 108, 109, 110, 111, 113, 116, 117, 118, 121, 122, 126, 127, 128, 133, 134, 135, 136, 137, 140, 142, 143, 144, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 202, 203, 204, 205, 206, 207, 209, 212], "usabl": [1, 12, 35, 191], "usag": [12, 13, 15, 36, 62, 64, 79, 119, 120, 129, 131, 138, 139, 140, 147, 155, 158, 160, 162, 163, 165, 172, 173, 174, 181, 185, 187, 189], "usampl": [160, 161], "usart3": 118, "usb": 118, "usb_devic": 118, "usbmodemxxxx": 118, "use_3xtf32": 130, "use_android": [105, 107], "use_arm_compute_lib": 58, "use_arm_compute_lib_graph_executor": 58, "use_auto_schedul": [97, 98, 99, 100], "use_autotvm": 165, "use_bnn": 59, "use_ccach": 143, "use_clml": 56, "use_clml_graph_executor": 56, "use_cmsi": 120, "use_cmsis_nn": 118, "use_codegenc": 36, "use_cpp_rpc": 56, "use_cpp_rtvm": 56, "use_cubla": 143, "use_cuda": [70, 143], "use_cudnn": [129, 143], "use_cutlass": [130, 143], "use_dens": 167, "use_dp": 108, "use_exist": 157, "use_fast_exp": 187, "use_fast_math": 130, "use_graph_executor": 56, "use_ieee_fp": 180, "use_implicit_batch": 65, "use_int_div": 187, "use_kalloc_align": 56, "use_libbacktrac": [56, 80], "use_llvm": [56, 66, 80, 143], "use_met": 143, "use_micro": 80, "use_multiprocess": 130, "use_ndk": [97, 99], "use_nt_batch_matmul": 167, "use_opencl": [56, 69, 80, 109, 143], "use_papi": 93, "use_parser_friendly_nam": 167, "use_pass_infra": [83, 84, 198], "use_pass_instru": [83, 85, 198], "use_physical_hw": [116, 117, 122], "use_pipeline_executor": 130, "use_profil": 0, "use_qat": 172, "use_qfloat": 180, "use_rasp": 12, "use_relay_debug": 32, "use_rocm": 143, "use_rpc": 56, "use_scalable_vector": 187, "use_sm": 187, "use_spars": [97, 100], "use_tensorrt_codegen": 65, "use_tensorrt_runtim": 65, "use_transfer_learn": [105, 106, 107], "use_unpacked_api": 212, "use_vart_edge_dpu": 66, "use_vitis_ai": 66, "use_vulkan": [69, 143], "use_xpu": 80, "useassumetoreducebranch": 186, "usecas": [169, 183], "useless": 43, "user": [2, 4, 5, 8, 9, 12, 13, 16, 22, 30, 36, 37, 43, 56, 62, 66, 80, 82, 84, 86, 90, 96, 101, 104, 105, 106, 107, 113, 118, 119, 126, 129, 130, 131, 132, 135, 136, 139, 141, 142, 146, 147, 148, 154, 155, 157, 160, 161, 162, 163, 164, 166, 167, 169, 171, 172, 174, 175, 177, 180, 181, 183, 185, 186, 187, 188, 189, 191, 192, 194, 195, 197, 200, 201, 205, 206, 208, 209, 210], "usernam": [16, 17], "userwarn": [49, 51, 52, 67, 68, 70, 71, 72, 73, 106, 121, 123, 126, 204, 206, 211], "uses_gpu": [79, 171], "ushort": [96, 134], "using_external_lib": [128, 129, 198], "using_pipeline_executor": [128, 130, 198], "using_relay_viz": [128, 131, 198], "usingblockvar": 186, "usmp": [118, 119], "usr": [62, 66, 72, 80, 97, 99, 143], "usual": [2, 5, 7, 9, 11, 14, 16, 19, 20, 25, 35, 66, 80, 104, 109, 110, 113, 123, 129, 131, 138, 146, 147, 160, 163, 164, 177, 185, 186, 187, 191, 195], "utf": 47, "util": [1, 2, 3, 18, 30, 31, 35, 36, 52, 56, 66, 67, 68, 69, 70, 71, 73, 90, 97, 99, 100, 101, 105, 106, 107, 109, 116, 117, 118, 120, 121, 122, 123, 130, 131, 139, 142, 147, 158, 161, 167, 169, 171, 182, 184, 188, 192, 202, 206, 208, 212], "utk": 93, "uwsampl": 67, "ux": 0, "v": [5, 13, 16, 17, 22, 69, 75, 97, 105, 107, 109, 113, 116, 117, 119, 120, 122, 123, 124, 143, 147, 161, 169, 180, 182, 187, 191, 192, 199], "v0": [17, 48, 66, 67, 110, 148, 160, 169, 172, 176, 183], "v1": [17, 52, 53, 66, 69, 105, 110, 113, 119, 123, 126, 160, 167, 170, 183, 191, 201], "v16": 143, "v2": [54, 55, 62, 74, 123, 198, 202, 210, 211], "v21": 58, "v3": [54, 55, 58, 108, 116, 117, 120, 122, 124, 171, 198], "v4": 120, "v6": 143, "v68": 180, "v8a": [56, 69], "v_ax0": [23, 43, 163], "v_ax1": [23, 43, 163], "v_i": [20, 30], "v_i0": [22, 23, 43, 209], "v_i1": [22, 23, 43], "v_j": [20, 30], "v_k": [20, 23, 30, 43], "v_proj": 113, "va_end": 118, "va_list": 118, "va_start": 118, "vagu": [16, 167], "val": [104, 140, 147, 163, 165, 185, 201], "val2017": 123, "val_1": 140, "val_2": 140, "val_accuraci": 123, "val_loss": 123, "valid": [1, 2, 6, 7, 12, 27, 48, 49, 56, 64, 67, 72, 79, 97, 98, 99, 100, 104, 126, 146, 147, 148, 151, 152, 156, 160, 161, 162, 163, 165, 169, 172, 173, 178, 180, 183, 185, 186, 187, 192, 195, 202, 208, 210], "valid_box": 72, "valid_count": [163, 169, 173, 187], "valid_length": [169, 187], "valid_list": 148, "valid_op": 164, "validation_data": 123, "validation_dataset": 123, "valu": [0, 1, 2, 4, 5, 6, 8, 12, 15, 16, 27, 30, 35, 36, 49, 64, 65, 69, 70, 71, 72, 73, 75, 82, 85, 96, 98, 101, 105, 106, 107, 113, 116, 118, 119, 121, 122, 123, 124, 126, 134, 135, 139, 140, 143, 146, 147, 148, 151, 152, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 182, 183, 185, 186, 187, 191, 192, 194, 195, 200, 201, 202, 205, 206, 208, 209], "value_index": [5, 134, 181, 185, 204], "value_to_bound_var": 163, "valueerror": [13, 67, 85, 97, 98, 99, 100, 105, 106, 107, 108, 113, 155, 180, 202], "valuetoexpr": 35, "vanilla": 170, "vanilla_acceler": 212, "vanilla_accelerator_conv2dnchw": 212, "vanilla_conv2dnchw": 212, "vanillaacceler": 212, "vanillaacceleratorbackend": 212, "vanillaacceleratorconv2dpass": 212, "var": [2, 4, 22, 30, 34, 35, 43, 58, 61, 82, 84, 113, 117, 126, 129, 130, 131, 132, 134, 135, 136, 139, 140, 147, 148, 149, 150, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 194, 204, 208], "var_a": 30, "var_add": 23, "var_b": 30, "var_c": 30, "var_comput": [22, 23, 159], "var_env_linear": 22, "var_lv": 22, "var_map": 158, "var_matmul": 23, "var_matmul1": 23, "var_relu": 23, "var_rxplacehold": 159, "var_rxplaceholder_1": 159, "var_t_add": 23, "var_usag": 163, "var_x": 23, "varaibl": 65, "vararg": 181, "varargs_nam": 181, "varbind": [158, 162, 163], "varbindingnod": 162, "vardef": 184, "vari": [6, 124, 139, 192, 195, 202, 205, 208, 210], "variabl": [0, 2, 8, 9, 12, 25, 31, 51, 56, 61, 65, 66, 70, 71, 73, 74, 79, 80, 82, 88, 90, 97, 109, 116, 119, 120, 121, 122, 123, 126, 136, 143, 147, 148, 152, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 208], "variad": [175, 185], "varianc": [104, 160, 161, 169, 170, 173, 187, 201], "variant": [2, 31, 75, 110, 154, 155, 170, 171, 186, 188, 202, 210], "varibl": [70, 71], "varieti": [7, 8, 12, 54, 76, 87, 93, 94, 102, 129, 191], "varint": 156, "variou": [2, 4, 15, 18, 22, 33, 36, 41, 43, 52, 56, 62, 67, 78, 84, 85, 90, 113, 120, 123, 129, 136, 148, 175, 187, 192, 195, 209], "varnam": 163, "varnod": [36, 155, 162, 166, 194], "varpattern": 166, "vast": 2, "vastli": 90, "vax1_fused_0": 110, "vax1_fused_1": 110, "vd": 66, "vdevic": [155, 161, 162, 163], "vdevice_id": 155, "ve": [4, 17, 31, 34, 35, 119, 123, 202, 208, 210], "vec": 185, "vec1": 185, "vec2": 185, "vec_siz": 147, "vector": [2, 4, 9, 25, 36, 75, 82, 88, 89, 96, 101, 105, 107, 119, 123, 139, 146, 147, 161, 169, 170, 180, 181, 183, 185, 186, 187, 189, 200, 201, 202, 205, 209], "vector_unit_byt": 146, "vectorcombin": 185, "vectorhigh": 185, "vectorize8": 82, "vectorizeloop": [37, 186], "vectorlow": 185, "vela": 119, "vendor": [104, 129, 141], "venv": [51, 67, 68, 70, 71, 72, 73, 121, 123, 126, 143], "verbos": [16, 32, 34, 96, 101, 117, 119, 121, 123, 146, 147, 200], "verbose_ev": 146, "veri": [2, 5, 9, 13, 35, 36, 37, 39, 43, 70, 71, 75, 79, 80, 82, 104, 105, 107, 117, 123, 129, 130, 171, 172, 181, 185, 187, 191, 197, 201, 209, 211], "verif": [5, 56, 182, 183, 201], "verifi": [7, 17, 30, 34, 49, 56, 73, 123, 130, 134, 143, 174, 181, 182, 183, 186, 187, 194, 202, 208, 210], "verify_cached_flag": 183, "verify_gpu_cod": 182, "verify_memori": 182, "verify_sref_tre": 183, "verify_ssa": 182, "verify_well_form": 182, "verifymemori": 186, "verifyvtcmlimit": 186, "verison": 186, "versatil": [191, 210], "version": [0, 2, 6, 7, 8, 14, 15, 16, 34, 39, 49, 51, 53, 56, 57, 58, 59, 62, 65, 72, 75, 80, 84, 85, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 118, 119, 120, 122, 126, 139, 143, 146, 147, 148, 161, 163, 167, 169, 170, 171, 172, 180, 181, 185, 187, 189, 191, 200, 201, 206, 208, 210, 211], "versu": 191, "veto": 11, "vf": 104, "vgg": [105, 106, 107, 108, 171], "vh": [98, 100], "vi": [22, 25, 27, 30, 31, 70, 71, 109, 181, 183, 185, 209], "vi2": 183, "via": [2, 5, 7, 8, 11, 16, 17, 20, 22, 30, 31, 32, 34, 35, 41, 48, 51, 56, 58, 65, 67, 70, 71, 72, 74, 85, 97, 109, 110, 111, 113, 116, 121, 123, 126, 132, 135, 136, 139, 143, 147, 148, 152, 155, 162, 165, 174, 177, 178, 181, 183, 185, 187, 191, 192, 208, 210, 211], "vid": 162, "video": 123, "view": [2, 5, 7, 56, 58, 62, 84, 119, 123, 148, 160, 161, 176, 191, 192, 208], "viewer": [7, 202, 210], "vii": 183, "vim": 17, "vio": 183, "violat": [39, 191], "virtual": [3, 4, 5, 8, 119, 147, 161, 162, 163, 165, 169, 172, 178, 181, 186], "virtual_device_index": 161, "virtualaxi": 147, "virtualdevic": 180, "virtualmachin": [43, 44, 72, 110, 111, 113, 162, 178], "virtualmachineprofil": 93, "visibl": [3, 58, 158, 159, 162, 182, 192], "vision": [50, 59, 64, 65, 115, 121, 125, 153, 171, 193, 198, 202, 210, 211], "visit": [5, 23, 35, 36, 82, 84, 85, 119, 144, 155, 158, 160, 162, 164, 169, 184], "visit_": 160, "visit_bind": 162, "visit_binding_block": 162, "visit_binding_block_": 162, "visit_call_": [23, 162], "visit_const": [72, 84], "visit_constant_": 162, "visit_data_type_imm_": 162, "visit_dataflow_block_": 162, "visit_dataflow_var_": 162, "visit_dataflow_var_def_": 162, "visit_effect": 160, "visit_expr": [23, 162], "visit_expr_post_ord": 162, "visit_extern_func_": 162, "visit_function_": 162, "visit_global_var_": 162, "visit_if_": 162, "visit_match_cast_": 162, "visit_modul": 160, "visit_modulelist": 160, "visit_nameconst": 72, "visit_num": 72, "visit_op_": 162, "visit_param": 160, "visit_prim_value_": 162, "visit_seq_expr_": 162, "visit_shape_expr_": 162, "visit_span": 162, "visit_str": 72, "visit_string_imm_": 162, "visit_tuple_": 162, "visit_tuple_getitem_": 162, "visit_var_": 162, "visit_var_binding_": 162, "visit_var_def": 162, "visit_var_def_": 162, "visit_with_new_scop": 162, "visitattr": 5, "visitbind": 162, "visitbinding_": 162, "visitbindingblock": 162, "visitbindingblock_": 162, "visitexpr": [35, 36, 162], "visitexpr_": [35, 36, 162], "visitor": [36, 72, 158, 162, 164, 169, 184, 194], "visitspan": 162, "visitvardef": 162, "visitvardef_": 162, "visual": [118, 122, 123, 127, 128, 133, 137, 143, 148, 169, 198], "visual_wake_word": [118, 120], "visualis": 119, "viti": 62, "vitis_ai": 66, "viz": [131, 148, 161], "viz_dataflow_graph": 138, "viz_edg": 148, "viz_itervar_relationship_graph": 138, "viz_nod": [131, 148], "viz_schedule_tre": 138, "vizedg": [131, 148], "vizgraph": [131, 148], "viznod": [131, 148], "vizpars": [131, 148], "vj": [22, 27, 30, 31, 181, 183, 185], "vjo": 183, "vk": [22, 27, 30, 31, 181, 183], "vk_khr_16bit_storag": 6, "vk_khr_8bit_storag": 6, "vk_khr_dedicated_alloc": 6, "vk_khr_descriptor_update_templ": 6, "vk_khr_push_descriptor": 6, "vk_khr_shader_float16_int8": 6, "vk_khr_storage_buffer_storage_class": 6, "vkmemorydedicatedrequir": 6, "vko": 183, "vkphysicaldevice16bitstoragefeatureskhr": 6, "vkphysicaldevice8bitstoragefeatureskhr": 6, "vkphysicaldevicefeatur": 6, "vkphysicaldevicelimit": 6, "vkphysicaldeviceshaderfloat16int8featureskhr": 6, "vkphysicaldevicesubgroupproperti": 6, "vksubgroupfeatureflagbit": 6, "vload": 185, "vm": [43, 44, 93, 110, 111, 113, 116, 118, 121, 122, 160, 161, 162, 163, 165, 169, 175, 178], "vm_exec": 72, "vmap": 184, "vmbuiltinlow": 163, "vmclosur": [161, 162, 178], "vmcompil": 165, "vmexecutor": 165, "vmfunckind": 162, "vmfuncscop": 162, "vminstrumentreturnkind": [162, 178], "vmshapelow": [113, 163], "vn": 191, "vnni": [73, 74], "vocab_s": [113, 160, 161], "vocabulari": [160, 161], "void": [1, 3, 4, 5, 8, 13, 22, 23, 32, 35, 36, 37, 43, 44, 56, 96, 110, 118, 122, 123, 134, 185], "void_arg": 37, "volunt": [9, 11], "vote": [11, 15], "vpi": 176, "vscale": 185, "vstore": 185, "vta": [12, 67, 69], "vtabl": 35, "vtcm": [180, 182, 186], "vtcm_capac": 180, "vthread": [88, 96, 104, 146, 183, 186], "vulkan": [1, 5, 43, 69, 143, 174, 176, 180, 187, 211], "vulner": 197, "vulp": 67, "vw": [98, 100], "vww": [118, 120], "vww_96_int8": [118, 120], "vww_sample_not_person": 118, "vww_sample_person": 118, "vx": [88, 104], "vy": [88, 104], "w": [20, 22, 47, 57, 69, 75, 88, 89, 96, 97, 98, 100, 104, 116, 117, 119, 120, 122, 124, 126, 138, 139, 146, 148, 160, 161, 163, 164, 168, 170, 172, 173, 176, 181, 182, 185, 187, 191, 194], "w0": [20, 22], "w1": [20, 22, 164, 181], "w2": [164, 181], "w_1": 89, "w_data": 101, "w_data_shap": 101, "w_data_tvm": 101, "w_end": 173, "w_in": 173, "w_indic": 101, "w_indices_shap": 101, "w_indices_tvm": 101, "w_indptr": 101, "w_indptr_shap": 101, "w_indptr_tvm": 101, "w_np": [88, 89, 101, 104], "w_share": 89, "w_shared_1": 89, "w_shared_wmma_matrix_b": 89, "w_shared_wmma_matrix_b_1": 89, "w_sp_np": 101, "w_start": 173, "w_tvm": 104, "wa": [0, 1, 4, 9, 12, 16, 36, 49, 62, 66, 73, 79, 84, 119, 123, 148, 156, 161, 163, 171, 175, 182, 191, 192, 202, 208, 210], "wai": [2, 4, 5, 9, 10, 11, 12, 13, 17, 20, 22, 23, 30, 31, 35, 36, 37, 43, 52, 56, 58, 60, 62, 63, 66, 68, 75, 81, 84, 89, 90, 94, 102, 110, 111, 122, 123, 129, 134, 139, 143, 146, 147, 163, 167, 181, 185, 189, 191, 194, 195, 199, 201, 202, 208, 209, 210, 211], "wait": [7, 9, 124, 147, 156, 157, 175, 185, 201], "wake": 118, "walk": [20, 34, 35, 66, 109, 134, 135, 147, 208], "walkthrough": 38, "wall": 147, "wang": [85, 108, 131, 206], "want": [1, 2, 3, 4, 5, 7, 8, 14, 16, 17, 22, 30, 34, 35, 36, 58, 62, 63, 65, 67, 68, 69, 70, 71, 82, 84, 109, 118, 119, 123, 129, 131, 132, 134, 140, 142, 143, 146, 148, 150, 162, 163, 164, 165, 167, 172, 178, 181, 183, 185, 187, 188, 194, 200, 201, 202, 205, 206, 208, 209, 210, 211], "wanted_relay_op": 147, "war": 183, "warm": [73, 146, 147, 162, 178], "warmup": [65, 96, 98], "warmup_it": 177, "warn": [49, 51, 52, 66, 67, 68, 70, 71, 72, 73, 85, 106, 121, 123, 138, 146, 161, 162, 163, 169, 172, 180, 181, 183, 204, 206], "warp": [89, 93, 146, 185, 186, 204], "warp_col_til": 89, "warp_row_til": 89, "warp_siz": [89, 99, 146], "washington": 126, "wasm": 148, "wast": 210, "watch": [7, 10], "watcho": 59, "watson": 119, "wavenet": [170, 187], "waw": 183, "wb": [57, 75, 123, 174, 183], "wb_pin_ocm": 64, "wc": 89, "wc1": 194, "wc2": 194, "we": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22, 23, 25, 27, 30, 31, 32, 34, 35, 36, 37, 41, 43, 44, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 131, 132, 134, 135, 136, 138, 139, 140, 142, 143, 146, 147, 148, 150, 151, 152, 155, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 195, 197, 199, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212], "wear": 10, "web": [12, 47, 52, 64, 67, 72, 74, 90, 116, 118, 122, 208], "webassembli": 43, "webgpu": [174, 176], "webpag": [96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109], "websit": [15, 73], "week": [9, 10, 126], "wei": [85, 131, 171], "weight": [2, 18, 22, 36, 44, 47, 48, 51, 56, 59, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 84, 97, 98, 99, 100, 105, 106, 107, 108, 111, 117, 119, 121, 122, 123, 126, 129, 130, 146, 148, 152, 155, 156, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 186, 187, 191, 192, 194, 212], "weight_bit": [170, 187], "weight_data": 187, "weight_h": 161, "weight_indic": 187, "weight_indptr": 187, "weight_layout": [170, 187], "weight_nam": 172, "weight_np": 96, "weight_sampl": 117, "weight_shap": [117, 172], "weight_t": 126, "weight_tvm": 96, "weight_w": [160, 161], "weights_fil": [48, 69], "weights_nam": 47, "weights_onli": 126, "weights_path": [47, 48, 69, 123], "weights_url": [47, 48, 69], "welcom": [9, 10, 11, 15, 32, 39, 74, 141, 194], "well": [2, 4, 7, 9, 16, 17, 20, 34, 36, 39, 56, 62, 64, 66, 67, 82, 84, 93, 101, 105, 106, 107, 117, 118, 123, 134, 139, 146, 147, 155, 158, 160, 162, 163, 164, 182, 186, 187, 188, 192, 194, 195, 204, 208, 210, 212], "well_form": [158, 164], "weng": [82, 90], "went": 148, "were": [4, 12, 20, 36, 75, 84, 123, 151, 169, 172, 208], "west": [17, 116, 117, 120, 122, 124], "west_cmd": 16, "wf": 89, "wget": [53, 64, 66, 116, 117, 119, 120, 122, 124, 210, 211], "wh": 187, "what": [4, 9, 12, 13, 15, 16, 19, 20, 23, 25, 30, 34, 36, 37, 52, 58, 75, 79, 82, 85, 113, 122, 132, 160, 169, 170, 187, 194, 208, 210], "whatev": [123, 166, 211], "wheel": [9, 123], "when": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 20, 23, 25, 27, 32, 34, 35, 36, 37, 56, 58, 67, 69, 75, 79, 80, 84, 85, 90, 97, 98, 99, 100, 101, 105, 106, 107, 109, 117, 118, 119, 122, 123, 126, 129, 138, 142, 143, 146, 147, 148, 150, 151, 152, 154, 155, 157, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 172, 174, 175, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 191, 192, 194, 195, 201, 202, 205, 208, 210, 211], "whenev": [5, 155, 158, 191], "where": [1, 5, 7, 8, 9, 10, 11, 12, 16, 17, 18, 27, 30, 32, 34, 35, 36, 37, 56, 58, 60, 79, 84, 88, 89, 90, 93, 96, 97, 98, 99, 100, 105, 106, 107, 110, 113, 118, 119, 120, 122, 123, 126, 136, 146, 147, 149, 152, 155, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 177, 178, 180, 181, 183, 185, 186, 187, 188, 191, 192, 194, 195, 200, 201, 202, 205, 208, 211], "wherea": [35, 172, 181, 185, 195], "wherev": 192, "whether": [0, 2, 3, 4, 6, 9, 35, 36, 64, 65, 66, 69, 79, 109, 118, 123, 139, 146, 147, 148, 149, 150, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 191, 194, 195, 206], "which": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 20, 22, 23, 26, 27, 34, 35, 36, 37, 39, 43, 44, 48, 49, 52, 53, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 75, 79, 80, 82, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 120, 121, 122, 123, 124, 126, 132, 134, 136, 139, 140, 141, 143, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 190, 191, 192, 194, 195, 200, 201, 202, 205, 206, 208, 209, 210, 212], "whichev": 123, "while": [0, 1, 2, 4, 7, 8, 9, 10, 12, 16, 17, 22, 25, 30, 34, 36, 56, 65, 67, 79, 89, 101, 110, 113, 118, 119, 123, 129, 131, 132, 135, 139, 141, 154, 158, 160, 161, 162, 163, 168, 169, 170, 174, 181, 183, 185, 187, 191, 192, 195, 201, 202, 205, 206, 208, 212], "whilst": 58, "who": [1, 2, 7, 9, 10, 11, 17, 22, 44, 140, 174, 183, 197, 203], "whole": [0, 4, 16, 19, 23, 58, 59, 69, 84, 96, 97, 98, 99, 100, 101, 105, 106, 107, 146, 160, 161, 169, 170, 187, 191, 200, 201, 208], "whose": [3, 5, 20, 30, 34, 35, 82, 90, 147, 158, 160, 161, 162, 163, 169, 172, 178, 181, 183, 185, 187, 188, 191, 192, 195], "why": [4, 12, 16, 17, 20, 26, 35, 192], "wi": [88, 187], "wich": 146, "wide": [2, 12, 22, 23, 36, 123, 174, 191], "widen": 65, "wider": [141, 201], "width": [68, 72, 88, 89, 123, 134, 146, 148, 160, 161, 168, 170, 173, 185, 187, 195], "wiki": 185, "wikipedia": 185, "wildcard": [166, 169, 191, 192, 212], "wildcardpattern": 166, "willing": 11, "win_length": [169, 187], "window": [7, 17, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 115, 118, 119, 161, 169, 170, 173, 187, 200, 201], "window_s": 161, "window_shap": [169, 187], "winograd": [74, 170, 182, 187], "winograd_transform_matric": 187, "wio": 187, "wip": 64, "wise": [25, 58, 136, 158, 160, 161, 163, 169, 181, 185, 186, 187, 194], "wish": 58, "with_attr": [30, 155, 194], "with_bodi": [82, 185], "with_decis": 183, "with_mean": 169, "with_minrpc": 174, "with_shap": 52, "with_struct_info": 162, "with_suffix": 119, "within": [1, 4, 11, 12, 17, 18, 20, 27, 30, 31, 34, 43, 48, 88, 122, 138, 139, 140, 147, 148, 155, 158, 159, 160, 163, 168, 169, 170, 172, 173, 183, 186, 187, 188, 192, 195, 201, 208, 211], "within_index": 187, "without": [2, 4, 5, 11, 12, 16, 17, 32, 35, 36, 39, 41, 62, 65, 68, 73, 74, 79, 80, 96, 106, 108, 115, 117, 119, 123, 143, 146, 147, 155, 157, 158, 162, 163, 169, 170, 172, 173, 178, 181, 183, 185, 186, 187, 188, 191, 192, 195, 200, 201], "without_attr": 155, "withscop": 169, "wkh7dx2": 123, "wl": [37, 88, 104], "wmma": [89, 185], "won": [39, 43, 66, 75, 113, 123, 146, 183, 184], "wonder": 16, "wong": 51, "word": [20, 69, 70, 71, 75, 97, 98, 99, 100, 118, 148, 181], "work": [1, 2, 3, 4, 7, 8, 9, 10, 12, 13, 19, 20, 22, 32, 33, 34, 36, 37, 41, 43, 44, 62, 69, 75, 78, 80, 81, 82, 84, 86, 90, 97, 98, 99, 100, 105, 106, 107, 119, 120, 122, 141, 146, 147, 148, 156, 160, 162, 163, 169, 171, 172, 178, 181, 183, 184, 186, 188, 191, 192, 195, 198, 199, 201, 203, 205, 207, 209, 210], "work_dir": [110, 111, 156, 163], "work_on": 183, "work_with_microtvm": [118, 125, 198], "work_with_relai": [126, 128, 198], "work_with_schedul": [137, 198], "workaround": [80, 146], "worker": [160, 161, 175], "worker0": 175, "worker0_onli": 175, "worker_id": 175, "workflow": [8, 14, 73, 109, 136, 201, 208, 209], "workflow_dispatch": 8, "workload": [2, 3, 36, 39, 41, 44, 56, 64, 70, 71, 75, 88, 97, 98, 99, 100, 104, 105, 106, 107, 108, 135, 146, 147, 149, 152, 156, 171, 187, 193, 196], "workload_arg": 146, "workload_func": 146, "workload_hash": 146, "workload_kei": [97, 98, 99, 100, 146], "workload_nam": 156, "workspac": [49, 51, 52, 65, 66, 67, 68, 69, 70, 71, 72, 73, 84, 106, 118, 120, 121, 126, 142, 155, 163, 169, 182, 185, 204, 206], "workspace_byte_align": 182, "workspace_dir": 162, "workspace_memory_pool": 169, "workspace_s": [119, 120], "workspace_size_byt": [118, 121], "workspacememorypool": [155, 169], "workspacepoolinfo": [155, 169], "workstat": 62, "worktre": 16, "workworload": 210, "world": [5, 9, 110, 118, 123, 194], "worri": [36, 189], "wors": 131, "worth": [12, 75, 104, 140, 194, 202, 208], "would": [2, 4, 8, 9, 11, 12, 20, 34, 35, 36, 58, 65, 67, 70, 71, 73, 74, 75, 84, 110, 116, 118, 119, 120, 121, 122, 123, 134, 140, 144, 155, 158, 160, 161, 162, 163, 164, 167, 169, 172, 175, 187, 191, 192, 194, 211], "wouldn": 123, "wrap": [5, 34, 35, 36, 37, 82, 84, 85, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 147, 148, 152, 155, 157, 158, 160, 163, 169, 177, 180, 181, 182, 186, 187, 191, 200, 201, 208], "wrap_compute_scanop": 34, "wrap_nest": 160, "wrap_param": 161, "wrap_topi_schedul": 34, "wrapp": 172, "wrapped_func": 148, "wrapper": [4, 13, 34, 36, 143, 146, 148, 149, 150, 152, 154, 160, 169, 181, 186, 188, 208], "write": [3, 4, 5, 7, 9, 11, 12, 13, 15, 16, 17, 20, 22, 23, 27, 30, 31, 35, 36, 57, 69, 75, 79, 81, 83, 84, 88, 89, 96, 102, 104, 108, 110, 118, 142, 146, 148, 149, 155, 157, 159, 162, 163, 169, 174, 181, 182, 183, 185, 186, 188, 189, 191, 192, 194, 195, 197, 198, 200, 201, 202, 204, 209], "write_bandwidth_bytes_per_cycl": 155, "write_buffer_index": 183, "write_buffer_transform": 158, "write_latency_cycl": 155, "write_opt_sch2record_fil": 108, "writer": [172, 181, 183], "written": [4, 12, 16, 22, 35, 82, 105, 106, 107, 132, 134, 143, 146, 157, 182, 183, 191, 192, 195, 211], "wrong": [14, 27, 85, 105, 106, 107, 143, 146], "wrote": [7, 16, 34, 201], "wrt": [181, 187], "wt": 172, "wu": [46, 53, 99, 105, 161, 171], "ww": [88, 104], "www": [17, 50, 52, 75, 169], "wxh": [161, 170], "x": [0, 2, 4, 5, 7, 8, 12, 13, 16, 18, 20, 22, 23, 34, 37, 43, 44, 46, 47, 49, 51, 52, 61, 66, 69, 70, 71, 74, 75, 84, 88, 89, 90, 96, 97, 101, 104, 109, 110, 111, 113, 115, 119, 121, 129, 132, 134, 135, 136, 139, 140, 146, 147, 148, 152, 155, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 191, 192, 194, 201, 204, 208, 209], "x1": [75, 113, 159, 160, 161, 185, 192], "x2": [113, 160, 161, 185, 191, 192], "x2paddl": 50, "x3": 161, "x64_64": 62, "x86": [2, 37, 43, 53, 56, 58, 67, 68, 69, 70, 71, 72, 73, 74, 75, 90, 94, 95, 97, 102, 103, 116, 117, 121, 122, 147, 198, 202, 205, 210], "x86_64": [56, 59, 62, 68, 116, 117, 120, 122, 124, 171], "x86_64_aarch64": 80, "x_": [168, 170, 187], "x_0": 187, "x_1": [135, 187], "x_2": 135, "x_adjoint": 163, "x_c": 208, "x_c_init": 208, "x_factor": [136, 181], "x_i": [160, 161, 170], "x_inner": [181, 208], "x_inner_init": 208, "x_j": [160, 161, 170], "x_m": 187, "x_np": 101, "x_outer": [181, 208], "x_parent": 181, "x_q": 155, "x_torch": 44, "x_tvm": [44, 101], "xa": 161, "xarg": 17, "xavier": [65, 206], "xc": 208, "xcl_emulation_mod": 61, "xcl_target": 61, "xclbin": 61, "xcrun": 148, "xeon": 108, "xf": [17, 120], "xfail": 7, "xgb": [56, 67, 68, 105, 106, 107, 108, 146, 156, 202], "xgb_curv": [67, 105, 106, 107, 108, 202], "xgb_itervar": [67, 105, 106, 107, 108, 202], "xgb_knob": [67, 105, 106, 107, 108, 202], "xgb_rank": [67, 105, 106, 107, 108, 202], "xgb_rank_binari": [67, 105, 106, 107, 108, 202], "xgb_rank_binary_curv": [67, 105, 106, 107, 108, 202], "xgb_rank_binary_itervar": [67, 105, 106, 107, 108, 202], "xgb_rank_binary_knob": [67, 105, 106, 107, 108, 202], "xgb_rank_curv": [67, 105, 106, 107, 108, 202], "xgb_rank_itervar": [67, 105, 106, 107, 108, 202], "xgb_rank_knob": [67, 105, 106, 107, 108, 202], "xgbmodel": [96, 100, 101, 146, 200], "xgboost": [67, 104, 105, 106, 107, 143, 146, 147, 201, 202, 210], "xgboosttun": [104, 201], "xgbtuner": [67, 104, 105, 106, 107, 108, 147, 201, 202], "xi": [88, 104, 109, 134, 135, 136, 147, 201, 208], "xiangyu": 171, "xilinx": [61, 66], "xilinx_sdx": 61, "xmax": 173, "xmin": 173, "xo": [89, 109, 134, 135, 136, 147, 201, 208], "xor": [161, 169, 185, 187], "xpu": 80, "xvf": [116, 117, 119, 120, 122, 124, 210], "xw": 187, "xx": [4, 88, 96, 98, 99, 100], "xxx": [80, 84, 147], "xxxentiti": 147, "xxxspace": 147, "xy": [34, 169, 187], "xyz": [8, 151], "xzf": 80, "y": [2, 13, 16, 20, 22, 27, 30, 31, 34, 49, 75, 84, 88, 89, 97, 104, 110, 116, 117, 120, 122, 124, 129, 132, 134, 138, 139, 140, 146, 147, 148, 155, 159, 160, 161, 162, 163, 164, 168, 169, 170, 172, 173, 180, 181, 182, 183, 185, 186, 187, 191, 192, 194, 201, 204, 208], "y_": [27, 30, 168, 187], "y_0": 187, "y_adjoint": 163, "y_factor": [136, 181], "y_i": 161, "y_init": 31, "y_inner": [181, 208], "y_inner_init": 208, "y_np": 101, "y_outer": [181, 208], "y_parent": 181, "y_tvm": 101, "y_updat": 31, "yan": [105, 106, 107, 108], "yao": [108, 126, 206], "yc": 208, "ycbcr": 49, "ye": [116, 118], "yet": [4, 59, 160, 162, 169, 176, 181, 183, 189, 192, 195], "yi": [88, 104, 136, 139, 147, 201, 208], "yield": [4, 27, 31, 75, 123, 147, 160, 161, 169], "yizhi": 139, "ymax": 173, "ymin": 173, "yml": 8, "yo": [89, 136, 139, 147, 201, 208], "yolo": [54, 55, 173, 198], "yolo_detect": 47, "yolo_reorg": 173, "yolov2": 47, "yolov3": 47, "yongfeng": 138, "you": [0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 22, 23, 30, 31, 32, 34, 35, 36, 37, 39, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 82, 84, 85, 86, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 142, 143, 144, 146, 147, 151, 152, 155, 161, 167, 171, 174, 180, 181, 185, 189, 194, 199, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212], "your": [4, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 32, 33, 34, 35, 37, 39, 49, 56, 58, 59, 60, 62, 64, 65, 66, 67, 69, 70, 71, 73, 74, 75, 80, 93, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 111, 113, 115, 116, 119, 124, 125, 126, 129, 134, 136, 142, 143, 144, 147, 160, 167, 171, 187, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211], "your_kei": 211, "your_module_lib_path": 36, "yourawesomepars": 131, "yourself": [10, 53, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 122, 208], "yu": [90, 126], "yulun": 126, "yuwei": 48, "yuxin": 161, "yy": [88, 96, 98, 99, 100], "yyi": 80, "z": [20, 22, 46, 49, 84, 88, 89, 97, 104, 129, 139, 160, 161, 162, 163, 169, 170, 181, 183, 185, 186, 187, 191, 192, 194, 204, 208], "z1": [84, 181], "z2": [84, 181], "zcu102": 66, "zcu104": 66, "zd": 66, "zephyr": [16, 121, 123, 199], "zephyr_bas": [116, 117, 120, 122, 124], "zephyr_board": [16, 124], "zephyr_project_path": [116, 117, 120, 122, 124], "zephyr_sdk_vers": [116, 117, 120, 122, 124], "zephyrproject": [116, 117, 120, 122, 124], "zero": [6, 30, 31, 34, 35, 37, 41, 43, 44, 61, 73, 75, 88, 89, 90, 101, 104, 109, 110, 113, 119, 120, 132, 134, 135, 139, 148, 152, 155, 160, 161, 162, 163, 168, 169, 170, 174, 181, 183, 185, 187, 192, 194, 204, 208, 209, 210], "zero_point": [120, 155, 161], "zeros_lik": [161, 169], "zeroth": 169, "zh": 50, "zhang": [46, 49, 160, 161, 171], "zhao": [46, 53, 99, 105], "zheng": [96, 97, 98, 100, 104, 105, 106, 107, 109, 200, 201, 205], "zhi": 84, "zhreshold": [46, 48, 49, 50, 69, 70, 71, 73], "zi": 139, "ziheng": [71, 109, 136, 140], "zip": [22, 23, 30, 31, 43, 44, 46, 47, 48, 49, 50, 51, 52, 67, 68, 69, 70, 71, 72, 73, 75, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 191, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212], "zip_fold": 123, "zisserman": 171, "ziyuan": 50, "zo": 139, "zone": 9, "zoo": [51, 67, 72, 147, 202, 210], "zxvf": 66, "\u03c3i": 169}, "titles": ["Debugger", "Device/Target Interactions", "Design and Architecture", "Introduction to Module Serialization", "Pass Infrastructure", "TVM Runtime System", "Vulkan Runtime", "Using TVM\u2019s CI", "Code Guide and Tips", "Code Reviews", "Committer Guide", "TVM Community Guidelines", "Documentation", "Error Handling Guide", "Git Usage Tips", "Contributor Guide", "Submit a Pull Request", "Release Process", "Graph Abstraction for ML Models", "Relax", "Understand Relax Abstraction", "Deep Dive: Relax", "Relax Creation", "Transformation", "Computation times", "Tensor Program Abstraction", "TensorIR", "Understand TensorIR Abstraction", "Deep Dive: TensorIR", "Computation times", "TensorIR Creation", "Transformation", "Debugging TVM", "Developer How-To Guide", "Adding an Operator to Relay", "Adding a Compiler Pass to Relay", "Bring Your Own Codegen To TVM", "TVM Codebase Walkthrough by Example", "Developer Tutorial", "Handle TVM Errors", "Index", "Overview", "Get Started", "IRModule", "Quick Start", "Computation times", "Compile CoreML Models", "Compile YOLO-V2 and YOLO-V3 in DarkNet Models", "Compile Keras Models", "Compile ONNX Models", "Compile PaddlePaddle Models", "Compile PyTorch Models", "Compile Tensorflow Models", "Compile TFLite Models", "Compile Deep Learning Models", "Computation times", "Deploy to Adreno\u2122 GPU", "Deploy to Android", "Relay Arm<sup>\u00ae</sup> Compute Library Integration", "Relay BNNS Integration", "Deploy TVM Module using C++ API", "HLS Backend Example", "Deploy Models and Integrate TVM", "Integrate TVM into Your Project", "Marvell Machine Learning Integration", "Relay TensorRT Integration", "Vitis AI Integration", "Deploy the Pretrained Model on Adreno\u2122", "Deploy the Pretrained Model on Adreno\u2122 with tvmc Interface", "Deploy the Pretrained Model on Android", "Deploy the Pretrained Model on Jetson Nano", "Deploy the Pretrained Model on Raspberry Pi", "Compile PyTorch Object Detection Models", "Deploy a Framework-prequantized Model with TVM", "Deploy a Framework-prequantized Model with TVM - Part 3 (TFLite)", "Deploy a Hugging Face Pruned Model on CPU", "Deploy Deep Learning Models", "Computation times", "Development Guides", "Python Target Parametrization", "Setup RPC System", "Extend TVM", "Writing a Customized Pass", "Computation times", "How to Use TVM Pass Infra", "How to Use TVM Pass Instrument", "How To Guides", "Optimize Tensor Operators", "How to optimize convolution on GPU", "How to optimize convolution using TensorCores", "How to optimize GEMM on CPU", "Computation times", "Profile Models", "Getting Started With PAPI", "Use AutoScheduler for Template-Free Scheduling", "Computation times", "Auto-scheduling a Convolution Layer for GPU", "Auto-scheduling a Neural Network for ARM CPU", "Auto-scheduling a Neural Network for NVIDIA GPU", "Auto-scheduling a Neural Network for mali GPU", "Auto-scheduling a Neural Network for x86 CPU", "Auto-scheduling Sparse Matrix Multiplication on CPU with Custom Sketch Rule", "Auto-Tune with Templates and AutoTVM", "Computation times", "Tuning High Performance Convolution on NVIDIA GPUs", "Auto-tuning a Convolutional Network for ARM CPU", "Auto-tuning a Convolutional Network for NVIDIA GPU", "Auto-tuning a Convolutional Network for Mobile GPU", "Auto-tuning a Convolutional Network for x86 CPU", "Cross Compilation and RPC", "Customize Optimization", "End-to-End Optimize Model", "HOW TO", "Optimize Large Language Model", "Computation times", "Work With microTVM", "3. microTVM Ahead-of-Time (AOT) Compilation", "6. Model Tuning with microTVM", "9. Bring microTVM to your own development environment", "7. Running TVM on bare metal Arm(R) Cortex(R)-M55 CPU and Ethos(TM)-U55 NPU with CMSIS-NN", "8. Creating Your MLPerfTiny Submission with microTVM", "4. microTVM PyTorch Tutorial", "2. microTVM TFLite Tutorial", "5. Training Vision Models for microTVM on Arduino", "1. microTVM CLI Tool", "Computation times", "Building a Graph Convolutional Network", "Work With Relay", "Computation times", "Using External Libraries in Relay", "Using Pipeline Executor in Relay", "Use Relay Visualizer to Visualize Relay", "External Tensor Functions", "Work With Tensor Expression and Schedules", "Reduction", "Scan and Recurrent Kernel", "Schedule Primitives in TVM", "Computation times", "Use Tensor Expression Debug Display (TEDD) for Visualization", "Use Tensorize to Leverage Hardware Intrinsics", "Compute and Reduce with Tuple Inputs", "Apache TVM Documentation", "Docker Images", "Install from Source", "Installing TVM", "Other APIs", "tvm.auto_scheduler", "tvm.autotvm", "tvm.contrib", "tvm.dlight", "tvm.driver", "tvm.error", "tvm.contrib.graph_executor", "Python API", "tvm.instrument", "tvm.ir", "tvm.meta_schedule", "tvm.micro", "tvm.relax.analysis", "tvm.relax.block_builder", "tvm.relax.frontend", "tvm.relax.op", "tvm.relax", "tvm.relax.transform", "tvm.relay.analysis", "tvm.relay.backend", "tvm.relay.dataflow_pattern", "tvm.relay.frontend", "tvm.relay.image", "tvm.relay", "tvm.relay.nn", "tvm.relay.testing", "tvm.relay.transform", "tvm.relay.vision", "tvm.rpc", "tvm.runtime.disco", "tvm.runtime.ndarray", "tvm.runtime.profiling", "tvm.runtime.relax_vm", "tvm.runtime", "tvm.target", "tvm.te", "tvm.tir.analysis", "tvm.tir.schedule", "tvm.tir.stmt_functor", "tvm.tir", "tvm.tir.transform", "tvm.topi", "tvm.transform", "Hybrid Frontend Language Reference", "Language Reference", "Algebraic Data Types in Relay", "Expressions in Relay", "Relay Core Tensor Operators", "Pattern Matching in Relay", "Relay\u2019s Type System", "Publications", "Security Guide", "Computation times", "microTVM: TVM on bare-metal", "Optimizing Operators with Auto-scheduling", "Optimizing Operators with Schedule Templates and AutoTVM", "Compiling and Optimizing a Model with the Python Interface (AutoTVM)", "User Tutorial", "Introduction to TOPI", "Introduction", "Quick Start Tutorial for Compiling Deep Learning Models", "Computation times", "Working with Operators Using Tensor Expression", "Blitz Course to TensorIR", "Compiling and Optimizing a Model with TVMC", "Getting Starting using TVMC Python: a high-level API for TVM", "Making your Hardware Accelerator TVM-ready with UMA"], "titleterms": {"": [7, 64, 123, 195], "0": [59, 72, 211], "1": [0, 34, 59, 64, 80, 104, 124, 143, 208, 211], "18": 65, "2": [0, 34, 64, 80, 104, 122, 143, 201, 208, 211], "2d": 134, "3": [34, 64, 74, 80, 116, 143, 208, 211], "4": [34, 64, 121, 143, 208], "5": [64, 123, 143, 208, 211], "6": [34, 117, 208], "7": [34, 119], "8": [34, 120], "9": [72, 118], "A": 201, "Be": 9, "For": [7, 123], "If": [192, 194], "One": [194, 208], "TO": 112, "The": [4, 12, 35, 70, 71, 80, 210], "Then": 192, "To": [33, 36, 86, 141], "Tos": [12, 62], "With": [85, 93, 115, 123, 127, 133, 202], "aarch64": 62, "about": [9, 56, 141], "abstract": [18, 20, 25, 27], "acceler": 212, "accuraci": [74, 123, 126], "acl": 58, "ad": [7, 34, 35, 58, 65, 210], "add": [37, 118], "addit": [9, 62, 119, 208, 211], "adreno": [56, 67, 68], "adt": [191, 192, 195], "advanc": [56, 143, 201], "after": 14, "ahead": 116, "ai": 66, "algebra": [191, 195], "algorithm": [88, 89, 202, 210], "all": 75, "alloc": 189, "altern": 194, "alveo": 66, "an": [13, 34, 39, 43, 84, 85, 99, 123, 191, 194, 202, 205, 209, 210], "analysi": [158, 164, 182], "android": [57, 69], "announc": 17, "anoth": 12, "aot": 116, "apach": 141, "api": [9, 22, 34, 60, 64, 141, 145, 153, 201, 208, 211], "appli": [14, 23, 84, 85], "applic": [56, 119, 194], "approv": 9, "architectur": [2, 12, 62, 80, 113], "archiv": 10, "arduino": 123, "arith": 2, "ariti": 34, "arm": [58, 97, 105, 119], "around": 131, "arrai": [63, 90, 189, 208], "assert": 189, "ast": 35, "attribut": [34, 43, 189, 194], "auto": [96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 110, 200, 201], "auto_schedul": 146, "automat": [56, 210], "autoschedul": [94, 211], "autotun": [67, 68, 117], "autotvm": [102, 147, 201, 202], "ax": 27, "axi": 27, "backend": [4, 43, 56, 61, 126, 129, 165, 189, 206], "bare": [119, 199], "baselin": [90, 208], "basic": [201, 202, 204], "batchwis": 140, "begin": [98, 100, 105, 106, 107, 201], "bia": 138, "bind": [27, 136, 189, 192], "blitz": 209, "block": [20, 22, 27, 88, 90, 208], "block_build": 159, "bnn": 59, "board": [120, 123], "box": 72, "branch": 14, "bring": [36, 118], "broad": 10, "broken": 7, "buffer": 27, "build": [9, 44, 51, 52, 57, 58, 59, 62, 64, 65, 70, 71, 93, 109, 111, 116, 119, 120, 121, 124, 126, 129, 130, 135, 143, 209], "builder": 22, "built": 4, "builtin": 161, "c": [4, 8, 12, 13, 16, 34, 36, 60, 63, 143], "cach": [90, 208], "call": [17, 34, 192, 194, 195], "call_tir": 20, "can": [80, 130], "candid": 17, "capabl": 6, "carefulli": 9, "caus": 80, "cbla": 148, "cc": 148, "ccach": 143, "ccl": 161, "cell": 135, "cfg": 201, "chang": 9, "check": [96, 191, 200], "cherri": 17, "chocol": 212, "choos": [13, 47, 123], "ci": [7, 16, 79], "clang": 148, "class": 85, "cleaner": 34, "cli": 124, "clone": 64, "closur": 192, "cloudpickl": 80, "cmsi": [119, 120], "code": [1, 8, 9, 36, 75, 119, 122, 123, 208], "codebas": 37, "codegen": 36, "codegenc": 36, "collabor": [10, 140], "collect": 202, "combin": 14, "come": 39, "command": 64, "commandlin": 56, "commit": [14, 16], "committ": [10, 11], "common": 191, "commun": [9, 10, 11, 212], "commut": 134, "compar": [73, 202, 208, 210], "comparison": 74, "compil": [5, 35, 46, 47, 48, 49, 50, 51, 52, 53, 54, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 80, 98, 100, 109, 113, 116, 119, 120, 121, 122, 123, 124, 126, 189, 202, 206, 208, 210, 211], "complex": 211, "compos": 110, "comput": [0, 24, 27, 29, 34, 45, 55, 58, 77, 83, 89, 91, 95, 96, 101, 103, 114, 125, 128, 137, 140, 198, 207, 208], "compute_at": 136, "compute_inlin": 136, "compute_root": 136, "concis": [9, 30], "conclus": 129, "condit": 189, "configur": [67, 68, 75, 108, 117, 143], "conflict": 14, "consensu": 9, "consequ": 14, "consid": 9, "consider": 12, "consist": 9, "constant": [8, 35, 192], "constantcheck": 35, "constantfold": 35, "constraint": 195, "construct": [4, 44, 113, 192], "constructor": [36, 192], "contain": [64, 79], "content": [43, 44, 79, 110, 143, 205], "contrib": [132, 148, 152], "contributor": [7, 15], "control": 192, "convert": [67, 73, 75, 111], "convolut": [88, 89, 96, 104, 105, 106, 107, 108, 126, 129, 134, 138, 204], "cooper": 88, "core": 193, "coreml": 46, "correct": [96, 200, 202, 210], "cortex": 119, "cours": 209, "cpu": [43, 75, 90, 97, 100, 101, 105, 108, 109, 119, 208], "creat": [22, 30, 34, 43, 84, 85, 96, 101, 108, 113, 116, 119, 120, 121, 124, 129, 130, 200, 208, 209], "createcsourcemodul": 36, "creation": [22, 30], "cross": [2, 62, 80, 109, 134], "csourcecodegen": 36, "cubla": 148, "cuda": [88, 89, 129], "cudnn": 129, "current": [4, 85, 119], "custom": [23, 36, 82, 85, 101, 110, 131, 200], "cut": 17, "cutlass": 130, "darknet": 47, "data": [2, 9, 59, 123, 126, 191, 195, 202, 210], "dataflow": [20, 192], "dataflow_pattern": 166, "dataset": [123, 126], "deal": 7, "debug": [0, 7, 32, 84, 138], "debugg": 0, "decis": 11, "declar": 109, "decod": [52, 113], "decor": 84, "deep": [21, 28, 54, 76, 141, 206], "default": 208, "defin": [34, 63, 89, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 113, 116, 117, 120, 121, 122, 126, 131, 134, 138, 139, 191, 200, 202, 206, 210], "define_split": 201, "definit": [1, 195], "deliber": 9, "demo": 119, "dens": [75, 101], "depend": [9, 104, 105, 106, 107, 116, 117, 118, 119, 120, 121, 122, 124, 143, 201], "deploi": [43, 56, 57, 59, 60, 62, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 80, 110, 111, 113], "deploy": [5, 44, 62], "describ": [134, 140, 208], "deseri": 3, "design": [2, 4, 194], "desir": 123, "detail": [5, 12], "detect": 72, "develop": [11, 33, 38, 56, 78, 118], "devic": [1, 62, 69, 70, 71, 80, 97, 99, 105, 106, 107, 109, 123, 211], "deviceapi": 1, "dgl": 126, "diamond": 194, "differ": 208, "dir": 123, "directori": 119, "disco": 175, "discuss": [2, 199], "dispatch": 110, "displai": [49, 53, 138], "distribut": 161, "dive": [21, 28, 141], "dlight": [2, 110, 149, 153], "dlpack": [63, 148], "do": [39, 72], "docker": [7, 16, 64, 79, 142], "document": [9, 12, 141], "domin": 194, "download": [47, 52, 53, 72, 74, 75, 123, 202], "driver": 150, "dtype": 194, "due": 7, "dump": 0, "dynam": [30, 60], "e2": 74, "element": [20, 25], "els": 192, "embed": 113, "emcc": 148, "emit": 36, "emul": [61, 189], "enabl": [67, 143], "encount": 39, "end": [20, 111], "enhanc": 56, "environ": [6, 16, 56, 69, 118], "error": [13, 39, 151], "etho": 119, "evalu": [96, 97, 98, 99, 100, 118, 126, 200, 208], "everyth": 208, "exampl": [3, 35, 37, 58, 59, 61, 84, 85, 194, 195, 204, 208, 211], "examplejsoncodegen": 36, "except": 85, "exchang": 0, "execut": [2, 20, 46, 47, 48, 49, 50, 51, 52, 53, 59, 69, 116, 121, 202], "executor": [120, 121, 130], "exist": 43, "expect": 123, "explan": 201, "explicitli": 9, "export": [3, 113, 120], "expos": 34, "express": [8, 30, 35, 133, 138, 189, 191, 192, 194, 208], "extend": 81, "extern": [129, 132], "extra": [25, 27, 143], "extract": [53, 74, 97, 98, 99, 100, 117, 119], "face": 75, "factor": [9, 134], "failur": 7, "featur": [6, 18, 189], "fetch": 88, "figur": 12, "file": [47, 52, 53, 74, 79, 96, 118, 120, 200], "final": [200, 201, 202, 208, 210], "fine": 123, "first": 10, "flaki": 7, "flash": [116, 121, 124], "flow": [2, 41, 44, 64, 110, 111, 113], "fold": 35, "forc": 14, "format": [0, 3, 30, 118, 120, 124, 202, 208, 210], "four": 12, "fragment": 192, "framework": [73, 74], "free": 94, "from": [9, 39, 43, 72, 73, 143, 210], "frontend": [4, 73, 160, 167, 189], "function": [4, 27, 30, 126, 130, 132, 192, 194, 195, 208, 211], "fuse": [136, 204], "fuzzi": 194, "galleri": 12, "gcn": 126, "gemm": 90, "gemv": 139, "gencfunc": 36, "gener": [1, 11, 36, 56, 88, 89, 118, 119, 120, 122, 123, 134, 204, 206, 208], "get": [42, 60, 67, 72, 74, 93, 119, 126, 141, 143, 199, 211], "getfunct": 36, "git": 14, "github": 143, "global": [192, 195], "globalvar": 131, "glue": 82, "goal": 41, "golden": 126, "gpg": 17, "gpu": [43, 56, 88, 96, 98, 99, 104, 106, 107, 123, 208, 209], "grad": 161, "gradient": 34, "graph": [0, 18, 47, 51, 52, 59, 70, 71, 72, 75, 126, 131, 138, 192, 194], "graph_executor": [130, 152], "graphconv": 126, "green": 7, "guid": [8, 10, 12, 13, 15, 33, 78, 86, 197], "guidelin": [11, 16], "handl": [8, 13, 39, 85], "hardwar": [139, 199, 206, 212], "header": 120, "help": 199, "hierarchi": 88, "high": [20, 104, 211], "hl": 61, "hood": 3, "hook": [34, 132], "how": [0, 12, 13, 14, 33, 62, 84, 85, 86, 88, 89, 90, 112, 141], "hug": 75, "hybrid": [181, 189, 190], "i": [14, 18, 39, 123], "id": 118, "imag": [7, 12, 46, 47, 48, 49, 50, 51, 52, 53, 67, 72, 74, 118, 119, 142, 161, 168, 187, 202], "imagenet": 119, "implement": [5, 9, 36, 84, 191], "import": [43, 44, 47, 51, 52, 72, 74, 116, 117, 118, 120, 122, 211], "improv": 200, "includ": 34, "incomplet": 195, "independ": 10, "index": [40, 141], "infer": [52, 66, 67, 72, 74], "info": 20, "inform": [5, 27], "infra": 84, "infrastructur": 4, "initi": [31, 130], "input": [36, 59, 119, 120, 140, 210, 212], "insid": 123, "inspect": [56, 122, 200], "instal": [58, 65, 93, 104, 105, 106, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 143, 144, 201], "instruct": 66, "instrument": [4, 85, 154], "integ": 8, "integr": [20, 56, 58, 59, 62, 63, 64, 65, 66], "interact": [1, 30], "interest": 131, "interfac": [56, 68, 202], "intrins": [89, 139, 189], "introduct": [3, 56, 58, 59, 64, 65, 89, 190, 204, 205], "introductori": 12, "ir": [2, 82, 131, 155], "irmodul": [43, 110, 111, 113, 209], "issu": [7, 197], "iter": 27, "jenkin": 7, "jetson": 70, "k": 14, "keep": 7, "kei": [2, 17, 18, 20, 25, 41], "kera": [48, 69], "kernel": [88, 89, 109, 135], "keyword": 189, "kvcach": 113, "label": [73, 119], "lack": 80, "lambda": 208, "languag": [113, 189, 190, 194], "larg": 113, "larger": 72, "latest": 14, "launch": 80, "layer": [96, 126, 129], "layout": 59, "learn": [9, 54, 64, 76, 123, 206], "legaci": [141, 153], "lesson": 9, "let": [192, 194], "level": [2, 4, 20, 211], "leverag": [31, 139], "librari": [58, 60, 62, 110, 118, 120, 124, 129, 206, 208], "limit": 6, "line": 64, "linker": 119, "list": 195, "llvm": 64, "load": [46, 47, 48, 49, 50, 51, 53, 67, 68, 69, 72, 73, 74, 75, 121, 123, 126, 130, 202, 206, 208, 211], "loadfrombinari": 36, "local": [16, 31, 79, 109, 192], "locat": 12, "log": 7, "look": [46, 48, 50, 51, 121], "loop": [27, 31, 90, 189, 208], "low": 20, "lower": [82, 89], "m55": 119, "machin": [64, 80, 109], "main": [14, 17], "maintain": 7, "make": [68, 119, 212], "mali": 99, "manag": [10, 35], "manual": [56, 84, 208], "marvel": 64, "maskrcnn": 72, "match": [191, 192, 194], "math": 189, "matmul": 139, "matrix": [101, 139, 200, 201, 208], "measur": [73, 74, 106, 147], "memori": [88, 89, 161], "merg": 7, "messag": 16, "meta_schedul": [2, 153, 156], "metal": [119, 199], "micro": [124, 157], "microtvm": [115, 116, 117, 118, 120, 121, 122, 123, 124, 199], "minim": 9, "miopen": 148, "misc": 153, "ml": 18, "mlf": 118, "mlperftini": 120, "mobil": 107, "mobilenet": [59, 73], "model": [18, 20, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 92, 110, 111, 113, 116, 117, 118, 119, 120, 121, 123, 124, 126, 130, 197, 202, 205, 206, 210, 211], "modifi": 123, "modul": [3, 4, 5, 43, 60, 67, 73, 75, 110, 131, 192, 206, 208, 210], "monitor": 7, "more": [58, 201, 211], "most": 14, "motiv": 123, "mrvl": 64, "multi": 135, "multipl": [14, 85, 101, 106, 131, 135, 139, 200, 201, 208], "mutat": 35, "mxnet": [73, 148], "name": [46, 48, 50, 51, 121], "nano": 70, "ndarrai": 176, "ndk": 148, "necessari": 74, "need": 126, "net": 191, "network": [8, 97, 98, 99, 100, 105, 106, 107, 108, 123, 126, 129, 130, 206], "neural": [97, 98, 99, 100, 191, 206], "new": [7, 58, 65], "next": [44, 123], "nn": [43, 119, 120, 160, 161, 170, 187], "nnmodul": 22, "nnpack": 148, "node": [2, 34, 194], "non": 194, "note": [17, 49, 200, 201, 208], "npu": 119, "numpi": [80, 204], "nvcc": 148, "nvidia": [98, 104, 106], "object": [4, 5, 72], "obtain": [119, 124, 210], "octeon": 64, "offload": [59, 67], "one": 14, "onli": 14, "onnx": [49, 64, 160, 202, 210], "op": [101, 161, 194], "op_attr": 161, "opencl": [56, 109, 208], "openclml": [56, 67], "oper": [20, 34, 36, 58, 59, 65, 87, 134, 140, 192, 193, 200, 201, 204, 208], "optim": [44, 62, 84, 87, 88, 89, 90, 110, 111, 113, 200, 201, 202, 205, 208, 210], "option": [64, 97, 105, 106, 107, 194, 208, 211], "other": [9, 34, 43, 62, 97, 98, 99, 100, 145, 202], "our": 123, "output": [0, 52, 69, 73, 75, 105, 106, 107, 108, 120, 122, 202, 210], "overal": [2, 44, 110, 111, 113], "overload": 204, "overrid": 4, "overview": [37, 41, 44, 189, 193, 205, 206], "own": [36, 118], "pack": [80, 90, 208], "packag": 211, "packedfunc": 5, "paddlepaddl": 50, "papi": 93, "parallel": [90, 134, 208], "paramet": [27, 126, 195, 200, 201, 202], "parametr": 79, "parser": 131, "part": 74, "particip": 9, "partit": [59, 65, 194], "pass": [4, 23, 35, 82, 84, 85], "passcontext": [4, 85], "patch": 17, "pattern": [191, 194], "perform": [44, 67, 73, 74, 96, 104, 200, 202, 208], "permut": [90, 208], "pi": 71, "pick": 17, "pickle_memo": 148, "pipelin": [113, 130], "pipelinemodul": 130, "plotter": 131, "polymorph": [191, 192], "portabl": [51, 52], "post": [17, 194, 210], "postprocess": 202, "pre": [70, 71, 72, 119, 121, 130, 210], "precis": [56, 67], "predict": 67, "prefil": 113, "prepar": [17, 67, 70, 71, 88, 89, 90, 110, 111, 113, 120, 126, 208], "preprocess": 202, "prequant": [73, 74], "prerequisit": [82, 123], "pretrain": [46, 48, 49, 50, 51, 53, 67, 68, 69, 70, 71, 73, 74], "previou": 14, "primit": [136, 208], "principl": [10, 41], "procedur": 7, "process": [11, 17, 52, 72, 119, 210, 211], "profil": [92, 93, 177], "program": [22, 25, 84, 85, 117, 209], "project": [10, 63, 116, 118, 120, 121, 123, 124, 192], "properti": 27, "proxi": 80, "prune": 75, "public": [10, 196], "pull": [10, 16], "push": 14, "put": 126, "python": [4, 8, 12, 16, 30, 34, 56, 63, 64, 79, 84, 116, 117, 118, 119, 120, 121, 122, 124, 132, 143, 153, 202, 211], "pytorch": [51, 67, 68, 72, 73, 121, 126], "qnn": 73, "qualiti": 9, "quantiz": [73, 74, 123], "quick": [44, 82, 206], "r": [20, 119], "rais": 13, "random": 148, "raspberri": 71, "read": [9, 44], "readi": [73, 212], "real": 74, "recent": 14, "recommend": [9, 16, 211], "record": [96, 147, 200], "recov": 14, "recurr": 135, "recurs": 191, "reduc": [139, 140], "reduct": [31, 134, 140], "refer": [12, 141, 189, 190, 212], "regist": [35, 36, 69, 97, 99, 105, 107], "registr": 4, "relai": [34, 35, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 65, 67, 69, 72, 73, 75, 84, 85, 126, 127, 129, 130, 131, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 190, 191, 192, 193, 194, 195, 202, 206], "relat": [34, 192, 195], "relax": [2, 18, 19, 20, 21, 22, 43, 110, 113, 153, 158, 159, 160, 161, 162, 163], "relax_vm": 178, "relay_viz": 148, "releas": 17, "relu": 138, "remark": [202, 210], "remot": [5, 67, 69, 70, 71, 109, 211], "render": [131, 138], "reorder": 136, "repo": 64, "report": [7, 197], "represent": [20, 36], "reproduc": 7, "request": [9, 10, 16, 212], "requir": [47, 52, 66, 75], "reset": 14, "resnet": [65, 210], "resnet50": [50, 68], "resolv": 14, "resourc": 8, "respect": 9, "result": [49, 53, 123, 126, 129, 132, 211], "review": [9, 11, 110, 111, 113], "rewrit": [31, 194], "risc": 62, "rocbla": 148, "rocm": [143, 148], "rotat": 7, "row": 134, "rpc": [56, 67, 69, 70, 71, 80, 97, 99, 105, 107, 109, 174], "rule": [101, 110], "run": [36, 61, 64, 66, 67, 68, 73, 75, 79, 96, 101, 109, 117, 119, 124, 126, 129, 130, 200, 206, 209, 210, 211], "runtim": [2, 5, 6, 36, 47, 57, 60, 62, 65, 70, 71, 80, 109, 120, 121, 153, 175, 176, 177, 178, 179, 202, 208, 210], "safeti": 208, "sampl": [0, 69, 75, 105, 106, 107, 108, 118], "save": [206, 208, 211], "savetobinari": 36, "scale": 106, "scan": 135, "schedul": [31, 89, 94, 96, 97, 98, 99, 100, 101, 133, 134, 135, 136, 138, 139, 140, 183, 200, 201, 204, 208], "scope": 89, "score": 72, "script": [119, 123, 190], "search": [96, 97, 98, 99, 100, 101, 104, 200, 202, 210], "secur": 197, "sequenc": 84, "sequenti": [4, 84], "serial": 3, "server": [67, 70, 71, 80, 109], "set": [65, 70, 71, 75, 97, 105, 106, 107, 108, 109, 126, 200, 202], "setup": [56, 61, 66, 69, 80], "shape": [30, 194], "shepherd": 10, "should": 39, "simpl": [129, 130], "simul": 64, "simultan": 7, "sketch": 101, "skip": 7, "softwar": 189, "sourc": [56, 142, 143], "space": 104, "spars": [75, 101, 148, 187], "special": [12, 101, 208], "specif": [5, 6, 13, 64], "sphinx": 12, "spir": 6, "spirv": 148, "split": [88, 130, 136], "stablehlo": 160, "stack": 5, "stage": [7, 135], "standard": [3, 30], "start": [42, 44, 64, 69, 93, 97, 99, 105, 107, 141, 199, 206, 211], "state": 135, "statement": 189, "static": 30, "statist": 67, "step": [101, 104, 123, 143, 201, 211], "stmt_functor": 184, "storag": 208, "strategi": [11, 34], "strawberri": 212, "structur": [2, 9, 20, 25, 37], "style": [8, 204], "subgraph": 130, "submiss": 120, "submit": 16, "sugar": [27, 30], "suggest": 80, "sum": 134, "summari": [2, 22, 23, 36, 79, 84, 89, 90, 109, 110, 123, 131, 132, 134, 135, 136, 138, 139, 140, 200, 201, 204, 208], "support": [2, 58, 59, 63, 64, 65, 143, 199, 206, 210], "synset": [46, 48, 50, 51, 121], "syntact": 30, "syntax": [64, 192], "synthesi": 61, "system": [5, 60, 66, 80, 195], "t": 80, "tabl": [43, 44, 110, 143], "tag": 7, "tar": [120, 148], "target": [1, 2, 57, 62, 64, 67, 79, 116, 117, 120, 121, 122, 124, 130, 180, 200, 202, 208, 210], "task": [96, 97, 98, 99, 100, 101, 108, 117, 147, 200], "te": [2, 153, 181, 201, 208], "technic": 12, "tedd": 138, "tempexpr": 192, "templat": [94, 102, 201], "tensor": [0, 25, 30, 87, 89, 108, 132, 133, 138, 139, 193, 195, 208], "tensorcor": 89, "tensorflow": 52, "tensorir": [25, 26, 27, 28, 30, 209], "tensorrt": 65, "termin": [131, 211], "test": [8, 16, 34, 46, 47, 48, 49, 50, 51, 53, 67, 72, 74, 79, 123, 126, 143, 171, 202], "tflite": [53, 73, 74, 116, 118, 122, 124], "than": 72, "thi": [120, 130], "thread": [88, 134, 189, 208], "through": [104, 208], "tile": [31, 136], "time": [10, 24, 29, 45, 55, 77, 83, 91, 95, 103, 114, 116, 117, 125, 128, 137, 198, 207], "tini": 124, "tip": [8, 14, 97, 98, 99, 100], "tir": [2, 153, 182, 183, 184, 185, 186], "tm": 119, "togeth": 126, "token": 113, "too": 130, "tool": [56, 124], "topi": [2, 187, 204], "topic": 34, "torch": 160, "torchvis": [72, 73], "trace": [31, 72, 73], "tracker": [69, 80, 97, 99, 105, 107], "train": [70, 71, 72, 121, 123, 130], "transfer": 123, "transform": [2, 23, 31, 43, 44, 75, 82, 163, 172, 186, 188, 209], "translat": 2, "travers": 35, "troubleshoot": 80, "trust": 9, "tune": [62, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 110, 117, 123, 189, 201, 202, 210, 211], "tuner": [147, 201], "tupl": [140, 192, 195], "tutori": [12, 38, 52, 121, 122, 203, 206], "tvm": [2, 5, 7, 11, 12, 17, 32, 36, 37, 39, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 60, 62, 63, 64, 65, 67, 69, 70, 71, 73, 74, 80, 81, 84, 85, 93, 109, 119, 123, 126, 136, 141, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 199, 201, 202, 205, 206, 210, 211, 212], "tvmc": [64, 68, 124, 210, 211], "tvmscript": [22, 30, 43], "two": [130, 194], "type": [12, 13, 34, 131, 191, 192, 194, 195], "u55": 119, "uma": 212, "under": 3, "understand": [20, 27], "unit": [34, 79], "univers": [43, 44], "untun": [117, 202, 210], "up": [34, 46, 48, 50, 51, 70, 71, 106, 109, 121, 126], "updat": [7, 17, 139, 208], "upload": [17, 123], "us": [0, 7, 22, 30, 60, 64, 73, 84, 85, 89, 93, 94, 96, 106, 119, 120, 123, 124, 129, 130, 131, 132, 138, 139, 191, 200, 201, 208, 210, 211], "usag": [14, 56, 58], "user": [63, 203], "util": [53, 74, 148], "v": [6, 60, 62], "v2": [47, 59, 73], "v3": 47, "valid": [80, 123, 143], "vanilla": 212, "variabl": [6, 30, 36, 189, 192, 194, 195], "vck190": 66, "vck5000": 66, "vector": [37, 90, 208], "verif": 130, "verifi": [126, 129, 132, 135], "versal": 66, "version": 17, "via": [43, 134], "view": 82, "virtual": 88, "vision": [123, 173], "visitor": [35, 82], "visual": [120, 131, 138], "viti": 66, "vlog": 32, "vm": 72, "vote": 17, "vulkan": 6, "wake": 120, "walkthrough": 37, "websit": 17, "weight": 113, "what": [14, 18, 39, 123], "when": 39, "where": 39, "while": 93, "why": 27, "wildcard": 194, "window": 143, "word": 120, "work": [115, 123, 127, 133, 202, 208], "workload": 101, "wrapper": 132, "write": [8, 34, 43, 82, 90, 101, 119, 123, 208], "x86": [100, 108], "x86_64": 64, "xcode": 148, "yolo": 47, "your": [36, 63, 118, 120, 212], "zephyr": [116, 117, 120, 122, 124], "zip": [53, 74], "zynq": 66}})