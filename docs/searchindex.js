Search.setIndex({"alltitles": {"1. Computational Graph": [[0, "computational-graph"]], "1. Cross Compile TVM Runtime": [[80, "cross-compile-tvm-runtime"]], "1. Defining an Attribute Node": [[34, "defining-an-attribute-node"]], "1. Hooking up Compute and Strategy with Relay": [[34, "hooking-up-compute-and-strategy-with-relay"]], "1. Introduction": [[64, "introduction"]], "1. The lack of numpy on device machine caused the RPC server can\u2019t be launched.": [[80, "the-lack-of-numpy-on-device-machine-caused-the-rpc-server-can-t-be-launched"]], "2. Building TVM with mrvl support": [[64, "building-tvm-with-mrvl-support"]], "2. Pack and Deploy to Device Machine": [[80, "pack-and-deploy-to-device-machine"]], "2. Tensor dumping": [[0, "tensor-dumping"]], "2. The lack of cloudpickle on device machine caused the RPC server can\u2019t be launched.": [[80, "the-lack-of-cloudpickle-on-device-machine-caused-the-rpc-server-can-t-be-launched"]], "2. Writing a Type Relation": [[34, "writing-a-type-relation"]], "2.1 Clone TVM repo": [[64, "clone-tvm-repo"]], "2.2 Build and start the TVM - mrvl docker container": [[64, "build-and-start-the-tvm-mrvl-docker-container"]], "3. Compiling a model using TVMC command line": [[64, "compiling-a-model-using-tvmc-command-line"]], "3. Launch RPC Server": [[80, "launch-rpc-server"]], "3. Relating the Arity and Attributes to an Operation": [[34, "relating-the-arity-and-attributes-to-an-operation"]], "3.1 TVMC Compilation Flow for a model": [[64, "tvmc-compilation-flow-for-a-model"]], "3.2. TVMC - Command line option(s): Syntax for mrvl target": [[64, "tvmc-command-line-option-s-syntax-for-mrvl-target"]], "3.3. TVMC Compiler: mrvl specific Command Line Options": [[64, "tvmc-compiler-mrvl-specific-command-line-options"]], "4. Compile ONNX model using the TVMC flow": [[64, "compile-onnx-model-using-the-tvmc-flow"]], "4. Defining the Compute of the Operation": [[34, "defining-the-compute-of-the-operation"]], "4.1 Compile and Run ONNX model for Simulator + LLVM / x86_64 target": [[64, "compile-and-run-onnx-model-for-simulator-llvm-x86-64-target"]], "4.2 Compile and Run ONNX model for Octeon target": [[64, "compile-and-run-onnx-model-for-octeon-target"]], "5. Compiling a model using Python APIs": [[64, "compiling-a-model-using-python-apis"]], "6. Creating a Relay Call Node and Exposing a Python Hook": [[34, "creating-a-relay-call-node-and-exposing-a-python-hook"]], "7. Including a Cleaner Python API Hook": [[34, "including-a-cleaner-python-api-hook"]], "8. Writing Unit Tests!": [[34, "writing-unit-tests"]], "A Basic Matrix Multiplication Template": [[188, "a-basic-matrix-multiplication-template"]], "A Matrix Multiplication Template with the Advanced Parameter API": [[188, "a-matrix-multiplication-template-with-the-advanced-parameter-api"]], "ADT Constructors": [[180, "adt-constructors"]], "ADT Matching": [[180, "adt-matching"]], "API Reference": [[130, null]], "AST Traversers": [[35, "ast-traversers"]], "About": [[130, null]], "About OpenCLML": [[56, "about-openclml"]], "Accuracy comparison": [[74, "accuracy-comparison"]], "Adding ONNX Support to TVM": [[197, null]], "Adding a Compiler Pass to Relay": [[35, null]], "Adding a Gradient in C++": [[34, "adding-a-gradient-in-c"]], "Adding a Gradient in Python": [[34, "adding-a-gradient-in-python"]], "Adding a New Docker Image": [[7, "adding-a-new-docker-image"]], "Adding a new operator": [[58, "adding-a-new-operator"], [65, "adding-a-new-operator"]], "Adding an Operator to Relay": [[34, null]], "Additional Deployment How-Tos": [[62, "additional-deployment-how-tos"]], "Additional Recommendations": [[9, "additional-recommendations"]], "Additional TVMC Functionalities": [[198, "additional-tvmc-functionalities"]], "Advanced Build Configuration": [[132, "advanced-build-configuration"]], "Advanced Usage": [[56, "advanced-usage"]], "Algebraic Data Types": [[183, "algebraic-data-types"]], "Algebraic Data Types in Relay": [[179, null]], "Alternate": [[182, "alternate"]], "Alveo Setup": [[66, "alveo-setup"]], "An Overview of TVM and Model Optimization": [[192, "an-overview-of-tvm-and-model-optimization"]], "Apache TVM Documentation": [[130, null]], "Application Integration": [[56, "application-integration"]], "Applications": [[182, "applications"]], "Apply Passes and Multiple Instrument Classes": [[85, "apply-passes-and-multiple-instrument-classes"]], "Apply only k-Latest Commits on to the main": [[14, "apply-only-k-latest-commits-on-to-the-main"]], "Apply transformations": [[23, "apply-transformations"]], "Approve and Request Changes Explicitly": [[9, "approve-and-request-changes-explicitly"]], "Architecture Guides": [[12, "architecture-guides"]], "Array Allocation": [[177, "array-allocation"]], "Array Packing": [[90, "array-packing"]], "Assert Statement": [[177, "assert-statement"]], "Attribute Pattern": [[182, "attribute-pattern"]], "Attributes": [[177, "attributes"]], "Attributes of an IRModule": [[43, "attributes-of-an-irmodule"]], "Auto Tuning": [[110, "auto-tuning"]], "Auto-Tune with Templates and AutoTVM": [[102, null]], "Auto-scheduling Sparse Matrix Multiplication on CPU with Custom Sketch Rule": [[101, null]], "Auto-scheduling a Convolution Layer for GPU": [[96, null]], "Auto-scheduling a Neural Network for ARM CPU": [[97, null]], "Auto-scheduling a Neural Network for NVIDIA GPU": [[98, null]], "Auto-scheduling a Neural Network for mali GPU": [[99, null]], "Auto-scheduling a Neural Network for x86 CPU": [[100, null]], "Auto-tuners in TVM": [[188, "auto-tuners-in-tvm"]], "Auto-tuning a Convolutional Network for ARM CPU": [[105, null]], "Auto-tuning a Convolutional Network for Mobile GPU": [[107, null]], "Auto-tuning a Convolutional Network for NVIDIA GPU": [[106, null]], "Auto-tuning a Convolutional Network for x86 CPU": [[108, null]], "AutoTuning": [[67, "autotuning"], [68, "autotuning"]], "Automatically Tuning the ResNet Model": [[197, "automatically-tuning-the-resnet-model"]], "BNNS partitioning of Relay graph": [[59, "bnns-partitioning-of-relay-graph"]], "Backend Compilation": [[177, "backend-compilation"]], "Basic Matrix Multiplication with TE": [[188, "basic-matrix-multiplication-with-te"]], "Basic example": [[191, "basic-example"]], "Be Respectful": [[9, "be-respectful"]], "Begin Tuning": [[98, "begin-tuning"], [100, "begin-tuning"], [105, "begin-tuning"], [106, "begin-tuning"], [107, "begin-tuning"]], "Begin tuning": [[188, "begin-tuning"]], "Blitz Course to TensorIR": [[196, null]], "Block Axis Properties": [[27, "block-axis-properties"]], "Blocking": [[88, "blocking"], [90, "blocking"]], "Bring Your Own Codegen To TVM": [[36, null]], "Broad Collaboration": [[10, "broad-collaboration"]], "Broken CI due to Simultaneous Merge": [[7, "broken-ci-due-to-simultaneous-merge"]], "Build TVM Runtime on Device": [[71, "build-tvm-runtime-on-device"], [109, "build-tvm-runtime-on-device"]], "Build TVM Runtime on Jetson Nano": [[70, "build-tvm-runtime-on-jetson-nano"]], "Build and Deploy": [[111, "build-and-deploy"]], "Build and Deploy ResNet-18 with TensorRT": [[65, "build-and-deploy-resnet-18-with-tensorrt"]], "Build and Run an IRModule": [[196, "build-and-run-an-irmodule"]], "Build and Universal Deployment": [[44, "build-and-universal-deployment"]], "Build and Verify": [[124, "build-and-verify"]], "Build and run with cuda backend": [[118, "build-and-run-with-cuda-backend"]], "Build model for Android Target": [[57, "build-model-for-android-target"]], "Build the TVM runtime library": [[62, "build-the-tvm-runtime-library"]], "Build the pipeline executor.": [[119, "build-the-pipeline-executor"]], "Build the subgraph with cutlass target.": [[119, "build-the-subgraph-with-cutlass-target"]], "Building ROCm support": [[132, "building-rocm-support"]], "Building TVM With PAPI": [[93, "building-tvm-with-papi"]], "Building TVM with BNNS support": [[59, "building-tvm-with-bnns-support"]], "Building TVM with TensorRT support": [[65, "building-tvm-with-tensorrt-support"]], "Building Trust": [[9, "building-trust"]], "Building a Graph Convolutional Network": [[115, null]], "Building on Windows": [[132, "building-on-windows"]], "Building with ACL support": [[58, "building-with-acl-support"]], "Built-in Instrument": [[4, "built-in-instrument"]], "C++ (local)": [[16, "c-local"]], "C++ Backend": [[4, "c-backend"]], "C++ Code Styles": [[8, "c-code-styles"]], "C++ Reference Documentation": [[12, "c-reference-documentation"]], "CI Environment": [[16, "ci-environment"]], "CI Monitoring Rotation": [[7, "ci-monitoring-rotation"]], "Call": [[180, "call"]], "Call a Vote on the Release Candidate": [[17, "call-a-vote-on-the-release-candidate"]], "Ccache": [[132, "ccache"]], "Check correctness and evaluate performance": [[96, "check-correctness-and-evaluate-performance"], [187, "check-correctness-and-evaluate-performance"]], "Cherry-Picking": [[17, "cherry-picking"]], "Chocolate": [[199, "chocolate"]], "Choose the model": [[47, "choose-the-model"]], "Closures": [[180, "closures"]], "Code Emitting": [[36, "code-emitting"]], "Code Generation for Input Variables": [[36, "code-generation-for-input-variables"]], "Code Generation for Operators": [[36, "code-generation-for-operators"]], "Code Guide and Tips": [[8, null]], "Code Reviews": [[9, null]], "Code Specialization": [[195, null]], "Codebase Structure Overview": [[37, "codebase-structure-overview"]], "Collect Basic Performance Data": [[189, "collect-basic-performance-data"]], "Commandline Tools": [[56, "commandline-tools"]], "Commit Message Guideline": [[16, "commit-message-guideline"]], "Committer Guide": [[10, null]], "Committers": [[11, "committers"]], "Common ADT Uses": [[179, "common-adt-uses"]], "Community First": [[10, "community-first"]], "Community Participation": [[9, "community-participation"]], "Compare the output labels": [[73, "compare-the-output-labels"]], "Comparing the Different Schedules": [[195, "comparing-the-different-schedules"]], "Comparing the Tuned and Untuned Models": [[189, "comparing-the-tuned-and-untuned-models"], [197, "comparing-the-tuned-and-untuned-models"]], "Compilation": [[67, "compilation"], [68, "compilation"], [193, "compilation"]], "Compile CoreML Models": [[46, null]], "Compile Deep Learning Models": [[54, null]], "Compile Keras Models": [[48, null]], "Compile ONNX Models": [[49, null]], "Compile PaddlePaddle Models": [[50, null]], "Compile PyTorch Models": [[51, null]], "Compile PyTorch Object Detection Models": [[72, null]], "Compile TFLite Models": [[53, null]], "Compile Tensorflow Models": [[52, null]], "Compile The Graph": [[70, "compile-the-graph"], [71, "compile-the-graph"]], "Compile YOLO-V2 and YOLO-V3 in DarkNet Models": [[47, null]], "Compile and Evaluate": [[98, "compile-and-evaluate"], [100, "compile-and-evaluate"]], "Compile and Evaluate the Default Schedule": [[195, "compile-and-evaluate-the-default-schedule"]], "Compile and run the Relay module": [[73, "compile-and-run-the-relay-module"]], "Compile and run with TVM": [[115, "compile-and-run-with-tvm"]], "Compile the Model With Relay": [[189, "compile-the-model-with-relay"]], "Compile the model on Relay": [[46, "compile-the-model-on-relay"]], "Compile the model with Relay": [[48, "compile-the-model-with-relay"]], "Compile the model with relay": [[49, "compile-the-model-with-relay"], [50, "compile-the-model-with-relay"], [53, "compile-the-model-with-relay"], [69, "compile-the-model-with-relay"]], "Compile with Relay VM": [[72, "compile-with-relay-vm"]], "Compiling a Model": [[66, "compiling-a-model"]], "Compiling a model for a remote device:": [[198, "compiling-a-model-for-a-remote-device"]], "Compiling an ONNX Model to the TVM Runtime": [[197, "compiling-an-onnx-model-to-the-tvm-runtime"]], "Compiling an Optimized Model with Tuning Data": [[189, "compiling-an-optimized-model-with-tuning-data"], [197, "compiling-an-optimized-model-with-tuning-data"]], "Compiling and Optimizing a Model with TVMC": [[197, null]], "Compiling and Optimizing a Model with the Python Interface (AutoTVM)": [[189, null]], "Composable IRModule Optimization": [[110, "composable-irmodule-optimization"]], "Computation times": [[24, null], [29, null], [45, null], [55, null], [77, null], [83, null], [91, null], [95, null], [103, null], [114, null], [117, null], [126, null], [186, null], [194, null]], "Computational Block": [[27, "computational-block"]], "Compute and Reduce with Tuple Inputs": [[129, null]], "Concise Implementation": [[9, "concise-implementation"]], "Concise with Syntactic Sugar": [[30, "concise-with-syntactic-sugar"]], "Conclusion": [[118, "conclusion"]], "Conditional Statement and Expression": [[177, "conditional-statement-and-expression"]], "Configuration": [[67, "configuration"], [68, "configuration"]], "Configure Settings": [[75, "configure-settings"]], "Configure tensor tuning settings and create tasks": [[108, "configure-tensor-tuning-settings-and-create-tasks"]], "Consensus Building": [[9, "consensus-building"]], "Consistency": [[9, "consistency"]], "Constant": [[180, "constant"]], "Construct or Import a Model": [[44, "construct-or-import-a-model"]], "Construct the model architecture": [[113, "construct-the-model-architecture"]], "Construction": [[180, "construction"]], "Contents": [[192, "contents"]], "Contributor Guide": [[15, null]], "Convert PyTorch model to Relay module": [[67, "convert-pytorch-model-to-relay-module"]], "Convert quantized Mobilenet v2 to Relay-QNN using the PyTorch frontend": [[73, "convert-quantized-mobilenet-v2-to-relay-qnn-using-the-pytorch-frontend"]], "Convert the model to IRModule": [[111, "convert-the-model-to-irmodule"]], "Convert to Relay Graph": [[75, "convert-to-relay-graph"]], "Cooperative Fetching": [[88, "cooperative-fetching"]], "Create An Example Relay Program": [[84, "create-an-example-relay-program"], [85, "create-an-example-relay-program"]], "Create Customized Instrument Class": [[85, "create-customized-instrument-class"]], "Create Dynamic-Shape Functions": [[30, "create-dynamic-shape-functions"]], "Create IRModule": [[43, "create-irmodule"]], "Create PassContext With Instruments": [[85, "create-passcontext-with-instruments"]], "Create Relax programs using Block Builder API": [[22, "create-relax-programs-using-block-builder-api"]], "Create Relax programs using NNModule API": [[22, "create-relax-programs-using-nnmodule-api"]], "Create Relax programs using TVMScript": [[22, "create-relax-programs-using-tvmscript"]], "Create Static-Shape Functions": [[30, "create-static-shape-functions"]], "Create TensorIR using TVMScript": [[30, "create-tensorir-using-tvmscript"]], "Create TensorIR using Tensor Expression": [[30, "create-tensorir-using-tensor-expression"]], "Create a Default Schedule for the Computation": [[195, "create-a-default-schedule-for-the-computation"]], "Create a simple network": [[118, "create-a-simple-network"]], "Create a simple network, this network can be a pre-trained model too.": [[119, "create-a-simple-network-this-network-can-be-a-pre-trained-model-too"]], "Create an IRModule": [[196, "create-an-irmodule"]], "Create the KVCache": [[113, "create-the-kvcache"]], "Create the search task": [[96, "create-the-search-task"], [101, "create-the-search-task"], [187, "create-the-search-task"]], "Create via TVMScript": [[43, "create-via-tvmscript"]], "Cross Compilation and RPC": [[109, null]], "Cross Thread Reduction": [[123, "cross-thread-reduction"]], "Cross compile the TVM runtime for other architectures": [[62, "cross-compile-the-tvm-runtime-for-other-architectures"]], "Custom Passes": [[23, "custom-passes"]], "Customization around Graph and Plotter": [[120, "customization-around-graph-and-plotter"]], "Customize Optimization": [[110, null]], "Customize Parser for Interested Relay Types": [[120, "customize-parser-for-interested-relay-types"]], "Cut a Release Candidate": [[17, "cut-a-release-candidate"]], "DLPack Support": [[63, "dlpack-support"]], "DLight Rules": [[110, "dlight-rules"]], "DType Pattern": [[182, "dtype-pattern"]], "Dataflow Block": [[20, "dataflow-block"]], "Dataflow and Control Fragments": [[180, "dataflow-and-control-fragments"]], "Dealing with Flakiness": [[7, "dealing-with-flakiness"]], "Debug Exchange Format": [[0, "debug-exchange-format"]], "Debug a Pass": [[84, "debug-a-pass"]], "Debugger": [[0, null]], "Debugging Failures": [[7, "debugging-failures"]], "Debugging TVM": [[32, null]], "Declare and Cross Compile Kernel on Local Machine": [[109, "declare-and-cross-compile-kernel-on-local-machine"]], "Decode": [[113, "decode"]], "Decode image": [[52, "decode-image"]], "Deep Dive": [[130, null]], "Deep Dive: Relax": [[21, null]], "Deep Dive: TensorIR": [[28, null]], "Define GCN in DGL with PyTorch backend": [[115, "define-gcn-in-dgl-with-pytorch-backend"]], "Define GEMV Tensorization Intrinsic": [[128, "define-gemv-tensorization-intrinsic"]], "Define General Commutative Reduction Operation": [[123, "define-general-commutative-reduction-operation"]], "Define Graph Convolution Layer in Relay": [[115, "define-graph-convolution-layer-in-relay"]], "Define Matrix Multiplication": [[128, "define-matrix-multiplication"]], "Define Network": [[106, "define-network"]], "Define Neural Network in Relay": [[193, "define-neural-network-in-relay"]], "Define Optimization Pipeline": [[113, "define-optimization-pipeline"]], "Define Tensor Intrinsic": [[89, "define-tensor-intrinsic"]], "Define a Network": [[97, "define-a-network"], [98, "define-a-network"], [99, "define-a-network"], [100, "define-a-network"]], "Define a Relay IR Module with multiple GlobalVar": [[120, "define-a-relay-ir-module-with-multiple-globalvar"]], "Define and Schedule Convolution with Bias and ReLU": [[127, "define-and-schedule-convolution-with-bias-and-relu"]], "Define network": [[105, "define-network"], [107, "define-network"], [108, "define-network"]], "Define the computation": [[96, "define-the-computation"], [101, "define-the-computation"]], "Define the functions to load dataset and evaluate accuracy": [[115, "define-the-functions-to-load-dataset-and-evaluate-accuracy"]], "Defining and Matching on an ADT": [[179, "defining-and-matching-on-an-adt"]], "Defining the Correct Target": [[189, null], [197, null]], "Defining the Matrix Multiplication": [[187, "defining-the-matrix-multiplication"]], "Defining the Tuning Search Algorithm": [[189, null], [197, null]], "Definitions (Type Data)": [[183, "definitions-type-data"]], "Deliberate on API and Data Structures": [[9, "deliberate-on-api-and-data-structures"]], "Deploy & Run": [[68, "deploy-run"]], "Deploy Deep Learning Models": [[76, null]], "Deploy Models and Integrate TVM": [[62, null]], "Deploy TVM Module using C++ API": [[60, null]], "Deploy a Framework-prequantized Model with TVM": [[73, null]], "Deploy a Framework-prequantized Model with TVM - Part 3 (TFLite)": [[74, null]], "Deploy a Hugging Face Pruned Model on CPU": [[75, null]], "Deploy a quantized MXNet Model": [[73, "deploy-a-quantized-mxnet-model"]], "Deploy a quantized PyTorch Model": [[73, "deploy-a-quantized-pytorch-model"]], "Deploy a quantized TFLite Model": [[73, "deploy-a-quantized-tflite-model"]], "Deploy on CPU": [[43, "deploy-on-cpu"]], "Deploy on GPU": [[43, "deploy-on-gpu"]], "Deploy on Other Backends": [[43, "deploy-on-other-backends"]], "Deploy optimized model on target devices": [[62, "deploy-optimized-model-on-target-devices"]], "Deploy the IRModule Universally": [[43, "deploy-the-irmodule-universally"]], "Deploy the Model Remotely by RPC": [[67, "deploy-the-model-remotely-by-rpc"], [69, "deploy-the-model-remotely-by-rpc"], [70, "deploy-the-model-remotely-by-rpc"], [71, "deploy-the-model-remotely-by-rpc"]], "Deploy the Optimized Model": [[110, "deploy-the-optimized-model"]], "Deploy the Pretrained Model on Adreno\u2122": [[67, null]], "Deploy the Pretrained Model on Adreno\u2122 with tvmc Interface": [[68, null]], "Deploy the Pretrained Model on Android": [[69, null]], "Deploy the Pretrained Model on Jetson Nano": [[70, null]], "Deploy the Pretrained Model on Raspberry Pi": [[71, null]], "Deploy the compiled model": [[113, "deploy-the-compiled-model"]], "Deploy to Adreno\u2122 GPU": [[56, null]], "Deploy to Android": [[57, null]], "Describe Batchwise Computation": [[129, "describe-batchwise-computation"]], "Describe Convolution via 2D Reduction": [[123, "describe-convolution-via-2d-reduction"]], "Describe Reduction with Collaborative Inputs": [[129, "describe-reduction-with-collaborative-inputs"]], "Describe Sum of Rows": [[123, "describe-sum-of-rows"]], "Describing the Vector Computation": [[195, "describing-the-vector-computation"]], "Deserialization": [[3, "deserialization"]], "Design and Architecture": [[2, null]], "Developer How-To Guide": [[33, null]], "Developer Tutorial": [[38, null]], "Development Environment Setup : Automatic": [[56, "development-environment-setup-automatic"]], "Development Environment Setup : Manual": [[56, "development-environment-setup-manual"]], "Development Guides": [[78, null]], "Device/Target Interactions": [[1, null]], "DeviceAPI": [[1, "deviceapi"]], "Display results": [[49, "display-results"], [53, "display-results"]], "Docker (recommended)": [[16, "docker-recommended"]], "Docker Images": [[7, "docker-images"], [131, null]], "Docker Source": [[131, "docker-source"]], "Document Lessons in Code Reviews": [[9, "document-lessons-in-code-reviews"]], "Documentation": [[12, null]], "Documents with Images / Figures": [[12, "documents-with-images-figures"]], "Domination": [[182, "domination"]], "Download a test image and pre-process": [[72, "download-a-test-image-and-pre-process"]], "Download and Convert Transformers Model": [[75, "download-and-convert-transformers-model"]], "Download pretrained Quantized TFLite model": [[74, "download-pretrained-quantized-tflite-model"]], "Download required files": [[47, "download-required-files"], [52, "download-required-files"]], "Downloading and Loading the ONNX Model": [[189, "downloading-and-loading-the-onnx-model"]], "Downloading, Preprocessing, and Loading the Test Image": [[189, "downloading-preprocessing-and-loading-the-test-image"]], "Dynamic Library vs. System Module": [[60, "dynamic-library-vs-system-module"]], "Embedding": [[113, "embedding"]], "Emulation": [[61, "emulation"]], "Enable C++ Tests": [[132, "enable-c-tests"]], "Enable OpenCLML Offloading": [[67, "enable-openclml-offloading"]], "End to End Model Execution": [[20, "end-to-end-model-execution"]], "End-to-End Optimize Model": [[111, null]], "Error Handling Guide": [[13, null]], "Example 1: Writing and Scheduling Vector Addition in TE for CPU": [[195, "example-1-writing-and-scheduling-vector-addition-in-te-for-cpu"]], "Example 2: Manually Optimizing Matrix Multiplication with TE": [[195, "example-2-manually-optimizing-matrix-multiplication-with-te"]], "Example results:": [[198, "example-results"]], "Example: Build and Deploy Mobilenet v2 1.0 with BNNS": [[59, "example-build-and-deploy-mobilenet-v2-1-0-with-bnns"]], "Example: Constant Folding": [[35, "example-constant-folding"]], "Example: List ADT": [[183, "example-list-adt"]], "Exception Handling": [[85, "exception-handling"]], "Execute on TVM": [[46, "execute-on-tvm"], [48, "execute-on-tvm"], [49, "execute-on-tvm"], [50, "execute-on-tvm"], [53, "execute-on-tvm"], [69, "execute-on-tvm"]], "Execute on TVM Runtime": [[47, "execute-on-tvm-runtime"]], "Execute on the TVM Runtime": [[189, "execute-on-the-tvm-runtime"]], "Execute the portable graph on TVM": [[51, "execute-the-portable-graph-on-tvm"], [52, "execute-the-portable-graph-on-tvm"]], "Export the model to Relax IRModule": [[113, "export-the-model-to-relax-irmodule"]], "Expression Mutators": [[35, "expression-mutators"]], "Expression Pattern": [[182, "expression-pattern"]], "Expression Visitors": [[35, "expression-visitors"]], "Expressions in Relay": [[180, null]], "Extend TVM": [[81, null]], "Extern Contrib Wrappers": [[121, "extern-contrib-wrappers"]], "External Tensor Functions": [[121, null]], "Extra Structure in TensorIR": [[25, "extra-structure-in-tensorir"]], "Extract Search Tasks": [[97, "extract-search-tasks"], [98, "extract-search-tasks"], [99, "extract-search-tasks"], [100, "extract-search-tasks"]], "Factors to Consider about Code Quality": [[9, "factors-to-consider-about-code-quality"]], "Features": [[177, "features"]], "Final Notes and Summary": [[187, "final-notes-and-summary"], [188, "final-notes-and-summary"], [195, "final-notes-and-summary"]], "Final Remarks": [[189, "final-remarks"], [197, "final-remarks"]], "For Contributors": [[7, "for-contributors"]], "For Maintainers": [[7, "for-maintainers"]], "Function Parameters and Buffers": [[27, "function-parameters-and-buffers"]], "Function Pattern": [[182, "function-pattern"]], "Function Type": [[183, "function-type"]], "Function-Level Passes": [[4, "function-level-passes"]], "Functions": [[180, "functions"]], "Fusing convolutions": [[191, "fusing-convolutions"]], "General Development Process": [[11, "general-development-process"]], "Generate CUDA Kernel": [[88, "generate-cuda-kernel"], [89, "generate-cuda-kernel"]], "Generate OpenCL Code": [[195, "generate-opencl-code"]], "Generated Source Inspection": [[56, "generated-source-inspection"]], "Generic schedules and fusing operations": [[191, "generic-schedules-and-fusing-operations"]], "Get Started": [[42, null]], "Get TVM Runtime Library": [[60, "get-tvm-runtime-library"]], "Get a PyTorch Model": [[67, "get-a-pytorch-model"]], "Get a real image for e2e testing": [[74, "get-a-real-image-for-e2e-testing"]], "Get boxes with score larger than 0.9": [[72, "get-boxes-with-score-larger-than-0-9"]], "Get predictions and performance statistic": [[67, "get-predictions-and-performance-statistic"]], "Getting Started": [[130, null]], "Getting Started With PAPI": [[93, null]], "Getting Starting using TVMC Python: a high-level API for TVM": [[198, null]], "Git Usage Tips": [[14, null]], "Global Type Variable": [[183, "global-type-variable"]], "Global Variable": [[180, "global-variable"]], "Glue to Lowering": [[82, "glue-to-lowering"]], "Gradient Operators": [[34, "gradient-operators"]], "Graph Abstraction for ML Models": [[18, null]], "Graph Bindings": [[180, "graph-bindings"]], "Guidelines": [[16, "guidelines"]], "HLS Backend Example": [[61, null]], "HOW TO": [[112, null]], "Handle Integer Constant Expression": [[8, "handle-integer-constant-expression"]], "Handle TVM Errors": [[39, null]], "High-Level Operations Representation": [[20, "high-level-operations-representation"]], "Hook Python Function as Extern": [[121, "hook-python-function-as-extern"]], "How To": [[130, null]], "How To Guides": [[86, null]], "How to Use TVM Pass Infra": [[84, null]], "How to Use TVM Pass Instrument": [[85, null]], "How to choose an Error Type": [[13, "how-to-choose-an-error-type"]], "How to combine multiple commits into one": [[14, "how-to-combine-multiple-commits-into-one"]], "How to optimize GEMM on CPU": [[90, null]], "How to optimize convolution on GPU": [[88, null]], "How to optimize convolution using TensorCores": [[89, null]], "How to resolve a conflict with main": [[14, "how-to-resolve-a-conflict-with-main"]], "How to use Debugger?": [[0, "how-to-use-debugger"]], "How-to Guides": [[12, "how-to-guides"]], "Hybrid Frontend Language Reference": [[177, null]], "Hybrid Script": [[178, "hybrid-script"]], "IR Transformation": [[82, "ir-transformation"]], "IR Visitor": [[82, "ir-visitor"]], "IRModule": [[43, null], [196, "irmodule"]], "IRModule Optimization": [[111, "irmodule-optimization"]], "If Pattern": [[182, "if-pattern"]], "If-Then-Else": [[180, "if-then-else"]], "Implement CSourceCodegen": [[36, "implement-csourcecodegen"]], "Implement CodegenC": [[36, "implement-codegenc"]], "Implement Constructor": [[36, "implement-constructor"]], "Implement CreateCSourceModule": [[36, "implement-createcsourcemodule"]], "Implement ExampleJsonCodeGen": [[36, "implement-examplejsoncodegen"]], "Implement GenCFunc": [[36, "implement-gencfunc"]], "Implement GetFunction": [[36, "implement-getfunction"]], "Implement Run": [[36, "implement-run"]], "Implement SaveToBinary and LoadFromBinary": [[36, "implement-savetobinary-and-loadfrombinary"]], "Implement a C Codegen": [[36, "implement-a-c-codegen"]], "Implement a Codegen for Your Representation": [[36, "implement-a-codegen-for-your-representation"]], "Implement a Customized Runtime": [[36, "implement-a-customized-runtime"]], "Implement a Pass Using Python Decorator": [[84, "implement-a-pass-using-python-decorator"]], "Implementation Details": [[5, "implementation-details"]], "Implementing Neural Nets Using ADTs": [[179, "implementing-neural-nets-using-adts"]], "Import from existing models": [[43, "import-from-existing-models"]], "Import model": [[52, "import-model"]], "Import the graph to Relay": [[47, "import-the-graph-to-relay"], [51, "import-the-graph-to-relay"], [52, "import-the-graph-to-relay"], [72, "import-the-graph-to-relay"]], "Improve performance with custom targets": [[187, null]], "Incomplete Type": [[183, "incomplete-type"]], "Independent Project Management": [[10, "independent-project-management"]], "Index": [[40, null], [130, null]], "Inference": [[66, "inference"]], "Inference on tensorflow": [[52, "inference-on-tensorflow"]], "Inference with Relay VM": [[72, "inference-with-relay-vm"]], "Initialization Schedule": [[31, "initialization-schedule"]], "Input data layout for operations to be offloaded to BNNS execution": [[59, "input-data-layout-for-operations-to-be-offloaded-to-bnns-execution"]], "Input pre-processing": [[197, "input-pre-processing"]], "Inspecting the Optimized Schedule": [[187, "inspecting-the-optimized-schedule"]], "Install dependencies": [[104, "install-dependencies"], [105, "install-dependencies"], [106, "install-dependencies"], [107, "install-dependencies"], [188, "install-dependencies"]], "Install from Source": [[132, null]], "Installing Arm Compute Library": [[58, "installing-arm-compute-library"]], "Installing PAPI": [[93, "installing-papi"]], "Installing TVM": [[133, null]], "Installing TensorRT": [[65, "installing-tensorrt"]], "Integrate TVM into Your Project": [[63, null]], "Integrate User Defined C++ Array": [[63, "integrate-user-defined-c-array"]], "Integrate User Defined Python Array": [[63, "integrate-user-defined-python-array"]], "Interactive with Python Variables": [[30, "interactive-with-python-variables"]], "Introduction": [[56, "introduction"], [58, "introduction"], [59, "introduction"], [65, "introduction"], [192, null]], "Introduction to Module Serialization": [[3, null]], "Introduction to Relay": [[178, "introduction-to-relay"]], "Introduction to TOPI": [[191, null]], "Introductory Tutorials": [[12, "introductory-tutorials"]], "Jenkins Logs": [[7, "jenkins-logs"]], "Key Elements of Relax": [[20, "key-elements-of-relax"]], "Key Elements of Tensor Programs": [[25, "key-elements-of-tensor-programs"]], "Key Features of Relax": [[18, "key-features-of-relax"]], "Key Flow": [[41, "key-flow"]], "Key Goals": [[41, "key-goals"]], "Key Principle": [[41, "key-principle"]], "Key data structures": [[2, "key-data-structures"]], "Keywords": [[177, "keywords"]], "Lambda Functions": [[195, null]], "Language Reference": [[178, null]], "Learn from other Code Reviews": [[9, "learn-from-other-code-reviews"]], "Legacy": [[130, null], [142, null]], "Let Bindings": [[180, "let-bindings"]], "Let Pattern": [[182, "let-pattern"]], "Leverage Localities": [[31, "leverage-localities"]], "Library Dispatch": [[110, "library-dispatch"]], "Load Compiled Module": [[195, "load-compiled-module"]], "Load Model": [[68, "load-model"]], "Load Required Modules": [[75, "load-required-modules"]], "Load a pretrained PyTorch model": [[51, "load-a-pretrained-pytorch-model"]], "Load a test image": [[46, "load-a-test-image"], [47, "load-a-test-image"], [48, "load-a-test-image"], [49, "load-a-test-image"], [50, "load-a-test-image"], [51, "load-a-test-image"], [53, "load-a-test-image"], [67, "load-a-test-image"], [74, "load-a-test-image"]], "Load a tflite model": [[74, "load-a-tflite-model"]], "Load pre-trained maskrcnn from torchvision and do tracing": [[72, "load-pre-trained-maskrcnn-from-torchvision-and-do-tracing"]], "Load pretrained CoreML model": [[46, "load-pretrained-coreml-model"]], "Load pretrained ONNX model": [[49, "load-pretrained-onnx-model"]], "Load pretrained ResNet50 model": [[50, "load-pretrained-resnet50-model"]], "Load pretrained TFLite model": [[53, "load-pretrained-tflite-model"]], "Load pretrained keras model": [[48, "load-pretrained-keras-model"], [69, "load-pretrained-keras-model"]], "Load quantization-ready, pretrained Mobilenet v2 model from torchvision": [[73, "load-quantization-ready-pretrained-mobilenet-v2-model-from-torchvision"]], "Load the data and set up model parameters": [[115, "load-the-data-and-set-up-model-parameters"]], "Local Variable": [[180, "local-variable"]], "Look up synset name": [[46, "look-up-synset-name"], [48, "look-up-synset-name"], [50, "look-up-synset-name"], [51, "look-up-synset-name"]], "Loop Iterations": [[27, "loop-iterations"]], "Loop Permutation": [[90, "loop-permutation"]], "Loop Tiling": [[31, "loop-tiling"]], "Loops": [[177, "loops"]], "Low-Level Integration": [[20, "low-level-integration"]], "Lowering Computation to Intrinsics": [[89, "lowering-computation-to-intrinsics"]], "Make a PyTorch Resnet50 Model": [[68, "make-a-pytorch-resnet50-model"]], "Making your Hardware Accelerator TVM-ready with UMA": [[199, null]], "Manually Apply Optimization Passes": [[84, "manually-apply-optimization-passes"]], "Marvell Machine Learning Integration": [[64, null]], "Matching Diamonds and Post-Dominator Graphs": [[182, "matching-diamonds-and-post-dominator-graphs"]], "Matching Fuzzy Patterns": [[182, "matching-fuzzy-patterns"]], "Matching Non-Call Nodes": [[182, "matching-non-call-nodes"]], "Matching One of Two Ops": [[182, "matching-one-of-two-ops"]], "Matching Types": [[182, "matching-types"]], "Matching an Op with Attributes": [[182, "matching-an-op-with-attributes"]], "Matching an Optional Op": [[182, "matching-an-optional-op"]], "Math Intrinsics": [[177, "math-intrinsics"]], "Matrix Multiplication with AutoTVM": [[188, "matrix-multiplication-with-autotvm"]], "Measure performance": [[73, "measure-performance"], [74, "measure-performance"]], "Memory Hierarchy": [[88, "memory-hierarchy"]], "Memory Scope": [[89, "memory-scope"]], "Minimize Dependencies": [[9, "minimize-dependencies"]], "Misc": [[142, null]], "Module": [[5, "module"]], "Module Export Example": [[3, "module-export-example"]], "Module Storage Format": [[195, null]], "Module and Global Functions": [[180, "module-and-global-functions"]], "Module-Level Passes": [[4, "module-level-passes"]], "More Explanation on cfg.define_split": [[188, null]], "More examples": [[58, "more-examples"]], "Multi-Stage Scan Cell": [[124, "multi-stage-scan-cell"]], "Multiple States": [[124, "multiple-states"]], "Necessary imports": [[74, "necessary-imports"]], "Network Resources": [[8, "network-resources"]], "Notes": [[49, "notes"]], "Numpy-style operator overloading": [[191, "numpy-style-operator-overloading"]], "Obtaining the Model": [[197, "obtaining-the-model"]], "OpenCL Backend Enhancements": [[56, "opencl-backend-enhancements"]], "Operator support": [[58, "operator-support"], [59, "operator-support"], [65, "operator-support"]], "Operators": [[180, "operators"]], "Optimization 1: Blocking": [[195, "optimization-1-blocking"]], "Optimization 2: Vectorization": [[195, "optimization-2-vectorization"]], "Optimization 3: Loop Permutation": [[195, "optimization-3-loop-permutation"]], "Optimization 4: Array Packing": [[195, "optimization-4-array-packing"]], "Optimization 5: Optimizing Block Writing Through Caching": [[195, "optimization-5-optimizing-block-writing-through-caching"]], "Optimization 6: Parallelization": [[195, "optimization-6-parallelization"]], "Optimize Large Language Model": [[113, null]], "Optimize Tensor Operators": [[87, null]], "Optimize and tune models for target devices": [[62, "optimize-and-tune-models-for-target-devices"]], "Optimize the Program": [[84, "optimize-the-program"]], "Optimizing Operators with Auto-scheduling": [[187, null]], "Optimizing Operators with Schedule Templates and AutoTVM": [[188, null]], "Other APIs": [[134, null]], "Other Tips": [[97, "other-tips"], [98, "other-tips"], [99, "other-tips"], [100, "other-tips"]], "Other Topics": [[34, "other-topics"]], "Output Post-Processing": [[197, "output-post-processing"]], "Overall Flow": [[2, "overall-flow"], [44, "overall-flow"]], "Override Instruments in Current PassContext": [[4, "override-instruments-in-current-passcontext"]], "Overview": [[41, null], [44, "overview"], [177, "overview"]], "Overview for Supported Hardware Backend of TVM": [[193, "overview-for-supported-hardware-backend-of-tvm"]], "Overview of Operators": [[181, "overview-of-operators"]], "Pack Everything into One Library": [[195, "pack-everything-into-one-library"]], "PackedFunc": [[5, "packedfunc"]], "Parallel": [[90, "parallel"]], "Partitioning and Compilation Settings": [[65, "partitioning-and-compilation-settings"]], "Pass Constructs": [[4, "pass-constructs"]], "Pass Infrastructure": [[4, null]], "Pass Instrument": [[4, "pass-instrument"], [4, "pass-instrument-py-frontend"]], "Pass Objects": [[4, "pass-objects"]], "Pass Registration": [[4, "pass-registration"]], "PassContext": [[4, "passcontext"], [4, "id1"]], "Patch Releases": [[17, "patch-releases"]], "Pattern Examples": [[182, "pattern-examples"]], "Pattern Language Design": [[182, "pattern-language-design"]], "Pattern Matching in Match Expressions": [[179, "pattern-matching-in-match-expressions"]], "Pattern Matching in Relay": [[182, null]], "Pattern Partitioning": [[182, "pattern-partitioning"]], "Pattern Rewriting": [[182, "pattern-rewriting"]], "Perform Optimization Transformations": [[44, "perform-optimization-transformations"]], "Polymorphism and Type Relations": [[180, "polymorphism-and-type-relations"]], "Post the Announcement": [[17, "post-the-announcement"]], "Post the Release": [[17, "post-the-release"]], "Postprocess the output": [[189, "postprocess-the-output"]], "Precisions": [[56, "precisions"], [67, "precisions"]], "Prefill": [[113, "prefill"]], "Preparation": [[111, "preparation"]], "Preparation and Algorithm": [[88, "preparation-and-algorithm"], [89, "preparation-and-algorithm"]], "Preparation and Baseline": [[90, "preparation-and-baseline"]], "Preparation and Performance Baseline": [[195, "preparation-and-performance-baseline"]], "Prepare TVM Target": [[67, "prepare-tvm-target"]], "Prepare a Relax Module": [[110, "prepare-a-relax-module"]], "Prepare the GPG Key": [[17, "prepare-the-gpg-key"]], "Prepare the Pre-trained Model": [[70, "prepare-the-pre-trained-model"], [71, "prepare-the-pre-trained-model"]], "Prepare the Release Candidate": [[17, "prepare-the-release-candidate"]], "Prepare the Release Notes": [[17, "prepare-the-release-notes"]], "Prepare the model weights": [[113, "prepare-the-model-weights"]], "Prepare the parameters needed in the GraphConv layers": [[115, "prepare-the-parameters-needed-in-the-graphconv-layers"]], "Prerequisites": [[82, "prerequisites"]], "Procedures for Keeping CI Green": [[7, "procedures-for-keeping-ci-green"]], "Process the output": [[52, "process-the-output"]], "Profile Models": [[92, null]], "Projection": [[180, "projection"]], "Public Archive Principle": [[10, "public-archive-principle"]], "Publications": [[184, null]], "Put layers together": [[115, "put-layers-together"]], "Python (local)": [[16, "python-local"]], "Python API": [[142, null]], "Python Code Styles": [[8, "python-code-styles"]], "Python Frontend": [[4, "python-frontend"]], "Python Interface": [[56, "python-interface"]], "Python Reference Documentation": [[12, "python-reference-documentation"]], "Python Target Parametrization": [[79, null]], "Quantize, trace and run the PyTorch Mobilenet v2 model": [[73, "quantize-trace-and-run-the-pytorch-mobilenet-v2-model"]], "Quick Start": [[44, null]], "Quick Start Tutorial for Compiling Deep Learning Models": [[193, null]], "Quick View": [[82, "quick-view"]], "R.call_tir": [[20, "r-call-tir"]], "RPC Setup": [[56, "rpc-setup"]], "Raise a Specific Error in C++": [[13, "raise-a-specific-error-in-c"]], "Read next": [[44, "read-next"]], "Read the code carefully": [[9, "read-the-code-carefully"]], "Recover a Previous Commit after Reset": [[14, "recover-a-previous-commit-after-reset"]], "Recursion with ADTs": [[179, "recursion-with-adts"]], "Reduce-update for Tensorize": [[128, "reduce-update-for-tensorize"]], "Reduction": [[123, null]], "Reduction Factoring and Parallelization": [[123, "reduction-factoring-and-parallelization"]], "Refer to Another Location in the Document": [[12, "refer-to-another-location-in-the-document"]], "Reference": [[12, "reference"]], "References": [[199, "references"]], "Register Android device to RPC Tracker": [[69, "register-android-device-to-rpc-tracker"]], "Register Devices to RPC Tracker": [[97, "register-devices-to-rpc-tracker"], [105, "register-devices-to-rpc-tracker"], [107, "register-devices-to-rpc-tracker"]], "Register Your Codegen": [[36, "register-your-codegen"]], "Registering a Pass with the Pass Manager": [[35, "registering-a-pass-with-the-pass-manager"]], "Relax": [[19, null]], "Relax Creation": [[22, null]], "Relay Arm\u00ae Compute Library Integration": [[58, null]], "Relay BNNS Integration": [[59, null]], "Relay Build": [[51, "relay-build"], [52, "relay-build"]], "Relay Core Tensor Operators": [[181, null]], "Relay TensorRT Integration": [[65, null]], "Relay\u2019s Type System": [[183, null]], "Release Process": [[17, null]], "Remote Deployment": [[5, "remote-deployment"]], "Render Graphs with TEDD": [[127, "render-graphs-with-tedd"]], "Render the graph with Relay Visualizer on the terminal": [[120, "render-the-graph-with-relay-visualizer-on-the-terminal"]], "Reporting Issues": [[7, "reporting-issues"]], "Reporting Security Issues": [[185, "reporting-security-issues"]], "Reproduce Failures": [[7, "reproduce-failures"]], "Request for Community Input": [[199, "request-for-community-input"]], "Reset to the most recent main branch": [[14, "reset-to-the-most-recent-main-branch"]], "Review Overall Flow": [[110, "review-overall-flow"], [111, "review-overall-flow"], [113, "review-overall-flow"]], "Reviewers": [[9, "reviewers"], [11, "reviewers"]], "Rewrite Reduction": [[31, "rewrite-reduction"]], "Run": [[61, "run"]], "Run All the Code!": [[75, "run-all-the-code"]], "Run CPU Kernel Remotely by RPC": [[109, "run-cpu-kernel-remotely-by-rpc"]], "Run OpenCL Kernel Remotely by RPC": [[109, "run-opencl-kernel-remotely-by-rpc"]], "Run inference": [[67, "run-inference"]], "Run the DGL model and test for accuracy": [[115, "run-the-dgl-model-and-test-for-accuracy"]], "Run the Dense Graph": [[75, "run-the-dense-graph"]], "Run the Sparse Graph": [[75, "run-the-sparse-graph"]], "Run the TVM model, test for accuracy and verify with DGL": [[115, "run-the-tvm-model-test-for-accuracy-and-verify-with-dgl"]], "Run the generate library": [[193, "run-the-generate-library"]], "Run the pipeline executor.": [[119, "run-the-pipeline-executor"]], "Run the search": [[96, "run-the-search"], [101, "run-the-search"], [187, "run-the-search"]], "Run the two subgraphs in pipeline with pipeline executor.": [[119, "run-the-two-subgraphs-in-pipeline-with-pipeline-executor"]], "Running in CI": [[79, "running-in-ci"]], "Running in local docker container": [[79, "running-in-local-docker-container"]], "Running locally": [[79, "running-locally"]], "Running on Alveo and VCK5000": [[66, "running-on-alveo-and-vck5000"]], "Running on Zynq and VCK190": [[66, "running-on-zynq-and-vck190"]], "Running the Compiled Module": [[197, "running-the-compiled-module"]], "Running the Model from The Compiled Module with TVMC": [[197, "running-the-model-from-the-compiled-module-with-tvmc"]], "Runtime API and Thread-Safety": [[195, null]], "Runtime Execution": [[2, "runtime-execution"]], "Runtime Settings": [[65, "runtime-settings"]], "Runtime-Specific Information": [[5, "runtime-specific-information"]], "SPIR-V Capabilities": [[6, "spir-v-capabilities"]], "Sample Output": [[0, "sample-output"], [69, "sample-output"], [75, "sample-output"], [105, "sample-output"], [106, "sample-output"], [107, "sample-output"], [108, "sample-output"]], "Save and Load Compiled Module": [[193, "save-and-load-compiled-module"]], "Save and then start the process in the terminal:": [[198, "save-and-then-start-the-process-in-the-terminal"]], "Saving and Loading Compiled Modules": [[195, "saving-and-loading-compiled-modules"]], "Saving the model": [[198, "saving-the-model"]], "Saving the package": [[198, "saving-the-package"]], "Saving the tuning results": [[198, "saving-the-tuning-results"]], "Scale up measurement by using multiple devices": [[106, "scale-up-measurement-by-using-multiple-devices"]], "Scan and Recurrent Kernel": [[124, null]], "Schedule Operation with Tuple Inputs": [[129, "schedule-operation-with-tuple-inputs"]], "Schedule Primitives in TVM": [[125, null]], "Schedule the Matmul": [[128, "schedule-the-matmul"]], "Schedule the Reduction": [[123, "schedule-the-reduction"]], "Schedule the Scan Cell": [[124, "schedule-the-scan-cell"]], "Scheduling the Computation": [[89, "scheduling-the-computation"]], "Security Guide": [[185, null]], "Security Model": [[185, "security-model"]], "Sequential Passes": [[4, "sequential-passes"]], "Serialization": [[3, "serialization"]], "Set Parameters for Auto-Scheduler": [[187, "set-parameters-for-auto-scheduler"]], "Set Tuning Options": [[97, "set-tuning-options"], [105, "set-tuning-options"], [106, "set-tuning-options"], [107, "set-tuning-options"]], "Set Up RPC Server on Device": [[70, "set-up-rpc-server-on-device"], [71, "set-up-rpc-server-on-device"], [109, "set-up-rpc-server-on-device"]], "Set up the DGL-PyTorch model and get the golden results": [[115, "set-up-the-dgl-pytorch-model-and-get-the-golden-results"]], "Setting Tuning Parameters": [[189, null]], "Setup": [[61, "setup"]], "Setup Environment": [[69, "setup-environment"]], "Setup RPC Server": [[80, "setup-rpc-server"]], "Setup RPC System": [[80, null]], "Setup RPC Tracker and RPC Proxy": [[80, "setup-rpc-tracker-and-rpc-proxy"]], "Setup instructions": [[66, "setup-instructions"]], "Shape Pattern": [[182, "shape-pattern"]], "Shepherd a Pull Request": [[10, "shepherd-a-pull-request"]], "Skipping CI": [[7, "skipping-ci"]], "Software Emulation": [[177, "software-emulation"]], "Special considerations for TVM": [[12, "special-considerations-for-tvm"]], "Special step for sparse workload": [[101, "special-step-for-sparse-workload"]], "Sphinx Gallery How-Tos": [[12, "sphinx-gallery-how-tos"]], "Splitting the network into two subgraphs.": [[119, "splitting-the-network-into-two-subgraphs"]], "Standard Format": [[30, "standard-format"]], "Start RPC Tracker": [[69, "start-rpc-tracker"], [97, "start-rpc-tracker"], [105, "start-rpc-tracker"], [107, "start-rpc-tracker"]], "Start an RPC Tracker and Register Devices to the Tracker": [[99, "start-an-rpc-tracker-and-register-devices-to-the-tracker"]], "Step 0: Imports": [[198, "step-0-imports"]], "Step 1. Install Dependencies": [[132, "step-1-install-dependencies"]], "Step 1.5: Tune [Optional & Recommended]": [[198, "step-1-5-tune-optional-recommended"]], "Step 1:  Define the search space": [[104, "step-1-define-the-search-space"]], "Step 1: Load a model": [[198, "step-1-load-a-model"]], "Step 2. Get Source from Github": [[132, "step-2-get-source-from-github"]], "Step 2:  Search through the space": [[104, "step-2-search-through-the-space"]], "Step 2: Compile": [[198, "step-2-compile"]], "Step 2: Use AutoTVM to Optimize the Matrix Multiplication": [[188, "step-2-use-autotvm-to-optimize-the-matrix-multiplication"]], "Step 3. Configure and Build": [[132, "step-3-configure-and-build"]], "Step 3: Run": [[198, "step-3-run"]], "Step 4. Validate Installation": [[132, "step-4-validate-installation"]], "Step 5. Extra Python Dependencies": [[132, "step-5-extra-python-dependencies"]], "Strategy Decision Process": [[11, "strategy-decision-process"]], "Strawberry": [[199, "strawberry"]], "Structure Info": [[20, "structure-info"]], "Submit a Pull Request": [[16, null]], "Sugars for Block Axes Binding": [[27, "sugars-for-block-axes-binding"]], "Suggested Architecture": [[80, "suggested-architecture"]], "Summary": [[22, "summary"], [23, "summary"], [36, "summary"], [79, "summary"], [84, "summary"], [89, "summary"], [90, "summary"], [109, "summary"], [110, "summary"], [120, "summary"], [121, "summary"], [123, "summary"], [124, "summary"], [125, "summary"], [127, "summary"], [128, "summary"], [129, "summary"], [191, "summary"]], "Summary and Discussions": [[2, "summary-and-discussions"]], "Summary of Matrix Multiplication Example": [[195, "summary-of-matrix-multiplication-example"]], "Supported model formats": [[197, null]], "Syntax": [[180, "syntax"]], "Synthesis": [[61, "synthesis"]], "System Requirements": [[66, "system-requirements"]], "TE Scheduling Primitives": [[195, null]], "TFLite inference": [[74, "tflite-inference"]], "TVM Codebase Walkthrough by Example": [[37, null]], "TVM Community Guidelines": [[11, null]], "TVM Object and Compiler Stack": [[5, "tvm-object-and-compiler-stack"]], "TVM RPC Server": [[67, "tvm-rpc-server"]], "TVM Runtime System": [[5, null]], "TVM Runtime for Android Target": [[57, "tvm-runtime-for-android-target"]], "TVM compilation and inference": [[74, "tvm-compilation-and-inference"]], "TVM for Adreno\u2122": [[56, "tvm-for-adreno"]], "Table of Contents": [[43, "table-of-contents"], [44, "table-of-contents"], [110, "table-of-contents"], [132, "table-of-contents"]], "Target Code Generators": [[1, "target-code-generators"]], "Target Definition": [[1, "target-definition"]], "Target Translation": [[2, "target-translation"]], "Targeting Vector Addition for GPUs (Optional)": [[195, "targeting-vector-addition-for-gpus-optional"]], "Technical Details": [[12, "technical-details"]], "TempExprs": [[180, "tempexprs"]], "Tensor Program Abstraction": [[25, null]], "Tensor Type": [[183, "tensor-type"]], "TensorCore Introduction": [[89, "tensorcore-introduction"]], "TensorIR": [[26, null]], "TensorIR Creation": [[30, null]], "TensorIR Function with Dynamic Shapes": [[30, "tensorir-function-with-dynamic-shapes"]], "Testing": [[16, "testing"]], "The ConstantChecker Visitor": [[35, "the-constantchecker-visitor"]], "The ConstantFolder Mutator": [[35, "the-constantfolder-mutator"]], "The Design": [[4, "the-design"]], "The Four Document Types": [[12, "the-four-document-types"]], "Thread Bind": [[177, "thread-bind"]], "Time Management": [[10, "time-management"]], "Tokenization": [[113, "tokenization"]], "Trace the Transformation": [[31, "trace-the-transformation"]], "Transform an IRModule": [[196, "transform-an-irmodule"]], "Transform to a GPU program": [[196, "transform-to-a-gpu-program"]], "Transformation": [[23, null], [31, null]], "Transformations": [[2, "transformations"]], "Transformations on IRModules": [[43, "transformations-on-irmodules"]], "Troubleshooting": [[80, "troubleshooting"]], "Tune the model": [[189, "tune-the-model"]], "Tuning": [[177, "tuning"]], "Tuning High Performance Convolution on NVIDIA GPUs": [[104, null]], "Tuning a more complex model:": [[198, "tuning-a-more-complex-model"]], "Tuning and Evaluate": [[99, "tuning-and-evaluate"]], "Tuning and Evaluation": [[97, "tuning-and-evaluation"]], "Tuple Type": [[183, "tuple-type"]], "Tuples": [[180, "tuples"]], "Tutorials": [[52, "tutorials"]], "Type": [[183, "type"]], "Type Call": [[183, "type-call"]], "Type Constraint": [[183, "type-constraint"]], "Type Parameter": [[183, "type-parameter"]], "Type Pattern": [[182, "type-pattern"]], "Type Relation": [[183, "type-relation"]], "Type-Checking ADTs and Polymorphism": [[179, "type-checking-adts-and-polymorphism"]], "Under the Hood of Serialization and Format Standard": [[3, "under-the-hood-of-serialization-and-format-standard"]], "Understand Relax Abstraction": [[20, null]], "Understand TensorIR Abstraction": [[27, null]], "Unit-Test File Contents": [[79, "unit-test-file-contents"]], "Update TVM Version on main": [[17, "update-tvm-version-on-main"]], "Update the TVM Website": [[17, "update-the-tvm-website"]], "Updating a Docker Image Tag": [[7, "updating-a-docker-image-tag"]], "Updating the Schedule to Use Parallelism": [[195, "updating-the-schedule-to-use-parallelism"]], "Updating the Schedule to Use Vectorization": [[195, "updating-the-schedule-to-use-vectorization"]], "Upload the Release Candidate": [[17, "upload-the-release-candidate"]], "Usage": [[58, "usage"]], "Use AutoScheduler for Template-Free Scheduling": [[94, null]], "Use Current PassContext With Instruments": [[85, "use-current-passcontext-with-instruments"]], "Use Extern Tensor Function": [[121, "use-extern-tensor-function"]], "Use Relay Visualizer to Visualize Relay": [[120, null]], "Use Sequential to Apply a Sequence of Passes": [[84, "use-sequential-to-apply-a-sequence-of-passes"]], "Use Tensor Expression Debug Display (TEDD) for Visualization": [[127, null]], "Use Tensorize to Leverage Hardware Intrinsics": [[128, null]], "Use cuDNN for a convolutional layer": [[118, "use-cudnn-for-a-convolutional-layer"]], "Use graph_executor for verification.": [[119, "use-graph-executor-for-verification"]], "Use the load function to create and initialize PipelineModule.": [[119, "use-the-load-function-to-create-and-initialize-pipelinemodule"]], "User Tutorial": [[190, null]], "Using Autoscheduler": [[198, "using-autoscheduler"]], "Using External Libraries in Relay": [[118, null]], "Using PAPI While Profiling": [[93, "using-papi-while-profiling"]], "Using Pipeline Executor in Relay": [[119, null]], "Using TVMC": [[197, "using-tvmc"]], "Using TVM\u2019s CI": [[7, null]], "Using the record file": [[96, "using-the-record-file"], [187, "using-the-record-file"]], "Utils for downloading and extracting zip files": [[53, "utils-for-downloading-and-extracting-zip-files"], [74, "utils-for-downloading-and-extracting-zip-files"]], "VLOGging": [[32, "vlogging"]], "Validate RPC System": [[80, "validate-rpc-system"]], "Vanilla": [[199, "vanilla"]], "Variable Pattern": [[182, "variable-pattern"]], "Variables": [[177, "variables"], [180, "variables"]], "Vector Add Example": [[37, "vector-add-example"]], "Vectorization": [[90, "vectorization"]], "Verify the Result": [[121, "verify-the-result"]], "Verify the result": [[118, "verify-the-result"]], "Versal VCK190 Setup": [[66, "versal-vck190-setup"]], "Versal VCK5000 Setup": [[66, "versal-vck5000-setup"]], "Virtual Thread Split": [[88, "virtual-thread-split"]], "Vitis AI Integration": [[66, null]], "Vulkan Capabilities": [[6, "tvm-runtime-table-vulkan-capabilities"], [6, "tvm-table-vulkan-capabilities"]], "Vulkan Features, Limits": [[6, "vulkan-features-limits"]], "Vulkan Runtime": [[6, null]], "Vulkan-Specific Environment Variables": [[6, "vulkan-specific-environment-variables"]], "What is Graph Abstraction?": [[18, "what-is-graph-abstraction"]], "What is the consequence of force push": [[14, "what-is-the-consequence-of-force-push"]], "What should I do when I encounter such an error?": [[39, "what-should-i-do-when-i-encounter-such-an-error"]], "Where do these errors come from?": [[39, "where-do-these-errors-come-from"]], "Why Extra Information in Block": [[27, "why-extra-information-in-block"]], "Wildcard": [[182, "wildcard"]], "Work With Relay": [[116, null]], "Work With Tensor Expression and Schedules": [[122, null]], "Working with Operators Using Tensor Expression": [[195, null]], "Working with Other Model Formats": [[189, null]], "Write cache for blocks": [[90, "write-cache-for-blocks"]], "Write the custom sketch for sparse dense op": [[101, "write-the-custom-sketch-for-sparse-dense-op"]], "Write with Relax NN Module": [[43, "write-with-relax-nn-module"]], "Writing Python Tests": [[8, "writing-python-tests"]], "Writing a Customized Pass": [[82, null]], "Writing a Pass": [[82, "writing-a-pass"]], "Zynq Setup": [[66, "zynq-setup"]], "bind": [[125, "bind"]], "ci-docker-staging": [[7, "ci-docker-staging"]], "compute_at": [[125, "compute-at"]], "compute_inline": [[125, "compute-inline"]], "compute_root": [[125, "compute-root"]], "cross-compile for RISC-V": [[62, "cross-compile-for-risc-v"]], "cross-compile for aarch64": [[62, "cross-compile-for-aarch64"]], "cross-level transformations": [[2, "cross-level-transformations"]], "fuse": [[125, "fuse"]], "relax transformations": [[2, "relax-transformations"]], "reorder": [[125, "reorder"]], "split": [[125, "split"]], "tile": [[125, "tile"]], "tir transformations": [[2, "tir-transformations"]], "tvm": [[142, null]], "tvm.auto_scheduler": [[135, null]], "tvm.autotvm": [[136, null]], "tvm.autotvm.measure": [[136, "module-tvm.autotvm.measure.measure"]], "tvm.autotvm.record": [[136, "module-tvm.autotvm.record"]], "tvm.autotvm.task": [[136, "module-tvm.autotvm.task"]], "tvm.autotvm.tuner": [[136, "module-tvm.autotvm.tuner"]], "tvm.contrib": [[137, null]], "tvm.contrib.cblas": [[137, "module-tvm.contrib.cblas"]], "tvm.contrib.cc": [[137, "module-tvm.contrib.cc"]], "tvm.contrib.clang": [[137, "module-tvm.contrib.clang"]], "tvm.contrib.cublas": [[137, "module-tvm.contrib.cublas"]], "tvm.contrib.dlpack": [[137, "module-tvm.contrib.dlpack"]], "tvm.contrib.emcc": [[137, "module-tvm.contrib.emcc"]], "tvm.contrib.graph_executor": [[141, null]], "tvm.contrib.miopen": [[137, "module-tvm.contrib.miopen"]], "tvm.contrib.mxnet": [[137, "module-tvm.contrib.mxnet"]], "tvm.contrib.ndk": [[137, "module-tvm.contrib.ndk"]], "tvm.contrib.nnpack": [[137, "module-tvm.contrib.nnpack"]], "tvm.contrib.nvcc": [[137, "module-tvm.contrib.nvcc"]], "tvm.contrib.pickle_memoize": [[137, "module-tvm.contrib.pickle_memoize"]], "tvm.contrib.random": [[137, "module-tvm.contrib.random"]], "tvm.contrib.relay_viz": [[137, "module-tvm.contrib.relay_viz"]], "tvm.contrib.rocblas": [[137, "module-tvm.contrib.rocblas"]], "tvm.contrib.rocm": [[137, "module-tvm.contrib.rocm"]], "tvm.contrib.sparse": [[137, "module-tvm.contrib.sparse"]], "tvm.contrib.spirv": [[137, "module-tvm.contrib.spirv"]], "tvm.contrib.tar": [[137, "module-tvm.contrib.tar"]], "tvm.contrib.utils": [[137, "module-tvm.contrib.utils"]], "tvm.contrib.xcode": [[137, "module-tvm.contrib.xcode"]], "tvm.dlight": [[138, null], [142, null]], "tvm.driver": [[139, null]], "tvm.error": [[140, null]], "tvm.instrument": [[143, null]], "tvm.ir": [[144, null]], "tvm.meta_schedule": [[142, null], [145, null]], "tvm.relax": [[142, null], [150, null]], "tvm.relax.analysis": [[146, null]], "tvm.relax.block_builder": [[147, null]], "tvm.relax.frontend": [[148, null]], "tvm.relax.frontend.nn": [[148, "tvm-relax-frontend-nn"]], "tvm.relax.frontend.onnx": [[148, "module-tvm.relax.frontend.onnx"]], "tvm.relax.frontend.stablehlo": [[148, "module-tvm.relax.frontend.stablehlo"]], "tvm.relax.frontend.torch": [[148, "module-tvm.relax.frontend.torch"]], "tvm.relax.op": [[149, null], [149, "id1"]], "tvm.relax.op.builtin": [[149, "module-tvm.relax.op.builtin"]], "tvm.relax.op.ccl": [[149, "module-tvm.relax.op.ccl"]], "tvm.relax.op.distributed": [[149, "module-tvm.relax.op.distributed"]], "tvm.relax.op.grad": [[149, "module-tvm.relax.op.grad"]], "tvm.relax.op.image": [[149, "module-tvm.relax.op.image"]], "tvm.relax.op.memory": [[149, "module-tvm.relax.op.memory"]], "tvm.relax.op.nn": [[149, "module-tvm.relax.op.nn"]], "tvm.relax.op.op_attrs": [[149, "module-tvm.relax.op.op_attrs"]], "tvm.relax.transform": [[151, null]], "tvm.relay": [[157, null]], "tvm.relay.analysis": [[152, null]], "tvm.relay.backend": [[153, null]], "tvm.relay.dataflow_pattern": [[154, null]], "tvm.relay.frontend": [[155, null]], "tvm.relay.image": [[156, null]], "tvm.relay.nn": [[158, null]], "tvm.relay.testing": [[159, null]], "tvm.relay.transform": [[160, null]], "tvm.relay.vision": [[161, null]], "tvm.rpc": [[162, null]], "tvm.runtime": [[142, null], [167, null]], "tvm.runtime.disco": [[163, null]], "tvm.runtime.ndarray": [[164, null]], "tvm.runtime.profiling": [[165, null]], "tvm.runtime.relax_vm": [[166, null]], "tvm.target": [[168, null]], "tvm.te": [[142, null], [169, null]], "tvm.te.hybrid": [[169, "module-tvm.te.hybrid"]], "tvm.tir": [[142, null], [173, null]], "tvm.tir.analysis": [[170, null]], "tvm.tir.schedule": [[171, null]], "tvm.tir.stmt_functor": [[172, null]], "tvm.tir.transform": [[174, null]], "tvm.topi": [[175, null]], "tvm.topi.image": [[175, "module-tvm.topi.image"]], "tvm.topi.nn": [[175, "module-tvm.topi.nn"]], "tvm.topi.sparse": [[175, "module-tvm.topi.sparse"]], "tvm.transform": [[176, null]], "tvm/arith": [[2, "tvm-arith"]], "tvm/dlight": [[2, "tvm-dlight"]], "tvm/ir": [[2, "tvm-ir"]], "tvm/meta_schedule": [[2, "tvm-meta-schedule"]], "tvm/node": [[2, "tvm-node"]], "tvm/relax": [[2, "tvm-relax"]], "tvm/runtime": [[2, "tvm-runtime"]], "tvm/support": [[2, "tvm-support"]], "tvm/target": [[2, "tvm-target"]], "tvm/te and tvm/topi": [[2, "tvm-te-and-tvm-topi"]], "tvm/tir": [[2, "tvm-tir"]]}, "docnames": ["arch/debugger", "arch/device_target_interactions", "arch/index", "arch/introduction_to_module_serialization", "arch/pass_infra", "arch/runtime", "arch/runtimes/vulkan", "contribute/ci", "contribute/code_guide", "contribute/code_review", "contribute/committer_guide", "contribute/community", "contribute/document", "contribute/error_handling", "contribute/git_howto", "contribute/index", "contribute/pull_request", "contribute/release_process", "deep_dive/relax/abstraction", "deep_dive/relax/index", "deep_dive/relax/learning", "deep_dive/relax/tutorials/index", "deep_dive/relax/tutorials/relax_creation", "deep_dive/relax/tutorials/relax_transformation", "deep_dive/relax/tutorials/sg_execution_times", "deep_dive/tensor_ir/abstraction", "deep_dive/tensor_ir/index", "deep_dive/tensor_ir/learning", "deep_dive/tensor_ir/tutorials/index", "deep_dive/tensor_ir/tutorials/sg_execution_times", "deep_dive/tensor_ir/tutorials/tir_creation", "deep_dive/tensor_ir/tutorials/tir_transformation", "dev/how_to/debugging_tvm", "dev/how_to/how_to", "dev/how_to/relay_add_op", "dev/how_to/relay_add_pass", "dev/how_to/relay_bring_your_own_codegen", "dev/tutorial/codebase_walkthrough", "dev/tutorial/index", "errors", "genindex", "get_started/overview", "get_started/tutorials/index", "get_started/tutorials/ir_module", "get_started/tutorials/quick_start", "get_started/tutorials/sg_execution_times", "how_to/compile_models/from_coreml", "how_to/compile_models/from_darknet", "how_to/compile_models/from_keras", "how_to/compile_models/from_onnx", "how_to/compile_models/from_paddle", "how_to/compile_models/from_pytorch", "how_to/compile_models/from_tensorflow", "how_to/compile_models/from_tflite", "how_to/compile_models/index", "how_to/compile_models/sg_execution_times", "how_to/deploy/adreno", "how_to/deploy/android", "how_to/deploy/arm_compute_lib", "how_to/deploy/bnns", "how_to/deploy/cpp_deploy", "how_to/deploy/hls", "how_to/deploy/index", "how_to/deploy/integrate", "how_to/deploy/mrvl", "how_to/deploy/tensorrt", "how_to/deploy/vitis_ai", "how_to/deploy_models/deploy_model_on_adreno", "how_to/deploy_models/deploy_model_on_adreno_tvmc", "how_to/deploy_models/deploy_model_on_android", "how_to/deploy_models/deploy_model_on_nano", "how_to/deploy_models/deploy_model_on_rasp", "how_to/deploy_models/deploy_object_detection_pytorch", "how_to/deploy_models/deploy_prequantized", "how_to/deploy_models/deploy_prequantized_tflite", "how_to/deploy_models/deploy_sparse", "how_to/deploy_models/index", "how_to/deploy_models/sg_execution_times", "how_to/dev/index", "how_to/dev/pytest_target_parametrization", "how_to/dev/setup_rpc_system", "how_to/extend_tvm/index", "how_to/extend_tvm/low_level_custom_pass", "how_to/extend_tvm/sg_execution_times", "how_to/extend_tvm/use_pass_infra", "how_to/extend_tvm/use_pass_instrument", "how_to/legacy_index", "how_to/optimize_operators/index", "how_to/optimize_operators/opt_conv_cuda", "how_to/optimize_operators/opt_conv_tensorcore", "how_to/optimize_operators/opt_gemm", "how_to/optimize_operators/sg_execution_times", "how_to/profile/index", "how_to/profile/papi", "how_to/tune_with_autoscheduler/index", "how_to/tune_with_autoscheduler/sg_execution_times", "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda", "how_to/tune_with_autoscheduler/tune_network_arm", "how_to/tune_with_autoscheduler/tune_network_cuda", "how_to/tune_with_autoscheduler/tune_network_mali", "how_to/tune_with_autoscheduler/tune_network_x86", "how_to/tune_with_autoscheduler/tune_sparse_x86", "how_to/tune_with_autotvm/index", "how_to/tune_with_autotvm/sg_execution_times", "how_to/tune_with_autotvm/tune_conv2d_cuda", "how_to/tune_with_autotvm/tune_relay_arm", "how_to/tune_with_autotvm/tune_relay_cuda", "how_to/tune_with_autotvm/tune_relay_mobile_gpu", "how_to/tune_with_autotvm/tune_relay_x86", "how_to/tutorials/cross_compilation_and_rpc", "how_to/tutorials/customize_opt", "how_to/tutorials/e2e_opt_model", "how_to/tutorials/index", "how_to/tutorials/optimize_llm", "how_to/tutorials/sg_execution_times", "how_to/work_with_relay/build_gcn", "how_to/work_with_relay/index", "how_to/work_with_relay/sg_execution_times", "how_to/work_with_relay/using_external_lib", "how_to/work_with_relay/using_pipeline_executor", "how_to/work_with_relay/using_relay_viz", "how_to/work_with_schedules/extern_op", "how_to/work_with_schedules/index", "how_to/work_with_schedules/reduction", "how_to/work_with_schedules/scan", "how_to/work_with_schedules/schedule_primitives", "how_to/work_with_schedules/sg_execution_times", "how_to/work_with_schedules/tedd", "how_to/work_with_schedules/tensorize", "how_to/work_with_schedules/tuple_inputs", "index", "install/docker", "install/from_source", "install/index", "reference/api/links", "reference/api/python/auto_scheduler", "reference/api/python/autotvm", "reference/api/python/contrib", "reference/api/python/dlight", "reference/api/python/driver", "reference/api/python/error", "reference/api/python/graph_executor", "reference/api/python/index", "reference/api/python/instrument", "reference/api/python/ir", "reference/api/python/meta_schedule", "reference/api/python/relax/analysis", "reference/api/python/relax/block_builder", "reference/api/python/relax/frontend", "reference/api/python/relax/op", "reference/api/python/relax/relax", "reference/api/python/relax/transform", "reference/api/python/relay/analysis", "reference/api/python/relay/backend", "reference/api/python/relay/dataflow_pattern", "reference/api/python/relay/frontend", "reference/api/python/relay/image", "reference/api/python/relay/index", "reference/api/python/relay/nn", "reference/api/python/relay/testing", "reference/api/python/relay/transform", "reference/api/python/relay/vision", "reference/api/python/rpc", "reference/api/python/runtime/disco", "reference/api/python/runtime/ndarray", "reference/api/python/runtime/profiling", "reference/api/python/runtime/relax_vm", "reference/api/python/runtime/runtime", "reference/api/python/target", "reference/api/python/te", "reference/api/python/tir/analysis", "reference/api/python/tir/schedule", "reference/api/python/tir/stmt_functor", "reference/api/python/tir/tir", "reference/api/python/tir/transform", "reference/api/python/topi", "reference/api/python/transform", "reference/langref/hybrid_script", "reference/langref/index", "reference/langref/relay_adt", "reference/langref/relay_expr", "reference/langref/relay_op", "reference/langref/relay_pattern", "reference/langref/relay_type", "reference/publications", "reference/security", "sg_execution_times", "tutorial/auto_scheduler_matmul_x86", "tutorial/autotvm_matmul_x86", "tutorial/autotvm_relay_x86", "tutorial/index", "tutorial/intro_topi", "tutorial/introduction", "tutorial/relay_quick_start", "tutorial/sg_execution_times", "tutorial/tensor_expr_get_started", "tutorial/tensor_ir_blitz_course", "tutorial/tvmc_command_line_driver", "tutorial/tvmc_python", "tutorial/uma"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["arch/debugger.rst", "arch/device_target_interactions.rst", "arch/index.rst", "arch/introduction_to_module_serialization.rst", "arch/pass_infra.rst", "arch/runtime.rst", "arch/runtimes/vulkan.rst", "contribute/ci.rst", "contribute/code_guide.rst", "contribute/code_review.rst", "contribute/committer_guide.rst", "contribute/community.rst", "contribute/document.rst", "contribute/error_handling.rst", "contribute/git_howto.rst", "contribute/index.rst", "contribute/pull_request.rst", "contribute/release_process.rst", "deep_dive/relax/abstraction.rst", "deep_dive/relax/index.rst", "deep_dive/relax/learning.rst", "deep_dive/relax/tutorials/index.rst", "deep_dive/relax/tutorials/relax_creation.rst", "deep_dive/relax/tutorials/relax_transformation.rst", "deep_dive/relax/tutorials/sg_execution_times.rst", "deep_dive/tensor_ir/abstraction.rst", "deep_dive/tensor_ir/index.rst", "deep_dive/tensor_ir/learning.rst", "deep_dive/tensor_ir/tutorials/index.rst", "deep_dive/tensor_ir/tutorials/sg_execution_times.rst", "deep_dive/tensor_ir/tutorials/tir_creation.rst", "deep_dive/tensor_ir/tutorials/tir_transformation.rst", "dev/how_to/debugging_tvm.rst", "dev/how_to/how_to.rst", "dev/how_to/relay_add_op.rst", "dev/how_to/relay_add_pass.rst", "dev/how_to/relay_bring_your_own_codegen.rst", "dev/tutorial/codebase_walkthrough.rst", "dev/tutorial/index.rst", "errors.rst", "genindex.rst", "get_started/overview.rst", "get_started/tutorials/index.rst", "get_started/tutorials/ir_module.rst", "get_started/tutorials/quick_start.rst", "get_started/tutorials/sg_execution_times.rst", "how_to/compile_models/from_coreml.rst", "how_to/compile_models/from_darknet.rst", "how_to/compile_models/from_keras.rst", "how_to/compile_models/from_onnx.rst", "how_to/compile_models/from_paddle.rst", "how_to/compile_models/from_pytorch.rst", "how_to/compile_models/from_tensorflow.rst", "how_to/compile_models/from_tflite.rst", "how_to/compile_models/index.rst", "how_to/compile_models/sg_execution_times.rst", "how_to/deploy/adreno.rst", "how_to/deploy/android.rst", "how_to/deploy/arm_compute_lib.rst", "how_to/deploy/bnns.rst", "how_to/deploy/cpp_deploy.rst", "how_to/deploy/hls.rst", "how_to/deploy/index.rst", "how_to/deploy/integrate.rst", "how_to/deploy/mrvl.rst", "how_to/deploy/tensorrt.rst", "how_to/deploy/vitis_ai.rst", "how_to/deploy_models/deploy_model_on_adreno.rst", "how_to/deploy_models/deploy_model_on_adreno_tvmc.rst", "how_to/deploy_models/deploy_model_on_android.rst", "how_to/deploy_models/deploy_model_on_nano.rst", "how_to/deploy_models/deploy_model_on_rasp.rst", "how_to/deploy_models/deploy_object_detection_pytorch.rst", "how_to/deploy_models/deploy_prequantized.rst", "how_to/deploy_models/deploy_prequantized_tflite.rst", "how_to/deploy_models/deploy_sparse.rst", "how_to/deploy_models/index.rst", "how_to/deploy_models/sg_execution_times.rst", "how_to/dev/index.rst", "how_to/dev/pytest_target_parametrization.rst", "how_to/dev/setup_rpc_system.rst", "how_to/extend_tvm/index.rst", "how_to/extend_tvm/low_level_custom_pass.rst", "how_to/extend_tvm/sg_execution_times.rst", "how_to/extend_tvm/use_pass_infra.rst", "how_to/extend_tvm/use_pass_instrument.rst", "how_to/legacy_index.rst", "how_to/optimize_operators/index.rst", "how_to/optimize_operators/opt_conv_cuda.rst", "how_to/optimize_operators/opt_conv_tensorcore.rst", "how_to/optimize_operators/opt_gemm.rst", "how_to/optimize_operators/sg_execution_times.rst", "how_to/profile/index.rst", "how_to/profile/papi.rst", "how_to/tune_with_autoscheduler/index.rst", "how_to/tune_with_autoscheduler/sg_execution_times.rst", "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.rst", "how_to/tune_with_autoscheduler/tune_network_arm.rst", "how_to/tune_with_autoscheduler/tune_network_cuda.rst", "how_to/tune_with_autoscheduler/tune_network_mali.rst", "how_to/tune_with_autoscheduler/tune_network_x86.rst", "how_to/tune_with_autoscheduler/tune_sparse_x86.rst", "how_to/tune_with_autotvm/index.rst", "how_to/tune_with_autotvm/sg_execution_times.rst", "how_to/tune_with_autotvm/tune_conv2d_cuda.rst", "how_to/tune_with_autotvm/tune_relay_arm.rst", "how_to/tune_with_autotvm/tune_relay_cuda.rst", "how_to/tune_with_autotvm/tune_relay_mobile_gpu.rst", "how_to/tune_with_autotvm/tune_relay_x86.rst", "how_to/tutorials/cross_compilation_and_rpc.rst", "how_to/tutorials/customize_opt.rst", "how_to/tutorials/e2e_opt_model.rst", "how_to/tutorials/index.rst", "how_to/tutorials/optimize_llm.rst", "how_to/tutorials/sg_execution_times.rst", "how_to/work_with_relay/build_gcn.rst", "how_to/work_with_relay/index.rst", "how_to/work_with_relay/sg_execution_times.rst", "how_to/work_with_relay/using_external_lib.rst", "how_to/work_with_relay/using_pipeline_executor.rst", "how_to/work_with_relay/using_relay_viz.rst", "how_to/work_with_schedules/extern_op.rst", "how_to/work_with_schedules/index.rst", "how_to/work_with_schedules/reduction.rst", "how_to/work_with_schedules/scan.rst", "how_to/work_with_schedules/schedule_primitives.rst", "how_to/work_with_schedules/sg_execution_times.rst", "how_to/work_with_schedules/tedd.rst", "how_to/work_with_schedules/tensorize.rst", "how_to/work_with_schedules/tuple_inputs.rst", "index.rst", "install/docker.rst", "install/from_source.rst", "install/index.rst", "reference/api/links.rst", "reference/api/python/auto_scheduler.rst", "reference/api/python/autotvm.rst", "reference/api/python/contrib.rst", "reference/api/python/dlight.rst", "reference/api/python/driver.rst", "reference/api/python/error.rst", "reference/api/python/graph_executor.rst", "reference/api/python/index.rst", "reference/api/python/instrument.rst", "reference/api/python/ir.rst", "reference/api/python/meta_schedule.rst", "reference/api/python/relax/analysis.rst", "reference/api/python/relax/block_builder.rst", "reference/api/python/relax/frontend.rst", "reference/api/python/relax/op.rst", "reference/api/python/relax/relax.rst", "reference/api/python/relax/transform.rst", "reference/api/python/relay/analysis.rst", "reference/api/python/relay/backend.rst", "reference/api/python/relay/dataflow_pattern.rst", "reference/api/python/relay/frontend.rst", "reference/api/python/relay/image.rst", "reference/api/python/relay/index.rst", "reference/api/python/relay/nn.rst", "reference/api/python/relay/testing.rst", "reference/api/python/relay/transform.rst", "reference/api/python/relay/vision.rst", "reference/api/python/rpc.rst", "reference/api/python/runtime/disco.rst", "reference/api/python/runtime/ndarray.rst", "reference/api/python/runtime/profiling.rst", "reference/api/python/runtime/relax_vm.rst", "reference/api/python/runtime/runtime.rst", "reference/api/python/target.rst", "reference/api/python/te.rst", "reference/api/python/tir/analysis.rst", "reference/api/python/tir/schedule.rst", "reference/api/python/tir/stmt_functor.rst", "reference/api/python/tir/tir.rst", "reference/api/python/tir/transform.rst", "reference/api/python/topi.rst", "reference/api/python/transform.rst", "reference/langref/hybrid_script.rst", "reference/langref/index.rst", "reference/langref/relay_adt.rst", "reference/langref/relay_expr.rst", "reference/langref/relay_op.rst", "reference/langref/relay_pattern.rst", "reference/langref/relay_type.rst", "reference/publications.rst", "reference/security.rst", "sg_execution_times.rst", "tutorial/auto_scheduler_matmul_x86.rst", "tutorial/autotvm_matmul_x86.rst", "tutorial/autotvm_relay_x86.rst", "tutorial/index.rst", "tutorial/intro_topi.rst", "tutorial/introduction.rst", "tutorial/relay_quick_start.rst", "tutorial/sg_execution_times.rst", "tutorial/tensor_expr_get_started.rst", "tutorial/tensor_ir_blitz_course.rst", "tutorial/tvmc_command_line_driver.rst", "tutorial/tvmc_python.rst", "tutorial/uma.rst"], "indexentries": {"abs() (in module tvm.relax.op)": [[149, "tvm.relax.op.abs", false]], "abs() (in module tvm.te)": [[169, "tvm.te.abs", false]], "abs() (in module tvm.tir)": [[173, "tvm.tir.abs", false]], "access_ptr() (tvm.tir.buffer method)": [[173, "tvm.tir.Buffer.access_ptr", false]], "acos() (in module tvm.relax.op)": [[149, "tvm.relax.op.acos", false]], "acos() (in module tvm.te)": [[169, "tvm.te.acos", false]], "acos() (in module tvm.tir)": [[173, "tvm.tir.acos", false]], "acosh() (in module tvm.relax.op)": [[149, "tvm.relax.op.acosh", false]], "acosh() (in module tvm.te)": [[169, "tvm.te.acosh", false]], "acosh() (in module tvm.tir)": [[173, "tvm.tir.acosh", false]], "adaptive_avg_pool1d() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.adaptive_avg_pool1d", false]], "adaptive_avg_pool1d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.adaptive_avg_pool2d", false]], "adaptive_avg_pool2d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.adaptive_avg_pool3d", false]], "adaptive_avg_pool3d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.adaptive_avg_pool3d", false]], "adaptive_max_pool1d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.adaptive_max_pool1d", false]], "adaptive_max_pool2d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.adaptive_max_pool2d", false]], "adaptive_max_pool3d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.adaptive_max_pool3d", false]], "adaptive_pool() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.adaptive_pool", false]], "adaptive_pool1d() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.adaptive_pool1d", false]], "adaptive_pool3d() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.adaptive_pool3d", false]], "adaptivepool2dattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.AdaptivePool2DAttrs", false]], "add (class in tvm.tir)": [[173, "tvm.tir.Add", false]], "add() (in module tvm.relax.op)": [[149, "tvm.relax.op.add", false]], "add() (in module tvm.te)": [[169, "tvm.te.add", false]], "add() (in module tvm.tir)": [[173, "tvm.tir.add", false]], "add() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.add", false]], "add() (tvm.relax.dataflowblockrewrite method)": [[150, "tvm.relax.DataflowBlockRewrite.add", false]], "add_alter_layout() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.add_alter_layout", false]], "add_argument() (tvm.ir.op method)": [[144, "tvm.ir.Op.add_argument", false]], "add_flop() (tvm.autotvm.task.space.configspace method)": [[136, "tvm.autotvm.task.space.ConfigSpace.add_flop", false]], "add_func() (tvm.relax.block_builder.blockbuilder method)": [[147, "tvm.relax.block_builder.BlockBuilder.add_func", false]], "add_task() (tvm.autotvm.task.topi_integration.taskextractenv method)": [[136, "tvm.autotvm.task.topi_integration.TaskExtractEnv.add_task", false]], "add_type_rel() (tvm.ir.op method)": [[144, "tvm.ir.Op.add_type_rel", false]], "add_unit_loop() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.add_unit_loop", false]], "address_of() (in module tvm.tir)": [[173, "tvm.tir.address_of", false]], "adjustmatmulorder() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.AdjustMatmulOrder", false]], "affine_grid() (in module tvm.relay.image)": [[156, "tvm.relay.image.affine_grid", false]], "affine_grid() (in module tvm.topi.image)": [[175, "tvm.topi.image.affine_grid", false]], "all (tvm.tir.transform.hoistedconditionals attribute)": [[174, "tvm.tir.transform.HoistedConditionals.All", false]], "all (tvm.tir.transform.hoistedletbindings attribute)": [[174, "tvm.tir.transform.HoistedLetBindings.All", false]], "all() (in module tvm.te)": [[169, "tvm.te.all", false]], "all() (in module tvm.tir)": [[173, "tvm.tir.all", false]], "all_class_non_max_suppression() (in module tvm.relay.vision)": [[161, "tvm.relay.vision.all_class_non_max_suppression", false]], "all_dtypes() (in module tvm.relay.analysis)": [[152, "tvm.relay.analysis.all_dtypes", false]], "all_global_vars() (in module tvm.relax.analysis)": [[146, "tvm.relax.analysis.all_global_vars", false]], "all_type_vars() (in module tvm.relay.analysis)": [[152, "tvm.relay.analysis.all_type_vars", false]], "all_vars() (in module tvm.relax.analysis)": [[146, "tvm.relax.analysis.all_vars", false]], "all_vars() (in module tvm.relay.analysis)": [[152, "tvm.relay.analysis.all_vars", false]], "allgather() (in module tvm.relax.op.ccl)": [[149, "tvm.relax.op.ccl.allgather", false]], "allgather() (tvm.runtime.disco.session method)": [[163, "tvm.runtime.disco.Session.allgather", false]], "alloc_storage() (in module tvm.relax.op.memory)": [[149, "tvm.relax.op.memory.alloc_storage", false]], "alloc_tensor() (in module tvm.relax.op.builtin)": [[149, "tvm.relax.op.builtin.alloc_tensor", false]], "alloc_tensor() (in module tvm.relax.op.memory)": [[149, "tvm.relax.op.memory.alloc_tensor", false]], "allocate (class in tvm.tir)": [[173, "tvm.tir.Allocate", false]], "allocateconst (class in tvm.tir)": [[173, "tvm.tir.AllocateConst", false]], "allocateworkspace() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.AllocateWorkspace", false]], "allreduce() (in module tvm.relax.op.ccl)": [[149, "tvm.relax.op.ccl.allreduce", false]], "allreduce() (tvm.runtime.disco.session method)": [[163, "tvm.runtime.disco.Session.allreduce", false]], "alteropimpl() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.AlterOpImpl", false]], "alteroplayout() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.AlterOpLayout", false]], "altpattern (class in tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.AltPattern", false]], "and (class in tvm.tir)": [[173, "tvm.tir.And", false]], "annotate() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.annotate", false]], "annotate_buffer_access() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.annotate_buffer_access", false]], "annotate_sharding() (in module tvm.relax.op.distributed)": [[149, "tvm.relax.op.distributed.annotate_sharding", false]], "annotatedeviceregions() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.AnnotateDeviceRegions", false]], "annotatedregionset (class in tvm.relay.analysis)": [[152, "tvm.relay.analysis.AnnotatedRegionSet", false]], "annotateentity (class in tvm.autotvm.task.space)": [[136, "tvm.autotvm.task.space.AnnotateEntity", false]], "annotateentryfunc() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.AnnotateEntryFunc", false]], "annotatespace (class in tvm.autotvm.task.space)": [[136, "tvm.autotvm.task.space.AnnotateSpace", false]], "annotatespans() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.AnnotateSpans", false]], "annotatetarget() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.AnnotateTarget", false]], "annotatetiroppattern() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.AnnotateTIROpPattern", false]], "any (class in tvm.tir)": [[173, "tvm.tir.Any", false]], "any() (in module tvm.te)": [[169, "tvm.te.any", false]], "any() (in module tvm.tir)": [[173, "tvm.tir.any", false]], "append() (tvm.tir.schedule.trace method)": [[171, "tvm.tir.schedule.Trace.append", false]], "apply() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.Apply", false]], "apply() (tvm.autotvm.task.space.annotateentity method)": [[136, "tvm.autotvm.task.space.AnnotateEntity.apply", false]], "apply() (tvm.autotvm.task.space.reorderentity method)": [[136, "tvm.autotvm.task.space.ReorderEntity.apply", false]], "apply() (tvm.autotvm.task.space.splitentity method)": [[136, "tvm.autotvm.task.space.SplitEntity.apply", false]], "apply() (tvm.dlight.schedulerule method)": [[138, "tvm.dlight.ScheduleRule.apply", false]], "apply() (tvm.meta_schedule.measurecallback method)": [[145, "tvm.meta_schedule.MeasureCallback.apply", false]], "apply() (tvm.meta_schedule.mutator method)": [[145, "tvm.meta_schedule.Mutator.apply", false]], "apply() (tvm.meta_schedule.postproc method)": [[145, "tvm.meta_schedule.Postproc.apply", false]], "apply() (tvm.meta_schedule.schedulerule method)": [[145, "tvm.meta_schedule.ScheduleRule.apply", false]], "apply_best() (tvm.auto_scheduler.searchtask method)": [[135, "tvm.auto_scheduler.SearchTask.apply_best", false]], "apply_history_best() (in module tvm.autotvm)": [[136, "tvm.autotvm.apply_history_best", false]], "apply_json_to_schedule() (tvm.tir.schedule.trace static method)": [[171, "tvm.tir.schedule.Trace.apply_json_to_schedule", false]], "apply_prim_func_arg_and_result_memory_constraints() (in module tvm.tir.analysis.analysis)": [[170, "tvm.tir.analysis.analysis.apply_prim_func_arg_and_result_memory_constraints", false]], "apply_steps_from_state() (tvm.auto_scheduler.computedag method)": [[135, "tvm.auto_scheduler.ComputeDAG.apply_steps_from_state", false]], "apply_to_schedule() (tvm.tir.schedule.trace method)": [[171, "tvm.tir.schedule.Trace.apply_to_schedule", false]], "applyconfig (class in tvm.autotvm.task.dispatcher)": [[136, "tvm.autotvm.task.dispatcher.ApplyConfig", false]], "applydefaultschedule (class in tvm.dlight)": [[138, "tvm.dlight.ApplyDefaultSchedule", false]], "applyfixedconfig (class in tvm.autotvm.task.dispatcher)": [[136, "tvm.autotvm.task.dispatcher.ApplyFixedConfig", false]], "applygraphbest (class in tvm.autotvm.task.dispatcher)": [[136, "tvm.autotvm.task.dispatcher.ApplyGraphBest", false]], "applyhistorybest (class in tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.ApplyHistoryBest", false]], "applyhistorybest (class in tvm.autotvm.task.dispatcher)": [[136, "tvm.autotvm.task.dispatcher.ApplyHistoryBest", false]], "applyhistorybestorsample (class in tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.ApplyHistoryBestOrSample", false]], "applylayouttransforms() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.ApplyLayoutTransforms", false]], "applypasstofunction() (in module tvm.transform)": [[176, "tvm.transform.ApplyPassToFunction", false]], "arange() (in module tvm.relax.op)": [[149, "tvm.relax.op.arange", false]], "arch (tvm.target.target property)": [[168, "tvm.target.Target.arch", false]], "argmax() (in module tvm.relax.op)": [[149, "tvm.relax.op.argmax", false]], "argmaxargminattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.ArgmaxArgminAttrs", false]], "argmin() (in module tvm.relax.op)": [[149, "tvm.relax.op.argmin", false]], "args_to_workload() (in module tvm.autotvm.task.task)": [[136, "tvm.autotvm.task.task.args_to_workload", false]], "argsort() (in module tvm.relax.op)": [[149, "tvm.relax.op.argsort", false]], "argsortattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.ArgsortAttrs", false]], "arm_cpu() (in module tvm.target)": [[168, "tvm.target.arm_cpu", false]], "array (class in tvm.ir)": [[144, "tvm.ir.Array", false]], "array() (in module tvm.contrib.sparse)": [[137, "tvm.contrib.sparse.array", false]], "array() (in module tvm.runtime.ndarray)": [[164, "tvm.runtime.ndarray.array", false]], "as_json() (tvm.tir.schedule.trace method)": [[171, "tvm.tir.schedule.Trace.as_json", false]], "as_python() (tvm.relax.executable method)": [[150, "tvm.relax.Executable.as_python", false]], "as_python() (tvm.tir.schedule.trace method)": [[171, "tvm.tir.schedule.Trace.as_python", false]], "as_text() (tvm.relax.executable method)": [[150, "tvm.relax.Executable.as_text", false]], "asin() (in module tvm.relax.op)": [[149, "tvm.relax.op.asin", false]], "asin() (in module tvm.te)": [[169, "tvm.te.asin", false]], "asin() (in module tvm.tir)": [[173, "tvm.tir.asin", false]], "asinh() (in module tvm.relax.op)": [[149, "tvm.relax.op.asinh", false]], "asinh() (in module tvm.te)": [[169, "tvm.te.asinh", false]], "asinh() (in module tvm.tir)": [[173, "tvm.tir.asinh", false]], "asnumpy() (tvm.contrib.sparse.csrndarray method)": [[137, "tvm.contrib.sparse.CSRNDArray.asnumpy", false]], "asnumpy() (tvm.runtime.ndarray.ndarray method)": [[164, "tvm.runtime.ndarray.NDArray.asnumpy", false]], "asobject() (tvm.te.tensorslice method)": [[169, "tvm.te.TensorSlice.asobject", false]], "assert_op() (in module tvm.relax.op)": [[149, "tvm.relax.op.assert_op", false]], "assert_pure_function() (in module tvm.tir.analysis.analysis)": [[170, "tvm.tir.analysis.analysis.assert_pure_function", false]], "assert_structural_equal() (in module tvm.ir)": [[144, "tvm.ir.assert_structural_equal", false]], "assertstmt (class in tvm.tir)": [[173, "tvm.tir.AssertStmt", false]], "assume() (in module tvm.tir)": [[173, "tvm.tir.assume", false]], "astext() (in module tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.astext", false]], "astext() (tvm.ir.globalvar method)": [[144, "tvm.ir.GlobalVar.astext", false]], "astext() (tvm.ir.irmodule method)": [[144, "tvm.ir.IRModule.astext", false]], "astext() (tvm.ir.op method)": [[144, "tvm.ir.Op.astext", false]], "astext() (tvm.relay.dataflow_pattern.dfpattern method)": [[154, "tvm.relay.dataflow_pattern.DFPattern.astext", false]], "astype() (in module tvm.relax.op)": [[149, "tvm.relax.op.astype", false]], "astypeattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.AstypeAttrs", false]], "atan() (in module tvm.relax.op)": [[149, "tvm.relax.op.atan", false]], "atan() (in module tvm.te)": [[169, "tvm.te.atan", false]], "atan() (in module tvm.tir)": [[173, "tvm.tir.atan", false]], "atan2() (in module tvm.tir)": [[173, "tvm.tir.atan2", false]], "atanh() (in module tvm.relax.op)": [[149, "tvm.relax.op.atanh", false]], "atanh() (in module tvm.te)": [[169, "tvm.te.atanh", false]], "atanh() (in module tvm.tir)": [[173, "tvm.tir.atanh", false]], "attachattrlayoutfreebuffers() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.AttachAttrLayoutFreeBuffers", false]], "attachexternmodules (class in tvm.relax.transform)": [[151, "tvm.relax.transform.AttachExternModules", false]], "attachglobalsymbol() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.AttachGlobalSymbol", false]], "attention() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.attention", false]], "attention_var_len() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.attention_var_len", false]], "attrpattern (class in tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.AttrPattern", false]], "attrs (class in tvm.ir)": [[144, "tvm.ir.Attrs", false]], "attrs (tvm.ir.basefunc property)": [[144, "tvm.ir.BaseFunc.attrs", false]], "attrs (tvm.tir.schedule.instruction attribute)": [[171, "tvm.tir.schedule.Instruction.attrs", false]], "attrstmt (class in tvm.tir)": [[173, "tvm.tir.AttrStmt", false]], "auto_schedule() (in module tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.auto_schedule", false]], "avg_pool1d() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.avg_pool1d", false]], "avg_pool1d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.avg_pool1d", false]], "avg_pool2d() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.avg_pool2d", false]], "avg_pool2d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.avg_pool2d", false]], "avg_pool2d_backward() (in module tvm.relax.op.grad)": [[149, "tvm.relax.op.grad.avg_pool2d_backward", false]], "avg_pool2d_grad() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.avg_pool2d_grad", false]], "avg_pool3d() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.avg_pool3d", false]], "avg_pool3d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.avg_pool3d", false]], "axis (class in tvm.autotvm.task.space)": [[136, "tvm.autotvm.task.space.Axis", false]], "axis (tvm.te.hybridop property)": [[169, "tvm.te.HybridOp.axis", false]], "axis (tvm.te.tensor property)": [[169, "tvm.te.Tensor.axis", false]], "axis() (tvm.autotvm.task.space.configspace static method)": [[136, "tvm.autotvm.task.space.ConfigSpace.axis", false]], "backward_index() (tvm.tir.bijectivelayout method)": [[173, "tvm.tir.BijectiveLayout.backward_index", false]], "backward_shape() (tvm.tir.bijectivelayout method)": [[173, "tvm.tir.BijectiveLayout.backward_shape", false]], "backwardfoldscaleaxis() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.BackwardFoldScaleAxis", false]], "basecheckresult (class in tvm.relax.analysis)": [[146, "tvm.relax.analysis.BaseCheckResult", false]], "baseexpr (class in tvm.ir)": [[144, "tvm.ir.BaseExpr", false]], "basefunc (class in tvm.ir)": [[144, "tvm.ir.BaseFunc", false]], "batch_flatten() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.batch_flatten", false]], "batch_matmul() (in module tvm.contrib.cblas)": [[137, "tvm.contrib.cblas.batch_matmul", false]], "batch_matmul() (in module tvm.contrib.cublas)": [[137, "tvm.contrib.cublas.batch_matmul", false]], "batch_matmul() (in module tvm.contrib.rocblas)": [[137, "tvm.contrib.rocblas.batch_matmul", false]], "batch_matmul() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.batch_matmul", false]], "batch_matmul() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.batch_matmul", false]], "batch_matmul_legalize() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.batch_matmul_legalize", false]], "batch_norm() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.batch_norm", false]], "batch_norm() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.batch_norm", false]], "batch_norm() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.batch_norm", false]], "batch_to_space_nd() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.batch_to_space_nd", false]], "batch_to_space_nd() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.batch_to_space_nd", false]], "batchingops() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.BatchingOps", false]], "batchnormattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.BatchNormAttrs", false]], "begin_scope() (tvm.relax.block_builder.blockbuilder method)": [[147, "tvm.relax.block_builder.BlockBuilder.begin_scope", false]], "benchmark() (tvm.contrib.graph_executor.graphmodule method)": [[141, "tvm.contrib.graph_executor.GraphModule.benchmark", false]], "bf16computelegalize() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.BF16ComputeLegalize", false]], "bf16storagelegalize() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.BF16StorageLegalize", false]], "bias_add() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.bias_add", false]], "bias_add_legalize() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.bias_add_legalize", false]], "bifrost() (in module tvm.target)": [[168, "tvm.target.bifrost", false]], "bijective_layout() (in module tvm.tir)": [[173, "tvm.tir.bijective_layout", false]], "bijectivelayout (class in tvm.tir)": [[173, "tvm.tir.BijectiveLayout", false]], "binarize_pack() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.binarize_pack", false]], "binary_dense() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.binary_dense", false]], "bind() (tvm.te.stage method)": [[169, "tvm.te.Stage.bind", false]], "bind() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.bind", false]], "bind_params() (tvm.relax.function method)": [[150, "tvm.relax.Function.bind_params", false]], "bind_symbolic_vars() (tvm.relax.function method)": [[150, "tvm.relax.Function.bind_symbolic_vars", false]], "binding (class in tvm.relax)": [[150, "tvm.relax.Binding", false]], "bindingblock (class in tvm.relax)": [[150, "tvm.relax.BindingBlock", false]], "bindparams() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.BindParams", false]], "bindsymbolicvars() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.BindSymbolicVars", false]], "bindtarget() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.BindTarget", false]], "bitpack() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.bitpack", false]], "bitpack() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.bitpack", false]], "bitserial_conv2d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.bitserial_conv2d", false]], "bitserial_conv2d_legalize() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.bitserial_conv2d_legalize", false]], "bitserial_conv2d_nchw() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.bitserial_conv2d_nchw", false]], "bitserial_conv2d_nhwc() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.bitserial_conv2d_nhwc", false]], "bitserial_dense() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.bitserial_dense", false]], "bitserial_dense() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.bitserial_dense", false]], "bitwise_and() (in module tvm.relax.op)": [[149, "tvm.relax.op.bitwise_and", false]], "bitwise_and() (in module tvm.tir)": [[173, "tvm.tir.bitwise_and", false]], "bitwise_not() (in module tvm.relax.op)": [[149, "tvm.relax.op.bitwise_not", false]], "bitwise_not() (in module tvm.tir)": [[173, "tvm.tir.bitwise_not", false]], "bitwise_or() (in module tvm.relax.op)": [[149, "tvm.relax.op.bitwise_or", false]], "bitwise_or() (in module tvm.tir)": [[173, "tvm.tir.bitwise_or", false]], "bitwise_xor() (in module tvm.relax.op)": [[149, "tvm.relax.op.bitwise_xor", false]], "bitwise_xor() (in module tvm.tir)": [[173, "tvm.tir.bitwise_xor", false]], "block (class in tvm.tir)": [[173, "tvm.tir.Block", false]], "blockbuilder (class in tvm.relax.block_builder)": [[147, "tvm.relax.block_builder.BlockBuilder", false]], "blockdependenceinfo (class in tvm.tir)": [[173, "tvm.tir.BlockDependenceInfo", false]], "blockinfo (class in tvm.dlight)": [[138, "tvm.dlight.BlockInfo", false]], "blockize() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.blockize", false]], "blockrealize (class in tvm.tir)": [[173, "tvm.tir.BlockRealize", false]], "blockrv (class in tvm.tir.schedule)": [[171, "tvm.tir.schedule.BlockRV", false]], "blockscope (class in tvm.tir.schedule)": [[171, "tvm.tir.schedule.BlockScope", false]], "booleanexpression (tvm.tir.transform.hoistedconditionals attribute)": [[174, "tvm.tir.transform.HoistedConditionals.BooleanExpression", false]], "bound_type_vars() (in module tvm.relay.analysis)": [[152, "tvm.relay.analysis.bound_type_vars", false]], "bound_vars() (in module tvm.relax.analysis)": [[146, "tvm.relax.analysis.bound_vars", false]], "bound_vars() (in module tvm.relay.analysis)": [[152, "tvm.relay.analysis.bound_vars", false]], "broadcast (class in tvm.tir)": [[173, "tvm.tir.Broadcast", false]], "broadcast() (tvm.runtime.disco.session method)": [[163, "tvm.runtime.disco.Session.broadcast", false]], "broadcast_from_worker0() (in module tvm.relax.op.ccl)": [[149, "tvm.relax.op.ccl.broadcast_from_worker0", false]], "broadcast_from_worker0() (tvm.runtime.disco.session method)": [[163, "tvm.runtime.disco.Session.broadcast_from_worker0", false]], "broadcast_to() (in module tvm.relax.op)": [[149, "tvm.relax.op.broadcast_to", false]], "buffer (class in tvm.tir)": [[173, "tvm.tir.Buffer", false]], "bufferload (class in tvm.tir)": [[173, "tvm.tir.BufferLoad", false]], "bufferrealize (class in tvm.tir)": [[173, "tvm.tir.BufferRealize", false]], "bufferregion (class in tvm.tir)": [[173, "tvm.tir.BufferRegion", false]], "bufferstore (class in tvm.tir)": [[173, "tvm.tir.BufferStore", false]], "build() (in module tvm)": [[139, "tvm.build", false]], "build() (in module tvm.relax)": [[150, "tvm.relax.build", false]], "build() (in module tvm.te.hybrid)": [[169, "tvm.te.hybrid.build", false]], "build() (tvm.meta_schedule.builder method)": [[145, "tvm.meta_schedule.Builder.build", false]], "build_config() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.build_config", false]], "builder (class in tvm.meta_schedule)": [[145, "tvm.meta_schedule.Builder", false]], "bundlemodelparams() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.BundleModelParams", false]], "c() (tvm.relax.execbuilder method)": [[150, "tvm.relax.ExecBuilder.c", false]], "cache (class in tvm.contrib.pickle_memoize)": [[137, "tvm.contrib.pickle_memoize.Cache", false]], "cache (tvm.contrib.pickle_memoize.cache property)": [[137, "tvm.contrib.pickle_memoize.Cache.cache", false]], "cache_index() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.cache_index", false]], "cache_inplace() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.cache_inplace", false]], "cache_read() (tvm.te.schedule method)": [[169, "tvm.te.Schedule.cache_read", false]], "cache_read() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.cache_read", false]], "cache_write() (tvm.te.schedule method)": [[169, "tvm.te.Schedule.cache_write", false]], "cache_write() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.cache_write", false]], "calculate_allocated_bytes() (in module tvm.tir.analysis.analysis)": [[170, "tvm.tir.analysis.analysis.calculate_allocated_bytes", false]], "calculate_constant_bytes() (in module tvm.tir.analysis.analysis)": [[170, "tvm.tir.analysis.analysis.calculate_constant_bytes", false]], "calculate_workspace_bytes() (in module tvm.tir.analysis.analysis)": [[170, "tvm.tir.analysis.analysis.calculate_workspace_bytes", false]], "call (class in tvm.relax)": [[150, "tvm.relax.Call", false]], "call (class in tvm.tir)": [[173, "tvm.tir.Call", false]], "call_builtin_with_ctx() (in module tvm.relax.op)": [[149, "tvm.relax.op.call_builtin_with_ctx", false]], "call_cpacked() (in module tvm.tir)": [[173, "tvm.tir.call_cpacked", false]], "call_cpacked_lowered() (in module tvm.tir)": [[173, "tvm.tir.call_cpacked_lowered", false]], "call_dps_packed() (in module tvm.relax)": [[150, "tvm.relax.call_dps_packed", false]], "call_dps_packed() (in module tvm.relax.op)": [[149, "tvm.relax.op.call_dps_packed", false]], "call_extern() (in module tvm.tir)": [[173, "tvm.tir.call_extern", false]], "call_inplace_packed() (in module tvm.relax.op)": [[149, "tvm.relax.op.call_inplace_packed", false]], "call_intrin() (in module tvm.tir)": [[173, "tvm.tir.call_intrin", false]], "call_llvm_intrin() (in module tvm.tir)": [[173, "tvm.tir.call_llvm_intrin", false]], "call_llvm_pure_intrin() (in module tvm.tir)": [[173, "tvm.tir.call_llvm_pure_intrin", false]], "call_packed() (in module tvm.tir)": [[173, "tvm.tir.call_packed", false]], "call_packed() (tvm.runtime.disco.session method)": [[163, "tvm.runtime.disco.Session.call_packed", false]], "call_packed_lowered() (in module tvm.tir)": [[173, "tvm.tir.call_packed_lowered", false]], "call_pure_extern() (in module tvm.tir)": [[173, "tvm.tir.call_pure_extern", false]], "call_pure_packed() (in module tvm.relax)": [[150, "tvm.relax.call_pure_packed", false]], "call_pure_packed() (in module tvm.relax.op)": [[149, "tvm.relax.op.call_pure_packed", false]], "call_te() (tvm.relax.block_builder.blockbuilder method)": [[147, "tvm.relax.block_builder.BlockBuilder.call_te", false]], "call_te_with_grad() (tvm.relax.block_builder.blockbuilder method)": [[147, "tvm.relax.block_builder.BlockBuilder.call_te_with_grad", false]], "call_tir() (in module tvm.relax)": [[150, "tvm.relax.call_tir", false]], "call_tir() (in module tvm.relax.op)": [[149, "tvm.relax.op.call_tir", false]], "call_tir() (in module tvm.tir)": [[173, "tvm.tir.call_tir", false]], "call_tir_inplace() (in module tvm.relax)": [[150, "tvm.relax.call_tir_inplace", false]], "call_tir_inplace() (in module tvm.relax.op)": [[149, "tvm.relax.op.call_tir_inplace", false]], "call_tir_local_view() (in module tvm.relax.op.distributed)": [[149, "tvm.relax.op.distributed.call_tir_local_view", false]], "call_tir_with_grad() (in module tvm.relax)": [[150, "tvm.relax.call_tir_with_grad", false]], "call_tir_with_grad() (in module tvm.relax.op)": [[149, "tvm.relax.op.call_tir_with_grad", false]], "callback() (tvm.relay.dataflow_pattern.dfpatterncallback method)": [[154, "tvm.relay.dataflow_pattern.DFPatternCallback.callback", false]], "calleffectkind (class in tvm.tir)": [[173, "tvm.tir.CallEffectKind", false]], "callgraph (class in tvm.relay.analysis)": [[152, "tvm.relay.analysis.CallGraph", false]], "callingconv (class in tvm.ir)": [[144, "tvm.ir.CallingConv", false]], "callpattern (class in tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.CallPattern", false]], "calls (tvm.runtime.profiling.report attribute)": [[165, "tvm.runtime.profiling.Report.calls", false]], "calltirrewrite() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.CallTIRRewrite", false]], "calltirwithgradattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.CallTIRWithGradAttrs", false]], "can_convert_multiply_to_intdiv() (in module tvm.topi.image)": [[175, "tvm.topi.image.can_convert_multiply_to_intdiv", false]], "can_decompose_padding() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.can_decompose_padding", false]], "canon_multi_target() (tvm.target.target static method)": [[168, "tvm.target.Target.canon_multi_target", false]], "canon_multi_target_and_host() (tvm.target.target static method)": [[168, "tvm.target.Target.canon_multi_target_and_host", false]], "canon_target() (tvm.target.target static method)": [[168, "tvm.target.Target.canon_target", false]], "canon_target_and_host() (tvm.target.target static method)": [[168, "tvm.target.Target.canon_target_and_host", false]], "canon_target_map_and_host() (tvm.target.target static method)": [[168, "tvm.target.Target.canon_target_map_and_host", false]], "canonicalizebindings() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.CanonicalizeBindings", false]], "canonicalizecast() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.CanonicalizeCast", false]], "canonicalizeops() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.CanonicalizeOps", false]], "capturepostdfsindexinspans() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.CapturePostDfsIndexInSpans", false]], "cast (class in tvm.tir)": [[173, "tvm.tir.Cast", false]], "ccachekey (class in tvm.relay.backend.te_compiler)": [[153, "tvm.relay.backend.te_compiler.CCacheKey", false]], "ccachevalue (class in tvm.relay.backend.te_compiler)": [[153, "tvm.relay.backend.te_compiler.CCacheValue", false]], "ceil() (in module tvm.relax.op)": [[149, "tvm.relax.op.ceil", false]], "ceil() (in module tvm.te)": [[169, "tvm.te.ceil", false]], "ceil() (in module tvm.tir)": [[173, "tvm.tir.ceil", false]], "ceildiv() (in module tvm.tir)": [[173, "tvm.tir.ceildiv", false]], "changebatch (class in tvm.relay.transform)": [[160, "tvm.relay.transform.ChangeBatch", false]], "changedatatype (class in tvm.relay.frontend)": [[155, "tvm.relay.frontend.ChangeDatatype", false]], "check_basic_block_normal_form() (in module tvm.relay.analysis)": [[152, "tvm.relay.analysis.check_basic_block_normal_form", false]], "check_constant() (in module tvm.relay.analysis)": [[152, "tvm.relay.analysis.check_constant", false]], "check_grad() (in module tvm.relay.testing)": [[159, "tvm.relay.testing.check_grad", false]], "check_kind() (in module tvm.relay.analysis)": [[152, "tvm.relay.analysis.check_kind", false]], "check_workload_key() (tvm.auto_scheduler.recordreader method)": [[135, "tvm.auto_scheduler.RecordReader.check_workload_key", false]], "checked_type (tvm.ir.relayexpr property)": [[144, "tvm.ir.RelayExpr.checked_type", false]], "cl() (in module tvm.runtime.ndarray)": [[164, "tvm.runtime.ndarray.cl", false]], "cl() (tvm.rpc.rpcsession method)": [[162, "tvm.rpc.RPCSession.cl", false]], "clear() (tvm.relay.backend.te_compiler.tecompiler method)": [[153, "tvm.relay.backend.te_compiler.TECompiler.clear", false]], "clear_cache() (tvm.autotvm.task.dispatcher.fallbackcontext method)": [[136, "tvm.autotvm.task.dispatcher.FallbackContext.clear_cache", false]], "clear_cache() (tvm.autotvm.task.space.configspace method)": [[136, "tvm.autotvm.task.space.ConfigSpace.clear_cache", false]], "clear_fallback_cache() (in module tvm.autotvm.task.dispatcher)": [[136, "tvm.autotvm.task.dispatcher.clear_fallback_cache", false]], "clip() (in module tvm.relax.op)": [[149, "tvm.relax.op.clip", false]], "clone() (tvm.meta_schedule.mutator method)": [[145, "tvm.meta_schedule.Mutator.clone", false]], "clone() (tvm.meta_schedule.postproc method)": [[145, "tvm.meta_schedule.Postproc.clone", false]], "clone() (tvm.meta_schedule.schedulerule method)": [[145, "tvm.meta_schedule.ScheduleRule.clone", false]], "clone() (tvm.meta_schedule.searchstrategy method)": [[145, "tvm.meta_schedule.SearchStrategy.clone", false]], "clone() (tvm.meta_schedule.spacegenerator method)": [[145, "tvm.meta_schedule.SpaceGenerator.clone", false]], "clone() (tvm.meta_schedule.tunecontext method)": [[145, "tvm.meta_schedule.TuneContext.clone", false]], "close() (tvm.rpc.trackersession method)": [[162, "tvm.rpc.TrackerSession.close", false]], "clz() (in module tvm.tir)": [[173, "tvm.tir.clz", false]], "codegen() (tvm.relay.backend.graph_executor_codegen.graphexecutorcodegen method)": [[153, "tvm.relay.backend.graph_executor_codegen.GraphExecutorCodegen.codegen", false]], "codegen() (tvm.relay.backend.vm.vmcompiler method)": [[153, "tvm.relay.backend.vm.VMCompiler.codegen", false]], "collagepartition() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.CollagePartition", false]], "collapse_sum_like() (in module tvm.relax.op)": [[149, "tvm.relax.op.collapse_sum_like", false]], "collapse_sum_to() (in module tvm.relax.op)": [[149, "tvm.relax.op.collapse_sum_to", false]], "collect_non_negative_expressions() (in module tvm.relax.analysis)": [[146, "tvm.relax.analysis.collect_non_negative_expressions", false]], "combinecontextcall() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.CombineContextCall", false]], "combineparallelbatchmatmul() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.CombineParallelBatchMatmul", false]], "combineparallelconv2d() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.CombineParallelConv2D", false]], "combineparalleldense() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.CombineParallelDense", false]], "combineparallelmatmul() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.CombineParallelMatmul", false]], "comm_reducer() (in module tvm.te)": [[169, "tvm.te.comm_reducer", false]], "comm_reducer() (in module tvm.tir)": [[173, "tvm.tir.comm_reducer", false]], "commit_tuning_record() (tvm.meta_schedule.database method)": [[145, "tvm.meta_schedule.Database.commit_tuning_record", false]], "commit_workload() (tvm.meta_schedule.database method)": [[145, "tvm.meta_schedule.Database.commit_workload", false]], "commonsubexprelimtir() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.CommonSubexprElimTIR", false]], "commreducer (class in tvm.tir)": [[173, "tvm.tir.CommReducer", false]], "compactbufferallocation() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.CompactBufferAllocation", false]], "compile() (in module tvm.relay.backend.vm)": [[153, "tvm.relay.backend.vm.compile", false]], "compile_coreml() (in module tvm.contrib.xcode)": [[137, "tvm.contrib.xcode.compile_coreml", false]], "compile_cuda() (in module tvm.contrib.nvcc)": [[137, "tvm.contrib.nvcc.compile_cuda", false]], "compile_metal() (in module tvm.contrib.xcode)": [[137, "tvm.contrib.xcode.compile_metal", false]], "computable_at_compile_time() (in module tvm.relax.analysis)": [[146, "tvm.relax.analysis.computable_at_compile_time", false]], "compute() (in module tvm.te)": [[169, "tvm.te.compute", false]], "compute_at() (tvm.te.stage method)": [[169, "tvm.te.Stage.compute_at", false]], "compute_at() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.compute_at", false]], "compute_flop() (in module tvm.autotvm.task.task)": [[136, "tvm.autotvm.task.task.compute_flop", false]], "compute_inline() (tvm.te.stage method)": [[169, "tvm.te.Stage.compute_inline", false]], "compute_inline() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.compute_inline", false]], "compute_root() (tvm.te.stage method)": [[169, "tvm.te.Stage.compute_root", false]], "computedag (class in tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.ComputeDAG", false]], "computeop (class in tvm.te)": [[169, "tvm.te.ComputeOp", false]], "computeprimvalue() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.ComputePrimValue", false]], "concat() (in module tvm.relax.op)": [[149, "tvm.relax.op.concat", false]], "concatattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.ConcatAttrs", false]], "concatenate() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.concatenate", false]], "concrete_shape (tvm.ir.tensortype property)": [[144, "tvm.ir.TensorType.concrete_shape", false]], "configentity (class in tvm.autotvm.task.space)": [[136, "tvm.autotvm.task.space.ConfigEntity", false]], "configspace (class in tvm.autotvm.task.space)": [[136, "tvm.autotvm.task.space.ConfigSpace", false]], "connect() (in module tvm.rpc)": [[162, "tvm.rpc.connect", false]], "connect_tracker() (in module tvm.rpc)": [[162, "tvm.rpc.connect_tracker", false]], "const() (in module tvm.relax)": [[150, "tvm.relax.const", false]], "const() (in module tvm.relay.image)": [[156, "tvm.relay.image.const", false]], "const() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.const", false]], "const() (in module tvm.te)": [[169, "tvm.te.const", false]], "constant (class in tvm.relax)": [[150, "tvm.relax.Constant", false]], "constant (class in tvm.relay.nn)": [[158, "tvm.relay.nn.Constant", false]], "constantmemorypools (class in tvm.ir)": [[144, "tvm.ir.ConstantMemoryPools", false]], "constantpattern (class in tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.ConstantPattern", false]], "constantpoolinfo (class in tvm.ir)": [[144, "tvm.ir.ConstantPoolInfo", false]], "constructor (class in tvm.ir)": [[144, "tvm.ir.Constructor", false]], "constructorvalue (class in tvm.relay.backend.interpreter)": [[153, "tvm.relay.backend.interpreter.ConstructorValue", false]], "contains_impure_call() (in module tvm.relax.analysis)": [[146, "tvm.relax.analysis.contains_impure_call", false]], "contrib_conv2d_gemm_weight_transform() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.contrib_conv2d_gemm_weight_transform", false]], "contrib_conv2d_gemm_without_weight_transform() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.contrib_conv2d_gemm_without_weight_transform", false]], "contrib_conv2d_nchwc() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.contrib_conv2d_nchwc", false]], "contrib_conv2d_winograd_nnpack_weight_transform() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.contrib_conv2d_winograd_nnpack_weight_transform", false]], "contrib_conv2d_winograd_weight_transform() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.contrib_conv2d_winograd_weight_transform", false]], "contrib_conv2d_winograd_without_weight_transform() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.contrib_conv2d_winograd_without_weight_transform", false]], "contrib_conv3d_winograd_weight_transform() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.contrib_conv3d_winograd_weight_transform", false]], "contrib_conv3d_winograd_without_weight_transform() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.contrib_conv3d_winograd_without_weight_transform", false]], "contrib_dense_pack() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.contrib_dense_pack", false]], "contrib_depthwise_conv2d_nchwc() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.contrib_depthwise_conv2d_nchwc", false]], "conv() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv", false]], "conv1d() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.conv1d", false]], "conv1d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.conv1d", false]], "conv1d() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv1d", false]], "conv1d_ncw() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv1d_ncw", false]], "conv1d_nwc() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv1d_nwc", false]], "conv1d_transpose() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.conv1d_transpose", false]], "conv1d_transpose() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.conv1d_transpose", false]], "conv1d_transpose_ncw() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv1d_transpose_ncw", false]], "conv2d() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.conv2d", false]], "conv2d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.conv2d", false]], "conv2d() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv2d", false]], "conv2d_alter_layout() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv2d_alter_layout", false]], "conv2d_backward_weight() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.conv2d_backward_weight", false]], "conv2d_forward() (in module tvm.contrib.miopen)": [[137, "tvm.contrib.miopen.conv2d_forward", false]], "conv2d_gemm_weight_transform() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv2d_gemm_weight_transform", false]], "conv2d_hwcn() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv2d_hwcn", false]], "conv2d_infer_layout() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv2d_infer_layout", false]], "conv2d_legalize() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv2d_legalize", false]], "conv2d_nchw() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv2d_nchw", false]], "conv2d_nchwc() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv2d_NCHWc", false]], "conv2d_nchwc_int8() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv2d_NCHWc_int8", false]], "conv2d_nhwc() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv2d_nhwc", false]], "conv2d_transpose() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.conv2d_transpose", false]], "conv2d_transpose() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.conv2d_transpose", false]], "conv2d_transpose_alter_layout() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv2d_transpose_alter_layout", false]], "conv2d_transpose_legalize() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv2d_transpose_legalize", false]], "conv2d_transpose_nchw() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv2d_transpose_nchw", false]], "conv2d_transpose_nchw_preprocess() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv2d_transpose_nchw_preprocess", false]], "conv2d_winograd_nchw() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv2d_winograd_nchw", false]], "conv2d_winograd_nchw_without_weight_transform() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv2d_winograd_nchw_without_weight_transform", false]], "conv2d_winograd_nhwc() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv2d_winograd_nhwc", false]], "conv2d_winograd_nhwc_without_weight_transform() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv2d_winograd_nhwc_without_weight_transform", false]], "conv2d_winograd_nnpack_weight_transform() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv2d_winograd_nnpack_weight_transform", false]], "conv2d_winograd_weight_transform() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv2d_winograd_weight_transform", false]], "conv2dattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.Conv2DAttrs", false]], "conv2dtosparse() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.Conv2dToSparse", false]], "conv2dtosparse2() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.Conv2dToSparse2", false]], "conv2dtransposeattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.Conv2DTransposeAttrs", false]], "conv3d() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.conv3d", false]], "conv3d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.conv3d", false]], "conv3d_alter_layout() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv3d_alter_layout", false]], "conv3d_ncdhw() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv3d_ncdhw", false]], "conv3d_ndhwc() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv3d_ndhwc", false]], "conv3d_transpose() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.conv3d_transpose", false]], "conv3d_transpose_legalize() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv3d_transpose_legalize", false]], "conv3d_transpose_ncdhw() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv3d_transpose_ncdhw", false]], "conv3d_transpose_ncdhw_preprocess() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv3d_transpose_ncdhw_preprocess", false]], "conv3d_winograd_weight_transform() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.conv3d_winograd_weight_transform", false]], "conv3dattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.Conv3DAttrs", false]], "conv_block() (in module tvm.relay.testing.mobilenet)": [[159, "tvm.relay.testing.mobilenet.conv_block", false]], "convert_func() (in module tvm.contrib.dlpack)": [[137, "tvm.contrib.dlpack.convert_func", false]], "convert_to_expr() (in module tvm.relax)": [[150, "tvm.relax.convert_to_expr", false]], "convertblockstoopaque() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.ConvertBlocksToOpaque", false]], "convertforloopstoserial() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.ConvertForLoopsToSerial", false]], "convertlayout() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.ConvertLayout", false]], "convertlayout() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.ConvertLayout", false]], "convertssa() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.ConvertSSA", false]], "converttodataflow() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.ConvertToDataflow", false]], "convolution_inference() (in module tvm.contrib.nnpack)": [[137, "tvm.contrib.nnpack.convolution_inference", false]], "convolution_inference_weight_transform() (in module tvm.contrib.nnpack)": [[137, "tvm.contrib.nnpack.convolution_inference_weight_transform", false]], "convolution_inference_without_weight_transform() (in module tvm.contrib.nnpack)": [[137, "tvm.contrib.nnpack.convolution_inference_without_weight_transform", false]], "coprocsync() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.CoProcSync", false]], "copy() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.copy", false]], "copy_from_worker_0() (tvm.runtime.disco.session method)": [[163, "tvm.runtime.disco.Session.copy_from_worker_0", false]], "copy_to_worker_0() (tvm.runtime.disco.session method)": [[163, "tvm.runtime.disco.Session.copy_to_worker_0", false]], "copyfrom() (tvm.runtime.ndarray.ndarray method)": [[164, "tvm.runtime.ndarray.NDArray.copyfrom", false]], "copysign() (in module tvm.tir)": [[173, "tvm.tir.copysign", false]], "copyto() (tvm.runtime.ndarray.ndarray method)": [[164, "tvm.runtime.ndarray.NDArray.copyto", false]], "correlation() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.correlation", false]], "correlation_nchw() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.correlation_nchw", false]], "cos() (in module tvm.relax.op)": [[149, "tvm.relax.op.cos", false]], "cos() (in module tvm.te)": [[169, "tvm.te.cos", false]], "cos() (in module tvm.tir)": [[173, "tvm.tir.cos", false]], "cosh() (in module tvm.relax.op)": [[149, "tvm.relax.op.cosh", false]], "cosh() (in module tvm.te)": [[169, "tvm.te.cosh", false]], "cosh() (in module tvm.tir)": [[173, "tvm.tir.cosh", false]], "costmodel (class in tvm.meta_schedule)": [[145, "tvm.meta_schedule.CostModel", false]], "count (class in tvm.runtime.profiling)": [[165, "tvm.runtime.profiling.Count", false]], "count() (in module tvm.relay.testing)": [[159, "tvm.relay.testing.count", false]], "count_layers() (in module tvm.relay.analysis)": [[152, "tvm.relay.analysis.count_layers", false]], "count_ops() (in module tvm.relay.testing)": [[159, "tvm.relay.testing.count_ops", false]], "cpu() (in module tvm.relay.analysis)": [[152, "tvm.relay.analysis.cpu", false]], "cpu() (in module tvm.runtime.ndarray)": [[164, "tvm.runtime.ndarray.cpu", false]], "cpu() (tvm.rpc.rpcsession method)": [[162, "tvm.rpc.RPCSession.cpu", false]], "create() (in module tvm.autotvm.task.task)": [[136, "tvm.autotvm.task.task.create", false]], "create() (in module tvm.contrib.graph_executor)": [[141, "tvm.contrib.graph_executor.create", false]], "create() (in module tvm.target)": [[168, "tvm.target.create", false]], "create() (tvm.meta_schedule.builder static method)": [[145, "tvm.meta_schedule.Builder.create", false]], "create() (tvm.meta_schedule.costmodel static method)": [[145, "tvm.meta_schedule.CostModel.create", false]], "create() (tvm.meta_schedule.database static method)": [[145, "tvm.meta_schedule.Database.create", false]], "create() (tvm.meta_schedule.featureextractor static method)": [[145, "tvm.meta_schedule.FeatureExtractor.create", false]], "create() (tvm.meta_schedule.measurecallback static method)": [[145, "tvm.meta_schedule.MeasureCallback.create", false]], "create() (tvm.meta_schedule.mutator static method)": [[145, "tvm.meta_schedule.Mutator.create", false]], "create() (tvm.meta_schedule.postproc static method)": [[145, "tvm.meta_schedule.Postproc.create", false]], "create() (tvm.meta_schedule.runner static method)": [[145, "tvm.meta_schedule.Runner.create", false]], "create() (tvm.meta_schedule.schedulerule static method)": [[145, "tvm.meta_schedule.ScheduleRule.create", false]], "create() (tvm.meta_schedule.searchstrategy static method)": [[145, "tvm.meta_schedule.SearchStrategy.create", false]], "create() (tvm.meta_schedule.spacegenerator static method)": [[145, "tvm.meta_schedule.SpaceGenerator.create", false]], "create() (tvm.meta_schedule.taskscheduler static method)": [[145, "tvm.meta_schedule.TaskScheduler.create", false]], "create_barriers() (in module tvm.tir)": [[173, "tvm.tir.create_barriers", false]], "create_dylib() (in module tvm.contrib.xcode)": [[137, "tvm.contrib.xcode.create_dylib", false]], "create_empty() (tvm.relax.function static method)": [[150, "tvm.relax.Function.create_empty", false]], "create_executable() (in module tvm.contrib.cc)": [[137, "tvm.contrib.cc.create_executable", false]], "create_graph() (tvm.contrib.relay_viz.dot.dotplotter method)": [[137, "tvm.contrib.relay_viz.dot.DotPlotter.create_graph", false]], "create_graph() (tvm.contrib.relay_viz.interface.plotter method)": [[137, "tvm.contrib.relay_viz.interface.Plotter.create_graph", false]], "create_graph() (tvm.contrib.relay_viz.terminal.termplotter method)": [[137, "tvm.contrib.relay_viz.terminal.TermPlotter.create_graph", false]], "create_group() (tvm.te.schedule method)": [[169, "tvm.te.Schedule.create_group", false]], "create_llvm() (in module tvm.contrib.clang)": [[137, "tvm.contrib.clang.create_llvm", false]], "create_measure_batch() (in module tvm.autotvm.measure)": [[136, "tvm.autotvm.measure.create_measure_batch", false]], "create_prim_func() (in module tvm.te)": [[169, "tvm.te.create_prim_func", false]], "create_schedule() (in module tvm.te)": [[169, "tvm.te.create_schedule", false]], "create_shared() (in module tvm.contrib.cc)": [[137, "tvm.contrib.cc.create_shared", false]], "create_shared() (in module tvm.contrib.ndk)": [[137, "tvm.contrib.ndk.create_shared", false]], "create_staticlib() (in module tvm.contrib.cc)": [[137, "tvm.contrib.cc.create_staticlib", false]], "create_staticlib() (in module tvm.contrib.ndk)": [[137, "tvm.contrib.ndk.create_staticlib", false]], "create_task() (in module tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.create_task", false]], "create_tvmjs_wasm() (in module tvm.contrib.emcc)": [[137, "tvm.contrib.emcc.create_tvmjs_wasm", false]], "create_workload() (in module tvm.relay.testing)": [[159, "tvm.relay.testing.create_workload", false]], "crop_and_resize() (in module tvm.relay.image)": [[156, "tvm.relay.image.crop_and_resize", false]], "crop_and_resize() (in module tvm.topi.image)": [[175, "tvm.topi.image.crop_and_resize", false]], "cross_compiler() (in module tvm.contrib.cc)": [[137, "tvm.contrib.cc.cross_compiler", false]], "cross_entropy() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.cross_entropy", false]], "cross_entropy_with_logits() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.cross_entropy_with_logits", false]], "cross_entropy_with_logits() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.cross_entropy_with_logits", false]], "csrmm() (in module tvm.topi.sparse)": [[175, "tvm.topi.sparse.csrmm", false]], "csrmv() (in module tvm.topi.sparse)": [[175, "tvm.topi.sparse.csrmv", false]], "csrndarray (class in tvm.contrib.sparse)": [[137, "tvm.contrib.sparse.CSRNDArray", false]], "csrplaceholderop (class in tvm.contrib.sparse)": [[137, "tvm.contrib.sparse.CSRPlaceholderOp", false]], "csv() (tvm.runtime.profiling.report method)": [[165, "tvm.runtime.profiling.Report.csv", false]], "cuda() (in module tvm.runtime.ndarray)": [[164, "tvm.runtime.ndarray.cuda", false]], "cuda() (in module tvm.target)": [[168, "tvm.target.cuda", false]], "cuda() (tvm.rpc.rpcsession method)": [[162, "tvm.rpc.RPCSession.cuda", false]], "cumprod() (in module tvm.relax.op)": [[149, "tvm.relax.op.cumprod", false]], "cumsum() (in module tvm.relax.op)": [[149, "tvm.relax.op.cumsum", false]], "current() (tvm.meta_schedule.database static method)": [[145, "tvm.meta_schedule.Database.current", false]], "current() (tvm.meta_schedule.profiler static method)": [[145, "tvm.meta_schedule.Profiler.current", false]], "current() (tvm.relax.block_builder.blockbuilder static method)": [[147, "tvm.relax.block_builder.BlockBuilder.current", false]], "current() (tvm.target.target static method)": [[168, "tvm.target.Target.current", false]], "current() (tvm.te.specializedcondition static method)": [[169, "tvm.te.SpecializedCondition.current", false]], "current() (tvm.transform.passcontext static method)": [[176, "tvm.transform.PassContext.current", false]], "current_block_is_dataflow() (tvm.relax.block_builder.blockbuilder method)": [[147, "tvm.relax.block_builder.BlockBuilder.current_block_is_dataflow", false]], "database (class in tvm.meta_schedule)": [[145, "tvm.meta_schedule.Database", false]], "dataflow() (tvm.relax.block_builder.blockbuilder method)": [[147, "tvm.relax.block_builder.BlockBuilder.dataflow", false]], "dataflowblock (class in tvm.relax)": [[150, "tvm.relax.DataflowBlock", false]], "dataflowblock_pass() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.dataflowblock_pass", false]], "dataflowblockpass (class in tvm.relax.transform)": [[151, "tvm.relax.transform.DataflowBlockPass", false]], "dataflowblockrewrite (class in tvm.relax)": [[150, "tvm.relax.DataflowBlockRewrite", false]], "dataflowscope (class in tvm.relax.block_builder)": [[147, "tvm.relax.block_builder.DataflowScope", false]], "dataflowuseinplacecalls() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.DataflowUseInplaceCalls", false]], "dataflowvar (class in tvm.relax)": [[150, "tvm.relax.DataflowVar", false]], "dataproducer (class in tvm.tir)": [[173, "tvm.tir.DataProducer", false]], "datatypeimm (class in tvm.relax)": [[150, "tvm.relax.DataTypeImm", false]], "datatypepattern (class in tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.DataTypePattern", false]], "deadcodeelimination() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.DeadCodeElimination", false]], "deadcodeelimination() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.DeadCodeElimination", false]], "debug_copy_from() (tvm.runtime.disco.dref method)": [[163, "tvm.runtime.disco.DRef.debug_copy_from", false]], "debug_get_from_remote() (tvm.runtime.disco.dref method)": [[163, "tvm.runtime.disco.DRef.debug_get_from_remote", false]], "debug_get_output() (tvm.contrib.graph_executor.graphmodule method)": [[141, "tvm.contrib.graph_executor.GraphModule.debug_get_output", false]], "decisions (tvm.tir.schedule.trace attribute)": [[171, "tvm.tir.schedule.Trace.decisions", false]], "decl_buffer() (in module tvm.tir)": [[173, "tvm.tir.decl_buffer", false]], "decl_tensor_intrin() (in module tvm.te)": [[169, "tvm.te.decl_tensor_intrin", false]], "declaration_conv2d_transpose_impl() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.declaration_conv2d_transpose_impl", false]], "declaration_conv3d_transpose_impl() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.declaration_conv3d_transpose_impl", false]], "declare_function() (tvm.relax.execbuilder method)": [[150, "tvm.relax.ExecBuilder.declare_function", false]], "declbuffer (class in tvm.tir)": [[173, "tvm.tir.DeclBuffer", false]], "decode() (in module tvm.autotvm.record)": [[136, "tvm.autotvm.record.decode", false]], "decompose_padding() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.decompose_padding", false]], "decompose_reduction() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.decompose_reduction", false]], "decomposeopsforinference() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.DecomposeOpsForInference", false]], "decomposeopsfortraining() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.DecomposeOpsForTraining", false]], "deconv2d() (in module tvm.relay.testing.dcgan)": [[159, "tvm.relay.testing.dcgan.deconv2d", false]], "deconv2d_bn_relu() (in module tvm.relay.testing.dcgan)": [[159, "tvm.relay.testing.dcgan.deconv2d_bn_relu", false]], "decorate() (in module tvm.te.hybrid)": [[169, "tvm.te.hybrid.decorate", false]], "decoratedevicescope() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.DecorateDeviceScope", false]], "defaultgpuschedule() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.DefaultGPUSchedule", false]], "defaultvizparser (class in tvm.contrib.relay_viz.interface)": [[137, "tvm.contrib.relay_viz.interface.DefaultVizParser", false]], "definable_tir_vars_in_struct_info() (in module tvm.relax.analysis)": [[146, "tvm.relax.analysis.definable_tir_vars_in_struct_info", false]], "define_annotate() (tvm.autotvm.task.space.configspace method)": [[136, "tvm.autotvm.task.space.ConfigSpace.define_annotate", false]], "define_knob() (tvm.autotvm.task.space.configspace method)": [[136, "tvm.autotvm.task.space.ConfigSpace.define_knob", false]], "define_reorder() (tvm.autotvm.task.space.configspace method)": [[136, "tvm.autotvm.task.space.ConfigSpace.define_reorder", false]], "define_split() (tvm.autotvm.task.space.configspace method)": [[136, "tvm.autotvm.task.space.ConfigSpace.define_split", false]], "defined_symbolic_vars() (in module tvm.relax.analysis)": [[146, "tvm.relax.analysis.defined_symbolic_vars", false]], "deformable_conv2d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.deformable_conv2d", false]], "deformable_conv2d_nchw() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.deformable_conv2d_nchw", false]], "deformable_conv2d_nhwc() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.deformable_conv2d_nhwc", false]], "defunctionalization() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.Defunctionalization", false]], "defuseops() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.DefuseOps", false]], "dense() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.dense", false]], "dense() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.dense", false]], "dense() (in module tvm.topi.sparse)": [[175, "tvm.topi.sparse.dense", false]], "dense_alter_layout() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.dense_alter_layout", false]], "dense_legalize() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.dense_legalize", false]], "dense_pack() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.dense_pack", false]], "densetosparse() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.DenseToSparse", false]], "dependency (class in tvm.tir.schedule)": [[171, "tvm.tir.schedule.Dependency", false]], "depkind (class in tvm.tir.schedule)": [[171, "tvm.tir.schedule.DepKind", false]], "depth_to_space() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.depth_to_space", false]], "depth_to_space() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.depth_to_space", false]], "depthwise_conv2d_backward_input_nhwc() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.depthwise_conv2d_backward_input_nhwc", false]], "depthwise_conv2d_backward_weight_nhwc() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.depthwise_conv2d_backward_weight_nhwc", false]], "depthwise_conv2d_infer_layout() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.depthwise_conv2d_infer_layout", false]], "depthwise_conv2d_nchw() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.depthwise_conv2d_nchw", false]], "depthwise_conv2d_nchwc() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.depthwise_conv2d_NCHWc", false]], "depthwise_conv2d_nhwc() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.depthwise_conv2d_nhwc", false]], "dequantize() (in module tvm.relax.op)": [[149, "tvm.relax.op.dequantize", false]], "derive_call_ret_struct_info() (in module tvm.relax.analysis)": [[146, "tvm.relax.analysis.derive_call_ret_struct_info", false]], "derived_object() (in module tvm.meta_schedule)": [[145, "tvm.meta_schedule.derived_object", false]], "deserialize_args() (in module tvm.autotvm.task.task)": [[136, "tvm.autotvm.task.task.deserialize_args", false]], "detach_params() (in module tvm.relax.frontend)": [[148, "tvm.relax.frontend.detach_params", false]], "detect_buffer_access_lca() (in module tvm.tir.analysis.analysis)": [[170, "tvm.tir.analysis.analysis.detect_buffer_access_lca", false]], "detect_feature() (in module tvm.relay.analysis)": [[152, "tvm.relay.analysis.detect_feature", false]], "detect_recursion() (in module tvm.relax.analysis)": [[146, "tvm.relax.analysis.detect_recursion", false]], "device (tvm.runtime.ndarray.ndarray property)": [[164, "tvm.runtime.ndarray.NDArray.device", false]], "device() (in module tvm.runtime.ndarray)": [[164, "tvm.runtime.ndarray.device", false]], "device() (tvm.rpc.rpcsession method)": [[162, "tvm.rpc.RPCSession.device", false]], "device_metrics (tvm.runtime.profiling.report attribute)": [[165, "tvm.runtime.profiling.Report.device_metrics", false]], "devicewrapper (class in tvm.runtime.profiling)": [[165, "tvm.runtime.profiling.DeviceWrapper", false]], "dfpattern (class in tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.DFPattern", false]], "dfpatterncallback (class in tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.DFPatternCallback", false]], "diagnosticerror": [[140, "tvm.error.DiagnosticError", false]], "dictattrs (class in tvm.ir)": [[144, "tvm.ir.DictAttrs", false]], "dilate() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.dilate", false]], "dilate() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.dilate", false]], "dilation2d() (in module tvm.relay.image)": [[156, "tvm.relay.image.dilation2d", false]], "dilation2d_nchw() (in module tvm.topi.image)": [[175, "tvm.topi.image.dilation2d_nchw", false]], "dilation2d_nhwc() (in module tvm.topi.image)": [[175, "tvm.topi.image.dilation2d_nhwc", false]], "dilation_h (tvm.topi.nn.workload attribute)": [[175, "tvm.topi.nn.Workload.dilation_h", false]], "dilation_w (tvm.topi.nn.workload attribute)": [[175, "tvm.topi.nn.Workload.dilation_w", false]], "dims (tvm.autotvm.task.space.configspace property)": [[136, "tvm.autotvm.task.space.ConfigSpace.dims", false]], "directorycreatedpastatexit": [[137, "tvm.contrib.utils.DirectoryCreatedPastAtExit", false]], "dispatchcontext (class in tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.DispatchContext", false]], "dispatchcontext (class in tvm.autotvm.task.dispatcher)": [[136, "tvm.autotvm.task.dispatcher.DispatchContext", false]], "div (class in tvm.tir)": [[173, "tvm.tir.Div", false]], "div() (in module tvm.te)": [[169, "tvm.te.div", false]], "div() (in module tvm.tir)": [[173, "tvm.tir.div", false]], "divide() (in module tvm.relax.op)": [[149, "tvm.relax.op.divide", false]], "divtomul() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.DivToMul", false]], "dmodule (class in tvm.runtime.disco)": [[163, "tvm.runtime.disco.DModule", false]], "dom (tvm.dlight.iterinfo property)": [[138, "tvm.dlight.IterInfo.dom", false]], "dom() (tvm.dlight.blockinfo method)": [[138, "tvm.dlight.BlockInfo.dom", false]], "dom_kind() (tvm.dlight.blockinfo method)": [[138, "tvm.dlight.BlockInfo.dom_kind", false]], "dominates() (in module tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.dominates", false]], "dominates() (tvm.relay.dataflow_pattern.dfpattern method)": [[154, "tvm.relay.dataflow_pattern.DFPattern.dominates", false]], "dominatorpattern (class in tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.DominatorPattern", false]], "dotgraph (class in tvm.contrib.relay_viz.dot)": [[137, "tvm.contrib.relay_viz.dot.DotGraph", false]], "dotplotter (class in tvm.contrib.relay_viz.dot)": [[137, "tvm.contrib.relay_viz.dot.DotPlotter", false]], "double_buffer() (tvm.te.stage method)": [[169, "tvm.te.Stage.double_buffer", false]], "download() (tvm.rpc.rpcsession method)": [[162, "tvm.rpc.RPCSession.download", false]], "download_linked_module() (tvm.rpc.rpcsession method)": [[162, "tvm.rpc.RPCSession.download_linked_module", false]], "dp4a() (in module tvm.tir)": [[173, "tvm.tir.dp4a", false]], "dpackedfunc (class in tvm.runtime.disco)": [[163, "tvm.runtime.disco.DPackedFunc", false]], "dref (class in tvm.runtime.disco)": [[163, "tvm.runtime.disco.DRef", false]], "dropout() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.dropout", false]], "dropout() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.dropout", false]], "dropout_raw() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.dropout_raw", false]], "dropoutattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.DropoutAttrs", false]], "dtype (tvm.runtime.ndarray.ndarray property)": [[164, "tvm.runtime.ndarray.NDArray.dtype", false]], "dtype (tvm.te.tensorslice property)": [[169, "tvm.te.TensorSlice.dtype", false]], "dummyglobalinfo (class in tvm.ir)": [[144, "tvm.ir.DummyGlobalInfo", false]], "dump_pruned() (tvm.meta_schedule.database method)": [[145, "tvm.meta_schedule.Database.dump_pruned", false]], "duration (class in tvm.runtime.profiling)": [[165, "tvm.runtime.profiling.Duration", false]], "dynamic_strided_slice() (in module tvm.relax.op)": [[149, "tvm.relax.op.dynamic_strided_slice", false]], "dynamictostatic() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.DynamicToStatic", false]], "dynamo_capture_subgraphs() (in module tvm.relax.frontend.torch)": [[148, "tvm.relax.frontend.torch.dynamo_capture_subgraphs", false]], "dyntensortype (class in tvm.relax)": [[150, "tvm.relax.DynTensorType", false]], "edge() (tvm.contrib.relay_viz.dot.dotgraph method)": [[137, "tvm.contrib.relay_viz.dot.DotGraph.edge", false]], "edge() (tvm.contrib.relay_viz.interface.vizgraph method)": [[137, "tvm.contrib.relay_viz.interface.VizGraph.edge", false]], "edge() (tvm.contrib.relay_viz.terminal.termgraph method)": [[137, "tvm.contrib.relay_viz.terminal.TermGraph.edge", false]], "einsum() (in module tvm.relax.op)": [[149, "tvm.relax.op.einsum", false]], "einsumattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.EinsumAttrs", false]], "eliminatecommonsubexpr() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.EliminateCommonSubexpr", false]], "eliminatecommonsubexpr() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.EliminateCommonSubexpr", false]], "emit() (tvm.relax.block_builder.blockbuilder method)": [[147, "tvm.relax.block_builder.BlockBuilder.emit", false]], "emit_call() (tvm.relax.execbuilder method)": [[150, "tvm.relax.ExecBuilder.emit_call", false]], "emit_func_output() (tvm.relax.block_builder.blockbuilder method)": [[147, "tvm.relax.block_builder.BlockBuilder.emit_func_output", false]], "emit_goto() (tvm.relax.execbuilder method)": [[150, "tvm.relax.ExecBuilder.emit_goto", false]], "emit_if() (tvm.relax.execbuilder method)": [[150, "tvm.relax.ExecBuilder.emit_if", false]], "emit_normalized() (tvm.relax.block_builder.blockbuilder method)": [[147, "tvm.relax.block_builder.BlockBuilder.emit_normalized", false]], "emit_output() (tvm.relax.block_builder.blockbuilder method)": [[147, "tvm.relax.block_builder.BlockBuilder.emit_output", false]], "emit_ret() (tvm.relax.execbuilder method)": [[150, "tvm.relax.ExecBuilder.emit_ret", false]], "emit_te() (tvm.relax.block_builder.blockbuilder method)": [[147, "tvm.relax.block_builder.BlockBuilder.emit_te", false]], "empty() (in module tvm.runtime.ndarray)": [[164, "tvm.runtime.ndarray.empty", false]], "empty() (tvm.runtime.disco.session method)": [[163, "tvm.runtime.disco.Session.empty", false]], "emptypolicy (class in tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.EmptyPolicy", false]], "enabled_targets() (in module tvm.relay.testing)": [[159, "tvm.relay.testing.enabled_targets", false]], "encode() (in module tvm.autotvm.record)": [[136, "tvm.autotvm.record.encode", false]], "end_checkpoint() (in module tvm.relax.op.grad)": [[149, "tvm.relax.op.grad.end_checkpoint", false]], "end_profile_intrinsic() (in module tvm.tir)": [[173, "tvm.tir.end_profile_intrinsic", false]], "end_scope() (tvm.relax.block_builder.blockbuilder method)": [[147, "tvm.relax.block_builder.BlockBuilder.end_scope", false]], "ensure_zero_offset() (in module tvm.relax.op.memory)": [[149, "tvm.relax.op.memory.ensure_zero_offset", false]], "enter_pass_ctx() (tvm.instrument.passinstrument method)": [[143, "tvm.instrument.PassInstrument.enter_pass_ctx", false]], "enter_postproc() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.enter_postproc", false]], "env_threads() (tvm.te.stage method)": [[169, "tvm.te.Stage.env_threads", false]], "envfunc (class in tvm.ir)": [[144, "tvm.ir.EnvFunc", false]], "eq (class in tvm.tir)": [[173, "tvm.tir.EQ", false]], "equal() (in module tvm.relax.op)": [[149, "tvm.relax.op.equal", false]], "equal_const_int() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.equal_const_int", false]], "erase_to_well_defined() (in module tvm.relax.analysis)": [[146, "tvm.relax.analysis.erase_to_well_defined", false]], "erf() (in module tvm.relax.op)": [[149, "tvm.relax.op.erf", false]], "erf() (in module tvm.te)": [[169, "tvm.te.erf", false]], "erf() (in module tvm.tir)": [[173, "tvm.tir.erf", false]], "estimate_memory_usage() (in module tvm.relax.analysis)": [[146, "tvm.relax.analysis.estimate_memory_usage", false]], "estimate_tir_flops() (in module tvm.tir.analysis.analysis)": [[170, "tvm.tir.analysis.analysis.estimate_tir_flops", false]], "etaexpand() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.EtaExpand", false]], "evaluate (class in tvm.tir)": [[173, "tvm.tir.Evaluate", false]], "evaluate() (tvm.relay.backend.interpreter.executor method)": [[153, "tvm.relay.backend.interpreter.Executor.evaluate", false]], "evolutionary_search() (tvm.auto_scheduler.sketchpolicy method)": [[135, "tvm.auto_scheduler.SketchPolicy.evolutionary_search", false]], "ewise_fma() (in module tvm.relax.op)": [[149, "tvm.relax.op.ewise_fma", false]], "execbuilder (class in tvm.relax)": [[150, "tvm.relax.ExecBuilder", false]], "executable (class in tvm.relax)": [[150, "tvm.relax.Executable", false]], "executor (class in tvm.relay.backend.interpreter)": [[153, "tvm.relay.backend.interpreter.Executor", false]], "exit_pass_ctx() (tvm.instrument.passinstrument method)": [[143, "tvm.instrument.PassInstrument.exit_pass_ctx", false]], "exp() (in module tvm.relax.op)": [[149, "tvm.relax.op.exp", false]], "exp() (in module tvm.te)": [[169, "tvm.te.exp", false]], "exp() (in module tvm.tir)": [[173, "tvm.tir.exp", false]], "exp10() (in module tvm.tir)": [[173, "tvm.tir.exp10", false]], "exp2() (in module tvm.tir)": [[173, "tvm.tir.exp2", false]], "expand_dims() (in module tvm.relax.op)": [[149, "tvm.relax.op.expand_dims", false]], "expanddimsattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.ExpandDimsAttrs", false]], "expandmatmulofsum() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.ExpandMatmulOfSum", false]], "expandtuplearguments() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.ExpandTupleArguments", false]], "export_library() (tvm.relax.executable method)": [[150, "tvm.relax.Executable.export_library", false]], "expr (in module tvm.relax)": [[150, "tvm.relax.Expr", false]], "expr (in module tvm.relax.op.grad)": [[149, "tvm.relax.op.grad.Expr", false]], "expr (in module tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.Expr", false]], "expr (in module tvm.relay.nn)": [[158, "tvm.relay.nn.Expr", false]], "expr_deep_equal() (in module tvm.tir.analysis.analysis)": [[170, "tvm.tir.analysis.analysis.expr_deep_equal", false]], "exprfunctor (class in tvm.relax)": [[150, "tvm.relax.ExprFunctor", false]], "exprpattern (class in tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.ExprPattern", false]], "exprrv (in module tvm.tir.schedule)": [[171, "tvm.tir.schedule.ExprRV", false]], "ext_dev() (in module tvm.runtime.ndarray)": [[164, "tvm.runtime.ndarray.ext_dev", false]], "ext_dev() (tvm.rpc.rpcsession method)": [[162, "tvm.rpc.RPCSession.ext_dev", false]], "extern() (in module tvm.relax)": [[150, "tvm.relax.extern", false]], "extern() (in module tvm.te)": [[169, "tvm.te.extern", false]], "extern_primfunc() (in module tvm.te)": [[169, "tvm.te.extern_primfunc", false]], "externfunc (class in tvm.relax)": [[150, "tvm.relax.ExternFunc", false]], "externop (class in tvm.te)": [[169, "tvm.te.ExternOp", false]], "extract_from() (tvm.meta_schedule.featureextractor method)": [[145, "tvm.meta_schedule.FeatureExtractor.extract_from", false]], "extract_fused_functions() (in module tvm.relay.analysis)": [[152, "tvm.relay.analysis.extract_fused_functions", false]], "extract_intermdeiate_expr() (in module tvm.relay.analysis)": [[152, "tvm.relay.analysis.extract_intermdeiate_expr", false]], "extract_tasks() (in module tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.extract_tasks", false]], "extractedtask (class in tvm.meta_schedule)": [[145, "tvm.meta_schedule.ExtractedTask", false]], "extractprimfuncconstants() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.ExtractPrimFuncConstants", false]], "eye() (in module tvm.relax.op)": [[149, "tvm.relax.op.eye", false]], "eye_like() (in module tvm.relax.op)": [[149, "tvm.relax.op.eye_like", false]], "f() (tvm.relax.execbuilder method)": [[150, "tvm.relax.ExecBuilder.f", false]], "factor_of() (tvm.tir.layout method)": [[173, "tvm.tir.Layout.factor_of", false]], "fakequantizationtointeger() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.FakeQuantizationToInteger", false]], "fallback_split() (tvm.autotvm.task.space.fallbackconfigentity method)": [[136, "tvm.autotvm.task.space.FallbackConfigEntity.fallback_split", false]], "fallback_with_reference_log() (tvm.autotvm.task.space.fallbackconfigentity method)": [[136, "tvm.autotvm.task.space.FallbackConfigEntity.fallback_with_reference_log", false]], "fallbackconfigentity (class in tvm.autotvm.task.space)": [[136, "tvm.autotvm.task.space.FallbackConfigEntity", false]], "fallbackcontext (class in tvm.autotvm.task.dispatcher)": [[136, "tvm.autotvm.task.dispatcher.FallbackContext", false]], "fast_softmax() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.fast_softmax", false]], "fast_softmax() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.fast_softmax", false]], "fastmath() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.FastMath", false]], "fastmathtransform (class in tvm.relax.transform)": [[151, "tvm.relax.transform.FastMathTransform", false]], "feature (class in tvm.relay.analysis)": [[152, "tvm.relay.analysis.Feature", false]], "featureextractor (class in tvm.meta_schedule)": [[145, "tvm.meta_schedule.FeatureExtractor", false]], "fewshottuning() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.FewShotTuning", false]], "fgraph (tvm.relay.analysis.feature attribute)": [[152, "tvm.relay.analysis.Feature.fGraph", false]], "fifo_buffer() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.fifo_buffer", false]], "fifo_buffer() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.fifo_buffer", false]], "filelock (class in tvm.contrib.utils)": [[137, "tvm.contrib.utils.FileLock", false]], "filelock() (in module tvm.contrib.utils)": [[137, "tvm.contrib.utils.filelock", false]], "filter() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.Filter", false]], "finalize() (tvm.relax.block_builder.blockbuilder method)": [[147, "tvm.relax.block_builder.BlockBuilder.finalize", false]], "find_anchor_block() (in module tvm.tir.analysis.analysis)": [[170, "tvm.tir.analysis.analysis.find_anchor_block", false]], "find_clang() (in module tvm.contrib.clang)": [[137, "tvm.contrib.clang.find_clang", false]], "find_cuda_path() (in module tvm.contrib.nvcc)": [[137, "tvm.contrib.nvcc.find_cuda_path", false]], "find_lld() (in module tvm.contrib.rocm)": [[137, "tvm.contrib.rocm.find_lld", false]], "find_rocm_path() (in module tvm.contrib.rocm)": [[137, "tvm.contrib.rocm.find_rocm_path", false]], "firstordergradient() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.FirstOrderGradient", false]], "flatten() (in module tvm.relax.op)": [[149, "tvm.relax.op.flatten", false]], "flatten() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.flatten", false]], "flattenatrousconv() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.FlattenAtrousConv", false]], "flattenbuffer() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.FlattenBuffer", false]], "flexibleshapedispatch (class in tvm.relay.transform)": [[160, "tvm.relay.transform.FlexibleShapeDispatch", false]], "flip() (in module tvm.relax.op)": [[149, "tvm.relax.op.flip", false]], "flipattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.FlipAttrs", false]], "floatimm (class in tvm.tir)": [[173, "tvm.tir.FloatImm", false]], "floor() (in module tvm.relax.op)": [[149, "tvm.relax.op.floor", false]], "floor() (in module tvm.te)": [[169, "tvm.te.floor", false]], "floor() (in module tvm.tir)": [[173, "tvm.tir.floor", false]], "floor_divide() (in module tvm.relax.op)": [[149, "tvm.relax.op.floor_divide", false]], "floor_mod() (in module tvm.relax.op)": [[149, "tvm.relax.op.floor_mod", false]], "floordiv (class in tvm.tir)": [[173, "tvm.tir.FloorDiv", false]], "floordiv() (in module tvm.te)": [[169, "tvm.te.floordiv", false]], "floordiv() (in module tvm.tir)": [[173, "tvm.tir.floordiv", false]], "floormod (class in tvm.tir)": [[173, "tvm.tir.FloorMod", false]], "floormod() (in module tvm.te)": [[169, "tvm.te.floormod", false]], "floormod() (in module tvm.tir)": [[173, "tvm.tir.floormod", false]], "flopcalculationerror": [[136, "tvm.autotvm.task.task.FlopCalculationError", false]], "fmatch (tvm.relay.analysis.feature attribute)": [[152, "tvm.relay.analysis.Feature.fMatch", false]], "fmod() (in module tvm.te)": [[169, "tvm.te.fmod", false]], "fmod() (in module tvm.tir)": [[173, "tvm.tir.fmod", false]], "foldconstant() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.FoldConstant", false]], "foldconstant() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.FoldConstant", false]], "foldconstantexpr() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.FoldConstantExpr", false]], "foldexplicitpadding() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.FoldExplicitPadding", false]], "foldscaleaxis() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.FoldScaleAxis", false]], "for (class in tvm.tir)": [[173, "tvm.tir.For", false]], "forcenarrowindextoint32() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.ForceNarrowIndexToInt32", false]], "fork_seed() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.fork_seed", false]], "forkind (class in tvm.tir)": [[173, "tvm.tir.ForKind", false]], "forward_index() (tvm.tir.bijectivelayout method)": [[173, "tvm.tir.BijectiveLayout.forward_index", false]], "forward_shape() (tvm.tir.bijectivelayout method)": [[173, "tvm.tir.BijectiveLayout.forward_shape", false]], "forwardfoldscaleaxis() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.ForwardFoldScaleAxis", false]], "fp8computelegalize() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.FP8ComputeLegalize", false]], "fp8storagelegalize() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.FP8StorageLegalize", false]], "free_symbolic_vars() (in module tvm.relax.analysis)": [[146, "tvm.relax.analysis.free_symbolic_vars", false]], "free_type_vars() (in module tvm.relay.analysis)": [[152, "tvm.relay.analysis.free_type_vars", false]], "free_vars() (in module tvm.relax.analysis)": [[146, "tvm.relax.analysis.free_vars", false]], "free_vars() (in module tvm.relay.analysis)": [[152, "tvm.relay.analysis.free_vars", false]], "from_caffe() (in module tvm.relay.frontend)": [[155, "tvm.relay.frontend.from_caffe", false]], "from_caffe2() (in module tvm.relay.frontend)": [[155, "tvm.relay.frontend.from_caffe2", false]], "from_callable() (tvm.dlight.schedulerule static method)": [[138, "tvm.dlight.ScheduleRule.from_callable", false]], "from_coreml() (in module tvm.relay.frontend)": [[155, "tvm.relay.frontend.from_coreml", false]], "from_darknet() (in module tvm.relay.frontend)": [[155, "tvm.relay.frontend.from_darknet", false]], "from_device() (tvm.target.target static method)": [[168, "tvm.target.Target.from_device", false]], "from_dlpack() (in module tvm.runtime.ndarray)": [[164, "tvm.runtime.ndarray.from_dlpack", false]], "from_exported_program() (in module tvm.relax.frontend.torch)": [[148, "tvm.relax.frontend.torch.from_exported_program", false]], "from_expr() (tvm.ir.irmodule static method)": [[144, "tvm.ir.IRModule.from_expr", false]], "from_func() (tvm.tir.indexmap static method)": [[173, "tvm.tir.IndexMap.from_func", false]], "from_func_with_separators() (tvm.tir.indexmap static method)": [[173, "tvm.tir.IndexMap.from_func_with_separators", false]], "from_fx() (in module tvm.relax.frontend.torch)": [[148, "tvm.relax.frontend.torch.from_fx", false]], "from_json() (tvm.runtime.profiling.report class method)": [[165, "tvm.runtime.profiling.Report.from_json", false]], "from_json_dict() (tvm.autotvm.task.space.configentity static method)": [[136, "tvm.autotvm.task.space.ConfigEntity.from_json_dict", false]], "from_keras() (in module tvm.relay.frontend)": [[155, "tvm.relay.frontend.from_keras", false]], "from_min_extent() (tvm.ir.range static method)": [[144, "tvm.ir.Range.from_min_extent", false]], "from_mxnet() (in module tvm.relay.frontend)": [[155, "tvm.relay.frontend.from_mxnet", false]], "from_oneflow() (in module tvm.relay.frontend)": [[155, "tvm.relay.frontend.from_oneflow", false]], "from_onnx() (in module tvm.relax.frontend.onnx)": [[148, "tvm.relax.frontend.onnx.from_onnx", false]], "from_onnx() (in module tvm.relay.frontend)": [[155, "tvm.relay.frontend.from_onnx", false]], "from_paddle() (in module tvm.relay.frontend)": [[155, "tvm.relay.frontend.from_paddle", false]], "from_pytorch() (in module tvm.relay.frontend)": [[155, "tvm.relay.frontend.from_pytorch", false]], "from_stablehlo() (in module tvm.relax.frontend.stablehlo)": [[148, "tvm.relax.frontend.stablehlo.from_stablehlo", false]], "from_tensorflow() (in module tvm.relay.frontend)": [[155, "tvm.relay.frontend.from_tensorflow", false]], "from_tflite() (in module tvm.relay.frontend)": [[155, "tvm.relay.frontend.from_tflite", false]], "full() (in module tvm.relax.op)": [[149, "tvm.relax.op.full", false]], "full_like() (in module tvm.relax.op)": [[149, "tvm.relax.op.full_like", false]], "fully_connected_inference() (in module tvm.contrib.nnpack)": [[137, "tvm.contrib.nnpack.fully_connected_inference", false]], "func_working_on (tvm.tir.schedule.schedule property)": [[171, "tvm.tir.schedule.Schedule.func_working_on", false]], "funcstructinfo (class in tvm.relax)": [[150, "tvm.relax.FuncStructInfo", false]], "function (class in tvm.relax)": [[150, "tvm.relax.Function", false]], "function() (tvm.relax.block_builder.blockbuilder method)": [[147, "tvm.relax.block_builder.BlockBuilder.function", false]], "function() (tvm.relax.execbuilder method)": [[150, "tvm.relax.ExecBuilder.function", false]], "function_pass() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.function_pass", false]], "function_pass() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.function_pass", false]], "functionpass (class in tvm.relax.transform)": [[151, "tvm.relax.transform.FunctionPass", false]], "functionpattern (class in tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.FunctionPattern", false]], "functions_items() (tvm.ir.irmodule method)": [[144, "tvm.ir.IRModule.functions_items", false]], "functionscope (class in tvm.relax.block_builder)": [[147, "tvm.relax.block_builder.FunctionScope", false]], "functype (class in tvm.ir)": [[144, "tvm.ir.FuncType", false]], "fuse() (tvm.te.stage method)": [[169, "tvm.te.Stage.fuse", false]], "fuse() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.fuse", false]], "fuseops() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.FuseOps", false]], "fuseops() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.FuseOps", false]], "fuseopsbypattern() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.FuseOpsByPattern", false]], "fusetir() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.FuseTIR", false]], "fusetransposematmul (class in tvm.relax.transform)": [[151, "tvm.relax.transform.FuseTransposeMatmul", false]], "fusionpattern (class in tvm.relax.transform)": [[151, "tvm.relax.transform.FusionPattern", false]], "gather_elements() (in module tvm.relax.op)": [[149, "tvm.relax.op.gather_elements", false]], "gather_nd() (in module tvm.relax.op)": [[149, "tvm.relax.op.gather_nd", false]], "gather_to_worker0() (tvm.runtime.disco.session method)": [[163, "tvm.runtime.disco.Session.gather_to_worker0", false]], "gatuner (class in tvm.autotvm.tuner)": [[136, "tvm.autotvm.tuner.GATuner", false]], "ge (class in tvm.tir)": [[173, "tvm.tir.GE", false]], "gelu() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.gelu", false]], "gelu_tanh() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.gelu_tanh", false]], "generate_design_space() (tvm.meta_schedule.spacegenerator method)": [[145, "tvm.meta_schedule.SpaceGenerator.generate_design_space", false]], "generate_design_space() (tvm.meta_schedule.tunecontext method)": [[145, "tvm.meta_schedule.TuneContext.generate_design_space", false]], "generate_measure_candidates() (tvm.meta_schedule.searchstrategy method)": [[145, "tvm.meta_schedule.SearchStrategy.generate_measure_candidates", false]], "generate_measure_candidates() (tvm.meta_schedule.tunecontext method)": [[145, "tvm.meta_schedule.TuneContext.generate_measure_candidates", false]], "generate_sketches() (tvm.auto_scheduler.sketchpolicy method)": [[135, "tvm.auto_scheduler.SketchPolicy.generate_sketches", false]], "generic_func() (in module tvm.target)": [[168, "tvm.target.generic_func", false]], "genericfunc (class in tvm.target)": [[168, "tvm.target.GenericFunc", false]], "get() (in module tvm.relay.backend.te_compiler)": [[153, "tvm.relay.backend.te_compiler.get", false]], "get() (in module tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.get", false]], "get() (tvm.autotvm.task.space.configspace method)": [[136, "tvm.autotvm.task.space.ConfigSpace.get", false]], "get() (tvm.autotvm.task.topi_integration.taskextractenv static method)": [[136, "tvm.autotvm.task.topi_integration.TaskExtractEnv.get", false]], "get() (tvm.ir.dictattrs method)": [[144, "tvm.ir.DictAttrs.get", false]], "get() (tvm.ir.envfunc static method)": [[144, "tvm.ir.EnvFunc.get", false]], "get() (tvm.ir.map method)": [[144, "tvm.ir.Map.get", false]], "get() (tvm.ir.op static method)": [[144, "tvm.ir.Op.get", false]], "get() (tvm.meta_schedule.profiler method)": [[145, "tvm.meta_schedule.Profiler.get", false]], "get() (tvm.relax.block_builder.blockbuilder method)": [[147, "tvm.relax.block_builder.BlockBuilder.get", false]], "get() (tvm.relax.execbuilder method)": [[150, "tvm.relax.ExecBuilder.get", false]], "get() (tvm.tir.schedule.instructionkind static method)": [[171, "tvm.tir.schedule.InstructionKind.get", false]], "get() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.get", false]], "get() (tvm.tir.tensorintrin static method)": [[173, "tvm.tir.TensorIntrin.get", false]], "get_1d_indices() (in module tvm.topi.image)": [[175, "tvm.topi.image.get_1d_indices", false]], "get_1d_pixel() (in module tvm.topi.image)": [[175, "tvm.topi.image.get_1d_pixel", false]], "get_2d_indices() (in module tvm.topi.image)": [[175, "tvm.topi.image.get_2d_indices", false]], "get_2d_pixel() (in module tvm.topi.image)": [[175, "tvm.topi.image.get_2d_pixel", false]], "get_3d_indices() (in module tvm.topi.image)": [[175, "tvm.topi.image.get_3d_indices", false]], "get_3d_pixel() (in module tvm.topi.image)": [[175, "tvm.topi.image.get_3d_pixel", false]], "get_active_lane_mask() (in module tvm.tir)": [[173, "tvm.tir.get_active_lane_mask", false]], "get_all_tuning_records() (tvm.meta_schedule.database method)": [[145, "tvm.meta_schedule.Database.get_all_tuning_records", false]], "get_attr() (tvm.ir.irmodule method)": [[144, "tvm.ir.IRModule.get_attr", false]], "get_attr() (tvm.ir.op method)": [[144, "tvm.ir.Op.get_attr", false]], "get_block() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.get_block", false]], "get_block_access_region() (in module tvm.tir.analysis.analysis)": [[170, "tvm.tir.analysis.analysis.get_block_access_region", false]], "get_block_read_write_region() (in module tvm.tir.analysis.analysis)": [[170, "tvm.tir.analysis.analysis.get_block_read_write_region", false]], "get_block_scope() (tvm.tir.blockdependenceinfo method)": [[173, "tvm.tir.BlockDependenceInfo.get_block_scope", false]], "get_block_scope() (tvm.tir.schedule.schedulestate method)": [[171, "tvm.tir.schedule.ScheduleState.get_block_scope", false]], "get_calibration_data() (in module tvm.relay.analysis)": [[152, "tvm.relay.analysis.get_calibration_data", false]], "get_cc() (in module tvm.contrib.cc)": [[137, "tvm.contrib.cc.get_cc", false]], "get_child_blocks() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.get_child_blocks", false]], "get_classifier() (in module tvm.relay.testing.vgg)": [[159, "tvm.relay.testing.vgg.get_classifier", false]], "get_closest_index() (in module tvm.topi.image)": [[175, "tvm.topi.image.get_closest_index", false]], "get_config() (in module tvm.autotvm.task.task)": [[136, "tvm.autotvm.task.task.get_config", false]], "get_const_int() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.get_const_int", false]], "get_const_tuple() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.get_const_tuple", false]], "get_constructor() (tvm.ir.irmodule method)": [[144, "tvm.ir.IRModule.get_constructor", false]], "get_consumers() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.get_consumers", false]], "get_ctor() (tvm.relay.testing.prelude method)": [[159, "tvm.relay.testing.Prelude.get_ctor", false]], "get_ctor_static() (tvm.relay.testing.prelude method)": [[159, "tvm.relay.testing.Prelude.get_ctor_static", false]], "get_cuda_version() (in module tvm.contrib.nvcc)": [[137, "tvm.contrib.nvcc.get_cuda_version", false]], "get_current_trace() (tvm.transform.passcontext method)": [[176, "tvm.transform.PassContext.get_current_trace", false]], "get_decision() (tvm.tir.schedule.trace method)": [[171, "tvm.tir.schedule.Trace.get_decision", false]], "get_deps_by_dst() (tvm.tir.schedule.blockscope method)": [[171, "tvm.tir.schedule.BlockScope.get_deps_by_dst", false]], "get_deps_by_src() (tvm.tir.schedule.blockscope method)": [[171, "tvm.tir.schedule.BlockScope.get_deps_by_src", false]], "get_device() (in module tvm.contrib.graph_executor)": [[141, "tvm.contrib.graph_executor.get_device", false]], "get_exec() (tvm.relay.backend.vm.vmcompiler method)": [[153, "tvm.relay.backend.vm.VMCompiler.get_exec", false]], "get_factors() (in module tvm.autotvm.task.space)": [[136, "tvm.autotvm.task.space.get_factors", false]], "get_feature() (in module tvm.relay.testing.vgg)": [[159, "tvm.relay.testing.vgg.get_feature", false]], "get_flatten_feature() (tvm.autotvm.task.space.configentity method)": [[136, "tvm.autotvm.task.space.ConfigEntity.get_flatten_feature", false]], "get_flattened_buffer() (tvm.tir.buffer method)": [[173, "tvm.tir.Buffer.get_flattened_buffer", false]], "get_function() (tvm.rpc.rpcsession method)": [[162, "tvm.rpc.RPCSession.get_function", false]], "get_global_func() (tvm.runtime.disco.session method)": [[163, "tvm.runtime.disco.Session.get_global_func", false]], "get_global_symbol_section_map() (in module tvm.contrib.cc)": [[137, "tvm.contrib.cc.get_global_symbol_section_map", false]], "get_global_symbol_section_map() (in module tvm.contrib.ndk)": [[137, "tvm.contrib.ndk.get_global_symbol_section_map", false]], "get_global_type_var() (tvm.ir.irmodule method)": [[144, "tvm.ir.IRModule.get_global_type_var", false]], "get_global_type_vars() (tvm.ir.irmodule method)": [[144, "tvm.ir.IRModule.get_global_type_vars", false]], "get_global_var() (tvm.ir.irmodule method)": [[144, "tvm.ir.IRModule.get_global_var", false]], "get_global_var() (tvm.relay.testing.prelude method)": [[159, "tvm.relay.testing.Prelude.get_global_var", false]], "get_global_var_static() (tvm.relay.testing.prelude method)": [[159, "tvm.relay.testing.Prelude.get_global_var_static", false]], "get_global_vars() (tvm.ir.irmodule method)": [[144, "tvm.ir.IRModule.get_global_vars", false]], "get_init_state() (tvm.auto_scheduler.computedag method)": [[135, "tvm.auto_scheduler.ComputeDAG.get_init_state", false]], "get_input() (tvm.contrib.graph_executor.graphmodule method)": [[141, "tvm.contrib.graph_executor.GraphModule.get_input", false]], "get_input_index() (tvm.contrib.graph_executor.graphmodule method)": [[141, "tvm.contrib.graph_executor.GraphModule.get_input_index", false]], "get_input_info() (tvm.contrib.graph_executor.graphmodule method)": [[141, "tvm.contrib.graph_executor.GraphModule.get_input_info", false]], "get_int() (tvm.ir.attrs method)": [[144, "tvm.ir.Attrs.get_int", false]], "get_int_tuple() (tvm.ir.attrs method)": [[144, "tvm.ir.Attrs.get_int_tuple", false]], "get_inx() (in module tvm.topi.image)": [[175, "tvm.topi.image.get_inx", false]], "get_kind_attr() (tvm.target.target method)": [[168, "tvm.target.Target.get_kind_attr", false]], "get_loops() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.get_loops", false]], "get_name() (tvm.relay.testing.prelude method)": [[159, "tvm.relay.testing.Prelude.get_name", false]], "get_name_static() (tvm.relay.testing.prelude method)": [[159, "tvm.relay.testing.Prelude.get_name_static", false]], "get_native_generic_func() (in module tvm.target)": [[168, "tvm.target.get_native_generic_func", false]], "get_net() (in module tvm.relay.testing.dcgan)": [[159, "tvm.relay.testing.dcgan.get_net", false]], "get_net() (in module tvm.relay.testing.inception_v3)": [[159, "tvm.relay.testing.inception_v3.get_net", false]], "get_net() (in module tvm.relay.testing.lstm)": [[159, "tvm.relay.testing.lstm.get_net", false]], "get_net() (in module tvm.relay.testing.mlp)": [[159, "tvm.relay.testing.mlp.get_net", false]], "get_net() (in module tvm.relay.testing.resnet)": [[159, "tvm.relay.testing.resnet.get_net", false]], "get_net() (in module tvm.relay.testing.squeezenet)": [[159, "tvm.relay.testing.squeezenet.get_net", false]], "get_net() (in module tvm.relay.testing.vgg)": [[159, "tvm.relay.testing.vgg.get_net", false]], "get_next_index() (tvm.autotvm.task.space.configspace method)": [[136, "tvm.autotvm.task.space.ConfigSpace.get_next_index", false]], "get_node_edges() (tvm.contrib.relay_viz.interface.defaultvizparser method)": [[137, "tvm.contrib.relay_viz.interface.DefaultVizParser.get_node_edges", false]], "get_node_edges() (tvm.contrib.relay_viz.interface.vizparser method)": [[137, "tvm.contrib.relay_viz.interface.VizParser.get_node_edges", false]], "get_node_edges() (tvm.contrib.relay_viz.terminal.termvizparser method)": [[137, "tvm.contrib.relay_viz.terminal.TermVizParser.get_node_edges", false]], "get_num_inputs() (tvm.contrib.graph_executor.graphmodule method)": [[141, "tvm.contrib.graph_executor.GraphModule.get_num_inputs", false]], "get_num_output() (tvm.autotvm.task.space.annotatespace static method)": [[136, "tvm.autotvm.task.space.AnnotateSpace.get_num_output", false]], "get_num_output() (tvm.autotvm.task.space.otheroptionspace static method)": [[136, "tvm.autotvm.task.space.OtherOptionSpace.get_num_output", false]], "get_num_output() (tvm.autotvm.task.space.reorderspace static method)": [[136, "tvm.autotvm.task.space.ReorderSpace.get_num_output", false]], "get_num_output() (tvm.autotvm.task.space.splitspace static method)": [[136, "tvm.autotvm.task.space.SplitSpace.get_num_output", false]], "get_num_output() (tvm.autotvm.task.space.transformspace static method)": [[136, "tvm.autotvm.task.space.TransformSpace.get_num_output", false]], "get_num_output() (tvm.autotvm.task.space.virtualaxis static method)": [[136, "tvm.autotvm.task.space.VirtualAxis.get_num_output", false]], "get_num_outputs() (tvm.contrib.graph_executor.graphmodule method)": [[141, "tvm.contrib.graph_executor.GraphModule.get_num_outputs", false]], "get_other_option() (tvm.autotvm.task.space.configentity method)": [[136, "tvm.autotvm.task.space.ConfigEntity.get_other_option", false]], "get_output() (tvm.contrib.graph_executor.graphmodule method)": [[141, "tvm.contrib.graph_executor.GraphModule.get_output", false]], "get_output_blocks() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.get_output_blocks", false]], "get_output_index() (tvm.contrib.graph_executor.graphmodule method)": [[141, "tvm.contrib.graph_executor.GraphModule.get_output_index", false]], "get_output_info() (tvm.contrib.graph_executor.graphmodule method)": [[141, "tvm.contrib.graph_executor.GraphModule.get_output_info", false]], "get_outputs() (tvm.relax.virtualmachine method)": [[150, "tvm.relax.VirtualMachine.get_outputs", false]], "get_outputs() (tvm.runtime.relax_vm.virtualmachine method)": [[166, "tvm.runtime.relax_vm.VirtualMachine.get_outputs", false]], "get_packed_func() (tvm.target.genericfunc method)": [[168, "tvm.target.GenericFunc.get_packed_func", false]], "get_pad_tuple() (in module tvm.topi.image)": [[175, "tvm.topi.image.get_pad_tuple", false]], "get_pad_tuple() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.get_pad_tuple", false]], "get_pad_tuple1d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.get_pad_tuple1d", false]], "get_pad_tuple1d() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.get_pad_tuple1d", false]], "get_pad_tuple2d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.get_pad_tuple2d", false]], "get_pad_tuple3d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.get_pad_tuple3d", false]], "get_pad_tuple3d() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.get_pad_tuple3d", false]], "get_pad_tuple_generic() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.get_pad_tuple_generic", false]], "get_params() (tvm.relay.backend.vm.vmcompiler method)": [[153, "tvm.relay.backend.vm.VMCompiler.get_params", false]], "get_pipeline() (in module tvm.relax)": [[150, "tvm.relax.get_pipeline", false]], "get_pow2s() (in module tvm.autotvm.task.space)": [[136, "tvm.autotvm.task.space.get_pow2s", false]], "get_prim_func_arg_and_result_memory_constraints() (in module tvm.tir.analysis.analysis)": [[170, "tvm.tir.analysis.analysis.get_prim_func_arg_and_result_memory_constraints", false]], "get_producers() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.get_producers", false]], "get_rand_index() (tvm.autotvm.task.space.configspace method)": [[136, "tvm.autotvm.task.space.ConfigSpace.get_rand_index", false]], "get_region() (tvm.relay.analysis.annotatedregionset method)": [[152, "tvm.relay.analysis.AnnotatedRegionSet.get_region", false]], "get_shape() (in module tvm.relay.backend.te_compiler)": [[153, "tvm.relay.backend.te_compiler.get_shape", false]], "get_shape_from_rewritten_layout() (in module tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.get_shape_from_rewritten_layout", false]], "get_shape_of() (in module tvm.relax)": [[150, "tvm.relax.get_shape_of", false]], "get_sref() (tvm.tir.blockdependenceinfo method)": [[173, "tvm.tir.BlockDependenceInfo.get_sref", false]], "get_sref() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.get_sref", false]], "get_sref() (tvm.tir.schedule.schedulestate method)": [[171, "tvm.tir.schedule.ScheduleState.get_sref", false]], "get_static_type() (in module tvm.relax.analysis)": [[146, "tvm.relax.analysis.get_static_type", false]], "get_str() (tvm.ir.attrs method)": [[144, "tvm.ir.Attrs.get_str", false]], "get_target_by_dump_machine() (in module tvm.contrib.cc)": [[137, "tvm.contrib.cc.get_target_by_dump_machine", false]], "get_target_default() (tvm.auto_scheduler.layoutrewriteoption static method)": [[135, "tvm.auto_scheduler.LayoutRewriteOption.get_target_default", false]], "get_target_device_type() (tvm.target.target method)": [[168, "tvm.target.Target.get_target_device_type", false]], "get_tasks() (tvm.autotvm.task.topi_integration.taskextractenv method)": [[136, "tvm.autotvm.task.topi_integration.TaskExtractEnv.get_tasks", false]], "get_tensor_ctor_static() (tvm.relay.testing.prelude method)": [[159, "tvm.relay.testing.Prelude.get_tensor_ctor_static", false]], "get_top_k() (tvm.meta_schedule.database method)": [[145, "tvm.meta_schedule.Database.get_top_k", false]], "get_total_mac_number() (in module tvm.relay.analysis)": [[152, "tvm.relay.analysis.get_total_mac_number", false]], "get_trace_stack() (tvm.transform.passcontext method)": [[176, "tvm.transform.PassContext.get_trace_stack", false]], "get_trace_stack_size() (tvm.transform.passcontext method)": [[176, "tvm.transform.PassContext.get_trace_stack_size", false]], "get_tuning_api_database() (tvm.transform.passcontext method)": [[176, "tvm.transform.PassContext.get_tuning_api_database", false]], "get_type() (tvm.relay.testing.prelude method)": [[159, "tvm.relay.testing.Prelude.get_type", false]], "get_type_static() (tvm.relay.testing.prelude method)": [[159, "tvm.relay.testing.Prelude.get_type_static", false]], "get_unique_name() (tvm.relax.block_builder.blockbuilder method)": [[147, "tvm.relax.block_builder.BlockBuilder.get_unique_name", false]], "get_valid_counts() (in module tvm.relay.vision)": [[161, "tvm.relay.vision.get_valid_counts", false]], "get_valid_implementations() (in module tvm.relay.backend.te_compiler)": [[153, "tvm.relay.backend.te_compiler.get_valid_implementations", false]], "get_var2val() (in module tvm.relax.analysis)": [[146, "tvm.relax.analysis.get_var2val", false]], "get_var_remap() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.get_var_remap", false]], "get_vscale_expr() (in module tvm.tir)": [[173, "tvm.tir.get_vscale_expr", false]], "get_vtcm_compaction_passes() (in module tvm.tir.analysis.analysis)": [[170, "tvm.tir.analysis.analysis.get_vtcm_compaction_passes", false]], "get_workload() (in module tvm.autotvm.task.topi_integration)": [[136, "tvm.autotvm.task.topi_integration.get_workload", false]], "get_workload() (in module tvm.relay.testing.dcgan)": [[159, "tvm.relay.testing.dcgan.get_workload", false]], "get_workload() (in module tvm.relay.testing.densenet)": [[159, "tvm.relay.testing.densenet.get_workload", false]], "get_workload() (in module tvm.relay.testing.inception_v3)": [[159, "tvm.relay.testing.inception_v3.get_workload", false]], "get_workload() (in module tvm.relay.testing.lstm)": [[159, "tvm.relay.testing.lstm.get_workload", false]], "get_workload() (in module tvm.relay.testing.mlp)": [[159, "tvm.relay.testing.mlp.get_workload", false]], "get_workload() (in module tvm.relay.testing.mobilenet)": [[159, "tvm.relay.testing.mobilenet.get_workload", false]], "get_workload() (in module tvm.relay.testing.resnet)": [[159, "tvm.relay.testing.resnet.get_workload", false]], "get_workload() (in module tvm.relay.testing.squeezenet)": [[159, "tvm.relay.testing.squeezenet.get_workload", false]], "get_workload() (in module tvm.relay.testing.vgg)": [[159, "tvm.relay.testing.vgg.get_workload", false]], "get_workload_entry() (tvm.auto_scheduler.applyhistorybest static method)": [[135, "tvm.auto_scheduler.ApplyHistoryBest.get_workload_entry", false]], "global_avg_pool1d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.global_avg_pool1d", false]], "global_avg_pool2d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.global_avg_pool2d", false]], "global_avg_pool3d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.global_avg_pool3d", false]], "global_call_count() (tvm.relay.analysis.callgraph method)": [[152, "tvm.relay.analysis.CallGraph.global_call_count", false]], "global_max_pool1d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.global_max_pool1d", false]], "global_max_pool2d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.global_max_pool2d", false]], "global_max_pool3d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.global_max_pool3d", false]], "global_pool() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.global_pool", false]], "globalinfo (class in tvm.ir)": [[144, "tvm.ir.GlobalInfo", false]], "globaltypevar (class in tvm.ir)": [[144, "tvm.ir.GlobalTypeVar", false]], "globalvar (class in tvm.ir)": [[144, "tvm.ir.GlobalVar", false]], "gpu() (in module tvm.runtime.ndarray)": [[164, "tvm.runtime.ndarray.gpu", false]], "gradient() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.Gradient", false]], "gradient() (in module tvm.relay.testing)": [[159, "tvm.relay.testing.gradient", false]], "gradient() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.gradient", false]], "gradient() (in module tvm.te)": [[169, "tvm.te.gradient", false]], "graphexecutorcodegen (class in tvm.relay.backend.graph_executor_codegen)": [[153, "tvm.relay.backend.graph_executor_codegen.GraphExecutorCodegen", false]], "graphmodule (class in tvm.contrib.graph_executor)": [[141, "tvm.contrib.graph_executor.GraphModule", false]], "greater() (in module tvm.relax.op)": [[149, "tvm.relax.op.greater", false]], "greater_equal() (in module tvm.relax.op)": [[149, "tvm.relax.op.greater_equal", false]], "grid_sample() (in module tvm.relay.image)": [[156, "tvm.relay.image.grid_sample", false]], "grid_sample() (in module tvm.topi.image)": [[175, "tvm.topi.image.grid_sample", false]], "gridsearchtuner (class in tvm.autotvm.tuner)": [[136, "tvm.autotvm.tuner.GridSearchTuner", false]], "group_conv1d_ncw() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.group_conv1d_ncw", false]], "group_conv1d_nwc() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.group_conv1d_nwc", false]], "group_conv1d_transpose_ncw() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.group_conv1d_transpose_ncw", false]], "group_conv2d_nchw() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.group_conv2d_nchw", false]], "group_conv2d_nhwc() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.group_conv2d_nhwc", false]], "group_conv2d_transpose_nchw() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.group_conv2d_transpose_nchw", false]], "group_conv3d_transpose_ncdhw() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.group_conv3d_transpose_ncdhw", false]], "group_norm() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.group_norm", false]], "group_norm() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.group_norm", false]], "group_norm() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.group_norm", false]], "gt (class in tvm.tir)": [[173, "tvm.tir.GT", false]], "hardwareparams (class in tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.HardwareParams", false]], "has_attr() (in module tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.has_attr", false]], "has_attr() (tvm.ir.op method)": [[144, "tvm.ir.Op.has_attr", false]], "has_attr() (tvm.relay.dataflow_pattern.dfpattern method)": [[154, "tvm.relay.dataflow_pattern.DFPattern.has_attr", false]], "has_dtype() (in module tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.has_dtype", false]], "has_dtype() (tvm.relay.dataflow_pattern.dfpattern method)": [[154, "tvm.relay.dataflow_pattern.DFPattern.has_dtype", false]], "has_next() (tvm.autotvm.tuner.gatuner method)": [[136, "tvm.autotvm.tuner.GATuner.has_next", false]], "has_next() (tvm.autotvm.tuner.gridsearchtuner method)": [[136, "tvm.autotvm.tuner.GridSearchTuner.has_next", false]], "has_next() (tvm.autotvm.tuner.randomtuner method)": [[136, "tvm.autotvm.tuner.RandomTuner.has_next", false]], "has_next() (tvm.autotvm.tuner.tuner method)": [[136, "tvm.autotvm.tuner.Tuner.has_next", false]], "has_next() (tvm.autotvm.tuner.xgbtuner method)": [[136, "tvm.autotvm.tuner.XGBTuner.has_next", false]], "has_reshape_pattern() (in module tvm.relax.analysis)": [[146, "tvm.relax.analysis.has_reshape_pattern", false]], "has_shape() (in module tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.has_shape", false]], "has_shape() (tvm.relay.dataflow_pattern.dfpattern method)": [[154, "tvm.relay.dataflow_pattern.DFPattern.has_shape", false]], "has_type() (in module tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.has_type", false]], "has_type() (tvm.relay.dataflow_pattern.dfpattern method)": [[154, "tvm.relay.dataflow_pattern.DFPattern.has_type", false]], "has_workload() (tvm.meta_schedule.database method)": [[145, "tvm.meta_schedule.Database.has_workload", false]], "have_cudagraph() (in module tvm.contrib.nvcc)": [[137, "tvm.contrib.nvcc.have_cudagraph", false]], "have_fp16() (in module tvm.contrib.nvcc)": [[137, "tvm.contrib.nvcc.have_fp16", false]], "have_int8() (in module tvm.contrib.nvcc)": [[137, "tvm.contrib.nvcc.have_int8", false]], "have_matrixcore() (in module tvm.contrib.rocm)": [[137, "tvm.contrib.rocm.have_matrixcore", false]], "have_tensorcore() (in module tvm.contrib.nvcc)": [[137, "tvm.contrib.nvcc.have_tensorcore", false]], "height (tvm.topi.nn.workload attribute)": [[175, "tvm.topi.nn.Workload.height", false]], "hexagon() (in module tvm.runtime.ndarray)": [[164, "tvm.runtime.ndarray.hexagon", false]], "hexagon() (in module tvm.target)": [[168, "tvm.target.hexagon", false]], "hexagon() (tvm.rpc.rpcsession method)": [[162, "tvm.rpc.RPCSession.hexagon", false]], "hint_on_device() (in module tvm.relax.op)": [[149, "tvm.relax.op.hint_on_device", false]], "hoistedconditionals (class in tvm.tir.transform)": [[174, "tvm.tir.transform.HoistedConditionals", false]], "hoistedletbindings (class in tvm.tir.transform)": [[174, "tvm.tir.transform.HoistedLetBindings", false]], "hoistexpression() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.HoistExpression", false]], "hoistifthenelse() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.HoistIfThenElse", false]], "hybridmodule (class in tvm.te.hybrid)": [[169, "tvm.te.hybrid.HybridModule", false]], "hybridop (class in tvm.te)": [[169, "tvm.te.HybridOp", false]], "hypot() (in module tvm.tir)": [[173, "tvm.tir.hypot", false]], "id (class in tvm.relax)": [[150, "tvm.relax.Id", false]], "if (class in tvm.relax)": [[150, "tvm.relax.If", false]], "if_then_else() (in module tvm.te)": [[169, "tvm.te.if_then_else", false]], "if_then_else() (in module tvm.tir)": [[173, "tvm.tir.if_then_else", false]], "ifelseexpr (tvm.tir.transform.hoistedconditionals attribute)": [[174, "tvm.tir.transform.HoistedConditionals.IfElseExpr", false]], "ifelsestmt (tvm.tir.transform.hoistedconditionals attribute)": [[174, "tvm.tir.transform.HoistedConditionals.IfElseStmt", false]], "ifpattern (class in tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.IfPattern", false]], "ifthenelse (class in tvm.tir)": [[173, "tvm.tir.IfThenElse", false]], "ignore_loop_partition() (in module tvm.tir)": [[173, "tvm.tir.ignore_loop_partition", false]], "imm() (tvm.relax.execbuilder method)": [[150, "tvm.relax.ExecBuilder.imm", false]], "import_python_module() (tvm.runtime.disco.session method)": [[163, "tvm.runtime.disco.Session.import_python_module", false]], "in_dtype (tvm.topi.nn.workload attribute)": [[175, "tvm.topi.nn.Workload.in_dtype", false]], "in_filter (tvm.topi.nn.workload attribute)": [[175, "tvm.topi.nn.Workload.in_filter", false]], "inc_num_evals() (tvm.transform.passcontext method)": [[176, "tvm.transform.PassContext.inc_num_evals", false]], "incompletetype (class in tvm.ir)": [[144, "tvm.ir.IncompleteType", false]], "index (tvm.autotvm.task.space.axis attribute)": [[136, "tvm.autotvm.task.space.Axis.index", false]], "index_of() (tvm.tir.layout method)": [[173, "tvm.tir.Layout.index_of", false]], "indexdiv() (in module tvm.te)": [[169, "tvm.te.indexdiv", false]], "indexdiv() (in module tvm.tir)": [[173, "tvm.tir.indexdiv", false]], "indexmap (class in tvm.tir)": [[173, "tvm.tir.IndexMap", false]], "indexmod() (in module tvm.te)": [[169, "tvm.te.indexmod", false]], "indexmod() (in module tvm.tir)": [[173, "tvm.tir.indexmod", false]], "infer_bound_from_state() (tvm.auto_scheduler.computedag method)": [[135, "tvm.auto_scheduler.ComputeDAG.infer_bound_from_state", false]], "inferfragment() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.InferFragment", false]], "infertype() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.InferType", false]], "infertypelocal() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.InferTypeLocal", false]], "infinity() (in module tvm.tir)": [[173, "tvm.tir.infinity", false]], "info (tvm.transform.pass property)": [[176, "tvm.transform.Pass.info", false]], "init_ccl() (tvm.runtime.disco.session method)": [[163, "tvm.runtime.disco.Session.init_ccl", false]], "initattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.InitAttrs", false]], "injectcopyintrin() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.InjectCopyIntrin", false]], "injectdoublebuffer() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.InjectDoubleBuffer", false]], "injectpermutedlayout() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.InjectPermutedLayout", false]], "injectprefetch() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.InjectPrefetch", false]], "injectptxasynccopy() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.InjectPTXAsyncCopy", false]], "injectrollingbuffer() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.InjectRollingBuffer", false]], "injectsoftwarepipeline() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.InjectSoftwarePipeline", false]], "injectvirtualthread() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.InjectVirtualThread", false]], "inline() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.Inline", false]], "inline_mark() (tvm.tir.schedule.stmtsref static method)": [[171, "tvm.tir.schedule.StmtSRef.inline_mark", false]], "inlinecompilerfunctionsboundto() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.InlineCompilerFunctionsBoundTo", false]], "inlineprivatefunctions() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.InlinePrivateFunctions", false]], "inlineprivatefunctions() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.InlinePrivateFunctions", false]], "inputs (tvm.tir.schedule.instruction attribute)": [[171, "tvm.tir.schedule.Instruction.inputs", false]], "installdebugspans() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.InstallDebugSpans", false]], "instance_norm() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.instance_norm", false]], "instance_norm() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.instance_norm", false]], "instantiate() (tvm.autotvm.task.task.task method)": [[136, "tvm.autotvm.task.task.Task.instantiate", false]], "instantiationerror": [[136, "tvm.autotvm.task.space.InstantiationError", false]], "instruction (class in tvm.tir.schedule)": [[171, "tvm.tir.schedule.Instruction", false]], "instructionkind (class in tvm.tir.schedule)": [[171, "tvm.tir.schedule.InstructionKind", false]], "instrumentboundcheckers() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.InstrumentBoundCheckers", false]], "instrumentprofileintrinsics() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.InstrumentProfileIntrinsics", false]], "insts (tvm.tir.schedule.trace attribute)": [[171, "tvm.tir.schedule.Trace.insts", false]], "intel_graphics() (in module tvm.target)": [[168, "tvm.target.intel_graphics", false]], "internalerror": [[140, "tvm.error.InternalError", false]], "interpreter (class in tvm.relay.backend.interpreter)": [[153, "tvm.relay.backend.interpreter.Interpreter", false]], "intimm (class in tvm.tir)": [[173, "tvm.tir.IntImm", false]], "inverse() (tvm.tir.indexmap method)": [[173, "tvm.tir.IndexMap.inverse", false]], "invoke_closure() (in module tvm.relax.op)": [[149, "tvm.relax.op.invoke_closure", false]], "invoke_closure() (tvm.relax.virtualmachine method)": [[150, "tvm.relax.VirtualMachine.invoke_closure", false]], "invoke_closure() (tvm.runtime.relax_vm.virtualmachine method)": [[166, "tvm.runtime.relax_vm.VirtualMachine.invoke_closure", false]], "invoke_pure_closure() (in module tvm.relax.op)": [[149, "tvm.relax.op.invoke_pure_closure", false]], "invoke_stateful() (tvm.relax.virtualmachine method)": [[150, "tvm.relax.VirtualMachine.invoke_stateful", false]], "invoke_stateful() (tvm.runtime.relax_vm.virtualmachine method)": [[166, "tvm.runtime.relax_vm.VirtualMachine.invoke_stateful", false]], "ipcallreducerewrite (class in tvm.relax.transform)": [[151, "tvm.relax.transform.IPCAllReduceRewrite", false]], "ir_transform() (in module tvm.tir.stmt_functor)": [[172, "tvm.tir.stmt_functor.ir_transform", false]], "irmodule (class in tvm.ir)": [[144, "tvm.ir.IRModule", false]], "is_auto_scheduler_enabled() (in module tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.is_auto_scheduler_enabled", false]], "is_available() (in module tvm.contrib.nnpack)": [[137, "tvm.contrib.nnpack.is_available", false]], "is_base_of() (tvm.relax.structinfo method)": [[150, "tvm.relax.StructInfo.is_base_of", false]], "is_constant() (in module tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.is_constant", false]], "is_elementwise() (tvm.dlight.blockinfo method)": [[138, "tvm.dlight.BlockInfo.is_elementwise", false]], "is_equivalent_to() (tvm.tir.indexmap method)": [[173, "tvm.tir.IndexMap.is_equivalent_to", false]], "is_expr() (in module tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.is_expr", false]], "is_gemm() (tvm.dlight.blockinfo method)": [[138, "tvm.dlight.BlockInfo.is_gemm", false]], "is_gemv() (tvm.dlight.blockinfo method)": [[138, "tvm.dlight.BlockInfo.is_gemv", false]], "is_if() (in module tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.is_if", false]], "is_index_valid() (tvm.autotvm.task.space.configspace method)": [[136, "tvm.autotvm.task.space.ConfigSpace.is_index_valid", false]], "is_injective() (tvm.dlight.blockinfo method)": [[138, "tvm.dlight.BlockInfo.is_injective", false]], "is_let() (in module tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.is_let", false]], "is_meta_schedule_enabled() (in module tvm.meta_schedule)": [[145, "tvm.meta_schedule.is_meta_schedule_enabled", false]], "is_op() (in module tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.is_op", false]], "is_pure (tvm.tir.schedule.instructionkind property)": [[171, "tvm.tir.schedule.InstructionKind.is_pure", false]], "is_pure_function() (in module tvm.tir.analysis.analysis)": [[170, "tvm.tir.analysis.analysis.is_pure_function", false]], "is_recursive() (tvm.relay.analysis.callgraph method)": [[152, "tvm.relay.analysis.CallGraph.is_recursive", false]], "is_reduction() (tvm.dlight.blockinfo method)": [[138, "tvm.dlight.BlockInfo.is_reduction", false]], "is_source_path() (in module tvm.contrib.utils)": [[137, "tvm.contrib.utils.is_source_path", false]], "is_target_available() (tvm.dlight.schedulerule method)": [[138, "tvm.dlight.ScheduleRule.is_target_available", false]], "is_tuple() (in module tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.is_tuple", false]], "is_tuple_get_item() (in module tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.is_tuple_get_item", false]], "is_var() (in module tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.is_var", false]], "isfinite() (in module tvm.relax.op)": [[149, "tvm.relax.op.isfinite", false]], "isfinite() (in module tvm.te)": [[169, "tvm.te.isfinite", false]], "isfinite() (in module tvm.tir)": [[173, "tvm.tir.isfinite", false]], "isinf() (in module tvm.relax.op)": [[149, "tvm.relax.op.isinf", false]], "isinf() (in module tvm.te)": [[169, "tvm.te.isinf", false]], "isinf() (in module tvm.tir)": [[173, "tvm.tir.isinf", false]], "isnan() (in module tvm.relax.op)": [[149, "tvm.relax.op.isnan", false]], "isnan() (in module tvm.te)": [[169, "tvm.te.isnan", false]], "isnan() (in module tvm.tir)": [[173, "tvm.tir.isnan", false]], "isnullptr() (in module tvm.tir)": [[173, "tvm.tir.isnullptr", false]], "items() (tvm.ir.dictattrs method)": [[144, "tvm.ir.DictAttrs.items", false]], "items() (tvm.ir.map method)": [[144, "tvm.ir.Map.items", false]], "items() (tvm.relay.backend.te_compiler.tecompiler method)": [[153, "tvm.relay.backend.te_compiler.TECompiler.items", false]], "iterinfo (class in tvm.dlight)": [[138, "tvm.dlight.IterInfo", false]], "itervar (class in tvm.tir)": [[173, "tvm.tir.IterVar", false]], "jit() (tvm.relax.executable method)": [[150, "tvm.relax.Executable.jit", false]], "jit() (tvm.relay.backend.te_compiler.tecompiler method)": [[153, "tvm.relay.backend.te_compiler.TECompiler.jit", false]], "join_running_task() (tvm.meta_schedule.taskscheduler method)": [[145, "tvm.meta_schedule.TaskScheduler.join_running_task", false]], "json() (tvm.runtime.profiling.report method)": [[165, "tvm.runtime.profiling.Report.json", false]], "kernel_h (tvm.topi.nn.workload attribute)": [[175, "tvm.topi.nn.Workload.kernel_h", false]], "kernel_w (tvm.topi.nn.workload attribute)": [[175, "tvm.topi.nn.Workload.kernel_w", false]], "keys() (tvm.ir.attrs method)": [[144, "tvm.ir.Attrs.keys", false]], "keys() (tvm.ir.dictattrs method)": [[144, "tvm.ir.DictAttrs.keys", false]], "kill_storage() (in module tvm.relax.op.memory)": [[149, "tvm.relax.op.memory.kill_storage", false]], "kill_tensor() (in module tvm.relax.op.memory)": [[149, "tvm.relax.op.memory.kill_tensor", false]], "killafterlastuse() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.KillAfterLastUse", false]], "kind (tvm.tir.schedule.instruction attribute)": [[171, "tvm.tir.schedule.Instruction.kind", false]], "knob2point() (tvm.autotvm.task.space.configspace method)": [[136, "tvm.autotvm.task.space.ConfigSpace.knob2point", false]], "l2_normalize() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.l2_normalize", false]], "lambdalift() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.LambdaLift", false]], "lambdalift() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.LambdaLift", false]], "layer_norm() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.layer_norm", false]], "layer_norm() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.layer_norm", false]], "layer_norm() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.layer_norm", false]], "layernormattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.LayerNormAttrs", false]], "layout (class in tvm.tir)": [[173, "tvm.tir.Layout", false]], "layout() (in module tvm.tir)": [[173, "tvm.tir.layout", false]], "layout_transform() (in module tvm.relax.op)": [[149, "tvm.relax.op.layout_transform", false]], "layout_transform() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.layout_transform", false]], "layoutconfig (class in tvm.relay.transform)": [[160, "tvm.relay.transform.LayoutConfig", false]], "layoutrewriteoption (class in tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.LayoutRewriteOption", false]], "layouttransformattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.LayoutTransformAttrs", false]], "lazygetinput() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.LazyGetInput", false]], "lazygradientinit() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.LazyGradientInit", false]], "lazysetoutput() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.LazySetOutput", false]], "lazytransformparams (class in tvm.relax.transform)": [[151, "tvm.relax.transform.LazyTransformParams", false]], "ldexp() (in module tvm.tir)": [[173, "tvm.tir.ldexp", false]], "le (class in tvm.tir)": [[173, "tvm.tir.LE", false]], "leaky_relu() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.leaky_relu", false]], "leaky_relu() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.leaky_relu", false]], "leakyrelu() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.leakyrelu", false]], "left_shift() (in module tvm.relax.op)": [[149, "tvm.relax.op.left_shift", false]], "legalize() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.Legalize", false]], "legalizeops() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.LegalizeOps", false]], "legalizepackedcalls() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.LegalizePackedCalls", false]], "less() (in module tvm.relax.op)": [[149, "tvm.relax.op.less", false]], "less_equal() (in module tvm.relax.op)": [[149, "tvm.relax.op.less_equal", false]], "let (class in tvm.tir)": [[173, "tvm.tir.Let", false]], "letexpr (tvm.tir.transform.hoistedletbindings attribute)": [[174, "tvm.tir.transform.HoistedLetBindings.LetExpr", false]], "letpattern (class in tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.LetPattern", false]], "letstmt (class in tvm.tir)": [[173, "tvm.tir.LetStmt", false]], "letstmt (tvm.tir.transform.hoistedletbindings attribute)": [[174, "tvm.tir.transform.HoistedLetBindings.LetStmt", false]], "liftattrscope() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.LiftAttrScope", false]], "liftthreadbinding() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.LiftThreadBinding", false]], "lifttransformparams() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.LiftTransformParams", false]], "likely() (in module tvm.tir)": [[173, "tvm.tir.likely", false]], "linear() (in module tvm.relax.op)": [[149, "tvm.relax.op.linear", false]], "list_configs() (tvm.transform.passcontext static method)": [[176, "tvm.transform.PassContext.list_configs", false]], "list_fake_quantized_op_freqs() (in module tvm.relay.analysis)": [[152, "tvm.relay.analysis.list_fake_quantized_op_freqs", false]], "list_field_info() (tvm.ir.attrs method)": [[144, "tvm.ir.Attrs.list_field_info", false]], "list_kinds() (tvm.target.target static method)": [[168, "tvm.target.Target.list_kinds", false]], "list_op_freqs() (in module tvm.relay.analysis)": [[152, "tvm.relay.analysis.list_op_freqs", false]], "list_op_names() (tvm.ir.op static method)": [[144, "tvm.ir.Op.list_op_names", false]], "list_tags() (in module tvm.target)": [[168, "tvm.target.list_tags", false]], "listdir() (tvm.contrib.utils.tempdirectory method)": [[137, "tvm.contrib.utils.TempDirectory.listdir", false]], "listdir() (tvm.rpc.rpcsession method)": [[162, "tvm.rpc.RPCSession.listdir", false]], "load() (tvm.auto_scheduler.applyhistorybest method)": [[135, "tvm.auto_scheduler.ApplyHistoryBest.load", false]], "load() (tvm.auto_scheduler.xgbmodel method)": [[135, "tvm.auto_scheduler.XGBModel.load", false]], "load() (tvm.autotvm.task.dispatcher.applyhistorybest method)": [[136, "tvm.autotvm.task.dispatcher.ApplyHistoryBest.load", false]], "load() (tvm.meta_schedule.costmodel method)": [[145, "tvm.meta_schedule.CostModel.load", false]], "load() (tvm.te.hybrid.hybridmodule method)": [[169, "tvm.te.hybrid.HybridModule.load", false]], "load_best_record() (in module tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.load_best_record", false]], "load_from_buffer() (in module tvm.autotvm.record)": [[136, "tvm.autotvm.record.load_from_buffer", false]], "load_from_file() (in module tvm.autotvm.record)": [[136, "tvm.autotvm.record.load_from_file", false]], "load_history() (tvm.autotvm.tuner.gatuner method)": [[136, "tvm.autotvm.tuner.GATuner.load_history", false]], "load_history() (tvm.autotvm.tuner.gridsearchtuner method)": [[136, "tvm.autotvm.tuner.GridSearchTuner.load_history", false]], "load_history() (tvm.autotvm.tuner.randomtuner method)": [[136, "tvm.autotvm.tuner.RandomTuner.load_history", false]], "load_history() (tvm.autotvm.tuner.tuner method)": [[136, "tvm.autotvm.tuner.Tuner.load_history", false]], "load_history() (tvm.autotvm.tuner.xgbtuner method)": [[136, "tvm.autotvm.tuner.XGBTuner.load_history", false]], "load_json() (in module tvm.ir)": [[144, "tvm.ir.load_json", false]], "load_module() (tvm.rpc.rpcsession method)": [[162, "tvm.rpc.RPCSession.load_module", false]], "load_params() (tvm.contrib.graph_executor.graphmodule method)": [[141, "tvm.contrib.graph_executor.GraphModule.load_params", false]], "load_prelude() (tvm.relay.testing.prelude method)": [[159, "tvm.relay.testing.Prelude.load_prelude", false]], "load_records() (in module tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.load_records", false]], "load_vm_module() (tvm.runtime.disco.session method)": [[163, "tvm.runtime.disco.Session.load_vm_module", false]], "localbuilder (class in tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.LocalBuilder", false]], "localbuilder (class in tvm.autotvm.measure.measure_methods)": [[136, "tvm.autotvm.measure.measure_methods.LocalBuilder", false]], "localrpcmeasurecontext (class in tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.LocalRPCMeasureContext", false]], "localrunner (class in tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.LocalRunner", false]], "localrunner (class in tvm.autotvm.measure.measure_methods)": [[136, "tvm.autotvm.measure.measure_methods.LocalRunner", false]], "localsession (class in tvm.rpc)": [[162, "tvm.rpc.LocalSession", false]], "log() (in module tvm.relax.op)": [[149, "tvm.relax.op.log", false]], "log() (in module tvm.te)": [[169, "tvm.te.log", false]], "log() (in module tvm.tir)": [[173, "tvm.tir.log", false]], "log10() (in module tvm.te)": [[169, "tvm.te.log10", false]], "log10() (in module tvm.tir)": [[173, "tvm.tir.log10", false]], "log1p() (in module tvm.tir)": [[173, "tvm.tir.log1p", false]], "log2() (in module tvm.te)": [[169, "tvm.te.log2", false]], "log2() (in module tvm.tir)": [[173, "tvm.tir.log2", false]], "log_softmax() (in module tvm.contrib.miopen)": [[137, "tvm.contrib.miopen.log_softmax", false]], "log_softmax() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.log_softmax", false]], "log_softmax() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.log_softmax", false]], "log_softmax() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.log_softmax", false]], "log_to_database() (in module tvm.autotvm.tuner.callback)": [[136, "tvm.autotvm.tuner.callback.log_to_database", false]], "log_to_file() (in module tvm.autotvm.tuner.callback)": [[136, "tvm.autotvm.tuner.callback.log_to_file", false]], "logical_and() (in module tvm.relax.op)": [[149, "tvm.relax.op.logical_and", false]], "logical_not() (in module tvm.relax.op)": [[149, "tvm.relax.op.logical_not", false]], "logical_or() (in module tvm.relax.op)": [[149, "tvm.relax.op.logical_or", false]], "logical_xor() (in module tvm.relax.op)": [[149, "tvm.relax.op.logical_xor", false]], "lookup_binding() (tvm.relax.block_builder.blockbuilder method)": [[147, "tvm.relax.block_builder.BlockBuilder.lookup_binding", false]], "lookup_binding() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.lookup_binding", false]], "lookup_param() (in module tvm.tir)": [[173, "tvm.tir.lookup_param", false]], "loop_partition() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.loop_partition", false]], "looppartition() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.LoopPartition", false]], "looprv (class in tvm.tir.schedule)": [[171, "tvm.tir.schedule.LoopRV", false]], "lower() (in module tvm)": [[139, "tvm.lower", false]], "lower() (tvm.relay.backend.te_compiler.tecompiler method)": [[153, "tvm.relay.backend.te_compiler.TECompiler.lower", false]], "lower() (tvm.relay.backend.vm.vmcompiler method)": [[153, "tvm.relay.backend.vm.VMCompiler.lower", false]], "lower_to_primfunc() (in module tvm.relay.backend.te_compiler)": [[153, "tvm.relay.backend.te_compiler.lower_to_primfunc", false]], "loweralloctensor() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.LowerAllocTensor", false]], "lowerautocopy() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.LowerAutoCopy", false]], "lowercrossthreadreduction() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.LowerCrossThreadReduction", false]], "lowercustomdatatypes() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.LowerCustomDatatypes", false]], "lowerdevicekernellaunch() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.LowerDeviceKernelLaunch", false]], "lowerdevicestorageaccessinfo() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.LowerDeviceStorageAccessInfo", false]], "loweredoutput (class in tvm.relay.backend.te_compiler)": [[153, "tvm.relay.backend.te_compiler.LoweredOutput", false]], "lowergpuipcallocstorage (class in tvm.relax.transform)": [[151, "tvm.relax.transform.LowerGPUIPCAllocStorage", false]], "lowerinitblock() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.LowerInitBlock", false]], "lowerintrin() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.LowerIntrin", false]], "lowermatchbuffer() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.LowerMatchBuffer", false]], "loweropaqueblock() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.LowerOpaqueBlock", false]], "lowerruntimebuiltin() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.LowerRuntimeBuiltin", false]], "lowerthreadallreduce() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.LowerThreadAllreduce", false]], "lowertvmbuiltin() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.LowerTVMBuiltin", false]], "lowerwarpmemory() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.LowerWarpMemory", false]], "lrn() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.lrn", false]], "lrn() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.lrn", false]], "lstm() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.lstm", false]], "lstm_cell() (in module tvm.relay.testing.lstm)": [[159, "tvm.relay.testing.lstm.lstm_cell", false]], "lt (class in tvm.tir)": [[173, "tvm.tir.LT", false]], "make_closure() (in module tvm.relax.op)": [[149, "tvm.relax.op.make_closure", false]], "make_compilation_config() (in module tvm.target)": [[168, "tvm.target.make_compilation_config", false]], "make_filled_simdgroup_matrix() (in module tvm.tir)": [[173, "tvm.tir.make_filled_simdgroup_matrix", false]], "make_nat_expr() (in module tvm.relay.testing)": [[159, "tvm.relay.testing.make_nat_expr", false]], "make_nat_value() (in module tvm.relay.testing)": [[159, "tvm.relay.testing.make_nat_value", false]], "make_node() (in module tvm.ir)": [[144, "tvm.ir.make_node", false]], "make_node() (in module tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.make_node", false]], "make_workload_key() (in module tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.make_workload_key", false]], "makepackedapi() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.MakePackedAPI", false]], "makeunpackedapi() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.MakeUnpackedAPI", false]], "mali() (in module tvm.target)": [[168, "tvm.target.mali", false]], "manifestlifetimes() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.ManifestLifetimes", false]], "manifestsharedmemorylocalstage() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.ManifestSharedMemoryLocalStage", false]], "map (class in tvm.ir)": [[144, "tvm.ir.Map", false]], "map_indices() (tvm.tir.indexmap method)": [[173, "tvm.tir.IndexMap.map_indices", false]], "map_ndarray() (tvm.tir.indexmap method)": [[173, "tvm.tir.IndexMap.map_ndarray", false]], "map_shape() (tvm.tir.indexmap method)": [[173, "tvm.tir.IndexMap.map_shape", false]], "markcompilerfunctionsasextern() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.MarkCompilerFunctionsAsExtern", false]], "masked_fill() (in module tvm.relax.op)": [[149, "tvm.relax.op.masked_fill", false]], "match() (in module tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.match", false]], "match() (tvm.relay.dataflow_pattern.dfpattern method)": [[154, "tvm.relay.dataflow_pattern.DFPattern.match", false]], "match_cast() (tvm.relax.block_builder.blockbuilder method)": [[147, "tvm.relax.block_builder.BlockBuilder.match_cast", false]], "matchbufferregion (class in tvm.tir)": [[173, "tvm.tir.MatchBufferRegion", false]], "matchcast (class in tvm.relax)": [[150, "tvm.relax.MatchCast", false]], "matmul() (in module tvm.contrib.cblas)": [[137, "tvm.contrib.cblas.matmul", false]], "matmul() (in module tvm.contrib.cublas)": [[137, "tvm.contrib.cublas.matmul", false]], "matmul() (in module tvm.contrib.rocblas)": [[137, "tvm.contrib.rocblas.matmul", false]], "matmul() (in module tvm.relax.op)": [[149, "tvm.relax.op.matmul", false]], "matmul() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.matmul", false]], "matmul() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.matmul", false]], "matmul_legalize() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.matmul_legalize", false]], "matmulattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.MatmulAttrs", false]], "mattr (tvm.target.target property)": [[168, "tvm.target.Target.mattr", false]], "max (class in tvm.tir)": [[173, "tvm.tir.Max", false]], "max() (in module tvm.relax.op)": [[149, "tvm.relax.op.max", false]], "max() (in module tvm.te)": [[169, "tvm.te.max", false]], "max() (in module tvm.tir)": [[173, "tvm.tir.max", false]], "max_block_size_x (tvm.target.target property)": [[168, "tvm.target.Target.max_block_size_x", false]], "max_block_size_y (tvm.target.target property)": [[168, "tvm.target.Target.max_block_size_y", false]], "max_num_threads (tvm.target.target property)": [[168, "tvm.target.Target.max_num_threads", false]], "max_pool1d() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.max_pool1d", false]], "max_pool1d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.max_pool1d", false]], "max_pool2d() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.max_pool2d", false]], "max_pool2d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.max_pool2d", false]], "max_pool2d_backward() (in module tvm.relax.op.grad)": [[149, "tvm.relax.op.grad.max_pool2d_backward", false]], "max_pool2d_grad() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.max_pool2d_grad", false]], "max_pool3d() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.max_pool3d", false]], "max_pool3d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.max_pool3d", false]], "max_value() (in module tvm.te)": [[169, "tvm.te.max_value", false]], "max_value() (in module tvm.tir)": [[173, "tvm.tir.max_value", false]], "maximum() (in module tvm.relax.op)": [[149, "tvm.relax.op.maximum", false]], "mcpu (tvm.target.target property)": [[168, "tvm.target.Target.mcpu", false]], "mean() (in module tvm.relax.op)": [[149, "tvm.relax.op.mean", false]], "measure_option() (in module tvm.autotvm.measure)": [[136, "tvm.autotvm.measure.measure_option", false]], "measure_str_key() (in module tvm.autotvm.record)": [[136, "tvm.autotvm.record.measure_str_key", false]], "measurecallback (class in tvm.meta_schedule)": [[145, "tvm.meta_schedule.MeasureCallback", false]], "measurecandidate (class in tvm.meta_schedule)": [[145, "tvm.meta_schedule.MeasureCandidate", false]], "measureinput (class in tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.MeasureInput", false]], "measureinput (class in tvm.autotvm.measure)": [[136, "tvm.autotvm.measure.MeasureInput", false]], "measureresult (class in tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.MeasureResult", false]], "measureresult (class in tvm.autotvm.measure)": [[136, "tvm.autotvm.measure.MeasureResult", false]], "memoize() (in module tvm.contrib.pickle_memoize)": [[137, "tvm.contrib.pickle_memoize.memoize", false]], "merge() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.merge", false]], "mergecompilerregions() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.MergeCompilerRegions", false]], "mergecomposite() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.MergeComposite", false]], "mergecompositefunctions() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.MergeCompositeFunctions", false]], "mergesharedmemoryallocations() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.MergeSharedMemoryAllocations", false]], "metal() (in module tvm.runtime.ndarray)": [[164, "tvm.runtime.ndarray.metal", false]], "metal() (tvm.rpc.rpcsession method)": [[162, "tvm.rpc.RPCSession.metal", false]], "metascheduleapplydatabase() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.MetaScheduleApplyDatabase", false]], "metascheduletuneirmod() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.MetaScheduleTuneIRMod", false]], "metascheduletunetir() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.MetaScheduleTuneTIR", false]], "metriccollector (class in tvm.runtime.profiling)": [[165, "tvm.runtime.profiling.MetricCollector", false]], "min (class in tvm.tir)": [[173, "tvm.tir.Min", false]], "min() (in module tvm.relax.op)": [[149, "tvm.relax.op.min", false]], "min() (in module tvm.te)": [[169, "tvm.te.min", false]], "min() (in module tvm.tir)": [[173, "tvm.tir.min", false]], "min_value() (in module tvm.te)": [[169, "tvm.te.min_value", false]], "min_value() (in module tvm.tir)": [[173, "tvm.tir.min_value", false]], "minimum() (in module tvm.relax.op)": [[149, "tvm.relax.op.minimum", false]], "mirror_pad() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.mirror_pad", false]], "mirror_pad() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.mirror_pad", false]], "missingtask (class in tvm.autotvm.task.task)": [[136, "tvm.autotvm.task.task.MissingTask", false]], "mma_fill() (in module tvm.tir)": [[173, "tvm.tir.mma_fill", false]], "mma_store() (in module tvm.tir)": [[173, "tvm.tir.mma_store", false]], "mobile_net() (in module tvm.relay.testing.mobilenet)": [[159, "tvm.relay.testing.mobilenet.mobile_net", false]], "mod (class in tvm.tir)": [[173, "tvm.tir.Mod", false]], "mod (tvm.tir.schedule.schedule property)": [[171, "tvm.tir.schedule.Schedule.mod", false]], "mod() (in module tvm.relax.op)": [[149, "tvm.relax.op.mod", false]], "model (tvm.target.target property)": [[168, "tvm.target.Target.model", false]], "module": [[135, "module-tvm.auto_scheduler", false], [136, "module-tvm.autotvm", false], [136, "module-tvm.autotvm.measure.measure", false], [136, "module-tvm.autotvm.record", false], [136, "module-tvm.autotvm.task", false], [136, "module-tvm.autotvm.task.dispatcher", false], [136, "module-tvm.autotvm.task.space", false], [136, "module-tvm.autotvm.task.task", false], [136, "module-tvm.autotvm.task.topi_integration", false], [136, "module-tvm.autotvm.tuner", false], [136, "module-tvm.autotvm.tuner.callback", false], [137, "module-tvm.contrib", false], [137, "module-tvm.contrib.cblas", false], [137, "module-tvm.contrib.cc", false], [137, "module-tvm.contrib.clang", false], [137, "module-tvm.contrib.cublas", false], [137, "module-tvm.contrib.dlpack", false], [137, "module-tvm.contrib.emcc", false], [137, "module-tvm.contrib.miopen", false], [137, "module-tvm.contrib.mxnet", false], [137, "module-tvm.contrib.ndk", false], [137, "module-tvm.contrib.nnpack", false], [137, "module-tvm.contrib.nvcc", false], [137, "module-tvm.contrib.pickle_memoize", false], [137, "module-tvm.contrib.random", false], [137, "module-tvm.contrib.relay_viz", false], [137, "module-tvm.contrib.relay_viz.dot", false], [137, "module-tvm.contrib.relay_viz.interface", false], [137, "module-tvm.contrib.relay_viz.terminal", false], [137, "module-tvm.contrib.rocblas", false], [137, "module-tvm.contrib.rocm", false], [137, "module-tvm.contrib.sparse", false], [137, "module-tvm.contrib.spirv", false], [137, "module-tvm.contrib.tar", false], [137, "module-tvm.contrib.utils", false], [137, "module-tvm.contrib.xcode", false], [138, "module-tvm.dlight", false], [139, "module-tvm.driver", false], [140, "module-tvm.error", false], [141, "module-tvm.contrib.graph_executor", false], [143, "module-tvm.instrument", false], [144, "module-tvm.ir", false], [145, "module-tvm.meta_schedule", false], [146, "module-tvm.relax.analysis", false], [147, "module-tvm.relax.block_builder", false], [148, "module-tvm.relax.frontend", false], [148, "module-tvm.relax.frontend.onnx", false], [148, "module-tvm.relax.frontend.stablehlo", false], [148, "module-tvm.relax.frontend.torch", false], [149, "module-tvm.relax.op", false], [149, "module-tvm.relax.op.builtin", false], [149, "module-tvm.relax.op.ccl", false], [149, "module-tvm.relax.op.distributed", false], [149, "module-tvm.relax.op.grad", false], [149, "module-tvm.relax.op.image", false], [149, "module-tvm.relax.op.memory", false], [149, "module-tvm.relax.op.nn", false], [149, "module-tvm.relax.op.op_attrs", false], [150, "module-tvm.relax", false], [151, "module-tvm.relax.transform", false], [152, "module-tvm.relay.analysis", false], [153, "module-tvm.relay.backend", false], [153, "module-tvm.relay.backend.graph_executor_codegen", false], [153, "module-tvm.relay.backend.interpreter", false], [153, "module-tvm.relay.backend.te_compiler", false], [153, "module-tvm.relay.backend.vm", false], [154, "module-tvm.relay.dataflow_pattern", false], [155, "module-tvm.relay.frontend", false], [156, "module-tvm.relay.image", false], [158, "module-tvm.relay.nn", false], [159, "module-tvm.relay.testing", false], [159, "module-tvm.relay.testing.dcgan", false], [159, "module-tvm.relay.testing.densenet", false], [159, "module-tvm.relay.testing.inception_v3", false], [159, "module-tvm.relay.testing.lstm", false], [159, "module-tvm.relay.testing.mlp", false], [159, "module-tvm.relay.testing.mobilenet", false], [159, "module-tvm.relay.testing.resnet", false], [159, "module-tvm.relay.testing.squeezenet", false], [159, "module-tvm.relay.testing.vgg", false], [160, "module-tvm.relay.transform", false], [161, "module-tvm.relay.vision", false], [162, "module-tvm.rpc", false], [163, "module-tvm.runtime.disco", false], [164, "module-tvm.runtime.ndarray", false], [165, "module-tvm.runtime.profiling", false], [166, "module-tvm.runtime.relax_vm", false], [167, "module-tvm.runtime", false], [168, "module-tvm.target", false], [169, "module-tvm.te", false], [169, "module-tvm.te.hybrid", false], [170, "module-tvm.tir.analysis.analysis", false], [171, "module-tvm.tir.schedule", false], [172, "module-tvm.tir.stmt_functor", false], [173, "module-tvm.tir", false], [174, "module-tvm.tir.transform", false], [175, "module-tvm.topi.image", false], [175, "module-tvm.topi.nn", false], [175, "module-tvm.topi.sparse", false], [176, "module-tvm.transform", false]], "module (tvm.contrib.graph_executor.graphmodule attribute)": [[141, "tvm.contrib.graph_executor.GraphModule.module", false]], "module (tvm.relay.analysis.callgraph property)": [[152, "tvm.relay.analysis.CallGraph.module", false]], "module_pass() (in module tvm.transform)": [[176, "tvm.transform.module_pass", false]], "modulepass (class in tvm.transform)": [[176, "tvm.transform.ModulePass", false]], "monitor (class in tvm.autotvm.tuner.callback)": [[136, "tvm.autotvm.tuner.callback.Monitor", false]], "mtl() (in module tvm.runtime.ndarray)": [[164, "tvm.runtime.ndarray.mtl", false]], "mul (class in tvm.tir)": [[173, "tvm.tir.Mul", false]], "multi_filter() (tvm.autotvm.task.space.configspace method)": [[136, "tvm.autotvm.task.space.ConfigSpace.multi_filter", false]], "multibox_prior() (in module tvm.relay.vision)": [[161, "tvm.relay.vision.multibox_prior", false]], "multibox_transform_loc() (in module tvm.relay.vision)": [[161, "tvm.relay.vision.multibox_transform_loc", false]], "multinomial_from_uniform() (in module tvm.relax.op)": [[149, "tvm.relax.op.multinomial_from_uniform", false]], "multiply() (in module tvm.relax.op)": [[149, "tvm.relax.op.multiply", false]], "multiply() (in module tvm.te)": [[169, "tvm.te.multiply", false]], "multiply() (in module tvm.tir)": [[173, "tvm.tir.multiply", false]], "mutate_irmodule() (tvm.relax.dataflowblockrewrite method)": [[150, "tvm.relax.DataflowBlockRewrite.mutate_irmodule", false]], "mutated_dfb() (tvm.relax.dataflowblockrewrite method)": [[150, "tvm.relax.DataflowBlockRewrite.mutated_dfb", false]], "mutated_root_fn() (tvm.relax.dataflowblockrewrite method)": [[150, "tvm.relax.DataflowBlockRewrite.mutated_root_fn", false]], "mutator (class in tvm.meta_schedule)": [[145, "tvm.meta_schedule.Mutator", false]], "name (tvm.tir.schedule.instructionkind attribute)": [[171, "tvm.tir.schedule.InstructionKind.name", false]], "name_hint (tvm.relax.var property)": [[150, "tvm.relax.Var.name_hint", false]], "name_to_binding() (in module tvm.relax.analysis)": [[146, "tvm.relax.analysis.name_to_binding", false]], "namedtuple() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.namedtuple", false]], "narrowdatatype() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.NarrowDataType", false]], "nchw_pack_layout() (in module tvm.topi.image)": [[175, "tvm.topi.image.nchw_pack_layout", false]], "nchw_xc_layout() (in module tvm.topi.image)": [[175, "tvm.topi.image.nchw_xc_layout", false]], "ndarray (class in tvm.runtime.ndarray)": [[164, "tvm.runtime.ndarray.NDArray", false]], "ndim (tvm.te.tensor property)": [[169, "tvm.te.Tensor.ndim", false]], "ne (class in tvm.tir)": [[173, "tvm.tir.NE", false]], "nearbyint() (in module tvm.te)": [[169, "tvm.te.nearbyint", false]], "nearbyint() (in module tvm.tir)": [[173, "tvm.tir.nearbyint", false]], "negative() (in module tvm.relax.op)": [[149, "tvm.relax.op.negative", false]], "never (tvm.tir.transform.hoistedconditionals attribute)": [[174, "tvm.tir.transform.HoistedConditionals.Never", false]], "never (tvm.tir.transform.hoistedletbindings attribute)": [[174, "tvm.tir.transform.HoistedLetBindings.Never", false]], "next_batch() (tvm.autotvm.tuner.gatuner method)": [[136, "tvm.autotvm.tuner.GATuner.next_batch", false]], "next_batch() (tvm.autotvm.tuner.gridsearchtuner method)": [[136, "tvm.autotvm.tuner.GridSearchTuner.next_batch", false]], "next_batch() (tvm.autotvm.tuner.randomtuner method)": [[136, "tvm.autotvm.tuner.RandomTuner.next_batch", false]], "next_batch() (tvm.autotvm.tuner.tuner method)": [[136, "tvm.autotvm.tuner.Tuner.next_batch", false]], "next_batch() (tvm.autotvm.tuner.xgbtuner method)": [[136, "tvm.autotvm.tuner.XGBTuner.next_batch", false]], "next_task_id() (tvm.meta_schedule.taskscheduler method)": [[145, "tvm.meta_schedule.TaskScheduler.next_task_id", false]], "nextafter() (in module tvm.tir)": [[173, "tvm.tir.nextafter", false]], "nll_loss() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.nll_loss", false]], "nll_loss() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.nll_loss", false]], "nll_loss() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.nll_loss", false]], "nll_loss_backward() (in module tvm.relax.op.grad)": [[149, "tvm.relax.op.grad.nll_loss_backward", false]], "no_grad() (in module tvm.relax.op.grad)": [[149, "tvm.relax.op.grad.no_grad", false]], "node (class in tvm.ir)": [[144, "tvm.ir.Node", false]], "node() (tvm.contrib.relay_viz.dot.dotgraph method)": [[137, "tvm.contrib.relay_viz.dot.DotGraph.node", false]], "node() (tvm.contrib.relay_viz.interface.vizgraph method)": [[137, "tvm.contrib.relay_viz.interface.VizGraph.node", false]], "node() (tvm.contrib.relay_viz.terminal.termgraph method)": [[137, "tvm.contrib.relay_viz.terminal.TermGraph.node", false]], "non_max_suppression() (in module tvm.relay.vision)": [[161, "tvm.relay.vision.non_max_suppression", false]], "non_surjective_inverse() (tvm.tir.indexmap method)": [[173, "tvm.tir.IndexMap.non_surjective_inverse", false]], "nonzero() (in module tvm.relax.op)": [[149, "tvm.relax.op.nonzero", false]], "normal() (in module tvm.contrib.random)": [[137, "tvm.contrib.random.normal", false]], "normalize() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.Normalize", false]], "normalize() (tvm.relax.block_builder.blockbuilder method)": [[147, "tvm.relax.block_builder.BlockBuilder.normalize", false]], "normalize() (tvm.te.schedule method)": [[169, "tvm.te.Schedule.normalize", false]], "normalize_file_list_by_unpacking_tars() (in module tvm.contrib.tar)": [[137, "tvm.contrib.tar.normalize_file_list_by_unpacking_tars", false]], "normalize_prim_func() (in module tvm.dlight)": [[138, "tvm.dlight.normalize_prim_func", false]], "normalizeglobalvar() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.NormalizeGlobalVar", false]], "not (class in tvm.tir)": [[173, "tvm.tir.Not", false]], "not_equal() (in module tvm.relax.op)": [[149, "tvm.relax.op.not_equal", false]], "notify_runner_results() (tvm.meta_schedule.searchstrategy method)": [[145, "tvm.meta_schedule.SearchStrategy.notify_runner_results", false]], "notify_runner_results() (tvm.meta_schedule.tunecontext method)": [[145, "tvm.meta_schedule.TuneContext.notify_runner_results", false]], "null_value() (in module tvm.relax.op)": [[149, "tvm.relax.op.null_value", false]], "num_workers (tvm.runtime.disco.session property)": [[163, "tvm.runtime.disco.Session.num_workers", false]], "numpy() (tvm.contrib.sparse.csrndarray method)": [[137, "tvm.contrib.sparse.CSRNDArray.numpy", false]], "numpy() (tvm.runtime.ndarray.ndarray method)": [[164, "tvm.runtime.ndarray.NDArray.numpy", false]], "numpyasarray() (in module tvm.runtime.ndarray)": [[164, "tvm.runtime.ndarray.numpyasarray", false]], "objectstructinfo (class in tvm.relax)": [[150, "tvm.relax.ObjectStructInfo", false]], "objecttype (class in tvm.relax)": [[150, "tvm.relax.ObjectType", false]], "offset_of() (tvm.tir.buffer method)": [[173, "tvm.tir.Buffer.offset_of", false]], "one_hot() (in module tvm.relax.op)": [[149, "tvm.relax.op.one_hot", false]], "ones() (in module tvm.relax.op)": [[149, "tvm.relax.op.ones", false]], "ones_like() (in module tvm.relax.op)": [[149, "tvm.relax.op.ones_like", false]], "oobchecker() (in module tvm.tir.analysis.analysis)": [[170, "tvm.tir.analysis.analysis.OOBChecker", false]], "op (class in tvm.ir)": [[144, "tvm.ir.Op", false]], "op (tvm.te.tensor property)": [[169, "tvm.te.Tensor.op", false]], "opaque (tvm.tir.schedule.depkind attribute)": [[171, "tvm.tir.schedule.DepKind.OPAQUE", false]], "opaque_func() (tvm.relax.funcstructinfo static method)": [[150, "tvm.relax.FuncStructInfo.opaque_func", false]], "opattributeinvalid": [[140, "tvm.error.OpAttributeInvalid", false]], "opattributerequired": [[140, "tvm.error.OpAttributeRequired", false]], "opattributeunimplemented": [[140, "tvm.error.OpAttributeUnImplemented", false]], "opencl() (in module tvm.runtime.ndarray)": [[164, "tvm.runtime.ndarray.opencl", false]], "operror": [[140, "tvm.error.OpError", false]], "opnotimplemented": [[140, "tvm.error.OpNotImplemented", false]], "optimize() (in module tvm.contrib.spirv)": [[137, "tvm.contrib.spirv.optimize", false]], "optimize() (tvm.relay.backend.vm.vmcompiler method)": [[153, "tvm.relay.backend.vm.VMCompiler.optimize", false]], "optimizelayouttransform (class in tvm.relax.transform)": [[151, "tvm.relax.transform.OptimizeLayoutTransform", false]], "optional() (tvm.relay.dataflow_pattern.dfpattern method)": [[154, "tvm.relay.dataflow_pattern.DFPattern.optional", false]], "options (tvm.target.targetkind property)": [[168, "tvm.target.TargetKind.options", false]], "options_from_name() (tvm.target.targetkind static method)": [[168, "tvm.target.TargetKind.options_from_name", false]], "or (class in tvm.tir)": [[173, "tvm.tir.Or", false]], "otheroptionentity (class in tvm.autotvm.task.space)": [[136, "tvm.autotvm.task.space.OtherOptionEntity", false]], "otheroptionspace (class in tvm.autotvm.task.space)": [[136, "tvm.autotvm.task.space.OtherOptionSpace", false]], "out_dtype (tvm.topi.nn.workload attribute)": [[175, "tvm.topi.nn.Workload.out_dtype", false]], "out_filter (tvm.topi.nn.workload attribute)": [[175, "tvm.topi.nn.Workload.out_filter", false]], "outlinecompilerfunctionswithexistingglobalsymbols() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.OutlineCompilerFunctionsWithExistingGlobalSymbols", false]], "outputs (tvm.tir.schedule.instruction attribute)": [[171, "tvm.tir.schedule.Instruction.outputs", false]], "override_instruments() (tvm.transform.passcontext method)": [[176, "tvm.transform.PassContext.override_instruments", false]], "override_native_generic_func() (in module tvm.target)": [[168, "tvm.target.override_native_generic_func", false]], "packedfunctype (class in tvm.relax)": [[150, "tvm.relax.PackedFuncType", false]], "pad() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.pad", false]], "pad() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.pad", false]], "pad() (in module tvm.topi.image)": [[175, "tvm.topi.image.pad", false]], "pad() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.pad", false]], "pad_einsum() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.pad_einsum", false]], "padb (tvm.topi.nn.workload attribute)": [[175, "tvm.topi.nn.Workload.padb", false]], "padl (tvm.topi.nn.workload attribute)": [[175, "tvm.topi.nn.Workload.padl", false]], "padr (tvm.topi.nn.workload attribute)": [[175, "tvm.topi.nn.Workload.padr", false]], "padt (tvm.topi.nn.workload attribute)": [[175, "tvm.topi.nn.Workload.padt", false]], "parallel() (tvm.te.stage method)": [[169, "tvm.te.Stage.parallel", false]], "parallel() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.parallel", false]], "parent (tvm.tir.schedule.stmtsref property)": [[171, "tvm.tir.schedule.StmtSRef.parent", false]], "parse_compute_version() (in module tvm.contrib.nvcc)": [[137, "tvm.contrib.nvcc.parse_compute_version", false]], "parse_compute_version() (in module tvm.contrib.rocm)": [[137, "tvm.contrib.rocm.parse_compute_version", false]], "partialevaluate() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.PartialEvaluate", false]], "partition() (in module tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.partition", false]], "partition() (tvm.relay.dataflow_pattern.dfpattern method)": [[154, "tvm.relay.dataflow_pattern.DFPattern.partition", false]], "partitiongraph() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.PartitionGraph", false]], "pass (class in tvm.transform)": [[176, "tvm.transform.Pass", false]], "pass_instrument() (in module tvm.instrument)": [[143, "tvm.instrument.pass_instrument", false]], "passcontext (class in tvm.transform)": [[176, "tvm.transform.PassContext", false]], "passinfo (class in tvm.transform)": [[176, "tvm.transform.PassInfo", false]], "passinstrument (class in tvm.instrument)": [[143, "tvm.instrument.PassInstrument", false]], "passprintinginstrument (class in tvm.instrument)": [[143, "tvm.instrument.PassPrintingInstrument", false]], "passtiminginstrument (class in tvm.instrument)": [[143, "tvm.instrument.PassTimingInstrument", false]], "patterncheckcontext (class in tvm.relax.transform)": [[151, "tvm.relax.transform.PatternCheckContext", false]], "percent (class in tvm.runtime.profiling)": [[165, "tvm.runtime.profiling.Percent", false]], "permute_dims() (in module tvm.relax.op)": [[149, "tvm.relax.op.permute_dims", false]], "permutedimsattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.PermuteDimsAttrs", false]], "pick_best() (in module tvm.autotvm.record)": [[136, "tvm.autotvm.record.pick_best", false]], "placeholder() (in module tvm.contrib.sparse)": [[137, "tvm.contrib.sparse.placeholder", false]], "placeholder() (in module tvm.te)": [[169, "tvm.te.placeholder", false]], "placeholderop (class in tvm.te)": [[169, "tvm.te.PlaceholderOp", false]], "planandupdatebufferallocationlocation() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.PlanAndUpdateBufferAllocationLocation", false]], "plandevices() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.PlanDevices", false]], "plotter (class in tvm.contrib.relay_viz.interface)": [[137, "tvm.contrib.relay_viz.interface.Plotter", false]], "point2knob() (tvm.autotvm.task.space.configspace method)": [[136, "tvm.autotvm.task.space.ConfigSpace.point2knob", false]], "pointertype (class in tvm.ir)": [[144, "tvm.ir.PointerType", false]], "pointervaluetyperewrite() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.PointerValueTypeRewrite", false]], "pool1d() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.pool1d", false]], "pool2d() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.pool2d", false]], "pool2dattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.Pool2DAttrs", false]], "pool3d() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.pool3d", false]], "pool_grad() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.pool_grad", false]], "poolinfo (class in tvm.ir)": [[144, "tvm.ir.PoolInfo", false]], "poolinfoproperties (class in tvm.ir)": [[144, "tvm.ir.PoolInfoProperties", false]], "pop() (tvm.tir.schedule.trace method)": [[171, "tvm.tir.schedule.Trace.pop", false]], "pop_trace() (tvm.transform.passcontext method)": [[176, "tvm.transform.PassContext.pop_trace", false]], "popcount() (in module tvm.te)": [[169, "tvm.te.popcount", false]], "popcount() (in module tvm.tir)": [[173, "tvm.tir.popcount", false]], "popensession (class in tvm.rpc)": [[162, "tvm.rpc.PopenSession", false]], "post_order_visit() (in module tvm.relax.analysis)": [[146, "tvm.relax.analysis.post_order_visit", false]], "post_order_visit() (in module tvm.relay.analysis)": [[152, "tvm.relay.analysis.post_order_visit", false]], "post_order_visit() (in module tvm.tir.stmt_functor)": [[172, "tvm.tir.stmt_functor.post_order_visit", false]], "post_tuning() (tvm.meta_schedule.searchstrategy method)": [[145, "tvm.meta_schedule.SearchStrategy.post_tuning", false]], "post_tuning() (tvm.meta_schedule.tunecontext method)": [[145, "tvm.meta_schedule.TuneContext.post_tuning", false]], "postproc (class in tvm.meta_schedule)": [[145, "tvm.meta_schedule.Postproc", false]], "pow() (in module tvm.tir)": [[173, "tvm.tir.pow", false]], "power() (in module tvm.relax.op)": [[149, "tvm.relax.op.power", false]], "power() (in module tvm.te)": [[169, "tvm.te.power", false]], "power() (in module tvm.tir)": [[173, "tvm.tir.power", false]], "pragma() (tvm.te.stage method)": [[169, "tvm.te.Stage.pragma", false]], "pre_order_visit() (in module tvm.tir.stmt_functor)": [[172, "tvm.tir.stmt_functor.pre_order_visit", false]], "pre_tuning() (tvm.meta_schedule.searchstrategy method)": [[145, "tvm.meta_schedule.SearchStrategy.pre_tuning", false]], "pre_tuning() (tvm.meta_schedule.tunecontext method)": [[145, "tvm.meta_schedule.TuneContext.pre_tuning", false]], "predict() (tvm.auto_scheduler.randommodel method)": [[135, "tvm.auto_scheduler.RandomModel.predict", false]], "predict() (tvm.auto_scheduler.xgbmodel method)": [[135, "tvm.auto_scheduler.XGBModel.predict", false]], "predict() (tvm.meta_schedule.costmodel method)": [[145, "tvm.meta_schedule.CostModel.predict", false]], "predict_stages() (tvm.auto_scheduler.xgbmodel method)": [[135, "tvm.auto_scheduler.XGBModel.predict_stages", false]], "prefetch (class in tvm.tir)": [[173, "tvm.tir.Prefetch", false]], "prefetch() (tvm.te.stage method)": [[169, "tvm.te.Stage.prefetch", false]], "preloadcustomsketchrule (class in tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.PreloadCustomSketchRule", false]], "preloadmeasuredstates (class in tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.PreloadMeasuredStates", false]], "prelu() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.prelu", false]], "prelu() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.prelu", false]], "prelude (class in tvm.relay.testing)": [[159, "tvm.relay.testing.Prelude", false]], "pretty_print() (in module tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.pretty_print", false]], "prim_func_pass() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.prim_func_pass", false]], "primexpr (class in tvm.ir)": [[144, "tvm.ir.PrimExpr", false]], "primfunc (class in tvm.tir)": [[173, "tvm.tir.PrimFunc", false]], "primfuncpass (class in tvm.tir.transform)": [[174, "tvm.tir.transform.PrimFuncPass", false]], "primstructinfo (class in tvm.relax)": [[150, "tvm.relax.PrimStructInfo", false]], "primtype (class in tvm.ir)": [[144, "tvm.ir.PrimType", false]], "primvalue (class in tvm.relax)": [[150, "tvm.relax.PrimValue", false]], "print() (in module tvm.relax.op)": [[149, "tvm.relax.op.print", false]], "print_best() (tvm.auto_scheduler.searchtask method)": [[135, "tvm.auto_scheduler.SearchTask.print_best", false]], "print_python_code_from_state() (tvm.auto_scheduler.computedag method)": [[135, "tvm.auto_scheduler.ComputeDAG.print_python_code_from_state", false]], "print_tuning_statistics() (tvm.meta_schedule.taskscheduler method)": [[145, "tvm.meta_schedule.TaskScheduler.print_tuning_statistics", false]], "print_var() (tvm.relay.analysis.callgraph method)": [[152, "tvm.relay.analysis.CallGraph.print_var", false]], "printafterall (class in tvm.instrument)": [[143, "tvm.instrument.PrintAfterAll", false]], "printbeforeall (class in tvm.instrument)": [[143, "tvm.instrument.PrintBeforeAll", false]], "printir() (in module tvm.transform)": [[176, "tvm.transform.PrintIR", false]], "processsession (class in tvm.runtime.disco)": [[163, "tvm.runtime.disco.ProcessSession", false]], "prod() (in module tvm.relax.op)": [[149, "tvm.relax.op.prod", false]], "producerload (class in tvm.tir)": [[173, "tvm.tir.ProducerLoad", false]], "producerrealize (class in tvm.tir)": [[173, "tvm.tir.ProducerRealize", false]], "producerstore (class in tvm.tir)": [[173, "tvm.tir.ProducerStore", false]], "profile() (tvm.relax.virtualmachine method)": [[150, "tvm.relax.VirtualMachine.profile", false]], "profile() (tvm.runtime.relax_vm.virtualmachine method)": [[166, "tvm.runtime.relax_vm.VirtualMachine.profile", false]], "profile_function() (in module tvm.runtime.profiling)": [[165, "tvm.runtime.profiling.profile_function", false]], "profiler (class in tvm.meta_schedule)": [[145, "tvm.meta_schedule.Profiler", false]], "progress_bar() (in module tvm.autotvm.tuner.callback)": [[136, "tvm.autotvm.tuner.callback.progress_bar", false]], "proposal() (in module tvm.relay.vision)": [[161, "tvm.relay.vision.proposal", false]], "ptx_arrive_barrier() (in module tvm.tir)": [[173, "tvm.tir.ptx_arrive_barrier", false]], "ptx_arrive_barrier_expect_tx() (in module tvm.tir)": [[173, "tvm.tir.ptx_arrive_barrier_expect_tx", false]], "ptx_commit_group() (in module tvm.tir)": [[173, "tvm.tir.ptx_commit_group", false]], "ptx_cp_async() (in module tvm.tir)": [[173, "tvm.tir.ptx_cp_async", false]], "ptx_cp_async_barrier() (in module tvm.tir)": [[173, "tvm.tir.ptx_cp_async_barrier", false]], "ptx_cp_async_bulk() (in module tvm.tir)": [[173, "tvm.tir.ptx_cp_async_bulk", false]], "ptx_init_barrier_thread_count() (in module tvm.tir)": [[173, "tvm.tir.ptx_init_barrier_thread_count", false]], "ptx_ldmatrix() (in module tvm.tir)": [[173, "tvm.tir.ptx_ldmatrix", false]], "ptx_mma() (in module tvm.tir)": [[173, "tvm.tir.ptx_mma", false]], "ptx_mma_sp() (in module tvm.tir)": [[173, "tvm.tir.ptx_mma_sp", false]], "ptx_wait_barrier() (in module tvm.tir)": [[173, "tvm.tir.ptx_wait_barrier", false]], "ptx_wait_group() (in module tvm.tir)": [[173, "tvm.tir.ptx_wait_group", false]], "push_trace() (tvm.transform.passcontext method)": [[176, "tvm.transform.PassContext.push_trace", false]], "pyexprmutator (class in tvm.relax)": [[150, "tvm.relax.PyExprMutator", false]], "pyexprvisitor (class in tvm.relax)": [[150, "tvm.relax.PyExprVisitor", false]], "q_multiply_shift() (in module tvm.tir)": [[173, "tvm.tir.q_multiply_shift", false]], "q_multiply_shift_per_axis() (in module tvm.tir)": [[173, "tvm.tir.q_multiply_shift_per_axis", false]], "qnn_conv2d_alter_layout() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.qnn_conv2d_alter_layout", false]], "qnn_dense_alter_layout() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.qnn_dense_alter_layout", false]], "qnn_requantize_alter_layout() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.qnn_requantize_alter_layout", false]], "quantize() (in module tvm.relax.op)": [[149, "tvm.relax.op.quantize", false]], "quantize_conv_bias_mkldnn_from_var() (in module tvm.relay.frontend)": [[155, "tvm.relay.frontend.quantize_conv_bias_mkldnn_from_var", false]], "query() (tvm.auto_scheduler.applyhistorybestorsample method)": [[135, "tvm.auto_scheduler.ApplyHistoryBestOrSample.query", false]], "query() (tvm.auto_scheduler.dispatchcontext method)": [[135, "tvm.auto_scheduler.DispatchContext.query", false]], "query() (tvm.autotvm.task.dispatcher.dispatchcontext method)": [[136, "tvm.autotvm.task.dispatcher.DispatchContext.query", false]], "query() (tvm.meta_schedule.database method)": [[145, "tvm.meta_schedule.Database.query", false]], "query_ir_module() (tvm.meta_schedule.database method)": [[145, "tvm.meta_schedule.Database.query_ir_module", false]], "query_schedule() (tvm.meta_schedule.database method)": [[145, "tvm.meta_schedule.Database.query_schedule", false]], "query_tuning_record() (tvm.meta_schedule.database method)": [[145, "tvm.meta_schedule.Database.query_tuning_record", false]], "r() (tvm.relax.execbuilder method)": [[150, "tvm.relax.ExecBuilder.r", false]], "raise_error() (tvm.autotvm.task.space.configspace method)": [[136, "tvm.autotvm.task.space.ConfigSpace.raise_error", false]], "ramp (class in tvm.tir)": [[173, "tvm.tir.Ramp", false]], "randint() (in module tvm.contrib.random)": [[137, "tvm.contrib.random.randint", false]], "random_walk() (tvm.autotvm.task.space.configspace method)": [[136, "tvm.autotvm.task.space.ConfigSpace.random_walk", false]], "randommodel (class in tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.RandomModel", false]], "randomtuner (class in tvm.autotvm.tuner)": [[136, "tvm.autotvm.tuner.RandomTuner", false]], "range (class in tvm.ir)": [[144, "tvm.ir.Range", false]], "range_length (tvm.autotvm.task.space.configspace property)": [[136, "tvm.autotvm.task.space.ConfigSpace.range_length", false]], "rasp() (in module tvm.target)": [[168, "tvm.target.rasp", false]], "ratio (class in tvm.runtime.profiling)": [[165, "tvm.runtime.profiling.Ratio", false]], "raw (tvm.tir.schedule.depkind attribute)": [[171, "tvm.tir.schedule.DepKind.RAW", false]], "read_lines() (tvm.auto_scheduler.recordreader method)": [[135, "tvm.auto_scheduler.RecordReader.read_lines", false]], "realizevdevice() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.RealizeVDevice", false]], "recast() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.recast", false]], "recordreader (class in tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.RecordReader", false]], "recordtofile (class in tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.RecordToFile", false]], "redirect_to() (tvm.relay.dataflow_pattern.wildcardpattern method)": [[154, "tvm.relay.dataflow_pattern.WildcardPattern.redirect_to", false]], "redistribute() (in module tvm.relax.op.distributed)": [[149, "tvm.relax.op.distributed.redistribute", false]], "redistribute_replica_to_shard() (in module tvm.relax.op.distributed)": [[149, "tvm.relax.op.distributed.redistribute_replica_to_shard", false]], "reduce (class in tvm.tir)": [[173, "tvm.tir.Reduce", false]], "reduce() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.reduce", false]], "reduce_axis() (in module tvm.te)": [[169, "tvm.te.reduce_axis", false]], "reduce_axis() (tvm.autotvm.task.space.configspace static method)": [[136, "tvm.autotvm.task.space.ConfigSpace.reduce_axis", false]], "reducebranchingthroughovercompute() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.ReduceBranchingThroughOvercompute", false]], "ref_count() (tvm.relay.analysis.callgraph method)": [[152, "tvm.relay.analysis.CallGraph.ref_count", false]], "refvalue (class in tvm.relay.backend.interpreter)": [[153, "tvm.relay.backend.interpreter.RefValue", false]], "register() (tvm.target.genericfunc method)": [[168, "tvm.target.GenericFunc.register", false]], "register() (tvm.tir.tensorintrin static method)": [[173, "tvm.tir.TensorIntrin.register", false]], "register_df_node() (in module tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.register_df_node", false]], "register_error() (in module tvm.error)": [[140, "tvm.error.register_error", false]], "register_gradient() (in module tvm.relax.op)": [[149, "tvm.relax.op.register_gradient", false]], "register_intrin_lowering() (in module tvm.ir)": [[144, "tvm.ir.register_intrin_lowering", false]], "register_op_attr() (in module tvm.ir)": [[144, "tvm.ir.register_op_attr", false]], "register_pipeline() (in module tvm.relax)": [[150, "tvm.relax.register_pipeline", false]], "register_task_input_check_func() (in module tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.register_task_input_check_func", false]], "register_topi_compute() (in module tvm.autotvm.task.topi_integration)": [[136, "tvm.autotvm.task.topi_integration.register_topi_compute", false]], "register_topi_schedule() (in module tvm.autotvm.task.topi_integration)": [[136, "tvm.autotvm.task.topi_integration.register_topi_schedule", false]], "register_workload() (in module tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.register_workload", false]], "regular_non_max_suppression() (in module tvm.relay.vision)": [[161, "tvm.relay.vision.regular_non_max_suppression", false]], "reindex() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.reindex", false]], "reindex_cache_read() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.reindex_cache_read", false]], "reindex_cache_write() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.reindex_cache_write", false]], "reinterpret() (in module tvm.tir)": [[173, "tvm.tir.reinterpret", false]], "relax_dynamo() (in module tvm.relax.frontend.torch)": [[148, "tvm.relax.frontend.torch.relax_dynamo", false]], "relayexpr (class in tvm.ir)": [[144, "tvm.ir.RelayExpr", false]], "relayreftype (class in tvm.ir)": [[144, "tvm.ir.RelayRefType", false]], "relayvisualizer (class in tvm.contrib.relay_viz)": [[137, "tvm.contrib.relay_viz.RelayVisualizer", false]], "release() (tvm.contrib.utils.filelock method)": [[137, "tvm.contrib.utils.FileLock.release", false]], "relpath() (tvm.contrib.utils.tempdirectory method)": [[137, "tvm.contrib.utils.TempDirectory.relpath", false]], "relu() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.relu", false]], "relu() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.relu", false]], "relu() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.relu", false]], "remove() (tvm.contrib.utils.tempdirectory method)": [[137, "tvm.contrib.utils.TempDirectory.remove", false]], "remove() (tvm.rpc.rpcsession method)": [[162, "tvm.rpc.RPCSession.remove", false]], "remove_all_unused() (in module tvm.relax.analysis)": [[146, "tvm.relax.analysis.remove_all_unused", false]], "remove_all_unused() (tvm.relax.dataflowblockrewrite method)": [[150, "tvm.relax.DataflowBlockRewrite.remove_all_unused", false]], "remove_index_check() (in module tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.remove_index_check", false]], "remove_rv() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.remove_rv", false]], "remove_unused() (tvm.relax.dataflowblockrewrite method)": [[150, "tvm.relax.DataflowBlockRewrite.remove_unused", false]], "removeassume() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.RemoveAssume", false]], "removenoop() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.RemoveNoOp", false]], "removepuritychecking() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.RemovePurityChecking", false]], "removeredundantreshape (class in tvm.relax.transform)": [[151, "tvm.relax.transform.RemoveRedundantReshape", false]], "removestoreundef() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.RemoveStoreUndef", false]], "removeunusedfunctions() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.RemoveUnusedFunctions", false]], "removeunusedoutputs() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.RemoveUnusedOutputs", false]], "removeunusedparameters() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.RemoveUnusedParameters", false]], "removeweightlayoutrewriteblock() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.RemoveWeightLayoutRewriteBlock", false]], "render() (tvm.contrib.relay_viz.dot.dotplotter method)": [[137, "tvm.contrib.relay_viz.dot.DotPlotter.render", false]], "render() (tvm.contrib.relay_viz.interface.plotter method)": [[137, "tvm.contrib.relay_viz.interface.Plotter.render", false]], "render() (tvm.contrib.relay_viz.terminal.termgraph method)": [[137, "tvm.contrib.relay_viz.terminal.TermGraph.render", false]], "render() (tvm.contrib.relay_viz.terminal.termplotter method)": [[137, "tvm.contrib.relay_viz.terminal.TermPlotter.render", false]], "render() (tvm.instrument.passtiminginstrument static method)": [[143, "tvm.instrument.PassTimingInstrument.render", false]], "renew_defs() (in module tvm.tir.stmt_functor)": [[172, "tvm.tir.stmt_functor.renew_defs", false]], "renormalizesplitpattern() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.RenormalizeSplitPattern", false]], "reorder() (tvm.te.stage method)": [[169, "tvm.te.Stage.reorder", false]], "reorder() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.reorder", false]], "reorder_block_iter_var() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.reorder_block_iter_var", false]], "reorderentity (class in tvm.autotvm.task.space)": [[136, "tvm.autotvm.task.space.ReorderEntity", false]], "reorderpermutedimsafterconcat() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.ReorderPermuteDimsAfterConcat", false]], "reorderspace (class in tvm.autotvm.task.space)": [[136, "tvm.autotvm.task.space.ReorderSpace", false]], "reordertakeaftermatmul() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.ReorderTakeAfterMatmul", false]], "repeat() (in module tvm.relax.op)": [[149, "tvm.relax.op.repeat", false]], "repeatattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.RepeatAttrs", false]], "replace() (tvm.tir.schedule.schedulestate method)": [[171, "tvm.tir.schedule.ScheduleState.replace", false]], "replace_all_uses() (tvm.relax.dataflowblockrewrite method)": [[150, "tvm.relax.DataflowBlockRewrite.replace_all_uses", false]], "replace_global_vars() (tvm.ir.irmodule method)": [[144, "tvm.ir.IRModule.replace_global_vars", false]], "report (class in tvm.runtime.profiling)": [[165, "tvm.runtime.profiling.Report", false]], "request() (tvm.rpc.trackersession method)": [[162, "tvm.rpc.TrackerSession.request", false]], "request_and_run() (tvm.rpc.trackersession method)": [[162, "tvm.rpc.TrackerSession.request_and_run", false]], "requiredbyconditional (tvm.tir.transform.hoistedletbindings attribute)": [[174, "tvm.tir.transform.HoistedLetBindings.RequiredByConditional", false]], "reset() (tvm.autotvm.task.topi_integration.taskextractenv method)": [[136, "tvm.autotvm.task.topi_integration.TaskExtractEnv.reset", false]], "reset() (tvm.autotvm.tuner.gatuner method)": [[136, "tvm.autotvm.tuner.GATuner.reset", false]], "reset() (tvm.autotvm.tuner.gridsearchtuner method)": [[136, "tvm.autotvm.tuner.GridSearchTuner.reset", false]], "reset() (tvm.autotvm.tuner.randomtuner method)": [[136, "tvm.autotvm.tuner.RandomTuner.reset", false]], "reset() (tvm.autotvm.tuner.tuner method)": [[136, "tvm.autotvm.tuner.Tuner.reset", false]], "reset() (tvm.autotvm.tuner.xgbtuner method)": [[136, "tvm.autotvm.tuner.XGBTuner.reset", false]], "reset_attr() (tvm.ir.op method)": [[144, "tvm.ir.Op.reset_attr", false]], "reshape() (in module tvm.relax.op)": [[149, "tvm.relax.op.reshape", false]], "residual_unit() (in module tvm.relay.testing.resnet)": [[159, "tvm.relay.testing.resnet.residual_unit", false]], "resize1d() (in module tvm.relay.image)": [[156, "tvm.relay.image.resize1d", false]], "resize1d() (in module tvm.topi.image)": [[175, "tvm.topi.image.resize1d", false]], "resize2d() (in module tvm.relax.op.image)": [[149, "tvm.relax.op.image.resize2d", false]], "resize2d() (in module tvm.relay.image)": [[156, "tvm.relay.image.resize2d", false]], "resize2d() (in module tvm.topi.image)": [[175, "tvm.topi.image.resize2d", false]], "resize2dattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.Resize2DAttrs", false]], "resize3d() (in module tvm.relay.image)": [[156, "tvm.relay.image.resize3d", false]], "resize3d() (in module tvm.topi.image)": [[175, "tvm.topi.image.resize3d", false]], "resnet() (in module tvm.relay.testing.resnet)": [[159, "tvm.relay.testing.resnet.resnet", false]], "ret() (in module tvm.tir)": [[173, "tvm.tir.ret", false]], "reverse_compute_at() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.reverse_compute_at", false]], "reverse_compute_inline() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.reverse_compute_inline", false]], "rewrite() (in module tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.rewrite", false]], "rewrite() (tvm.relay.dataflow_pattern.dfpatterncallback method)": [[154, "tvm.relay.dataflow_pattern.DFPatternCallback.rewrite", false]], "rewrite_compute_body() (in module tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.rewrite_compute_body", false]], "rewrite_layout_from_state() (tvm.auto_scheduler.computedag method)": [[135, "tvm.auto_scheduler.ComputeDAG.rewrite_layout_from_state", false]], "rewrite_tensor_shape() (in module tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.rewrite_tensor_shape", false]], "rewritecudagraph() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.RewriteCUDAGraph", false]], "rewritedataflowreshape() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.RewriteDataflowReshape", false]], "rewriteunsafeselect() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.RewriteUnsafeSelect", false]], "rfactor() (tvm.te.schedule method)": [[169, "tvm.te.Schedule.rfactor", false]], "rfactor() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.rfactor", false]], "right_shift() (in module tvm.relax.op)": [[149, "tvm.relax.op.right_shift", false]], "riscv_cpu() (in module tvm.target)": [[168, "tvm.target.riscv_cpu", false]], "rms_norm() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.rms_norm", false]], "rms_norm() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.rms_norm", false]], "rocm() (in module tvm.runtime.ndarray)": [[164, "tvm.runtime.ndarray.rocm", false]], "rocm() (in module tvm.target)": [[168, "tvm.target.rocm", false]], "rocm() (tvm.rpc.rpcsession method)": [[162, "tvm.rpc.RPCSession.rocm", false]], "rocm_link() (in module tvm.contrib.rocm)": [[137, "tvm.contrib.rocm.rocm_link", false]], "roi_align() (in module tvm.relay.vision)": [[161, "tvm.relay.vision.roi_align", false]], "roi_pool() (in module tvm.relay.vision)": [[161, "tvm.relay.vision.roi_pool", false]], "rolling_buffer() (tvm.te.stage method)": [[169, "tvm.te.Stage.rolling_buffer", false]], "rolling_buffer() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.rolling_buffer", false]], "root_mark() (tvm.tir.schedule.stmtsref static method)": [[171, "tvm.tir.schedule.StmtSRef.root_mark", false]], "round() (in module tvm.relax.op)": [[149, "tvm.relax.op.round", false]], "round() (in module tvm.te)": [[169, "tvm.te.round", false]], "round() (in module tvm.tir)": [[173, "tvm.tir.round", false]], "rpcerror": [[140, "tvm.error.RPCError", false]], "rpcrunner (class in tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.RPCRunner", false]], "rpcrunner (class in tvm.autotvm.measure.measure_methods)": [[136, "tvm.autotvm.measure.measure_methods.RPCRunner", false]], "rpcsession (class in tvm.rpc)": [[162, "tvm.rpc.RPCSession", false]], "rpcsessiontimeouterror": [[140, "tvm.error.RPCSessionTimeoutError", false]], "rsqrt() (in module tvm.relax.op)": [[149, "tvm.relax.op.rsqrt", false]], "rsqrt() (in module tvm.te)": [[169, "tvm.te.rsqrt", false]], "rsqrt() (in module tvm.tir)": [[173, "tvm.tir.rsqrt", false]], "run() (tvm.contrib.graph_executor.graphmodule method)": [[141, "tvm.contrib.graph_executor.GraphModule.run", false]], "run() (tvm.meta_schedule.runner method)": [[145, "tvm.meta_schedule.Runner.run", false]], "run_after_pass() (tvm.instrument.passinstrument method)": [[143, "tvm.instrument.PassInstrument.run_after_pass", false]], "run_as_python() (in module tvm.relay.testing)": [[159, "tvm.relay.testing.run_as_python", false]], "run_before_pass() (tvm.instrument.passinstrument method)": [[143, "tvm.instrument.PassInstrument.run_before_pass", false]], "runcodegen() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.RunCodegen", false]], "runner (class in tvm.meta_schedule)": [[145, "tvm.meta_schedule.Runner", false]], "same_as() (tvm.ir.globalinfo method)": [[144, "tvm.ir.GlobalInfo.same_as", false]], "same_as() (tvm.ir.type method)": [[144, "tvm.ir.Type.same_as", false]], "same_as() (tvm.relax.structinfo method)": [[150, "tvm.relax.StructInfo.same_as", false]], "same_as() (tvm.runtime.ndarray.ndarray method)": [[164, "tvm.runtime.ndarray.NDArray.same_as", false]], "sample_categorical() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.sample_categorical", false]], "sample_compute_location() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.sample_compute_location", false]], "sample_initial_population() (tvm.auto_scheduler.sketchpolicy method)": [[135, "tvm.auto_scheduler.SketchPolicy.sample_initial_population", false]], "sample_ints() (tvm.autotvm.task.space.configspace method)": [[136, "tvm.autotvm.task.space.ConfigSpace.sample_ints", false]], "sample_partitioned_tile() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.sample_partitioned_tile", false]], "sample_perfect_tile() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.sample_perfect_tile", false]], "save() (tvm.auto_scheduler.xgbmodel method)": [[135, "tvm.auto_scheduler.XGBModel.save", false]], "save() (tvm.meta_schedule.costmodel method)": [[145, "tvm.meta_schedule.CostModel.save", false]], "save_function() (tvm.relax.virtualmachine method)": [[150, "tvm.relax.VirtualMachine.save_function", false]], "save_function() (tvm.runtime.relax_vm.virtualmachine method)": [[166, "tvm.runtime.relax_vm.VirtualMachine.save_function", false]], "save_json() (in module tvm.ir)": [[144, "tvm.ir.save_json", false]], "save_records() (in module tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.save_records", false]], "scale_shift_nchw() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.scale_shift_nchw", false]], "scale_shift_nchwc() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.scale_shift_nchwc", false]], "scale_shift_nhwc() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.scale_shift_nhwc", false]], "scan() (in module tvm.te)": [[169, "tvm.te.scan", false]], "scan_axis (tvm.te.scanop property)": [[169, "tvm.te.ScanOp.scan_axis", false]], "scanop (class in tvm.te)": [[169, "tvm.te.ScanOp", false]], "scanopattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.ScanopAttrs", false]], "scatter() (tvm.runtime.disco.session method)": [[163, "tvm.runtime.disco.Session.scatter", false]], "scatter_elements() (in module tvm.relax.op)": [[149, "tvm.relax.op.scatter_elements", false]], "scatter_from_worker0() (in module tvm.relax.op.ccl)": [[149, "tvm.relax.op.ccl.scatter_from_worker0", false]], "scatter_from_worker0() (tvm.runtime.disco.session method)": [[163, "tvm.runtime.disco.Session.scatter_from_worker0", false]], "scatter_nd() (in module tvm.relax.op)": [[149, "tvm.relax.op.scatter_nd", false]], "schedule (class in tvm.te)": [[169, "tvm.te.Schedule", false]], "schedule (class in tvm.tir.schedule)": [[171, "tvm.tir.schedule.Schedule", false]], "scheduledebugmask (class in tvm.tir.schedule)": [[171, "tvm.tir.schedule.ScheduleDebugMask", false]], "scheduleerror": [[171, "tvm.tir.schedule.ScheduleError", false]], "schedulerule (class in tvm.dlight)": [[138, "tvm.dlight.ScheduleRule", false]], "schedulerule (class in tvm.meta_schedule)": [[145, "tvm.meta_schedule.ScheduleRule", false]], "schedulestate (class in tvm.tir.schedule)": [[171, "tvm.tir.schedule.ScheduleState", false]], "scope() (tvm.tir.buffer method)": [[173, "tvm.tir.Buffer.scope", false]], "script() (in module tvm.te.hybrid)": [[169, "tvm.te.hybrid.script", false]], "search_fc_transpose() (in module tvm.relay.analysis)": [[152, "tvm.relay.analysis.search_fc_transpose", false]], "searchstrategy (class in tvm.meta_schedule)": [[145, "tvm.meta_schedule.SearchStrategy", false]], "searchtask (class in tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.SearchTask", false]], "seed() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.seed", false]], "select (class in tvm.tir)": [[173, "tvm.tir.Select", false]], "select_implementation() (in module tvm.relay.backend.te_compiler)": [[153, "tvm.relay.backend.te_compiler.select_implementation", false]], "separable_conv_block() (in module tvm.relay.testing.mobilenet)": [[159, "tvm.relay.testing.mobilenet.separable_conv_block", false]], "seqexpr (class in tvm.relax)": [[150, "tvm.relax.SeqExpr", false]], "seqstmt (class in tvm.tir)": [[173, "tvm.tir.SeqStmt", false]], "sequential (class in tvm.transform)": [[176, "tvm.transform.Sequential", false]], "sequentialspan (class in tvm.ir)": [[144, "tvm.ir.SequentialSpan", false]], "serialize() (tvm.auto_scheduler.measureinput method)": [[135, "tvm.auto_scheduler.MeasureInput.serialize", false]], "serialize_args() (in module tvm.autotvm.task.task)": [[136, "tvm.autotvm.task.task.serialize_args", false]], "server (class in tvm.rpc)": [[162, "tvm.rpc.Server", false]], "session (class in tvm.runtime.disco)": [[163, "tvm.runtime.disco.Session", false]], "set_attr() (tvm.ir.op method)": [[144, "tvm.ir.Op.set_attr", false]], "set_attrs_type_key() (tvm.ir.op method)": [[144, "tvm.ir.Op.set_attrs_type_key", false]], "set_axis_separator() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.set_axis_separator", false]], "set_default() (tvm.target.genericfunc method)": [[168, "tvm.target.GenericFunc.set_default", false]], "set_error_threshold() (tvm.autotvm.tuner.gatuner method)": [[136, "tvm.autotvm.tuner.GATuner.set_error_threshold", false]], "set_error_threshold() (tvm.autotvm.tuner.gridsearchtuner method)": [[136, "tvm.autotvm.tuner.GridSearchTuner.set_error_threshold", false]], "set_error_threshold() (tvm.autotvm.tuner.randomtuner method)": [[136, "tvm.autotvm.tuner.RandomTuner.set_error_threshold", false]], "set_error_threshold() (tvm.autotvm.tuner.tuner method)": [[136, "tvm.autotvm.tuner.Tuner.set_error_threshold", false]], "set_error_threshold() (tvm.autotvm.tuner.xgbtuner method)": [[136, "tvm.autotvm.tuner.XGBTuner.set_error_threshold", false]], "set_input() (tvm.contrib.graph_executor.graphmodule method)": [[141, "tvm.contrib.graph_executor.GraphModule.set_input", false]], "set_input() (tvm.relax.virtualmachine method)": [[150, "tvm.relax.VirtualMachine.set_input", false]], "set_input() (tvm.runtime.relax_vm.virtualmachine method)": [[166, "tvm.runtime.relax_vm.VirtualMachine.set_input", false]], "set_input_zero_copy() (tvm.contrib.graph_executor.graphmodule method)": [[141, "tvm.contrib.graph_executor.GraphModule.set_input_zero_copy", false]], "set_instrument() (tvm.relax.virtualmachine method)": [[150, "tvm.relax.VirtualMachine.set_instrument", false]], "set_instrument() (tvm.runtime.relax_vm.virtualmachine method)": [[166, "tvm.runtime.relax_vm.VirtualMachine.set_instrument", false]], "set_keep_for_debug() (tvm.contrib.utils.tempdirectory class method)": [[137, "tvm.contrib.utils.TempDirectory.set_keep_for_debug", false]], "set_num_evals() (tvm.transform.passcontext method)": [[176, "tvm.transform.PassContext.set_num_evals", false]], "set_num_inputs() (tvm.ir.op method)": [[144, "tvm.ir.Op.set_num_inputs", false]], "set_output_zero_copy() (tvm.contrib.graph_executor.graphmodule method)": [[141, "tvm.contrib.graph_executor.GraphModule.set_output_zero_copy", false]], "set_params() (tvm.relay.backend.vm.vmcompiler method)": [[153, "tvm.relay.backend.vm.VMCompiler.set_params", false]], "set_scope() (tvm.te.stage method)": [[169, "tvm.te.Stage.set_scope", false]], "set_scope() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.set_scope", false]], "set_store_predicate() (tvm.te.stage method)": [[169, "tvm.te.Stage.set_store_predicate", false]], "set_support_level() (tvm.ir.op method)": [[144, "tvm.ir.Op.set_support_level", false]], "set_var_remap() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.set_var_remap", false]], "shape (tvm.te.tensor property)": [[169, "tvm.te.Tensor.shape", false]], "shape_of() (in module tvm.relax.op)": [[149, "tvm.relax.op.shape_of", false]], "shape_to_tensor() (in module tvm.relax.op)": [[149, "tvm.relax.op.shape_to_tensor", false]], "shapeexpr (class in tvm.relax)": [[150, "tvm.relax.ShapeExpr", false]], "shapepattern (class in tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.ShapePattern", false]], "shapestructinfo (class in tvm.relax)": [[150, "tvm.relax.ShapeStructInfo", false]], "shapetype (class in tvm.relax)": [[150, "tvm.relax.ShapeType", false]], "share_params() (tvm.contrib.graph_executor.graphmodule method)": [[141, "tvm.contrib.graph_executor.GraphModule.share_params", false]], "shift_left() (in module tvm.tir)": [[173, "tvm.tir.shift_left", false]], "shift_right() (in module tvm.tir)": [[173, "tvm.tir.shift_right", false]], "should_run() (tvm.instrument.passinstrument method)": [[143, "tvm.instrument.PassInstrument.should_run", false]], "show() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.show", false]], "show() (tvm.tir.schedule.trace method)": [[171, "tvm.tir.schedule.Trace.show", false]], "shuffle (class in tvm.tir)": [[173, "tvm.tir.Shuffle", false]], "shutdown() (tvm.runtime.disco.session method)": [[163, "tvm.runtime.disco.Session.shutdown", false]], "sigmoid() (in module tvm.relax.op)": [[149, "tvm.relax.op.sigmoid", false]], "sigmoid() (in module tvm.te)": [[169, "tvm.te.sigmoid", false]], "sigmoid() (in module tvm.tir)": [[173, "tvm.tir.sigmoid", false]], "sign() (in module tvm.relax.op)": [[149, "tvm.relax.op.sign", false]], "silu() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.silu", false]], "simdgroup_load() (in module tvm.tir)": [[173, "tvm.tir.simdgroup_load", false]], "simdgroup_multiply_accumulate() (in module tvm.tir)": [[173, "tvm.tir.simdgroup_multiply_accumulate", false]], "simdgroup_store() (in module tvm.tir)": [[173, "tvm.tir.simdgroup_store", false]], "simplified() (tvm.tir.schedule.trace method)": [[171, "tvm.tir.schedule.Trace.simplified", false]], "simplify() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.Simplify", false]], "simplify() (in module tvm.topi.image)": [[175, "tvm.topi.image.simplify", false]], "simplify() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.simplify", false]], "simplifyexpr() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.SimplifyExpr", false]], "simplifyfctranspose() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.SimplifyFCTranspose", false]], "simplifyinference() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.SimplifyInference", false]], "simulated_dequantize() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.simulated_dequantize", false]], "simulated_quantize() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.simulated_quantize", false]], "sin() (in module tvm.relax.op)": [[149, "tvm.relax.op.sin", false]], "sin() (in module tvm.te)": [[169, "tvm.te.sin", false]], "sin() (in module tvm.tir)": [[173, "tvm.tir.sin", false]], "sinh() (in module tvm.relax.op)": [[149, "tvm.relax.op.sinh", false]], "sinh() (in module tvm.te)": [[169, "tvm.te.sinh", false]], "sinh() (in module tvm.tir)": [[173, "tvm.tir.sinh", false]], "size_var() (in module tvm.te)": [[169, "tvm.te.size_var", false]], "sizevar (class in tvm.tir)": [[173, "tvm.tir.SizeVar", false]], "sketchpolicy (class in tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.SketchPolicy", false]], "skipassert() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.SkipAssert", false]], "socketsession (class in tvm.runtime.disco)": [[163, "tvm.runtime.disco.SocketSession", false]], "softmax() (in module tvm.contrib.miopen)": [[137, "tvm.contrib.miopen.softmax", false]], "softmax() (in module tvm.relax.op.nn)": [[149, "tvm.relax.op.nn.softmax", false]], "softmax() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.softmax", false]], "softmax() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.softmax", false]], "softmax_common() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.softmax_common", false]], "softmaxattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.SoftmaxAttrs", false]], "sort() (in module tvm.relax.op)": [[149, "tvm.relax.op.sort", false]], "sortattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.SortAttrs", false]], "source_to_op() (in module tvm.te.hybrid)": [[169, "tvm.te.hybrid.source_to_op", false]], "sourcename (class in tvm.ir)": [[144, "tvm.ir.SourceName", false]], "space (tvm.autotvm.task.space.axis attribute)": [[136, "tvm.autotvm.task.space.Axis.space", false]], "space_to_batch_nd() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.space_to_batch_nd", false]], "space_to_batch_nd() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.space_to_batch_nd", false]], "space_to_depth() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.space_to_depth", false]], "space_to_depth() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.space_to_depth", false]], "spacegenerator (class in tvm.meta_schedule)": [[145, "tvm.meta_schedule.SpaceGenerator", false]], "span (class in tvm.ir)": [[144, "tvm.ir.Span", false]], "sparse_add() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.sparse_add", false]], "sparse_add() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.sparse_add", false]], "sparse_conv2d() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.sparse_conv2d", false]], "sparse_dense() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.sparse_dense", false]], "sparse_dense() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.sparse_dense", false]], "sparse_dense_alter_layout() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.sparse_dense_alter_layout", false]], "sparse_dense_sp_lhs() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.sparse_dense_sp_lhs", false]], "sparse_dense_sp_rhs() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.sparse_dense_sp_rhs", false]], "sparse_transpose() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.sparse_transpose", false]], "sparse_transpose() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.sparse_transpose", false]], "sparseplaceholderop (class in tvm.contrib.sparse)": [[137, "tvm.contrib.sparse.SparsePlaceholderOp", false]], "specialize() (tvm.tir.primfunc method)": [[173, "tvm.tir.PrimFunc.specialize", false]], "specializedcondition (class in tvm.te)": [[169, "tvm.te.SpecializedCondition", false]], "split() (in module tvm.relax.op)": [[149, "tvm.relax.op.split", false]], "split() (tvm.te.stage method)": [[169, "tvm.te.Stage.split", false]], "split() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.split", false]], "split_workload() (in module tvm.autotvm.record)": [[136, "tvm.autotvm.record.split_workload", false]], "splitargs() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.SplitArgs", false]], "splitattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.SplitAttrs", false]], "splitcalltirbypattern() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.SplitCallTIRByPattern", false]], "splitentity (class in tvm.autotvm.task.space)": [[136, "tvm.autotvm.task.space.SplitEntity", false]], "splithostdevice() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.SplitHostDevice", false]], "splitlayoutrewritepreproc() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.SplitLayoutRewritePreproc", false]], "splitspace (class in tvm.autotvm.task.space)": [[136, "tvm.autotvm.task.space.SplitSpace", false]], "sqrt() (in module tvm.relax.op)": [[149, "tvm.relax.op.sqrt", false]], "sqrt() (in module tvm.te)": [[169, "tvm.te.sqrt", false]], "sqrt() (in module tvm.tir)": [[173, "tvm.tir.sqrt", false]], "square() (in module tvm.relax.op)": [[149, "tvm.relax.op.square", false]], "squeeze() (in module tvm.relax.op)": [[149, "tvm.relax.op.squeeze", false]], "squeezeattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.SqueezeAttrs", false]], "stage (class in tvm.te)": [[169, "tvm.te.Stage", false]], "start_checkpoint() (in module tvm.relax.op.grad)": [[149, "tvm.relax.op.grad.start_checkpoint", false]], "start_profile_intrinsic() (in module tvm.tir)": [[173, "tvm.tir.start_profile_intrinsic", false]], "state (tvm.tir.schedule.schedule property)": [[171, "tvm.tir.schedule.Schedule.state", false]], "staticplanblockmemory() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.StaticPlanBlockMemory", false]], "statisticalattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.StatisticalAttrs", false]], "stats() (tvm.relax.executable method)": [[150, "tvm.relax.Executable.stats", false]], "std() (in module tvm.relax.op)": [[149, "tvm.relax.op.std", false]], "stm32() (in module tvm.target)": [[168, "tvm.target.stm32", false]], "stmt (class in tvm.tir)": [[173, "tvm.tir.Stmt", false]], "stmt (tvm.tir.schedule.stmtsref property)": [[171, "tvm.tir.schedule.StmtSRef.stmt", false]], "stmt_list() (in module tvm.tir)": [[173, "tvm.tir.stmt_list", false]], "stmt_seq() (in module tvm.tir)": [[173, "tvm.tir.stmt_seq", false]], "stmtsref (class in tvm.tir.schedule)": [[171, "tvm.tir.schedule.StmtSRef", false]], "stop_lift_params() (in module tvm.relax.op.builtin)": [[149, "tvm.relax.op.builtin.stop_lift_params", false]], "storage_align() (tvm.te.stage method)": [[169, "tvm.te.Stage.storage_align", false]], "storage_align() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.storage_align", false]], "storageflatten() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.StorageFlatten", false]], "storagerewrite() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.StorageRewrite", false]], "stride_h (tvm.topi.nn.workload attribute)": [[175, "tvm.topi.nn.Workload.stride_h", false]], "stride_w (tvm.topi.nn.workload attribute)": [[175, "tvm.topi.nn.Workload.stride_w", false]], "strided_slice() (in module tvm.relax.op)": [[149, "tvm.relax.op.strided_slice", false]], "strided_slice() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.strided_slice", false]], "stridedsliceattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.StridedSliceAttrs", false]], "stringimm (class in tvm.relax)": [[150, "tvm.relax.StringImm", false]], "stringimm (class in tvm.tir)": [[173, "tvm.tir.StringImm", false]], "struct_info (tvm.ir.relayexpr property)": [[144, "tvm.ir.RelayExpr.struct_info", false]], "struct_info_base_check() (in module tvm.relax.analysis)": [[146, "tvm.relax.analysis.struct_info_base_check", false]], "struct_info_lca() (in module tvm.relax.analysis)": [[146, "tvm.relax.analysis.struct_info_lca", false]], "structinfo (class in tvm.relax)": [[150, "tvm.relax.StructInfo", false]], "structural_equal() (in module tvm.ir)": [[144, "tvm.ir.structural_equal", false]], "structural_hash() (in module tvm.ir)": [[144, "tvm.ir.structural_hash", false]], "sub (class in tvm.tir)": [[173, "tvm.tir.Sub", false]], "subrange_length() (tvm.autotvm.task.space.configspace method)": [[136, "tvm.autotvm.task.space.ConfigSpace.subrange_length", false]], "substitute() (in module tvm.tir.stmt_functor)": [[172, "tvm.tir.stmt_functor.substitute", false]], "subtract() (in module tvm.relax.op)": [[149, "tvm.relax.op.subtract", false]], "subtract() (in module tvm.te)": [[169, "tvm.te.subtract", false]], "subtract() (in module tvm.tir)": [[173, "tvm.tir.subtract", false]], "suggest_layout_transforms() (in module tvm.relax.analysis)": [[146, "tvm.relax.analysis.suggest_layout_transforms", false]], "sum() (in module tvm.relax.op)": [[149, "tvm.relax.op.sum", false]], "sum() (in module tvm.te)": [[169, "tvm.te.sum", false]], "sum() (in module tvm.tir)": [[173, "tvm.tir.sum", false]], "summary() (tvm.rpc.trackersession method)": [[162, "tvm.rpc.TrackerSession.summary", false]], "sync_worker_0() (tvm.runtime.disco.session method)": [[163, "tvm.runtime.disco.Session.sync_worker_0", false]], "system_lib() (tvm.rpc.rpcsession method)": [[162, "tvm.rpc.RPCSession.system_lib", false]], "table() (tvm.meta_schedule.profiler method)": [[145, "tvm.meta_schedule.Profiler.table", false]], "table() (tvm.runtime.profiling.report method)": [[165, "tvm.runtime.profiling.Report.table", false]], "tag_scope() (in module tvm.te)": [[169, "tvm.te.tag_scope", false]], "take() (in module tvm.relax.op)": [[149, "tvm.relax.op.take", false]], "take_backward() (in module tvm.relax.op.grad)": [[149, "tvm.relax.op.grad.take_backward", false]], "takeattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.TakeAttrs", false]], "tan() (in module tvm.relax.op)": [[149, "tvm.relax.op.tan", false]], "tan() (in module tvm.te)": [[169, "tvm.te.tan", false]], "tan() (in module tvm.tir)": [[173, "tvm.tir.tan", false]], "tanh() (in module tvm.relax.op)": [[149, "tvm.relax.op.tanh", false]], "tanh() (in module tvm.te)": [[169, "tvm.te.tanh", false]], "tanh() (in module tvm.tir)": [[173, "tvm.tir.tanh", false]], "tar() (in module tvm.contrib.tar)": [[137, "tvm.contrib.tar.tar", false]], "target (class in tvm.target)": [[168, "tvm.target.Target", false]], "target_or_current() (tvm.target.target static method)": [[168, "tvm.target.Target.target_or_current", false]], "targetkind (class in tvm.target)": [[168, "tvm.target.TargetKind", false]], "task (class in tvm.autotvm.task.task)": [[136, "tvm.autotvm.task.task.Task", false]], "taskextractenv (class in tvm.autotvm.task.topi_integration)": [[136, "tvm.autotvm.task.topi_integration.TaskExtractEnv", false]], "taskscheduler (class in tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.TaskScheduler", false]], "taskscheduler (class in tvm.meta_schedule)": [[145, "tvm.meta_schedule.TaskScheduler", false]], "tasktemplate (class in tvm.autotvm.task.task)": [[136, "tvm.autotvm.task.task.TaskTemplate", false]], "tecompiler (class in tvm.relay.backend.te_compiler)": [[153, "tvm.relay.backend.te_compiler.TECompiler", false]], "tempdir() (in module tvm.contrib.utils)": [[137, "tvm.contrib.utils.tempdir", false]], "tempdirectory (class in tvm.contrib.utils)": [[137, "tvm.contrib.utils.TempDirectory", false]], "template() (in module tvm.autotvm.task.task)": [[136, "tvm.autotvm.task.task.template", false]], "tensor (class in tvm.te)": [[169, "tvm.te.Tensor", false]], "tensor_to_shape() (in module tvm.relax.op)": [[149, "tvm.relax.op.tensor_to_shape", false]], "tensoraffinetype (class in tvm.ir)": [[144, "tvm.ir.TensorAffineType", false]], "tensorcomputeop (class in tvm.te)": [[169, "tvm.te.TensorComputeOp", false]], "tensorintrin (class in tvm.tir)": [[173, "tvm.tir.TensorIntrin", false]], "tensorize() (tvm.te.stage method)": [[169, "tvm.te.Stage.tensorize", false]], "tensorize() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.tensorize", false]], "tensorslice (class in tvm.te)": [[169, "tvm.te.TensorSlice", false]], "tensorstructinfo (class in tvm.relax)": [[150, "tvm.relax.TensorStructInfo", false]], "tensortype (class in tvm.ir)": [[144, "tvm.ir.TensorType", false]], "termgraph (class in tvm.contrib.relay_viz.terminal)": [[137, "tvm.contrib.relay_viz.terminal.TermGraph", false]], "terminate() (tvm.rpc.server method)": [[162, "tvm.rpc.Server.terminate", false]], "terminate_task() (tvm.meta_schedule.taskscheduler method)": [[145, "tvm.meta_schedule.TaskScheduler.terminate_task", false]], "termnode (class in tvm.contrib.relay_viz.terminal)": [[137, "tvm.contrib.relay_viz.terminal.TermNode", false]], "termplotter (class in tvm.contrib.relay_viz.terminal)": [[137, "tvm.contrib.relay_viz.terminal.TermPlotter", false]], "termvizparser (class in tvm.contrib.relay_viz.terminal)": [[137, "tvm.contrib.relay_viz.terminal.TermVizParser", false]], "testing_scope() (tvm.relax.block_builder.blockbuilder method)": [[147, "tvm.relax.block_builder.BlockBuilder.testing_scope", false]], "testingscope (class in tvm.relax.block_builder)": [[147, "tvm.relax.block_builder.TestingScope", false]], "text_summary() (tvm.rpc.trackersession method)": [[162, "tvm.rpc.TrackerSession.text_summary", false]], "textureflatten() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.TextureFlatten", false]], "thread_axis() (in module tvm.te)": [[169, "tvm.te.thread_axis", false]], "thread_warp_size (tvm.target.target property)": [[168, "tvm.target.Target.thread_warp_size", false]], "threadedsession (class in tvm.runtime.disco)": [[163, "tvm.runtime.disco.ThreadedSession", false]], "threadsync() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.ThreadSync", false]], "tile() (in module tvm.relax.op)": [[149, "tvm.relax.op.tile", false]], "tile() (tvm.te.stage method)": [[169, "tvm.te.Stage.tile", false]], "tileattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.TileAttrs", false]], "time_evaluator() (tvm.relax.virtualmachine method)": [[150, "tvm.relax.VirtualMachine.time_evaluator", false]], "time_evaluator() (tvm.runtime.relax_vm.virtualmachine method)": [[166, "tvm.runtime.relax_vm.VirtualMachine.time_evaluator", false]], "timeit() (tvm.meta_schedule.profiler static method)": [[145, "tvm.meta_schedule.Profiler.timeit", false]], "tir_vars_in_struct_info() (in module tvm.relax.analysis)": [[146, "tvm.relax.analysis.tir_vars_in_struct_info", false]], "to_cps() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.to_cps", false]], "to_json_dict() (tvm.autotvm.task.space.configentity method)": [[136, "tvm.autotvm.task.space.ConfigEntity.to_json_dict", false]], "to_mxnet_func() (in module tvm.contrib.mxnet)": [[137, "tvm.contrib.mxnet.to_mxnet_func", false]], "to_python() (in module tvm.relay.testing)": [[159, "tvm.relay.testing.to_python", false]], "to_pytorch_func() (in module tvm.contrib.dlpack)": [[137, "tvm.contrib.dlpack.to_pytorch_func", false]], "to_vdevice() (in module tvm.relax.op)": [[149, "tvm.relax.op.to_vdevice", false]], "toanormalform() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.ToANormalForm", false]], "toanormalformexpr() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.ToANormalFormExpr", false]], "tobasicblocknormalform() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.ToBasicBlockNormalForm", false]], "tocps() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.ToCPS", false]], "tographnormalform() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.ToGraphNormalForm", false]], "tomixedprecision() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.ToMixedPrecision", false]], "tomixedprecision() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.ToMixedPrecision", false]], "tonondataflow() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.ToNonDataflow", false]], "topk() (in module tvm.relax.op)": [[149, "tvm.relax.op.topk", false]], "topkattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.TopKAttrs", false]], "topologicalsort() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.TopologicalSort", false]], "touch_task() (tvm.meta_schedule.taskscheduler method)": [[145, "tvm.meta_schedule.TaskScheduler.touch_task", false]], "trace (class in tvm.tir.schedule)": [[171, "tvm.tir.schedule.Trace", false]], "trace (tvm.tir.schedule.schedule property)": [[171, "tvm.tir.schedule.Schedule.trace", false]], "trace() (in module tvm.te)": [[169, "tvm.te.trace", false]], "trace() (in module tvm.tir)": [[173, "tvm.tir.trace", false]], "trackersession (class in tvm.rpc)": [[162, "tvm.rpc.TrackerSession", false]], "transform_block_layout() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.transform_block_layout", false]], "transform_layout() (tvm.te.stage method)": [[169, "tvm.te.Stage.transform_layout", false]], "transform_layout() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.transform_layout", false]], "transformmmabufferlayout() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.TransformMmaBufferLayout", false]], "transformspace (class in tvm.autotvm.task.space)": [[136, "tvm.autotvm.task.space.TransformSpace", false]], "trial_scores() (tvm.autotvm.tuner.callback.monitor method)": [[136, "tvm.autotvm.tuner.callback.Monitor.trial_scores", false]], "trial_timestamps() (tvm.autotvm.tuner.callback.monitor method)": [[136, "tvm.autotvm.tuner.callback.Monitor.trial_timestamps", false]], "tril() (in module tvm.relax.op)": [[149, "tvm.relax.op.tril", false]], "triluattrs (class in tvm.relax.op.op_attrs)": [[149, "tvm.relax.op.op_attrs.TriluAttrs", false]], "triu() (in module tvm.relax.op)": [[149, "tvm.relax.op.triu", false]], "trunc() (in module tvm.te)": [[169, "tvm.te.trunc", false]], "trunc() (in module tvm.tir)": [[173, "tvm.tir.trunc", false]], "truncdiv() (in module tvm.te)": [[169, "tvm.te.truncdiv", false]], "truncdiv() (in module tvm.tir)": [[173, "tvm.tir.truncdiv", false]], "truncmod() (in module tvm.te)": [[169, "tvm.te.truncmod", false]], "truncmod() (in module tvm.tir)": [[173, "tvm.tir.truncmod", false]], "try_get_conv2d_sparse_input() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.try_get_conv2d_sparse_input", false]], "try_get_sparse_input() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.try_get_sparse_input", false]], "try_inline() (in module tvm.dlight)": [[138, "tvm.dlight.try_inline", false]], "try_inline_contiguous_spatial() (in module tvm.dlight)": [[138, "tvm.dlight.try_inline_contiguous_spatial", false]], "tune() (tvm.auto_scheduler.searchtask method)": [[135, "tvm.auto_scheduler.SearchTask.tune", false]], "tune() (tvm.auto_scheduler.taskscheduler method)": [[135, "tvm.auto_scheduler.TaskScheduler.tune", false]], "tune() (tvm.autotvm.tuner.gatuner method)": [[136, "tvm.autotvm.tuner.GATuner.tune", false]], "tune() (tvm.autotvm.tuner.gridsearchtuner method)": [[136, "tvm.autotvm.tuner.GridSearchTuner.tune", false]], "tune() (tvm.autotvm.tuner.randomtuner method)": [[136, "tvm.autotvm.tuner.RandomTuner.tune", false]], "tune() (tvm.autotvm.tuner.tuner method)": [[136, "tvm.autotvm.tuner.Tuner.tune", false]], "tune() (tvm.autotvm.tuner.xgbtuner method)": [[136, "tvm.autotvm.tuner.XGBTuner.tune", false]], "tune() (tvm.meta_schedule.taskscheduler method)": [[145, "tvm.meta_schedule.TaskScheduler.tune", false]], "tune_tasks() (in module tvm.meta_schedule)": [[145, "tvm.meta_schedule.tune_tasks", false]], "tune_tir() (in module tvm.meta_schedule)": [[145, "tvm.meta_schedule.tune_tir", false]], "tunecontext (class in tvm.meta_schedule)": [[145, "tvm.meta_schedule.TuneContext", false]], "tuner (class in tvm.autotvm.tuner)": [[136, "tvm.autotvm.tuner.Tuner", false]], "tuningoptions (class in tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.TuningOptions", false]], "tuple (class in tvm.relax)": [[150, "tvm.relax.Tuple", false]], "tupleaffinetype (class in tvm.ir)": [[144, "tvm.ir.TupleAffineType", false]], "tuplegetitem (class in tvm.relax)": [[150, "tvm.relax.TupleGetItem", false]], "tuplegetitempattern (class in tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.TupleGetItemPattern", false]], "tuplepattern (class in tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.TuplePattern", false]], "tuplestructinfo (class in tvm.relax)": [[150, "tvm.relax.TupleStructInfo", false]], "tupletype (class in tvm.ir)": [[144, "tvm.ir.TupleType", false]], "tvm.auto_scheduler": [[135, "module-tvm.auto_scheduler", false]], "tvm.autotvm": [[136, "module-tvm.autotvm", false]], "tvm.autotvm.measure.measure": [[136, "module-tvm.autotvm.measure.measure", false]], "tvm.autotvm.record": [[136, "module-tvm.autotvm.record", false]], "tvm.autotvm.task": [[136, "module-tvm.autotvm.task", false]], "tvm.autotvm.task.dispatcher": [[136, "module-tvm.autotvm.task.dispatcher", false]], "tvm.autotvm.task.space": [[136, "module-tvm.autotvm.task.space", false]], "tvm.autotvm.task.task": [[136, "module-tvm.autotvm.task.task", false]], "tvm.autotvm.task.topi_integration": [[136, "module-tvm.autotvm.task.topi_integration", false]], "tvm.autotvm.tuner": [[136, "module-tvm.autotvm.tuner", false]], "tvm.autotvm.tuner.callback": [[136, "module-tvm.autotvm.tuner.callback", false]], "tvm.contrib": [[137, "module-tvm.contrib", false]], "tvm.contrib.cblas": [[137, "module-tvm.contrib.cblas", false]], "tvm.contrib.cc": [[137, "module-tvm.contrib.cc", false]], "tvm.contrib.clang": [[137, "module-tvm.contrib.clang", false]], "tvm.contrib.cublas": [[137, "module-tvm.contrib.cublas", false]], "tvm.contrib.dlpack": [[137, "module-tvm.contrib.dlpack", false]], "tvm.contrib.emcc": [[137, "module-tvm.contrib.emcc", false]], "tvm.contrib.graph_executor": [[141, "module-tvm.contrib.graph_executor", false]], "tvm.contrib.miopen": [[137, "module-tvm.contrib.miopen", false]], "tvm.contrib.mxnet": [[137, "module-tvm.contrib.mxnet", false]], "tvm.contrib.ndk": [[137, "module-tvm.contrib.ndk", false]], "tvm.contrib.nnpack": [[137, "module-tvm.contrib.nnpack", false]], "tvm.contrib.nvcc": [[137, "module-tvm.contrib.nvcc", false]], "tvm.contrib.pickle_memoize": [[137, "module-tvm.contrib.pickle_memoize", false]], "tvm.contrib.random": [[137, "module-tvm.contrib.random", false]], "tvm.contrib.relay_viz": [[137, "module-tvm.contrib.relay_viz", false]], "tvm.contrib.relay_viz.dot": [[137, "module-tvm.contrib.relay_viz.dot", false]], "tvm.contrib.relay_viz.interface": [[137, "module-tvm.contrib.relay_viz.interface", false]], "tvm.contrib.relay_viz.terminal": [[137, "module-tvm.contrib.relay_viz.terminal", false]], "tvm.contrib.rocblas": [[137, "module-tvm.contrib.rocblas", false]], "tvm.contrib.rocm": [[137, "module-tvm.contrib.rocm", false]], "tvm.contrib.sparse": [[137, "module-tvm.contrib.sparse", false]], "tvm.contrib.spirv": [[137, "module-tvm.contrib.spirv", false]], "tvm.contrib.tar": [[137, "module-tvm.contrib.tar", false]], "tvm.contrib.utils": [[137, "module-tvm.contrib.utils", false]], "tvm.contrib.xcode": [[137, "module-tvm.contrib.xcode", false]], "tvm.dlight": [[138, "module-tvm.dlight", false]], "tvm.driver": [[139, "module-tvm.driver", false]], "tvm.error": [[140, "module-tvm.error", false]], "tvm.instrument": [[143, "module-tvm.instrument", false]], "tvm.ir": [[144, "module-tvm.ir", false]], "tvm.meta_schedule": [[145, "module-tvm.meta_schedule", false]], "tvm.relax": [[150, "module-tvm.relax", false]], "tvm.relax.analysis": [[146, "module-tvm.relax.analysis", false]], "tvm.relax.block_builder": [[147, "module-tvm.relax.block_builder", false]], "tvm.relax.frontend": [[148, "module-tvm.relax.frontend", false]], "tvm.relax.frontend.onnx": [[148, "module-tvm.relax.frontend.onnx", false]], "tvm.relax.frontend.stablehlo": [[148, "module-tvm.relax.frontend.stablehlo", false]], "tvm.relax.frontend.torch": [[148, "module-tvm.relax.frontend.torch", false]], "tvm.relax.op": [[149, "module-tvm.relax.op", false]], "tvm.relax.op.builtin": [[149, "module-tvm.relax.op.builtin", false]], "tvm.relax.op.ccl": [[149, "module-tvm.relax.op.ccl", false]], "tvm.relax.op.distributed": [[149, "module-tvm.relax.op.distributed", false]], "tvm.relax.op.grad": [[149, "module-tvm.relax.op.grad", false]], "tvm.relax.op.image": [[149, "module-tvm.relax.op.image", false]], "tvm.relax.op.memory": [[149, "module-tvm.relax.op.memory", false]], "tvm.relax.op.nn": [[149, "module-tvm.relax.op.nn", false]], "tvm.relax.op.op_attrs": [[149, "module-tvm.relax.op.op_attrs", false]], "tvm.relax.transform": [[151, "module-tvm.relax.transform", false]], "tvm.relay.analysis": [[152, "module-tvm.relay.analysis", false]], "tvm.relay.backend": [[153, "module-tvm.relay.backend", false]], "tvm.relay.backend.graph_executor_codegen": [[153, "module-tvm.relay.backend.graph_executor_codegen", false]], "tvm.relay.backend.interpreter": [[153, "module-tvm.relay.backend.interpreter", false]], "tvm.relay.backend.te_compiler": [[153, "module-tvm.relay.backend.te_compiler", false]], "tvm.relay.backend.vm": [[153, "module-tvm.relay.backend.vm", false]], "tvm.relay.dataflow_pattern": [[154, "module-tvm.relay.dataflow_pattern", false]], "tvm.relay.frontend": [[155, "module-tvm.relay.frontend", false]], "tvm.relay.image": [[156, "module-tvm.relay.image", false]], "tvm.relay.nn": [[158, "module-tvm.relay.nn", false]], "tvm.relay.testing": [[159, "module-tvm.relay.testing", false]], "tvm.relay.testing.dcgan": [[159, "module-tvm.relay.testing.dcgan", false]], "tvm.relay.testing.densenet": [[159, "module-tvm.relay.testing.densenet", false]], "tvm.relay.testing.inception_v3": [[159, "module-tvm.relay.testing.inception_v3", false]], "tvm.relay.testing.lstm": [[159, "module-tvm.relay.testing.lstm", false]], "tvm.relay.testing.mlp": [[159, "module-tvm.relay.testing.mlp", false]], "tvm.relay.testing.mobilenet": [[159, "module-tvm.relay.testing.mobilenet", false]], "tvm.relay.testing.resnet": [[159, "module-tvm.relay.testing.resnet", false]], "tvm.relay.testing.squeezenet": [[159, "module-tvm.relay.testing.squeezenet", false]], "tvm.relay.testing.vgg": [[159, "module-tvm.relay.testing.vgg", false]], "tvm.relay.transform": [[160, "module-tvm.relay.transform", false]], "tvm.relay.vision": [[161, "module-tvm.relay.vision", false]], "tvm.rpc": [[162, "module-tvm.rpc", false]], "tvm.runtime": [[167, "module-tvm.runtime", false]], "tvm.runtime.disco": [[163, "module-tvm.runtime.disco", false]], "tvm.runtime.ndarray": [[164, "module-tvm.runtime.ndarray", false]], "tvm.runtime.profiling": [[165, "module-tvm.runtime.profiling", false]], "tvm.runtime.relax_vm": [[166, "module-tvm.runtime.relax_vm", false]], "tvm.target": [[168, "module-tvm.target", false]], "tvm.te": [[169, "module-tvm.te", false]], "tvm.te.hybrid": [[169, "module-tvm.te.hybrid", false]], "tvm.tir": [[173, "module-tvm.tir", false]], "tvm.tir.analysis.analysis": [[170, "module-tvm.tir.analysis.analysis", false]], "tvm.tir.schedule": [[171, "module-tvm.tir.schedule", false]], "tvm.tir.stmt_functor": [[172, "module-tvm.tir.stmt_functor", false]], "tvm.tir.transform": [[174, "module-tvm.tir.transform", false]], "tvm.topi.image": [[175, "module-tvm.topi.image", false]], "tvm.topi.nn": [[175, "module-tvm.topi.nn", false]], "tvm.topi.sparse": [[175, "module-tvm.topi.sparse", false]], "tvm.transform": [[176, "module-tvm.transform", false]], "tvm_access_ptr() (in module tvm.tir)": [[173, "tvm.tir.tvm_access_ptr", false]], "tvm_bmma_sync() (in module tvm.tir)": [[173, "tvm.tir.tvm_bmma_sync", false]], "tvm_check_return() (in module tvm.tir)": [[173, "tvm.tir.tvm_check_return", false]], "tvm_fill_fragment() (in module tvm.tir)": [[173, "tvm.tir.tvm_fill_fragment", false]], "tvm_load_matrix_sync() (in module tvm.tir)": [[173, "tvm.tir.tvm_load_matrix_sync", false]], "tvm_mma_sync() (in module tvm.tir)": [[173, "tvm.tir.tvm_mma_sync", false]], "tvm_stack_alloca() (in module tvm.tir)": [[173, "tvm.tir.tvm_stack_alloca", false]], "tvm_stack_make_array() (in module tvm.tir)": [[173, "tvm.tir.tvm_stack_make_array", false]], "tvm_stack_make_shape() (in module tvm.tir)": [[173, "tvm.tir.tvm_stack_make_shape", false]], "tvm_store_matrix_sync() (in module tvm.tir)": [[173, "tvm.tir.tvm_store_matrix_sync", false]], "tvm_struct_get() (in module tvm.tir)": [[173, "tvm.tir.tvm_struct_get", false]], "tvm_struct_set() (in module tvm.tir)": [[173, "tvm.tir.tvm_struct_set", false]], "tvm_thread_allreduce() (in module tvm.tir)": [[173, "tvm.tir.tvm_thread_allreduce", false]], "tvm_throw_last_error() (in module tvm.tir)": [[173, "tvm.tir.tvm_throw_last_error", false]], "tvm_tuple() (in module tvm.tir)": [[173, "tvm.tir.tvm_tuple", false]], "tvmbackendallocworkspace() (in module tvm.tir)": [[173, "tvm.tir.TVMBackendAllocWorkspace", false]], "tvmbackendfreeworkspace() (in module tvm.tir)": [[173, "tvm.tir.TVMBackendFreeWorkspace", false]], "tvmerror": [[140, "tvm.error.TVMError", false]], "type (class in tvm.ir)": [[144, "tvm.ir.Type", false]], "type_annotation() (in module tvm.tir)": [[173, "tvm.tir.type_annotation", false]], "typecall (class in tvm.ir)": [[144, "tvm.ir.TypeCall", false]], "typeconstraint (class in tvm.ir)": [[144, "tvm.ir.TypeConstraint", false]], "typedata (class in tvm.ir)": [[144, "tvm.ir.TypeData", false]], "typekind (class in tvm.ir)": [[144, "tvm.ir.TypeKind", false]], "typepattern (class in tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.TypePattern", false]], "typerelation (class in tvm.ir)": [[144, "tvm.ir.TypeRelation", false]], "typevar (class in tvm.ir)": [[144, "tvm.ir.TypeVar", false]], "udchain() (in module tvm.relax.analysis)": [[146, "tvm.relax.analysis.udchain", false]], "un_cps() (in module tvm.relay.transform)": [[160, "tvm.relay.transform.un_cps", false]], "unannotate() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.unannotate", false]], "undef() (in module tvm.tir)": [[173, "tvm.tir.undef", false]], "undefined_vars() (in module tvm.tir.analysis.analysis)": [[170, "tvm.tir.analysis.analysis.undefined_vars", false]], "uniform() (in module tvm.contrib.random)": [[137, "tvm.contrib.random.uniform", false]], "unifythreadbinding() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.UnifyThreadBinding", false]], "unique() (in module tvm.relax.op)": [[149, "tvm.relax.op.unique", false]], "unmatched_cases() (in module tvm.relay.analysis)": [[152, "tvm.relay.analysis.unmatched_cases", false]], "unpack_nchwc_to_nchw() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.unpack_NCHWc_to_nchw", false]], "unroll() (tvm.te.stage method)": [[169, "tvm.te.Stage.unroll", false]], "unroll() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.unroll", false]], "unrollloop() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.UnrollLoop", false]], "unsafe_hide_buffer_access() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.unsafe_hide_buffer_access", false]], "unsafe_set_dtype() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.unsafe_set_dtype", false]], "untar() (in module tvm.contrib.tar)": [[137, "tvm.contrib.tar.untar", false]], "update() (tvm.auto_scheduler.applyhistorybest method)": [[135, "tvm.auto_scheduler.ApplyHistoryBest.update", false]], "update() (tvm.auto_scheduler.dispatchcontext method)": [[135, "tvm.auto_scheduler.DispatchContext.update", false]], "update() (tvm.auto_scheduler.randommodel method)": [[135, "tvm.auto_scheduler.RandomModel.update", false]], "update() (tvm.auto_scheduler.xgbmodel method)": [[135, "tvm.auto_scheduler.XGBModel.update", false]], "update() (tvm.autotvm.task.dispatcher.applyconfig method)": [[136, "tvm.autotvm.task.dispatcher.ApplyConfig.update", false]], "update() (tvm.autotvm.task.dispatcher.applyfixedconfig method)": [[136, "tvm.autotvm.task.dispatcher.ApplyFixedConfig.update", false]], "update() (tvm.autotvm.task.dispatcher.applygraphbest method)": [[136, "tvm.autotvm.task.dispatcher.ApplyGraphBest.update", false]], "update() (tvm.autotvm.task.dispatcher.applyhistorybest method)": [[136, "tvm.autotvm.task.dispatcher.ApplyHistoryBest.update", false]], "update() (tvm.autotvm.task.dispatcher.dispatchcontext method)": [[136, "tvm.autotvm.task.dispatcher.DispatchContext.update", false]], "update() (tvm.autotvm.task.dispatcher.fallbackcontext method)": [[136, "tvm.autotvm.task.dispatcher.FallbackContext.update", false]], "update() (tvm.autotvm.tuner.gatuner method)": [[136, "tvm.autotvm.tuner.GATuner.update", false]], "update() (tvm.autotvm.tuner.gridsearchtuner method)": [[136, "tvm.autotvm.tuner.GridSearchTuner.update", false]], "update() (tvm.autotvm.tuner.randomtuner method)": [[136, "tvm.autotvm.tuner.RandomTuner.update", false]], "update() (tvm.autotvm.tuner.tuner method)": [[136, "tvm.autotvm.tuner.Tuner.update", false]], "update() (tvm.autotvm.tuner.xgbtuner method)": [[136, "tvm.autotvm.tuner.XGBTuner.update", false]], "update() (tvm.ir.irmodule method)": [[144, "tvm.ir.IRModule.update", false]], "update() (tvm.meta_schedule.costmodel method)": [[145, "tvm.meta_schedule.CostModel.update", false]], "update_from_file() (tvm.auto_scheduler.xgbmodel method)": [[135, "tvm.auto_scheduler.XGBModel.update_from_file", false]], "update_func() (tvm.ir.irmodule method)": [[144, "tvm.ir.IRModule.update_func", false]], "update_func() (tvm.relax.block_builder.blockbuilder method)": [[147, "tvm.relax.block_builder.BlockBuilder.update_func", false]], "update_global_info() (tvm.ir.irmodule method)": [[144, "tvm.ir.IRModule.update_global_info", false]], "updateparamstructinfo() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.UpdateParamStructInfo", false]], "updatevdevice() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.UpdateVDevice", false]], "upload() (tvm.rpc.rpcsession method)": [[162, "tvm.rpc.RPCSession.upload", false]], "upsampling() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.upsampling", false]], "upsampling() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.upsampling", false]], "upsampling3d() (in module tvm.relay.nn)": [[158, "tvm.relay.nn.upsampling3d", false]], "upsampling3d() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.upsampling3d", false]], "useassumetoreducebranches() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.UseAssumeToReduceBranches", false]], "usingblockvar (tvm.tir.transform.hoistedconditionals attribute)": [[174, "tvm.tir.transform.HoistedConditionals.UsingBlockVar", false]], "valid() (tvm.autotvm.task.space.configspace method)": [[136, "tvm.autotvm.task.space.ConfigSpace.valid", false]], "value_index (tvm.te.tensor property)": [[169, "tvm.te.Tensor.value_index", false]], "var (class in tvm.relax)": [[150, "tvm.relax.Var", false]], "var (class in tvm.tir)": [[173, "tvm.tir.Var", false]], "var() (in module tvm.te)": [[169, "tvm.te.var", false]], "varbinding (class in tvm.relax)": [[150, "tvm.relax.VarBinding", false]], "variance() (in module tvm.relax.op)": [[149, "tvm.relax.op.variance", false]], "varpattern (class in tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.VarPattern", false]], "vdevice (class in tvm.ir)": [[144, "tvm.ir.VDevice", false]], "vectorcombine() (in module tvm.tir)": [[173, "tvm.tir.vectorcombine", false]], "vectorhigh() (in module tvm.tir)": [[173, "tvm.tir.vectorhigh", false]], "vectorize() (tvm.te.stage method)": [[169, "tvm.te.Stage.vectorize", false]], "vectorize() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.vectorize", false]], "vectorizeloop() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.VectorizeLoop", false]], "vectorlow() (in module tvm.tir)": [[173, "tvm.tir.vectorlow", false]], "verify_cached_flags (tvm.tir.schedule.scheduledebugmask attribute)": [[171, "tvm.tir.schedule.ScheduleDebugMask.VERIFY_CACHED_FLAGS", false]], "verify_gpu_code() (in module tvm.tir.analysis.analysis)": [[170, "tvm.tir.analysis.analysis.verify_gpu_code", false]], "verify_memory() (in module tvm.tir.analysis.analysis)": [[170, "tvm.tir.analysis.analysis.verify_memory", false]], "verify_sref_tree (tvm.tir.schedule.scheduledebugmask attribute)": [[171, "tvm.tir.schedule.ScheduleDebugMask.VERIFY_SREF_TREE", false]], "verify_ssa() (in module tvm.tir.analysis.analysis)": [[170, "tvm.tir.analysis.analysis.verify_ssa", false]], "verify_well_formed() (in module tvm.tir.analysis.analysis)": [[170, "tvm.tir.analysis.analysis.verify_well_formed", false]], "verifymemory() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.VerifyMemory", false]], "verifyvtcmlimit() (in module tvm.tir.transform)": [[174, "tvm.tir.transform.VerifyVTCMLimit", false]], "view() (in module tvm.relax.op.memory)": [[149, "tvm.relax.op.memory.view", false]], "virtualaxis (class in tvm.autotvm.task.space)": [[136, "tvm.autotvm.task.space.VirtualAxis", false]], "virtualdevice (class in tvm.target)": [[168, "tvm.target.VirtualDevice", false]], "virtualmachine (class in tvm.relax)": [[150, "tvm.relax.VirtualMachine", false]], "virtualmachine (class in tvm.runtime.relax_vm)": [[166, "tvm.runtime.relax_vm.VirtualMachine", false]], "visit_binding() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_binding", false]], "visit_binding() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_binding", false]], "visit_binding_block() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_binding_block", false]], "visit_binding_block() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_binding_block", false]], "visit_binding_block_() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_binding_block_", false]], "visit_binding_block_() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_binding_block_", false]], "visit_call_() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_call_", false]], "visit_call_() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_call_", false]], "visit_constant_() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_constant_", false]], "visit_constant_() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_constant_", false]], "visit_data_type_imm_() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_data_type_imm_", false]], "visit_data_type_imm_() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_data_type_imm_", false]], "visit_dataflow_block_() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_dataflow_block_", false]], "visit_dataflow_block_() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_dataflow_block_", false]], "visit_dataflow_var_() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_dataflow_var_", false]], "visit_dataflow_var_() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_dataflow_var_", false]], "visit_dataflow_var_def_() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_dataflow_var_def_", false]], "visit_dataflow_var_def_() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_dataflow_var_def_", false]], "visit_expr() (tvm.relax.exprfunctor method)": [[150, "tvm.relax.ExprFunctor.visit_expr", false]], "visit_expr() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_expr", false]], "visit_expr() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_expr", false]], "visit_expr_post_order() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_expr_post_order", false]], "visit_extern_func_() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_extern_func_", false]], "visit_extern_func_() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_extern_func_", false]], "visit_function_() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_function_", false]], "visit_function_() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_function_", false]], "visit_global_var_() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_global_var_", false]], "visit_global_var_() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_global_var_", false]], "visit_if_() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_if_", false]], "visit_if_() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_if_", false]], "visit_match_cast_() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_match_cast_", false]], "visit_match_cast_() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_match_cast_", false]], "visit_op_() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_op_", false]], "visit_op_() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_op_", false]], "visit_prim_value_() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_prim_value_", false]], "visit_prim_value_() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_prim_value_", false]], "visit_seq_expr_() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_seq_expr_", false]], "visit_seq_expr_() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_seq_expr_", false]], "visit_shape_expr_() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_shape_expr_", false]], "visit_shape_expr_() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_shape_expr_", false]], "visit_span() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_span", false]], "visit_span() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_span", false]], "visit_string_imm_() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_string_imm_", false]], "visit_string_imm_() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_string_imm_", false]], "visit_tuple_() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_tuple_", false]], "visit_tuple_() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_tuple_", false]], "visit_tuple_getitem_() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_tuple_getitem_", false]], "visit_tuple_getitem_() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_tuple_getitem_", false]], "visit_var_() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_var_", false]], "visit_var_() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_var_", false]], "visit_var_binding_() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_var_binding_", false]], "visit_var_binding_() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_var_binding_", false]], "visit_var_def() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_var_def", false]], "visit_var_def() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_var_def", false]], "visit_var_def_() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_var_def_", false]], "visit_var_def_() (tvm.relax.pyexprvisitor method)": [[150, "tvm.relax.PyExprVisitor.visit_var_def_", false]], "visit_with_new_scope() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.visit_with_new_scope", false]], "vizedge (class in tvm.contrib.relay_viz.interface)": [[137, "tvm.contrib.relay_viz.interface.VizEdge", false]], "vizgraph (class in tvm.contrib.relay_viz.interface)": [[137, "tvm.contrib.relay_viz.interface.VizGraph", false]], "viznode (class in tvm.contrib.relay_viz.interface)": [[137, "tvm.contrib.relay_viz.interface.VizNode", false]], "vizparser (class in tvm.contrib.relay_viz.interface)": [[137, "tvm.contrib.relay_viz.interface.VizParser", false]], "vload() (tvm.tir.buffer method)": [[173, "tvm.tir.Buffer.vload", false]], "vmbuiltinlower() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.VMBuiltinLower", false]], "vmcompiler (class in tvm.relay.backend.vm)": [[153, "tvm.relay.backend.vm.VMCompiler", false]], "vmexecutor (class in tvm.relay.backend.vm)": [[153, "tvm.relay.backend.vm.VMExecutor", false]], "vminstrumentreturnkind (class in tvm.relax)": [[150, "tvm.relax.VMInstrumentReturnKind", false]], "vminstrumentreturnkind (class in tvm.runtime.relax_vm)": [[166, "tvm.runtime.relax_vm.VMInstrumentReturnKind", false]], "vmshapelower() (in module tvm.relax.transform)": [[151, "tvm.relax.transform.VMShapeLower", false]], "vpi() (in module tvm.runtime.ndarray)": [[164, "tvm.runtime.ndarray.vpi", false]], "vscale() (in module tvm.tir)": [[173, "tvm.tir.vscale", false]], "vstore() (tvm.tir.buffer method)": [[173, "tvm.tir.Buffer.vstore", false]], "vulkan() (in module tvm.runtime.ndarray)": [[164, "tvm.runtime.ndarray.vulkan", false]], "vulkan() (tvm.rpc.rpcsession method)": [[162, "tvm.rpc.RPCSession.vulkan", false]], "war (tvm.tir.schedule.depkind attribute)": [[171, "tvm.tir.schedule.DepKind.WAR", false]], "waw (tvm.tir.schedule.depkind attribute)": [[171, "tvm.tir.schedule.DepKind.WAW", false]], "webgpu() (in module tvm.runtime.ndarray)": [[164, "tvm.runtime.ndarray.webgpu", false]], "webgpu() (tvm.rpc.rpcsession method)": [[162, "tvm.rpc.RPCSession.webgpu", false]], "well_formed() (in module tvm.relax.analysis)": [[146, "tvm.relax.analysis.well_formed", false]], "well_formed() (in module tvm.relay.analysis)": [[152, "tvm.relay.analysis.well_formed", false]], "where() (in module tvm.relax.op)": [[149, "tvm.relax.op.where", false]], "which() (in module tvm.contrib.utils)": [[137, "tvm.contrib.utils.which", false]], "while (class in tvm.tir)": [[173, "tvm.tir.While", false]], "width (tvm.topi.nn.workload attribute)": [[175, "tvm.topi.nn.Workload.width", false]], "wildcard() (in module tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.wildcard", false]], "wildcardpattern (class in tvm.relay.dataflow_pattern)": [[154, "tvm.relay.dataflow_pattern.WildcardPattern", false]], "winograd_transform_matrices() (in module tvm.topi.nn)": [[175, "tvm.topi.nn.winograd_transform_matrices", false]], "with_attr() (tvm.ir.basefunc method)": [[144, "tvm.ir.BaseFunc.with_attr", false]], "with_attr() (tvm.ir.irmodule method)": [[144, "tvm.ir.IRModule.with_attr", false]], "with_attrs() (tvm.ir.basefunc method)": [[144, "tvm.ir.BaseFunc.with_attrs", false]], "with_attrs() (tvm.ir.irmodule method)": [[144, "tvm.ir.IRModule.with_attrs", false]], "with_body() (tvm.tir.primfunc method)": [[173, "tvm.tir.PrimFunc.with_body", false]], "with_decision() (tvm.tir.schedule.trace method)": [[171, "tvm.tir.schedule.Trace.with_decision", false]], "with_minrpc() (in module tvm.rpc)": [[162, "tvm.rpc.with_minrpc", false]], "with_struct_info() (tvm.relax.pyexprmutator method)": [[150, "tvm.relax.PyExprMutator.with_struct_info", false]], "without_attr() (tvm.ir.basefunc method)": [[144, "tvm.ir.BaseFunc.without_attr", false]], "without_attr() (tvm.ir.irmodule method)": [[144, "tvm.ir.IRModule.without_attr", false]], "work_on() (tvm.tir.schedule.schedule method)": [[171, "tvm.tir.schedule.Schedule.work_on", false]], "workload (class in tvm.topi.nn)": [[175, "tvm.topi.nn.Workload", false]], "workload_key() (tvm.auto_scheduler.computedag method)": [[135, "tvm.auto_scheduler.ComputeDAG.workload_key", false]], "workspacememorypools (class in tvm.ir)": [[144, "tvm.ir.WorkspaceMemoryPools", false]], "workspacepoolinfo (class in tvm.ir)": [[144, "tvm.ir.WorkspacePoolInfo", false]], "wrap_param() (in module tvm.relax.op)": [[149, "tvm.relax.op.wrap_param", false]], "xcrun() (in module tvm.contrib.xcode)": [[137, "tvm.contrib.xcode.xcrun", false]], "xgbmodel (class in tvm.auto_scheduler)": [[135, "tvm.auto_scheduler.XGBModel", false]], "xgbtuner (class in tvm.autotvm.tuner)": [[136, "tvm.autotvm.tuner.XGBTuner", false]], "yolo_reorg() (in module tvm.relay.vision)": [[161, "tvm.relay.vision.yolo_reorg", false]], "zeros() (in module tvm.relax.op)": [[149, "tvm.relax.op.zeros", false]], "zeros_like() (in module tvm.relax.op)": [[149, "tvm.relax.op.zeros_like", false]]}, "objects": {"tvm": [[135, 0, 0, "-", "auto_scheduler"], [136, 0, 0, "-", "autotvm"], [139, 3, 1, "", "build"], [137, 0, 0, "-", "contrib"], [138, 0, 0, "-", "dlight"], [139, 0, 0, "-", "driver"], [140, 0, 0, "-", "error"], [143, 0, 0, "-", "instrument"], [144, 0, 0, "-", "ir"], [139, 3, 1, "", "lower"], [145, 0, 0, "-", "meta_schedule"], [150, 0, 0, "-", "relax"], [162, 0, 0, "-", "rpc"], [167, 0, 0, "-", "runtime"], [168, 0, 0, "-", "target"], [169, 0, 0, "-", "te"], [173, 0, 0, "-", "tir"], [176, 0, 0, "-", "transform"]], "tvm.auto_scheduler": [[135, 1, 1, "", "ApplyHistoryBest"], [135, 1, 1, "", "ApplyHistoryBestOrSample"], [135, 1, 1, "", "ComputeDAG"], [135, 1, 1, "", "DispatchContext"], [135, 1, 1, "", "EmptyPolicy"], [135, 1, 1, "", "HardwareParams"], [135, 1, 1, "", "LayoutRewriteOption"], [135, 1, 1, "", "LocalBuilder"], [135, 1, 1, "", "LocalRPCMeasureContext"], [135, 1, 1, "", "LocalRunner"], [135, 1, 1, "", "MeasureInput"], [135, 1, 1, "", "MeasureResult"], [135, 1, 1, "", "PreloadCustomSketchRule"], [135, 1, 1, "", "PreloadMeasuredStates"], [135, 1, 1, "", "RPCRunner"], [135, 1, 1, "", "RandomModel"], [135, 1, 1, "", "RecordReader"], [135, 1, 1, "", "RecordToFile"], [135, 1, 1, "", "SearchTask"], [135, 1, 1, "", "SketchPolicy"], [135, 1, 1, "", "TaskScheduler"], [135, 1, 1, "", "TuningOptions"], [135, 1, 1, "", "XGBModel"], [135, 3, 1, "", "auto_schedule"], [135, 3, 1, "", "create_task"], [135, 3, 1, "", "extract_tasks"], [135, 3, 1, "", "get_shape_from_rewritten_layout"], [135, 3, 1, "", "is_auto_scheduler_enabled"], [135, 3, 1, "", "load_best_record"], [135, 3, 1, "", "load_records"], [135, 3, 1, "", "make_workload_key"], [135, 3, 1, "", "register_task_input_check_func"], [135, 3, 1, "", "register_workload"], [135, 3, 1, "", "remove_index_check"], [135, 3, 1, "", "rewrite_compute_body"], [135, 3, 1, "", "rewrite_tensor_shape"], [135, 3, 1, "", "save_records"]], "tvm.auto_scheduler.ApplyHistoryBest": [[135, 2, 1, "", "get_workload_entry"], [135, 2, 1, "", "load"], [135, 2, 1, "", "update"]], "tvm.auto_scheduler.ApplyHistoryBestOrSample": [[135, 2, 1, "", "query"]], "tvm.auto_scheduler.ComputeDAG": [[135, 2, 1, "", "apply_steps_from_state"], [135, 2, 1, "", "get_init_state"], [135, 2, 1, "", "infer_bound_from_state"], [135, 2, 1, "", "print_python_code_from_state"], [135, 2, 1, "", "rewrite_layout_from_state"], [135, 2, 1, "", "workload_key"]], "tvm.auto_scheduler.DispatchContext": [[135, 2, 1, "", "query"], [135, 2, 1, "", "update"]], "tvm.auto_scheduler.LayoutRewriteOption": [[135, 2, 1, "", "get_target_default"]], "tvm.auto_scheduler.MeasureInput": [[135, 2, 1, "", "serialize"]], "tvm.auto_scheduler.RandomModel": [[135, 2, 1, "", "predict"], [135, 2, 1, "", "update"]], "tvm.auto_scheduler.RecordReader": [[135, 2, 1, "", "check_workload_key"], [135, 2, 1, "", "read_lines"]], "tvm.auto_scheduler.SearchTask": [[135, 2, 1, "", "apply_best"], [135, 2, 1, "", "print_best"], [135, 2, 1, "", "tune"]], "tvm.auto_scheduler.SketchPolicy": [[135, 2, 1, "", "evolutionary_search"], [135, 2, 1, "", "generate_sketches"], [135, 2, 1, "", "sample_initial_population"]], "tvm.auto_scheduler.TaskScheduler": [[135, 2, 1, "", "tune"]], "tvm.auto_scheduler.XGBModel": [[135, 2, 1, "", "load"], [135, 2, 1, "", "predict"], [135, 2, 1, "", "predict_stages"], [135, 2, 1, "", "save"], [135, 2, 1, "", "update"], [135, 2, 1, "", "update_from_file"]], "tvm.autotvm": [[136, 3, 1, "", "apply_history_best"], [136, 0, 0, "-", "record"], [136, 0, 0, "-", "task"], [136, 0, 0, "-", "tuner"]], "tvm.autotvm.measure": [[136, 1, 1, "", "MeasureInput"], [136, 1, 1, "", "MeasureResult"], [136, 3, 1, "", "create_measure_batch"], [136, 0, 0, "-", "measure"], [136, 3, 1, "", "measure_option"]], "tvm.autotvm.measure.measure_methods": [[136, 1, 1, "", "LocalBuilder"], [136, 1, 1, "", "LocalRunner"], [136, 1, 1, "", "RPCRunner"]], "tvm.autotvm.record": [[136, 3, 1, "", "decode"], [136, 3, 1, "", "encode"], [136, 3, 1, "", "load_from_buffer"], [136, 3, 1, "", "load_from_file"], [136, 3, 1, "", "measure_str_key"], [136, 3, 1, "", "pick_best"], [136, 3, 1, "", "split_workload"]], "tvm.autotvm.task": [[136, 0, 0, "-", "dispatcher"], [136, 0, 0, "-", "space"], [136, 0, 0, "-", "task"], [136, 0, 0, "-", "topi_integration"]], "tvm.autotvm.task.dispatcher": [[136, 1, 1, "", "ApplyConfig"], [136, 1, 1, "", "ApplyFixedConfig"], [136, 1, 1, "", "ApplyGraphBest"], [136, 1, 1, "", "ApplyHistoryBest"], [136, 1, 1, "", "DispatchContext"], [136, 1, 1, "", "FallbackContext"], [136, 3, 1, "", "clear_fallback_cache"]], "tvm.autotvm.task.dispatcher.ApplyConfig": [[136, 2, 1, "", "update"]], "tvm.autotvm.task.dispatcher.ApplyFixedConfig": [[136, 2, 1, "", "update"]], "tvm.autotvm.task.dispatcher.ApplyGraphBest": [[136, 2, 1, "", "update"]], "tvm.autotvm.task.dispatcher.ApplyHistoryBest": [[136, 2, 1, "", "load"], [136, 2, 1, "", "update"]], "tvm.autotvm.task.dispatcher.DispatchContext": [[136, 2, 1, "", "query"], [136, 2, 1, "", "update"]], "tvm.autotvm.task.dispatcher.FallbackContext": [[136, 2, 1, "", "clear_cache"], [136, 2, 1, "", "update"]], "tvm.autotvm.task.space": [[136, 1, 1, "", "AnnotateEntity"], [136, 1, 1, "", "AnnotateSpace"], [136, 1, 1, "", "Axis"], [136, 1, 1, "", "ConfigEntity"], [136, 1, 1, "", "ConfigSpace"], [136, 1, 1, "", "FallbackConfigEntity"], [136, 6, 1, "", "InstantiationError"], [136, 1, 1, "", "OtherOptionEntity"], [136, 1, 1, "", "OtherOptionSpace"], [136, 1, 1, "", "ReorderEntity"], [136, 1, 1, "", "ReorderSpace"], [136, 1, 1, "", "SplitEntity"], [136, 1, 1, "", "SplitSpace"], [136, 1, 1, "", "TransformSpace"], [136, 1, 1, "", "VirtualAxis"], [136, 3, 1, "", "get_factors"], [136, 3, 1, "", "get_pow2s"]], "tvm.autotvm.task.space.AnnotateEntity": [[136, 2, 1, "", "apply"]], "tvm.autotvm.task.space.AnnotateSpace": [[136, 2, 1, "", "get_num_output"]], "tvm.autotvm.task.space.Axis": [[136, 4, 1, "", "index"], [136, 4, 1, "", "space"]], "tvm.autotvm.task.space.ConfigEntity": [[136, 2, 1, "", "from_json_dict"], [136, 2, 1, "", "get_flatten_feature"], [136, 2, 1, "", "get_other_option"], [136, 2, 1, "", "to_json_dict"]], "tvm.autotvm.task.space.ConfigSpace": [[136, 2, 1, "", "add_flop"], [136, 2, 1, "", "axis"], [136, 2, 1, "", "clear_cache"], [136, 2, 1, "", "define_annotate"], [136, 2, 1, "", "define_knob"], [136, 2, 1, "", "define_reorder"], [136, 2, 1, "", "define_split"], [136, 5, 1, "", "dims"], [136, 2, 1, "", "get"], [136, 2, 1, "", "get_next_index"], [136, 2, 1, "", "get_rand_index"], [136, 2, 1, "", "is_index_valid"], [136, 2, 1, "", "knob2point"], [136, 2, 1, "", "multi_filter"], [136, 2, 1, "", "point2knob"], [136, 2, 1, "", "raise_error"], [136, 2, 1, "", "random_walk"], [136, 5, 1, "", "range_length"], [136, 2, 1, "", "reduce_axis"], [136, 2, 1, "", "sample_ints"], [136, 2, 1, "", "subrange_length"], [136, 2, 1, "", "valid"]], "tvm.autotvm.task.space.FallbackConfigEntity": [[136, 2, 1, "", "fallback_split"], [136, 2, 1, "", "fallback_with_reference_log"]], "tvm.autotvm.task.space.OtherOptionSpace": [[136, 2, 1, "", "get_num_output"]], "tvm.autotvm.task.space.ReorderEntity": [[136, 2, 1, "", "apply"]], "tvm.autotvm.task.space.ReorderSpace": [[136, 2, 1, "", "get_num_output"]], "tvm.autotvm.task.space.SplitEntity": [[136, 2, 1, "", "apply"]], "tvm.autotvm.task.space.SplitSpace": [[136, 2, 1, "", "get_num_output"]], "tvm.autotvm.task.space.TransformSpace": [[136, 2, 1, "", "get_num_output"]], "tvm.autotvm.task.space.VirtualAxis": [[136, 2, 1, "", "get_num_output"]], "tvm.autotvm.task.task": [[136, 6, 1, "", "FlopCalculationError"], [136, 1, 1, "", "MissingTask"], [136, 1, 1, "", "Task"], [136, 1, 1, "", "TaskTemplate"], [136, 3, 1, "", "args_to_workload"], [136, 3, 1, "", "compute_flop"], [136, 3, 1, "", "create"], [136, 3, 1, "", "deserialize_args"], [136, 3, 1, "", "get_config"], [136, 3, 1, "", "serialize_args"], [136, 3, 1, "", "template"]], "tvm.autotvm.task.task.Task": [[136, 2, 1, "", "instantiate"]], "tvm.autotvm.task.topi_integration": [[136, 1, 1, "", "TaskExtractEnv"], [136, 3, 1, "", "get_workload"], [136, 3, 1, "", "register_topi_compute"], [136, 3, 1, "", "register_topi_schedule"]], "tvm.autotvm.task.topi_integration.TaskExtractEnv": [[136, 2, 1, "", "add_task"], [136, 2, 1, "", "get"], [136, 2, 1, "", "get_tasks"], [136, 2, 1, "", "reset"]], "tvm.autotvm.tuner": [[136, 1, 1, "", "GATuner"], [136, 1, 1, "", "GridSearchTuner"], [136, 1, 1, "", "RandomTuner"], [136, 1, 1, "", "Tuner"], [136, 1, 1, "", "XGBTuner"], [136, 0, 0, "-", "callback"]], "tvm.autotvm.tuner.GATuner": [[136, 2, 1, "", "has_next"], [136, 2, 1, "", "load_history"], [136, 2, 1, "", "next_batch"], [136, 2, 1, "", "reset"], [136, 2, 1, "", "set_error_threshold"], [136, 2, 1, "", "tune"], [136, 2, 1, "", "update"]], "tvm.autotvm.tuner.GridSearchTuner": [[136, 2, 1, "", "has_next"], [136, 2, 1, "", "load_history"], [136, 2, 1, "", "next_batch"], [136, 2, 1, "", "reset"], [136, 2, 1, "", "set_error_threshold"], [136, 2, 1, "", "tune"], [136, 2, 1, "", "update"]], "tvm.autotvm.tuner.RandomTuner": [[136, 2, 1, "", "has_next"], [136, 2, 1, "", "load_history"], [136, 2, 1, "", "next_batch"], [136, 2, 1, "", "reset"], [136, 2, 1, "", "set_error_threshold"], [136, 2, 1, "", "tune"], [136, 2, 1, "", "update"]], "tvm.autotvm.tuner.Tuner": [[136, 2, 1, "", "has_next"], [136, 2, 1, "", "load_history"], [136, 2, 1, "", "next_batch"], [136, 2, 1, "", "reset"], [136, 2, 1, "", "set_error_threshold"], [136, 2, 1, "", "tune"], [136, 2, 1, "", "update"]], "tvm.autotvm.tuner.XGBTuner": [[136, 2, 1, "", "has_next"], [136, 2, 1, "", "load_history"], [136, 2, 1, "", "next_batch"], [136, 2, 1, "", "reset"], [136, 2, 1, "", "set_error_threshold"], [136, 2, 1, "", "tune"], [136, 2, 1, "", "update"]], "tvm.autotvm.tuner.callback": [[136, 1, 1, "", "Monitor"], [136, 3, 1, "", "log_to_database"], [136, 3, 1, "", "log_to_file"], [136, 3, 1, "", "progress_bar"]], "tvm.autotvm.tuner.callback.Monitor": [[136, 2, 1, "", "trial_scores"], [136, 2, 1, "", "trial_timestamps"]], "tvm.contrib": [[137, 0, 0, "-", "cblas"], [137, 0, 0, "-", "cc"], [137, 0, 0, "-", "clang"], [137, 0, 0, "-", "cublas"], [137, 0, 0, "-", "dlpack"], [137, 0, 0, "-", "emcc"], [141, 0, 0, "-", "graph_executor"], [137, 0, 0, "-", "miopen"], [137, 0, 0, "-", "mxnet"], [137, 0, 0, "-", "ndk"], [137, 0, 0, "-", "nnpack"], [137, 0, 0, "-", "nvcc"], [137, 0, 0, "-", "pickle_memoize"], [137, 0, 0, "-", "random"], [137, 0, 0, "-", "relay_viz"], [137, 0, 0, "-", "rocblas"], [137, 0, 0, "-", "rocm"], [137, 0, 0, "-", "sparse"], [137, 0, 0, "-", "spirv"], [137, 0, 0, "-", "tar"], [137, 0, 0, "-", "utils"], [137, 0, 0, "-", "xcode"]], "tvm.contrib.cblas": [[137, 3, 1, "", "batch_matmul"], [137, 3, 1, "", "matmul"]], "tvm.contrib.cc": [[137, 3, 1, "", "create_executable"], [137, 3, 1, "", "create_shared"], [137, 3, 1, "", "create_staticlib"], [137, 3, 1, "", "cross_compiler"], [137, 3, 1, "", "get_cc"], [137, 3, 1, "", "get_global_symbol_section_map"], [137, 3, 1, "", "get_target_by_dump_machine"]], "tvm.contrib.clang": [[137, 3, 1, "", "create_llvm"], [137, 3, 1, "", "find_clang"]], "tvm.contrib.cublas": [[137, 3, 1, "", "batch_matmul"], [137, 3, 1, "", "matmul"]], "tvm.contrib.dlpack": [[137, 3, 1, "", "convert_func"], [137, 3, 1, "", "to_pytorch_func"]], "tvm.contrib.emcc": [[137, 3, 1, "", "create_tvmjs_wasm"]], "tvm.contrib.graph_executor": [[141, 1, 1, "", "GraphModule"], [141, 3, 1, "", "create"], [141, 3, 1, "", "get_device"]], "tvm.contrib.graph_executor.GraphModule": [[141, 2, 1, "", "benchmark"], [141, 2, 1, "", "debug_get_output"], [141, 2, 1, "", "get_input"], [141, 2, 1, "", "get_input_index"], [141, 2, 1, "", "get_input_info"], [141, 2, 1, "", "get_num_inputs"], [141, 2, 1, "", "get_num_outputs"], [141, 2, 1, "", "get_output"], [141, 2, 1, "", "get_output_index"], [141, 2, 1, "", "get_output_info"], [141, 2, 1, "", "load_params"], [141, 4, 1, "", "module"], [141, 2, 1, "", "run"], [141, 2, 1, "", "set_input"], [141, 2, 1, "", "set_input_zero_copy"], [141, 2, 1, "", "set_output_zero_copy"], [141, 2, 1, "", "share_params"]], "tvm.contrib.miopen": [[137, 3, 1, "", "conv2d_forward"], [137, 3, 1, "", "log_softmax"], [137, 3, 1, "", "softmax"]], "tvm.contrib.mxnet": [[137, 3, 1, "", "to_mxnet_func"]], "tvm.contrib.ndk": [[137, 3, 1, "", "create_shared"], [137, 3, 1, "", "create_staticlib"], [137, 3, 1, "", "get_global_symbol_section_map"]], "tvm.contrib.nnpack": [[137, 3, 1, "", "convolution_inference"], [137, 3, 1, "", "convolution_inference_weight_transform"], [137, 3, 1, "", "convolution_inference_without_weight_transform"], [137, 3, 1, "", "fully_connected_inference"], [137, 3, 1, "", "is_available"]], "tvm.contrib.nvcc": [[137, 3, 1, "", "compile_cuda"], [137, 3, 1, "", "find_cuda_path"], [137, 3, 1, "", "get_cuda_version"], [137, 3, 1, "", "have_cudagraph"], [137, 3, 1, "", "have_fp16"], [137, 3, 1, "", "have_int8"], [137, 3, 1, "", "have_tensorcore"], [137, 3, 1, "", "parse_compute_version"]], "tvm.contrib.pickle_memoize": [[137, 1, 1, "", "Cache"], [137, 3, 1, "", "memoize"]], "tvm.contrib.pickle_memoize.Cache": [[137, 5, 1, "", "cache"]], "tvm.contrib.random": [[137, 3, 1, "", "normal"], [137, 3, 1, "", "randint"], [137, 3, 1, "", "uniform"]], "tvm.contrib.relay_viz": [[137, 1, 1, "", "RelayVisualizer"], [137, 0, 0, "-", "dot"], [137, 0, 0, "-", "interface"], [137, 0, 0, "-", "terminal"]], "tvm.contrib.relay_viz.dot": [[137, 1, 1, "", "DotGraph"], [137, 1, 1, "", "DotPlotter"]], "tvm.contrib.relay_viz.dot.DotGraph": [[137, 2, 1, "", "edge"], [137, 2, 1, "", "node"]], "tvm.contrib.relay_viz.dot.DotPlotter": [[137, 2, 1, "", "create_graph"], [137, 2, 1, "", "render"]], "tvm.contrib.relay_viz.interface": [[137, 1, 1, "", "DefaultVizParser"], [137, 1, 1, "", "Plotter"], [137, 1, 1, "", "VizEdge"], [137, 1, 1, "", "VizGraph"], [137, 1, 1, "", "VizNode"], [137, 1, 1, "", "VizParser"]], "tvm.contrib.relay_viz.interface.DefaultVizParser": [[137, 2, 1, "", "get_node_edges"]], "tvm.contrib.relay_viz.interface.Plotter": [[137, 2, 1, "", "create_graph"], [137, 2, 1, "", "render"]], "tvm.contrib.relay_viz.interface.VizGraph": [[137, 2, 1, "", "edge"], [137, 2, 1, "", "node"]], "tvm.contrib.relay_viz.interface.VizParser": [[137, 2, 1, "", "get_node_edges"]], "tvm.contrib.relay_viz.terminal": [[137, 1, 1, "", "TermGraph"], [137, 1, 1, "", "TermNode"], [137, 1, 1, "", "TermPlotter"], [137, 1, 1, "", "TermVizParser"]], "tvm.contrib.relay_viz.terminal.TermGraph": [[137, 2, 1, "", "edge"], [137, 2, 1, "", "node"], [137, 2, 1, "", "render"]], "tvm.contrib.relay_viz.terminal.TermPlotter": [[137, 2, 1, "", "create_graph"], [137, 2, 1, "", "render"]], "tvm.contrib.relay_viz.terminal.TermVizParser": [[137, 2, 1, "", "get_node_edges"]], "tvm.contrib.rocblas": [[137, 3, 1, "", "batch_matmul"], [137, 3, 1, "", "matmul"]], "tvm.contrib.rocm": [[137, 3, 1, "", "find_lld"], [137, 3, 1, "", "find_rocm_path"], [137, 3, 1, "", "have_matrixcore"], [137, 3, 1, "", "parse_compute_version"], [137, 3, 1, "", "rocm_link"]], "tvm.contrib.sparse": [[137, 1, 1, "", "CSRNDArray"], [137, 1, 1, "", "CSRPlaceholderOp"], [137, 1, 1, "", "SparsePlaceholderOp"], [137, 3, 1, "", "array"], [137, 3, 1, "", "placeholder"]], "tvm.contrib.sparse.CSRNDArray": [[137, 2, 1, "", "asnumpy"], [137, 2, 1, "", "numpy"]], "tvm.contrib.spirv": [[137, 3, 1, "", "optimize"]], "tvm.contrib.tar": [[137, 3, 1, "", "normalize_file_list_by_unpacking_tars"], [137, 3, 1, "", "tar"], [137, 3, 1, "", "untar"]], "tvm.contrib.utils": [[137, 6, 1, "", "DirectoryCreatedPastAtExit"], [137, 1, 1, "", "FileLock"], [137, 1, 1, "", "TempDirectory"], [137, 3, 1, "", "filelock"], [137, 3, 1, "", "is_source_path"], [137, 3, 1, "", "tempdir"], [137, 3, 1, "", "which"]], "tvm.contrib.utils.FileLock": [[137, 2, 1, "", "release"]], "tvm.contrib.utils.TempDirectory": [[137, 2, 1, "", "listdir"], [137, 2, 1, "", "relpath"], [137, 2, 1, "", "remove"], [137, 2, 1, "", "set_keep_for_debug"]], "tvm.contrib.xcode": [[137, 3, 1, "", "compile_coreml"], [137, 3, 1, "", "compile_metal"], [137, 3, 1, "", "create_dylib"], [137, 3, 1, "", "xcrun"]], "tvm.dlight": [[138, 1, 1, "", "ApplyDefaultSchedule"], [138, 1, 1, "", "BlockInfo"], [138, 1, 1, "", "IterInfo"], [138, 1, 1, "", "ScheduleRule"], [138, 3, 1, "", "normalize_prim_func"], [138, 3, 1, "", "try_inline"], [138, 3, 1, "", "try_inline_contiguous_spatial"]], "tvm.dlight.BlockInfo": [[138, 2, 1, "", "dom"], [138, 2, 1, "", "dom_kind"], [138, 2, 1, "", "is_elementwise"], [138, 2, 1, "", "is_gemm"], [138, 2, 1, "", "is_gemv"], [138, 2, 1, "", "is_injective"], [138, 2, 1, "", "is_reduction"]], "tvm.dlight.IterInfo": [[138, 5, 1, "", "dom"]], "tvm.dlight.ScheduleRule": [[138, 2, 1, "", "apply"], [138, 2, 1, "", "from_callable"], [138, 2, 1, "", "is_target_available"]], "tvm.error": [[140, 6, 1, "", "DiagnosticError"], [140, 6, 1, "", "InternalError"], [140, 6, 1, "", "OpAttributeInvalid"], [140, 6, 1, "", "OpAttributeRequired"], [140, 6, 1, "", "OpAttributeUnImplemented"], [140, 6, 1, "", "OpError"], [140, 6, 1, "", "OpNotImplemented"], [140, 6, 1, "", "RPCError"], [140, 6, 1, "", "RPCSessionTimeoutError"], [140, 6, 1, "", "TVMError"], [140, 3, 1, "", "register_error"]], "tvm.instrument": [[143, 1, 1, "", "PassInstrument"], [143, 1, 1, "", "PassPrintingInstrument"], [143, 1, 1, "", "PassTimingInstrument"], [143, 1, 1, "", "PrintAfterAll"], [143, 1, 1, "", "PrintBeforeAll"], [143, 3, 1, "", "pass_instrument"]], "tvm.instrument.PassInstrument": [[143, 2, 1, "", "enter_pass_ctx"], [143, 2, 1, "", "exit_pass_ctx"], [143, 2, 1, "", "run_after_pass"], [143, 2, 1, "", "run_before_pass"], [143, 2, 1, "", "should_run"]], "tvm.instrument.PassTimingInstrument": [[143, 2, 1, "", "render"]], "tvm.ir": [[144, 1, 1, "", "Array"], [144, 1, 1, "", "Attrs"], [144, 1, 1, "", "BaseExpr"], [144, 1, 1, "", "BaseFunc"], [144, 1, 1, "", "CallingConv"], [144, 1, 1, "", "ConstantMemoryPools"], [144, 1, 1, "", "ConstantPoolInfo"], [144, 1, 1, "", "Constructor"], [144, 1, 1, "", "DictAttrs"], [144, 1, 1, "", "DummyGlobalInfo"], [144, 1, 1, "", "EnvFunc"], [144, 1, 1, "", "FuncType"], [144, 1, 1, "", "GlobalInfo"], [144, 1, 1, "", "GlobalTypeVar"], [144, 1, 1, "", "GlobalVar"], [144, 1, 1, "", "IRModule"], [144, 1, 1, "", "IncompleteType"], [144, 1, 1, "", "Map"], [144, 1, 1, "", "Node"], [144, 1, 1, "", "Op"], [144, 1, 1, "", "PointerType"], [144, 1, 1, "", "PoolInfo"], [144, 1, 1, "", "PoolInfoProperties"], [144, 1, 1, "", "PrimExpr"], [144, 1, 1, "", "PrimType"], [144, 1, 1, "", "Range"], [144, 1, 1, "", "RelayExpr"], [144, 1, 1, "", "RelayRefType"], [144, 1, 1, "", "SequentialSpan"], [144, 1, 1, "", "SourceName"], [144, 1, 1, "", "Span"], [144, 1, 1, "", "TensorAffineType"], [144, 1, 1, "", "TensorType"], [144, 1, 1, "", "TupleAffineType"], [144, 1, 1, "", "TupleType"], [144, 1, 1, "", "Type"], [144, 1, 1, "", "TypeCall"], [144, 1, 1, "", "TypeConstraint"], [144, 1, 1, "", "TypeData"], [144, 1, 1, "", "TypeKind"], [144, 1, 1, "", "TypeRelation"], [144, 1, 1, "", "TypeVar"], [144, 1, 1, "", "VDevice"], [144, 1, 1, "", "WorkspaceMemoryPools"], [144, 1, 1, "", "WorkspacePoolInfo"], [144, 3, 1, "", "assert_structural_equal"], [144, 3, 1, "", "load_json"], [144, 3, 1, "", "make_node"], [144, 3, 1, "", "register_intrin_lowering"], [144, 3, 1, "", "register_op_attr"], [144, 3, 1, "", "save_json"], [144, 3, 1, "", "structural_equal"], [144, 3, 1, "", "structural_hash"]], "tvm.ir.Attrs": [[144, 2, 1, "", "get_int"], [144, 2, 1, "", "get_int_tuple"], [144, 2, 1, "", "get_str"], [144, 2, 1, "", "keys"], [144, 2, 1, "", "list_field_info"]], "tvm.ir.BaseFunc": [[144, 5, 1, "", "attrs"], [144, 2, 1, "", "with_attr"], [144, 2, 1, "", "with_attrs"], [144, 2, 1, "", "without_attr"]], "tvm.ir.DictAttrs": [[144, 2, 1, "", "get"], [144, 2, 1, "", "items"], [144, 2, 1, "", "keys"]], "tvm.ir.EnvFunc": [[144, 2, 1, "", "get"]], "tvm.ir.GlobalInfo": [[144, 2, 1, "", "same_as"]], "tvm.ir.GlobalVar": [[144, 2, 1, "", "astext"]], "tvm.ir.IRModule": [[144, 2, 1, "", "astext"], [144, 2, 1, "", "from_expr"], [144, 2, 1, "", "functions_items"], [144, 2, 1, "", "get_attr"], [144, 2, 1, "", "get_constructor"], [144, 2, 1, "", "get_global_type_var"], [144, 2, 1, "", "get_global_type_vars"], [144, 2, 1, "", "get_global_var"], [144, 2, 1, "", "get_global_vars"], [144, 2, 1, "", "replace_global_vars"], [144, 2, 1, "", "update"], [144, 2, 1, "", "update_func"], [144, 2, 1, "", "update_global_info"], [144, 2, 1, "", "with_attr"], [144, 2, 1, "", "with_attrs"], [144, 2, 1, "", "without_attr"]], "tvm.ir.Map": [[144, 2, 1, "", "get"], [144, 2, 1, "", "items"]], "tvm.ir.Op": [[144, 2, 1, "", "add_argument"], [144, 2, 1, "", "add_type_rel"], [144, 2, 1, "", "astext"], [144, 2, 1, "", "get"], [144, 2, 1, "", "get_attr"], [144, 2, 1, "", "has_attr"], [144, 2, 1, "", "list_op_names"], [144, 2, 1, "", "reset_attr"], [144, 2, 1, "", "set_attr"], [144, 2, 1, "", "set_attrs_type_key"], [144, 2, 1, "", "set_num_inputs"], [144, 2, 1, "", "set_support_level"]], "tvm.ir.Range": [[144, 2, 1, "", "from_min_extent"]], "tvm.ir.RelayExpr": [[144, 5, 1, "", "checked_type"], [144, 5, 1, "", "struct_info"]], "tvm.ir.TensorType": [[144, 5, 1, "", "concrete_shape"]], "tvm.ir.Type": [[144, 2, 1, "", "same_as"]], "tvm.meta_schedule": [[145, 1, 1, "", "Builder"], [145, 1, 1, "", "CostModel"], [145, 1, 1, "", "Database"], [145, 1, 1, "", "ExtractedTask"], [145, 1, 1, "", "FeatureExtractor"], [145, 1, 1, "", "MeasureCallback"], [145, 1, 1, "", "MeasureCandidate"], [145, 1, 1, "", "Mutator"], [145, 1, 1, "", "Postproc"], [145, 1, 1, "", "Profiler"], [145, 1, 1, "", "Runner"], [145, 1, 1, "", "ScheduleRule"], [145, 1, 1, "", "SearchStrategy"], [145, 1, 1, "", "SpaceGenerator"], [145, 1, 1, "", "TaskScheduler"], [145, 1, 1, "", "TuneContext"], [145, 3, 1, "", "derived_object"], [145, 3, 1, "", "is_meta_schedule_enabled"], [145, 3, 1, "", "tune_tasks"], [145, 3, 1, "", "tune_tir"]], "tvm.meta_schedule.Builder": [[145, 2, 1, "", "build"], [145, 2, 1, "", "create"]], "tvm.meta_schedule.CostModel": [[145, 2, 1, "", "create"], [145, 2, 1, "", "load"], [145, 2, 1, "", "predict"], [145, 2, 1, "", "save"], [145, 2, 1, "", "update"]], "tvm.meta_schedule.Database": [[145, 2, 1, "", "commit_tuning_record"], [145, 2, 1, "", "commit_workload"], [145, 2, 1, "", "create"], [145, 2, 1, "", "current"], [145, 2, 1, "", "dump_pruned"], [145, 2, 1, "", "get_all_tuning_records"], [145, 2, 1, "", "get_top_k"], [145, 2, 1, "", "has_workload"], [145, 2, 1, "", "query"], [145, 2, 1, "", "query_ir_module"], [145, 2, 1, "", "query_schedule"], [145, 2, 1, "", "query_tuning_record"]], "tvm.meta_schedule.FeatureExtractor": [[145, 2, 1, "", "create"], [145, 2, 1, "", "extract_from"]], "tvm.meta_schedule.MeasureCallback": [[145, 2, 1, "", "apply"], [145, 2, 1, "", "create"]], "tvm.meta_schedule.Mutator": [[145, 2, 1, "", "apply"], [145, 2, 1, "", "clone"], [145, 2, 1, "", "create"]], "tvm.meta_schedule.Postproc": [[145, 2, 1, "", "apply"], [145, 2, 1, "", "clone"], [145, 2, 1, "", "create"]], "tvm.meta_schedule.Profiler": [[145, 2, 1, "", "current"], [145, 2, 1, "", "get"], [145, 2, 1, "", "table"], [145, 2, 1, "", "timeit"]], "tvm.meta_schedule.Runner": [[145, 2, 1, "", "create"], [145, 2, 1, "", "run"]], "tvm.meta_schedule.ScheduleRule": [[145, 2, 1, "", "apply"], [145, 2, 1, "", "clone"], [145, 2, 1, "", "create"]], "tvm.meta_schedule.SearchStrategy": [[145, 2, 1, "", "clone"], [145, 2, 1, "", "create"], [145, 2, 1, "", "generate_measure_candidates"], [145, 2, 1, "", "notify_runner_results"], [145, 2, 1, "", "post_tuning"], [145, 2, 1, "", "pre_tuning"]], "tvm.meta_schedule.SpaceGenerator": [[145, 2, 1, "", "clone"], [145, 2, 1, "", "create"], [145, 2, 1, "", "generate_design_space"]], "tvm.meta_schedule.TaskScheduler": [[145, 2, 1, "", "create"], [145, 2, 1, "", "join_running_task"], [145, 2, 1, "", "next_task_id"], [145, 2, 1, "", "print_tuning_statistics"], [145, 2, 1, "", "terminate_task"], [145, 2, 1, "", "touch_task"], [145, 2, 1, "", "tune"]], "tvm.meta_schedule.TuneContext": [[145, 2, 1, "", "clone"], [145, 2, 1, "", "generate_design_space"], [145, 2, 1, "", "generate_measure_candidates"], [145, 2, 1, "", "notify_runner_results"], [145, 2, 1, "", "post_tuning"], [145, 2, 1, "", "pre_tuning"]], "tvm.relax": [[150, 1, 1, "", "Binding"], [150, 1, 1, "", "BindingBlock"], [150, 1, 1, "", "Call"], [150, 1, 1, "", "Constant"], [150, 1, 1, "", "DataTypeImm"], [150, 1, 1, "", "DataflowBlock"], [150, 1, 1, "", "DataflowBlockRewrite"], [150, 1, 1, "", "DataflowVar"], [150, 1, 1, "", "DynTensorType"], [150, 1, 1, "", "ExecBuilder"], [150, 1, 1, "", "Executable"], [150, 4, 1, "", "Expr"], [150, 1, 1, "", "ExprFunctor"], [150, 1, 1, "", "ExternFunc"], [150, 1, 1, "", "FuncStructInfo"], [150, 1, 1, "", "Function"], [150, 1, 1, "", "Id"], [150, 1, 1, "", "If"], [150, 1, 1, "", "MatchCast"], [150, 1, 1, "", "ObjectStructInfo"], [150, 1, 1, "", "ObjectType"], [150, 1, 1, "", "PackedFuncType"], [150, 1, 1, "", "PrimStructInfo"], [150, 1, 1, "", "PrimValue"], [150, 1, 1, "", "PyExprMutator"], [150, 1, 1, "", "PyExprVisitor"], [150, 1, 1, "", "SeqExpr"], [150, 1, 1, "", "ShapeExpr"], [150, 1, 1, "", "ShapeStructInfo"], [150, 1, 1, "", "ShapeType"], [150, 1, 1, "", "StringImm"], [150, 1, 1, "", "StructInfo"], [150, 1, 1, "", "TensorStructInfo"], [150, 1, 1, "", "Tuple"], [150, 1, 1, "", "TupleGetItem"], [150, 1, 1, "", "TupleStructInfo"], [150, 1, 1, "", "VMInstrumentReturnKind"], [150, 1, 1, "", "Var"], [150, 1, 1, "", "VarBinding"], [150, 1, 1, "", "VirtualMachine"], [146, 0, 0, "-", "analysis"], [147, 0, 0, "-", "block_builder"], [150, 3, 1, "", "build"], [150, 3, 1, "", "call_dps_packed"], [150, 3, 1, "", "call_pure_packed"], [150, 3, 1, "", "call_tir"], [150, 3, 1, "", "call_tir_inplace"], [150, 3, 1, "", "call_tir_with_grad"], [150, 3, 1, "", "const"], [150, 3, 1, "", "convert_to_expr"], [150, 3, 1, "", "extern"], [148, 0, 0, "-", "frontend"], [150, 3, 1, "", "get_pipeline"], [150, 3, 1, "", "get_shape_of"], [149, 0, 0, "-", "op"], [150, 3, 1, "", "register_pipeline"], [151, 0, 0, "-", "transform"]], "tvm.relax.DataflowBlockRewrite": [[150, 2, 1, "", "add"], [150, 2, 1, "", "mutate_irmodule"], [150, 2, 1, "", "mutated_dfb"], [150, 2, 1, "", "mutated_root_fn"], [150, 2, 1, "", "remove_all_unused"], [150, 2, 1, "", "remove_unused"], [150, 2, 1, "", "replace_all_uses"]], "tvm.relax.ExecBuilder": [[150, 2, 1, "", "c"], [150, 2, 1, "", "declare_function"], [150, 2, 1, "", "emit_call"], [150, 2, 1, "", "emit_goto"], [150, 2, 1, "", "emit_if"], [150, 2, 1, "", "emit_ret"], [150, 2, 1, "", "f"], [150, 2, 1, "", "function"], [150, 2, 1, "", "get"], [150, 2, 1, "", "imm"], [150, 2, 1, "", "r"]], "tvm.relax.Executable": [[150, 2, 1, "", "as_python"], [150, 2, 1, "", "as_text"], [150, 2, 1, "", "export_library"], [150, 2, 1, "", "jit"], [150, 2, 1, "", "stats"]], "tvm.relax.ExprFunctor": [[150, 2, 1, "", "visit_expr"]], "tvm.relax.FuncStructInfo": [[150, 2, 1, "", "opaque_func"]], "tvm.relax.Function": [[150, 2, 1, "", "bind_params"], [150, 2, 1, "", "bind_symbolic_vars"], [150, 2, 1, "", "create_empty"]], "tvm.relax.PyExprMutator": [[150, 2, 1, "", "get_var_remap"], [150, 2, 1, "", "lookup_binding"], [150, 2, 1, "", "set_var_remap"], [150, 2, 1, "", "visit_binding"], [150, 2, 1, "", "visit_binding_block"], [150, 2, 1, "", "visit_binding_block_"], [150, 2, 1, "", "visit_call_"], [150, 2, 1, "", "visit_constant_"], [150, 2, 1, "", "visit_data_type_imm_"], [150, 2, 1, "", "visit_dataflow_block_"], [150, 2, 1, "", "visit_dataflow_var_"], [150, 2, 1, "", "visit_dataflow_var_def_"], [150, 2, 1, "", "visit_expr"], [150, 2, 1, "", "visit_expr_post_order"], [150, 2, 1, "", "visit_extern_func_"], [150, 2, 1, "", "visit_function_"], [150, 2, 1, "", "visit_global_var_"], [150, 2, 1, "", "visit_if_"], [150, 2, 1, "", "visit_match_cast_"], [150, 2, 1, "", "visit_op_"], [150, 2, 1, "", "visit_prim_value_"], [150, 2, 1, "", "visit_seq_expr_"], [150, 2, 1, "", "visit_shape_expr_"], [150, 2, 1, "", "visit_span"], [150, 2, 1, "", "visit_string_imm_"], [150, 2, 1, "", "visit_tuple_"], [150, 2, 1, "", "visit_tuple_getitem_"], [150, 2, 1, "", "visit_var_"], [150, 2, 1, "", "visit_var_binding_"], [150, 2, 1, "", "visit_var_def"], [150, 2, 1, "", "visit_var_def_"], [150, 2, 1, "", "visit_with_new_scope"], [150, 2, 1, "", "with_struct_info"]], "tvm.relax.PyExprVisitor": [[150, 2, 1, "", "visit_binding"], [150, 2, 1, "", "visit_binding_block"], [150, 2, 1, "", "visit_binding_block_"], [150, 2, 1, "", "visit_call_"], [150, 2, 1, "", "visit_constant_"], [150, 2, 1, "", "visit_data_type_imm_"], [150, 2, 1, "", "visit_dataflow_block_"], [150, 2, 1, "", "visit_dataflow_var_"], [150, 2, 1, "", "visit_dataflow_var_def_"], [150, 2, 1, "", "visit_expr"], [150, 2, 1, "", "visit_extern_func_"], [150, 2, 1, "", "visit_function_"], [150, 2, 1, "", "visit_global_var_"], [150, 2, 1, "", "visit_if_"], [150, 2, 1, "", "visit_match_cast_"], [150, 2, 1, "", "visit_op_"], [150, 2, 1, "", "visit_prim_value_"], [150, 2, 1, "", "visit_seq_expr_"], [150, 2, 1, "", "visit_shape_expr_"], [150, 2, 1, "", "visit_span"], [150, 2, 1, "", "visit_string_imm_"], [150, 2, 1, "", "visit_tuple_"], [150, 2, 1, "", "visit_tuple_getitem_"], [150, 2, 1, "", "visit_var_"], [150, 2, 1, "", "visit_var_binding_"], [150, 2, 1, "", "visit_var_def"], [150, 2, 1, "", "visit_var_def_"]], "tvm.relax.StructInfo": [[150, 2, 1, "", "is_base_of"], [150, 2, 1, "", "same_as"]], "tvm.relax.Var": [[150, 5, 1, "", "name_hint"]], "tvm.relax.VirtualMachine": [[150, 2, 1, "", "get_outputs"], [150, 2, 1, "", "invoke_closure"], [150, 2, 1, "", "invoke_stateful"], [150, 2, 1, "", "profile"], [150, 2, 1, "", "save_function"], [150, 2, 1, "", "set_input"], [150, 2, 1, "", "set_instrument"], [150, 2, 1, "", "time_evaluator"]], "tvm.relax.analysis": [[146, 1, 1, "", "BaseCheckResult"], [146, 3, 1, "", "all_global_vars"], [146, 3, 1, "", "all_vars"], [146, 3, 1, "", "bound_vars"], [146, 3, 1, "", "collect_non_negative_expressions"], [146, 3, 1, "", "computable_at_compile_time"], [146, 3, 1, "", "contains_impure_call"], [146, 3, 1, "", "definable_tir_vars_in_struct_info"], [146, 3, 1, "", "defined_symbolic_vars"], [146, 3, 1, "", "derive_call_ret_struct_info"], [146, 3, 1, "", "detect_recursion"], [146, 3, 1, "", "erase_to_well_defined"], [146, 3, 1, "", "estimate_memory_usage"], [146, 3, 1, "", "free_symbolic_vars"], [146, 3, 1, "", "free_vars"], [146, 3, 1, "", "get_static_type"], [146, 3, 1, "", "get_var2val"], [146, 3, 1, "", "has_reshape_pattern"], [146, 3, 1, "", "name_to_binding"], [146, 3, 1, "", "post_order_visit"], [146, 3, 1, "", "remove_all_unused"], [146, 3, 1, "", "struct_info_base_check"], [146, 3, 1, "", "struct_info_lca"], [146, 3, 1, "", "suggest_layout_transforms"], [146, 3, 1, "", "tir_vars_in_struct_info"], [146, 3, 1, "", "udchain"], [146, 3, 1, "", "well_formed"]], "tvm.relax.block_builder": [[147, 1, 1, "", "BlockBuilder"], [147, 1, 1, "", "DataflowScope"], [147, 1, 1, "", "FunctionScope"], [147, 1, 1, "", "TestingScope"]], "tvm.relax.block_builder.BlockBuilder": [[147, 2, 1, "", "add_func"], [147, 2, 1, "", "begin_scope"], [147, 2, 1, "", "call_te"], [147, 2, 1, "", "call_te_with_grad"], [147, 2, 1, "", "current"], [147, 2, 1, "", "current_block_is_dataflow"], [147, 2, 1, "", "dataflow"], [147, 2, 1, "", "emit"], [147, 2, 1, "", "emit_func_output"], [147, 2, 1, "", "emit_normalized"], [147, 2, 1, "", "emit_output"], [147, 2, 1, "", "emit_te"], [147, 2, 1, "", "end_scope"], [147, 2, 1, "", "finalize"], [147, 2, 1, "", "function"], [147, 2, 1, "", "get"], [147, 2, 1, "", "get_unique_name"], [147, 2, 1, "", "lookup_binding"], [147, 2, 1, "", "match_cast"], [147, 2, 1, "", "normalize"], [147, 2, 1, "", "testing_scope"], [147, 2, 1, "", "update_func"]], "tvm.relax.frontend": [[148, 3, 1, "", "detach_params"], [148, 0, 0, "-", "onnx"], [148, 0, 0, "-", "stablehlo"], [148, 0, 0, "-", "torch"]], "tvm.relax.frontend.onnx": [[148, 3, 1, "", "from_onnx"]], "tvm.relax.frontend.stablehlo": [[148, 3, 1, "", "from_stablehlo"]], "tvm.relax.frontend.torch": [[148, 3, 1, "", "dynamo_capture_subgraphs"], [148, 3, 1, "", "from_exported_program"], [148, 3, 1, "", "from_fx"], [148, 3, 1, "", "relax_dynamo"]], "tvm.relax.op": [[149, 3, 1, "", "abs"], [149, 3, 1, "", "acos"], [149, 3, 1, "", "acosh"], [149, 3, 1, "", "add"], [149, 3, 1, "", "arange"], [149, 3, 1, "", "argmax"], [149, 3, 1, "", "argmin"], [149, 3, 1, "", "argsort"], [149, 3, 1, "", "asin"], [149, 3, 1, "", "asinh"], [149, 3, 1, "", "assert_op"], [149, 3, 1, "", "astype"], [149, 3, 1, "", "atan"], [149, 3, 1, "", "atanh"], [149, 3, 1, "", "bitwise_and"], [149, 3, 1, "", "bitwise_not"], [149, 3, 1, "", "bitwise_or"], [149, 3, 1, "", "bitwise_xor"], [149, 3, 1, "", "broadcast_to"], [149, 0, 0, "-", "builtin"], [149, 3, 1, "", "call_builtin_with_ctx"], [149, 3, 1, "", "call_dps_packed"], [149, 3, 1, "", "call_inplace_packed"], [149, 3, 1, "", "call_pure_packed"], [149, 3, 1, "", "call_tir"], [149, 3, 1, "", "call_tir_inplace"], [149, 3, 1, "", "call_tir_with_grad"], [149, 0, 0, "-", "ccl"], [149, 3, 1, "", "ceil"], [149, 3, 1, "", "clip"], [149, 3, 1, "", "collapse_sum_like"], [149, 3, 1, "", "collapse_sum_to"], [149, 3, 1, "", "concat"], [149, 3, 1, "", "cos"], [149, 3, 1, "", "cosh"], [149, 3, 1, "", "cumprod"], [149, 3, 1, "", "cumsum"], [149, 3, 1, "", "dequantize"], [149, 0, 0, "-", "distributed"], [149, 3, 1, "", "divide"], [149, 3, 1, "", "dynamic_strided_slice"], [149, 3, 1, "", "einsum"], [149, 3, 1, "", "equal"], [149, 3, 1, "", "erf"], [149, 3, 1, "", "ewise_fma"], [149, 3, 1, "", "exp"], [149, 3, 1, "", "expand_dims"], [149, 3, 1, "", "eye"], [149, 3, 1, "", "eye_like"], [149, 3, 1, "", "flatten"], [149, 3, 1, "", "flip"], [149, 3, 1, "", "floor"], [149, 3, 1, "", "floor_divide"], [149, 3, 1, "", "floor_mod"], [149, 3, 1, "", "full"], [149, 3, 1, "", "full_like"], [149, 3, 1, "", "gather_elements"], [149, 3, 1, "", "gather_nd"], [149, 0, 0, "-", "grad"], [149, 3, 1, "", "greater"], [149, 3, 1, "", "greater_equal"], [149, 3, 1, "", "hint_on_device"], [149, 0, 0, "-", "image"], [149, 3, 1, "", "invoke_closure"], [149, 3, 1, "", "invoke_pure_closure"], [149, 3, 1, "", "isfinite"], [149, 3, 1, "", "isinf"], [149, 3, 1, "", "isnan"], [149, 3, 1, "", "layout_transform"], [149, 3, 1, "", "left_shift"], [149, 3, 1, "", "less"], [149, 3, 1, "", "less_equal"], [149, 3, 1, "", "linear"], [149, 3, 1, "", "log"], [149, 3, 1, "", "logical_and"], [149, 3, 1, "", "logical_not"], [149, 3, 1, "", "logical_or"], [149, 3, 1, "", "logical_xor"], [149, 3, 1, "", "make_closure"], [149, 3, 1, "", "masked_fill"], [149, 3, 1, "", "matmul"], [149, 3, 1, "", "max"], [149, 3, 1, "", "maximum"], [149, 3, 1, "", "mean"], [149, 0, 0, "-", "memory"], [149, 3, 1, "", "min"], [149, 3, 1, "", "minimum"], [149, 3, 1, "", "mod"], [149, 3, 1, "", "multinomial_from_uniform"], [149, 3, 1, "", "multiply"], [149, 3, 1, "", "negative"], [149, 0, 0, "-", "nn"], [149, 3, 1, "", "nonzero"], [149, 3, 1, "", "not_equal"], [149, 3, 1, "", "null_value"], [149, 3, 1, "", "one_hot"], [149, 3, 1, "", "ones"], [149, 3, 1, "", "ones_like"], [149, 0, 0, "-", "op_attrs"], [149, 3, 1, "", "permute_dims"], [149, 3, 1, "", "power"], [149, 3, 1, "", "print"], [149, 3, 1, "", "prod"], [149, 3, 1, "", "quantize"], [149, 3, 1, "", "register_gradient"], [149, 3, 1, "", "repeat"], [149, 3, 1, "", "reshape"], [149, 3, 1, "", "right_shift"], [149, 3, 1, "", "round"], [149, 3, 1, "", "rsqrt"], [149, 3, 1, "", "scatter_elements"], [149, 3, 1, "", "scatter_nd"], [149, 3, 1, "", "shape_of"], [149, 3, 1, "", "shape_to_tensor"], [149, 3, 1, "", "sigmoid"], [149, 3, 1, "", "sign"], [149, 3, 1, "", "sin"], [149, 3, 1, "", "sinh"], [149, 3, 1, "", "sort"], [149, 3, 1, "", "split"], [149, 3, 1, "", "sqrt"], [149, 3, 1, "", "square"], [149, 3, 1, "", "squeeze"], [149, 3, 1, "", "std"], [149, 3, 1, "", "strided_slice"], [149, 3, 1, "", "subtract"], [149, 3, 1, "", "sum"], [149, 3, 1, "", "take"], [149, 3, 1, "", "tan"], [149, 3, 1, "", "tanh"], [149, 3, 1, "", "tensor_to_shape"], [149, 3, 1, "", "tile"], [149, 3, 1, "", "to_vdevice"], [149, 3, 1, "", "topk"], [149, 3, 1, "", "tril"], [149, 3, 1, "", "triu"], [149, 3, 1, "", "unique"], [149, 3, 1, "", "variance"], [149, 3, 1, "", "where"], [149, 3, 1, "", "wrap_param"], [149, 3, 1, "", "zeros"], [149, 3, 1, "", "zeros_like"]], "tvm.relax.op.builtin": [[149, 3, 1, "", "alloc_tensor"], [149, 3, 1, "", "stop_lift_params"]], "tvm.relax.op.ccl": [[149, 3, 1, "", "allgather"], [149, 3, 1, "", "allreduce"], [149, 3, 1, "", "broadcast_from_worker0"], [149, 3, 1, "", "scatter_from_worker0"]], "tvm.relax.op.distributed": [[149, 3, 1, "", "annotate_sharding"], [149, 3, 1, "", "call_tir_local_view"], [149, 3, 1, "", "redistribute"], [149, 3, 1, "", "redistribute_replica_to_shard"]], "tvm.relax.op.grad": [[149, 4, 1, "", "Expr"], [149, 3, 1, "", "avg_pool2d_backward"], [149, 3, 1, "", "end_checkpoint"], [149, 3, 1, "", "max_pool2d_backward"], [149, 3, 1, "", "nll_loss_backward"], [149, 3, 1, "", "no_grad"], [149, 3, 1, "", "start_checkpoint"], [149, 3, 1, "", "take_backward"]], "tvm.relax.op.image": [[149, 3, 1, "", "resize2d"]], "tvm.relax.op.memory": [[149, 3, 1, "", "alloc_storage"], [149, 3, 1, "", "alloc_tensor"], [149, 3, 1, "", "ensure_zero_offset"], [149, 3, 1, "", "kill_storage"], [149, 3, 1, "", "kill_tensor"], [149, 3, 1, "", "view"]], "tvm.relax.op.nn": [[149, 3, 1, "", "adaptive_avg_pool1d"], [149, 3, 1, "", "adaptive_avg_pool2d"], [149, 3, 1, "", "adaptive_avg_pool3d"], [149, 3, 1, "", "attention"], [149, 3, 1, "", "attention_var_len"], [149, 3, 1, "", "avg_pool1d"], [149, 3, 1, "", "avg_pool2d"], [149, 3, 1, "", "avg_pool3d"], [149, 3, 1, "", "batch_norm"], [149, 3, 1, "", "conv1d"], [149, 3, 1, "", "conv1d_transpose"], [149, 3, 1, "", "conv2d"], [149, 3, 1, "", "conv2d_transpose"], [149, 3, 1, "", "conv3d"], [149, 3, 1, "", "cross_entropy_with_logits"], [149, 3, 1, "", "dropout"], [149, 3, 1, "", "gelu"], [149, 3, 1, "", "gelu_tanh"], [149, 3, 1, "", "group_norm"], [149, 3, 1, "", "layer_norm"], [149, 3, 1, "", "leakyrelu"], [149, 3, 1, "", "log_softmax"], [149, 3, 1, "", "max_pool1d"], [149, 3, 1, "", "max_pool2d"], [149, 3, 1, "", "max_pool3d"], [149, 3, 1, "", "nll_loss"], [149, 3, 1, "", "pad"], [149, 3, 1, "", "relu"], [149, 3, 1, "", "rms_norm"], [149, 3, 1, "", "silu"], [149, 3, 1, "", "softmax"]], "tvm.relax.op.op_attrs": [[149, 1, 1, "", "AdaptivePool2DAttrs"], [149, 1, 1, "", "ArgmaxArgminAttrs"], [149, 1, 1, "", "ArgsortAttrs"], [149, 1, 1, "", "AstypeAttrs"], [149, 1, 1, "", "BatchNormAttrs"], [149, 1, 1, "", "CallTIRWithGradAttrs"], [149, 1, 1, "", "ConcatAttrs"], [149, 1, 1, "", "Conv2DAttrs"], [149, 1, 1, "", "Conv2DTransposeAttrs"], [149, 1, 1, "", "Conv3DAttrs"], [149, 1, 1, "", "DropoutAttrs"], [149, 1, 1, "", "EinsumAttrs"], [149, 1, 1, "", "ExpandDimsAttrs"], [149, 1, 1, "", "FlipAttrs"], [149, 1, 1, "", "InitAttrs"], [149, 1, 1, "", "LayerNormAttrs"], [149, 1, 1, "", "LayoutTransformAttrs"], [149, 1, 1, "", "MatmulAttrs"], [149, 1, 1, "", "PermuteDimsAttrs"], [149, 1, 1, "", "Pool2DAttrs"], [149, 1, 1, "", "RepeatAttrs"], [149, 1, 1, "", "Resize2DAttrs"], [149, 1, 1, "", "ScanopAttrs"], [149, 1, 1, "", "SoftmaxAttrs"], [149, 1, 1, "", "SortAttrs"], [149, 1, 1, "", "SplitAttrs"], [149, 1, 1, "", "SqueezeAttrs"], [149, 1, 1, "", "StatisticalAttrs"], [149, 1, 1, "", "StridedSliceAttrs"], [149, 1, 1, "", "TakeAttrs"], [149, 1, 1, "", "TileAttrs"], [149, 1, 1, "", "TopKAttrs"], [149, 1, 1, "", "TriluAttrs"]], "tvm.relax.transform": [[151, 3, 1, "", "AdjustMatmulOrder"], [151, 3, 1, "", "AllocateWorkspace"], [151, 3, 1, "", "AlterOpImpl"], [151, 3, 1, "", "AnnotateTIROpPattern"], [151, 3, 1, "", "AttachAttrLayoutFreeBuffers"], [151, 1, 1, "", "AttachExternModules"], [151, 3, 1, "", "AttachGlobalSymbol"], [151, 3, 1, "", "BindParams"], [151, 3, 1, "", "BindSymbolicVars"], [151, 3, 1, "", "BundleModelParams"], [151, 3, 1, "", "CallTIRRewrite"], [151, 3, 1, "", "CanonicalizeBindings"], [151, 3, 1, "", "CombineParallelMatmul"], [151, 3, 1, "", "ComputePrimValue"], [151, 3, 1, "", "ConvertLayout"], [151, 3, 1, "", "ConvertToDataflow"], [151, 1, 1, "", "DataflowBlockPass"], [151, 3, 1, "", "DataflowUseInplaceCalls"], [151, 3, 1, "", "DeadCodeElimination"], [151, 3, 1, "", "DecomposeOpsForInference"], [151, 3, 1, "", "DecomposeOpsForTraining"], [151, 3, 1, "", "EliminateCommonSubexpr"], [151, 3, 1, "", "ExpandMatmulOfSum"], [151, 3, 1, "", "ExpandTupleArguments"], [151, 1, 1, "", "FastMathTransform"], [151, 3, 1, "", "FewShotTuning"], [151, 3, 1, "", "FoldConstant"], [151, 1, 1, "", "FunctionPass"], [151, 3, 1, "", "FuseOps"], [151, 3, 1, "", "FuseOpsByPattern"], [151, 3, 1, "", "FuseTIR"], [151, 1, 1, "", "FuseTransposeMatmul"], [151, 1, 1, "", "FusionPattern"], [151, 3, 1, "", "Gradient"], [151, 1, 1, "", "IPCAllReduceRewrite"], [151, 3, 1, "", "InlinePrivateFunctions"], [151, 3, 1, "", "KillAfterLastUse"], [151, 3, 1, "", "LambdaLift"], [151, 3, 1, "", "LazyGetInput"], [151, 3, 1, "", "LazySetOutput"], [151, 1, 1, "", "LazyTransformParams"], [151, 3, 1, "", "LegalizeOps"], [151, 3, 1, "", "LiftTransformParams"], [151, 3, 1, "", "LowerAllocTensor"], [151, 1, 1, "", "LowerGPUIPCAllocStorage"], [151, 3, 1, "", "LowerRuntimeBuiltin"], [151, 3, 1, "", "MergeCompositeFunctions"], [151, 3, 1, "", "MetaScheduleApplyDatabase"], [151, 3, 1, "", "MetaScheduleTuneIRMod"], [151, 3, 1, "", "MetaScheduleTuneTIR"], [151, 3, 1, "", "Normalize"], [151, 3, 1, "", "NormalizeGlobalVar"], [151, 1, 1, "", "OptimizeLayoutTransform"], [151, 1, 1, "", "PatternCheckContext"], [151, 3, 1, "", "RealizeVDevice"], [151, 3, 1, "", "RemovePurityChecking"], [151, 1, 1, "", "RemoveRedundantReshape"], [151, 3, 1, "", "RemoveUnusedOutputs"], [151, 3, 1, "", "RemoveUnusedParameters"], [151, 3, 1, "", "ReorderPermuteDimsAfterConcat"], [151, 3, 1, "", "ReorderTakeAfterMatmul"], [151, 3, 1, "", "RewriteCUDAGraph"], [151, 3, 1, "", "RewriteDataflowReshape"], [151, 3, 1, "", "RunCodegen"], [151, 3, 1, "", "SplitCallTIRByPattern"], [151, 3, 1, "", "SplitLayoutRewritePreproc"], [151, 3, 1, "", "StaticPlanBlockMemory"], [151, 3, 1, "", "ToMixedPrecision"], [151, 3, 1, "", "ToNonDataflow"], [151, 3, 1, "", "TopologicalSort"], [151, 3, 1, "", "UpdateParamStructInfo"], [151, 3, 1, "", "UpdateVDevice"], [151, 3, 1, "", "VMBuiltinLower"], [151, 3, 1, "", "VMShapeLower"], [151, 3, 1, "", "dataflowblock_pass"], [151, 3, 1, "", "function_pass"]], "tvm.relay": [[152, 0, 0, "-", "analysis"], [153, 0, 0, "-", "backend"], [154, 0, 0, "-", "dataflow_pattern"], [155, 0, 0, "-", "frontend"], [156, 0, 0, "-", "image"], [158, 0, 0, "-", "nn"], [159, 0, 0, "-", "testing"], [160, 0, 0, "-", "transform"], [161, 0, 0, "-", "vision"]], "tvm.relay.analysis": [[152, 1, 1, "", "AnnotatedRegionSet"], [152, 1, 1, "", "CallGraph"], [152, 1, 1, "", "Feature"], [152, 3, 1, "", "all_dtypes"], [152, 3, 1, "", "all_type_vars"], [152, 3, 1, "", "all_vars"], [152, 3, 1, "", "bound_type_vars"], [152, 3, 1, "", "bound_vars"], [152, 3, 1, "", "check_basic_block_normal_form"], [152, 3, 1, "", "check_constant"], [152, 3, 1, "", "check_kind"], [152, 3, 1, "", "count_layers"], [152, 3, 1, "", "cpu"], [152, 3, 1, "", "detect_feature"], [152, 3, 1, "", "extract_fused_functions"], [152, 3, 1, "", "extract_intermdeiate_expr"], [152, 3, 1, "", "free_type_vars"], [152, 3, 1, "", "free_vars"], [152, 3, 1, "", "get_calibration_data"], [152, 3, 1, "", "get_total_mac_number"], [152, 3, 1, "", "list_fake_quantized_op_freqs"], [152, 3, 1, "", "list_op_freqs"], [152, 3, 1, "", "post_order_visit"], [152, 3, 1, "", "search_fc_transpose"], [152, 3, 1, "", "unmatched_cases"], [152, 3, 1, "", "well_formed"]], "tvm.relay.analysis.AnnotatedRegionSet": [[152, 2, 1, "", "get_region"]], "tvm.relay.analysis.CallGraph": [[152, 2, 1, "", "global_call_count"], [152, 2, 1, "", "is_recursive"], [152, 5, 1, "", "module"], [152, 2, 1, "", "print_var"], [152, 2, 1, "", "ref_count"]], "tvm.relay.analysis.Feature": [[152, 4, 1, "", "fGraph"], [152, 4, 1, "", "fMatch"]], "tvm.relay.backend": [[153, 0, 0, "-", "graph_executor_codegen"], [153, 0, 0, "-", "interpreter"], [153, 0, 0, "-", "te_compiler"], [153, 0, 0, "-", "vm"]], "tvm.relay.backend.graph_executor_codegen": [[153, 1, 1, "", "GraphExecutorCodegen"]], "tvm.relay.backend.graph_executor_codegen.GraphExecutorCodegen": [[153, 2, 1, "", "codegen"]], "tvm.relay.backend.interpreter": [[153, 1, 1, "", "ConstructorValue"], [153, 1, 1, "", "Executor"], [153, 1, 1, "", "Interpreter"], [153, 1, 1, "", "RefValue"]], "tvm.relay.backend.interpreter.Executor": [[153, 2, 1, "", "evaluate"]], "tvm.relay.backend.te_compiler": [[153, 1, 1, "", "CCacheKey"], [153, 1, 1, "", "CCacheValue"], [153, 1, 1, "", "LoweredOutput"], [153, 1, 1, "", "TECompiler"], [153, 3, 1, "", "get"], [153, 3, 1, "", "get_shape"], [153, 3, 1, "", "get_valid_implementations"], [153, 3, 1, "", "lower_to_primfunc"], [153, 3, 1, "", "select_implementation"]], "tvm.relay.backend.te_compiler.TECompiler": [[153, 2, 1, "", "clear"], [153, 2, 1, "", "items"], [153, 2, 1, "", "jit"], [153, 2, 1, "", "lower"]], "tvm.relay.backend.vm": [[153, 1, 1, "", "VMCompiler"], [153, 1, 1, "", "VMExecutor"], [153, 3, 1, "", "compile"]], "tvm.relay.backend.vm.VMCompiler": [[153, 2, 1, "", "codegen"], [153, 2, 1, "", "get_exec"], [153, 2, 1, "", "get_params"], [153, 2, 1, "", "lower"], [153, 2, 1, "", "optimize"], [153, 2, 1, "", "set_params"]], "tvm.relay.dataflow_pattern": [[154, 1, 1, "", "AltPattern"], [154, 1, 1, "", "AttrPattern"], [154, 1, 1, "", "CallPattern"], [154, 1, 1, "", "ConstantPattern"], [154, 1, 1, "", "DFPattern"], [154, 1, 1, "", "DFPatternCallback"], [154, 1, 1, "", "DataTypePattern"], [154, 1, 1, "", "DominatorPattern"], [154, 4, 1, "", "Expr"], [154, 1, 1, "", "ExprPattern"], [154, 1, 1, "", "FunctionPattern"], [154, 1, 1, "", "IfPattern"], [154, 1, 1, "", "LetPattern"], [154, 1, 1, "", "ShapePattern"], [154, 1, 1, "", "TupleGetItemPattern"], [154, 1, 1, "", "TuplePattern"], [154, 1, 1, "", "TypePattern"], [154, 1, 1, "", "VarPattern"], [154, 1, 1, "", "WildcardPattern"], [154, 3, 1, "", "astext"], [154, 3, 1, "", "dominates"], [154, 3, 1, "", "get"], [154, 3, 1, "", "has_attr"], [154, 3, 1, "", "has_dtype"], [154, 3, 1, "", "has_shape"], [154, 3, 1, "", "has_type"], [154, 3, 1, "", "is_constant"], [154, 3, 1, "", "is_expr"], [154, 3, 1, "", "is_if"], [154, 3, 1, "", "is_let"], [154, 3, 1, "", "is_op"], [154, 3, 1, "", "is_tuple"], [154, 3, 1, "", "is_tuple_get_item"], [154, 3, 1, "", "is_var"], [154, 3, 1, "", "make_node"], [154, 3, 1, "", "match"], [154, 3, 1, "", "partition"], [154, 3, 1, "", "pretty_print"], [154, 3, 1, "", "register_df_node"], [154, 3, 1, "", "rewrite"], [154, 3, 1, "", "wildcard"]], "tvm.relay.dataflow_pattern.DFPattern": [[154, 2, 1, "", "astext"], [154, 2, 1, "", "dominates"], [154, 2, 1, "", "has_attr"], [154, 2, 1, "", "has_dtype"], [154, 2, 1, "", "has_shape"], [154, 2, 1, "", "has_type"], [154, 2, 1, "", "match"], [154, 2, 1, "", "optional"], [154, 2, 1, "", "partition"]], "tvm.relay.dataflow_pattern.DFPatternCallback": [[154, 2, 1, "", "callback"], [154, 2, 1, "", "rewrite"]], "tvm.relay.dataflow_pattern.WildcardPattern": [[154, 2, 1, "", "redirect_to"]], "tvm.relay.frontend": [[155, 1, 1, "", "ChangeDatatype"], [155, 3, 1, "", "from_caffe"], [155, 3, 1, "", "from_caffe2"], [155, 3, 1, "", "from_coreml"], [155, 3, 1, "", "from_darknet"], [155, 3, 1, "", "from_keras"], [155, 3, 1, "", "from_mxnet"], [155, 3, 1, "", "from_oneflow"], [155, 3, 1, "", "from_onnx"], [155, 3, 1, "", "from_paddle"], [155, 3, 1, "", "from_pytorch"], [155, 3, 1, "", "from_tensorflow"], [155, 3, 1, "", "from_tflite"], [155, 3, 1, "", "quantize_conv_bias_mkldnn_from_var"]], "tvm.relay.image": [[156, 3, 1, "", "affine_grid"], [156, 3, 1, "", "const"], [156, 3, 1, "", "crop_and_resize"], [156, 3, 1, "", "dilation2d"], [156, 3, 1, "", "grid_sample"], [156, 3, 1, "", "resize1d"], [156, 3, 1, "", "resize2d"], [156, 3, 1, "", "resize3d"]], "tvm.relay.nn": [[158, 1, 1, "", "Constant"], [158, 4, 1, "", "Expr"], [158, 3, 1, "", "adaptive_avg_pool1d"], [158, 3, 1, "", "adaptive_avg_pool2d"], [158, 3, 1, "", "adaptive_avg_pool3d"], [158, 3, 1, "", "adaptive_max_pool1d"], [158, 3, 1, "", "adaptive_max_pool2d"], [158, 3, 1, "", "adaptive_max_pool3d"], [158, 3, 1, "", "avg_pool1d"], [158, 3, 1, "", "avg_pool2d"], [158, 3, 1, "", "avg_pool2d_grad"], [158, 3, 1, "", "avg_pool3d"], [158, 3, 1, "", "batch_flatten"], [158, 3, 1, "", "batch_matmul"], [158, 3, 1, "", "batch_norm"], [158, 3, 1, "", "batch_to_space_nd"], [158, 3, 1, "", "bias_add"], [158, 3, 1, "", "bitpack"], [158, 3, 1, "", "bitserial_conv2d"], [158, 3, 1, "", "bitserial_dense"], [158, 3, 1, "", "const"], [158, 3, 1, "", "contrib_conv2d_gemm_weight_transform"], [158, 3, 1, "", "contrib_conv2d_gemm_without_weight_transform"], [158, 3, 1, "", "contrib_conv2d_nchwc"], [158, 3, 1, "", "contrib_conv2d_winograd_nnpack_weight_transform"], [158, 3, 1, "", "contrib_conv2d_winograd_weight_transform"], [158, 3, 1, "", "contrib_conv2d_winograd_without_weight_transform"], [158, 3, 1, "", "contrib_conv3d_winograd_weight_transform"], [158, 3, 1, "", "contrib_conv3d_winograd_without_weight_transform"], [158, 3, 1, "", "contrib_dense_pack"], [158, 3, 1, "", "contrib_depthwise_conv2d_nchwc"], [158, 3, 1, "", "conv1d"], [158, 3, 1, "", "conv1d_transpose"], [158, 3, 1, "", "conv2d"], [158, 3, 1, "", "conv2d_backward_weight"], [158, 3, 1, "", "conv2d_transpose"], [158, 3, 1, "", "conv3d"], [158, 3, 1, "", "conv3d_transpose"], [158, 3, 1, "", "correlation"], [158, 3, 1, "", "cross_entropy"], [158, 3, 1, "", "cross_entropy_with_logits"], [158, 3, 1, "", "deformable_conv2d"], [158, 3, 1, "", "dense"], [158, 3, 1, "", "depth_to_space"], [158, 3, 1, "", "dilate"], [158, 3, 1, "", "dropout"], [158, 3, 1, "", "dropout_raw"], [158, 3, 1, "", "fast_softmax"], [158, 3, 1, "", "fifo_buffer"], [158, 3, 1, "", "get_pad_tuple1d"], [158, 3, 1, "", "get_pad_tuple2d"], [158, 3, 1, "", "get_pad_tuple3d"], [158, 3, 1, "", "global_avg_pool1d"], [158, 3, 1, "", "global_avg_pool2d"], [158, 3, 1, "", "global_avg_pool3d"], [158, 3, 1, "", "global_max_pool1d"], [158, 3, 1, "", "global_max_pool2d"], [158, 3, 1, "", "global_max_pool3d"], [158, 3, 1, "", "group_norm"], [158, 3, 1, "", "instance_norm"], [158, 3, 1, "", "l2_normalize"], [158, 3, 1, "", "layer_norm"], [158, 3, 1, "", "leaky_relu"], [158, 3, 1, "", "log_softmax"], [158, 3, 1, "", "lrn"], [158, 3, 1, "", "matmul"], [158, 3, 1, "", "max_pool1d"], [158, 3, 1, "", "max_pool2d"], [158, 3, 1, "", "max_pool2d_grad"], [158, 3, 1, "", "max_pool3d"], [158, 3, 1, "", "mirror_pad"], [158, 3, 1, "", "nll_loss"], [158, 3, 1, "", "pad"], [158, 3, 1, "", "prelu"], [158, 3, 1, "", "relu"], [158, 3, 1, "", "softmax"], [158, 3, 1, "", "space_to_batch_nd"], [158, 3, 1, "", "space_to_depth"], [158, 3, 1, "", "sparse_add"], [158, 3, 1, "", "sparse_dense"], [158, 3, 1, "", "sparse_transpose"], [158, 3, 1, "", "upsampling"], [158, 3, 1, "", "upsampling3d"]], "tvm.relay.testing": [[159, 1, 1, "", "Prelude"], [159, 3, 1, "", "check_grad"], [159, 3, 1, "", "count"], [159, 3, 1, "", "count_ops"], [159, 3, 1, "", "create_workload"], [159, 0, 0, "-", "dcgan"], [159, 0, 0, "-", "densenet"], [159, 3, 1, "", "enabled_targets"], [159, 3, 1, "", "gradient"], [159, 0, 0, "-", "inception_v3"], [159, 0, 0, "-", "lstm"], [159, 3, 1, "", "make_nat_expr"], [159, 3, 1, "", "make_nat_value"], [159, 0, 0, "-", "mlp"], [159, 0, 0, "-", "mobilenet"], [159, 0, 0, "-", "resnet"], [159, 3, 1, "", "run_as_python"], [159, 0, 0, "-", "squeezenet"], [159, 3, 1, "", "to_python"], [159, 0, 0, "-", "vgg"]], "tvm.relay.testing.Prelude": [[159, 2, 1, "", "get_ctor"], [159, 2, 1, "", "get_ctor_static"], [159, 2, 1, "", "get_global_var"], [159, 2, 1, "", "get_global_var_static"], [159, 2, 1, "", "get_name"], [159, 2, 1, "", "get_name_static"], [159, 2, 1, "", "get_tensor_ctor_static"], [159, 2, 1, "", "get_type"], [159, 2, 1, "", "get_type_static"], [159, 2, 1, "", "load_prelude"]], "tvm.relay.testing.dcgan": [[159, 3, 1, "", "deconv2d"], [159, 3, 1, "", "deconv2d_bn_relu"], [159, 3, 1, "", "get_net"], [159, 3, 1, "", "get_workload"]], "tvm.relay.testing.densenet": [[159, 3, 1, "", "get_workload"]], "tvm.relay.testing.inception_v3": [[159, 3, 1, "", "get_net"], [159, 3, 1, "", "get_workload"]], "tvm.relay.testing.lstm": [[159, 3, 1, "", "get_net"], [159, 3, 1, "", "get_workload"], [159, 3, 1, "", "lstm_cell"]], "tvm.relay.testing.mlp": [[159, 3, 1, "", "get_net"], [159, 3, 1, "", "get_workload"]], "tvm.relay.testing.mobilenet": [[159, 3, 1, "", "conv_block"], [159, 3, 1, "", "get_workload"], [159, 3, 1, "", "mobile_net"], [159, 3, 1, "", "separable_conv_block"]], "tvm.relay.testing.resnet": [[159, 3, 1, "", "get_net"], [159, 3, 1, "", "get_workload"], [159, 3, 1, "", "residual_unit"], [159, 3, 1, "", "resnet"]], "tvm.relay.testing.squeezenet": [[159, 3, 1, "", "get_net"], [159, 3, 1, "", "get_workload"]], "tvm.relay.testing.vgg": [[159, 3, 1, "", "get_classifier"], [159, 3, 1, "", "get_feature"], [159, 3, 1, "", "get_net"], [159, 3, 1, "", "get_workload"]], "tvm.relay.transform": [[160, 3, 1, "", "AlterOpLayout"], [160, 3, 1, "", "AnnotateSpans"], [160, 3, 1, "", "AnnotateTarget"], [160, 3, 1, "", "BackwardFoldScaleAxis"], [160, 3, 1, "", "BatchingOps"], [160, 3, 1, "", "CanonicalizeCast"], [160, 3, 1, "", "CanonicalizeOps"], [160, 3, 1, "", "CapturePostDfsIndexInSpans"], [160, 1, 1, "", "ChangeBatch"], [160, 3, 1, "", "CollagePartition"], [160, 3, 1, "", "CombineParallelBatchMatmul"], [160, 3, 1, "", "CombineParallelConv2D"], [160, 3, 1, "", "CombineParallelDense"], [160, 3, 1, "", "Conv2dToSparse"], [160, 3, 1, "", "Conv2dToSparse2"], [160, 3, 1, "", "ConvertLayout"], [160, 3, 1, "", "DeadCodeElimination"], [160, 3, 1, "", "Defunctionalization"], [160, 3, 1, "", "DefuseOps"], [160, 3, 1, "", "DenseToSparse"], [160, 3, 1, "", "DivToMul"], [160, 3, 1, "", "DynamicToStatic"], [160, 3, 1, "", "EliminateCommonSubexpr"], [160, 3, 1, "", "EtaExpand"], [160, 3, 1, "", "FakeQuantizationToInteger"], [160, 3, 1, "", "FastMath"], [160, 3, 1, "", "FirstOrderGradient"], [160, 3, 1, "", "FlattenAtrousConv"], [160, 1, 1, "", "FlexibleShapeDispatch"], [160, 3, 1, "", "FoldConstant"], [160, 3, 1, "", "FoldConstantExpr"], [160, 3, 1, "", "FoldExplicitPadding"], [160, 3, 1, "", "FoldScaleAxis"], [160, 3, 1, "", "ForwardFoldScaleAxis"], [160, 3, 1, "", "FuseOps"], [160, 3, 1, "", "InferType"], [160, 3, 1, "", "InferTypeLocal"], [160, 3, 1, "", "Inline"], [160, 3, 1, "", "InlineCompilerFunctionsBoundTo"], [160, 3, 1, "", "LambdaLift"], [160, 1, 1, "", "LayoutConfig"], [160, 3, 1, "", "LazyGradientInit"], [160, 3, 1, "", "Legalize"], [160, 3, 1, "", "ManifestLifetimes"], [160, 3, 1, "", "MarkCompilerFunctionsAsExtern"], [160, 3, 1, "", "MergeCompilerRegions"], [160, 3, 1, "", "MergeComposite"], [160, 3, 1, "", "OutlineCompilerFunctionsWithExistingGlobalSymbols"], [160, 3, 1, "", "PartialEvaluate"], [160, 3, 1, "", "PartitionGraph"], [160, 3, 1, "", "PlanDevices"], [160, 3, 1, "", "RemoveUnusedFunctions"], [160, 3, 1, "", "SimplifyExpr"], [160, 3, 1, "", "SimplifyFCTranspose"], [160, 3, 1, "", "SimplifyInference"], [160, 3, 1, "", "SplitArgs"], [160, 3, 1, "", "ToANormalForm"], [160, 3, 1, "", "ToANormalFormExpr"], [160, 3, 1, "", "ToBasicBlockNormalForm"], [160, 3, 1, "", "ToCPS"], [160, 3, 1, "", "ToGraphNormalForm"], [160, 3, 1, "", "ToMixedPrecision"], [160, 3, 1, "", "build_config"], [160, 3, 1, "", "function_pass"], [160, 3, 1, "", "gradient"], [160, 3, 1, "", "recast"], [160, 3, 1, "", "to_cps"], [160, 3, 1, "", "un_cps"]], "tvm.relay.vision": [[161, 3, 1, "", "all_class_non_max_suppression"], [161, 3, 1, "", "get_valid_counts"], [161, 3, 1, "", "multibox_prior"], [161, 3, 1, "", "multibox_transform_loc"], [161, 3, 1, "", "non_max_suppression"], [161, 3, 1, "", "proposal"], [161, 3, 1, "", "regular_non_max_suppression"], [161, 3, 1, "", "roi_align"], [161, 3, 1, "", "roi_pool"], [161, 3, 1, "", "yolo_reorg"]], "tvm.rpc": [[162, 1, 1, "", "LocalSession"], [162, 1, 1, "", "PopenSession"], [162, 1, 1, "", "RPCSession"], [162, 1, 1, "", "Server"], [162, 1, 1, "", "TrackerSession"], [162, 3, 1, "", "connect"], [162, 3, 1, "", "connect_tracker"], [162, 3, 1, "", "with_minrpc"]], "tvm.rpc.RPCSession": [[162, 2, 1, "", "cl"], [162, 2, 1, "", "cpu"], [162, 2, 1, "", "cuda"], [162, 2, 1, "", "device"], [162, 2, 1, "", "download"], [162, 2, 1, "", "download_linked_module"], [162, 2, 1, "", "ext_dev"], [162, 2, 1, "", "get_function"], [162, 2, 1, "", "hexagon"], [162, 2, 1, "", "listdir"], [162, 2, 1, "", "load_module"], [162, 2, 1, "", "metal"], [162, 2, 1, "", "remove"], [162, 2, 1, "", "rocm"], [162, 2, 1, "", "system_lib"], [162, 2, 1, "", "upload"], [162, 2, 1, "", "vulkan"], [162, 2, 1, "", "webgpu"]], "tvm.rpc.Server": [[162, 2, 1, "", "terminate"]], "tvm.rpc.TrackerSession": [[162, 2, 1, "", "close"], [162, 2, 1, "", "request"], [162, 2, 1, "", "request_and_run"], [162, 2, 1, "", "summary"], [162, 2, 1, "", "text_summary"]], "tvm.runtime": [[163, 0, 0, "-", "disco"], [164, 0, 0, "-", "ndarray"], [165, 0, 0, "-", "profiling"], [166, 0, 0, "-", "relax_vm"]], "tvm.runtime.disco": [[163, 1, 1, "", "DModule"], [163, 1, 1, "", "DPackedFunc"], [163, 1, 1, "", "DRef"], [163, 1, 1, "", "ProcessSession"], [163, 1, 1, "", "Session"], [163, 1, 1, "", "SocketSession"], [163, 1, 1, "", "ThreadedSession"]], "tvm.runtime.disco.DRef": [[163, 2, 1, "", "debug_copy_from"], [163, 2, 1, "", "debug_get_from_remote"]], "tvm.runtime.disco.Session": [[163, 2, 1, "", "allgather"], [163, 2, 1, "", "allreduce"], [163, 2, 1, "", "broadcast"], [163, 2, 1, "", "broadcast_from_worker0"], [163, 2, 1, "", "call_packed"], [163, 2, 1, "", "copy_from_worker_0"], [163, 2, 1, "", "copy_to_worker_0"], [163, 2, 1, "", "empty"], [163, 2, 1, "", "gather_to_worker0"], [163, 2, 1, "", "get_global_func"], [163, 2, 1, "", "import_python_module"], [163, 2, 1, "", "init_ccl"], [163, 2, 1, "", "load_vm_module"], [163, 5, 1, "", "num_workers"], [163, 2, 1, "", "scatter"], [163, 2, 1, "", "scatter_from_worker0"], [163, 2, 1, "", "shutdown"], [163, 2, 1, "", "sync_worker_0"]], "tvm.runtime.ndarray": [[164, 1, 1, "", "NDArray"], [164, 3, 1, "", "array"], [164, 3, 1, "", "cl"], [164, 3, 1, "", "cpu"], [164, 3, 1, "", "cuda"], [164, 3, 1, "", "device"], [164, 3, 1, "", "empty"], [164, 3, 1, "", "ext_dev"], [164, 3, 1, "", "from_dlpack"], [164, 3, 1, "", "gpu"], [164, 3, 1, "", "hexagon"], [164, 3, 1, "", "metal"], [164, 3, 1, "", "mtl"], [164, 3, 1, "", "numpyasarray"], [164, 3, 1, "", "opencl"], [164, 3, 1, "", "rocm"], [164, 3, 1, "", "vpi"], [164, 3, 1, "", "vulkan"], [164, 3, 1, "", "webgpu"]], "tvm.runtime.ndarray.NDArray": [[164, 2, 1, "", "asnumpy"], [164, 2, 1, "", "copyfrom"], [164, 2, 1, "", "copyto"], [164, 5, 1, "", "device"], [164, 5, 1, "", "dtype"], [164, 2, 1, "", "numpy"], [164, 2, 1, "", "same_as"]], "tvm.runtime.profiling": [[165, 1, 1, "", "Count"], [165, 1, 1, "", "DeviceWrapper"], [165, 1, 1, "", "Duration"], [165, 1, 1, "", "MetricCollector"], [165, 1, 1, "", "Percent"], [165, 1, 1, "", "Ratio"], [165, 1, 1, "", "Report"], [165, 3, 1, "", "profile_function"]], "tvm.runtime.profiling.Report": [[165, 4, 1, "", "calls"], [165, 2, 1, "", "csv"], [165, 4, 1, "", "device_metrics"], [165, 2, 1, "", "from_json"], [165, 2, 1, "", "json"], [165, 2, 1, "", "table"]], "tvm.runtime.relax_vm": [[166, 1, 1, "", "VMInstrumentReturnKind"], [166, 1, 1, "", "VirtualMachine"]], "tvm.runtime.relax_vm.VirtualMachine": [[166, 2, 1, "", "get_outputs"], [166, 2, 1, "", "invoke_closure"], [166, 2, 1, "", "invoke_stateful"], [166, 2, 1, "", "profile"], [166, 2, 1, "", "save_function"], [166, 2, 1, "", "set_input"], [166, 2, 1, "", "set_instrument"], [166, 2, 1, "", "time_evaluator"]], "tvm.target": [[168, 1, 1, "", "GenericFunc"], [168, 1, 1, "", "Target"], [168, 1, 1, "", "TargetKind"], [168, 1, 1, "", "VirtualDevice"], [168, 3, 1, "", "arm_cpu"], [168, 3, 1, "", "bifrost"], [168, 3, 1, "", "create"], [168, 3, 1, "", "cuda"], [168, 3, 1, "", "generic_func"], [168, 3, 1, "", "get_native_generic_func"], [168, 3, 1, "", "hexagon"], [168, 3, 1, "", "intel_graphics"], [168, 3, 1, "", "list_tags"], [168, 3, 1, "", "make_compilation_config"], [168, 3, 1, "", "mali"], [168, 3, 1, "", "override_native_generic_func"], [168, 3, 1, "", "rasp"], [168, 3, 1, "", "riscv_cpu"], [168, 3, 1, "", "rocm"], [168, 3, 1, "", "stm32"]], "tvm.target.GenericFunc": [[168, 2, 1, "", "get_packed_func"], [168, 2, 1, "", "register"], [168, 2, 1, "", "set_default"]], "tvm.target.Target": [[168, 5, 1, "", "arch"], [168, 2, 1, "", "canon_multi_target"], [168, 2, 1, "", "canon_multi_target_and_host"], [168, 2, 1, "", "canon_target"], [168, 2, 1, "", "canon_target_and_host"], [168, 2, 1, "", "canon_target_map_and_host"], [168, 2, 1, "", "current"], [168, 2, 1, "", "from_device"], [168, 2, 1, "", "get_kind_attr"], [168, 2, 1, "", "get_target_device_type"], [168, 2, 1, "", "list_kinds"], [168, 5, 1, "", "mattr"], [168, 5, 1, "", "max_block_size_x"], [168, 5, 1, "", "max_block_size_y"], [168, 5, 1, "", "max_num_threads"], [168, 5, 1, "", "mcpu"], [168, 5, 1, "", "model"], [168, 2, 1, "", "target_or_current"], [168, 5, 1, "", "thread_warp_size"]], "tvm.target.TargetKind": [[168, 5, 1, "", "options"], [168, 2, 1, "", "options_from_name"]], "tvm.te": [[169, 1, 1, "", "ComputeOp"], [169, 1, 1, "", "ExternOp"], [169, 1, 1, "", "HybridOp"], [169, 1, 1, "", "PlaceholderOp"], [169, 1, 1, "", "ScanOp"], [169, 1, 1, "", "Schedule"], [169, 1, 1, "", "SpecializedCondition"], [169, 1, 1, "", "Stage"], [169, 1, 1, "", "Tensor"], [169, 1, 1, "", "TensorComputeOp"], [169, 1, 1, "", "TensorSlice"], [169, 3, 1, "", "abs"], [169, 3, 1, "", "acos"], [169, 3, 1, "", "acosh"], [169, 3, 1, "", "add"], [169, 3, 1, "", "all"], [169, 3, 1, "", "any"], [169, 3, 1, "", "asin"], [169, 3, 1, "", "asinh"], [169, 3, 1, "", "atan"], [169, 3, 1, "", "atanh"], [169, 3, 1, "", "ceil"], [169, 3, 1, "", "comm_reducer"], [169, 3, 1, "", "compute"], [169, 3, 1, "", "const"], [169, 3, 1, "", "cos"], [169, 3, 1, "", "cosh"], [169, 3, 1, "", "create_prim_func"], [169, 3, 1, "", "create_schedule"], [169, 3, 1, "", "decl_tensor_intrin"], [169, 3, 1, "", "div"], [169, 3, 1, "", "erf"], [169, 3, 1, "", "exp"], [169, 3, 1, "", "extern"], [169, 3, 1, "", "extern_primfunc"], [169, 3, 1, "", "floor"], [169, 3, 1, "", "floordiv"], [169, 3, 1, "", "floormod"], [169, 3, 1, "", "fmod"], [169, 3, 1, "", "gradient"], [169, 0, 0, "-", "hybrid"], [169, 3, 1, "", "if_then_else"], [169, 3, 1, "", "indexdiv"], [169, 3, 1, "", "indexmod"], [169, 3, 1, "", "isfinite"], [169, 3, 1, "", "isinf"], [169, 3, 1, "", "isnan"], [169, 3, 1, "", "log"], [169, 3, 1, "", "log10"], [169, 3, 1, "", "log2"], [169, 3, 1, "", "max"], [169, 3, 1, "", "max_value"], [169, 3, 1, "", "min"], [169, 3, 1, "", "min_value"], [169, 3, 1, "", "multiply"], [169, 3, 1, "", "nearbyint"], [169, 3, 1, "", "placeholder"], [169, 3, 1, "", "popcount"], [169, 3, 1, "", "power"], [169, 3, 1, "", "reduce_axis"], [169, 3, 1, "", "round"], [169, 3, 1, "", "rsqrt"], [169, 3, 1, "", "scan"], [169, 3, 1, "", "sigmoid"], [169, 3, 1, "", "sin"], [169, 3, 1, "", "sinh"], [169, 3, 1, "", "size_var"], [169, 3, 1, "", "sqrt"], [169, 3, 1, "", "subtract"], [169, 3, 1, "", "sum"], [169, 3, 1, "", "tag_scope"], [169, 3, 1, "", "tan"], [169, 3, 1, "", "tanh"], [169, 3, 1, "", "thread_axis"], [169, 3, 1, "", "trace"], [169, 3, 1, "", "trunc"], [169, 3, 1, "", "truncdiv"], [169, 3, 1, "", "truncmod"], [169, 3, 1, "", "var"]], "tvm.te.HybridOp": [[169, 5, 1, "", "axis"]], "tvm.te.ScanOp": [[169, 5, 1, "", "scan_axis"]], "tvm.te.Schedule": [[169, 2, 1, "", "cache_read"], [169, 2, 1, "", "cache_write"], [169, 2, 1, "", "create_group"], [169, 2, 1, "", "normalize"], [169, 2, 1, "", "rfactor"]], "tvm.te.SpecializedCondition": [[169, 2, 1, "", "current"]], "tvm.te.Stage": [[169, 2, 1, "", "bind"], [169, 2, 1, "", "compute_at"], [169, 2, 1, "", "compute_inline"], [169, 2, 1, "", "compute_root"], [169, 2, 1, "", "double_buffer"], [169, 2, 1, "", "env_threads"], [169, 2, 1, "", "fuse"], [169, 2, 1, "", "parallel"], [169, 2, 1, "", "pragma"], [169, 2, 1, "", "prefetch"], [169, 2, 1, "", "reorder"], [169, 2, 1, "", "rolling_buffer"], [169, 2, 1, "", "set_scope"], [169, 2, 1, "", "set_store_predicate"], [169, 2, 1, "", "split"], [169, 2, 1, "", "storage_align"], [169, 2, 1, "", "tensorize"], [169, 2, 1, "", "tile"], [169, 2, 1, "", "transform_layout"], [169, 2, 1, "", "unroll"], [169, 2, 1, "", "vectorize"]], "tvm.te.Tensor": [[169, 5, 1, "", "axis"], [169, 5, 1, "", "ndim"], [169, 5, 1, "", "op"], [169, 5, 1, "", "shape"], [169, 5, 1, "", "value_index"]], "tvm.te.TensorSlice": [[169, 2, 1, "", "asobject"], [169, 5, 1, "", "dtype"]], "tvm.te.hybrid": [[169, 1, 1, "", "HybridModule"], [169, 3, 1, "", "build"], [169, 3, 1, "", "decorate"], [169, 3, 1, "", "script"], [169, 3, 1, "", "source_to_op"]], "tvm.te.hybrid.HybridModule": [[169, 2, 1, "", "load"]], "tvm.tir": [[173, 1, 1, "", "Add"], [173, 1, 1, "", "Allocate"], [173, 1, 1, "", "AllocateConst"], [173, 1, 1, "", "And"], [173, 1, 1, "", "Any"], [173, 1, 1, "", "AssertStmt"], [173, 1, 1, "", "AttrStmt"], [173, 1, 1, "", "BijectiveLayout"], [173, 1, 1, "", "Block"], [173, 1, 1, "", "BlockDependenceInfo"], [173, 1, 1, "", "BlockRealize"], [173, 1, 1, "", "Broadcast"], [173, 1, 1, "", "Buffer"], [173, 1, 1, "", "BufferLoad"], [173, 1, 1, "", "BufferRealize"], [173, 1, 1, "", "BufferRegion"], [173, 1, 1, "", "BufferStore"], [173, 1, 1, "", "Call"], [173, 1, 1, "", "CallEffectKind"], [173, 1, 1, "", "Cast"], [173, 1, 1, "", "CommReducer"], [173, 1, 1, "", "DataProducer"], [173, 1, 1, "", "DeclBuffer"], [173, 1, 1, "", "Div"], [173, 1, 1, "", "EQ"], [173, 1, 1, "", "Evaluate"], [173, 1, 1, "", "FloatImm"], [173, 1, 1, "", "FloorDiv"], [173, 1, 1, "", "FloorMod"], [173, 1, 1, "", "For"], [173, 1, 1, "", "ForKind"], [173, 1, 1, "", "GE"], [173, 1, 1, "", "GT"], [173, 1, 1, "", "IfThenElse"], [173, 1, 1, "", "IndexMap"], [173, 1, 1, "", "IntImm"], [173, 1, 1, "", "IterVar"], [173, 1, 1, "", "LE"], [173, 1, 1, "", "LT"], [173, 1, 1, "", "Layout"], [173, 1, 1, "", "Let"], [173, 1, 1, "", "LetStmt"], [173, 1, 1, "", "MatchBufferRegion"], [173, 1, 1, "", "Max"], [173, 1, 1, "", "Min"], [173, 1, 1, "", "Mod"], [173, 1, 1, "", "Mul"], [173, 1, 1, "", "NE"], [173, 1, 1, "", "Not"], [173, 1, 1, "", "Or"], [173, 1, 1, "", "Prefetch"], [173, 1, 1, "", "PrimFunc"], [173, 1, 1, "", "ProducerLoad"], [173, 1, 1, "", "ProducerRealize"], [173, 1, 1, "", "ProducerStore"], [173, 1, 1, "", "Ramp"], [173, 1, 1, "", "Reduce"], [173, 1, 1, "", "Select"], [173, 1, 1, "", "SeqStmt"], [173, 1, 1, "", "Shuffle"], [173, 1, 1, "", "SizeVar"], [173, 1, 1, "", "Stmt"], [173, 1, 1, "", "StringImm"], [173, 1, 1, "", "Sub"], [173, 3, 1, "", "TVMBackendAllocWorkspace"], [173, 3, 1, "", "TVMBackendFreeWorkspace"], [173, 1, 1, "", "TensorIntrin"], [173, 1, 1, "", "Var"], [173, 1, 1, "", "While"], [173, 3, 1, "", "abs"], [173, 3, 1, "", "acos"], [173, 3, 1, "", "acosh"], [173, 3, 1, "", "add"], [173, 3, 1, "", "address_of"], [173, 3, 1, "", "all"], [173, 3, 1, "", "any"], [173, 3, 1, "", "asin"], [173, 3, 1, "", "asinh"], [173, 3, 1, "", "assume"], [173, 3, 1, "", "atan"], [173, 3, 1, "", "atan2"], [173, 3, 1, "", "atanh"], [173, 3, 1, "", "bijective_layout"], [173, 3, 1, "", "bitwise_and"], [173, 3, 1, "", "bitwise_not"], [173, 3, 1, "", "bitwise_or"], [173, 3, 1, "", "bitwise_xor"], [173, 3, 1, "", "call_cpacked"], [173, 3, 1, "", "call_cpacked_lowered"], [173, 3, 1, "", "call_extern"], [173, 3, 1, "", "call_intrin"], [173, 3, 1, "", "call_llvm_intrin"], [173, 3, 1, "", "call_llvm_pure_intrin"], [173, 3, 1, "", "call_packed"], [173, 3, 1, "", "call_packed_lowered"], [173, 3, 1, "", "call_pure_extern"], [173, 3, 1, "", "call_tir"], [173, 3, 1, "", "ceil"], [173, 3, 1, "", "ceildiv"], [173, 3, 1, "", "clz"], [173, 3, 1, "", "comm_reducer"], [173, 3, 1, "", "copysign"], [173, 3, 1, "", "cos"], [173, 3, 1, "", "cosh"], [173, 3, 1, "", "create_barriers"], [173, 3, 1, "", "decl_buffer"], [173, 3, 1, "", "div"], [173, 3, 1, "", "dp4a"], [173, 3, 1, "", "end_profile_intrinsic"], [173, 3, 1, "", "erf"], [173, 3, 1, "", "exp"], [173, 3, 1, "", "exp10"], [173, 3, 1, "", "exp2"], [173, 3, 1, "", "floor"], [173, 3, 1, "", "floordiv"], [173, 3, 1, "", "floormod"], [173, 3, 1, "", "fmod"], [173, 3, 1, "", "get_active_lane_mask"], [173, 3, 1, "", "get_vscale_expr"], [173, 3, 1, "", "hypot"], [173, 3, 1, "", "if_then_else"], [173, 3, 1, "", "ignore_loop_partition"], [173, 3, 1, "", "indexdiv"], [173, 3, 1, "", "indexmod"], [173, 3, 1, "", "infinity"], [173, 3, 1, "", "isfinite"], [173, 3, 1, "", "isinf"], [173, 3, 1, "", "isnan"], [173, 3, 1, "", "isnullptr"], [173, 3, 1, "", "layout"], [173, 3, 1, "", "ldexp"], [173, 3, 1, "", "likely"], [173, 3, 1, "", "log"], [173, 3, 1, "", "log10"], [173, 3, 1, "", "log1p"], [173, 3, 1, "", "log2"], [173, 3, 1, "", "lookup_param"], [173, 3, 1, "", "make_filled_simdgroup_matrix"], [173, 3, 1, "", "max"], [173, 3, 1, "", "max_value"], [173, 3, 1, "", "min"], [173, 3, 1, "", "min_value"], [173, 3, 1, "", "mma_fill"], [173, 3, 1, "", "mma_store"], [173, 3, 1, "", "multiply"], [173, 3, 1, "", "nearbyint"], [173, 3, 1, "", "nextafter"], [173, 3, 1, "", "popcount"], [173, 3, 1, "", "pow"], [173, 3, 1, "", "power"], [173, 3, 1, "", "ptx_arrive_barrier"], [173, 3, 1, "", "ptx_arrive_barrier_expect_tx"], [173, 3, 1, "", "ptx_commit_group"], [173, 3, 1, "", "ptx_cp_async"], [173, 3, 1, "", "ptx_cp_async_barrier"], [173, 3, 1, "", "ptx_cp_async_bulk"], [173, 3, 1, "", "ptx_init_barrier_thread_count"], [173, 3, 1, "", "ptx_ldmatrix"], [173, 3, 1, "", "ptx_mma"], [173, 3, 1, "", "ptx_mma_sp"], [173, 3, 1, "", "ptx_wait_barrier"], [173, 3, 1, "", "ptx_wait_group"], [173, 3, 1, "", "q_multiply_shift"], [173, 3, 1, "", "q_multiply_shift_per_axis"], [173, 3, 1, "", "reinterpret"], [173, 3, 1, "", "ret"], [173, 3, 1, "", "round"], [173, 3, 1, "", "rsqrt"], [171, 0, 0, "-", "schedule"], [173, 3, 1, "", "shift_left"], [173, 3, 1, "", "shift_right"], [173, 3, 1, "", "sigmoid"], [173, 3, 1, "", "simdgroup_load"], [173, 3, 1, "", "simdgroup_multiply_accumulate"], [173, 3, 1, "", "simdgroup_store"], [173, 3, 1, "", "sin"], [173, 3, 1, "", "sinh"], [173, 3, 1, "", "sqrt"], [173, 3, 1, "", "start_profile_intrinsic"], [172, 0, 0, "-", "stmt_functor"], [173, 3, 1, "", "stmt_list"], [173, 3, 1, "", "stmt_seq"], [173, 3, 1, "", "subtract"], [173, 3, 1, "", "sum"], [173, 3, 1, "", "tan"], [173, 3, 1, "", "tanh"], [173, 3, 1, "", "trace"], [174, 0, 0, "-", "transform"], [173, 3, 1, "", "trunc"], [173, 3, 1, "", "truncdiv"], [173, 3, 1, "", "truncmod"], [173, 3, 1, "", "tvm_access_ptr"], [173, 3, 1, "", "tvm_bmma_sync"], [173, 3, 1, "", "tvm_check_return"], [173, 3, 1, "", "tvm_fill_fragment"], [173, 3, 1, "", "tvm_load_matrix_sync"], [173, 3, 1, "", "tvm_mma_sync"], [173, 3, 1, "", "tvm_stack_alloca"], [173, 3, 1, "", "tvm_stack_make_array"], [173, 3, 1, "", "tvm_stack_make_shape"], [173, 3, 1, "", "tvm_store_matrix_sync"], [173, 3, 1, "", "tvm_struct_get"], [173, 3, 1, "", "tvm_struct_set"], [173, 3, 1, "", "tvm_thread_allreduce"], [173, 3, 1, "", "tvm_throw_last_error"], [173, 3, 1, "", "tvm_tuple"], [173, 3, 1, "", "type_annotation"], [173, 3, 1, "", "undef"], [173, 3, 1, "", "vectorcombine"], [173, 3, 1, "", "vectorhigh"], [173, 3, 1, "", "vectorlow"], [173, 3, 1, "", "vscale"]], "tvm.tir.BijectiveLayout": [[173, 2, 1, "", "backward_index"], [173, 2, 1, "", "backward_shape"], [173, 2, 1, "", "forward_index"], [173, 2, 1, "", "forward_shape"]], "tvm.tir.BlockDependenceInfo": [[173, 2, 1, "", "get_block_scope"], [173, 2, 1, "", "get_sref"]], "tvm.tir.Buffer": [[173, 2, 1, "", "access_ptr"], [173, 2, 1, "", "get_flattened_buffer"], [173, 2, 1, "", "offset_of"], [173, 2, 1, "", "scope"], [173, 2, 1, "", "vload"], [173, 2, 1, "", "vstore"]], "tvm.tir.IndexMap": [[173, 2, 1, "", "from_func"], [173, 2, 1, "", "from_func_with_separators"], [173, 2, 1, "", "inverse"], [173, 2, 1, "", "is_equivalent_to"], [173, 2, 1, "", "map_indices"], [173, 2, 1, "", "map_ndarray"], [173, 2, 1, "", "map_shape"], [173, 2, 1, "", "non_surjective_inverse"]], "tvm.tir.Layout": [[173, 2, 1, "", "factor_of"], [173, 2, 1, "", "index_of"]], "tvm.tir.PrimFunc": [[173, 2, 1, "", "specialize"], [173, 2, 1, "", "with_body"]], "tvm.tir.TensorIntrin": [[173, 2, 1, "", "get"], [173, 2, 1, "", "register"]], "tvm.tir.analysis": [[170, 0, 0, "-", "analysis"]], "tvm.tir.analysis.analysis": [[170, 3, 1, "", "OOBChecker"], [170, 3, 1, "", "apply_prim_func_arg_and_result_memory_constraints"], [170, 3, 1, "", "assert_pure_function"], [170, 3, 1, "", "calculate_allocated_bytes"], [170, 3, 1, "", "calculate_constant_bytes"], [170, 3, 1, "", "calculate_workspace_bytes"], [170, 3, 1, "", "detect_buffer_access_lca"], [170, 3, 1, "", "estimate_tir_flops"], [170, 3, 1, "", "expr_deep_equal"], [170, 3, 1, "", "find_anchor_block"], [170, 3, 1, "", "get_block_access_region"], [170, 3, 1, "", "get_block_read_write_region"], [170, 3, 1, "", "get_prim_func_arg_and_result_memory_constraints"], [170, 3, 1, "", "get_vtcm_compaction_passes"], [170, 3, 1, "", "is_pure_function"], [170, 3, 1, "", "undefined_vars"], [170, 3, 1, "", "verify_gpu_code"], [170, 3, 1, "", "verify_memory"], [170, 3, 1, "", "verify_ssa"], [170, 3, 1, "", "verify_well_formed"]], "tvm.tir.schedule": [[171, 1, 1, "", "BlockRV"], [171, 1, 1, "", "BlockScope"], [171, 1, 1, "", "DepKind"], [171, 1, 1, "", "Dependency"], [171, 4, 1, "", "ExprRV"], [171, 1, 1, "", "Instruction"], [171, 1, 1, "", "InstructionKind"], [171, 1, 1, "", "LoopRV"], [171, 1, 1, "", "Schedule"], [171, 1, 1, "", "ScheduleDebugMask"], [171, 6, 1, "", "ScheduleError"], [171, 1, 1, "", "ScheduleState"], [171, 1, 1, "", "StmtSRef"], [171, 1, 1, "", "Trace"]], "tvm.tir.schedule.BlockScope": [[171, 2, 1, "", "get_deps_by_dst"], [171, 2, 1, "", "get_deps_by_src"]], "tvm.tir.schedule.DepKind": [[171, 4, 1, "", "OPAQUE"], [171, 4, 1, "", "RAW"], [171, 4, 1, "", "WAR"], [171, 4, 1, "", "WAW"]], "tvm.tir.schedule.Instruction": [[171, 4, 1, "", "attrs"], [171, 4, 1, "", "inputs"], [171, 4, 1, "", "kind"], [171, 4, 1, "", "outputs"]], "tvm.tir.schedule.InstructionKind": [[171, 2, 1, "", "get"], [171, 5, 1, "", "is_pure"], [171, 4, 1, "", "name"]], "tvm.tir.schedule.Schedule": [[171, 2, 1, "", "add_unit_loop"], [171, 2, 1, "", "annotate"], [171, 2, 1, "", "annotate_buffer_access"], [171, 2, 1, "", "bind"], [171, 2, 1, "", "blockize"], [171, 2, 1, "", "cache_index"], [171, 2, 1, "", "cache_inplace"], [171, 2, 1, "", "cache_read"], [171, 2, 1, "", "cache_write"], [171, 2, 1, "", "can_decompose_padding"], [171, 2, 1, "", "compute_at"], [171, 2, 1, "", "compute_inline"], [171, 2, 1, "", "copy"], [171, 2, 1, "", "decompose_padding"], [171, 2, 1, "", "decompose_reduction"], [171, 2, 1, "", "enter_postproc"], [171, 2, 1, "", "fork_seed"], [171, 5, 1, "", "func_working_on"], [171, 2, 1, "", "fuse"], [171, 2, 1, "", "get"], [171, 2, 1, "", "get_block"], [171, 2, 1, "", "get_child_blocks"], [171, 2, 1, "", "get_consumers"], [171, 2, 1, "", "get_loops"], [171, 2, 1, "", "get_output_blocks"], [171, 2, 1, "", "get_producers"], [171, 2, 1, "", "get_sref"], [171, 2, 1, "", "loop_partition"], [171, 2, 1, "", "merge"], [171, 5, 1, "", "mod"], [171, 2, 1, "", "pad_einsum"], [171, 2, 1, "", "parallel"], [171, 2, 1, "", "reindex"], [171, 2, 1, "", "reindex_cache_read"], [171, 2, 1, "", "reindex_cache_write"], [171, 2, 1, "", "remove_rv"], [171, 2, 1, "", "reorder"], [171, 2, 1, "", "reorder_block_iter_var"], [171, 2, 1, "", "reverse_compute_at"], [171, 2, 1, "", "reverse_compute_inline"], [171, 2, 1, "", "rfactor"], [171, 2, 1, "", "rolling_buffer"], [171, 2, 1, "", "sample_categorical"], [171, 2, 1, "", "sample_compute_location"], [171, 2, 1, "", "sample_partitioned_tile"], [171, 2, 1, "", "sample_perfect_tile"], [171, 2, 1, "", "seed"], [171, 2, 1, "", "set_axis_separator"], [171, 2, 1, "", "set_scope"], [171, 2, 1, "", "show"], [171, 2, 1, "", "split"], [171, 5, 1, "", "state"], [171, 2, 1, "", "storage_align"], [171, 2, 1, "", "tensorize"], [171, 5, 1, "", "trace"], [171, 2, 1, "", "transform_block_layout"], [171, 2, 1, "", "transform_layout"], [171, 2, 1, "", "unannotate"], [171, 2, 1, "", "unroll"], [171, 2, 1, "", "unsafe_hide_buffer_access"], [171, 2, 1, "", "unsafe_set_dtype"], [171, 2, 1, "", "vectorize"], [171, 2, 1, "", "work_on"]], "tvm.tir.schedule.ScheduleDebugMask": [[171, 4, 1, "", "VERIFY_CACHED_FLAGS"], [171, 4, 1, "", "VERIFY_SREF_TREE"]], "tvm.tir.schedule.ScheduleState": [[171, 2, 1, "", "get_block_scope"], [171, 2, 1, "", "get_sref"], [171, 2, 1, "", "replace"]], "tvm.tir.schedule.StmtSRef": [[171, 2, 1, "", "inline_mark"], [171, 5, 1, "", "parent"], [171, 2, 1, "", "root_mark"], [171, 5, 1, "", "stmt"]], "tvm.tir.schedule.Trace": [[171, 2, 1, "", "append"], [171, 2, 1, "", "apply_json_to_schedule"], [171, 2, 1, "", "apply_to_schedule"], [171, 2, 1, "", "as_json"], [171, 2, 1, "", "as_python"], [171, 4, 1, "", "decisions"], [171, 2, 1, "", "get_decision"], [171, 4, 1, "", "insts"], [171, 2, 1, "", "pop"], [171, 2, 1, "", "show"], [171, 2, 1, "", "simplified"], [171, 2, 1, "", "with_decision"]], "tvm.tir.stmt_functor": [[172, 3, 1, "", "ir_transform"], [172, 3, 1, "", "post_order_visit"], [172, 3, 1, "", "pre_order_visit"], [172, 3, 1, "", "renew_defs"], [172, 3, 1, "", "substitute"]], "tvm.tir.transform": [[174, 3, 1, "", "AnnotateDeviceRegions"], [174, 3, 1, "", "AnnotateEntryFunc"], [174, 3, 1, "", "Apply"], [174, 3, 1, "", "ApplyLayoutTransforms"], [174, 3, 1, "", "BF16ComputeLegalize"], [174, 3, 1, "", "BF16StorageLegalize"], [174, 3, 1, "", "BindTarget"], [174, 3, 1, "", "CoProcSync"], [174, 3, 1, "", "CombineContextCall"], [174, 3, 1, "", "CommonSubexprElimTIR"], [174, 3, 1, "", "CompactBufferAllocation"], [174, 3, 1, "", "ConvertBlocksToOpaque"], [174, 3, 1, "", "ConvertForLoopsToSerial"], [174, 3, 1, "", "ConvertSSA"], [174, 3, 1, "", "DecorateDeviceScope"], [174, 3, 1, "", "DefaultGPUSchedule"], [174, 3, 1, "", "ExtractPrimFuncConstants"], [174, 3, 1, "", "FP8ComputeLegalize"], [174, 3, 1, "", "FP8StorageLegalize"], [174, 3, 1, "", "Filter"], [174, 3, 1, "", "FlattenBuffer"], [174, 3, 1, "", "ForceNarrowIndexToInt32"], [174, 3, 1, "", "HoistExpression"], [174, 3, 1, "", "HoistIfThenElse"], [174, 1, 1, "", "HoistedConditionals"], [174, 1, 1, "", "HoistedLetBindings"], [174, 3, 1, "", "InferFragment"], [174, 3, 1, "", "InjectCopyIntrin"], [174, 3, 1, "", "InjectDoubleBuffer"], [174, 3, 1, "", "InjectPTXAsyncCopy"], [174, 3, 1, "", "InjectPermutedLayout"], [174, 3, 1, "", "InjectPrefetch"], [174, 3, 1, "", "InjectRollingBuffer"], [174, 3, 1, "", "InjectSoftwarePipeline"], [174, 3, 1, "", "InjectVirtualThread"], [174, 3, 1, "", "InlinePrivateFunctions"], [174, 3, 1, "", "InstallDebugSpans"], [174, 3, 1, "", "InstrumentBoundCheckers"], [174, 3, 1, "", "InstrumentProfileIntrinsics"], [174, 3, 1, "", "LegalizePackedCalls"], [174, 3, 1, "", "LiftAttrScope"], [174, 3, 1, "", "LiftThreadBinding"], [174, 3, 1, "", "LoopPartition"], [174, 3, 1, "", "LowerAutoCopy"], [174, 3, 1, "", "LowerCrossThreadReduction"], [174, 3, 1, "", "LowerCustomDatatypes"], [174, 3, 1, "", "LowerDeviceKernelLaunch"], [174, 3, 1, "", "LowerDeviceStorageAccessInfo"], [174, 3, 1, "", "LowerInitBlock"], [174, 3, 1, "", "LowerIntrin"], [174, 3, 1, "", "LowerMatchBuffer"], [174, 3, 1, "", "LowerOpaqueBlock"], [174, 3, 1, "", "LowerTVMBuiltin"], [174, 3, 1, "", "LowerThreadAllreduce"], [174, 3, 1, "", "LowerWarpMemory"], [174, 3, 1, "", "MakePackedAPI"], [174, 3, 1, "", "MakeUnpackedAPI"], [174, 3, 1, "", "ManifestSharedMemoryLocalStage"], [174, 3, 1, "", "MergeSharedMemoryAllocations"], [174, 3, 1, "", "NarrowDataType"], [174, 3, 1, "", "PlanAndUpdateBufferAllocationLocation"], [174, 3, 1, "", "PointerValueTypeRewrite"], [174, 1, 1, "", "PrimFuncPass"], [174, 3, 1, "", "ReduceBranchingThroughOvercompute"], [174, 3, 1, "", "RemoveAssume"], [174, 3, 1, "", "RemoveNoOp"], [174, 3, 1, "", "RemoveStoreUndef"], [174, 3, 1, "", "RemoveWeightLayoutRewriteBlock"], [174, 3, 1, "", "RenormalizeSplitPattern"], [174, 3, 1, "", "RewriteUnsafeSelect"], [174, 3, 1, "", "Simplify"], [174, 3, 1, "", "SkipAssert"], [174, 3, 1, "", "SplitHostDevice"], [174, 3, 1, "", "StorageFlatten"], [174, 3, 1, "", "StorageRewrite"], [174, 3, 1, "", "TextureFlatten"], [174, 3, 1, "", "ThreadSync"], [174, 3, 1, "", "TransformMmaBufferLayout"], [174, 3, 1, "", "UnifyThreadBinding"], [174, 3, 1, "", "UnrollLoop"], [174, 3, 1, "", "UseAssumeToReduceBranches"], [174, 3, 1, "", "VectorizeLoop"], [174, 3, 1, "", "VerifyMemory"], [174, 3, 1, "", "VerifyVTCMLimit"], [174, 3, 1, "", "prim_func_pass"]], "tvm.tir.transform.HoistedConditionals": [[174, 4, 1, "", "All"], [174, 4, 1, "", "BooleanExpression"], [174, 4, 1, "", "IfElseExpr"], [174, 4, 1, "", "IfElseStmt"], [174, 4, 1, "", "Never"], [174, 4, 1, "", "UsingBlockVar"]], "tvm.tir.transform.HoistedLetBindings": [[174, 4, 1, "", "All"], [174, 4, 1, "", "LetExpr"], [174, 4, 1, "", "LetStmt"], [174, 4, 1, "", "Never"], [174, 4, 1, "", "RequiredByConditional"]], "tvm.topi": [[175, 0, 0, "-", "image"], [175, 0, 0, "-", "nn"], [175, 0, 0, "-", "sparse"]], "tvm.topi.image": [[175, 3, 1, "", "affine_grid"], [175, 3, 1, "", "can_convert_multiply_to_intdiv"], [175, 3, 1, "", "crop_and_resize"], [175, 3, 1, "", "dilation2d_nchw"], [175, 3, 1, "", "dilation2d_nhwc"], [175, 3, 1, "", "get_1d_indices"], [175, 3, 1, "", "get_1d_pixel"], [175, 3, 1, "", "get_2d_indices"], [175, 3, 1, "", "get_2d_pixel"], [175, 3, 1, "", "get_3d_indices"], [175, 3, 1, "", "get_3d_pixel"], [175, 3, 1, "", "get_closest_index"], [175, 3, 1, "", "get_inx"], [175, 3, 1, "", "get_pad_tuple"], [175, 3, 1, "", "grid_sample"], [175, 3, 1, "", "nchw_pack_layout"], [175, 3, 1, "", "nchw_xc_layout"], [175, 3, 1, "", "pad"], [175, 3, 1, "", "resize1d"], [175, 3, 1, "", "resize2d"], [175, 3, 1, "", "resize3d"], [175, 3, 1, "", "simplify"]], "tvm.topi.nn": [[175, 1, 1, "", "Workload"], [175, 3, 1, "", "adaptive_pool"], [175, 3, 1, "", "adaptive_pool1d"], [175, 3, 1, "", "adaptive_pool3d"], [175, 3, 1, "", "add"], [175, 3, 1, "", "add_alter_layout"], [175, 3, 1, "", "batch_matmul"], [175, 3, 1, "", "batch_matmul_legalize"], [175, 3, 1, "", "batch_norm"], [175, 3, 1, "", "batch_to_space_nd"], [175, 3, 1, "", "bias_add_legalize"], [175, 3, 1, "", "binarize_pack"], [175, 3, 1, "", "binary_dense"], [175, 3, 1, "", "bitpack"], [175, 3, 1, "", "bitserial_conv2d_legalize"], [175, 3, 1, "", "bitserial_conv2d_nchw"], [175, 3, 1, "", "bitserial_conv2d_nhwc"], [175, 3, 1, "", "bitserial_dense"], [175, 3, 1, "", "concatenate"], [175, 3, 1, "", "conv"], [175, 3, 1, "", "conv1d"], [175, 3, 1, "", "conv1d_ncw"], [175, 3, 1, "", "conv1d_nwc"], [175, 3, 1, "", "conv1d_transpose_ncw"], [175, 3, 1, "", "conv2d"], [175, 3, 1, "", "conv2d_NCHWc"], [175, 3, 1, "", "conv2d_NCHWc_int8"], [175, 3, 1, "", "conv2d_alter_layout"], [175, 3, 1, "", "conv2d_gemm_weight_transform"], [175, 3, 1, "", "conv2d_hwcn"], [175, 3, 1, "", "conv2d_infer_layout"], [175, 3, 1, "", "conv2d_legalize"], [175, 3, 1, "", "conv2d_nchw"], [175, 3, 1, "", "conv2d_nhwc"], [175, 3, 1, "", "conv2d_transpose_alter_layout"], [175, 3, 1, "", "conv2d_transpose_legalize"], [175, 3, 1, "", "conv2d_transpose_nchw"], [175, 3, 1, "", "conv2d_transpose_nchw_preprocess"], [175, 3, 1, "", "conv2d_winograd_nchw"], [175, 3, 1, "", "conv2d_winograd_nchw_without_weight_transform"], [175, 3, 1, "", "conv2d_winograd_nhwc"], [175, 3, 1, "", "conv2d_winograd_nhwc_without_weight_transform"], [175, 3, 1, "", "conv2d_winograd_nnpack_weight_transform"], [175, 3, 1, "", "conv2d_winograd_weight_transform"], [175, 3, 1, "", "conv3d_alter_layout"], [175, 3, 1, "", "conv3d_ncdhw"], [175, 3, 1, "", "conv3d_ndhwc"], [175, 3, 1, "", "conv3d_transpose_legalize"], [175, 3, 1, "", "conv3d_transpose_ncdhw"], [175, 3, 1, "", "conv3d_transpose_ncdhw_preprocess"], [175, 3, 1, "", "conv3d_winograd_weight_transform"], [175, 3, 1, "", "correlation_nchw"], [175, 3, 1, "", "declaration_conv2d_transpose_impl"], [175, 3, 1, "", "declaration_conv3d_transpose_impl"], [175, 3, 1, "", "deformable_conv2d_nchw"], [175, 3, 1, "", "deformable_conv2d_nhwc"], [175, 3, 1, "", "dense"], [175, 3, 1, "", "dense_alter_layout"], [175, 3, 1, "", "dense_legalize"], [175, 3, 1, "", "dense_pack"], [175, 3, 1, "", "depth_to_space"], [175, 3, 1, "", "depthwise_conv2d_NCHWc"], [175, 3, 1, "", "depthwise_conv2d_backward_input_nhwc"], [175, 3, 1, "", "depthwise_conv2d_backward_weight_nhwc"], [175, 3, 1, "", "depthwise_conv2d_infer_layout"], [175, 3, 1, "", "depthwise_conv2d_nchw"], [175, 3, 1, "", "depthwise_conv2d_nhwc"], [175, 3, 1, "", "dilate"], [175, 3, 1, "", "equal_const_int"], [175, 3, 1, "", "fast_softmax"], [175, 3, 1, "", "fifo_buffer"], [175, 3, 1, "", "flatten"], [175, 3, 1, "", "get_const_int"], [175, 3, 1, "", "get_const_tuple"], [175, 3, 1, "", "get_pad_tuple"], [175, 3, 1, "", "get_pad_tuple1d"], [175, 3, 1, "", "get_pad_tuple3d"], [175, 3, 1, "", "get_pad_tuple_generic"], [175, 3, 1, "", "global_pool"], [175, 3, 1, "", "group_conv1d_ncw"], [175, 3, 1, "", "group_conv1d_nwc"], [175, 3, 1, "", "group_conv1d_transpose_ncw"], [175, 3, 1, "", "group_conv2d_nchw"], [175, 3, 1, "", "group_conv2d_nhwc"], [175, 3, 1, "", "group_conv2d_transpose_nchw"], [175, 3, 1, "", "group_conv3d_transpose_ncdhw"], [175, 3, 1, "", "group_norm"], [175, 3, 1, "", "instance_norm"], [175, 3, 1, "", "layer_norm"], [175, 3, 1, "", "layout_transform"], [175, 3, 1, "", "leaky_relu"], [175, 3, 1, "", "log_softmax"], [175, 3, 1, "", "lrn"], [175, 3, 1, "", "lstm"], [175, 3, 1, "", "matmul"], [175, 3, 1, "", "matmul_legalize"], [175, 3, 1, "", "mirror_pad"], [175, 3, 1, "", "namedtuple"], [175, 3, 1, "", "nll_loss"], [175, 3, 1, "", "pad"], [175, 3, 1, "", "pool1d"], [175, 3, 1, "", "pool2d"], [175, 3, 1, "", "pool3d"], [175, 3, 1, "", "pool_grad"], [175, 3, 1, "", "prelu"], [175, 3, 1, "", "qnn_conv2d_alter_layout"], [175, 3, 1, "", "qnn_dense_alter_layout"], [175, 3, 1, "", "qnn_requantize_alter_layout"], [175, 3, 1, "", "reduce"], [175, 3, 1, "", "relu"], [175, 3, 1, "", "rms_norm"], [175, 3, 1, "", "scale_shift_nchw"], [175, 3, 1, "", "scale_shift_nchwc"], [175, 3, 1, "", "scale_shift_nhwc"], [175, 3, 1, "", "simplify"], [175, 3, 1, "", "simulated_dequantize"], [175, 3, 1, "", "simulated_quantize"], [175, 3, 1, "", "softmax"], [175, 3, 1, "", "softmax_common"], [175, 3, 1, "", "space_to_batch_nd"], [175, 3, 1, "", "space_to_depth"], [175, 3, 1, "", "sparse_add"], [175, 3, 1, "", "sparse_conv2d"], [175, 3, 1, "", "sparse_dense"], [175, 3, 1, "", "sparse_dense_alter_layout"], [175, 3, 1, "", "sparse_dense_sp_lhs"], [175, 3, 1, "", "sparse_dense_sp_rhs"], [175, 3, 1, "", "sparse_transpose"], [175, 3, 1, "", "strided_slice"], [175, 3, 1, "", "try_get_conv2d_sparse_input"], [175, 3, 1, "", "try_get_sparse_input"], [175, 3, 1, "", "unpack_NCHWc_to_nchw"], [175, 3, 1, "", "upsampling"], [175, 3, 1, "", "upsampling3d"], [175, 3, 1, "", "winograd_transform_matrices"]], "tvm.topi.nn.Workload": [[175, 4, 1, "", "dilation_h"], [175, 4, 1, "", "dilation_w"], [175, 4, 1, "", "height"], [175, 4, 1, "", "in_dtype"], [175, 4, 1, "", "in_filter"], [175, 4, 1, "", "kernel_h"], [175, 4, 1, "", "kernel_w"], [175, 4, 1, "", "out_dtype"], [175, 4, 1, "", "out_filter"], [175, 4, 1, "", "padb"], [175, 4, 1, "", "padl"], [175, 4, 1, "", "padr"], [175, 4, 1, "", "padt"], [175, 4, 1, "", "stride_h"], [175, 4, 1, "", "stride_w"], [175, 4, 1, "", "width"]], "tvm.topi.sparse": [[175, 3, 1, "", "csrmm"], [175, 3, 1, "", "csrmv"], [175, 3, 1, "", "dense"]], "tvm.transform": [[176, 3, 1, "", "ApplyPassToFunction"], [176, 1, 1, "", "ModulePass"], [176, 1, 1, "", "Pass"], [176, 1, 1, "", "PassContext"], [176, 1, 1, "", "PassInfo"], [176, 3, 1, "", "PrintIR"], [176, 1, 1, "", "Sequential"], [176, 3, 1, "", "module_pass"]], "tvm.transform.Pass": [[176, 5, 1, "", "info"]], "tvm.transform.PassContext": [[176, 2, 1, "", "current"], [176, 2, 1, "", "get_current_trace"], [176, 2, 1, "", "get_trace_stack"], [176, 2, 1, "", "get_trace_stack_size"], [176, 2, 1, "", "get_tuning_api_database"], [176, 2, 1, "", "inc_num_evals"], [176, 2, 1, "", "list_configs"], [176, 2, 1, "", "override_instruments"], [176, 2, 1, "", "pop_trace"], [176, 2, 1, "", "push_trace"], [176, 2, 1, "", "set_num_evals"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property", "6": "py:exception"}, "terms": {"": [0, 2, 4, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 22, 23, 25, 27, 30, 31, 34, 35, 36, 37, 39, 43, 44, 46, 48, 51, 52, 56, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 79, 80, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 111, 113, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 132, 135, 136, 137, 138, 139, 141, 143, 144, 146, 147, 148, 149, 150, 151, 153, 155, 157, 158, 159, 160, 161, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 177, 178, 179, 180, 182, 187, 188, 189, 191, 192, 193, 195, 197, 198, 199], "0": [0, 1, 2, 3, 4, 5, 6, 8, 13, 17, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 34, 35, 36, 37, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 80, 82, 83, 84, 85, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 135, 136, 137, 141, 144, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 182, 183, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199], "00": [24, 29, 45, 51, 55, 68, 72, 73, 77, 83, 91, 95, 97, 98, 99, 100, 103, 105, 106, 107, 114, 117, 126, 186, 189, 194, 198], "000": [117, 186, 194], "0000": [31, 157, 175], "00000": 199, "0000000000000001e": 111, "000000e": [96, 123], "000000f": 118, "000006": 195, "000008": 195, "000009": 195, "000040": 195, "0001": 175, "00019": 52, "00021": 52, "00022": 52, "00023": 52, "000261": [189, 197], "000262": 189, "0003": 98, "00089283": 193, "0009094": 193, "00095838": 193, "001": 159, "00102275": 193, "00103331": 193, "00106262": 193, "00106737": 193, "00108751": 193, "00110792": 193, "00113151": 193, "001215": 189, "001273": [189, 197], "005": [98, 103, 117, 186], "00567": 159, "006": 98, "0062": 160, "007": [77, 186], "008": [83, 99, 100, 186], "00f": [96, 123], "01": [45, 49, 55, 72, 77, 83, 91, 95, 97, 99, 100, 105, 108, 114, 126, 149, 158, 161, 186, 188, 189, 194, 197], "010": [98, 99, 100, 117, 186], "011": 98, "01259948": 43, "013": [97, 98], "0156": 115, "0156233": 115, "015873": 30, "016": [99, 100], "016463164800000003": 188, "0178": 74, "018": [93, 117, 186], "01852v1": 175, "019365": [189, 197], "019712": 189, "019872": 90, "02": [0, 45, 91, 98, 106, 107, 114, 117, 186, 188, 189, 194], "020": 98, "020062": 195, "02025": [156, 175], "021": [103, 186], "022": 98, "0220606": 115, "0221": 115, "02337324": 43, "02337325": 43, "02353344": 43, "0235335": 43, "026349618800000002": 188, "0278709802": 188, "028642908": 188, "029381486047453238": 195, "029974978399999998": 188, "03": [55, 77, 83, 95, 105, 106, 108, 126, 186, 189], "030062": 30, "030830001393043e": 195, "031": [99, 100], "03186": 52, "0319407852": 188, "032230586418011194": 195, "033": [91, 117, 126, 186], "03343": 52, "034": [55, 186], "03516329082354317": 195, "0355": 115, "0355334": 115, "036": [83, 93, 186], "037135": 104, "03872962341483841": 195, "04": [83, 97, 117, 186, 189, 194, 197], "044": 93, "044715": 149, "045": [97, 110], "046": 97, "0471": 115, "04710218": 115, "049": [93, 98], "05": [75, 105, 106, 107, 108, 111, 113, 148, 149, 158, 159, 175, 189, 195, 197], "0507458": 30, "05f": [85, 193], "06": [55, 99, 100, 105, 106, 107, 108, 159, 189, 195], "062": 98, "06211": [158, 175], "063": 98, "064": 186, "06417739": 43, "06417744": 43, "06434": 159, "066": [44, 126, 186], "067": 98, "06726527": 115, "0673": 115, "0676ba61": 68, "068": 98, "06827082": 43, "06827084": 43, "07": [49, 99, 100, 106, 109, 137, 189, 199], "070144": 7, "071648": 30, "072": 98, "073": [99, 100], "076": 98, "077": [126, 186], "0777881": 115, "0778": 115, "079": 98, "07f9fcad27bdd3233f86fe35a5185d33": [98, 100], "08": [58, 77, 97, 99, 100, 105, 106, 186, 189], "08022": 158, "083": 97, "084": 97, "08494": 158, "0854": 115, "0854187": 115, "087": [24, 99, 100, 186], "08f7449d79e570b7274174709e5e5e01": [97, 98, 99, 100], "09": [97, 108, 189, 197], "09137713538551477": 195, "092064": 30, "09240626619052565": 195, "09285582540000001": 188, "09642": 30, "09685704": 115, "0969": 115, "0_224": [53, 74], "0_224_quant": 74, "0bcf718c0e6566bcd6c3b1437a3b6291": 98, "0f": [96, 97, 98, 99, 100, 101], "0f32": 101, "0fad1b42d0d33418e0a8d15d3bbad3c9": [98, 100], "0ghz": 105, "0m": 68, "0u": 36, "0x1030e4e50": 132, "0x177d12": 13, "0x1ba2f8": 13, "0x1ba35c": 13, "0x1c4126": 13, "0x2060d330": 135, "0x2064edf8": 135, "0x286326d0": 191, "0x48": 13, "0x49d01a10": 191, "0x7fab4f7a8d12": 13, "0x7fab4f7eb2f8": 13, "0x7fab4f7eb35c": 13, "0x7fab4f7f5126": 13, "0x7fab500b8ca8": 13, "1": [2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 17, 18, 20, 22, 23, 30, 31, 32, 36, 37, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 121, 123, 124, 125, 127, 128, 129, 135, 136, 137, 139, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 173, 174, 175, 177, 179, 180, 181, 182, 183, 187, 188, 189, 191, 193, 196, 197, 199], "10": [2, 4, 8, 17, 20, 22, 23, 36, 43, 44, 49, 62, 66, 67, 68, 69, 71, 75, 85, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 121, 124, 125, 135, 136, 141, 144, 147, 148, 149, 150, 154, 157, 159, 160, 161, 165, 166, 169, 171, 173, 175, 176, 179, 180, 181, 182, 183, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198], "100": [36, 51, 68, 72, 73, 74, 90, 95, 104, 106, 108, 135, 136, 141, 149, 158, 159, 173, 175, 177, 180, 186, 188, 189, 191, 195, 197], "1000": [46, 48, 50, 51, 68, 69, 70, 71, 73, 75, 85, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 111, 115, 159, 187, 188, 189, 191, 193, 197], "10000": [97, 105, 107, 113, 148, 191, 198], "10000000000000001": 111, "1001": [53, 99, 100, 106], "100352": [118, 191], "100576": 118, "1008": 52, "100800": 118, "101": [68, 93], "101024": 118, "101248": 118, "101472": 118, "101696": 118, "101920": 118, "102": [68, 74], "1024": [1, 37, 56, 61, 67, 68, 70, 75, 89, 90, 96, 97, 99, 100, 101, 104, 109, 110, 119, 121, 124, 128, 151, 187, 191, 195, 197], "1024x1024": 187, "103": [68, 106], "1036": 52, "104": [68, 69, 70, 71], "10454400": 104, "104623": 0, "1048576": [90, 187, 195], "105": 68, "1050": 107, "1054": [99, 100], "10556": 115, "1056": 106, "1056285138": 195, "105629": 195, "1059": 107, "106": [68, 198], "107": 68, "1070": 75, "1076": 106, "108": [68, 118], "1080": 106, "1080ti": [106, 168], "108379": 90, "1084": 106, "1088": [96, 106], "1089714": 115, "109": [68, 97, 118], "1090": 115, "1097": 98, "1097323f3970e5c881ad3a0028ca79cb": 98, "10b8215aaf2e14d47d40b4093e6f41a0": 98, "10x10": 188, "11": [0, 17, 50, 55, 59, 65, 68, 70, 77, 85, 89, 96, 97, 98, 99, 100, 105, 106, 107, 108, 111, 113, 118, 123, 132, 149, 157, 159, 161, 175, 179, 180, 181, 186, 189, 191, 193, 194, 197], "110": [68, 74, 118], "110592": 96, "111": [47, 68, 189], "1111": 105, "1112": 189, "112": [68, 85, 97, 98, 99, 100, 111, 118, 191, 193], "1120": 118, "1122": 107, "112307": 30, "1125": 106, "11264": 113, "113": [47, 68, 97, 98, 99, 100, 198], "1131": [99, 100], "11327": 8, "1136": 98, "114": [49, 68], "1141": 106, "115": [49, 68, 98, 197], "1152": 96, "115871": 195, "1158712305": 195, "116": [68, 74], "1166": 107, "11660337": 43, "117": [68, 69, 70, 71], "117229": 90, "1179648": 89, "118": [68, 93], "1184": 106, "119": [68, 77, 93, 99, 100, 186], "1190": 197, "12": [51, 64, 68, 69, 70, 71, 72, 75, 80, 85, 96, 97, 98, 99, 100, 105, 106, 107, 108, 111, 118, 149, 157, 161, 171, 175, 189, 191, 193, 197, 198], "120": [68, 149, 157], "120m": 72, "121": [68, 159], "1216": 96, "12190": 17, "122": [68, 73, 98], "12230": 7, "12288": 89, "123": [68, 69, 70, 71], "1234": 7, "12369": 7, "124": 68, "1242714": 30, "12436": 0, "125": 68, "12544": [97, 118], "126": [68, 118], "1264145096": 195, "126415": 195, "127": [27, 47, 56, 58, 67, 68, 69, 97, 99, 105, 106, 107, 118, 171], "1272": 106, "128": [6, 20, 22, 23, 25, 27, 30, 31, 66, 68, 75, 82, 85, 96, 97, 98, 99, 100, 101, 107, 111, 118, 121, 123, 136, 147, 148, 158, 159, 168, 169, 171, 173, 187, 188, 191, 193], "1280": 96, "12845056": 89, "1289": 73, "128x128": 89, "129": [68, 171], "129128": 90, "129mb": 72, "12u": 85, "12x": 74, "13": [51, 53, 55, 67, 68, 70, 71, 72, 73, 77, 85, 93, 96, 97, 98, 99, 100, 105, 106, 107, 111, 118, 148, 149, 157, 158, 159, 161, 175, 186, 189, 191, 193, 197, 198], "130": [68, 98, 189, 197], "131": [7, 68], "131072": [89, 118], "131161": 89, "132": [68, 171], "13296": 98, "132mb": 51, "133": [68, 97], "134": [68, 171], "1340": 67, "1344": [96, 97, 106, 118], "135": 68, "1357": 108, "136": [68, 97], "136mb": 68, "137": 68, "138": [68, 115], "1381": 106, "139": 68, "1391": 106, "1392357267": 195, "139236": 195, "13t13": 199, "13u": 85, "14": [58, 59, 68, 85, 88, 89, 96, 97, 98, 99, 100, 105, 106, 107, 108, 111, 118, 137, 152, 157, 158, 161, 168, 173, 175, 186, 188, 189, 191, 193, 194, 197, 199], "140": [68, 115, 171], "140250": 90, "1408": 96, "1409": 159, "141": 68, "14142653": 43, "1414266": 43, "142": [68, 126, 186], "1428": 197, "142m": 72, "143": [68, 93, 98], "14300": 17, "1433": 115, "144": [68, 118, 171], "1448604": 30, "1449": 98, "145": [68, 98, 109, 118], "146": [68, 118, 189], "147": 68, "1472": 96, "147456": 96, "148": 68, "149": [68, 93, 99, 100], "1497723": 30, "15": [0, 67, 68, 85, 89, 90, 95, 96, 97, 98, 99, 100, 105, 106, 107, 108, 111, 118, 123, 132, 135, 148, 149, 152, 157, 161, 174, 175, 186, 189, 193, 197], "150": [68, 99, 100, 106, 136, 191], "1500": [104, 105, 189], "1502": 175, "15044701": 43, "15044704": 43, "150528": [118, 191], "1506": [156, 175], "150752": 118, "150976": 118, "151": [68, 99, 100], "1511": 159, "1512": 159, "151200": 118, "151424": 118, "151648": 118, "151872": 118, "152": 68, "152096": 118, "152506": 30, "1526": 98, "153": [68, 189], "1536": [89, 96, 97], "154": [68, 93], "1549": 107, "154mb": 73, "155": [68, 99, 100], "1554": 0, "1556": 159, "156": [68, 91, 186, 189], "1568": 118, "157": [68, 99, 100], "158": [68, 93], "159": [68, 99, 100], "1598": 108, "16": [31, 65, 66, 68, 69, 73, 74, 82, 85, 89, 93, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 110, 111, 113, 115, 118, 119, 123, 128, 136, 151, 157, 159, 160, 161, 171, 173, 174, 175, 188, 189, 191, 193, 195, 197], "160": [68, 93], "1600": 96, "1602": 106, "1605632": 89, "1606462": 188, "1607": 158, "161": [68, 159], "162": [68, 71, 105, 109, 118], "163": [68, 93, 118], "16384": [6, 89, 171, 187], "164": [68, 118], "164m": 72, "165": [68, 75], "1658": 108, "166": [68, 72, 99, 100], "1664": 96, "16684939": 43, "16684945": 43, "167": 68, "168": [68, 70, 72], "1680": 98, "1684": 108, "169": [47, 68, 159], "1694": 98, "169mb": 72, "16x16x16": 89, "16x64": 128, "17": [68, 69, 85, 95, 96, 97, 98, 99, 100, 105, 106, 107, 111, 118, 132, 148, 157, 186, 189, 193, 197], "170": [68, 99, 100], "1703": [158, 175], "170m": 72, "171": 68, "17177": 30, "172": [68, 189], "1728": 96, "173": 68, "1734": 108, "1737385112": 188, "1737385114": 188, "1737385115": 188, "1737385120": 188, "1737385121": 188, "1737385122": 188, "1737385123": 188, "1737385128": 188, "174": 68, "1745": 108, "17474481": 43, "175": [68, 93], "1754": 115, "17540497": 115, "1755": 108, "176": [68, 99, 100], "1763": 98, "177": [68, 99, 100, 189], "177475": 0, "177534": 0, "177549": 0, "1777": 72, "178": 68, "1788": 67, "179": [68, 93], "1792": 96, "18": [3, 62, 67, 68, 72, 85, 90, 93, 96, 97, 98, 99, 100, 105, 106, 107, 108, 111, 118, 137, 149, 157, 159, 188, 189, 193, 195, 197, 198], "180": [68, 118], "1803": 158, "181": 68, "1816": 74, "182": [68, 108], "183": 68, "1832": 98, "183mb": 51, "184": [68, 93], "184320": 96, "185": [68, 189, 197], "1854265": 188, "1856": 96, "185mb": 51, "186": [45, 68], "186745": 30, "187": 68, "1874": 98, "188": 68, "189": [68, 99, 100], "189993": 0, "18_graph_opt": 108, "18x": 195, "19": [68, 69, 85, 93, 95, 96, 97, 98, 99, 100, 105, 107, 108, 111, 118, 159, 175, 186, 188, 189, 193, 194, 197], "190": [13, 68], "190027": 0, "191": 68, "1912": 108, "192": [68, 70, 96, 97, 98, 99, 100, 189, 197], "1920": 96, "19260": 97, "1927": 108, "193": [68, 197], "1933": 98, "194": [68, 97, 189], "194410": 0, "194440": 0, "194mb": 68, "195": 68, "1955": 108, "1957579": 188, "196": [68, 89, 97, 98], "197": [68, 189], "197mb": 72, "198": [24, 68, 186, 189], "1984": 96, "199": [68, 99, 100], "1995": 106, "19992": 97, "1_nchw1c": 0, "1b": 113, "1d": [53, 137, 148, 149, 156, 157, 158, 174, 175], "1e": [31, 43, 90, 96, 101, 104, 113, 115, 118, 121, 123, 128, 148, 149, 158, 159, 175, 182, 187, 188, 191, 193, 195], "1e3": [88, 89], "1f": [98, 100, 152], "1st": [67, 171], "1x1": [58, 75], "2": [2, 4, 5, 6, 7, 11, 12, 13, 14, 17, 23, 24, 29, 30, 31, 32, 35, 36, 37, 43, 45, 46, 47, 48, 49, 50, 53, 56, 58, 59, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 82, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 110, 111, 113, 115, 118, 119, 123, 124, 125, 128, 129, 135, 136, 137, 139, 144, 145, 146, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 183, 187, 189, 191, 193, 196, 197], "20": [0, 4, 36, 62, 68, 85, 96, 97, 98, 99, 100, 104, 106, 107, 108, 111, 113, 118, 149, 157, 160, 189, 193, 195, 197], "200": [68, 90, 91, 93, 97, 98, 99, 100, 186], "2000": [106, 108, 110], "20000": [97, 98, 99, 100, 111], "2004": 0, "200k": 5, "201": [68, 159], "2014": [149, 158, 159, 175], "2015": [90, 159, 179], "2016": [148, 149, 151, 158, 159], "2018": 184, "2019": [80, 132, 148, 149], "202": [68, 93, 189], "2020": [137, 184], "2021": [6, 184], "2022": [184, 199], "20221208": 7, "2023": 49, "2026": 98, "203": [68, 189], "2036": 98, "203777": 30, "204": [68, 186, 189, 194], "2048": [68, 89, 96, 100, 113, 187], "205": [68, 189], "206": [68, 189], "206e": 109, "207": [68, 189], "208": [51, 67, 68, 70, 71, 72], "209": [68, 186, 194], "21": [68, 85, 93, 96, 97, 98, 99, 100, 105, 111, 118, 148, 149, 157, 189, 193, 197], "210": [68, 189], "2102u": 85, "210mb": 72, "211": 68, "2112": [96, 97], "212": 68, "2128": 108, "2129": 106, "213": [45, 68, 186], "213108": 0, "214": 68, "2147483647": 99, "2147483648": 129, "214mb": [68, 72], "215": [68, 99, 100, 108], "215mb": 68, "216": [68, 191], "2163": 100, "2165u": 85, "217": [67, 68], "2176": 96, "218": [68, 93], "218mb": 72, "219": [68, 189, 197], "22": [68, 85, 95, 96, 98, 99, 100, 105, 107, 111, 113, 118, 157, 175, 180, 186, 189, 193, 197], "220": [68, 99, 100, 104, 186, 194, 195], "221": [68, 73], "221184": 96, "221638": 30, "222": [68, 182, 189], "223": [51, 67, 68, 70, 71, 72, 73], "223mb": 68, "224": [0, 46, 48, 49, 50, 51, 53, 59, 65, 67, 68, 69, 70, 71, 73, 74, 85, 97, 98, 99, 100, 105, 106, 107, 108, 111, 118, 159, 182, 189, 191, 193, 197], "2240": 96, "224mb": 72, "224x224": [49, 189, 197], "225": [50, 51, 67, 68, 73, 97, 99, 118, 189, 197], "226": [68, 191], "2265": 0, "227": [47, 68, 98, 100, 189], "2271": 108, "2273": 108, "2279": 108, "228": 68, "228mb": 72, "229": [50, 51, 67, 73, 189, 197], "2295": 108, "22___x5u76h0p": 199, "22ff38dff": 7, "23": [66, 67, 68, 77, 85, 96, 97, 98, 99, 100, 103, 105, 107, 111, 118, 186, 189, 193, 197], "230": 108, "2304": 96, "231": [99, 100], "2325": 106, "23273": 44, "2346": 98, "235": [99, 100, 121, 186, 187, 194], "2359296": 96, "23631": 44, "2368": 96, "237": [99, 100], "2383": 106, "23891": 110, "23897": 44, "23906": 44, "23987": 44, "24": [0, 17, 68, 69, 85, 96, 97, 98, 99, 100, 105, 106, 108, 111, 118, 132, 148, 149, 151, 157, 189, 191, 193, 197, 198], "240": [106, 198], "241": [95, 186], "24140": 44, "243": [95, 186], "2432": 96, "24324": 44, "2435": 108, "24413": 44, "24473": 44, "24541": 44, "246": 187, "24746": 110, "24775": 110, "2496": 96, "2497": 108, "24994": 110, "25": [0, 68, 85, 96, 99, 100, 105, 106, 107, 108, 111, 118, 135, 188, 189, 191, 193, 197, 198], "250": 72, "25088": 96, "251": [99, 100], "252": 108, "25203": 110, "25218": 0, "25316": 110, "25497": 110, "255": [49, 53, 64, 72, 124, 189, 197], "25577781e50c611c2e45e73c1cb3a6ca": 98, "256": [18, 20, 43, 44, 50, 51, 67, 68, 73, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 110, 111, 118, 124, 127, 171, 187, 188, 193, 195], "2560": [96, 110, 113], "25690112": 89, "258048": 96, "26": [68, 75, 85, 96, 99, 100, 107, 111, 118, 189, 193, 197, 198, 199], "26020": 110, "262": 105, "262144": 191, "2624": 96, "2638": 98, "2639": 98, "26398": 110, "264": 110, "2640": 98, "2642801344": 188, "2645": 98, "26465": 110, "266": [99, 100], "2665": 108, "2666": 108, "2668271182": 188, "268": [99, 100], "2688": 96, "27": [6, 30, 68, 85, 96, 97, 99, 100, 105, 111, 118, 157, 175, 189, 193, 197], "270": 93, "2708": 115, "271": [29, 186], "2720": 108, "2752": 96, "277": 67, "278": 93, "2789": 106, "28": [0, 30, 51, 55, 56, 64, 68, 85, 93, 96, 97, 98, 99, 100, 106, 111, 118, 157, 159, 169, 182, 186, 189, 193, 197], "2806": 100, "281": [51, 67], "2816": 96, "282": [46, 50, 67], "283": 53, "285": [24, 48, 67], "287": 67, "2877": 115, "2877355": 115, "288": 93, "2880": 96, "29": [30, 66, 68, 75, 85, 96, 97, 98, 99, 100, 107, 110, 111, 115, 118, 189, 193, 198], "2905": 106, "2909": 115, "2909307": 115, "29370u": 85, "294": [95, 186], "2941": 73, "2944": 96, "294912": 96, "295": 97, "296": [83, 186], "29691u": 85, "297": 93, "2980": 73, "298668": 30, "299": [52, 74, 97, 98, 99, 100, 105, 106, 107, 108, 159], "29957u": 85, "2beb39e9afe4c74822fffbcbb8533595": 100, "2d": [34, 67, 89, 105, 106, 107, 108, 137, 148, 149, 156, 157, 158, 171, 174, 175, 189], "2d10de6646307f0e3e5cf4b31c20e69b": [98, 100], "2e": [85, 193], "2f": 84, "2k": 158, "2m": [68, 72], "2nd": [36, 67, 171], "2x128x128": 89, "2x2": [58, 158, 175], "2x2x2": 158, "2x4": 89, "3": [0, 2, 3, 4, 5, 6, 8, 11, 12, 13, 14, 17, 32, 36, 43, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 82, 83, 84, 85, 88, 89, 90, 91, 93, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 110, 111, 113, 115, 118, 119, 123, 127, 128, 129, 135, 136, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 168, 169, 171, 173, 175, 177, 179, 181, 182, 186, 187, 188, 189, 191, 193, 196, 197, 199], "30": [30, 56, 66, 68, 85, 96, 97, 98, 106, 107, 111, 118, 189, 193, 197], "300": [72, 96, 98], "3000": 189, "30014u": 85, "3008": 96, "3009": 108, "300k": 60, "301": 93, "30387": 52, "304": 107, "305": 107, "3060808fc5c74e18b1276729071fbae0": 100, "3072": [75, 89, 96, 187], "3076": 31, "308": [72, 189, 197], "309": 72, "3090": 111, "30m": 106, "31": [30, 55, 68, 72, 85, 96, 97, 98, 105, 106, 107, 111, 118, 123, 124, 125, 145, 157, 175, 186, 188, 189, 191, 193, 194, 197], "310": 93, "3112": 98, "3136": [97, 118], "31535u": 85, "31547u": 85, "3159087": 30, "316": 47, "32": [30, 31, 36, 56, 68, 70, 75, 85, 89, 90, 96, 97, 99, 101, 104, 105, 109, 111, 113, 118, 123, 124, 125, 127, 128, 136, 147, 151, 155, 157, 169, 171, 173, 174, 182, 183, 187, 188, 189, 191, 193, 195, 197, 199], "320": [52, 55, 96, 98, 99, 100, 186], "32000": 113, "321": 93, "3211264": 89, "32116u": 85, "32129u": 85, "3221": 115, "3221247": 115, "3225": 115, "32251418": 115, "323594": 90, "325": 105, "3266": 73, "327": 93, "3274": 108, "32768": [70, 90, 128, 195], "328507": 195, "328507244": 195, "32bit": 56, "32kb": 90, "32t": [105, 106, 107], "32x32": 90, "33": [30, 51, 68, 77, 85, 91, 96, 97, 101, 105, 106, 108, 111, 118, 175, 186, 189, 193, 197], "3306": 31, "331361": 90, "331776": 96, "332": 97, "332207": 195, "33220704179999994": 195, "337": [77, 186], "338": 97, "33805236": 115, "3381": 115, "33909": 52, "34": [30, 68, 85, 96, 97, 107, 108, 111, 118, 175, 189, 193, 197], "340": [83, 99, 100], "340282346638528859811704183484516925440": 191, "341": 74, "345": [70, 71, 72], "347": 97, "348": 96, "3487": 106, "349": [74, 97], "35": [68, 85, 96, 105, 107, 111, 118, 189, 193], "353": [29, 186], "356379": 189, "3570": 106, "358": [99, 100], "3581": 106, "36": [68, 85, 91, 96, 105, 106, 107, 111, 117, 118, 186, 189, 193, 194, 198], "360": [93, 108], "365": [105, 189], "367": 44, "367179": [189, 197], "367181": [189, 197], "36864": 96, "368640": 96, "3697": 69, "37": [68, 69, 85, 96, 97, 99, 100, 105, 111, 118, 157, 175, 188, 189, 193, 197], "3718": 108, "372": [105, 108], "37471": 30, "375": [69, 70, 71], "377981": 30, "379": [186, 194], "38": [68, 85, 96, 97, 107, 111, 118, 189, 193, 198], "380": 93, "381": 197, "384": [96, 97, 98], "384384": 88, "38552500208b25b4035682b0e93cbce3": 100, "386": [74, 93], "3869": 108, "387": 74, "389": [72, 91, 126], "38f": [98, 100], "39": [68, 85, 93, 96, 97, 98, 105, 106, 107, 111, 189, 193], "391": 97, "392": 96, "3925": 106, "393216": 89, "395": [69, 70, 71], "398": 110, "3989": 108, "3992": [99, 100], "3aissu": 7, "3b": [105, 107, 109, 168], "3d": [137, 148, 149, 156, 157, 158, 175], "3f": [84, 96, 101, 187], "3rd": 171, "3rdparti": 148, "3x": 49, "3x3": [58, 158, 175], "3x3x3": 158, "4": [0, 5, 6, 30, 31, 35, 36, 47, 48, 51, 56, 58, 62, 66, 67, 68, 69, 72, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 113, 114, 117, 118, 119, 123, 125, 135, 136, 137, 148, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 168, 169, 171, 173, 174, 175, 177, 179, 180, 181, 187, 188, 189, 191, 193, 196, 197, 198], "40": [68, 85, 96, 97, 98, 99, 100, 106, 107, 157, 171, 188, 189, 193], "400": [104, 108], "4000": 189, "4009": 160, "402": 44, "40282e": [98, 100], "403": [99, 100], "4031": 72, "405504": 96, "406": [50, 51, 67, 73, 105, 189, 197], "407": 72, "407558": 0, "407600": 0, "40898566287463": 195, "4090": 106, "4093": 106, "4096": [89, 90, 101, 187, 195], "409874": 0, "409905": 0, "40b1cf1fd37b0ef111b3cc0247302508": 98, "41": [56, 68, 73, 77, 85, 96, 157, 175, 186, 189, 193], "4120": 67, "4123": 67, "412544": 30, "4132": 67, "414": 108, "416": [55, 186], "418": [77, 186], "418003": 30, "419": 69, "42": [55, 68, 85, 96, 107, 117, 189, 193, 197], "421": 107, "423": 189, "424": 189, "428276": 30, "4286": 106, "43": [0, 52, 55, 68, 85, 88, 96, 97, 98, 107, 110, 157, 186, 189, 193, 197], "4309": 115, "43092003": 115, "434": [99, 100], "435": [114, 186], "4375": 0, "44": [0, 51, 55, 68, 72, 85, 95, 96, 98, 100, 106, 186, 189, 193, 197], "440": 191, "441": 191, "442": 191, "442368": 96, "443": 191, "444": 191, "4444907": 115, "4445": 115, "445": [44, 55, 115, 186, 191], "446": [93, 106, 191, 193], "447": [47, 108, 191], "448": [93, 96, 97, 98, 99, 100, 105, 118, 191], "449": [107, 191], "45": [47, 68, 85, 96, 105, 106, 107, 108, 186, 189, 193], "450": [107, 191], "456": [50, 51, 67, 73, 189, 197], "4591": 115, "4591298": 115, "46": [7, 47, 55, 68, 75, 85, 96, 105, 107, 186, 189, 193], "4608": 96, "461": [186, 189, 194], "4610": 69, "4636": 106, "465": [69, 105], "46622": 30, "469": 108, "47": [68, 85, 96, 98, 99, 100, 105, 186, 189, 193, 194, 197, 198], "470241": 188, "471": [47, 189], "4770hq": 90, "4788": 73, "479": [110, 197], "479232": 96, "48": [68, 85, 96, 107, 118, 189, 191, 193, 197, 198], "480": [105, 106], "481": 108, "481481552124023": 188, "482": 97, "484": 148, "485": [50, 51, 67, 73, 189, 197], "487": [108, 189], "4899": 106, "49": [68, 69, 85, 96, 97, 98, 100, 136, 189, 193], "490": 55, "4909": 106, "491": 197, "4912": 106, "49152": 70, "4916": 101, "494": 93, "498753": 30, "499": 189, "4992": 98, "4af5640cbcabd364154463f55de7967a": 97, "4b": 97, "4d": 137, "4d0b62f3d01426887599d4f7ede23ee5": [46, 48, 50, 69, 70, 71, 73], "4f6289590252a1cf45a4dc37bce55a25043b8338": 132, "4g": 66, "4gb": [66, 97], "4kb": [90, 195], "4m": 72, "4th": [36, 171], "4x2": 89, "4x4": [89, 158, 175], "4x4x4": [89, 158], "4x4x8": 136, "5": [0, 31, 35, 36, 47, 52, 62, 65, 66, 67, 68, 69, 74, 75, 80, 84, 85, 90, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 111, 113, 115, 118, 121, 125, 135, 136, 141, 144, 148, 149, 152, 156, 157, 158, 159, 161, 162, 171, 173, 175, 177, 179, 181, 182, 183, 187, 188, 189, 191, 193, 196, 197], "50": [48, 67, 68, 75, 85, 90, 96, 97, 98, 99, 100, 105, 106, 107, 108, 125, 136, 157, 159, 188, 189, 193, 197, 198], "500": [96, 97, 98, 99, 100, 101, 115, 136, 187], "5000": [67, 157, 175], "5001": 67, "5002": 67, "5003": 67, "5004": 67, "5007": 106, "50176": [118, 191], "501760": 191, "50192": 191, "50208": 191, "50224": 191, "50240": 191, "50256": 191, "50272": 191, "504": 110, "50400": 118, "50624": 118, "507": 114, "508": 108, "50848": 118, "50x": 159, "51": [68, 85, 96, 105, 188, 189, 193, 197], "5100": 67, "5105896": 115, "5106": 115, "51072": 118, "512": [17, 58, 68, 85, 88, 89, 96, 97, 98, 99, 100, 101, 104, 108, 111, 118, 123, 128, 187, 188, 189, 191, 193, 195], "51296": 118, "512x512": 188, "513": 93, "514": [189, 197], "514535": 0, "514567": 0, "51520": 118, "515644": 30, "516": 189, "516096": 96, "516582": 0, "516628": 0, "51744": 118, "519": 189, "52": [0, 68, 69, 85, 96, 105, 106, 107, 189, 193, 197], "522": [99, 100, 108], "524288": 128, "529": 197, "52ea56a3ba2b8548ac83748ee8a69093": 97, "53": [68, 72, 85, 96, 97, 106, 188, 189, 193, 197], "530": 69, "5315623306": 188, "533": [47, 55, 186], "534": [55, 106, 186, 197], "534029": 30, "5361466": 30, "537": 52, "538": 189, "54": [68, 84, 85, 96, 110, 118, 189, 193, 198], "541": 106, "541856": 0, "541893": 0, "543452": 0, "544": [105, 107], "545": [99, 100, 107], "5456396579519716": 189, "548": 93, "549": [73, 77, 186], "55": [0, 68, 77, 85, 96, 97, 98, 99, 100, 104, 118, 186, 189, 193, 197], "550": [47, 55, 186], "552960": 96, "554412126541138": 188, "558": 189, "559": 197, "5599": 115, "5599416": 115, "56": [0, 68, 84, 85, 96, 97, 98, 99, 100, 106, 111, 113, 114, 118, 151, 186, 189, 191, 193, 197, 198], "560": 47, "560297": 30, "561168": 115, "5612": 115, "563": 105, "5632": 113, "564": [93, 105], "565": 93, "569": 93, "56da86c7b2bc22e4d100fe5b39dce716": 97, "57": [0, 68, 69, 70, 71, 72, 85, 96, 97, 98, 99, 100, 105, 110, 189, 193, 197], "570": 93, "572": 110, "57344": 89, "574286": 30, "575": 93, "576": [96, 97, 105, 108], "577": 47, "577479": 90, "58": [0, 44, 68, 69, 70, 71, 72, 77, 85, 96, 186, 189, 193, 197], "581": 189, "5817701100008": 189, "582": [99, 100, 107], "583": [93, 113, 114, 186], "58394": 52, "587": [93, 98, 189], "587409485039203": 189, "589824": 96, "59": [68, 84, 85, 95, 96, 105, 106, 189, 193, 197], "5950705022": 195, "595071": 195, "596851": 30, "596b27d23537e5a1b5751d2b0481ef172f58b539": [46, 48, 50, 69, 70, 71, 73], "597": [99, 100], "598": 108, "5981": 157, "5_0": 69, "5_224": 69, "5bci": 7, "5d": 7, "5eb24e3b019f84200645bd001e9caae9": 159, "5f": 52, "5m": [51, 68, 72], "5x": 75, "5x5": [58, 188], "6": [0, 7, 17, 36, 47, 65, 68, 75, 84, 85, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 111, 113, 118, 136, 137, 148, 149, 156, 157, 161, 171, 175, 179, 181, 188, 189, 191, 193, 196, 197], "60": [67, 68, 69, 85, 90, 96, 106, 107, 108, 118, 189, 193, 197], "600": [66, 67, 93, 106], "600k": [5, 60], "601": 106, "602": 105, "605": [99, 100], "606": 77, "6065995ec7d6d6ae2eae7d4e874e8441": 97, "607": [44, 189], "6071821": 115, "6072": 115, "608": [93, 105, 106, 107], "608x608": 47, "61": [0, 68, 85, 96, 189, 193, 197], "610550": [189, 197], "610553": [189, 197], "611": 107, "614": 197, "61440": 89, "61481": 52, "6150205499987": 189, "62": [0, 68, 85, 96, 98, 107, 189, 193], "621": [99, 100, 194], "621103": 189, "621104": 189, "624": [29, 189], "625": 191, "627": 98, "6272": 96, "6290": 100, "63": [68, 85, 96, 99, 100, 108, 125, 188, 189, 193, 197], "632": 189, "635": 105, "636": 93, "63625168800354": 188, "64": [0, 6, 30, 37, 62, 66, 68, 75, 84, 85, 88, 90, 96, 97, 98, 99, 100, 107, 111, 113, 118, 125, 128, 135, 136, 145, 158, 159, 171, 173, 188, 189, 191, 193, 195, 197], "640": [96, 107], "642": 197, "6422528": 89, "644": 93, "6442": 115, "64420664": 115, "64475801217627": 195, "645": 197, "646": [72, 77, 186], "648": [108, 126, 186, 197], "64b7ce5264a64cb340d78b444b0325e6": 98, "64bit": [56, 80, 97], "64x32": 89, "65": [68, 85, 96, 105, 107, 189, 193, 197], "650": [99, 100], "652": [99, 100], "653": [67, 77, 186], "65348685": 115, "6535": 115, "655": 93, "6551166": 188, "65536": [128, 191], "658": [50, 55, 186], "66": [68, 85, 96, 105, 106, 171, 186, 189, 193, 197], "660": 93, "662": [99, 100], "664": [99, 100], "67": [68, 69, 75, 85, 96, 105, 108, 189, 193, 197], "670": 107, "672": [49, 105, 107, 108, 118], "672x672": 49, "673": 197, "6737": 67, "675": [93, 189], "68": [44, 68, 85, 96, 107, 189, 193, 197], "681": 93, "6831": 74, "6844": 135, "6847": 115, "6847217": 115, "686": [97, 99, 100], "6867135": 188, "688": 95, "689": [47, 99, 100], "69": [68, 85, 96, 98, 106, 108, 188, 189, 193, 197], "6936905": 30, "695": [114, 186], "6969635": 188, "698": 93, "6c4f6234946e16bcf9e48bdf289f9200": 98, "6d012ba18a086c11ee2b85c7324e16f2": [98, 100], "6d2a3ff0fc84a990f7c7fc00e597955f": 97, "6d628209072e3e3dd8f49359935acea6": [99, 100], "6m": [51, 73], "6x": 105, "7": [8, 17, 51, 58, 59, 65, 66, 68, 69, 72, 80, 84, 85, 89, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 111, 113, 115, 118, 126, 132, 136, 137, 148, 149, 157, 158, 160, 161, 171, 174, 175, 188, 189, 191, 193, 195, 196, 197, 198], "70": [68, 85, 96, 99, 100, 107, 189, 193, 197], "700": 123, "7000224590301514": 188, "701": 189, "701006": 30, "702": 106, "704": [96, 97, 106, 107], "706": [126, 186], "707777": 30, "708": [107, 189], "71": [68, 72, 85, 96, 99, 100, 107, 189, 193, 197], "7109102": 30, "716": [126, 186], "72": [17, 68, 85, 96, 118, 189, 193], "720": [149, 157], "7234": 49, "724": 105, "7240881": 30, "727": 197, "73": [68, 85, 98, 99, 100, 106, 107, 118, 188, 189, 193, 197], "7321": 175, "7340": 115, "734003": 115, "7357668876647949": 188, "736": [105, 106, 107, 189], "7363693714141846": 188, "7369": 69, "73728": 96, "738": 93, "739": [97, 189], "739925": 30, "74": [68, 85, 107, 108, 118, 189, 193, 197], "745": 106, "747": [97, 107], "74788": 30, "749": 106, "75": [51, 68, 72, 75, 85, 107, 108, 158, 175, 189, 191, 193, 197], "750": 191, "751": 107, "7542": 115, "7542034": 115, "756": 197, "759": 97, "76": [68, 85, 105, 106, 189, 193, 197], "761": 189, "766": 197, "768": [75, 96, 97, 106, 108], "7680": 97, "769": 198, "76afb7bf408a1ffa0b8b7bc09d077dc3": 100, "77": [0, 44, 68, 71, 85, 105, 109, 189, 193], "7713876": 115, "7714": 115, "774": [99, 100], "775": 44, "776": 189, "777": 97, "777018": 30, "78": [68, 85, 97, 98, 106, 108, 189, 193], "780": 100, "7802111": 30, "782": 100, "783": 100, "784": [18, 20, 22, 23, 43, 44, 97, 108, 110, 147], "7857182025909424": 188, "7887001": 30, "79": [68, 85, 108, 189, 193], "793884": 30, "795": [114, 186], "799": 189, "7c2a4f1f432f81c44985590780dfb52d": 98, "7d79c516e212fe1d73f5dbb90eaca2cf": [97, 98, 99, 100], "7f3fee61bc3c2604395f5d343b840b7c": 98, "7m": 51, "8": [0, 31, 47, 55, 62, 64, 66, 67, 68, 69, 73, 74, 75, 82, 85, 88, 89, 93, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 111, 113, 118, 119, 123, 127, 132, 136, 137, 148, 149, 155, 157, 158, 161, 164, 171, 173, 174, 175, 182, 187, 188, 189, 191, 193, 196, 197], "80": [13, 68, 69, 85, 99, 100, 105, 106, 171, 189, 191, 193, 197], "800": [97, 99, 100, 105, 106, 107, 189, 197], "8000": [108, 111], "802816": [89, 118], "803": 106, "81": [68, 85, 105, 106, 189, 193], "81556547": 115, "8156": 115, "8191": 100, "8192": [89, 187], "819363": 115, "8194": 115, "82": [68, 85, 193, 198], "820": 69, "8200": 74, "8207": 73, "8227e": 195, "82429": 30, "826562881469727": 188, "83": [13, 47, 68, 69, 75, 85, 105, 106, 107, 189, 193, 197], "832": [93, 96], "83323884": 30, "8354": 69, "8368": 67, "837336": 30, "8385": 115, "8385232": 115, "84": [68, 72, 85, 97, 99, 100, 106, 189, 193], "8444": 115, "84443563": 115, "845": 97, "85": [68, 75, 85, 93, 105, 107, 189, 193, 197, 198], "851": 197, "8517": 100, "8517829": 115, "8518": 115, "85951": 30, "86": [68, 85, 98, 99, 100, 107, 189, 193], "8602607": 115, "8603": 115, "861": 93, "862": [99, 100, 106], "8630": 115, "8630226": 115, "864": [105, 106, 107], "8660": 175, "86677366000094": 189, "868": [99, 100], "87": [68, 85, 97, 105, 106, 189, 193], "871": [103, 186], "8749309": 188, "8776048268849551": 195, "878": [95, 100, 186], "88": [68, 73, 85, 98, 99, 100, 107, 189, 193, 197], "880077600479126": 188, "8833": 67, "884": 97, "8888": 131, "88a2e34d300a6ccfcf0228f0b90f13ec": 99, "89": [68, 73, 85, 106, 188, 189, 193, 197, 198], "896": [96, 97, 118], "8971": 74, "899": 107, "8c53ca2904398da2889aa7508082d7bb": [97, 98, 99, 100], "8m": 68, "8x8": 88, "9": [0, 17, 51, 67, 68, 70, 71, 73, 77, 80, 85, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 111, 113, 115, 118, 123, 125, 132, 148, 149, 157, 161, 164, 171, 175, 188, 189, 191, 193, 195, 197], "90": [68, 73, 98, 106, 107, 118, 188, 189], "900": 98, "903": 106, "9030614": 188, "906": 103, "9090": [58, 71, 80, 109, 198], "9091": [70, 80, 162], "91": [68, 106, 108, 118, 189], "913": [186, 194], "9190": [56, 67, 68, 69, 80, 97, 99, 105, 106, 107, 136], "9191": 80, "919790267944336": 188, "9199": 162, "92": [68, 69, 99, 100, 106, 118, 189, 197], "922": [68, 77, 186], "9255e": 195, "9266": 47, "928": [105, 107], "929": 106, "93": [68, 85, 189, 197], "932": [95, 98, 186], "93672b029103648953c4e5ad3ac3aadf346a4cdc": 49, "938": 98, "94": [68, 106, 107, 187, 189, 197], "9408": 118, "9417": 69, "9425952": 188, "943": 106, "9468925": 30, "947": [99, 100], "94949": 30, "95": [68, 75, 108, 189], "953": 197, "954": [77, 99, 100, 186], "9596794": 30, "95ada510": 132, "96": [68, 85, 106, 107, 108, 188, 189, 191], "960": [96, 106, 107, 189, 197], "9665208500014": 189, "96691": 30, "97": [68, 72, 97, 105, 107, 108, 189, 197], "9711095": 30, "972": [189, 197], "973": [45, 186], "976": 189, "979": 98, "97964585": 30, "98": [68, 96, 98, 106, 107, 189], "980": [189, 197], "98168e": 195, "9831": 101, "986": [99, 100], "987213": 30, "988": 93, "98cde4888c94ec7beaa9972f806856d0": 99, "99": [44, 68, 85, 98, 107, 131, 177, 189, 198], "9914": 31, "992": [98, 106, 107], "994": 47, "995": 93, "9984": 47, "999": [98, 197], "9m": 68, "A": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 20, 25, 27, 30, 31, 34, 35, 36, 37, 46, 48, 49, 50, 51, 53, 56, 58, 61, 62, 65, 67, 68, 72, 73, 75, 79, 80, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 104, 108, 109, 115, 120, 121, 123, 125, 127, 128, 132, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 168, 169, 171, 173, 174, 175, 176, 179, 180, 182, 183, 184, 187, 189, 191, 192, 195, 196, 197, 198], "AND": [149, 157, 175], "AS": 89, "And": [2, 30, 34, 35, 70, 71, 75, 85, 97, 149, 151, 155, 158, 160, 173, 174, 181, 196, 198], "As": [2, 3, 4, 5, 6, 9, 10, 12, 13, 16, 23, 36, 67, 79, 80, 84, 85, 88, 97, 98, 99, 100, 104, 106, 113, 128, 132, 148, 179, 180, 182, 189, 191, 195, 197, 199], "At": [2, 4, 34, 35, 37, 56, 67, 69, 75, 89, 148, 149, 150, 155, 157, 160, 171, 177, 183, 192], "Be": [12, 15, 198], "Being": [11, 118, 150], "But": [3, 22, 80, 118, 191], "By": [18, 20, 35, 49, 58, 66, 67, 68, 80, 84, 90, 97, 98, 99, 100, 104, 109, 118, 127, 128, 135, 136, 139, 146, 148, 149, 150, 151, 153, 155, 157, 160, 166, 168, 169, 171, 175, 180, 188, 189, 195, 197, 199], "For": [1, 2, 3, 4, 5, 6, 8, 9, 10, 15, 16, 17, 20, 22, 23, 25, 27, 30, 34, 35, 36, 37, 39, 41, 43, 44, 48, 50, 51, 52, 56, 58, 59, 62, 64, 65, 66, 67, 69, 72, 73, 74, 75, 79, 82, 84, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 113, 118, 120, 121, 124, 125, 127, 128, 129, 132, 133, 135, 136, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 169, 170, 171, 173, 174, 175, 177, 179, 180, 182, 183, 187, 188, 189, 191, 192, 193, 195, 197, 198, 199], "If": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 20, 30, 34, 35, 36, 37, 39, 49, 58, 60, 62, 65, 67, 68, 69, 70, 71, 75, 79, 80, 82, 85, 89, 90, 93, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 113, 118, 123, 127, 128, 132, 133, 135, 136, 137, 138, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 188, 189, 192, 195, 196, 197, 198, 199], "In": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 17, 20, 22, 23, 27, 30, 31, 32, 34, 35, 36, 37, 43, 44, 56, 58, 59, 60, 62, 64, 65, 66, 69, 70, 71, 73, 74, 75, 79, 80, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 119, 121, 123, 124, 125, 128, 129, 135, 136, 137, 141, 143, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 162, 163, 166, 169, 171, 173, 174, 175, 176, 177, 179, 180, 182, 183, 187, 188, 189, 191, 193, 195, 197, 198, 199], "It": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 16, 17, 20, 22, 27, 31, 34, 35, 36, 37, 41, 44, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 75, 79, 84, 90, 96, 97, 98, 99, 100, 104, 105, 106, 107, 109, 115, 118, 119, 120, 124, 128, 129, 132, 135, 136, 139, 141, 145, 146, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 166, 168, 169, 171, 173, 174, 175, 176, 177, 181, 182, 183, 185, 187, 188, 190, 192, 195, 196, 199], "Its": [127, 136, 148, 149, 169, 183], "NO": 177, "NOT": [131, 132, 149, 157, 169, 177], "No": [85, 149, 164, 171, 174, 177, 188], "Not": [1, 49, 121, 155, 168, 171, 173, 175], "ON": [0, 32, 36, 56, 58, 59, 65, 66, 69, 70, 93, 109, 119, 132], "OR": [149, 157, 175, 182], "Of": [20, 161], "On": [36, 37, 39, 56, 66, 89, 132, 141, 171, 182, 195], "One": [2, 4, 5, 12, 27, 35, 37, 43, 56, 58, 79, 84, 85, 88, 105, 106, 107, 108, 110, 123, 125, 136, 137, 154, 155, 158, 171, 180], "Or": [84, 135, 173, 182], "Such": [176, 182, 183], "That": [1, 10, 36, 43, 65, 84, 85, 148, 149, 153, 171, 180, 183], "The": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 20, 23, 25, 27, 30, 31, 32, 34, 36, 37, 39, 41, 43, 44, 46, 47, 49, 51, 53, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 79, 82, 84, 85, 88, 89, 90, 93, 94, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 120, 121, 123, 124, 127, 128, 129, 132, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 192, 193, 195, 196, 198, 199], "Then": [2, 3, 4, 7, 12, 14, 23, 34, 35, 36, 44, 66, 67, 69, 75, 80, 82, 84, 85, 89, 90, 97, 104, 105, 106, 107, 109, 113, 127, 131, 132, 136, 137, 148, 149, 150, 158, 173, 176, 178, 188, 193, 195, 196], "There": [1, 2, 3, 4, 7, 9, 10, 17, 20, 27, 34, 35, 58, 63, 65, 79, 82, 84, 89, 90, 97, 98, 99, 100, 104, 123, 125, 132, 136, 139, 144, 157, 160, 169, 170, 171, 173, 175, 182, 188, 192, 195, 198], "These": [1, 2, 4, 6, 9, 12, 18, 27, 34, 35, 37, 43, 54, 56, 58, 62, 64, 65, 76, 79, 81, 86, 87, 88, 94, 96, 102, 109, 124, 129, 131, 132, 135, 136, 137, 141, 175, 176, 179, 180, 182, 183, 188], "To": [2, 4, 5, 6, 7, 9, 12, 16, 17, 20, 22, 27, 32, 34, 35, 37, 46, 49, 50, 53, 56, 59, 60, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 79, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 115, 118, 120, 123, 124, 132, 135, 136, 140, 143, 148, 149, 150, 151, 153, 157, 158, 160, 162, 171, 177, 180, 183, 187, 188, 189, 191, 192, 193, 195, 197, 198, 199], "Will": [160, 174], "With": [4, 20, 27, 35, 36, 65, 69, 70, 71, 86, 90, 92, 109, 125, 135, 148, 149, 150, 157, 166, 175, 187, 188, 195, 197], "_": [3, 34, 36, 44, 47, 75, 88, 90, 105, 107, 110, 113, 119, 124, 148, 155, 157, 158, 169, 171, 173, 175, 179, 180, 188, 195], "__activemask": 123, "__call__": [4, 13, 37], "__constraints__": 148, "__contravariant__": 148, "__covariant__": 148, "__cuda_arch__": 123, "__cudacc_ver_major__": [96, 123], "__cudacc_ver_minor__": [96, 123], "__darknetffi__": 47, "__dlpack__": 164, "__doc__": 175, "__enter__": 4, "__exit__": 4, "__file__": [75, 132, 199], "__future__": [121, 123, 124, 125, 128, 129], "__getstate__": 135, "__global": 56, "__global__": [96, 123], "__init__": [4, 22, 23, 43, 44, 72, 80, 84, 85, 110, 113, 115, 120, 132, 143, 145, 148, 151, 160, 174, 176, 182, 199], "__init_handle_by_constructor__": 145, "__kernel": 56, "__launch_bounds__": [96, 123], "__len__": 136, "__main__": [96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 187, 188], "__name__": [96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 148, 187, 188], "__read_onli": 56, "__restrict__": [96, 123], "__shared__": 96, "__shfl": 123, "__shfl_down": 123, "__shfl_down_sync": 123, "__shfl_sync": 123, "__shfl_up": 123, "__shfl_up_sync": 123, "__syncthread": 96, "__version__": [48, 115], "__write_onli": 56, "_adjoint": 151, "_alter_conv2d_layout": 136, "_api_intern": 13, "_asdict": 175, "_attr": 175, "_bia": 115, "_bodi": 128, "_c": 155, "_cc": 3, "_compute_scanop": 34, "_contrib_conv2d_nchwc0": 0, "_contrib_conv2d_nchwc1": 0, "_contrib_conv2d_nchwc2": 0, "_contrib_conv2d_nchwc3": 0, "_convert_map": 155, "_convolution_0": 68, "_convolution_1": 68, "_convolution_10": 68, "_convolution_11": 68, "_convolution_12": 68, "_convolution_13": 68, "_convolution_14": 68, "_convolution_15": 68, "_convolution_16": 68, "_convolution_17": 68, "_convolution_18": 68, "_convolution_19": 68, "_convolution_2": 68, "_convolution_20": 68, "_convolution_21": 68, "_convolution_22": 68, "_convolution_23": 68, "_convolution_24": 68, "_convolution_25": 68, "_convolution_26": 68, "_convolution_27": 68, "_convolution_28": 68, "_convolution_29": 68, "_convolution_3": 68, "_convolution_30": 68, "_convolution_31": 68, "_convolution_32": 68, "_convolution_33": 68, "_convolution_34": 68, "_convolution_35": 68, "_convolution_36": 68, "_convolution_37": 68, "_convolution_38": 68, "_convolution_39": 68, "_convolution_4": 68, "_convolution_40": 68, "_convolution_41": 68, "_convolution_42": 68, "_convolution_43": 68, "_convolution_44": 68, "_convolution_45": 68, "_convolution_46": 68, "_convolution_47": 68, "_convolution_48": 68, "_convolution_49": 68, "_convolution_5": 68, "_convolution_50": 68, "_convolution_51": 68, "_convolution_52": 68, "_convolution_6": 68, "_convolution_7": 68, "_convolution_8": 68, "_convolution_9": 68, "_count_nod": 85, "_ctx": [23, 110, 113], "_ctype": 13, "_cubla": 110, "_deleg": 120, "_diff": 85, "_document": 12, "_does_": [149, 150], "_dynamo": 148, "_emb": 113, "_entropi": 149, "_errortest": 13, "_expr": [37, 144, 148], "_ffi": [4, 13, 37, 132], "_ffi_api": [101, 145], "_i": [148, 149, 158], "_import_tre": 3, "_import_tree_child_indic": 3, "_import_tree_log": 3, "_import_tree_row_ptr": 3, "_index": 113, "_input": 175, "_lib": [3, 132], "_line_info": 148, "_loadfromfil": 3, "_logit": 149, "_lookup_task": 136, "_make": 34, "_mean": [149, 158], "_my_func_impl": 148, "_name": [85, 148], "_name_to_graph": 120, "_np": 150, "_op": 34, "_op_cnt_before_stack": 85, "_op_diff": 85, "_op_not_impl": 13, "_out_typ": 175, "_packimportstoc": 3, "_packimportstollvm": 3, "_pipelin": 113, "_pure_": [149, 150], "_pyexprvisitor": 150, "_pyrunn": 145, "_query_insid": 136, "_reduce_reset": 128, "_reduce_upd": 128, "_reg": 34, "_register_codegen": 199, "_register_customized_task": 136, "_register_pattern": 199, "_register_task_comput": 136, "_register_task_schedul": 136, "_register_tir_pass": 199, "_replac": 175, "_saved_model_inputs_spec": 75, "_search_dense_op_weight": 75, "_share": 67, "_softmax": 149, "_softmax_": 191, "_spec": 148, "_tensor": 169, "_tensor_grad": 34, "_tensorized_": 196, "_tinfo": 175, "_tir": 148, "_transform": [4, 34, 35], "_tvm_handl": 63, "_tvm_metadata": [145, 150], "_tvm_tcode": 63, "_util": [51, 67, 68, 70, 71, 72, 73], "_var": [149, 158], "_win32": [96, 123], "_with": 149, "a0": 129, "a0_1": 129, "a0_2": 129, "a1": [109, 129, 168], "a1_1": 129, "a1_2": 129, "a2": [109, 168], "a3": [109, 168], "a3df19e5b88592ef5a9ce584a1ca3010": 98, "a53": 105, "a5x": 56, "a_": [27, 30], "a_1": [89, 90, 123, 125, 128, 171, 187, 191, 195], "a_2": [123, 125, 191, 195], "a_dtyp": 173, "a_frag": 89, "a_index": 173, "a_layout": 173, "a_loc": 171, "a_max": [157, 175], "a_min": [157, 175], "a_nd": [31, 191], "a_np": [31, 88, 89, 104, 124, 187, 188, 191], "a_pad": 171, "a_padded_k": 97, "a_padded_m": 97, "a_r": 191, "a_red_1": 191, "a_reindex": 171, "a_tupl": 175, "a_tvm": [104, 187], "a_untyp": 151, "aa": [88, 104, 128], "aaaabbbb": 56, "aarch64": [56, 58, 64, 66, 68, 69, 80, 97, 99, 105, 107, 109], "ab": [4, 65, 128, 149, 157, 158, 169, 173, 175, 176], "abbrevi": 30, "abcdefgh": 56, "abi": 168, "abil": [2, 36, 43, 192, 195], "abl": [1, 4, 5, 11, 12, 30, 35, 36, 43, 56, 58, 62, 66, 84, 89, 97, 98, 99, 100, 118, 136, 151, 157, 182, 183, 192, 195, 196], "about": [0, 1, 2, 4, 5, 7, 12, 13, 15, 16, 18, 20, 27, 33, 34, 35, 36, 37, 39, 62, 66, 67, 73, 75, 78, 84, 89, 93, 105, 106, 107, 108, 109, 127, 135, 136, 138, 144, 149, 150, 168, 169, 173, 175, 177, 179, 180, 183, 185, 197, 198], "abov": [1, 2, 4, 5, 12, 13, 14, 20, 22, 27, 34, 35, 36, 37, 39, 52, 56, 58, 62, 66, 67, 68, 71, 80, 82, 84, 90, 93, 104, 106, 109, 115, 118, 120, 124, 128, 132, 136, 137, 141, 146, 148, 149, 155, 157, 158, 160, 171, 175, 177, 179, 180, 182, 183, 189, 195, 196, 197, 199], "abs_path": 75, "absenc": 132, "absolut": [136, 149, 157, 159, 169, 173, 175, 199], "absolute_import": [121, 123, 124, 125, 128, 129], "abspath": 75, "abstract": [5, 9, 13, 19, 26, 30, 43, 56, 59, 82, 90, 120, 130, 137, 144, 145, 148, 150, 153, 157, 160, 183, 191, 195, 196], "academ": 12, "acap": 66, "acc": [56, 115, 173, 179], "acc_dtyp": 67, "acc_frag": 89, "accelar": 64, "acceler": [27, 44, 56, 58, 59, 61, 64, 66, 67, 68, 75, 82, 90, 97, 105, 106, 107, 110, 111, 113, 128, 184, 186, 190, 192, 194, 195], "accept": [1, 9, 10, 25, 36, 79, 129, 135, 136, 137, 148, 149, 151, 156, 157, 158, 169, 173, 174, 175, 180, 183, 185, 196, 199], "access": [0, 1, 2, 4, 5, 7, 8, 10, 11, 12, 27, 43, 56, 79, 80, 90, 115, 128, 130, 141, 144, 148, 149, 150, 152, 155, 157, 158, 162, 166, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 185, 195, 197], "access_mask": 173, "access_ptr": [89, 128, 173], "accid": 8, "accommod": [43, 183], "accompani": 11, "accomplish": [12, 180, 183, 189, 195, 197], "accord": [2, 3, 16, 69, 74, 75, 80, 96, 97, 98, 99, 100, 101, 109, 125, 135, 136, 137, 144, 146, 147, 148, 149, 151, 157, 160, 169, 170, 171, 173, 174, 175, 183, 187, 188, 189, 197], "accordingli": [16, 17, 36, 97, 105, 107, 132, 149, 151, 171, 174, 198], "account": [7, 65, 141, 170, 189, 195], "accumul": [34, 56, 65, 67, 89, 128, 146, 148, 149, 151, 152, 157, 171, 173, 175, 179, 191], "accumult": 67, "accur": [20, 73, 74, 93, 96, 98, 136, 141, 148, 149, 171, 189], "accuraci": [56, 65, 159, 189, 197], "acheiv": 56, "achiev": [3, 16, 31, 35, 36, 41, 56, 58, 73, 74, 75, 88, 90, 96, 97, 98, 99, 100, 108, 110, 118, 195], "achitectur": 197, "ackermann": 180, "acknowledg": [9, 10], "acl": 62, "acl_runtim": 58, "aco": [149, 157, 169, 173, 175], "acosh": [149, 157, 169, 173, 175], "acquaint": 30, "acquir": [31, 56], "acronym": 16, "across": [2, 4, 9, 12, 18, 20, 34, 67, 79, 128, 132, 141, 143, 144, 148, 149, 150, 151, 155, 158, 161, 163, 169, 175, 176, 188, 189, 195], "act": [4, 9, 10, 144, 157, 180, 195], "action": [1, 7, 8, 9, 31, 37, 39, 132, 150, 166, 169, 173], "activ": [1, 2, 9, 10, 11, 20, 27, 56, 66, 106, 115, 118, 119, 132, 136, 141, 143, 148, 149, 150, 151, 158, 166, 173, 175, 185, 198], "activation_bit": [158, 175], "actual": [7, 9, 11, 17, 34, 52, 70, 71, 75, 84, 90, 104, 108, 132, 135, 136, 137, 141, 149, 150, 157, 162, 169, 171, 174, 175, 183, 188, 195], "actur": 80, "ad": [1, 5, 8, 16, 17, 33, 62, 64, 66, 80, 81, 84, 90, 105, 106, 107, 113, 137, 145, 147, 148, 149, 151, 157, 158, 160, 171, 174, 175, 176, 180, 183, 188, 191, 193, 199], "ad24d4d2f83975ff580a4833fbf3ef94": 99, "adapt": [18, 82, 135, 149, 158, 159, 160, 161], "adaptive_avg_pool1d": [149, 158], "adaptive_avg_pool2d": [65, 68, 111, 149, 158], "adaptive_avg_pool2d_0": 68, "adaptive_avg_pool3d": [149, 158], "adaptive_max_pool1d": 158, "adaptive_max_pool2d": [65, 158], "adaptive_max_pool3d": 158, "adaptive_pool": 175, "adaptive_pool1d": 175, "adaptive_pool3d": 175, "adaptive_pool_avg": [97, 98, 99, 100], "adaptive_pool_sum": [97, 98, 99, 100], "adaptive_train": 135, "adaptivepool2dattr": 149, "adb": [56, 67, 68, 69], "add": [1, 2, 4, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 22, 23, 32, 34, 35, 36, 43, 44, 52, 53, 56, 58, 59, 63, 65, 68, 69, 70, 71, 72, 82, 84, 85, 89, 90, 97, 98, 99, 100, 101, 106, 109, 110, 111, 113, 115, 118, 120, 121, 127, 135, 136, 137, 144, 145, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 160, 169, 171, 173, 174, 175, 179, 180, 182, 183, 189, 191, 193, 195, 197, 199], "add1": [22, 23, 43, 44], "add_01": 120, "add_012": 120, "add__0": 68, "add__1": 68, "add__10": 68, "add__11": 68, "add__12": 68, "add__13": 68, "add__14": 68, "add__15": 68, "add__2": 68, "add__3": 68, "add__4": 68, "add__5": 68, "add__6": 68, "add__7": 68, "add__8": 68, "add__9": 68, "add_alter_layout": 175, "add_argu": [34, 144], "add_attr_opt": 1, "add_bia": 158, "add_c_includ": 69, "add_extern": 148, "add_fil": 137, "add_flop": 136, "add_func": [22, 120, 147], "add_gvar": 120, "add_hardwar": 199, "add_implement": 34, "add_ldlib": 69, "add_lower_pass": 82, "add_on": 109, "add_op": 120, "add_safe_glob": 115, "add_sequence_func": 113, "add_task": 136, "add_type_rel": [34, 144], "add_unit_loop": 171, "addfunc": 120, "addhandl": [104, 188], "addit": [0, 2, 4, 5, 6, 12, 15, 16, 22, 27, 31, 34, 36, 37, 56, 58, 59, 64, 65, 66, 69, 79, 80, 84, 96, 97, 98, 99, 100, 101, 108, 136, 137, 141, 144, 148, 149, 150, 151, 153, 154, 157, 158, 160, 162, 168, 169, 171, 173, 175, 176, 181, 182, 187, 196, 199], "addition": [2, 9, 16, 19, 41, 56, 79, 113, 160, 180, 182, 183], "additon": [169, 175], "addon": [2, 150], "addr": 162, "address": [1, 7, 9, 16, 30, 63, 69, 70, 71, 80, 90, 97, 105, 107, 109, 125, 128, 129, 131, 135, 136, 144, 162, 171, 173, 179, 185, 190, 195, 198], "address_of": 173, "addshapestographdef": 52, "addtion": 173, "adher": 11, "adj": 115, "adjac": 115, "adjoint": [151, 169], "adjust": [9, 97, 98, 99, 100, 125, 135, 136, 143, 144, 148, 150, 166, 174, 195, 198], "adjustmatmulord": 151, "adopt": [4, 11, 159, 189, 195, 197], "adreno": [62, 69, 76, 77, 186], "adreno_opencl": 56, "adrenosdk": 69, "adt": [144, 157, 159, 178], "adthandl": 144, "adv_index": [157, 175], "advanc": [44, 49, 62, 64, 73, 90, 104, 135, 157, 169, 174, 182, 195], "advantag": [4, 5, 56, 109, 169, 173, 187, 188, 189, 195, 197], "adversari": 159, "advis": 67, "af": 89, "affect": [2, 7, 56, 59, 65, 160, 180, 189, 197], "affects_output": 160, "affin": [144, 148, 156, 158, 169, 171, 175], "affine_bind": 171, "affine_grid": [156, 175], "aforement": [4, 25, 30, 180], "african": 52, "africana": 52, "after": [0, 1, 2, 3, 4, 7, 9, 10, 11, 15, 16, 17, 20, 22, 34, 35, 36, 37, 43, 44, 52, 59, 62, 66, 67, 69, 70, 71, 79, 80, 82, 84, 85, 90, 96, 97, 98, 100, 101, 105, 106, 107, 109, 110, 113, 115, 118, 123, 124, 127, 131, 132, 135, 136, 137, 143, 144, 145, 146, 148, 149, 150, 151, 153, 155, 157, 158, 160, 161, 166, 169, 171, 172, 173, 174, 175, 177, 180, 182, 187, 189, 190, 192, 195, 196, 197, 198], "after_0": 148, "after_1": [148, 149, 158], "after_add_unit_loop": 171, "after_annot": 171, "after_annotate_buffer_access": 171, "after_bind": 171, "after_block": 171, "after_cache_read": 171, "after_cache_writ": 171, "after_compute_at": 171, "after_decompos": 171, "after_fus": 171, "after_inlin": 171, "after_n": [149, 158], "after_parallel": 171, "after_partit": 171, "after_reindex": 171, "after_reindex_cache_read": 171, "after_reord": 171, "after_reverse_compute_at": 171, "after_rfactor": 171, "after_rolling_buff": 171, "after_set_axis_separ": 171, "after_set_dtyp": 171, "after_set_scop": 171, "after_split": 171, "after_storage_align": 171, "after_tensor": 171, "after_transform_block_layout": 171, "after_unannot": 171, "after_unrol": 171, "after_vector": 171, "afterward": [17, 66], "again": [5, 14, 20, 34, 36, 43, 66, 68, 84, 135, 162, 174, 179, 195], "against": [7, 8, 14, 17, 53, 65, 115, 132, 148, 149, 157, 169, 173, 175, 179, 180, 185, 187, 197], "aggreg": [154, 165], "aggress": 155, "agnost": [156, 175, 195], "ah": 66, "ahead": [8, 183], "ai": [13, 62, 115, 133, 157, 199], "aid": [192, 195], "aie": 66, "aim": [2, 30, 41, 118, 120, 137, 192], "aka": [23, 170, 171, 177], "al": [88, 104, 148, 149, 151, 158, 159], "alec": 159, "alex": 51, "alexnet": 159, "algebra": [123, 144, 157, 171, 178, 180, 182], "algorithim": 189, "algorithm": [4, 34, 49, 67, 75, 82, 90, 108, 136, 137, 148, 149, 151, 156, 158, 159, 160, 175, 181, 188, 192, 195], "alia": [35, 136, 148, 149, 150, 154, 157, 158, 169, 171, 175], "alias": [144, 149, 150], "align": [56, 96, 128, 157, 161, 169, 170, 171, 173, 175, 191], "align_corn": [148, 149, 156, 158, 175], "aliv": 162, "all": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 20, 23, 25, 32, 34, 35, 36, 37, 39, 43, 44, 47, 49, 56, 59, 60, 62, 64, 65, 66, 67, 68, 70, 71, 79, 80, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 105, 106, 107, 109, 110, 111, 113, 115, 118, 121, 123, 128, 130, 132, 135, 136, 137, 138, 140, 141, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 182, 183, 185, 186, 187, 188, 191, 192, 195, 196, 197, 198, 199], "all_class_non_max_suppress": 161, "all_const_arg": 35, "all_cost": [135, 136, 188], "all_dtyp": 152, "all_global_var": 146, "all_type_var": 152, "all_var": [146, 152], "allclos": 43, "alleduc": 174, "allevi": [4, 10, 84], "allgath": [148, 149, 163], "alloc": [1, 2, 5, 6, 20, 27, 35, 36, 37, 43, 56, 89, 90, 96, 97, 98, 99, 100, 101, 110, 111, 118, 119, 123, 124, 129, 135, 144, 146, 148, 149, 150, 151, 160, 163, 170, 171, 173, 174, 187, 191, 195], "alloc_buff": [20, 23, 27, 30, 31, 43, 110, 171, 173, 174], "alloc_storag": [146, 149, 151], "alloc_tensor": [146, 149, 151], "allocate_tensor": 74, "allocateconst": 173, "allocateworkspac": 151, "allocdataspac": 1, "allocworkspac": 1, "allow": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 16, 18, 20, 32, 34, 35, 36, 37, 56, 58, 65, 75, 79, 80, 84, 90, 101, 115, 123, 135, 138, 141, 144, 146, 148, 150, 151, 155, 157, 158, 160, 162, 163, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 185, 188, 192, 195, 196, 197], "allow_dupl": 136, "allow_extern": 148, "allow_miss": [121, 173], "allow_non": 168, "allow_overrid": 168, "allow_undef": 150, "allowlist": 115, "allowzero": 157, "allreduc": [148, 149, 163, 173], "allreduce_strategi": 151, "almost": [109, 160], "alon": [56, 148, 171], "along": [34, 36, 49, 58, 65, 85, 128, 148, 149, 157, 158, 161, 169, 171, 175, 176, 189, 197], "alpha": [69, 135, 149, 158, 159, 175, 182], "alphabet": 144, "alreadi": [4, 10, 14, 16, 17, 20, 30, 31, 35, 36, 37, 65, 69, 75, 82, 85, 97, 105, 107, 135, 136, 147, 148, 150, 157, 160, 169, 180, 192, 195, 198], "also": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 22, 23, 25, 27, 30, 31, 34, 35, 36, 37, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 82, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 131, 132, 133, 135, 136, 137, 139, 140, 141, 144, 146, 147, 148, 150, 151, 153, 154, 155, 158, 160, 161, 162, 166, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 182, 183, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199], "alter": [4, 14, 56, 136, 160, 176], "alter_layout": 144, "alter_op_layout": 136, "altern": [4, 11, 12, 31, 43, 49, 56, 58, 64, 66, 136, 160, 171, 188, 197], "alteropimpl": 151, "alteroplayout": [58, 136, 157, 160], "although": [9, 16, 35, 36, 37, 69, 75, 97, 98, 99, 100, 120, 124, 127, 129, 160, 177, 197], "altpattern": 154, "altrern": 68, "alwai": [4, 8, 9, 10, 12, 14, 16, 20, 35, 56, 65, 90, 105, 106, 107, 135, 136, 146, 148, 160, 162, 170, 174, 175, 179, 180, 188], "amalgam": 31, "amazon": 61, "amazonaw": [17, 189, 197], "ambigu": [79, 150, 180], "ambit": 169, "amd": [75, 105, 106, 107], "amdgpu": [37, 192], "amen": 175, "ami": 61, "among": [2, 9, 11, 25, 127, 135, 146], "amongst": 195, "amort": 141, "amount": [9, 13, 65, 151, 189, 197], "ampl": 62, "amplifi": 130, "amx": 59, "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 23, 27, 30, 31, 33, 35, 36, 37, 38, 41, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 88, 90, 93, 96, 97, 101, 104, 105, 106, 107, 109, 110, 111, 115, 119, 120, 121, 123, 124, 125, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 180, 183, 184, 185, 187, 188, 190, 191, 193, 195, 198, 199], "analog": [179, 180, 183], "analys": [2, 35, 96, 97, 98, 99, 100, 101, 135, 187], "analysi": [2, 4, 75, 82, 85, 115, 118, 119, 135, 142, 144, 145, 151, 160, 171, 174, 175, 176, 178, 180, 182], "analyt": 159, "analyz": [2, 4, 18, 34, 59, 82, 85, 115, 146, 175, 182, 192], "analzy": 175, "ancestor": [146, 160, 170, 171], "anchor": [145, 161, 170], "anchor_block": 170, "andrei": 56, "andrew": 159, "android": [5, 56, 60, 62, 67, 68, 73, 76, 77, 97, 105, 107, 135, 136, 186], "android28": [56, 68], "android_abi": 56, "android_lib_path": 69, "android_ndk_hom": [56, 67, 68, 69], "android_platform": 56, "android_rpc": [57, 69, 80], "android_rpc_test": 69, "android_seri": 67, "anf": 151, "angl": 149, "ani": [1, 2, 4, 5, 6, 7, 8, 10, 11, 16, 17, 34, 35, 36, 37, 39, 44, 56, 58, 59, 65, 66, 68, 73, 74, 75, 79, 80, 84, 85, 89, 96, 97, 98, 99, 100, 115, 121, 127, 135, 136, 137, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 163, 166, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 182, 183, 187, 189, 192, 195, 196, 197], "ann": 136, "ann_kei": 171, "ann_val": 171, "ann_valu": 171, "anneal": 136, "annot": [2, 4, 20, 25, 30, 34, 36, 43, 58, 59, 64, 65, 66, 136, 137, 144, 146, 147, 149, 150, 151, 154, 157, 160, 169, 171, 173, 174, 177, 179, 180, 183, 188], "annotate_buffer_access": 171, "annotate_codegen": [110, 151], "annotate_shard": 149, "annotated_expr": 151, "annotatedeviceregion": 174, "annotatedregionset": 152, "annotateent": 136, "annotateentryfunc": 174, "annotatespac": 136, "annotatespan": [143, 155, 160], "annotatetarget": 160, "annotatetiroppattern": [23, 43, 113, 151], "annotation_pattern": 151, "annotationvaluet": 171, "announc": [15, 27], "anonym": [148, 195], "anot": 169, "anoth": [1, 2, 5, 7, 13, 14, 17, 20, 27, 34, 36, 37, 43, 84, 89, 90, 106, 128, 136, 137, 144, 146, 150, 151, 154, 157, 160, 162, 164, 169, 171, 173, 174, 179, 180, 182, 183, 188, 195], "anreno": 56, "ansor": [184, 192], "answer": [5, 10, 12, 86, 90, 188, 195], "antialia": 148, "antialias": 148, "anymor": 180, "anyon": [162, 185], "anystr": 170, "anyth": [3, 35, 123, 148, 154, 157], "anytim": [10, 80], "anywher": [130, 183], "ao": 73, "aot": 157, "aotmodel": 199, "apach": [2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 22, 26, 27, 30, 39, 41, 43, 44, 49, 51, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 80, 105, 106, 107, 109, 110, 111, 113, 115, 131, 132, 133, 135, 137, 155, 159, 160, 171, 185, 192], "apad": [88, 89], "apad_shar": 89, "apad_shared_1": 89, "apad_shared_wmma_matrix_a": 89, "apad_shared_wmma_matrix_a_1": 89, "apart": [56, 70, 71], "api": [0, 1, 2, 3, 4, 5, 12, 13, 16, 19, 30, 35, 36, 37, 43, 44, 54, 56, 57, 58, 59, 62, 65, 66, 67, 68, 69, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 111, 113, 115, 135, 136, 137, 139, 144, 147, 148, 149, 150, 153, 157, 162, 163, 164, 166, 168, 169, 171, 174, 176, 180, 182, 185, 186, 187, 189, 190, 191, 192, 194, 196, 197, 199], "api_doc": 157, "api_specif": [148, 149], "api_test": 13, "apk": [69, 97, 105, 107], "app": [53, 60, 69, 80, 199], "app_abi": 69, "app_platform": 69, "appar": 4, "appear": [9, 16, 35, 75, 79, 97, 98, 99, 100, 135, 141, 144, 146, 152, 157, 159, 170, 171, 174, 175, 179, 180, 183, 198], "appearancei": 165, "append": [4, 36, 47, 72, 74, 82, 85, 101, 113, 115, 118, 119, 132, 135, 141, 148, 151, 171, 195], "appl": [46, 59, 115, 132], "appli": [2, 4, 8, 9, 10, 12, 15, 16, 17, 18, 19, 20, 35, 37, 43, 49, 73, 74, 75, 79, 90, 96, 97, 101, 104, 105, 106, 107, 110, 111, 113, 115, 135, 136, 138, 143, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 169, 170, 171, 172, 173, 174, 175, 176, 177, 185, 187, 188, 189, 192, 195, 198], "applic": [1, 2, 10, 12, 27, 31, 44, 48, 59, 60, 62, 66, 69, 84, 90, 93, 124, 132, 138, 144, 150, 156, 157, 160, 175, 178, 185, 197], "apply_and_skip_rest": 101, "apply_best": [96, 101, 135, 187], "apply_chat_templ": 113, "apply_func": [101, 135], "apply_graph_best": 108, "apply_graph_transform": [56, 67], "apply_history_best": [67, 104, 105, 106, 107, 108, 136, 188, 189], "apply_json_to_schedul": 171, "apply_prim_func_arg_and_result_memory_constraint": 170, "apply_steps_from_st": 135, "apply_to_schedul": 171, "apply_trac": 31, "applyconfig": 136, "applydefaultschedul": [43, 110, 113, 138], "applyfixedconfig": 136, "applygraphbest": [108, 136], "applyhistorybest": [97, 98, 99, 100, 135, 136], "applyhistorybestorsampl": 135, "applylayouttransform": 174, "applypasstofunct": 176, "approach": [5, 18, 20, 56, 57, 60, 84, 108, 182, 195], "appropri": [9, 12, 34, 66, 75, 79, 109, 118, 132, 157, 159, 168, 175, 179, 180, 183, 189, 195, 197], "approv": [7, 10, 11, 16], "approxim": [2, 75, 97, 98, 99, 100, 135, 141, 148, 149, 151, 158, 159, 160, 175], "apt": [62, 93], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 23, 25, 27, 30, 32, 34, 35, 36, 37, 39, 41, 43, 44, 47, 49, 51, 53, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 82, 84, 85, 86, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 106, 109, 110, 113, 115, 118, 120, 121, 123, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199], "arang": [149, 157, 161, 175, 196], "arbitrari": [2, 3, 4, 25, 36, 51, 67, 73, 84, 115, 128, 138, 144, 148, 157, 162, 169, 171, 173, 175, 185, 192], "arbitrili": [150, 166], "arc": [149, 175], "arch": [64, 67, 68, 69, 70, 104, 106, 119, 137, 168, 191, 193], "architect": 12, "architectur": [9, 56, 58, 67, 69, 109, 128, 130, 137, 159, 168, 192, 195], "archiv": [11, 15, 56, 65, 68], "arctan2": 173, "area": [9, 11, 33, 78, 88, 195], "aren": [16, 80], "arena": 2, "arg": [4, 5, 23, 34, 35, 36, 37, 80, 96, 101, 104, 113, 135, 136, 139, 143, 144, 145, 147, 148, 149, 150, 151, 154, 157, 162, 163, 165, 166, 169, 170, 171, 173, 175, 182, 187, 188], "arg0": [36, 150, 166], "arg1": [12, 36, 137, 150, 166], "arg2": [12, 36], "arg3": [12, 36], "arg_0": 148, "arg_1": 148, "arg_and_result_memory_scop": 170, "arg_buf": [104, 136, 188], "arg_nod": [0, 36, 141], "arg_param": 155, "arg_typ": [37, 144, 183], "arginfo": 145, "argmax": [46, 48, 50, 51, 53, 69, 70, 71, 113, 115, 123, 129, 149, 157, 175], "argmaxargminattr": 149, "argmin": [149, 157, 175], "argn": [150, 166], "args1": 153, "args2": 153, "args_dict": 147, "args_info": 145, "args_to_workload": 136, "argsort": [52, 67, 73, 74, 148, 149, 157, 175, 189, 197], "argsortattr": 149, "argument": [0, 1, 2, 4, 5, 8, 9, 27, 34, 35, 36, 43, 51, 56, 59, 62, 63, 67, 68, 70, 71, 72, 73, 74, 79, 82, 84, 85, 97, 98, 99, 100, 106, 111, 113, 120, 121, 125, 128, 135, 136, 137, 139, 141, 144, 145, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 175, 177, 178, 179, 180, 182, 183, 188, 195, 198], "argwher": [157, 175], "ari": [148, 175], "arial": 47, "aris": [20, 132], "arith": [130, 175], "arithmet": [2, 170, 174, 175, 180, 182, 183], "arm": [2, 7, 12, 37, 43, 62, 64, 70, 71, 74, 80, 94, 95, 102, 103, 107, 108, 137, 168, 186, 192], "arm64": [56, 67, 68, 69], "arm_compute_lib": 58, "arm_cpu": [66, 71, 97, 105, 136, 168], "armor": 17, "armv7l": [71, 109], "armv9": 64, "around": [4, 5, 20, 27, 59, 60, 62, 97, 98, 99, 100, 110, 111, 137, 157, 158, 159, 160, 174, 175, 179], "arr": [2, 164, 173], "arr0": 157, "arr1": 157, "arr_dst": 173, "arr_dtyp": 173, "arr_src": 173, "arrai": [0, 2, 4, 5, 9, 20, 30, 31, 34, 36, 37, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 61, 62, 64, 67, 69, 70, 71, 74, 75, 82, 88, 89, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 119, 121, 123, 124, 128, 135, 136, 137, 141, 144, 148, 149, 150, 152, 154, 155, 157, 158, 159, 160, 163, 164, 165, 168, 169, 170, 171, 173, 174, 175, 182, 187, 188, 189, 191, 193, 196, 197, 199], "arrang": 155, "array_api": [148, 149], "array_equ": 157, "array_handl": 63, "array_lik": 164, "arriv": 173, "arthimet": 164, "articl": [46, 47, 48, 49, 50, 51, 52, 53, 63, 67, 68, 72, 115], "articul": 157, "artifact": [2, 17, 56, 68, 136, 139, 145, 148, 150], "arug": 82, "arxiv": [156, 158, 159, 175], "as_dens": 158, "as_graph_def": 75, "as_json": 171, "as_python": [150, 171], "as_text": 150, "asarrai": [49, 53, 75, 189, 197], "asc": 17, "ascend": [136, 149, 157, 175], "ascertain": 30, "asf": [17, 131], "asf_password": 17, "asf_usernam": 17, "asin": [149, 157, 169, 173, 175], "asinh": [149, 157, 169, 173, 175], "ask": [7, 8, 10, 12, 14, 16, 52, 75, 105, 106, 107, 125, 135, 136], "asm": 128, "asnumpi": [67, 137, 164], "asobject": 169, "aspect": [1, 9, 10, 15, 37, 56, 192], "assembl": 58, "assembli": 128, "assert": [2, 3, 4, 39, 43, 67, 70, 72, 74, 75, 84, 85, 89, 90, 97, 98, 99, 100, 101, 104, 113, 115, 140, 144, 149, 150, 151, 152, 154, 157, 160, 164, 170, 173, 174, 175, 176, 182, 195], "assert_allclos": [31, 61, 90, 96, 101, 104, 115, 118, 119, 121, 123, 124, 128, 173, 175, 187, 188, 191, 193, 195], "assert_equ": 109, "assert_mod": 170, "assert_op": 149, "assert_pure_funct": 170, "assert_structural_equ": 144, "assert_strucural_equ": 144, "assertstmt": 173, "asset": [46, 53], "assign": [0, 5, 10, 32, 34, 36, 80, 131, 135, 144, 148, 150, 155, 160, 163, 179, 180, 183], "assigne": 7, "associ": [7, 8, 25, 27, 31, 37, 119, 123, 135, 144, 147, 149, 150, 154, 159, 168, 171, 173, 175, 189], "assum": [1, 3, 6, 9, 12, 14, 16, 34, 36, 61, 63, 70, 71, 82, 88, 89, 109, 115, 123, 128, 144, 146, 148, 149, 150, 151, 155, 156, 158, 160, 162, 171, 173, 174, 175, 179, 185, 193], "assume_inbound": [149, 175], "assume_injective_transform": 171, "assumpt": [8, 9], "assur": [148, 149], "ast": [9, 27, 30, 34, 72, 82, 120, 137, 147, 150, 151, 157, 159, 160, 169, 170, 171, 172, 177, 180, 182, 183, 196], "astensor": 148, "astext": [85, 144, 154, 157, 193], "astor": 159, "astupl": 157, "astyp": [0, 30, 31, 37, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 61, 64, 65, 67, 69, 70, 71, 72, 74, 75, 84, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 121, 123, 124, 128, 148, 149, 155, 157, 173, 175, 187, 188, 189, 191, 193, 195, 196, 197], "astypeattr": 149, "asymmetr": [149, 156, 158, 175], "async": [137, 173], "async_func": 137, "asynchr": 137, "asynchron": 119, "asyncron": 174, "atan": [65, 149, 157, 169, 173, 175], "atan2": 173, "atanh": [149, 157, 169, 173, 175], "aten": 68, "atexit": 137, "atleast": 171, "atol": [43, 101, 115, 159, 193], "atom": [152, 171], "attach": [56, 88, 104, 127, 136, 144, 148, 151, 162, 163, 169, 174], "attachattrlayoutfreebuff": 151, "attachexternmodul": [113, 148, 151], "attachglobalsymbol": [113, 151], "attack": 185, "attempt": [35, 36, 49, 155, 174, 179, 180, 182, 183], "attent": [9, 12, 17, 79, 113, 148, 149, 151, 188, 195], "attention_var_len": 149, "attention_with_fused_qkv": 113, "attn": 113, "attn_mask": 148, "attr": [0, 1, 34, 70, 71, 101, 118, 128, 132, 135, 136, 137, 144, 147, 148, 150, 151, 153, 154, 157, 160, 169, 171, 173, 174, 175, 182, 187, 191], "attr_kei": [144, 173, 174], "attr_key_or_dict": 144, "attr_map": 144, "attr_nam": [140, 144, 168], "attr_typ": 171, "attr_valu": 144, "attrfieldinfo": 144, "attribut": [0, 1, 2, 47, 49, 64, 65, 82, 109, 113, 128, 137, 140, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 160, 164, 168, 169, 170, 171, 173, 174, 175], "attributeerror": [53, 74], "attrpattern": 154, "attrs_gett": 151, "attrsnod": [34, 144, 154], "attrstmt": [173, 174], "attrubt": 144, "attrvisitor": 5, "audienc": 12, "author": [4, 7, 9, 16, 46, 47, 48, 49, 50, 51, 53, 56, 58, 59, 65, 67, 68, 69, 70, 71, 73, 74, 75, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 115, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 159, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199], "auto": [4, 7, 8, 16, 30, 34, 35, 36, 37, 56, 67, 68, 74, 80, 86, 94, 95, 103, 104, 111, 123, 124, 125, 129, 132, 135, 136, 145, 150, 161, 170, 171, 174, 175, 184, 186, 189, 190, 191, 192, 194, 195, 197], "auto_broadcast": [173, 175], "auto_max_step": [2, 89], "auto_pad": 160, "auto_schedul": [2, 96, 97, 98, 99, 100, 101, 142, 187, 189], "auto_scheduler_layout_transform": 187, "auto_scheduler_layout_transform_1": 187, "auto_scheduler_matmul_x86": [186, 187, 194], "auto_scheduler_rewritten_layout": 175, "auto_scheduler_should_rewrite_layout": 175, "auto_unroll_max_depth": 37, "auto_unroll_max_ext": 37, "auto_unroll_max_step": [37, 96, 104, 187], "autodetect": [109, 148, 155, 168], "autodiff": [34, 35], "autodoc": 12, "autom": [2, 9, 56, 184, 188, 195], "automat": [2, 5, 7, 9, 12, 13, 16, 17, 20, 37, 62, 65, 75, 79, 80, 90, 96, 101, 128, 132, 135, 136, 137, 144, 148, 149, 150, 151, 155, 158, 159, 160, 166, 169, 171, 173, 174, 175, 184, 187, 192, 195, 196, 198], "autoschedul": [2, 86, 175, 188, 192], "autotoken": 113, "autotun": [74, 160, 189], "autotuner_record": 197, "autotvm": [2, 56, 67, 86, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 137, 142, 153, 175, 185, 186, 187, 190, 192, 194], "autotvm_matmul_x86": [186, 188, 194], "autotvm_relay_x86": [186, 189, 194, 197], "aux_param": 155, "auxiliari": [4, 131, 147, 149, 155, 158, 169, 171, 175, 176], "avail": [1, 4, 6, 16, 52, 56, 59, 67, 73, 74, 75, 80, 85, 93, 109, 113, 127, 132, 135, 137, 138, 144, 145, 147, 148, 151, 158, 160, 162, 163, 168, 175, 183, 185, 187, 188, 189, 195, 197], "availabilti": 56, "avali": 157, "avarag": 149, "averag": [67, 108, 135, 136, 149, 150, 158, 166, 188], "avg": [148, 149, 158, 161, 163, 175], "avg_pool1d": [149, 158], "avg_pool2d": [58, 65, 149, 158], "avg_pool2d_backward": 149, "avg_pool2d_grad": 158, "avg_pool3d": [65, 149, 158], "avil": 197, "avoid": [8, 9, 16, 17, 35, 56, 65, 68, 79, 80, 88, 96, 98, 109, 110, 141, 148, 149, 150, 157, 158, 159, 160, 166, 169, 171, 174, 175, 179, 182], "avx": [37, 101, 128, 187, 189, 195], "avx2": [90, 100, 101, 108, 187, 195], "avx512": [72, 73, 74, 100, 101, 108, 187, 189, 195], "aw": [61, 108], "awai": [2, 10, 82, 148, 149, 158], "awak": [97, 105, 107], "awar": [4, 12, 32, 73, 75], "awesom": 10, "awesomegraph": 120, "awesomeplott": 120, "awesomevar": 120, "aws_platform": 61, "awsxclbin": 61, "ax": [22, 23, 26, 43, 44, 89, 90, 104, 110, 111, 125, 128, 135, 136, 148, 149, 157, 173, 175, 188, 195], "ax0": [23, 31, 43, 89, 96, 97, 98, 99, 100, 110, 118, 123, 127, 151, 171, 191], "ax0_1": 171, "ax0_ax1_fused_0": 110, "ax0_ax1_fused_1": 110, "ax0_ax1_fused_ax2_fus": 187, "ax0_fused_0": 110, "ax0_fused_1": 110, "ax1": [23, 43, 89, 96, 97, 98, 99, 100, 118, 127, 151, 171, 191], "ax1_1": 171, "ax1_fus": 110, "ax1_fused_0": 110, "ax1_fused_1": 110, "ax2": [89, 96, 97, 98, 99, 100, 118, 127, 171, 191], "ax3": [89, 96, 97, 98, 99, 100, 118, 127, 171], "ax4": [89, 187], "ax4_ax5_fused_out": 89, "ax5": 89, "ax6": 187, "ax7": 187, "axi": [20, 22, 23, 25, 26, 30, 31, 34, 37, 43, 49, 50, 53, 61, 67, 68, 72, 85, 88, 89, 90, 96, 104, 109, 110, 111, 113, 115, 123, 124, 125, 128, 129, 135, 136, 137, 144, 147, 148, 149, 151, 157, 158, 160, 161, 169, 171, 173, 174, 175, 177, 187, 188, 189, 191, 193, 195, 196, 197], "axis": 195, "axis0": 173, "axis2": 173, "axis_k": 175, "axis_len": 136, "axis_nam": 135, "axis_rang": 27, "axis_separ": [149, 151, 171, 173, 175], "axis_typ": 27, "b": [2, 4, 5, 7, 20, 22, 25, 27, 30, 31, 36, 37, 51, 61, 68, 72, 73, 80, 82, 88, 89, 90, 97, 98, 99, 100, 101, 109, 113, 121, 123, 124, 125, 127, 128, 129, 135, 136, 139, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 160, 161, 169, 171, 173, 174, 175, 177, 179, 180, 182, 183, 187, 188, 191, 195, 196], "b0": [20, 22, 31, 129], "b0353104": 73, "b1": [20, 22, 129], "b16": 173, "b2": [160, 195], "b6": 31, "b7": 31, "b9a54e89508f101a1611cd64f4ef56b9cb62c7cf": [197, 198], "b_": [27, 30], "b_1": [90, 123, 125, 128, 129, 171, 187, 191, 195], "b_2": [123, 125, 129, 195], "b_3": 129, "b_4": 129, "b_5": 129, "b_dtype": 173, "b_frag": 89, "b_i0": 171, "b_i0_partit": 171, "b_i1": 171, "b_i1_partit": 171, "b_i2": 171, "b_i_common": 171, "b_index": 173, "b_layout": 173, "b_local": 171, "b_nd": [31, 191], "b_np": [31, 101, 187, 188, 191], "b_o": 171, "b_pad": 171, "b_partition_2": 171, "b_rf": [123, 171], "b_rf_1": 123, "b_share": 171, "b_tvm": [101, 187], "b_v0": 129, "b_v0_1": 129, "b_v1": 129, "b_v1_1": 129, "ba": [56, 89, 148, 149, 158], "back": [2, 3, 5, 35, 36, 37, 49, 56, 70, 71, 79, 80, 109, 118, 124, 136, 141, 144, 149, 150, 157, 158, 160, 162, 163, 169, 171, 175, 180, 188, 193, 195], "backend": [1, 2, 5, 23, 36, 37, 48, 58, 62, 69, 76, 90, 93, 97, 98, 99, 100, 106, 110, 135, 137, 142, 148, 151, 154, 157, 160, 173, 174, 175, 176, 182, 191, 192, 195, 196, 199], "background": [9, 12, 47, 161], "backpropag": 181, "backtrac": 56, "backward": [4, 51, 72, 108, 148, 149, 157, 160, 175], "backward_fold_scale_axi": 160, "backward_index": 173, "backward_shap": 173, "backward_window_s": 135, "backwardfoldscaleaxi": [4, 160], "bad": [16, 49, 85, 136, 177], "baidu": 50, "balanc": [56, 110, 189], "ban": [60, 168], "banana": 52, "band": [157, 175], "bandwidth": 144, "bank": [88, 169, 171], "bar": [32, 136], "bare": [41, 62, 79], "barinov": [56, 67], "barrett": 197, "barrier": [1, 10, 169, 173], "barrier_count": 173, "barrier_id": 173, "base": [1, 2, 4, 5, 6, 7, 9, 11, 12, 16, 17, 34, 35, 36, 43, 52, 56, 62, 75, 79, 96, 97, 98, 99, 100, 108, 113, 127, 130, 132, 135, 136, 137, 140, 144, 146, 148, 149, 150, 151, 153, 154, 155, 157, 159, 160, 161, 162, 163, 168, 171, 173, 174, 175, 176, 178, 179, 180, 183, 187, 188, 192, 195, 196, 197], "baseattrsnod": 5, "basecheckresult": 146, "baseexpr": 144, "basefunc": [144, 147], "baselin": 106, "basetyp": [180, 183], "bash": [8, 16, 64, 66, 69, 79, 131], "bashrc": [69, 70, 71, 109], "basi": [37, 176, 189, 195], "basic": [4, 9, 12, 18, 36, 58, 70, 71, 82, 89, 101, 128, 144, 152, 158, 160, 174, 175, 177, 181, 190, 192, 195, 196, 197], "basicconfig": 118, "batch": [65, 68, 75, 88, 89, 90, 118, 119, 127, 129, 135, 136, 137, 145, 148, 149, 151, 156, 157, 158, 159, 160, 161, 170, 175, 182, 188, 189, 193, 195, 197], "batch_axi": [157, 175], "batch_dim": [149, 157, 159, 175], "batch_flatten": [65, 85, 119, 158, 193], "batch_index": 161, "batch_matmul": [59, 65, 75, 137, 155, 158, 160, 175], "batch_matmul_cubla": 75, "batch_matmul_leg": 175, "batch_norm": [59, 65, 68, 85, 111, 118, 119, 149, 158, 159, 175, 182, 193], "batch_norm_0": 68, "batch_norm_1": 68, "batch_norm_10": 68, "batch_norm_11": 68, "batch_norm_12": 68, "batch_norm_13": 68, "batch_norm_14": 68, "batch_norm_15": 68, "batch_norm_16": 68, "batch_norm_17": 68, "batch_norm_18": 68, "batch_norm_19": 68, "batch_norm_2": 68, "batch_norm_20": 68, "batch_norm_21": 68, "batch_norm_22": 68, "batch_norm_23": 68, "batch_norm_24": 68, "batch_norm_25": 68, "batch_norm_26": 68, "batch_norm_27": 68, "batch_norm_28": 68, "batch_norm_29": 68, "batch_norm_3": 68, "batch_norm_30": 68, "batch_norm_31": 68, "batch_norm_32": 68, "batch_norm_33": 68, "batch_norm_34": 68, "batch_norm_35": 68, "batch_norm_36": 68, "batch_norm_37": 68, "batch_norm_38": 68, "batch_norm_39": 68, "batch_norm_4": 68, "batch_norm_40": 68, "batch_norm_41": 68, "batch_norm_42": 68, "batch_norm_43": 68, "batch_norm_44": 68, "batch_norm_45": 68, "batch_norm_46": 68, "batch_norm_47": 68, "batch_norm_48": 68, "batch_norm_49": 68, "batch_norm_5": 68, "batch_norm_50": 68, "batch_norm_51": 68, "batch_norm_52": 68, "batch_norm_6": 68, "batch_norm_7": 68, "batch_norm_8": 68, "batch_norm_9": 68, "batch_siz": [47, 70, 71, 75, 85, 89, 97, 98, 99, 100, 104, 105, 106, 107, 108, 118, 119, 136, 148, 149, 156, 157, 158, 159, 160, 161, 173, 175, 188, 193], "batch_to_space_nd": [158, 160, 175], "batchflatten": 158, "batchingop": 160, "batchmatmul": 160, "batchnormattr": 149, "batchnormcallback": 182, "baz": 32, "bb": [22, 89, 121, 128, 147, 148, 149, 151, 173, 175], "bbox_pr": 161, "bbuf": 70, "bc": [89, 137], "bcast_add": [173, 175], "bcb562e2cf839ad7d45b93ea7b0abb0d": 97, "bcda4716699ac97ea44f791c24310193": 49, "bcebo": 50, "bcm2837": 71, "bd206494e8b6a27b25e5cf7199dbcdbfe9d05d1c": 189, "bdc285eec5e051bc3f230cdb78c10af1": 97, "becaus": [1, 4, 5, 8, 9, 12, 14, 16, 20, 22, 27, 34, 35, 36, 49, 58, 61, 65, 73, 74, 75, 79, 80, 82, 84, 97, 98, 99, 100, 113, 118, 131, 135, 136, 141, 144, 150, 157, 160, 162, 168, 171, 174, 176, 177, 179, 180, 182, 183, 188, 189], "becom": [4, 30, 35, 36, 44, 61, 84, 85, 113, 123, 127, 132, 148, 151, 158, 160, 171, 173, 175, 183, 198], "been": [4, 10, 12, 15, 17, 30, 31, 39, 65, 66, 79, 85, 90, 93, 101, 108, 136, 144, 146, 147, 148, 149, 150, 151, 155, 156, 158, 160, 166, 169, 171, 174, 175, 177, 179, 182, 189, 191, 192, 195, 197, 198], "befor": [0, 2, 3, 4, 7, 8, 9, 11, 12, 14, 16, 17, 20, 25, 27, 31, 34, 35, 36, 44, 47, 52, 58, 59, 66, 67, 68, 73, 75, 82, 84, 85, 88, 89, 90, 93, 97, 101, 105, 106, 107, 110, 113, 115, 118, 123, 127, 128, 132, 135, 136, 139, 141, 143, 145, 146, 148, 149, 150, 151, 154, 156, 157, 158, 160, 161, 162, 163, 165, 166, 169, 170, 171, 172, 174, 175, 180, 182, 183, 185, 189, 191, 195, 198], "before_0": 148, "before_1": [148, 149, 158], "before_add_unit_loop": 171, "before_annot": 171, "before_annotate_buffer_access": 171, "before_bind": 171, "before_block": 171, "before_cache_inplac": 171, "before_cache_read": 171, "before_cache_writ": 171, "before_compute_at": 171, "before_decompos": 171, "before_fus": 171, "before_inlin": 171, "before_merg": 171, "before_n": [149, 158], "before_pad_einsum": 171, "before_parallel": 171, "before_partit": 171, "before_reindex": 171, "before_reindex_cache_read": 171, "before_reindex_cache_writ": 171, "before_reord": 171, "before_reverse_compute_at": 171, "before_rfactor": 171, "before_rolling_buff": 171, "before_run": [150, 166], "before_set_axis_separ": 171, "before_set_dtyp": 171, "before_set_scop": 171, "before_split": [169, 171], "before_storage_align": 171, "before_tensor": 171, "before_transform_block_layout": 171, "before_transform_layout": 171, "before_unannot": 171, "before_unrol": 171, "before_vector": 171, "beforehand": 16, "begin": [7, 16, 20, 35, 36, 46, 48, 49, 50, 51, 52, 67, 72, 96, 97, 99, 101, 104, 118, 136, 144, 147, 148, 149, 157, 158, 171, 173, 175, 189, 190, 193, 195], "begin_forward_func": 113, "begin_scop": 147, "beginn": [12, 198], "behav": [157, 175, 180], "behavior": [2, 4, 6, 9, 35, 51, 67, 68, 70, 71, 72, 73, 93, 96, 136, 141, 143, 149, 151, 157, 160, 169, 171, 172, 173, 174, 175, 176, 187], "behaviour": 67, "behind": [193, 195], "being": [1, 4, 5, 6, 11, 12, 13, 16, 17, 27, 30, 32, 35, 36, 39, 58, 66, 67, 79, 84, 128, 136, 143, 144, 147, 149, 150, 151, 152, 158, 160, 166, 171, 173, 179, 180, 183, 197], "believ": 11, "belong": [34, 144, 152, 160, 175], "belong_to": 144, "below": [0, 2, 12, 13, 16, 17, 20, 27, 34, 35, 37, 39, 43, 53, 56, 57, 58, 59, 64, 66, 67, 68, 70, 71, 73, 75, 79, 80, 84, 88, 90, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 115, 118, 119, 121, 128, 129, 132, 135, 136, 143, 148, 149, 150, 157, 160, 166, 169, 171, 173, 174, 175, 178, 179, 180, 182, 183, 187, 192, 193, 197, 198], "benchmark": [2, 62, 67, 69, 73, 74, 75, 97, 98, 99, 100, 105, 106, 107, 108, 115, 141, 151, 159, 160, 174, 189, 197, 198], "benchmark_layout_transform": 108, "benchmarkresult": [141, 150, 166], "benefit": [10, 12, 16, 56, 67, 68, 75, 128, 148, 173, 175, 195], "bernardo": 199, "bert": 137, "besid": [2, 5, 12, 22, 43, 67, 68, 75, 109, 120, 123, 149, 157, 158, 171, 175, 177, 183, 195, 196], "best": [2, 9, 10, 39, 56, 65, 67, 72, 73, 74, 75, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 118, 135, 136, 145, 147, 151, 153, 160, 179, 187, 188, 189, 192, 195, 197, 198], "best_config": 104, "best_record": 135, "beta": [135, 148, 149, 158, 175, 182], "better": [3, 4, 8, 11, 35, 74, 84, 88, 105, 108, 111, 113, 118, 127, 135, 136, 148, 149, 155, 157, 160, 188, 189, 195, 197], "between": [1, 4, 10, 12, 16, 18, 20, 32, 34, 35, 37, 66, 74, 80, 84, 108, 110, 127, 128, 132, 135, 136, 138, 141, 148, 149, 150, 151, 154, 157, 158, 159, 160, 166, 169, 171, 173, 174, 175, 180, 182, 183, 184, 185, 189, 195, 196, 197], "beyond": 1, "bf": [104, 123], "bf16": 174, "bf16computeleg": 174, "bf16storageleg": 174, "bf2d0c1e": 72, "bfloat16": 113, "bgemm": [98, 100], "bgr": 46, "bh": 175, "bi": 175, "bia": [18, 22, 59, 64, 68, 96, 101, 110, 113, 115, 118, 120, 121, 137, 148, 149, 151, 155, 158, 175, 182, 187], "biao": [148, 149], "bias": [47, 159], "bias_1": 96, "bias_add": [58, 59, 65, 68, 85, 115, 158, 160, 175, 182, 193], "bias_add_": 182, "bias_add_leg": 175, "bias_nod": 182, "bias_np": 96, "bias_scal": 155, "bias_tvm": 96, "bias_var": 155, "biasadd": 101, "bicub": [49, 149, 156, 158, 175], "bicubic_alpha": 175, "bicubic_exclud": 175, "bicycl": 47, "bidirect": 179, "bidirectional_rnn": 179, "bifrost": 168, "big": [8, 59, 90, 144, 151, 154, 157, 179], "bigger": [73, 74, 179], "biggest": 170, "bign": 90, "biject": 173, "bijective_layout": 173, "bijectivelayout": 173, "bilinear": [156, 158, 175], "bin": [56, 62, 66, 68, 69, 80, 97, 99], "binar": [136, 175], "binari": [0, 3, 6, 17, 32, 34, 36, 56, 58, 61, 64, 67, 96, 101, 105, 106, 107, 108, 133, 136, 137, 157, 162, 169, 173, 175, 185, 187, 189, 195], "binarize_pack": 175, "binary_blob_log": 3, "binary_blob_s": 3, "binary_blob_type_kei": 3, "binary_dens": 175, "binary_search": 175, "bind": [2, 11, 17, 22, 26, 30, 35, 37, 43, 59, 61, 69, 70, 71, 82, 84, 88, 89, 96, 97, 104, 105, 106, 107, 109, 123, 124, 128, 131, 132, 136, 139, 144, 146, 147, 148, 149, 150, 151, 153, 154, 157, 160, 162, 169, 170, 171, 173, 174, 175, 178, 179, 182, 188, 192, 195, 196], "bind_const": [151, 160], "bind_gpu": 136, "bind_param": 150, "bind_params_by_nam": [85, 115, 182], "bind_symbolic_var": 150, "binding_map": [150, 151], "bindingblock": [150, 151], "bindingblocknod": 150, "bindparam": 151, "bindsymbolicvar": 151, "bindtarget": 174, "binop": 175, "bipolar": [158, 175], "bisect": 16, "bit": [6, 10, 62, 65, 66, 73, 74, 155, 157, 158, 169, 171, 173, 174, 175, 183], "bit_axi": [158, 175], "bitflag": 174, "bitmask": [171, 173], "bitpack": [158, 175], "bitplan": 158, "bitseri": [158, 175], "bitserial_conv2d": 158, "bitserial_conv2d_leg": 175, "bitserial_conv2d_nchw": 175, "bitserial_conv2d_nhwc": 175, "bitserial_dens": [158, 175], "bitstream": 61, "bitwidth": 66, "bitwis": [149, 157, 173, 175], "bitwise_and": [149, 157, 173, 175], "bitwise_not": [149, 157, 173, 175], "bitwise_or": [149, 157, 173, 175], "bitwise_xor": [149, 157, 173, 175], "bj": 50, "bl": 88, "bla": 137, "black": [118, 121, 137, 171], "black_format": 171, "blank": [12, 145], "blitz": [186, 190, 194], "blob": [3, 46, 47, 48, 49, 50, 51, 53, 67, 69, 70, 71, 73, 115, 148, 149, 158, 159, 160, 162, 193, 195], "blob_siz": 3, "blob_type_kei": 3, "block": [4, 5, 7, 8, 9, 12, 16, 19, 23, 25, 26, 30, 31, 36, 43, 59, 64, 65, 66, 75, 84, 89, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 123, 127, 135, 136, 138, 144, 145, 146, 147, 150, 151, 152, 153, 154, 157, 158, 159, 160, 162, 168, 169, 170, 171, 173, 174, 175, 176, 181, 187, 188, 196], "block_a": 171, "block_attr": 171, "block_axi": 27, "block_b": [171, 196], "block_build": 142, "block_c": 31, "block_col_warp": 89, "block_dim": 37, "block_factor": 88, "block_i": [31, 88, 89], "block_info": [138, 171], "block_j": 89, "block_k": 89, "block_or_loop": 171, "block_pad_const": 171, "block_pass": 151, "block_real": 173, "block_row_warp": 89, "block_rv": 138, "block_shap": [158, 175], "block_siz": [89, 158, 175], "block_sref": [171, 173], "block_sref_reus": 171, "block_x": [88, 89, 124], "block_z": [88, 89], "blockbuild": [22, 146, 147, 148, 149, 151], "blockdependenceinfo": 173, "blockidx": [37, 88, 89, 96, 104, 109, 110, 118, 123, 124, 125, 171, 174, 191, 195, 196], "blockidx_i": [89, 191], "blockidx_x": [89, 96, 123, 124, 125, 191], "blockidx_z": [89, 191], "blockinfo": 138, "blockiz": 171, "blockreal": [171, 173, 174], "blockrv": [138, 145, 171], "blockscop": [171, 173], "blocksiz": [75, 160], "blog": [15, 179], "blue": 137, "blueocean": 7, "bmma_sync": 173, "bn": [90, 160, 182, 195], "bn0_beta": [85, 193], "bn0_gamma": [85, 193], "bn0_moving_mean": [85, 193], "bn0_moving_var": [85, 193], "bn1_beta": [85, 193], "bn1_gamma": [85, 193], "bn1_moving_mean": [85, 193], "bn1_moving_var": [85, 193], "bn_beta": [118, 119], "bn_data_beta": [85, 193], "bn_data_gamma": [85, 193], "bn_data_moving_mean": [85, 193], "bn_data_moving_var": [85, 193], "bn_gamma": [118, 119], "bn_mean": [118, 119], "bn_mmean": [118, 119], "bn_mvar": [118, 119], "bn_node": 182, "bn_var": [118, 119], "bnf": 159, "bnn": 62, "board": [12, 16, 61, 66, 97, 105, 107, 109, 168], "bodi": [8, 16, 30, 31, 35, 36, 56, 70, 71, 82, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 123, 124, 125, 128, 135, 146, 147, 150, 151, 153, 154, 157, 159, 160, 169, 170, 171, 173, 174, 180, 182, 187, 188, 191, 195], "boilerpl": [182, 191], "bolt": 184, "bookkeep": 35, "bool": [4, 5, 22, 23, 30, 31, 34, 35, 36, 43, 82, 89, 90, 96, 97, 98, 99, 100, 110, 115, 123, 124, 125, 128, 129, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 182, 183, 187, 191, 195, 196], "bool_": 80, "boolean": [4, 6, 72, 135, 136, 146, 147, 148, 149, 151, 152, 157, 158, 160, 161, 162, 169, 171, 173, 174, 175, 176, 180], "booleanexpress": 174, "boost": [56, 58, 65, 89, 105, 189, 197], "boot": 66, "border": [156, 158, 175], "bore": 182, "bot": 9, "both": [1, 2, 3, 4, 5, 6, 7, 9, 12, 13, 16, 22, 34, 35, 41, 43, 44, 56, 58, 61, 65, 66, 70, 71, 75, 79, 82, 88, 89, 90, 109, 110, 118, 123, 129, 136, 139, 144, 148, 149, 150, 152, 153, 156, 157, 158, 160, 162, 169, 170, 171, 173, 174, 175, 177, 179, 180, 182, 189, 191, 195, 197, 199], "bother": 34, "bottl": 159, "bottle_neck": 159, "bottleneck": [9, 159], "bottom": [7, 36, 47, 127, 156, 175], "bottomright": 149, "bought": 9, "bound": [2, 27, 35, 37, 47, 127, 135, 144, 146, 147, 148, 149, 150, 151, 152, 154, 157, 160, 161, 169, 170, 171, 173, 174, 175, 179, 180, 182, 183], "bound_type_var": 152, "bound_var": [146, 152], "boundari": [20, 56, 137, 156, 161, 169, 175, 182], "box": [17, 47, 118, 121, 127, 137, 138, 156, 161, 175, 182], "box_bottom": 161, "box_ind": 156, "box_indic": [156, 175], "box_left": 161, "box_right": 161, "box_top": 161, "boxes_i": 72, "boxes_x": 72, "brace": 180, "bracket": [16, 175], "branch": [7, 15, 16, 17, 35, 36, 66, 90, 150, 151, 154, 160, 169, 171, 173, 174, 179, 180, 182, 183], "brand": 56, "breadth": 151, "break": [7, 35, 72, 90, 128, 160], "breakdown": [2, 135], "breakpoint": 148, "brew": 17, "bridg": [56, 131, 137, 184], "brief": [2, 4, 5, 12, 34, 36], "briefli": [12, 37, 183], "bring": [2, 33, 41, 44, 47, 75, 81, 104, 108, 155, 162, 182, 184, 192, 196], "broad": [15, 179, 196], "broadcast": [34, 90, 101, 148, 149, 157, 163, 173, 175, 180, 181, 183, 187, 191, 195], "broadcast_add": [160, 191], "broadcast_from_work": 148, "broadcast_from_worker0": [149, 163], "broadcast_mul": 191, "broadcast_to": [148, 149, 151, 157, 175], "broadcast_to_lik": 157, "broadcast_typ": 157, "broader": [9, 10], "broadli": [11, 32], "broadwel": 197, "browser": [5, 131], "bs_c": [75, 101, 175], "bs_r": [75, 100, 101, 175], "bsnh": 149, "bsp": 169, "bsr": [75, 158, 160, 175], "bsr_dens": [75, 160], "bsr_matrix": [75, 158], "bt": [13, 180, 183], "bucket": [61, 160], "budget": [96, 97, 98, 99, 100, 101, 105, 106, 107, 187, 188], "buf_": 36, "buf_0": 36, "buf_1": 36, "buf_decl_": 36, "buf_idx_": 36, "buf_index_arrai": 171, "buf_stream": 36, "buf_typ": 171, "buffer": [1, 4, 6, 23, 25, 26, 30, 31, 36, 37, 43, 53, 56, 74, 82, 88, 89, 90, 96, 101, 110, 123, 124, 125, 128, 129, 135, 136, 139, 146, 148, 149, 151, 158, 164, 169, 170, 171, 172, 173, 174, 175, 177, 187, 191, 195, 196], "buffer_dim_align": 171, "buffer_index": 171, "buffer_load": 173, "buffer_map": [101, 173, 174], "buffer_ptr": 173, "buffer_typ": [123, 124, 125, 129, 173, 175, 191, 195], "buffer_var": 173, "buffer_var_map": 170, "bufferdef": 172, "bufferload": [170, 171, 173, 174], "buffernod": 174, "bufferr": 173, "bufferregion": [170, 173], "bufferstor": [170, 171, 173, 174], "bug": [17, 39, 48, 185], "bug_fix": 16, "bugfix": 16, "build": [0, 1, 2, 3, 4, 5, 7, 12, 13, 15, 16, 17, 22, 30, 31, 34, 37, 41, 43, 46, 47, 49, 53, 56, 60, 61, 66, 67, 68, 69, 72, 73, 74, 75, 79, 80, 82, 84, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 113, 116, 117, 120, 121, 123, 127, 128, 130, 131, 133, 134, 135, 136, 139, 141, 143, 145, 147, 148, 150, 153, 155, 157, 159, 160, 164, 166, 168, 169, 173, 174, 175, 180, 181, 182, 183, 186, 187, 188, 189, 191, 192, 193, 195, 197, 199], "build_config": [3, 75, 157, 160], "build_cuda": 37, "build_cuda_on": 37, "build_dock": 79, "build_func": [67, 97, 99, 105, 107, 119, 135, 136, 189], "build_gcn": [115, 117, 186], "build_input": 145, "build_kwarg": 136, "build_loc": 79, "build_modul": [3, 37, 48, 49, 50, 64, 70, 71, 72, 74, 82, 85, 105, 106, 107, 108, 115, 118, 119, 196], "build_module_with_cross_compil": 162, "build_opt": 66, "build_result": 145, "build_runtime_modul": 137, "buildconfig": 4, "buildcuda": 37, "builder": [19, 36, 67, 97, 99, 104, 105, 106, 107, 108, 135, 136, 145, 146, 147, 148, 150, 157, 188, 189], "builder_": 23, "builder_result": 145, "builderinput": 145, "builderresult": 145, "buildertyp": 145, "buildid": 62, "built": [7, 12, 17, 23, 35, 36, 56, 58, 59, 65, 68, 79, 85, 93, 118, 123, 127, 131, 132, 133, 134, 137, 138, 139, 145, 147, 150, 153, 159, 168, 169, 174, 177, 179, 183, 184, 188, 189, 190, 197], "builtin": [2, 36, 113, 148, 151, 174], "bulk": [35, 37, 173, 183], "bullet": 16, "bump": 17, "bunch": 75, "bundl": [5, 60, 137, 151, 192], "bundlemodelparam": 151, "burden": [9, 16, 195], "burn": 66, "burst": 144, "button": [7, 9], "bwmma": 173, "bx": [37, 88, 104, 125, 195], "byoc": [56, 65, 119, 155, 192], "bypass": [35, 36, 52, 136], "byte": [0, 6, 65, 90, 135, 136, 141, 144, 148, 149, 157, 162, 168, 170, 173, 175], "byte_count": 173, "bytearrai": [0, 137, 141, 157, 162], "bytecod": [113, 150, 153], "bz": 88, "c": [1, 2, 3, 5, 15, 25, 27, 30, 31, 32, 35, 37, 44, 47, 53, 56, 58, 61, 62, 66, 73, 74, 75, 80, 82, 84, 89, 90, 96, 97, 99, 101, 115, 121, 123, 125, 128, 129, 134, 135, 136, 137, 139, 140, 143, 144, 146, 147, 148, 149, 150, 156, 157, 158, 160, 161, 162, 163, 166, 168, 169, 171, 173, 174, 175, 177, 179, 180, 183, 187, 188, 191, 192, 195, 197, 199], "c1": 180, "c2": 180, "c4": 108, "c5": [74, 108], "c_": 27, "c_1": [90, 125, 128, 129, 171, 187, 195], "c_2": [125, 129, 195], "c_compiler_input0": 36, "c_compiler_input1": 36, "c_compiler_input2": 36, "c_compiler_input3": 36, "c_cp": 149, "c_data": 84, "c_dtype": 173, "c_global": [90, 195], "c_global_1": [90, 195], "c_index": 173, "c_init": 175, "c_nd": 31, "c_np": [31, 104, 187, 188], "c_pad": 171, "c_runtime_api": [1, 5, 36, 56], "c_share": 171, "c_tvm": [104, 187, 188], "cach": [5, 35, 51, 56, 65, 67, 68, 72, 73, 88, 93, 104, 105, 106, 107, 108, 113, 115, 135, 136, 137, 141, 148, 153, 158, 165, 169, 171, 174, 175], "cache_index": 171, "cache_inplac": 171, "cache_line_byt": 135, "cache_line_s": 174, "cache_read": [88, 89, 96, 104, 169, 171], "cache_writ": [88, 89, 90, 104, 169, 171, 195], "cached_block": 171, "cached_func": 153, "cachedfunc": 153, "caden": 51, "caff": 155, "caffe2": [155, 157], "caffe_pb2": 155, "caffemodel": 155, "calcul": [25, 34, 56, 67, 85, 136, 141, 144, 148, 149, 151, 156, 157, 158, 159, 160, 161, 170, 173, 175], "calculate_allocated_byt": 170, "calculate_constant_byt": 170, "calculate_qparam": 73, "calculate_workspace_byt": 170, "calculateexpr": 8, "calculateexprinint64": 8, "calculation_dtyp": 67, "calibr": [66, 73, 152], "call": [1, 2, 3, 4, 5, 6, 13, 15, 16, 18, 20, 22, 23, 27, 35, 36, 37, 43, 44, 52, 56, 59, 66, 70, 71, 73, 74, 75, 79, 80, 82, 85, 88, 89, 90, 106, 110, 113, 118, 119, 120, 121, 125, 127, 128, 131, 135, 136, 137, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 160, 162, 163, 165, 166, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185, 188, 191, 193, 195, 197, 198, 199], "call_all_topi_func": 135, "call_builtin_with_ctx": [149, 150], "call_cpack": 173, "call_cpacked_low": 173, "call_dp": 2, "call_dps_pack": [22, 110, 149, 150, 151], "call_extern": [128, 171, 173], "call_impl": 171, "call_inplace_pack": 149, "call_intrin": [89, 173], "call_llvm_intrin": 173, "call_llvm_pure_intrin": 173, "call_low": 160, "call_nod": 85, "call_node_inst": 85, "call_onli": 151, "call_pack": [121, 151, 163, 169, 173, 175], "call_packed_low": 173, "call_pattern": 182, "call_pure_extern": 173, "call_pure_pack": [149, 150], "call_t": [147, 151], "call_te_with_grad": 147, "call_tir": [2, 22, 23, 43, 110, 147, 148, 149, 150, 151, 173], "call_tir_inplac": [148, 149, 150, 151], "call_tir_local_view": 149, "call_tir_with_grad": [147, 149, 150], "callabl": [4, 110, 125, 135, 136, 137, 138, 144, 145, 146, 147, 148, 149, 150, 151, 154, 157, 160, 162, 166, 169, 171, 173, 174, 175, 176, 180], "callback": [5, 67, 82, 84, 104, 105, 106, 107, 108, 121, 135, 136, 137, 145, 147, 151, 154, 160, 171, 173, 174, 176, 182, 188, 189], "callbacklisttyp": 145, "callcheck": 35, "calle": [5, 149, 150], "calleffectkind": 173, "caller": [5, 171], "callgraph": 152, "callhello": 5, "callingconv": 144, "callnod": [35, 36, 85, 149, 150, 151], "callpack": 5, "callpattern": 154, "calltirrewrit": [113, 151], "calltirwithgradattr": 149, "camel": 16, "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 22, 23, 25, 27, 30, 31, 32, 34, 35, 36, 37, 39, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 81, 82, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 120, 121, 123, 124, 125, 127, 128, 129, 131, 132, 133, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199], "can_convert_multiply_to_intdiv": 175, "can_decompose_pad": 171, "can_prov": 175, "can_prove_equ": 175, "candid": [4, 9, 11, 12, 15, 132, 135, 136, 145, 160, 171, 174, 176, 188], "candidate_block": 75, "cannot": [1, 4, 7, 8, 13, 14, 17, 30, 36, 58, 61, 70, 71, 75, 79, 90, 101, 104, 118, 123, 131, 135, 136, 138, 144, 146, 148, 149, 150, 151, 152, 155, 157, 166, 169, 171, 173, 175, 177, 180, 182, 185, 188, 195, 198], "canon": [148, 149, 156, 157, 158, 159, 168], "canon_multi_target": [153, 157, 168], "canon_multi_target_and_host": 168, "canon_target": [135, 153, 157, 168], "canon_target_and_host": 168, "canon_target_map_and_host": 168, "canonic": [84, 151, 160, 175], "canonical_simplifi": 175, "canonicalizebind": 151, "canonicalizecast": [157, 160], "canonicalizeop": [85, 157, 160], "canva": 49, "cap": 16, "capabilit": 189, "capabl": [1, 18, 56, 59, 76, 79, 80, 89, 137, 162, 179, 180, 182, 185, 187, 195, 197], "capac": 168, "capsul": 164, "captur": [11, 35, 48, 148, 151, 160, 168, 169, 170], "capturepostdfsindexinspan": 160, "card": [66, 106], "care": [7, 8, 9, 12, 135, 136, 177, 179], "carefulli": [15, 169, 171, 195], "carri": [4, 27, 124, 137, 160, 169, 175, 199], "cartesian": 157, "cascad": 171, "cascadelak": [73, 74, 198], "case": [1, 2, 5, 7, 8, 9, 10, 11, 12, 15, 16, 17, 22, 23, 34, 35, 36, 44, 56, 58, 59, 60, 73, 74, 75, 79, 82, 96, 101, 104, 110, 115, 121, 123, 128, 136, 143, 144, 145, 146, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 162, 166, 169, 171, 173, 174, 175, 176, 179, 180, 182, 183, 187, 188, 189, 195, 197, 199], "cast": [30, 36, 58, 67, 84, 89, 147, 148, 149, 150, 151, 157, 160, 171, 173, 174, 175, 183], "cast_lik": 157, "cat": [17, 46, 48, 49, 50, 51, 53, 67, 68, 69, 70, 71, 73, 189, 197], "catamount": [67, 73], "catch": [85, 152], "categ_fn": 67, "categ_url": 67, "categor": 12, "categori": [4, 13, 67, 161], "caus": [7, 9, 10, 14, 16, 39, 48, 59, 65, 72, 74, 85, 93, 120, 136, 149, 150, 157, 160, 175], "causal": [148, 149], "causal_mask": 149, "caution": [118, 153, 157, 170, 171], "cautiou": 9, "caveat": 148, "cb": [49, 128], "cbla": [36, 121, 169, 175], "cc": [1, 3, 4, 5, 13, 32, 34, 35, 36, 37, 58, 60, 61, 65, 66, 88, 90, 128, 175, 180, 183, 195, 199], "cc_code": 128, "ccach": 137, "ccache_env": 137, "ccachekei": 153, "ccachevalu": 153, "ccccdddd": 56, "ccl": [148, 163], "ccl_allgath": 148, "ccl_allreduc": 148, "ccl_broadcast_from_worker0": 148, "ccompil": 36, "cd": [17, 56, 58, 60, 61, 62, 64, 66, 69, 70, 71, 80, 109, 132, 198, 199], "cdf": 148, "cdll": 132, "cdot": 149, "cdr": [158, 175], "ceil": [65, 149, 156, 157, 158, 169, 173, 175], "ceil_div": 177, "ceil_log2": 175, "ceil_mod": [111, 149, 158, 175], "ceildiv": 173, "cell": [159, 175, 179], "cell1": 179, "cell2": 179, "cell_out": 179, "center": [66, 110, 111, 149, 156, 158, 161, 175], "centercrop": [50, 51, 67, 73], "central": [5, 32, 44, 97, 105, 106, 107, 196], "centric": 56, "certain": [4, 7, 8, 11, 25, 36, 84, 110, 128, 135, 136, 140, 149, 151, 154, 155, 169, 171, 173, 175, 176, 179, 180, 182, 183, 195, 196], "certainli": [5, 160], "cfd09cf1ca9e943f0ee12a18813a5c75": 100, "cffi": 47, "cfg": [37, 47, 104, 136, 175], "cfg_name": 47, "cfg_path": 47, "cfg_url": 47, "chain": [8, 136, 146, 151, 152, 171], "challeng": [5, 20, 37, 113], "chananel": 175, "chanc": [90, 128], "chang": [2, 5, 7, 8, 11, 12, 13, 14, 16, 17, 20, 37, 58, 59, 65, 66, 67, 68, 69, 70, 71, 74, 75, 82, 85, 90, 93, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 115, 131, 148, 150, 151, 153, 155, 157, 160, 169, 171, 173, 174, 175, 179, 180, 182, 188, 195], "change_dtyp": 155, "changebatch": 160, "changedatatyp": 155, "changelog": [148, 149], "channel": [10, 11, 49, 68, 73, 80, 85, 88, 89, 118, 119, 144, 148, 149, 152, 156, 158, 159, 161, 162, 173, 175, 185, 193], "channel_axi": [148, 149, 175], "channel_block": [173, 175], "channel_chunk": 175, "channel_multipli": 175, "channelis": 175, "chapter": 20, "char": [3, 5, 36, 96, 123], "charact": 175, "character": 179, "charg": [97, 105, 107, 177], "chat": 113, "check": [2, 3, 4, 5, 7, 8, 10, 13, 16, 17, 20, 30, 31, 35, 36, 43, 49, 53, 56, 65, 66, 67, 74, 75, 80, 82, 97, 98, 99, 100, 101, 104, 110, 115, 118, 128, 131, 132, 135, 136, 137, 138, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 159, 160, 164, 169, 170, 171, 173, 174, 175, 178, 180, 182, 183, 188, 189, 193, 195, 197], "check_basic_block_normal_form": 152, "check_const": 152, "check_grad": 159, "check_kind": 152, "check_struct_info": 146, "check_task_input_by_placeholder_nam": 135, "check_workload_kei": 135, "checked_typ": [36, 144, 160, 182], "checked_type_": 151, "checker": [135, 148, 174, 183], "checker_": 35, "checklist": 36, "checkout": [5, 7, 17, 37, 60, 93], "checkpoint": [51, 68, 72, 73, 149, 151], "chen": [84, 121, 123, 124, 151, 195], "chengfan": [96, 97, 100, 101, 187], "cherri": 15, "chi": [85, 120], "chien": 115, "child": [3, 154, 171, 182], "child_pattern": 182, "children": [3, 171, 172], "chintala": 159, "chip": [64, 89, 109, 168], "chmod": 66, "choic": [2, 9, 13, 15, 22, 56, 75, 136, 157, 175], "chois": 157, "choos": [5, 7, 15, 34, 56, 66, 67, 73, 74, 75, 104, 108, 132, 136, 150, 153, 155, 166, 188, 189, 191, 192, 193, 195, 197], "chose": [90, 195], "chosen": [12, 149, 158, 159, 168, 175, 195], "chosen_block": 75, "chri": [188, 189, 192, 197], "christian": 159, "christoph": [179, 199], "chroma": 49, "chunk": [75, 89, 90, 148, 149, 171], "churaev": [56, 59], "chw": [159, 189], "ci": [8, 15, 17, 56, 88, 96, 98, 100, 104, 110, 111, 113, 175, 195], "ci_adreno": 56, "ci_cpu": [16, 131], "ci_foo": 7, "ci_gpu": 79, "ci_lint": [8, 16], "circular": 171, "circumst": 179, "citation_graph": 115, "civil": 9, "cl": [20, 22, 23, 43, 56, 67, 68, 69, 99, 109, 110, 140, 145, 150, 154, 162, 164, 195, 198], "cl_qcom_ml_op": 56, "clamp": 149, "clang": [8, 16, 56, 68, 84, 120, 128, 132], "clarif": 9, "clarifi": 12, "clariti": 151, "clases": 159, "class": [1, 2, 3, 4, 5, 7, 8, 12, 13, 18, 20, 22, 23, 27, 30, 31, 34, 35, 36, 37, 43, 44, 46, 47, 48, 50, 51, 53, 63, 64, 65, 67, 69, 70, 71, 72, 73, 80, 82, 84, 89, 90, 96, 110, 111, 113, 115, 120, 121, 123, 124, 125, 128, 129, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 173, 174, 175, 176, 180, 182, 183, 187, 189, 191, 195, 196, 197, 199], "class_id": 161, "class_id_to_kei": 51, "class_nam": 51, "class_path": 51, "class_url": 51, "classic": [51, 67, 175], "classif": [46, 48, 64, 67, 69, 159, 189, 197, 198], "classifi": [4, 67, 159, 180, 189, 197], "classify_image_graph_def": 52, "classmethod": [137, 165], "claus": [157, 179, 180, 183], "clean": [11, 80, 136, 175, 177], "cleanup": [16, 82, 145, 160], "clear": [4, 9, 11, 13, 16, 36, 85, 135, 136, 153], "clear_cach": 136, "clear_fallback_cach": 136, "clear_sess": 69, "clearli": [2, 34, 183], "clever": 56, "cli": 137, "click": [7, 9, 17, 22, 23, 30, 31, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199], "client": [162, 185], "client_via_proxi": 162, "clip": [49, 65, 149, 157, 161, 175], "clml": [56, 67, 68], "clml_modul": 56, "clock": [136, 144], "clock_frequency_hz": 144, "clone": [17, 61, 62, 66, 69, 70, 71, 72, 109, 131, 132, 145, 160], "cloned_context": 145, "cloned_postproc": 145, "cloned_rul": 145, "cloned_sg": 145, "close": [2, 17, 19, 22, 36, 53, 74, 127, 149, 158, 159, 162, 175, 180], "closer": [2, 108, 135, 136, 169, 173], "closest": [160, 171, 175], "closur": [149, 150, 159, 160, 166, 178, 179], "closure_var": 169, "cloud": [66, 113], "cloudpickl": [104, 105, 106, 107, 132, 188], "cls_prob": 161, "cluster": [56, 75], "clz": [173, 175], "cm": 46, "cmake": [0, 16, 32, 36, 56, 58, 59, 62, 65, 66, 67, 69, 70, 71, 79, 80, 93, 109, 118, 119, 132], "cmake_build_typ": 132, "cmake_c_compil": 80, "cmake_cxx_compil": 80, "cmake_cxx_compiler_launch": 132, "cmake_find_root_path_mode_includ": 80, "cmake_find_root_path_mode_librari": 80, "cmake_find_root_path_mode_packag": 80, "cmake_find_root_path_mode_program": 80, "cmake_sysroot": 80, "cmake_system_nam": 80, "cmath": 36, "cmd": 137, "cmod": 56, "cn": 50, "cn10ka": 64, "cnf10kb": 64, "cnhw": 175, "cnn": [66, 158, 175], "co": [2, 17, 65, 96, 98, 100, 104, 149, 157, 169, 173, 174, 175], "cobj_bin": 137, "coco": 47, "coco_nam": 47, "coco_path": 47, "coco_url": 47, "coco_v1": 72, "code": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 15, 16, 17, 20, 22, 23, 27, 30, 31, 32, 34, 35, 37, 39, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 133, 135, 136, 137, 139, 140, 141, 144, 145, 147, 148, 150, 151, 153, 154, 156, 157, 158, 159, 160, 162, 168, 169, 171, 173, 174, 175, 176, 177, 180, 182, 183, 185, 187, 188, 189, 191, 192, 193, 196, 197, 198, 199], "code_hash": 136, "code_stream_": 36, "codebas": [2, 8, 11, 13, 15, 17, 38], "codeblock": 5, "codegen": [2, 6, 33, 37, 41, 44, 58, 59, 64, 110, 119, 139, 150, 151, 153, 160, 168, 184, 192, 199], "codegen_c": 36, "codegen_cuda": 37, "codegen_llvm": 37, "codegencbas": 36, "codegencuda": 37, "codegenllvm": 37, "codgen": 168, "codifi": 7, "coeff": 175, "coeffici": [149, 156, 158, 175], "col": 173, "col_offset": 144, "col_sum": 165, "colab": [22, 23, 30, 31, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199], "collabor": [9, 11, 15, 23, 123], "collag": 160, "collagepartit": 160, "collaps": [149, 157, 175], "collapse_sum": 175, "collapse_sum_lik": [34, 149, 157], "collapse_sum_to": [149, 157], "collapse_target": 149, "collapse_typ": 157, "collapseif": 35, "collapsesumlik": 34, "collect": [2, 3, 4, 9, 10, 17, 18, 33, 34, 35, 36, 37, 41, 43, 44, 59, 78, 85, 93, 115, 130, 135, 136, 137, 144, 146, 149, 152, 157, 163, 165, 168, 171, 174, 175, 183, 188, 195, 197], "collect_non_negative_express": 146, "collector": [93, 165], "collid": 8, "collison": 144, "color": [127, 137, 193], "color_bgr2rgb": 72, "column": [66, 90, 123, 124, 144, 148, 149, 157, 165, 173, 175, 180, 195], "column_major": 173, "com": [7, 8, 12, 17, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 93, 109, 115, 131, 132, 148, 149, 158, 159, 160, 169, 173, 189, 195, 197, 198], "comand": 56, "combin": [13, 15, 19, 22, 34, 37, 56, 111, 113, 135, 136, 139, 144, 149, 150, 151, 158, 160, 166, 173, 174, 175, 188, 192, 195], "combinecontextcal": 174, "combined_non_max_suppress": 161, "combineparallelbatchmatmul": [157, 160], "combineparallelconv2d": [157, 160], "combineparalleldens": [157, 160], "combineparallelmatmul": 151, "come": [7, 9, 10, 27, 34, 41, 44, 60, 73, 74, 120, 146, 149, 151, 161, 169, 173, 189, 197, 199], "comm_reduc": [123, 129, 169, 173, 191], "comma": [32, 175], "command": [1, 8, 12, 14, 16, 17, 56, 58, 60, 62, 69, 70, 71, 79, 80, 93, 96, 97, 105, 106, 107, 109, 131, 132, 137, 163, 187, 189, 192, 195, 197], "commandlin": 62, "comment": [9, 12, 15, 16, 52, 73, 74, 127, 144, 154, 157, 195], "commit": [7, 9, 15, 17, 32, 39, 132, 145, 173], "commit_hash": 17, "commit_tuning_record": 145, "commit_workload": 145, "committ": [7, 8, 9, 15, 16], "committe": 11, "committership": 10, "commmit": 16, "common": [1, 2, 4, 5, 7, 9, 13, 16, 20, 35, 36, 43, 79, 84, 94, 115, 137, 143, 144, 146, 148, 151, 157, 158, 160, 170, 171, 174, 175, 176, 178, 180, 182, 188, 191, 192, 195], "commonli": [20, 27, 32, 34, 36, 179], "commonsubexprelimtir": 174, "commreduc": [123, 173, 191], "commun": [12, 15, 16, 17, 32, 56, 69, 80, 97, 105, 106, 107, 130, 163, 173, 180, 183], "commut": [129, 169, 173, 175], "compact": [128, 139, 160, 169, 170, 171, 173, 174, 175, 188], "compactbufferalloc": [171, 174], "compactli": [179, 183], "companion": 155, "compar": [9, 56, 62, 67, 74, 75, 90, 123, 127, 128, 129, 144, 157, 158, 159, 164, 170, 180, 191, 192], "comparison": [51, 115, 141, 144, 148, 158, 170, 173, 175, 195], "compat": [4, 30, 36, 51, 52, 62, 65, 67, 68, 72, 79, 121, 135, 148, 149, 150, 153, 155, 157, 160, 163, 174, 175], "compil": [0, 1, 2, 3, 4, 6, 12, 18, 20, 23, 27, 30, 31, 32, 33, 34, 36, 37, 39, 41, 43, 44, 55, 56, 57, 58, 59, 60, 63, 76, 77, 79, 84, 86, 88, 89, 90, 93, 97, 99, 104, 105, 106, 107, 108, 110, 111, 112, 114, 118, 119, 121, 125, 130, 132, 135, 136, 137, 138, 139, 141, 144, 146, 148, 149, 150, 151, 152, 153, 155, 157, 160, 162, 165, 168, 169, 171, 173, 175, 180, 182, 183, 184, 186, 188, 190, 192, 194], "compilationconfig": [160, 168], "compile_and_run": 199, "compile_coreml": 137, "compile_cuda": 137, "compile_engin": 153, "compile_func": [137, 162], "compile_met": 137, "compile_model": [49, 55, 186], "compile_opt": 148, "compiled_artifact": 2, "compiled_lib": 141, "compiler_filt": 160, "compiler_src": 36, "complementari": 2, "complet": [1, 3, 7, 12, 30, 36, 72, 121, 135, 147, 151, 157, 171, 173, 180, 188, 189, 190, 195, 196, 197, 198], "complex": [2, 9, 22, 56, 58, 80, 90, 111, 135, 171, 178, 179, 182, 183, 189, 195, 196, 197, 199], "compliant": 148, "complic": [75, 96, 120, 124, 127, 128, 135, 154, 171, 180, 187, 191], "compon": [2, 16, 18, 30, 35, 37, 43, 56, 62, 65, 80, 148, 157, 171, 175, 193], "compos": [2, 16, 18, 34, 36, 41, 44, 50, 51, 67, 73, 111, 113, 120, 125, 137, 148, 151, 152, 153, 169, 173, 175, 183], "composit": [2, 58, 136, 151, 160, 171, 182], "comprehens": [9, 12, 179], "compress": [56, 75, 80], "compris": [27, 30, 37], "compromis": 9, "comput": [1, 2, 5, 6, 18, 20, 22, 23, 25, 26, 30, 35, 36, 37, 43, 44, 46, 56, 61, 62, 64, 67, 68, 70, 71, 82, 88, 90, 97, 98, 99, 100, 109, 110, 111, 113, 118, 121, 122, 123, 124, 125, 127, 128, 135, 136, 137, 139, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 168, 169, 171, 173, 174, 175, 178, 179, 180, 187, 188, 189, 191, 192, 193, 196, 197], "computable_at_compile_tim": 146, "compute_1": [96, 101, 191], "compute_2": 101, "compute_3": 101, "compute_at": [88, 89, 90, 96, 101, 104, 123, 124, 127, 129, 135, 169, 171, 187, 195], "compute_cumprod": 34, "compute_cumsum": 34, "compute_dag": [96, 97, 98, 99, 100, 101, 135, 187], "compute_flop": 136, "compute_i0": 96, "compute_i0_i": 96, "compute_i0_o_i": 96, "compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fus": 96, "compute_i0_o_o_i": 96, "compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fus": 96, "compute_i0_o_o_o": 96, "compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fus": 96, "compute_i1": 96, "compute_i1_i": 96, "compute_i1_o_i": 96, "compute_i1_o_o_i": 96, "compute_i1_o_o_o": 96, "compute_i2": 96, "compute_i2_i": 96, "compute_i2_o_i": 96, "compute_i2_o_o_i": 96, "compute_i2_o_o_o": 96, "compute_i3": 96, "compute_i3_i": 96, "compute_i3_o_i": 96, "compute_i3_o_o_i": 96, "compute_i3_o_o_o": 96, "compute_inlin": [88, 89, 96, 101, 104, 169, 171, 195], "compute_intermedi": [23, 43], "compute_or_sch": 135, "compute_relu": 169, "compute_root": [169, 195], "compute_tensor": 135, "compute_vers": [89, 137], "computedag": 135, "computeinlin": 171, "computelibrari": 58, "computeop": [135, 136, 169], "computeprimvalu": 151, "con": [68, 179, 183], "concat": [34, 148, 149, 151, 158, 173, 175, 179], "concat_x": 113, "concat_x1_x2": 113, "concatattr": 149, "concaten": [34, 65, 113, 137, 148, 149, 157, 175, 179], "concentr": 30, "concept": [4, 12, 20, 30, 36, 180, 192, 195], "concis": [113, 179, 195], "concisemodul": 30, "concisemodulefrompython": 30, "concist": 144, "conclud": [37, 56, 66, 79], "concret": [8, 14, 35, 80, 144, 148, 179, 183], "concrete_shap": 144, "concurr": 90, "cond": [35, 150, 154, 157, 169, 173, 177, 182], "conda": [66, 132], "condens": 30, "condit": [8, 39, 72, 101, 123, 136, 144, 148, 149, 150, 154, 157, 169, 170, 171, 173, 174, 175, 180, 182, 183, 189, 191], "condition1": 177, "condition2": 177, "condition3": 177, "conditional_typ": 174, "conditon": 157, "conduct": [151, 171, 174, 176, 188], "condval": 96, "condval_1": 96, "condval_2": 96, "condval_3": 96, "conf": [12, 17], "confid": [25, 161], "config": [0, 2, 4, 14, 32, 36, 52, 56, 58, 59, 62, 64, 65, 66, 67, 69, 70, 71, 75, 79, 80, 82, 84, 89, 93, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 113, 115, 118, 132, 135, 136, 155, 157, 160, 174, 175, 176, 188, 189], "config_file_nam": 119, "config_spac": [67, 104, 105, 106, 107, 108, 188, 189], "configent": [136, 188], "configspac": [104, 136, 188], "configur": [2, 4, 7, 9, 12, 14, 16, 32, 35, 36, 56, 58, 65, 66, 69, 70, 71, 79, 84, 97, 104, 105, 106, 107, 109, 110, 113, 119, 133, 135, 136, 140, 148, 150, 157, 160, 165, 174, 176, 188, 189, 192, 197], "confirm": [48, 69, 97, 105, 106, 107, 132, 174], "conflict": [12, 15, 88, 96, 98, 132, 148, 151, 169, 171, 177], "conform": 195, "confus": [10, 62, 150, 166], "congigur": 67, "congratul": [36, 39], "conjug": [157, 175], "conjunct": 31, "connect": [56, 58, 67, 70, 71, 80, 109, 118, 119, 120, 127, 137, 153, 162, 180, 181, 198], "connect_track": [67, 69, 162], "connection_typ": 58, "consecut": [2, 125, 151, 157, 160, 161, 169, 171, 174, 195], "consensu": [11, 15], "consequ": [2, 15, 25], "consid": [12, 15, 16, 34, 35, 36, 58, 104, 105, 107, 135, 146, 148, 149, 150, 152, 155, 156, 158, 170, 173, 175, 179, 180, 182, 183, 195], "consider": 9, "consist": [1, 11, 12, 15, 20, 37, 44, 66, 68, 101, 109, 110, 111, 113, 118, 119, 125, 144, 151, 165, 170, 171, 180, 183, 189, 193, 195, 199], "consol": [67, 97, 98, 99, 100], "consolid": 174, "const": [1, 3, 4, 5, 8, 32, 34, 35, 36, 37, 64, 82, 84, 88, 89, 123, 129, 149, 150, 151, 156, 157, 158, 169, 171, 173, 175, 182], "const_fold": 176, "const_int_bound": 175, "const_loc": 137, "const_rang": 177, "const_vector": 175, "constant": [0, 2, 4, 5, 15, 43, 59, 72, 84, 111, 113, 115, 119, 144, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 169, 170, 171, 173, 174, 175, 177, 178, 179, 182, 183, 188], "constant_byte_align": 170, "constant_info_arr": 144, "constant_memory_pool": 157, "constant_valu": [149, 158], "constantli": [9, 192], "constantmemorypool": [144, 157], "constantnod": [35, 150], "constantpattern": 154, "constantpoolinfo": [144, 157], "constevalu": 35, "constintbound": 175, "constrain": [128, 160, 182], "constraint": [82, 90, 124, 136, 144, 148, 154, 170, 173, 175, 178, 180, 195], "constraint_scop": 175, "constraintscop": 175, "construct": [0, 1, 2, 3, 9, 13, 27, 30, 34, 35, 36, 37, 41, 43, 49, 59, 72, 97, 98, 99, 100, 110, 111, 115, 123, 125, 136, 137, 141, 144, 147, 148, 149, 150, 151, 152, 154, 155, 157, 159, 160, 162, 164, 168, 169, 171, 173, 175, 177, 178, 179, 183, 188, 195], "constructor": [1, 5, 8, 65, 85, 120, 144, 150, 153, 157, 159, 160, 162, 168, 178, 179, 182, 183], "constructorvalu": [153, 159], "consult": [16, 185, 197], "consum": [8, 16, 65, 90, 101, 135, 149, 153, 161, 171, 174, 197], "consumer_block": 171, "consumer_id": 101, "consumpt": [4, 56, 59], "contain": [0, 1, 2, 4, 5, 7, 8, 9, 13, 16, 17, 20, 22, 25, 27, 33, 35, 36, 37, 43, 44, 53, 56, 62, 65, 66, 67, 69, 78, 80, 84, 88, 89, 90, 93, 109, 110, 111, 113, 120, 127, 134, 135, 136, 137, 138, 141, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 183, 195, 196, 197], "container_hostnam": 131, "contains_impure_cal": 146, "content": [2, 5, 9, 16, 30, 34, 47, 52, 80, 113, 136, 137, 144, 148, 150, 157, 158, 169, 173, 174, 179, 183, 195], "content_lan": 173, "context": [2, 4, 10, 12, 48, 49, 56, 85, 108, 135, 136, 143, 145, 146, 151, 157, 159, 160, 168, 169, 174, 176, 188, 191, 195], "context_stack": 4, "context_window_s": 113, "contigu": [138, 171], "continu": [4, 7, 11, 14, 17, 36, 41, 44, 66, 90, 97, 98, 99, 100, 110, 118, 160, 180, 188, 195], "contradict": 169, "contradictori": 12, "contrain": 160, "contrari": 125, "contrast": [12, 179, 180], "contravari": 148, "contrib": [0, 3, 36, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 85, 89, 97, 98, 99, 100, 105, 106, 107, 108, 109, 110, 115, 118, 119, 120, 127, 128, 136, 142, 153, 169, 175, 189, 193, 195, 197, 199], "contrib_conv2d_gemm_weight_transform": 158, "contrib_conv2d_gemm_without_weight_transform": 158, "contrib_conv2d_nchwc": 158, "contrib_conv2d_winograd_nnpack_weight_transform": 158, "contrib_conv2d_winograd_weight_transform": [48, 158], "contrib_conv2d_winograd_without_weight_transform": 158, "contrib_conv3d_winograd_weight_transform": 158, "contrib_conv3d_winograd_without_weight_transform": 158, "contrib_dense_pack": 158, "contrib_depthwise_conv2d_nchwc": 158, "contribut": [8, 9, 10, 11, 12, 15, 38, 157], "contributor": [8, 9, 10, 11, 12, 16, 130], "control": [2, 4, 8, 35, 36, 56, 67, 97, 105, 106, 107, 109, 115, 121, 132, 135, 136, 146, 148, 149, 150, 152, 157, 160, 163, 168, 173, 174, 175, 178, 179], "conv": [49, 84, 89, 96, 104, 115, 148, 151, 159, 160, 169, 175, 182, 191], "conv0_weight": [85, 193], "conv1d": [65, 148, 149, 158, 175], "conv1d_ncw": 175, "conv1d_nwc": 175, "conv1d_transpos": [148, 149, 158], "conv1d_transpose_ncw": 175, "conv2d": [56, 58, 59, 65, 67, 68, 73, 74, 84, 85, 89, 96, 104, 105, 106, 107, 108, 111, 118, 119, 127, 137, 148, 149, 151, 152, 155, 158, 159, 160, 169, 170, 175, 180, 182, 188, 191, 192, 193, 199], "conv2d_alter_layout": [136, 175], "conv2d_backward_weight": 158, "conv2d_forward": 137, "conv2d_gemm_output": 97, "conv2d_gemm_weight_transform": 175, "conv2d_hwcn": [127, 175], "conv2d_infer_layout": 175, "conv2d_lay": 96, "conv2d_leg": 175, "conv2d_nchw": [96, 104, 136, 175, 191, 199], "conv2d_nchw_1": [96, 191], "conv2d_nchw_ff": 96, "conv2d_nchw_ff_i": 96, "conv2d_nchw_ff_o_i": 96, "conv2d_nchw_ff_o_o_i": 96, "conv2d_nchw_ff_o_o_o_i": 96, "conv2d_nchw_ff_o_o_o_o": 96, "conv2d_nchw_nn": 96, "conv2d_nchw_nn_i": 96, "conv2d_nchw_nn_o_i": 96, "conv2d_nchw_nn_o_o_i": 96, "conv2d_nchw_nn_o_o_o_i": 96, "conv2d_nchw_nn_o_o_o_o": 96, "conv2d_nchw_python": [96, 104], "conv2d_nchw_rc": 96, "conv2d_nchw_rc_i": 96, "conv2d_nchw_rc_o_i": 96, "conv2d_nchw_rc_o_o": 96, "conv2d_nchw_ri": 96, "conv2d_nchw_rx": 96, "conv2d_nchw_rx_i": 96, "conv2d_nchw_rx_o_i": 96, "conv2d_nchw_rx_o_o": 96, "conv2d_nchw_ry_i": 96, "conv2d_nchw_ry_o_i": 96, "conv2d_nchw_ry_o_o": 96, "conv2d_nchw_xx": 96, "conv2d_nchw_xx_i": 96, "conv2d_nchw_xx_o_i": 96, "conv2d_nchw_xx_o_o_i": 96, "conv2d_nchw_xx_o_o_o_i": 96, "conv2d_nchw_xx_o_o_o_o": 96, "conv2d_nchw_yi": 96, "conv2d_nchw_yy_i": 96, "conv2d_nchw_yy_o_i": 96, "conv2d_nchw_yy_o_o_i": 96, "conv2d_nchw_yy_o_o_o_i": 96, "conv2d_nchw_yy_o_o_o_o": 96, "conv2d_nchwc": [108, 136, 175], "conv2d_nchwc_int8": 175, "conv2d_nhwc": [56, 98, 99, 100, 175], "conv2d_nn": 182, "conv2d_no_batch": 104, "conv2d_pattern": 199, "conv2d_relu": 151, "conv2d_transpos": [65, 149, 158, 175], "conv2d_transpose_alter_layout": 175, "conv2d_transpose_leg": 175, "conv2d_transpose_nchw": 175, "conv2d_transpose_nchw_preprocess": 175, "conv2d_winograd": [98, 100], "conv2d_winograd_nchw": 175, "conv2d_winograd_nchw_without_weight_transform": 175, "conv2d_winograd_nhwc": 175, "conv2d_winograd_nhwc_without_weight_transform": 175, "conv2d_winograd_nnpack_weight_transform": 175, "conv2d_winograd_weight_transform": 175, "conv2dattr": 149, "conv2dnchw": 199, "conv2dtospars": 160, "conv2dtosparse2": 160, "conv2dtransposeattr": 149, "conv3d": [65, 148, 149, 158, 175], "conv3d_alter_layout": 175, "conv3d_ncdhw": 175, "conv3d_ndhwc": 175, "conv3d_transpos": [65, 158, 175], "conv3d_transpose_leg": 175, "conv3d_transpose_ncdhw": 175, "conv3d_transpose_ncdhw_preprocess": 175, "conv3d_winograd_weight_transform": 175, "conv3dattr": 149, "conv_1": 89, "conv_block": 159, "conv_bn": 159, "conv_mod": 137, "conv_nod": 182, "conv_np": 96, "conv_wmma_accumul": 89, "conv_wmma_accumulator_1": 89, "convei": [16, 27], "conveni": [4, 35, 59, 84, 113, 148, 150, 155, 157, 166, 176, 183], "convent": [2, 9, 20, 34, 35, 63, 65, 136, 140, 144, 148, 149, 150, 157, 160, 163, 166, 168, 169, 171, 175, 177], "converg": [96, 97, 98, 99, 100, 101, 187, 189], "convers": [4, 5, 9, 11, 30, 56, 59, 65, 67, 75, 148, 150, 151, 155, 160, 166, 170, 171, 173, 180], "convert": [1, 2, 5, 43, 44, 46, 47, 48, 49, 51, 52, 53, 56, 59, 63, 65, 68, 72, 74, 97, 98, 99, 100, 109, 113, 128, 135, 136, 137, 144, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 164, 165, 166, 168, 169, 171, 174, 175, 177, 180, 189, 192, 195, 196, 197, 198], "convert_config": 155, "convert_func": 137, "convert_map": 148, "convert_model_dense_to_spars": [97, 100], "convert_to_const": 75, "convert_to_expr": 150, "convert_to_graphdef": 75, "convert_variables_to_constants_v2": 75, "convertblockstoopaqu": 174, "convertforloopstoseri": 174, "convertlayout": [59, 85, 151, 160], "convertssa": 174, "converttodataflow": 151, "convf": 89, "convgemm": [158, 175], "convini": 56, "convnet": 181, "convolut": [18, 25, 34, 37, 58, 73, 74, 87, 91, 94, 95, 97, 98, 99, 100, 102, 103, 116, 117, 119, 121, 136, 137, 148, 149, 152, 156, 158, 159, 160, 161, 170, 175, 180, 181, 182, 186, 189, 197], "convolution_algorithm": [158, 175], "convolution_infer": 137, "convolution_inference_weight_transform": 137, "convolution_inference_without_weight_transform": 137, "convolv": [148, 149, 158], "convtranspose1d": 148, "coo": [137, 157], "cool": [16, 135, 136], "cooldown": [141, 150, 166], "cooldown_interv": [135, 136], "cooldown_interval_m": [141, 150, 166], "cooper": [96, 104, 156, 159, 175], "coopert": 88, "coord": 47, "coord_start": 161, "coordin": [12, 35, 88, 149, 156, 157, 158, 161, 175], "coordinate_transformation_mod": [149, 156, 158, 175], "copi": [1, 5, 8, 17, 36, 41, 44, 61, 72, 80, 135, 140, 141, 144, 148, 149, 150, 151, 157, 163, 164, 169, 171, 173, 174, 175, 195], "coprocsync": 174, "copy_from_worker_0": 163, "copy_shape_func": 157, "copy_to_worker_0": 163, "copydatafromto": 1, "copyfrom": [36, 164], "copyintrin": 174, "copysign": 173, "copyto": [36, 121, 164], "cora": [115, 184], "cora_v2": 115, "coragraphdataset": 115, "core": [5, 14, 25, 26, 32, 43, 56, 64, 73, 74, 89, 90, 97, 98, 99, 100, 101, 108, 113, 132, 135, 136, 137, 145, 148, 149, 173, 178, 187, 188, 195], "coreml": [54, 55, 137, 155, 186, 193], "coremltool": [46, 155], "corner": [156, 158, 175], "correct": [5, 8, 9, 17, 27, 31, 36, 43, 48, 56, 62, 79, 85, 97, 101, 104, 105, 106, 107, 108, 113, 123, 124, 128, 132, 136, 153, 160, 162, 171, 173, 177, 179, 183, 188, 191, 195], "correctli": [4, 9, 12, 16, 32, 79, 80, 96, 97, 98, 99, 100, 101, 139, 148, 149, 150, 153, 155, 157, 171, 174, 175, 187], "correl": [158, 175], "correlation_nchw": 175, "correpsond": [171, 173], "correspond": [0, 1, 2, 3, 4, 5, 6, 8, 11, 13, 20, 23, 25, 27, 36, 37, 43, 52, 59, 63, 79, 80, 106, 128, 135, 136, 141, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 164, 166, 168, 169, 171, 173, 174, 175, 177, 179, 180, 182, 183, 188, 195], "correspondingli": 4, "corresspond": 169, "cortex": 184, "cosh": [149, 157, 169, 173, 175], "cosin": 148, "cost": [11, 60, 61, 66, 67, 69, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 130, 135, 136, 141, 145, 150, 151, 160, 166, 169, 187, 188, 192, 198], "cost_estim": 160, "cost_model": [96, 145, 187], "cost_model_fil": 135, "costestim": 160, "costmodel": [135, 145], "costmodeltyp": 145, "could": [2, 3, 4, 5, 8, 9, 11, 12, 14, 17, 35, 36, 53, 57, 66, 74, 84, 99, 105, 113, 115, 128, 132, 135, 144, 145, 146, 148, 150, 151, 157, 160, 161, 166, 171, 174, 176, 179, 180, 182, 197], "count": [2, 36, 85, 93, 135, 136, 141, 145, 148, 149, 151, 152, 157, 159, 160, 161, 165, 169, 170, 173, 175], "count_include_pad": [111, 149, 158, 175], "count_lay": 152, "count_op": 159, "counter": [20, 93, 136, 150, 165], "counterpart": [35, 151, 160], "countnod": 165, "coupl": [7, 8, 139], "cours": [20, 35, 39, 160, 186, 190, 194], "cout": 35, "covari": 148, "cover": [2, 4, 11, 16, 18, 22, 36, 37, 56, 79, 84, 89, 101, 104, 118, 128, 148, 149, 171, 175, 180, 181, 189, 192, 195, 197], "coverag": 9, "covert": 198, "cp": [17, 56, 61, 62, 66, 70, 71, 80, 109, 132, 160, 173], "cpp": [56, 148, 157, 169, 173], "cpp_deploi": 60, "cpp_rpc": 80, "cpp_rtvm": 56, "cpprefer": [169, 173], "cpptest": 132, "cprint": 171, "cpu": [1, 2, 3, 16, 31, 34, 36, 44, 46, 47, 49, 50, 51, 52, 53, 57, 58, 59, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 82, 87, 88, 91, 93, 94, 95, 98, 99, 102, 103, 106, 107, 110, 111, 113, 119, 121, 128, 133, 135, 136, 139, 145, 148, 149, 150, 152, 153, 159, 160, 162, 164, 166, 168, 173, 174, 175, 184, 186, 187, 188, 189, 192, 196, 197, 198, 199], "cpu_count": 135, "cpu_implement": 79, "cpu_out": 43, "cpu_ver": 168, "cpuinfo": [67, 68, 69, 195], "cpunam": [109, 168], "cr": 49, "craft": [13, 58], "crash": [56, 96, 98, 157], "creat": [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 13, 14, 16, 17, 19, 23, 26, 35, 36, 37, 41, 44, 52, 53, 56, 58, 59, 61, 63, 64, 65, 66, 67, 69, 70, 71, 80, 88, 89, 97, 98, 99, 100, 104, 105, 106, 107, 109, 110, 111, 123, 124, 125, 127, 128, 132, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 166, 168, 169, 170, 171, 173, 174, 175, 176, 179, 180, 182, 188, 189, 193, 197, 199], "create_barri": 173, "create_bound_attribut": 174, "create_conv2d": 199, "create_dataflowblock_pass": 151, "create_dylib": 137, "create_empti": 150, "create_execut": 137, "create_executor": [48, 49, 50, 153, 157], "create_ffi_error": 140, "create_function_pass": [151, 160, 174], "create_graph": [52, 120, 137], "create_group": 169, "create_llvm": [128, 137], "create_measure_batch": 136, "create_module_pass": 176, "create_prim_func": [2, 30, 169, 196], "create_schedul": [37, 61, 82, 88, 89, 90, 104, 109, 121, 123, 124, 125, 128, 129, 136, 139, 169, 173, 175, 177, 188, 191, 195], "create_sdaccel_afi": 61, "create_shar": [3, 57, 61, 66, 67, 69, 97, 99, 105, 107, 137, 195], "create_staticlib": 137, "create_task": 135, "create_tir_paged_kv_cach": 113, "create_tvmjs_wasm": 137, "create_workload": [118, 119, 159], "createfunctionpass": [4, 35], "createimporttre": 3, "createmoduleindex": 3, "createmodulepass": 4, "createprimfuncpass": 4, "createstream": 1, "createview": 151, "creation": [2, 4, 11, 16, 19, 21, 24, 26, 28, 29, 36, 65, 130, 136, 148, 173, 175, 176, 186], "creator": [144, 154], "crhsla": 137, "criteria": 148, "critic": [9, 17, 88, 97, 98, 99, 100, 105, 106, 107], "crop": [149, 156, 158, 175], "crop_and_res": [156, 175], "crop_begin_list": 175, "crop_end_list": 175, "crop_height": 175, "crop_siz": [156, 175], "crop_width": 175, "cross": [5, 18, 19, 20, 22, 56, 58, 64, 65, 68, 97, 99, 105, 107, 112, 114, 130, 132, 136, 137, 146, 148, 149, 162, 168, 174, 182, 186, 189, 197], "cross_build": 80, "cross_compil": [58, 68, 137], "cross_compilation_and_rpc": [64, 109, 114, 186], "cross_entropi": 158, "cross_entropy_with_logit": [149, 158], "crossentropi": [149, 158], "crucial": [11, 18, 20, 25, 27, 31, 171], "cse": [151, 176], "cse_thresh": 171, "cse_var_1": [82, 89, 90, 96, 123, 124, 125, 128, 187, 191, 195], "cse_var_10": 89, "cse_var_2": [89, 90, 96, 124, 125, 187, 195], "cse_var_3": [89, 90, 96, 187, 195], "cse_var_4": [89, 90, 96, 195], "cse_var_5": 89, "cse_var_6": 89, "cse_var_7": 89, "cse_var_8": 89, "cse_var_9": 89, "csourc": 36, "csource_binary_op_": 36, "csource_binary_op_1d": 36, "csource_binary_op_2d": 36, "csource_module_cr": 36, "csource_relay_contrib_src": 36, "csourcemodul": 36, "csourcemodulecodegenbas": 36, "csr": [3, 115, 137, 158, 175], "csr_matrix": [115, 158], "csrmm": 175, "csrmv": 175, "csrndarrai": [137, 175], "csrplaceholderop": 137, "cstdint": 36, "cstdlib": 36, "cstring": 36, "csv": 165, "ct": [98, 188], "ctx": [4, 82, 84, 146, 149, 151, 160, 174, 176, 196], "ctx_address": 3, "ctxt": 168, "ctype": [16, 47], "cu": 148, "cubic": [149, 156], "cubic_alpha": [149, 156], "cubic_exclud": [149, 156], "cubin": 137, "cubla": [20, 36, 75, 110, 113, 118, 132], "cublasdispatch": 110, "cuda": [1, 2, 3, 5, 8, 34, 37, 43, 48, 52, 65, 70, 75, 79, 96, 98, 104, 106, 110, 111, 113, 119, 123, 124, 131, 132, 133, 135, 137, 139, 141, 145, 148, 150, 151, 153, 162, 164, 168, 173, 174, 188, 191, 193, 195, 196, 198], "cuda_a": 196, "cuda_b": 196, "cuda_cal": 37, "cuda_device_api": 37, "cuda_mod": [3, 196], "cuda_modul": 37, "cuda_path": 137, "cuda_tgt": 139, "cuda_vers": 132, "cudadeviceapi": [1, 37], "cudagetdevic": 37, "cudamalloc": 37, "cudamemcpi": 37, "cudamodul": 2, "cudamodulenod": 37, "cudathreadentri": 37, "cudawrappedfunc": 37, "cudnn": [36, 104, 121, 132], "culaunchkernel": 37, "cumprod": [34, 149, 157, 175], "cumprod_strategi": 34, "cumprod_strategy_cuda": 34, "cumproduct": 175, "cumsum": [34, 124, 148, 149, 157, 169, 175], "cumsum_strategi": 34, "cumsum_strategy_cuda": 34, "cumul": [34, 148, 149, 157, 175], "cur_depth": 85, "cur_pass_ctx": [4, 85], "curesult": 37, "curl": 17, "curli": 180, "curr_nod": 36, "curr_subgraph": 36, "curr_subgraph_": 36, "current": [1, 2, 10, 11, 13, 16, 35, 36, 47, 49, 51, 53, 58, 59, 61, 66, 67, 68, 69, 70, 71, 72, 73, 79, 82, 84, 90, 101, 105, 106, 107, 108, 109, 110, 115, 124, 131, 132, 135, 136, 137, 144, 145, 147, 148, 150, 151, 154, 155, 157, 158, 163, 168, 169, 171, 173, 174, 175, 176, 177, 180, 183, 189, 193, 195, 197, 198], "current_block_is_dataflow": 147, "current_layout": 175, "curv": [67, 105, 106, 107, 108, 136, 189], "cuspars": [157, 175], "custom": [2, 4, 8, 18, 19, 22, 41, 44, 56, 81, 83, 84, 94, 95, 112, 114, 119, 121, 130, 135, 136, 143, 145, 148, 150, 151, 155, 160, 162, 171, 174, 176, 182, 186, 195, 197], "custom_addr": 162, "custom_convert_map": [148, 155], "custom_pass": 84, "custom_path": 137, "customiz": [41, 151], "customize_legalize_add": 151, "customize_legalize_map": 151, "customize_opt": [110, 114, 186], "custompipelin": [84, 176], "customsketch": 101, "customsketchrul": [101, 135], "custream": 37, "cut": 15, "cutlass": [132, 135, 151], "cutlass_build": 119, "cv2": [47, 72], "cvtcolor": 72, "cwd": 137, "cycl": [4, 93, 144, 146, 195, 196], "cython": [16, 66, 104, 105, 106, 107, 188], "cython3": [104, 105, 106, 107, 188], "cyulin": 115, "czf": 80, "czvf": 17, "d": [34, 36, 56, 73, 75, 80, 89, 97, 98, 99, 100, 113, 115, 121, 148, 149, 156, 157, 158, 161, 173, 175, 179, 180, 191, 198], "d0": 157, "d1": [157, 158], "d2": [157, 158], "d3515ea31fce37df25c44b9fc6df3249": 97, "d37380659057397544e056461ea3bad3": 100, "d78e8eb6021c4cdda0ad7775d10f751a": 98, "d_": [75, 101, 175], "d_0": 175, "d_1": [149, 158, 175], "d_2": [149, 158, 175], "d_after": 85, "d_befor": 85, "d_cp": 149, "d_data": 58, "d_k": [149, 175], "d_n": 158, "daemon": 56, "dag": [96, 97, 98, 99, 100, 101, 135, 144, 187], "dai": [9, 10, 17], "daili": 7, "dandroid_abi": 56, "dandroid_platform": 56, "daniil": [56, 67], "darknet": [54, 55, 155, 161, 186], "darknet_lib": 47, "darknet_url": 47, "darwin": 47, "darwin20": 59, "data": [0, 1, 3, 4, 5, 12, 18, 20, 22, 27, 30, 34, 36, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 118, 119, 120, 123, 124, 125, 128, 129, 135, 136, 137, 139, 141, 144, 145, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 171, 173, 174, 175, 176, 177, 178, 180, 182, 185, 187, 191, 192, 193, 195, 196], "data1": [158, 175], "data2": [158, 175], "data_1": 96, "data_align": [89, 173, 175], "data_bit": [158, 175], "data_data": 175, "data_dep_optim": [75, 97, 100, 152, 160], "data_entry_": 36, "data_grad": 149, "data_im2col": 97, "data_indic": 175, "data_indptr": 175, "data_io": 171, "data_io_loc": 171, "data_layout": [111, 148, 149, 156, 158, 159, 175, 182], "data_mean": [149, 158], "data_n_0": 119, "data_np": 96, "data_or_idx": 173, "data_pack": [98, 100], "data_pad": [97, 98, 100], "data_set": 136, "data_shap": [58, 70, 71, 89, 108, 118, 119, 149, 159, 193], "data_tvm": [96, 97, 98, 99, 100, 105, 106, 107, 108], "data_typ": [58, 137, 148], "data_var": [149, 158], "databas": [111, 136, 145, 151, 176], "databasetyp": 145, "dataclass": 113, "dataflow": [18, 22, 23, 43, 44, 110, 111, 113, 127, 146, 147, 150, 151, 159, 171, 178, 199], "dataflow_pattern": [142, 160, 182], "dataflowblock": [146, 147, 150, 151], "dataflowblock_pass": 151, "dataflowblocknod": 150, "dataflowblockpass": 151, "dataflowblockrewrit": 150, "dataflowscop": 147, "dataflowuseinplacecal": 151, "dataflowvar": [148, 150], "dataflowvarnod": 150, "datapar": [128, 191], "datapoint": 141, "dataproduc": 173, "dataset": [64, 66, 149, 158], "dataspac": 1, "datatyp": [0, 34, 67, 81, 144, 148, 149, 150, 155, 158, 160, 173, 174, 175, 179], "datatypeimm": 150, "datatypeimmnod": 150, "datatypepattern": 154, "date": [17, 51, 58, 67, 68, 70, 71, 72, 73, 173], "db": 136, "dbuild_shared_lib": 132, "dce": [146, 151], "dcgan": 159, "dcmake_build_typ": 80, "dcmake_c_compil": [56, 62], "dcmake_cxx_compil": [56, 62, 132], "dcmake_cxx_compiler_launch": 132, "dcmake_find_root_path": [56, 62], "dcmake_find_root_path_mode_librari": [56, 62], "dcmake_find_root_path_mode_program": [56, 62], "dcmake_system_nam": 62, "dcmake_system_vers": [56, 62], "dcmake_toolchain_fil": [56, 80], "dcp": 61, "dcr": [158, 175], "dd": 148, "ddo": [75, 97, 100], "ddr": 66, "de": 148, "dead": [2, 4, 151, 160, 171], "deadcodeelimin": [113, 146, 151, 160], "deadlin": 17, "deal": [2, 20, 56, 108, 160], "dealloc": 1, "deb": 65, "debt": [9, 11], "debug": [4, 5, 6, 16, 33, 56, 79, 90, 96, 97, 98, 99, 100, 104, 105, 106, 107, 118, 122, 126, 132, 135, 136, 137, 148, 153, 157, 159, 160, 163, 165, 169, 171, 186, 187, 188, 199], "debug_copy_from": 163, "debug_cr": 0, "debug_executor": 0, "debug_func": 148, "debug_get_from_remot": 163, "debug_get_output": 141, "debug_mask": 171, "debug_skip_region": 169, "debugg": 2, "decent": 66, "decentr": 5, "decid": [4, 6, 9, 75, 136, 160, 175], "decis": [10, 12, 15, 20, 135, 171, 183], "decision_provid": 171, "decision_typ": 171, "decl": 36, "decl_buff": [89, 128, 173, 175], "decl_stream": 36, "decl_tensor_intrin": [89, 128, 169], "declar": [1, 4, 6, 8, 27, 30, 34, 36, 58, 66, 96, 97, 98, 99, 100, 101, 121, 123, 125, 128, 135, 136, 137, 146, 148, 150, 154, 157, 169, 171, 173, 175, 177, 180, 187, 191, 195], "declaration_conv2d_transpose_impl": 175, "declaration_conv3d_transpose_impl": 175, "declare_funct": 150, "declbuff": 173, "decod": [44, 135, 136, 161], "decoded_logit": 44, "decodejpeg": 52, "decompos": [149, 151, 158, 171, 175], "decompose_pad": 171, "decompose_reduct": [31, 171], "decomposeopsforinfer": [149, 151], "decomposeopsfortrain": [149, 151], "decompress": [53, 74], "deconstruct": [179, 180, 183], "deconv": 159, "deconv2d": 159, "deconv2d_bn_relu": 159, "decor": [2, 4, 7, 8, 30, 34, 58, 79, 85, 132, 135, 136, 137, 138, 143, 145, 151, 157, 159, 160, 162, 169, 174, 176, 177, 187, 188], "decoratedevicescop": 174, "decreas": [56, 85], "dedic": [6, 56, 106, 169], "deduc": 151, "deduct": [147, 148, 149], "dedupl": 146, "deep": [2, 4, 5, 36, 37, 48, 56, 62, 65, 66, 70, 71, 73, 86, 138, 145, 151, 155, 159, 181, 184, 186, 189, 190, 192, 194, 196, 197], "deep_div": [24, 29, 186], "deepcopi": [75, 172], "deeper": [3, 12, 27, 188, 190, 195], "deepest": 152, "deeplearn": 65, "deepli": [170, 190], "def": [4, 5, 7, 8, 12, 13, 18, 20, 22, 23, 25, 27, 30, 31, 34, 37, 43, 44, 52, 53, 63, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 82, 84, 85, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 119, 120, 121, 123, 124, 125, 128, 129, 135, 136, 137, 138, 143, 145, 146, 147, 148, 150, 151, 152, 155, 160, 162, 166, 168, 169, 170, 171, 173, 174, 176, 177, 179, 180, 182, 183, 187, 188, 191, 193, 195, 196, 199], "def_var": 147, "default": [0, 1, 4, 6, 7, 13, 14, 17, 32, 34, 35, 37, 43, 46, 47, 48, 49, 51, 52, 53, 58, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 82, 84, 90, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 115, 118, 119, 120, 123, 125, 132, 135, 136, 137, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 171, 173, 174, 175, 176, 182, 183, 185, 188, 189, 193, 197, 198], "default_buffer_param": 169, "default_build": [148, 150], "default_context": 4, "default_dtyp": 155, "default_funct": [37, 139], "default_function_kernel": [96, 123], "default_lib0": 199, "default_lib1": 199, "default_lib2": 199, "default_module_load": 136, "default_param": 135, "default_test_target": [79, 159], "default_trace_act": [169, 173], "default_typ": 155, "default_valu": [157, 175], "defaultgpuschedul": 174, "defaultvizpars": 137, "defer": [147, 148], "defin": [1, 2, 4, 5, 6, 7, 8, 22, 23, 30, 35, 36, 37, 44, 49, 56, 58, 62, 64, 66, 67, 68, 75, 79, 82, 84, 85, 88, 90, 102, 109, 110, 121, 129, 135, 136, 137, 141, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 155, 157, 158, 160, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 180, 181, 183, 188, 191, 192, 195, 196, 199], "definable_tir_vars_in_struct_info": 146, "define_annot": [136, 188], "define_knob": [104, 136, 188], "define_reord": [136, 188], "define_split": [104, 136], "define_xxxxx": 188, "defined_symbolic_var": 146, "definit": [2, 4, 9, 22, 30, 34, 35, 36, 37, 49, 52, 56, 67, 79, 97, 98, 99, 100, 104, 105, 106, 107, 108, 125, 127, 128, 135, 136, 137, 143, 144, 145, 146, 148, 149, 150, 151, 157, 159, 160, 169, 172, 179, 180, 187, 188, 192], "defint": 156, "deform": [158, 175], "deformable_conv2d": 158, "deformable_conv2d_nchw": 175, "deformable_conv2d_nhwc": 175, "deformable_group": [158, 175], "defualt": 175, "defunction": 160, "defus": 160, "defuseop": 160, "deg": 115, "degre": [75, 115], "del": 96, "delai": 160, "deleg": [120, 145], "delet": [4, 17, 136, 137, 144], "delin": [27, 30], "deliv": [17, 56], "deliveri": 184, "delv": [27, 31], "demand": [36, 101, 151], "demo": [4, 53, 73, 90, 120, 131, 133, 151, 160, 174, 199], "demo_android": 69, "demo_ctx": 85, "demo_mrvl": 64, "demo_vitis_ai": 66, "demonstr": [11, 12, 20, 22, 25, 30, 36, 43, 44, 56, 59, 64, 65, 67, 68, 69, 70, 71, 73, 75, 84, 85, 87, 88, 89, 90, 94, 96, 97, 98, 99, 100, 101, 102, 104, 110, 111, 113, 115, 118, 119, 120, 123, 124, 127, 128, 146, 164, 180, 182, 187, 188, 189, 192, 195, 196, 197, 199], "demostr": 54, "denial": 185, "denois": 148, "denot": [58, 136, 144, 149, 150, 151, 156, 158, 170, 175, 180], "dens": [56, 58, 59, 65, 67, 68, 72, 85, 107, 115, 118, 119, 152, 155, 157, 158, 159, 160, 175, 182, 193], "dense_alter_layout": 175, "dense_cubla": 75, "dense_data": [158, 175], "dense_leg": 175, "dense_mat": 158, "dense_nopack": [75, 108], "dense_pack": [108, 175], "dense_shap": [157, 175], "dense_weight": 119, "dense_weight_nam": 75, "densenet": 159, "densenet_s": 159, "densetospars": [75, 160], "densiti": [75, 101], "dep": 66, "depend": [3, 4, 5, 16, 18, 20, 35, 36, 37, 47, 49, 56, 58, 59, 60, 63, 64, 66, 79, 80, 84, 88, 120, 127, 135, 139, 146, 148, 149, 151, 155, 157, 160, 162, 165, 171, 173, 174, 175, 176, 178, 180, 183, 185, 189, 191, 195, 197], "depict": [20, 27, 90], "depkind": 171, "depli": [56, 67, 68], "deploi": [3, 5, 16, 36, 41, 44, 46, 47, 48, 49, 50, 51, 52, 53, 61, 66, 72, 77, 86, 133, 141, 186, 192, 193, 196], "deploy": [2, 9, 36, 37, 41, 43, 56, 66, 110, 111, 113, 133, 155, 192], "deploy_graph": 57, "deploy_lib": [57, 66, 99, 193], "deploy_lib_edg": 66, "deploy_model": [77, 186], "deploy_model_on_adreno": [67, 77, 186], "deploy_model_on_adreno_tvmc": [68, 77, 186], "deploy_model_on_android": [69, 77, 186], "deploy_model_on_nano": [70, 77, 186], "deploy_model_on_rasp": [71, 77, 186], "deploy_object_detection_pytorch": [72, 77, 186], "deploy_param": 57, "deploy_prequant": [73, 77, 186], "deploy_prequantized_tflit": [74, 77, 186], "deploy_spars": [75, 77, 186], "deploymenmt": 56, "deposit": 16, "deprec": [17, 49, 51, 67, 68, 70, 71, 72, 73, 115, 135, 137, 157, 160, 164, 168, 171, 174], "deprecationwarn": [49, 67, 70, 71, 72, 115], "depth": [0, 4, 17, 58, 85, 149, 151, 157, 158, 171, 175], "depth_to_spac": [158, 175], "depthwis": [34, 104, 105, 106, 107, 158, 175], "depthwise_channel": 159, "depthwise_conv2d": 136, "depthwise_conv2d_backward_input_nhwc": 175, "depthwise_conv2d_backward_weight_nhwc": 175, "depthwise_conv2d_infer_layout": 175, "depthwise_conv2d_nchw": 175, "depthwise_conv2d_nchwc": 175, "depthwise_conv2d_nhwc": 175, "depthwise_conv2d_nhwc_output": 97, "depthwiseconv": 104, "depthwiseconv2d": 99, "dequant": [73, 149, 160, 175], "deriv": [34, 36, 145, 146, 150, 159, 170, 179], "derive_call_ret_struct_info": 146, "derive_func": 150, "derived_object": 145, "desc": [135, 173], "descend": [36, 148, 149, 157, 161, 165, 175], "descent": 135, "describ": [1, 2, 4, 7, 12, 30, 34, 35, 36, 53, 56, 62, 64, 69, 76, 81, 101, 104, 121, 124, 125, 128, 135, 137, 144, 148, 149, 151, 154, 156, 157, 158, 160, 171, 173, 175, 178, 180, 182, 183, 184, 188, 192, 199], "descript": [1, 2, 9, 12, 13, 16, 17, 34, 35, 64, 124, 135, 144, 146, 168, 169, 180, 195, 197], "descriptor": 6, "descropt": 12, "deseri": [36, 135, 165, 171], "deserialize_arg": 136, "design": [3, 5, 7, 9, 10, 11, 12, 15, 20, 22, 25, 27, 43, 56, 63, 66, 82, 86, 88, 89, 101, 110, 113, 130, 145, 148, 149, 150, 151, 175, 176, 178, 179, 184, 189, 195, 196, 197, 198], "design_spac": 145, "desir": [5, 56, 67, 75, 149, 150, 151, 158, 159, 166, 175, 177, 180, 195, 198], "desired_layout": [85, 151, 160, 175], "desired_model_path": 198, "desk": 52, "desktop": 62, "despit": [5, 30, 153, 180], "dest": 160, "destin": [1, 20, 66, 145, 148, 149, 150, 155, 157, 163, 171, 173, 174, 175], "destroi": 69, "destruct": 164, "destructor": 164, "det": 47, "detach": [17, 72, 148], "detach_param": [43, 111, 148], "detached_mod": 148, "detail": [2, 3, 4, 15, 16, 17, 20, 23, 25, 27, 34, 35, 37, 39, 43, 50, 52, 53, 56, 66, 73, 74, 84, 101, 104, 109, 115, 120, 123, 132, 133, 136, 137, 140, 147, 148, 149, 150, 151, 158, 166, 169, 171, 173, 175, 179, 180, 183, 191, 192, 197], "detault": 159, "detect": [2, 47, 68, 76, 77, 90, 132, 136, 150, 151, 152, 161, 168, 169, 170, 171, 174, 186, 195], "detect_buffer_access_lca": 170, "detect_featur": 152, "detect_recurs": 146, "detection_box": 161, "detection_class": 161, "detection_scor": 161, "determin": [1, 34, 36, 37, 49, 58, 65, 75, 79, 135, 136, 137, 143, 148, 149, 151, 152, 157, 160, 170, 171, 173, 175, 179, 183], "determinist": [136, 188], "determinst": 2, "determint": 175, "detriment": 160, "dev": [0, 3, 8, 17, 36, 37, 43, 46, 47, 48, 51, 52, 58, 59, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 79, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 121, 123, 124, 128, 141, 147, 150, 152, 162, 164, 165, 166, 168, 173, 175, 187, 189, 191, 193, 195], "dev0": [17, 119], "dev1": 119, "dev_from": 1, "dev_id": [152, 162, 164], "dev_lib_cl": 67, "dev_mblob": 3, "dev_modul": 195, "dev_to": 1, "dev_typ": [162, 164], "devc": 3, "develop": [1, 2, 4, 5, 7, 9, 10, 12, 13, 15, 17, 34, 36, 37, 39, 41, 44, 46, 58, 61, 62, 65, 66, 69, 80, 81, 84, 85, 97, 105, 107, 110, 118, 130, 131, 140, 147, 178, 180, 184], "deviat": [12, 16, 66, 137, 141, 149, 157, 158, 159, 175, 189], "devic": [0, 2, 4, 5, 6, 9, 12, 36, 37, 39, 41, 43, 44, 56, 58, 61, 64, 65, 66, 67, 68, 72, 73, 74, 75, 79, 90, 93, 96, 98, 100, 101, 104, 108, 110, 111, 113, 115, 118, 119, 123, 128, 132, 133, 135, 136, 137, 139, 141, 148, 149, 150, 151, 152, 153, 157, 159, 160, 162, 163, 164, 165, 166, 168, 171, 173, 174, 182, 187, 188, 189, 192, 193, 195, 196, 197], "device_api": [1, 37], "device_copi": [157, 160], "device_id": [1, 36, 37, 163, 173], "device_index": 0, "device_kei": [58, 97, 99, 105, 107], "device_mesh": 149, "device_metr": 165, "device_typ": [36, 168, 173], "device_type_id": 141, "deviceapi": 37, "deviceapimanag": 1, "deviceattrkind": 1, "devicemesh": 149, "devicenam": 1, "devicewrapp": 165, "df": [3, 146, 147, 152, 160, 172], "dfb": [146, 150], "dfg": 127, "dfpattern": [151, 154, 160, 199], "dfpatterncallback": [154, 182], "dft": [157, 175], "dgl_g": 115, "dglbackend": 115, "dh": 148, "di": [99, 123], "diag_ctx": 4, "diagnos": 7, "diagnost": [4, 140], "diagnosticcontext": 4, "diagnosticerror": 140, "diagon": [148, 149, 157, 175], "diagram": 192, "dialect": [22, 27, 30, 73, 181], "dict": [75, 113, 115, 120, 135, 136, 137, 139, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 160, 162, 165, 166, 168, 169, 170, 171, 172, 175, 176], "dict_to_tupl": 72, "dictattr": [144, 149, 150], "dictionari": [1, 4, 49, 59, 64, 68, 85, 136, 137, 139, 141, 144, 148, 150, 153, 154, 155, 157, 160, 166, 168, 169, 175, 182], "did": [9, 36, 37, 43, 85, 189, 191, 197, 199], "didn": [9, 35, 56], "dietcod": 184, "diff_num": 85, "differ": [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 16, 17, 18, 20, 22, 27, 30, 31, 34, 35, 36, 37, 38, 43, 44, 46, 47, 49, 54, 58, 62, 66, 67, 70, 71, 73, 74, 75, 76, 82, 84, 85, 88, 90, 94, 96, 97, 98, 99, 100, 102, 109, 110, 111, 113, 120, 123, 125, 127, 128, 132, 134, 136, 137, 141, 144, 148, 149, 150, 151, 157, 158, 159, 160, 165, 166, 168, 169, 171, 172, 173, 174, 175, 176, 179, 180, 183, 187, 188, 189, 191, 192, 196, 197], "differenti": [12, 34, 149, 151, 159, 160, 169, 175, 178, 183, 192], "differnt": 115, "difficult": [36, 39, 75, 80], "difficulti": [105, 106, 107], "diffus": 148, "dig": [3, 75, 190], "digraph": 137, "dilat": [34, 96, 104, 111, 127, 137, 148, 149, 156, 158, 160, 175], "dilatedinput": 175, "dilation2d": 156, "dilation2d_nchw": 175, "dilation2d_nhwc": 175, "dilation_depth": 175, "dilation_h": [137, 175], "dilation_height": 175, "dilation_valu": [158, 175], "dilation_w": [137, 175], "dilation_width": 175, "dim": [136, 137, 148, 151, 157, 158, 175, 177], "dim_match": 159, "dimens": [18, 53, 65, 88, 89, 90, 115, 123, 124, 128, 136, 139, 148, 149, 150, 153, 155, 157, 158, 160, 161, 163, 168, 169, 171, 173, 175, 183, 189, 195, 197, 199], "dimension": [2, 25, 56, 90, 136, 148, 149, 157, 158, 173, 174, 175, 189, 191, 195], "diplomat": 11, "dir": [69, 137, 150, 162], "dir_path": [53, 74], "direciton": 151, "direct": [2, 11, 18, 27, 136, 148, 149, 150, 151, 160, 166, 170, 174, 179], "directli": [0, 2, 4, 5, 13, 14, 16, 22, 27, 34, 36, 37, 41, 43, 44, 80, 82, 89, 101, 115, 123, 127, 128, 135, 136, 137, 141, 143, 146, 148, 149, 150, 151, 153, 155, 157, 160, 162, 168, 169, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 188, 195, 197], "directori": [3, 6, 17, 32, 61, 65, 66, 67, 69, 70, 71, 79, 80, 104, 105, 106, 107, 109, 118, 131, 132, 137, 145, 148, 150, 151, 162, 188, 199], "directory_path": 119, "directorycreatedpastatexit": 137, "dirnam": [53, 61, 74, 75, 119], "disabl": [4, 7, 8, 23, 32, 67, 68, 79, 84, 85, 99, 110, 113, 137, 157, 158, 160, 161, 162, 168, 171, 176, 189], "disable_pred": [31, 169, 171], "disabled_pass": [4, 58, 72, 84, 157, 160, 176], "disagr": 9, "disambigu": [148, 149, 158], "disassembl": 6, "disbl": 8, "discard": [14, 135, 136, 150, 166], "disclos": 185, "disco": 142, "disco_work": 163, "discontinu": 195, "discourag": 9, "discov": 188, "discret": [17, 137, 157, 175], "discrib": 150, "discuss": [7, 8, 9, 10, 11, 12, 13, 16, 39, 49, 56, 75, 84, 90, 105, 106, 107, 135, 155, 160, 173, 175, 179, 180, 183, 185, 189, 195, 197, 199], "disk": [16, 36, 46, 49, 65, 66, 151, 189], "dispatch": [2, 4, 5, 34, 35, 41, 44, 111, 113, 135, 136, 145, 148, 150, 157, 160, 168, 188], "dispatch_context": 104, "dispatch_ctx": 136, "dispatchcontext": [135, 136], "displac": [158, 175], "displai": [7, 67, 122, 126, 136, 168, 176, 186], "disregard": 30, "dist": 17, "distanc": [157, 175], "distil": [75, 97, 98, 99, 100, 136], "distinct": [8, 27, 148, 149, 171, 179, 180], "distinguish": [106, 179, 180, 183], "distribut": [97, 105, 106, 107, 113, 131, 136, 137, 148, 163, 171], "div": [169, 173, 175], "dive": [2, 23, 25, 37, 58], "divers": [9, 41, 44, 130, 136], "diversity_filter_ratio": 136, "divid": [12, 37, 62, 65, 82, 123, 137, 148, 149, 157, 158, 169, 173, 175], "divio": 12, "divis": [136, 148, 149, 157, 158, 160, 169, 171, 173, 175], "divtomul": 160, "dj": [99, 123], "dk": [157, 158], "dl": [43, 110], "dldatatyp": [36, 163], "dldevic": [36, 163], "dldevicetyp": [1, 36], "dlight": [43, 113, 130], "dlopen": [47, 168], "dlpack": [36, 41, 44, 62, 121, 141, 148, 164, 173, 175, 195], "dltensor": [5, 36, 63, 121, 148, 150, 163, 164, 166, 173, 174, 175], "dltensor_addr": 63, "dltype": 0, "dmachine_nam": [56, 62], "dmlc": [4, 36, 46, 47, 48, 49, 50, 51, 52, 53, 67, 69, 70, 71, 72, 73, 74, 97, 115, 148, 195], "dmodul": 163, "dndebug": 132, "dnnl": [36, 151], "do": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 23, 32, 34, 35, 36, 37, 47, 56, 59, 62, 63, 65, 66, 69, 70, 71, 75, 79, 80, 82, 84, 85, 86, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 115, 118, 123, 124, 133, 135, 136, 137, 138, 140, 144, 145, 146, 148, 149, 150, 151, 153, 155, 157, 160, 162, 168, 169, 171, 172, 173, 174, 175, 177, 179, 180, 182, 183, 187, 188, 189, 191, 193, 195, 196, 197, 198], "do_fork": 136, "do_nms_sort": 47, "do_trac": 72, "doc": [4, 7, 8, 12, 15, 17, 32, 34, 39, 46, 50, 52, 64, 65, 80, 115, 134, 137, 148, 149, 157, 158, 171, 173, 175, 195], "docker": [8, 56, 58, 62, 66, 69, 90, 133, 195], "dockerfil": [7, 66, 69], "docstr": [12, 79, 157, 175], "document": [1, 2, 3, 8, 10, 11, 13, 15, 16, 34, 35, 49, 50, 56, 59, 64, 65, 80, 113, 155, 157, 158, 173, 178, 179, 180, 181, 183, 184, 189, 198], "docurl": 50, "doe": [1, 5, 7, 12, 20, 34, 35, 36, 52, 62, 65, 73, 74, 79, 82, 96, 97, 98, 99, 100, 109, 121, 123, 131, 132, 135, 136, 144, 146, 148, 149, 150, 152, 155, 156, 157, 158, 160, 161, 162, 168, 169, 170, 171, 173, 174, 175, 176, 179, 182, 183, 185, 187, 189, 192, 193, 197], "doesn": [35, 52, 66, 67, 75, 80, 84, 85, 97, 99, 127, 151, 153, 157, 171, 173, 179, 182, 191, 195], "dog": 47, "dom": [138, 169, 173], "dom_kind": 138, "dom_map": 175, "domain": [2, 22, 27, 30, 90, 124, 125, 136, 138, 169, 171, 173, 175, 192, 195, 196], "domin": [46, 48, 49, 50, 53, 154, 160], "dominatorpattern": 154, "don": [3, 4, 5, 7, 16, 17, 27, 32, 35, 39, 59, 61, 69, 84, 85, 115, 127, 141, 151, 160, 162, 169, 171, 176, 198], "done": [1, 4, 5, 6, 14, 17, 23, 37, 58, 62, 65, 73, 79, 82, 84, 105, 106, 107, 108, 115, 123, 128, 131, 135, 136, 148, 149, 150, 151, 157, 158, 160, 177, 188, 189, 195, 197], "dont": [17, 75], "door": 2, "dot": [73, 74, 90, 121, 127, 128, 137, 148, 173, 187, 188, 195], "dot_file_path": 127, "dot_plott": 137, "dotgraph": 137, "dotplott": 137, "dotvizpars": 137, "doubl": [5, 56, 120, 132, 158, 161, 169, 174, 179], "double_buff": 169, "down": [8, 89, 128, 130, 135, 136, 158, 163, 174, 175, 188, 192], "down_proj": 113, "downcast": [2, 4, 34, 35, 36], "download": [8, 16, 17, 22, 23, 30, 31, 43, 44, 46, 48, 49, 50, 51, 58, 64, 65, 66, 67, 68, 69, 70, 71, 73, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 162, 168, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199], "download_linked_modul": 162, "download_model": 75, "download_testdata": [46, 47, 48, 49, 50, 51, 52, 53, 67, 69, 70, 71, 72, 73, 74, 85, 115, 189, 197], "downsampl": 159, "downscale_freq_shift": 148, "downstream": [2, 132], "doxygen": [8, 12], "doyxgen": 134, "dp": [148, 170], "dp4a": 173, "dpackedfunc": 163, "dpexecutor": 108, "dptuner": 108, "dpu": [64, 66], "dpu_target": 66, "dpucadf8h": 66, "dpucahx8h": 66, "dpucahx8l": 66, "dpucvdx8g": 66, "dpucvdx8h": 66, "dpuczdx8g": 66, "dq": 160, "dr": 90, "draft": 17, "draw": [79, 137], "draw_detect": 47, "drawn": 137, "dref": 163, "drive": [9, 25, 127, 130, 132], "driven": [127, 130, 136, 151], "driver": [1, 2, 3, 5, 37, 56, 64, 67, 68, 80, 109, 131, 142, 150, 153, 195, 196, 197, 198], "drop": [2, 16, 149, 151], "dropout": [149, 158, 162], "dropout_raw": 158, "dropoutattr": 149, "ds_store": 17, "dshape": [108, 175], "dsl": [2, 43, 196], "dso": [3, 36], "dso_binari": 67, "dso_binary_path": 67, "dso_librari": 3, "dsomodul": 36, "dst": [150, 155, 156, 163, 171, 173, 174, 175], "dst_devic": [149, 157], "dst_index": 173, "dst_layout": [157, 173, 175], "dst_ptr": 173, "dst_shape": 173, "dst_stride": 173, "dst_vdevic": 149, "dtensor": 149, "dtensorstructinfo": 149, "dtype": [0, 5, 18, 20, 22, 23, 27, 30, 31, 34, 36, 37, 43, 44, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 61, 65, 67, 69, 72, 74, 75, 80, 88, 89, 90, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 113, 121, 123, 124, 128, 129, 136, 137, 141, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 169, 171, 173, 174, 175, 177, 187, 188, 189, 191, 195, 196], "dtype_bits_hint": 173, "dtype_code_hint": 173, "dtype_dict": [52, 53, 74, 141, 148, 155], "dtype_lik": 157, "dtype_or_expr": 150, "dtype_str": 173, "due": [27, 48, 72, 73, 82, 88, 89, 90, 128, 132, 146, 150, 170, 195], "dummi": [43, 73, 80, 136, 149], "dummy_data": 75, "dummy_input": [68, 75], "dummy_out": 75, "dummyglobalinfo": 144, "dump": [36, 56, 73, 80, 84, 96, 97, 98, 99, 100, 101, 118, 120, 135, 144, 145, 154, 157, 169, 176], "dump_prun": 145, "dump_root": 0, "dump_workload_to_dag_log": 135, "dumpmachin": 137, "duplic": [43, 120, 136, 151, 169, 171, 172, 175], "duplicated_": 120, "duplicated_id": 120, "duplicated_typ": 120, "durat": [96, 98, 135, 136, 150, 162, 165, 166], "durationnod": 165, "dure": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 39, 49, 65, 66, 69, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 115, 118, 132, 135, 136, 137, 140, 141, 144, 145, 148, 149, 150, 151, 153, 155, 156, 157, 158, 160, 162, 165, 170, 171, 173, 174, 175, 176, 183, 187, 188, 193, 195], "duse_graph_executor": 69, "duse_llvm": 69, "duse_rpc": 69, "duse_sort": 69, "duse_vulkan": 69, "dw": [148, 158], "dw1": 169, "dw2": 169, "dweight": 119, "dx": [148, 149, 156, 158], "dxf": 80, "dxwxh": 158, "dy": [149, 156, 158], "dylib": [59, 132], "dyn": 175, "dyn_shape_lib": 30, "dyn_strided_slic": 149, "dyn_te_func": 30, "dynam": [0, 1, 2, 3, 5, 18, 20, 34, 35, 49, 62, 65, 80, 97, 98, 99, 100, 108, 135, 136, 137, 148, 149, 150, 151, 155, 157, 159, 160, 166, 168, 174, 175, 184, 192, 197], "dynamic_strided_slic": [149, 175], "dynamicshapemodul": 30, "dynamictemodul": 30, "dynamictostat": 160, "dynamo": 148, "dynamo_capture_subgraph": 148, "dyntensortyp": 150, "dz": [149, 158], "e": [1, 2, 4, 5, 7, 8, 9, 11, 12, 16, 17, 18, 22, 32, 34, 35, 36, 39, 43, 44, 49, 52, 56, 58, 66, 69, 70, 71, 75, 79, 80, 82, 97, 98, 99, 100, 109, 110, 111, 113, 115, 129, 131, 132, 135, 136, 137, 138, 144, 145, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 160, 166, 168, 171, 173, 174, 175, 177, 179, 180, 182, 183, 185, 187, 191, 192, 193, 197], "e2c58e45605443e8e4dd0ce586633232": 97, "e2e_opt_model": [111, 114, 186], "e5": 108, "e9ak845b3d7f2c126dab53632aea8e012d89477": 62, "e_out": 149, "each": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 16, 17, 20, 27, 30, 31, 34, 35, 36, 37, 43, 44, 49, 56, 58, 64, 65, 67, 75, 79, 80, 82, 84, 85, 88, 89, 97, 98, 99, 100, 106, 110, 111, 113, 135, 136, 137, 139, 140, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 182, 183, 189, 191, 192, 195, 196, 197, 198], "eager": [155, 199], "eagerli": 148, "earli": [8, 56, 80, 135, 136, 161, 189], "earlier": [5, 34, 97, 98, 99, 100, 150, 151, 166, 195], "early_stop": [67, 68, 105, 106, 107, 108, 135, 136, 189], "eas": [4, 5, 16, 30, 36, 66, 84], "easi": [2, 4, 5, 16, 37, 41, 70, 71, 75, 110, 120, 127, 128, 155, 178, 179, 195, 199], "easier": [9, 22, 34, 75, 120, 155, 180, 188], "easiest": [62, 89, 132, 159], "easili": [4, 5, 6, 9, 12, 13, 34, 36, 79, 80, 104, 110, 125, 128, 157, 179, 182, 183], "ebug": 56, "ec2": [61, 74, 108], "ec95d1874524b128a6afe8f7bff0c738": 97, "echo": [56, 66, 69, 132], "ecosystem": [18, 41, 44, 130], "ecr": 7, "edb6ed22a801665946c63d650ab9a0b23d98e1b1": 53, "eddi": [105, 106, 107, 108], "edg": [18, 41, 65, 66, 113, 120, 127, 137, 149, 158, 175, 180], "edge_attr": 137, "edit": [17, 70, 71, 109, 132, 198], "editor": [14, 198], "edu": [93, 115], "educ": [9, 11], "effect": [4, 9, 12, 20, 48, 67, 79, 82, 84, 85, 127, 133, 135, 136, 146, 148, 149, 150, 151, 154, 160, 163, 165, 169, 173, 175, 195], "effect_mod": 113, "effici": [4, 12, 18, 34, 56, 66, 67, 80, 90, 104, 125, 128, 136, 138, 149, 153, 160, 171, 180, 184, 188, 192, 195], "effort": [6, 9, 10, 35, 36, 147, 151], "eg": 168, "egor": [56, 59], "egyptian": [48, 67, 73, 189, 197], "ehnahc": 56, "ehsan": 191, "eight": 66, "einstein": [149, 157, 175], "einsum": [149, 157, 171, 175], "einsumattr": 149, "either": [0, 1, 2, 4, 6, 7, 36, 37, 79, 82, 93, 108, 135, 137, 138, 141, 143, 144, 148, 149, 150, 151, 156, 157, 158, 160, 169, 171, 173, 175, 177, 180, 182, 183, 196], "elabor": 183, "elaps": 198, "eleg": 5, "elem_idx": 101, "elem_offs": 173, "elem_offset": [89, 149, 171, 173, 174, 175], "element": [2, 5, 12, 18, 19, 26, 27, 30, 31, 34, 37, 56, 89, 125, 128, 129, 137, 143, 144, 148, 149, 155, 157, 158, 162, 169, 171, 173, 174, 175, 177, 180, 182, 188, 193, 195], "element_typ": 144, "elementwis": [2, 101, 138, 149, 151, 154, 157, 175, 180, 182], "elementwise_affin": 148, "elemwis": 191, "elemwise_shape_func": 34, "elemwise_sum": [175, 191], "eleph": [52, 74], "elepha": 52, "elf": [62, 137], "elif": [8, 47, 67, 69, 97, 98, 99, 100, 105, 106, 107, 108, 189], "elig": 174, "elimin": [2, 4, 80, 84, 151, 160, 171, 174, 180, 185], "eliminatecommonsubexpr": [84, 151, 157, 160, 176], "elit": 136, "elite_num": 136, "ell": 137, "ellips": 137, "els": [3, 8, 34, 35, 36, 47, 48, 53, 61, 67, 68, 69, 70, 71, 72, 74, 75, 85, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 113, 115, 123, 148, 149, 155, 157, 158, 175, 177, 178, 189, 195], "else_cas": 173, "else_scop": 157, "elsewher": [149, 180], "email": 17, "emb": [3, 5, 12, 113, 155, 182], "embed": [5, 27, 41, 44, 62, 133, 148, 160, 178, 192, 196], "embed_token": 113, "embedding_dim": 148, "embodi": 30, "emconfig": 61, "emconfigutil": 61, "emerg": 43, "emit": [22, 89, 128, 147, 148, 150, 151, 160], "emit_cal": 150, "emit_err_ctx": 151, "emit_func_output": [22, 147], "emit_goto": 150, "emit_if": 150, "emit_init": 148, "emit_norm": 147, "emit_output": [22, 147], "emit_ret": 150, "emit_t": [22, 147], "empathi": 9, "emphas": 120, "emploi": [4, 18, 30, 31, 180], "empow": [18, 130], "empti": [0, 4, 6, 7, 20, 27, 36, 47, 52, 84, 85, 96, 101, 104, 118, 119, 120, 137, 148, 150, 151, 152, 155, 157, 160, 163, 164, 169, 170, 171, 173, 174, 175, 176, 179, 180, 187, 188, 189, 193], "empty2": 179, "empty_row_ind": 157, "emptypolici": 135, "emscripten": 137, "emul": [62, 157, 169, 178], "en": [7, 169, 173], "enabl": [0, 2, 3, 4, 6, 7, 10, 11, 16, 18, 20, 32, 36, 41, 44, 56, 58, 59, 61, 62, 64, 65, 66, 68, 69, 70, 79, 80, 84, 85, 97, 101, 105, 107, 109, 110, 113, 118, 130, 135, 136, 139, 144, 145, 148, 150, 151, 153, 155, 157, 158, 159, 160, 162, 168, 169, 171, 172, 174, 175, 180, 181, 187, 192, 193, 198], "enable_autoschedul": 198, "enable_check": 171, "enable_clml": [67, 68], "enable_cpu_cache_flush": [97, 100, 108, 135, 136, 189], "enable_cse_tir": 174, "enable_disaggreg": 113, "enable_fold": 176, "enable_log": 162, "enable_vector": 174, "enable_warn": 151, "enabled_extens": 175, "enabled_target": [79, 159], "encapsul": [2, 30, 41, 44], "enclos": [169, 171], "encod": [47, 113, 115, 135, 136, 158, 160, 161, 162, 175, 179, 180, 183], "encompass": [25, 27, 43], "encount": [35, 65, 84, 160], "encourag": [7, 9, 10, 11, 12, 16, 37, 74, 90, 127, 169, 177, 185, 195], "encrypt": [162, 185], "end": [0, 2, 5, 12, 16, 18, 19, 30, 32, 34, 35, 36, 37, 48, 54, 61, 67, 74, 75, 80, 97, 98, 99, 100, 104, 105, 106, 107, 108, 112, 113, 114, 121, 130, 132, 135, 136, 137, 141, 144, 147, 148, 149, 150, 151, 154, 157, 158, 160, 162, 169, 171, 173, 175, 178, 179, 180, 181, 184, 186, 187, 188, 191, 192, 198], "end_checkpoint": 149, "end_column": 144, "end_d": [156, 175], "end_forward_func": 113, "end_h": [149, 156, 175], "end_lin": 144, "end_nod": 137, "end_profile_intrins": 173, "end_scop": 147, "end_to_end": 141, "end_w": [149, 156, 175], "end_x": 175, "endif": [36, 69, 96, 123], "endl": 35, "endpoint": [4, 35, 162], "endswith": [53, 74], "energi": 59, "enforc": [8, 9, 16, 34, 148, 171, 183], "engag": 12, "engin": [36, 64, 65, 110, 130, 137, 153, 155, 192], "english": 52, "enhanc": [62, 80, 90, 195], "eniron": 80, "enlarg": 159, "enough": [12, 17, 97, 98, 99, 100, 104, 105, 107, 141, 151, 159, 176, 183, 188, 190], "enqueu": 56, "enrich": [9, 73, 130], "ensur": [7, 8, 9, 11, 12, 17, 20, 30, 32, 35, 43, 80, 124, 128, 132, 141, 146, 147, 148, 149, 151, 169, 171, 173, 174, 179, 183, 189, 197], "ensure_zero_offset": 149, "enter": [4, 69, 79, 84, 85, 132, 143, 180], "enter_pass_ctx": [4, 85, 143, 176], "enter_postproc": 171, "enterpasscontext": 4, "enterpris": 132, "enterwithscop": 4, "entir": [0, 2, 34, 36, 56, 62, 75, 79, 130, 133, 149, 160, 165, 180], "entireti": 43, "entiti": [136, 188], "entity_map": 136, "entranc": 3, "entri": [0, 1, 2, 4, 36, 56, 81, 135, 136, 144, 148, 149, 151, 157, 160, 161, 174, 175, 180, 192], "entry_funct": [151, 160], "entry_nam": [88, 89, 90, 96, 101, 104, 109, 165, 187, 195], "entrypoint": 163, "enum": [0, 1, 51, 67, 68, 70, 71, 72, 73, 113, 179], "enumer": [59, 67, 72, 97, 98, 99, 100, 105, 106, 107, 108, 113, 115, 135, 136, 150, 156, 158, 166, 175, 188, 189], "env": [22, 56, 132, 136, 137, 144, 162], "env_linear": 22, "env_thread": [89, 96, 124, 169, 174, 191], "envfunc": [144, 150], "enviromnet": 56, "environ": [1, 2, 12, 15, 41, 44, 61, 62, 65, 66, 67, 68, 70, 71, 73, 74, 79, 80, 97, 99, 108, 109, 110, 111, 113, 115, 131, 132, 135, 136, 137, 144, 148, 150, 157, 159, 162, 168, 171, 174, 180, 185, 188, 193, 195], "eos_token_id": 113, "ep": [98, 100, 148, 158, 159, 182], "epsilon": [85, 111, 148, 149, 158, 159, 175, 182, 193], "eq": 173, "equal": [13, 73, 74, 84, 123, 135, 136, 137, 141, 144, 145, 146, 148, 149, 150, 157, 160, 161, 163, 164, 173, 175, 180, 183, 195], "equal_const_int": 175, "equat": [157, 158], "equip": 90, "equival": [2, 20, 27, 30, 51, 67, 68, 70, 71, 72, 73, 96, 121, 123, 141, 148, 149, 151, 155, 157, 158, 160, 169, 173, 175, 182, 187, 188, 191], "eras": [2, 5, 146, 195], "erase_to_well_defin": 146, "erf": [65, 148, 149, 157, 169, 173, 175], "erf_leg": 175, "err": [47, 151], "err_inst": 140, "errno": 131, "error": [2, 4, 6, 7, 9, 15, 16, 27, 31, 35, 36, 49, 78, 79, 97, 98, 99, 100, 104, 105, 106, 107, 131, 132, 135, 136, 137, 142, 144, 148, 149, 150, 151, 155, 157, 160, 166, 168, 169, 170, 171, 173, 175, 176, 179, 183, 195], "error_if_no_function_matches_regex": 176, "error_msg": 135, "error_no": [135, 136, 188], "error_render_level": 171, "errortest": 13, "errortyp": 13, "especi": [7, 8, 9, 10, 14, 16, 37, 80, 132, 180], "essenti": [2, 4, 11, 16, 34, 35, 56, 75, 82, 146, 148, 177, 195], "essesti": 56, "est": 146, "establish": [11, 31], "estim": [75, 97, 98, 99, 100, 135, 136, 146, 157, 160, 170], "estimate_memory_usag": 146, "estimate_tir_flop": 170, "et": [148, 149, 151, 158, 159], "eta": [48, 160], "etaexpand": 160, "etc": [1, 4, 17, 20, 36, 37, 41, 56, 66, 67, 68, 73, 85, 105, 106, 107, 113, 136, 146, 148, 150, 151, 155, 157, 161, 171, 175, 176, 193], "etcher": 66, "eval": [43, 46, 48, 51, 67, 68, 69, 70, 71, 72, 73, 111, 115], "evalu": [31, 35, 48, 49, 50, 66, 67, 68, 69, 80, 88, 89, 90, 101, 104, 105, 106, 107, 108, 109, 136, 149, 150, 153, 157, 159, 160, 166, 171, 173, 175, 176, 179, 180, 189, 199], "evaluate_addit": 195, "evaluate_dynamic_shap": 30, "evaluate_oper": 195, "evaluate_perform": 108, "even": [4, 5, 9, 16, 34, 41, 73, 74, 75, 79, 82, 120, 132, 135, 136, 146, 148, 149, 150, 160, 166, 169, 177, 179, 180, 183, 191], "evenli": [149, 157, 171, 175], "event": [8, 9, 85], "eventu": 148, "ever": [168, 182], "everi": [4, 9, 10, 35, 36, 41, 43, 79, 82, 89, 90, 96, 98, 104, 105, 106, 107, 125, 127, 135, 136, 146, 147, 149, 150, 151, 160, 166, 171, 174, 175, 177, 179, 183], "everyon": [9, 10, 11, 15, 32, 73, 130], "everyth": [52, 75, 79, 110, 111, 150, 179], "everywher": [41, 44, 157], "evid": 195, "evolut": 11, "evolutionari": [135, 145], "evolutionary_search": 135, "evolutionarysearch": 145, "evolv": [4, 9, 10, 181], "ewise_fma": 149, "ex": [44, 85, 93, 110, 111, 113, 150, 166], "exact": [137, 160, 174], "exactli": [9, 16, 17, 49, 74, 148, 157, 160, 171, 175, 182], "examin": [31, 146, 151, 174, 179, 182, 191, 199], "exampl": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 34, 36, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 79, 80, 82, 83, 88, 89, 91, 93, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 114, 115, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 132, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 186, 187, 188, 189, 193, 194, 196, 197], "example_arg": [43, 111, 148], "example_ext_runtim": 36, "examplejon": 36, "examplejson": 36, "examplejson_module_cr": 36, "examplejsoncompil": 36, "examplejsonmodul": 36, "exce": 151, "excel": 110, "except": [1, 2, 4, 5, 6, 7, 8, 32, 34, 52, 53, 66, 74, 75, 80, 89, 106, 110, 121, 136, 137, 140, 144, 148, 149, 151, 157, 158, 171, 173, 175, 179, 180], "exchang": [5, 41, 44, 185, 196], "excis": 175, "exclud": [4, 30, 79, 109, 136, 137, 149, 156, 157, 158, 175], "exclude_target": 79, "exclus": [34, 90, 136, 137, 148, 149, 157, 175, 195], "exec": [43, 67, 69, 70, 71, 80, 97, 105, 106, 107, 109, 153, 163], "exec_mod": 150, "exec_nam": 137, "execbuild": 150, "execut": [0, 1, 4, 5, 6, 19, 24, 25, 29, 30, 31, 36, 37, 39, 44, 45, 55, 57, 62, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 77, 79, 80, 83, 84, 85, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 121, 125, 126, 128, 132, 135, 137, 140, 141, 143, 145, 148, 149, 150, 151, 153, 157, 159, 160, 162, 163, 165, 166, 169, 171, 173, 174, 176, 180, 185, 186, 187, 188, 193, 194, 195, 197, 198, 199], "executor": [49, 50, 53, 56, 58, 97, 98, 99, 100, 108, 115, 116, 117, 141, 152, 153, 157, 186, 189, 193], "executor_factori": 157, "executor_kind": 159, "executorfactorymodul": 157, "exercis": [75, 171], "exist": [2, 4, 7, 8, 9, 11, 12, 13, 15, 16, 17, 20, 31, 34, 39, 41, 44, 52, 56, 65, 67, 72, 75, 79, 85, 97, 98, 99, 100, 105, 106, 107, 110, 111, 113, 118, 125, 132, 135, 136, 141, 148, 149, 153, 155, 159, 160, 163, 164, 168, 170, 171, 173, 175, 176, 179, 182, 183, 197], "exist_ok": 119, "exit": [4, 39, 79, 82, 84, 85, 137, 143], "exit_pass_ctx": [4, 85, 143, 176], "exitpasscontext": 4, "exitwithscop": 4, "exp": [65, 80, 97, 98, 99, 100, 148, 149, 157, 158, 169, 173, 175, 177, 191], "exp10": 173, "exp2": 173, "expand": [2, 79, 125, 136, 148, 149, 151, 157, 160, 171, 175, 182, 188, 195], "expand_constructor": 160, "expand_dim": [50, 51, 53, 65, 67, 72, 73, 85, 146, 149, 151, 157, 160, 175, 189, 197], "expand_global_var": 160, "expand_lik": 175, "expanddimsattr": 149, "expandmatmulofsum": 151, "expandtupleargu": 151, "expans": 151, "expect": [7, 9, 11, 13, 27, 34, 35, 36, 56, 66, 67, 69, 73, 74, 79, 85, 97, 104, 105, 106, 107, 121, 135, 136, 137, 144, 148, 149, 151, 154, 156, 157, 158, 160, 173, 174, 175, 179, 180, 189, 195, 197], "expect_tx": 173, "expens": [135, 151, 160, 189], "experess": 160, "experi": [5, 12, 56, 90, 182], "experienc": [105, 106, 107], "experiment": [52, 61, 75, 115, 137, 149, 153, 158, 169, 170], "experss": [169, 173], "expertis": 11, "expir": 140, "explain": [0, 5, 12, 15, 20, 35, 56, 66, 97, 98, 99, 100, 148, 149, 157, 188, 198], "explan": [12, 16, 27, 56, 180], "explanatori": 34, "explicit": [3, 34, 36, 65, 79, 99, 151, 158, 160, 169, 171, 174, 175, 180, 183, 188, 191], "explicit_read_region": 171, "explicitli": [4, 6, 10, 11, 20, 59, 79, 84, 85, 89, 115, 144, 160, 171, 177, 179, 180, 183, 197], "explict": 160, "explor": [5, 12, 56, 101, 145, 182, 188, 189, 195, 197], "expon": [158, 169, 173, 175], "exponenti": [148, 157, 169, 173, 175], "export": [0, 2, 16, 17, 22, 34, 36, 43, 44, 53, 56, 58, 59, 61, 65, 66, 67, 69, 70, 71, 80, 97, 105, 107, 109, 111, 115, 119, 132, 137, 141, 148, 150, 155, 162, 195], "export_cc": 119, "export_directori": 199, "export_librari": [0, 3, 36, 57, 58, 59, 65, 66, 67, 69, 70, 71, 97, 99, 105, 107, 109, 119, 137, 141, 150, 162, 193, 195], "export_node_renamed_model_path": 155, "export_renamed_c_graph_path": 155, "export_rt_mod_fil": 66, "export_runtime_modul": 66, "export_tvm": [22, 23, 43, 44, 110, 113, 148], "exported_program": [43, 111, 148], "exportedprogram": 148, "expos": [1, 2, 4, 5, 37, 56, 59, 131, 135, 148, 171, 173, 174, 195, 197], "expr": [4, 5, 8, 23, 34, 35, 52, 85, 111, 115, 120, 137, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 169, 171, 172, 173, 175, 177, 180, 182, 193], "expr_deep_equ": 170, "expr_functor": [23, 36, 150], "expr_id": 152, "expres": 160, "express": [2, 9, 15, 20, 22, 26, 34, 37, 66, 79, 84, 86, 97, 98, 99, 100, 123, 126, 129, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 169, 170, 171, 173, 174, 175, 178, 183, 186, 187, 188, 190, 192, 194, 196], "exprfunctor": [35, 150, 157], "exprmut": [35, 84, 150, 157], "exprop": 37, "exprpattern": 154, "exprrv": 171, "exprvisitor": [35, 36, 150, 157], "ext": [36, 64, 66, 110, 127, 148], "ext_dev": [162, 164], "ext_func_args_": 36, "ext_func_bodi": 36, "ext_func_id": 36, "ext_func_id_": 36, "ext_mod": [113, 148], "extend": [17, 35, 59, 65, 79, 86, 128, 157, 176, 183, 199], "extend_tvm": [83, 84, 186], "extens": [4, 5, 6, 16, 56, 58, 59, 81, 85, 90, 162, 164, 169, 175, 178, 179, 182, 195], "extent": [82, 89, 135, 136, 144, 171, 173, 174], "exterior": [149, 156], "extern": [0, 2, 4, 22, 27, 34, 36, 43, 59, 96, 116, 117, 122, 123, 126, 128, 137, 141, 148, 150, 151, 160, 169, 173, 174, 175, 180, 182, 186], "extern_modul": 151, "extern_op": [121, 126, 186], "extern_primfunc": 169, "extern_scop": 118, "external_mod": [110, 148], "externfunc": [149, 150, 151], "externfuncnod": 150, "externmodul": [113, 148, 151], "externop": 169, "externopnod": 177, "extra": [17, 26, 43, 90, 104, 105, 106, 107, 128, 135, 136, 148, 150, 155, 159, 166, 171, 175, 188], "extra_get_item_param": 151, "extra_set_item_param": 151, "extract": [30, 36, 37, 50, 56, 65, 67, 105, 106, 107, 108, 115, 135, 136, 145, 148, 149, 151, 152, 157, 160, 174, 175, 180, 189, 197], "extract_from": 145, "extract_from_program": [67, 105, 106, 107, 108, 189], "extract_fused_funct": 152, "extract_intermdeiate_expr": 152, "extract_task": [97, 98, 99, 100, 135], "extractal": [53, 74], "extractedtask": 145, "extractfusedfunct": 152, "extractor": 145, "extractprimfuncconst": 174, "extrapol": [156, 175], "extrapolation_valu": [149, 156, 175], "extrem": [9, 32, 36, 80], "extrema": [156, 175], "ey": [149, 175], "eye_lik": 149, "f": [4, 5, 34, 35, 37, 46, 47, 48, 50, 51, 52, 53, 66, 69, 70, 71, 73, 75, 82, 84, 88, 89, 90, 104, 113, 115, 120, 121, 123, 132, 135, 140, 144, 149, 150, 158, 162, 169, 171, 173, 175, 179, 180, 182, 189, 191, 195, 197, 199], "f0": 9, "f07e228ef5f642b386d23a62df615e7b": 100, "f1": [4, 9, 61, 151, 160], "f19692ed81d032b1697c08adee62f9a5": 98, "f1b4831e3be69b07c24f46d5513875ea": 97, "f2": [4, 9, 151, 160], "f3": 9, "f37072fd": 51, "f4": 9, "f42xxxxxxxxxxxxxxx": 17, "f439cb5bb83bb6be4824f8b51c68bdb9": 97, "f_": 158, "f_act": 175, "f_out": 179, "f_preproc": [150, 166], "f_run": 145, "f_timer": 31, "face": [5, 8, 9, 10, 76, 77, 113, 136, 148, 150, 171, 186], "facil": [32, 179], "facilit": [12, 18, 25, 31, 150, 166, 191], "fact": [3, 5, 89, 152, 169, 179, 180, 183], "facto": 148, "factor": [15, 31, 37, 88, 89, 90, 96, 104, 105, 106, 107, 109, 124, 125, 128, 136, 141, 148, 149, 156, 158, 159, 169, 171, 173, 175, 179, 187, 188, 189, 195, 196], "factor_axi": [169, 171], "factor_of": 173, "factori": [2, 141, 157], "factory_modul": 157, "fadd": [37, 61, 173, 175, 195], "fadd1": 195, "fadd1_dev": 195, "fadd2": 195, "fadd_cl": 195, "fadd_dev": 61, "fadd_parallel": 195, "fadd_vector": 195, "fail": [4, 7, 11, 13, 16, 17, 39, 48, 49, 67, 79, 132, 145, 146, 148, 149, 155, 159, 171, 183], "fail_l0": 146, "fail_l1": 146, "fail_l2": 146, "failur": [8, 79, 90, 146], "fair": [110, 141], "fake": [75, 136, 152], "fake_quantization_to_integ": 160, "fakequantizationtointeg": 160, "fall": [4, 79, 118, 135, 136, 150, 166, 188, 189], "fallback": [4, 36, 43, 56, 75, 104, 108, 110, 113, 136, 160], "fallback_split": 136, "fallback_with_reference_log": 136, "fallbackconfigent": 136, "fallbackcontext": 136, "falloc": 66, "fals": [6, 7, 31, 34, 35, 36, 37, 65, 67, 68, 69, 70, 71, 75, 85, 97, 100, 105, 107, 108, 109, 110, 111, 113, 115, 119, 121, 132, 135, 136, 137, 138, 139, 141, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 171, 172, 173, 174, 175, 176, 177, 180, 182, 183, 193, 195], "false_branch": [35, 150, 154, 157], "false_offset": 150, "false_valu": 173, "famili": 64, "familiar": [11, 30, 46, 104, 129, 190], "fan": 198, "far": [5, 34, 36, 82, 128, 169, 171, 177, 195], "fashion": [5, 34, 35, 177], "fast": [8, 16, 73, 74, 75, 96, 97, 98, 99, 100, 101, 110, 151, 157, 158, 160, 175, 181, 187, 195], "fast_erf": 175, "fast_exp": 175, "fast_softmax": [158, 175], "fast_tanh": 175, "faster": [0, 7, 62, 73, 74, 75, 90, 97, 98, 99, 100, 104, 105, 106, 107, 135, 136, 158, 169, 170, 173, 175, 188, 189, 197, 198], "fastest": [5, 73, 74, 197], "fastmath": [157, 160], "fastmathtransform": 151, "fatal": [13, 36, 52, 140], "favor": [4, 8, 9, 11, 16, 25, 30], "favorit": [73, 198], "fb": 53, "fbgemm": 73, "fc": [152, 159], "fc1": [22, 23, 43, 44, 110], "fc1_bia": [22, 23, 43, 44, 85, 110, 193], "fc1_weight": [22, 23, 43, 44, 85, 110, 193], "fc2": [22, 23, 43, 44, 110], "fc2_bia": [22, 23, 43, 44], "fc2_weight": [22, 23, 43, 44, 110], "fcache_": 37, "fchollet": 48, "fcodegen": 151, "fcombin": [129, 169, 173], "fcompil": [3, 57, 66, 67, 69, 97, 99, 105, 107, 137, 150, 162], "fcomput": [30, 169, 175], "fcond": 174, "fcuda": 123, "fdefault": 168, "fdor": 175, "fea": 136, "feasibl": [30, 36], "feat": 115, "featur": [2, 8, 9, 11, 12, 16, 17, 19, 20, 25, 35, 36, 56, 61, 75, 80, 84, 89, 97, 98, 99, 100, 105, 106, 107, 108, 109, 115, 135, 136, 137, 145, 151, 152, 156, 158, 159, 161, 169, 171, 175, 178, 179, 182, 183, 187, 189, 192, 195, 197, 199], "feature_strid": 161, "feature_typ": [67, 105, 106, 107, 108, 136, 189], "featureextractor": 145, "feed": [53, 82, 113, 141, 148, 169], "feedback": [5, 9, 17], "feel": [2, 9, 13, 36, 105, 106, 107, 185, 189, 197], "fellow": [9, 10], "feng": [89, 196], "fetch": [4, 14, 16, 34, 56, 96, 104, 136, 145, 150, 163, 166, 195], "fetch_head": 14, "few": [2, 4, 5, 8, 17, 23, 34, 35, 43, 67, 75, 115, 136, 151, 153, 182, 183, 188], "fewer": [150, 159, 166], "fewshottun": 151, "ff": [88, 96, 98, 99, 100], "ffi": [13, 37, 104, 105, 106, 107, 135, 140, 157, 188], "ffn": 113, "fgener": 168, "fget_item": 151, "fget_param": 151, "fgradient": 149, "fgraph": 152, "fi": [0, 75, 88, 104], "fident": [129, 169, 173], "field": [2, 4, 5, 12, 34, 35, 63, 113, 135, 136, 144, 146, 149, 150, 153, 154, 157, 158, 160, 161, 166, 173, 175, 179, 180, 181], "field_nam": 175, "fifo": [158, 175], "fifo_buff": [158, 175], "fig": 56, "figur": [2, 36, 44, 56, 80, 88, 89, 90, 127, 195], "file": [0, 3, 5, 7, 8, 12, 13, 14, 16, 17, 24, 29, 32, 34, 36, 45, 49, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 77, 80, 83, 91, 95, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 114, 115, 117, 119, 126, 132, 135, 136, 137, 145, 148, 150, 155, 160, 162, 163, 169, 171, 180, 183, 185, 186, 188, 189, 193, 194, 195, 197, 198, 199], "file_list": [137, 150], "file_nam": [3, 32, 135, 150], "file_out": 136, "filelock": 137, "filenam": [32, 97, 99, 105, 107, 135, 136, 137], "filep": 36, "filepath": [136, 148], "filetyp": 68, "fill": [36, 56, 65, 68, 90, 135, 137, 144, 148, 149, 150, 156, 157, 160, 171, 173, 174, 175, 183, 195], "fill_empty_row": 157, "fill_frag": [89, 173], "fill_mod": 68, "fill_network_box": 47, "fill_valu": [148, 149, 157, 175], "fillcolor": 137, "filt": 175, "filter": [56, 79, 88, 89, 123, 136, 148, 151, 157, 158, 159, 160, 161, 169, 173, 174, 175], "filter_1": 123, "filter_depth": 175, "filter_height": 175, "filter_list": 159, "filter_s": 175, "filter_width": 175, "final": [2, 3, 4, 5, 8, 9, 14, 16, 17, 25, 34, 35, 36, 37, 52, 56, 59, 65, 74, 85, 88, 89, 104, 105, 106, 107, 108, 111, 113, 123, 127, 128, 136, 147, 148, 150, 151, 153, 157, 158, 159, 168, 169, 175, 180, 182, 192], "final_indic": [169, 173], "finalize_modul": 119, "find": [4, 5, 7, 9, 12, 16, 17, 35, 36, 37, 39, 53, 60, 66, 67, 68, 69, 75, 82, 85, 86, 93, 96, 104, 105, 106, 107, 109, 123, 131, 132, 135, 136, 137, 141, 144, 146, 148, 149, 152, 153, 154, 156, 157, 160, 170, 175, 182, 183, 187, 188, 189, 192, 195, 197, 198], "find_anchor_block": 170, "find_clang": 137, "find_cuda_path": 137, "find_first_valid": 119, "find_librari": 58, "find_lld": 137, "find_rocm_path": 137, "find_width8": 82, "fine": [14, 35, 75, 135, 146, 189, 197], "fineprun": 75, "finish": [4, 7, 36, 62, 66, 85, 108, 115, 136, 145, 163, 169, 174, 188, 192, 195], "finit": [149, 157, 169, 173, 175, 179, 180], "fintrin": 174, "firefli": 109, "first": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 14, 15, 16, 17, 18, 20, 23, 25, 31, 34, 35, 36, 37, 39, 41, 43, 44, 47, 56, 65, 66, 69, 70, 71, 73, 75, 79, 80, 82, 84, 88, 89, 90, 97, 98, 99, 100, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 120, 123, 124, 125, 127, 128, 132, 135, 136, 137, 141, 144, 146, 148, 149, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 166, 169, 170, 171, 173, 175, 177, 179, 180, 182, 185, 188, 193, 195, 196, 197, 198], "first_ord": [159, 160], "firstli": 3, "firstordergradi": 160, "fit": [5, 49, 90, 177, 195, 199], "five": [115, 175], "fix": [3, 7, 14, 16, 17, 27, 34, 39, 79, 88, 89, 120, 128, 135, 157, 175, 180, 185, 188], "fixed_point_multipli": [157, 175], "fixed_point_multiply_per_axi": 175, "fixm": 97, "fixpoint": [152, 183], "fixtur": 79, "fl": 182, "flag": [0, 6, 12, 32, 36, 58, 59, 65, 132, 138, 141, 146, 148, 149, 156, 162, 171, 173, 174, 175, 176, 195, 197], "flaki": [8, 16, 110], "flash": 16, "flashinf": 132, "flat": [148, 149, 157, 173, 175], "flatbuff": 53, "flatc": 53, "flatten": [0, 2, 4, 34, 82, 90, 135, 136, 146, 148, 149, 151, 157, 158, 173, 174, 175, 179, 180, 183, 193, 195], "flatten_0": 68, "flatten_data": 0, "flattenatrousconv": 160, "flattenbuff": 174, "flattened_indic": 173, "flavor": 57, "flegal": 151, "flexibl": [18, 22, 34, 60, 84, 110, 111, 121, 133, 136, 160, 176, 180, 183, 189], "flexibleshapedispatch": 160, "flexibli": [4, 125, 183], "flip": [67, 115, 149, 175], "flip_sin_to_co": 148, "flipattr": 149, "float": [2, 5, 36, 56, 63, 65, 66, 72, 73, 89, 90, 96, 113, 115, 121, 123, 128, 135, 136, 137, 145, 148, 149, 150, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 173, 175, 183, 191, 195, 199], "float16": [6, 56, 67, 68, 80, 89, 113, 119, 147, 149, 160, 171, 174, 177], "float16_acc32": [56, 67], "float32": [0, 4, 18, 20, 22, 23, 25, 27, 30, 31, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 61, 64, 65, 67, 68, 69, 70, 71, 72, 75, 80, 82, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 113, 115, 118, 121, 123, 124, 125, 128, 129, 136, 137, 144, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 164, 171, 173, 174, 175, 176, 177, 179, 180, 182, 183, 187, 188, 189, 191, 193, 195, 196, 197], "float32x32": [90, 101, 195], "float32x4": 191, "float32x8": 187, "float64": [6, 68, 80, 177], "float_": 80, "floatimm": [136, 149, 173], "floattensor": 115, "floor": [65, 72, 149, 156, 157, 158, 169, 173, 175], "floor_divid": [149, 157, 175], "floor_mod": [149, 157, 175], "floordiv": [97, 98, 100, 101, 169, 171, 173, 174, 175], "floormod": [97, 98, 100, 101, 169, 171, 173, 174, 175], "flop": [93, 136, 165, 170], "flopcalculationerror": 136, "flow": [1, 8, 9, 18, 20, 23, 31, 36, 43, 62, 66, 72, 130, 146, 150, 152, 160, 173, 178, 179, 180, 182, 192], "flush": [108, 135, 136], "fly": [60, 66, 113, 171, 173], "fma": 149, "fmap_": 37, "fmatch": 152, "fmemoiz": 137, "fmod": [169, 173], "fmt": 199, "fn": [84, 179, 180, 182, 183], "fno": 84, "fo": [57, 75, 154, 169], "focu": [2, 4, 9, 12, 20, 25, 34, 80, 110, 111, 188], "focus": [2, 12, 84, 86, 110, 195], "fold": [2, 4, 43, 84, 148, 151, 153, 155, 157, 160, 171, 174, 175, 179, 180], "fold_const": [4, 35, 84], "fold_qnn": 160, "fold_scale_axi": 180, "foldconst": [4, 35, 43, 84, 85, 113, 151, 157, 160, 176], "foldconstantexpr": 160, "folder": [0, 2, 7, 12, 16, 17, 34, 35, 53, 56, 61, 79, 109, 162], "foldexplicitpad": 160, "foldl": 179, "foldr": 179, "foldscaleaxi": [4, 72, 85, 143, 157, 160], "folk": [9, 16, 185], "follow": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 20, 25, 27, 30, 31, 32, 34, 35, 36, 37, 39, 41, 44, 46, 53, 56, 57, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 79, 80, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 118, 119, 121, 123, 124, 127, 128, 131, 132, 136, 144, 145, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 182, 183, 188, 189, 191, 195, 196, 197, 198, 199], "follow_split": 101, "followup": [9, 169], "follwo": [151, 160, 176], "font_nam": 47, "font_path": 47, "font_url": 47, "foo": [1, 7, 10, 32, 150, 177], "foodeviceapi": 1, "footprint": [4, 74], "foral": 144, "forbid": [124, 162], "forc": [15, 169, 174], "force_pur": 151, "force_suppress": 161, "forcenarrowindextoint32": 174, "forcibli": [97, 98, 99, 100], "foreach": 179, "foremost": 9, "forg": 132, "forget": [69, 132, 175], "fork": [7, 14, 106, 136, 162, 171], "fork_se": 171, "forkind": [82, 173], "form": [4, 9, 11, 15, 16, 17, 31, 32, 35, 36, 37, 71, 97, 98, 99, 100, 105, 106, 107, 120, 128, 135, 136, 137, 138, 146, 148, 149, 150, 151, 152, 155, 157, 158, 160, 168, 169, 170, 171, 174, 175, 178, 180, 183, 189, 195, 197], "formal": 12, "format": [1, 2, 5, 8, 9, 12, 13, 16, 17, 22, 36, 46, 47, 48, 51, 52, 53, 54, 56, 59, 67, 69, 70, 71, 72, 75, 85, 113, 115, 127, 135, 136, 137, 139, 140, 141, 144, 145, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 171, 173, 175, 179, 180, 183, 191, 192, 193, 199], "format_arg": 149, "formatt": [9, 171], "former": [4, 135], "formul": 30, "formula": 123, "forrest": 159, "fortun": [25, 36, 101, 191, 196], "forum": [10, 11, 15, 39, 185, 199], "forward": [0, 7, 9, 10, 22, 23, 43, 44, 67, 72, 75, 108, 110, 113, 115, 118, 119, 128, 141, 148, 158, 160, 171, 175], "forward_fold_scale_axi": 160, "forward_index": 173, "forward_shap": 173, "forwardfoldscaleaxi": [4, 160], "found": [2, 4, 17, 34, 35, 37, 39, 66, 73, 80, 82, 97, 98, 99, 100, 132, 135, 137, 140, 141, 144, 145, 149, 152, 153, 154, 156, 157, 170, 173, 175, 179, 189, 195, 199], "foundat": [2, 185, 195], "four": [4, 15, 82, 89, 106, 125, 157, 161, 175, 188], "fourier": [157, 175], "fourth": 161, "fox": 67, "fp16": [56, 64, 65, 67, 89, 137, 151, 175], "fp16_acc16": 56, "fp16_input_nam": 151, "fp32": [56, 58, 73, 74, 89, 118, 137, 151, 160, 175], "fp64": 175, "fp8": 174, "fp8computeleg": 174, "fp8storageleg": 174, "fpass": [4, 151, 160, 170, 174], "fpass_nam": 4, "fpeq": 56, "fpga": [61, 66], "fpic": 137, "fprimalgradi": 34, "frac": [34, 148, 149, 158], "fraction": [157, 173, 175], "fragment": [89, 152, 160, 170, 173, 174, 178], "fragment_a": 173, "fragment_b": 173, "fragment_c": 173, "fragment_d": 173, "frame": [52, 157, 165, 175, 198], "framework": [1, 4, 18, 20, 27, 36, 37, 41, 43, 44, 56, 59, 62, 67, 68, 75, 76, 77, 82, 110, 111, 113, 115, 132, 137, 155, 160, 181, 184, 186, 189, 192, 198], "freduce_arg": 173, "free": [1, 2, 4, 20, 36, 67, 69, 80, 86, 90, 97, 105, 106, 107, 115, 144, 146, 149, 151, 152, 153, 157, 173, 180, 185, 189, 192, 195, 197], "free_symbolic_var": 146, "free_type_var": 152, "free_var": [115, 118, 119, 146, 152, 182], "freedataspac": 1, "freeli": [189, 197], "freestream": 1, "freeworkspac": 1, "freez": [59, 160], "freeze_param": [59, 155], "fregist": [140, 144], "frequenc": [135, 144, 148, 152, 157, 175], "frequent": [10, 12, 79, 152, 174], "fresh": [132, 183], "freshli": [148, 149, 150], "friend": 4, "friendli": [4, 16, 22, 52, 56, 75, 90, 135, 169, 171, 195], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 17, 18, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 34, 35, 36, 37, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 77, 79, 80, 82, 83, 84, 85, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 133, 135, 136, 137, 138, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 179, 180, 182, 183, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 198, 199], "from_arrai": 163, "from_caff": 155, "from_caffe2": 155, "from_cal": 138, "from_const": 148, "from_coreml": [46, 55, 155, 186], "from_darknet": [47, 55, 155, 186], "from_devic": [6, 110, 113, 168], "from_dlpack": [44, 164], "from_exported_program": [43, 111, 148], "from_expr": [58, 84, 144, 157, 182], "from_func": 173, "from_func_with_separ": 173, "from_fx": 148, "from_json": 165, "from_json_dict": 136, "from_kera": [48, 55, 69, 155, 186], "from_legacy_te_schedul": [82, 89, 90, 96, 123, 124, 125, 128, 129, 187, 191, 195], "from_min_ext": 144, "from_mxnet": [59, 65, 66, 155], "from_numpi": [51, 73], "from_oneflow": 155, "from_onnx": [49, 55, 64, 148, 155, 186, 189], "from_paddl": [50, 55, 155, 186], "from_pretrain": [75, 113], "from_pytorch": [51, 55, 67, 70, 71, 72, 73, 155, 186], "from_raw": 113, "from_scalar": 148, "from_sourc": [64, 80], "from_stablehlo": 148, "from_struct_info": 148, "from_tensorflow": [52, 55, 75, 155, 186], "from_tflit": [53, 55, 74, 155, 186], "fromarrai": 49, "fromm": 75, "front": [5, 54, 97, 98, 99, 100, 121, 158, 175, 178, 180, 181], "frontend": [0, 2, 5, 13, 16, 22, 23, 37, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 59, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 79, 93, 97, 98, 99, 100, 105, 106, 107, 108, 110, 111, 113, 140, 142, 161, 178, 181, 189, 192, 193], "frontend_nam": 140, "frontload": 35, "frozen_func": 75, "fscan": 124, "fset_item": 151, "fset_param": 151, "fshape": 175, "fskip": 160, "fstab": 66, "fstream": 36, "ftimer": [150, 166], "ftp": 66, "ftransform": 174, "ftvmlegal": 160, "ftvmmixedprecisionconversiontyp": 160, "fucntion": 174, "fulfil": [4, 183], "full": [4, 7, 30, 35, 49, 64, 66, 70, 71, 73, 75, 109, 115, 132, 137, 148, 149, 157, 160, 162, 171, 175, 180, 185, 187, 197], "full_lik": [149, 157, 169, 175], "fulli": [2, 12, 36, 41, 104, 118, 128, 137, 144, 148, 151, 154, 157, 160, 169, 170, 173, 175, 181, 182, 183, 192, 195], "fully_connected_infer": 137, "fun": [2, 5, 75, 179, 180], "func": [4, 23, 36, 70, 71, 75, 82, 84, 88, 89, 90, 96, 101, 104, 109, 115, 128, 135, 136, 137, 138, 144, 145, 146, 147, 148, 149, 150, 151, 153, 159, 160, 162, 163, 166, 168, 169, 170, 171, 172, 173, 174, 176, 182, 187, 188, 191, 195, 196], "func1": 8, "func2": 8, "func3": 8, "func_attr": [22, 23, 30, 31, 43, 44, 82, 89, 90, 96, 110, 111, 113, 123, 124, 125, 128, 129, 147, 151, 187, 191, 195, 196], "func_decl_": 36, "func_idx": 36, "func_nam": [0, 31, 36, 93, 135, 140, 141, 147, 150, 151, 165, 166, 168, 171, 173], "func_name_": 37, "func_name_regex": 176, "func_name_sav": [150, 166], "func_or_mod": 170, "func_pattern": 182, "func_sinfo": 146, "func_symbol": [150, 166], "func_working_on": 171, "funcstructinfo": [146, 150], "function": [0, 1, 2, 3, 5, 7, 8, 9, 12, 13, 18, 20, 22, 23, 25, 26, 31, 34, 35, 36, 37, 43, 44, 47, 52, 56, 58, 59, 63, 65, 70, 71, 72, 73, 74, 75, 79, 82, 84, 85, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 113, 118, 120, 122, 125, 126, 128, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 186, 187, 188, 191, 192, 193, 196, 197, 199], "function_pass": [4, 84, 151, 160, 174], "functioninfo": 37, "functionnod": [36, 150], "functionpass": [4, 84, 151, 160, 174, 176], "functionpassnod": 4, "functionpattern": [154, 182], "functions_item": [23, 144], "functionscop": 147, "functionvar_0_0": 182, "functionvar_0_1": 182, "functionvar_0_2": 182, "functor": [4, 137, 171, 172], "functyp": [144, 170, 183], "fundament": [25, 27, 30, 43, 195], "further": [8, 9, 16, 34, 35, 43, 56, 88, 110, 111, 113, 121, 151, 152, 168, 169, 171, 172, 180, 183, 185, 196, 197, 198, 199], "furthermor": 90, "fusabl": 84, "fuse": [0, 2, 23, 25, 34, 43, 58, 84, 88, 89, 96, 101, 104, 110, 113, 118, 127, 149, 151, 152, 160, 169, 170, 171, 175, 177, 182, 183, 187, 193, 195], "fuse___layout_transform___4": 0, "fuse___layout_transform___broadcast_add_relu___layout_transform__": 0, "fuse___layout_transform___broadcast_add_relu___layout_transform___1": 0, "fuse___layout_transform___broadcast_add_reshape_transpose_reshap": 0, "fuse__contrib_conv2d_nchwc": 0, "fuse__contrib_conv2d_nchwc_1": 0, "fuse__contrib_conv2d_nchwc_2": 0, "fuse__contrib_conv2d_nchwc_3": 0, "fuse_l2_normalize_relu": 0, "fuse_model": 73, "fuse_op": 183, "fuse_opt_level": [84, 151, 160], "fused_loop": 171, "fused_matmul1_add1": [23, 43], "fused_matmul_add_relu": [23, 43], "fused_nn_batch_flatten": 93, "fused_nn_dense_nn_bias_add": 93, "fused_nn_dense_nn_bias_add_nn_relu": 93, "fused_nn_dense_nn_bias_add_nn_relu_1": 93, "fused_nn_softmax": 93, "fused_relax_permute_dims_relax_matmul_relax_add_relax_nn_relu_cubla": 110, "fuseop": [2, 23, 43, 84, 113, 151, 152, 153, 160, 192], "fuseopsbypattern": [110, 151], "fusetir": [2, 23, 43, 113, 151], "fusetransposematmul": [113, 151], "fusion": [2, 4, 20, 23, 41, 43, 44, 59, 84, 96, 101, 113, 118, 151, 160, 171, 174, 182, 187, 191, 192, 193], "fusionpattern": 151, "futur": [2, 3, 9, 16, 51, 64, 67, 68, 70, 71, 72, 73, 74, 105, 106, 107, 115, 135, 145, 150, 160, 183, 195], "futurewarn": 115, "fuzzi": [154, 178], "fvisibl": 132, "fvisit": [146, 152, 172], "fvp": 16, "fwrap": 169, "fx": 148, "g": [1, 2, 4, 5, 7, 8, 9, 11, 12, 16, 17, 18, 22, 32, 35, 36, 39, 43, 44, 58, 62, 66, 69, 70, 71, 79, 80, 97, 98, 99, 100, 109, 110, 111, 113, 115, 129, 131, 132, 135, 136, 137, 144, 148, 150, 151, 152, 154, 155, 156, 157, 158, 160, 168, 171, 174, 175, 179, 180, 183, 185, 191, 192, 193, 197], "g_act": 175, "g_data": 115, "g_nd": 191, "g_np": 191, "g_var": 23, "ga": [67, 105, 106, 107, 108, 189], "gain": [11, 90, 188, 195], "galleri": [21, 22, 23, 28, 30, 31, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 84, 85, 87, 88, 89, 90, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199], "gamma": [135, 148, 149, 158, 175, 182], "gan": 159, "gap": 184, "gate": [113, 175], "gate_proj": 113, "gate_up": 113, "gate_up_proj": 113, "gate_x": 113, "gather": [82, 148, 149, 157, 163, 165, 175, 189], "gather_el": 149, "gather_nd": [149, 157, 175], "gather_to_worker0": 163, "gatun": [67, 105, 106, 107, 108, 136, 188, 189], "gauss": [148, 149, 169, 173, 175], "gaussian": [148, 149], "gave": 189, "gcc": [4, 36, 62, 64, 80, 84, 97, 105, 107, 109, 132, 137, 195], "gcc_0": 36, "gcc_0_": 36, "gcc_0_0": 36, "gcc_0_1": 36, "gcc_0_2": 36, "gcc_0__wrapper_": 36, "gcc_0_wrapper": 36, "gcc_binary_op_1d": 36, "gcc_binary_op_2d": 36, "gcc_input0": 36, "gcc_input1": 36, "gcc_input2": 36, "gcc_input3": 36, "gcn_cora": 115, "gcn_model": 115, "ge": 173, "gear": 4, "geforc": 111, "gelu": [23, 59, 148, 149, 151], "gelu_tanh": [149, 151], "gemm": [82, 87, 91, 104, 138, 151, 158, 170, 186], "gemv": [110, 113, 138], "gemv_impl": 128, "gemv_reset": 128, "gemv_upd": 128, "gen": [1, 36], "gen_func": 179, "gen_includ": 199, "gen_modul": [58, 59, 65], "gen_new_rang": 171, "gen_weight": 75, "gene": 136, "gener": [0, 2, 4, 5, 6, 8, 9, 10, 12, 13, 15, 16, 17, 21, 22, 23, 25, 27, 28, 30, 31, 32, 34, 35, 37, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 80, 81, 82, 84, 85, 87, 90, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 132, 135, 136, 137, 139, 144, 145, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 165, 168, 169, 171, 172, 173, 174, 175, 179, 180, 182, 184, 185, 187, 188, 189, 190, 192, 196, 197, 198, 199], "general_rnn": 179, "generalreduct": [110, 113], "generate_design_spac": 145, "generate_input": 179, "generate_measure_candid": 145, "generate_project": 16, "generate_sketch": 135, "generatorfoocod": 1, "generic_func": 168, "genericfunc": 168, "genet": [136, 188], "genetr": 56, "geometr": [156, 175], "geometri": 56, "geral": 16, "gerum": 199, "get": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 16, 17, 22, 23, 31, 34, 35, 36, 37, 43, 44, 46, 47, 51, 52, 53, 56, 61, 62, 64, 66, 68, 69, 70, 71, 73, 75, 79, 80, 82, 85, 88, 89, 90, 92, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 119, 120, 123, 125, 128, 129, 131, 135, 136, 137, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 157, 158, 159, 161, 162, 163, 166, 168, 169, 170, 171, 173, 175, 176, 182, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 199], "get_1d_indic": 175, "get_1d_pixel": 175, "get_2d_indic": 175, "get_2d_pixel": 175, "get_3d_indic": 175, "get_3d_pixel": 175, "get_active_lane_mask": 173, "get_all_tuning_record": 145, "get_attr": 144, "get_block": [31, 171, 196], "get_block_access_region": 170, "get_block_read_write_region": 170, "get_block_scop": [171, 173], "get_calibration_data": 152, "get_cc": 137, "get_child_block": 171, "get_classifi": 159, "get_closest_index": 175, "get_compile_opt": 148, "get_concrete_funct": 75, "get_config": [104, 136, 188], "get_const_int": 175, "get_const_tupl": [101, 128, 175], "get_constructor": 144, "get_consum": 171, "get_conv2d_workload": 136, "get_ctor": [157, 159], "get_ctor_stat": [157, 159], "get_cuda_vers": 137, "get_current_trac": 176, "get_decis": 171, "get_default_dtyp": 148, "get_default_qconfig": 73, "get_default_spec": 113, "get_deps_by_dst": 171, "get_deps_by_src": 171, "get_devic": 141, "get_dltensor_addr": 63, "get_exec": 153, "get_factor": 136, "get_featur": 159, "get_flatten_featur": 136, "get_flattened_buff": 173, "get_funct": 162, "get_global_func": [5, 110, 113, 121, 163], "get_global_symbol_section_map": 137, "get_global_type_var": 144, "get_global_var": [43, 144, 157, 159], "get_global_var_stat": [157, 159], "get_graph_json": 0, "get_imagenet_input": 73, "get_includ": 148, "get_init_st": 135, "get_input": 141, "get_input_data": 2, "get_input_detail": 74, "get_input_index": 141, "get_input_info": 141, "get_int": 144, "get_int_tupl": 144, "get_inx": 175, "get_item": 151, "get_kind_attr": 168, "get_last_ffi_error": 13, "get_lib": 56, "get_logit": 113, "get_loop": [31, 171, 196], "get_model": [59, 65], "get_nam": [157, 159], "get_name_stat": [157, 159], "get_native_generic_func": 168, "get_net": 159, "get_network": [97, 98, 99, 100, 105, 106, 107, 108, 119], "get_next_index": 136, "get_node_attr": 137, "get_node_edg": [120, 137], "get_num_input": 141, "get_num_output": [136, 141], "get_other_opt": 136, "get_output": [0, 2, 46, 47, 51, 52, 53, 64, 67, 69, 70, 71, 73, 74, 75, 115, 118, 119, 141, 150, 166, 189, 193], "get_output_block": 171, "get_output_detail": 74, "get_output_index": 141, "get_output_info": 141, "get_packed_func": 168, "get_pad_tupl": 175, "get_pad_tuple1d": [158, 175], "get_pad_tuple2d": 158, "get_pad_tuple3d": [158, 175], "get_pad_tuple_gener": 175, "get_param": 153, "get_pass_to_op_diff": 85, "get_pattern": 110, "get_patterns_with_prefix": 110, "get_pipelin": [43, 44, 110, 111, 113, 150], "get_pow2": 136, "get_prim_func_arg_and_result_memory_constraint": 170, "get_produc": 171, "get_rand_index": 136, "get_real_imag": [73, 74], "get_region": 152, "get_result": 4, "get_shap": 153, "get_shape_from_rewritten_layout": 135, "get_shape_of": 150, "get_sourc": [56, 123, 195], "get_sref": [171, 173], "get_start": [45, 186], "get_static_typ": 146, "get_str": 144, "get_synset": 73, "get_target_by_dump_machin": 137, "get_target_default": 135, "get_target_device_typ": 168, "get_target_tripl": 137, "get_task": 136, "get_tensor": 74, "get_tensor_by_nam": 52, "get_tensor_ctor_stat": [157, 159], "get_timestep_embed": 148, "get_top_k": 145, "get_total_mac_numb": 152, "get_trace_stack": 176, "get_trace_stack_s": 176, "get_transform": 73, "get_tuning_api_databas": 176, "get_typ": [157, 159], "get_type_stat": [157, 159], "get_unique_nam": 147, "get_valid_count": 161, "get_valid_implement": 153, "get_var2v": 146, "get_var_remap": 150, "get_vscale_expr": 173, "get_vtcm_compaction_pass": 170, "get_workload": [3, 85, 93, 97, 98, 99, 100, 105, 106, 107, 108, 136, 137, 155, 159, 193], "get_workload_entri": 135, "getattr": [1, 51, 67, 70, 71, 75], "getattrmap": 35, "getblock": 171, "getconstint": 8, "getcurrentpasscontext": 4, "getcwd": 66, "getenv": [68, 110, 111, 113], "getextsymbol": 36, "getfil": 119, "getfunc": 37, "getfunct": [2, 37, 44], "getlin": 36, "getlogg": [104, 105, 106, 107, 188], "getnam": 50, "getopconvert": 65, "getpass": 4, "getref": 35, "getrootasmodel": [53, 74], "getshap": 36, "getsourc": 36, "getsymbol": 3, "gfile": 52, "gflop": [97, 98, 99, 100, 104, 105, 106, 107, 108, 188, 189, 197, 198], "gfx900": 106, "gh": [7, 16], "gist": [46, 48, 49, 50, 69, 70, 71, 73, 159], "git": [7, 15, 16, 17, 39, 61, 62, 66, 69, 70, 71, 80, 109, 131, 132], "git_commit_hash": 132, "github": [7, 8, 12, 16, 17, 46, 47, 48, 49, 50, 51, 52, 53, 58, 61, 62, 64, 66, 67, 69, 70, 71, 73, 74, 93, 109, 115, 131, 148, 149, 158, 159, 160, 189, 195, 197, 198], "githubusercont": [46, 48, 50, 51, 53, 69, 70, 71, 72, 73], "give": [1, 2, 5, 8, 9, 12, 13, 35, 43, 56, 58, 60, 65, 73, 74, 82, 111, 124, 132, 133, 136, 137, 140, 141, 149, 150, 157, 160, 162, 169, 175, 179, 180, 183, 188, 189, 197, 199], "given": [1, 4, 16, 30, 31, 34, 35, 36, 37, 51, 52, 56, 58, 65, 67, 73, 74, 79, 84, 88, 93, 101, 127, 128, 135, 136, 137, 138, 141, 144, 145, 146, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 164, 166, 168, 169, 170, 171, 173, 174, 175, 176, 179, 180, 182, 183, 189, 191, 195, 197], "glob": [4, 36, 84], "global": [1, 4, 5, 18, 20, 32, 43, 82, 88, 89, 90, 101, 104, 118, 119, 123, 124, 129, 135, 136, 137, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 159, 160, 163, 168, 169, 171, 173, 174, 175, 178, 179, 187, 191, 195, 197], "global_avg_pool1d": 158, "global_avg_pool2d": [58, 65, 85, 158, 193], "global_avg_pool3d": 158, "global_call_count": 152, "global_func": 144, "global_info": 144, "global_max_pool1d": 158, "global_max_pool2d": [58, 65, 158], "global_max_pool3d": 158, "global_offset": 173, "global_pool": 175, "global_ptr": 173, "global_scop": 155, "global_symbol": [30, 101, 147, 150, 151, 160, 196], "global_type_var": 144, "global_var": [144, 160, 173], "global_workspace_1_var": 199, "globalinfo": 144, "globaltypevar": [144, 157, 183], "globalvar": [4, 43, 144, 146, 147, 149, 150, 151, 152, 159, 160, 171, 173, 176, 180], "globalvarnod": 150, "glossari": 171, "glue": [5, 34], "gluon": [4, 59, 65, 70, 84, 155, 159], "gluoncv": 72, "gmod": [2, 141], "gnn": 115, "gnn_model": 115, "gnu": [17, 56, 58, 62, 64, 66, 80, 97, 99, 105, 107, 109, 159], "gnueabihf": [62, 71, 109, 137], "gnupg": 17, "go": [2, 8, 9, 10, 13, 16, 17, 20, 34, 36, 37, 43, 56, 57, 59, 64, 65, 74, 75, 97, 105, 106, 107, 109, 148, 179, 195, 197, 199], "goal": [2, 3, 4, 9, 32, 35, 36, 44, 75, 110, 118, 164, 182, 189, 197], "gobbl": [52, 75], "goe": [17, 79], "good": [9, 11, 16, 34, 35, 36, 82, 96, 97, 98, 99, 100, 101, 104, 125, 136, 187, 188, 195, 197], "googl": [8, 22, 23, 30, 31, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 132, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199], "googleapi": [48, 74], "googletest": 132, "got": [3, 56, 85, 135], "goto": 150, "govern": [4, 11], "gpg": 15, "gpu": [2, 3, 16, 34, 36, 37, 44, 52, 58, 62, 65, 67, 68, 69, 70, 75, 79, 87, 89, 91, 94, 95, 102, 103, 110, 111, 113, 123, 125, 132, 135, 136, 137, 141, 151, 155, 159, 162, 164, 168, 169, 171, 174, 175, 184, 186, 188, 189, 192, 193, 198], "gpu_data": 111, "gpu_implementation_large_batch": 79, "gpu_implementation_small_batch": 79, "gpu_mod": 43, "gpu_out": [43, 110, 111], "gpu_param": [43, 110, 111], "grab": [51, 67, 70, 71, 75, 195], "grad": [34, 158, 175], "grad_1": 151, "grad_2": 151, "grad_layout": 158, "gradient": [135, 145, 147, 148, 149, 150, 151, 158, 159, 160, 169, 175], "grain": 146, "grammar": 178, "grant": 11, "granular": [4, 34, 84], "graph": [1, 2, 4, 6, 19, 20, 22, 36, 37, 41, 43, 44, 46, 48, 49, 50, 56, 57, 58, 62, 64, 65, 66, 68, 69, 74, 96, 97, 98, 99, 100, 101, 108, 110, 111, 113, 116, 117, 118, 119, 130, 135, 136, 137, 141, 144, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 160, 175, 178, 186, 187, 189, 192, 193, 197, 198, 199], "graph_": 36, "graph_attr": 137, "graph_def": [52, 75], "graph_executor": [0, 46, 47, 51, 52, 53, 58, 59, 64, 65, 66, 67, 69, 70, 71, 73, 74, 75, 97, 98, 99, 100, 105, 106, 107, 108, 115, 118, 142, 153, 189, 193], "graph_executor_codegen": 153, "graph_json": [0, 36, 153], "graph_json_": 36, "graph_json_str": 141, "graph_modul": [141, 148], "graph_opt_sch_fil": 108, "graph_split": 119, "graph_tun": 108, "graphdef": [52, 75, 155], "graphexecutor": 141, "graphexecutorcodegen": 153, "graphic": [56, 168], "graphmodul": [46, 47, 51, 52, 53, 58, 59, 64, 65, 66, 67, 69, 70, 71, 73, 74, 75, 93, 97, 98, 99, 100, 105, 106, 107, 108, 115, 118, 119, 141, 148, 157, 189, 193], "graphmoduledebug": 0, "graphproto": 148, "graphviz": [120, 137], "grasp": 12, "great": [9, 75, 104, 108, 118], "greater": [1, 34, 49, 65, 137, 148, 149, 157, 173, 175], "greater_equ": [148, 149, 157, 175], "greatli": [56, 65, 84, 183], "green": 137, "grid": [20, 22, 23, 27, 30, 31, 43, 88, 89, 90, 96, 110, 123, 124, 125, 128, 129, 136, 147, 151, 156, 158, 169, 171, 173, 175, 187, 188, 189, 191, 195, 196, 197], "grid_dim": 37, "grid_sampl": [156, 175], "gridsearch": [67, 105, 106, 107, 108, 189], "gridsearchtun": [67, 105, 106, 107, 108, 136, 188, 189], "ground": [135, 149, 189], "group": [2, 4, 11, 35, 58, 111, 124, 137, 146, 148, 149, 150, 151, 157, 158, 160, 163, 169, 173, 175, 179, 195], "group_conv1d_ncw": 175, "group_conv1d_nwc": 175, "group_conv1d_transpose_ncw": 175, "group_conv2d_nchw": 175, "group_conv2d_nhwc": 175, "group_conv2d_transpose_nchw": 175, "group_conv3d_transpose_ncdhw": 175, "group_count": 137, "group_norm": [148, 149, 158, 175], "groupnorm": 148, "grow": [9, 174], "gt": 173, "gtar": 17, "gtest": [16, 132], "gtx": 75, "gu": [127, 137], "guarante": [6, 16, 135, 146, 148, 149, 150, 152, 171, 172, 195], "guard": [162, 169, 171, 173], "guess": 137, "guid": [2, 9, 35, 36, 37, 38, 39, 52, 56, 59, 64, 65, 75, 109, 115, 130, 133, 135, 140, 171, 180, 188, 189, 192, 197], "guidanc": [11, 199], "guidelin": [9, 10, 15, 62], "gussmith23": 155, "gv": [4, 18, 22, 23, 43, 44, 110, 111, 147, 176], "gv0": [147, 151], "gvar": [147, 149, 150], "gx": 157, "gy": 157, "gz": [17, 53, 66, 74, 80], "h": [1, 4, 5, 32, 34, 35, 36, 37, 39, 47, 66, 69, 82, 89, 96, 97, 98, 100, 104, 115, 135, 148, 149, 156, 158, 161, 169, 175, 179, 183], "h1": 179, "h2": 179, "h5": [48, 56, 69], "h5py": 66, "h_act": 175, "h_end": 161, "h_in": 161, "h_init": 175, "h_kv": 113, "h_q": 113, "h_start": 161, "ha": [1, 3, 4, 7, 9, 10, 11, 12, 15, 16, 17, 20, 30, 34, 35, 36, 37, 39, 48, 56, 58, 65, 67, 70, 71, 73, 74, 79, 84, 88, 89, 90, 93, 101, 105, 106, 107, 109, 113, 115, 118, 127, 128, 132, 135, 136, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 160, 161, 166, 170, 171, 174, 175, 176, 179, 180, 182, 183, 188, 189, 192, 195, 197, 198, 199], "had": 191, "haichen": 88, "half": [56, 89, 113, 137, 158, 173], "half_pixel": [149, 156, 158, 175], "halid": [82, 177], "halideir": [82, 169, 177], "halt": 79, "halv": 56, "hand": [36, 58, 115, 149, 157, 169, 173, 175, 176, 182, 197, 198], "handcraft": [4, 128, 148], "handi": 62, "handl": [1, 2, 3, 4, 5, 15, 20, 22, 23, 30, 35, 36, 37, 43, 52, 56, 59, 78, 84, 89, 101, 115, 123, 124, 125, 129, 132, 140, 147, 148, 151, 152, 155, 160, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 183, 191, 195, 196], "handler": [140, 160], "hang": 141, "happen": [4, 9, 13, 14, 37, 59, 66, 85, 118, 128, 136, 171, 175, 179, 195], "hard": [9, 14, 60, 80, 120, 160], "hard_fail": 160, "hardwar": [1, 2, 8, 20, 23, 27, 36, 39, 41, 44, 56, 59, 61, 64, 66, 73, 74, 75, 79, 80, 82, 89, 99, 102, 118, 122, 126, 130, 135, 136, 160, 182, 184, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198], "hardware_param": [99, 135], "hardwareparam": [99, 135], "harm": 35, "harmless": 43, "has_attr": [144, 154, 182, 199], "has_complex_op": 135, "has_dtyp": [154, 182], "has_next": 136, "has_reshape_pattern": 146, "has_shap": [154, 182], "has_typ": [154, 182], "has_workload": 145, "hasattr": 85, "hash": [2, 8, 17, 39, 67, 135, 136, 144, 145], "hashabl": [135, 136], "hashtag": 14, "haskel": 179, "hasn": 144, "hat": 10, "have": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 23, 31, 34, 35, 36, 37, 39, 41, 43, 44, 46, 47, 49, 53, 56, 59, 62, 63, 65, 66, 67, 68, 69, 70, 71, 73, 75, 79, 80, 82, 84, 85, 89, 90, 97, 98, 99, 100, 101, 105, 106, 107, 113, 115, 118, 127, 128, 129, 131, 132, 135, 136, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 160, 162, 164, 166, 169, 170, 171, 173, 174, 175, 177, 179, 180, 181, 182, 183, 187, 188, 189, 191, 192, 195, 197, 198], "have_cudagraph": 137, "have_fp16": 137, "have_int8": 137, "have_matrixcor": 137, "have_tensorcor": [89, 137], "haven": 14, "hbm": 66, "hc": 89, "hdf5": 66, "hdfgroup": 66, "he": [150, 159], "head": [0, 7, 14, 17, 56, 149, 169, 173, 179], "head_dim": [113, 149], "head_dim_v": 149, "head_siz": 148, "head_size_valu": 148, "header": [36, 69, 144, 148, 157, 176], "health": 9, "healthi": 11, "hear": 9, "heavi": [2, 5, 37, 67, 69, 75], "heavili": [137, 160], "height": [68, 72, 88, 89, 137, 149, 156, 158, 161, 173, 175], "hello": [5, 137, 147, 198], "help": [0, 4, 7, 9, 10, 11, 12, 16, 17, 20, 27, 39, 43, 44, 56, 58, 80, 82, 84, 86, 90, 105, 106, 107, 109, 113, 118, 121, 125, 128, 131, 132, 135, 141, 144, 147, 148, 149, 150, 151, 154, 155, 157, 160, 162, 173, 174, 175, 176, 188, 189, 195, 196, 197], "helper": [3, 4, 31, 34, 35, 67, 73, 79, 137, 148, 150, 153, 157, 159, 189, 195], "henc": [4, 9, 16, 19, 52, 56, 67, 68, 84, 151, 179, 183], "her": 66, "here": [2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 17, 22, 23, 27, 30, 31, 32, 34, 35, 36, 37, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 82, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 131, 136, 146, 151, 157, 160, 162, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199], "heterogen": [82, 141, 149, 153, 157, 168, 180, 182], "heurist": [35, 65], "hexagon": [145, 162, 164, 168], "hf": 113, "hf_weight_path": 113, "hi": [66, 88, 198], "hidden": [113, 115, 132, 158, 175], "hidden_dim": 175, "hidden_s": [113, 147, 148], "hidden_st": 113, "hiddxen": 159, "hide": [148, 169, 171], "hide_private_symbol": 132, "hierarch": [4, 135], "hierarchi": [18, 89], "high": [2, 9, 11, 18, 19, 22, 23, 35, 36, 37, 44, 56, 59, 62, 64, 66, 74, 75, 88, 89, 90, 93, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 110, 111, 113, 130, 137, 145, 151, 153, 157, 159, 170, 173, 175, 177, 182, 184, 186, 188, 189, 190, 192, 193, 194, 195, 197], "higher": [12, 20, 32, 34, 65, 69, 74, 75, 89, 127, 135, 151, 160, 169, 171, 175, 176, 179, 180, 182, 188, 189, 191, 192], "higher_ord": [159, 160], "highest": [65, 113, 124, 153, 157], "highli": [9, 12, 16, 64, 72, 90, 132, 144, 195], "highlight": [36, 110, 171], "hint": [13, 16, 34, 36, 39, 58, 90, 137, 144, 147, 148, 149, 150, 157, 169, 171, 173, 174, 175, 195], "hint_on_devic": 149, "hip": 132, "hiroyuki": 71, "histor": 31, "histori": [0, 11, 31, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 135, 136, 187, 188], "hit": [9, 13, 49, 90, 155, 165, 195], "hl": 62, "hn": 179, "hoc": [7, 183], "hoge": [188, 189, 192, 197], "hoist": [90, 153, 174, 195], "hoistedcondit": 174, "hoistedletbind": 174, "hoistexpress": 174, "hoistexpressionconfig": 174, "hoistifthenels": 174, "hold": [4, 5, 37, 90, 137, 141, 144, 148, 157, 160, 171, 180, 183, 189, 195], "holder": 36, "hole": 183, "home": [64, 65, 79, 115, 148], "homogen": [153, 157], "hood": [5, 20, 37, 73, 127, 195], "hook": [16, 120, 137], "hop_length": [157, 175], "horizont": 113, "host": [1, 2, 3, 4, 5, 8, 37, 47, 51, 52, 56, 58, 61, 62, 64, 65, 66, 67, 69, 70, 71, 80, 84, 97, 99, 105, 106, 107, 109, 119, 131, 135, 136, 139, 149, 150, 153, 157, 160, 162, 163, 166, 168, 170, 174, 195, 198, 199], "host_arrai": 163, "host_ip": [97, 105, 107], "host_ip_address": 198, "hostnam": [68, 198], "hot": [90, 149, 157, 175, 195], "hour": [7, 9, 17, 66, 105, 106, 107, 197, 198], "how": [1, 2, 3, 4, 5, 7, 9, 10, 15, 16, 17, 18, 20, 22, 23, 30, 31, 34, 36, 37, 38, 39, 43, 44, 53, 54, 56, 58, 59, 60, 61, 65, 66, 67, 68, 73, 74, 75, 76, 78, 79, 81, 82, 83, 87, 91, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 118, 119, 120, 121, 123, 124, 125, 127, 128, 132, 135, 136, 137, 148, 149, 151, 152, 155, 156, 157, 158, 160, 164, 168, 171, 173, 175, 180, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 199], "how_to": [49, 55, 64, 77, 83, 84, 91, 95, 103, 114, 115, 117, 126, 186], "howev": [1, 2, 3, 4, 5, 9, 10, 16, 20, 22, 34, 36, 58, 70, 71, 73, 75, 84, 85, 89, 104, 113, 125, 128, 132, 144, 151, 154, 155, 157, 160, 170, 177, 179, 188, 189, 191, 195, 197], "howto_deploi": 60, "hsa": 137, "hsaco": 195, "html": [7, 17, 39, 49, 50, 58, 64, 65, 73, 80, 115, 137, 148, 149, 157, 158, 171, 173, 175], "http": [7, 8, 12, 13, 17, 39, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 93, 105, 106, 107, 109, 115, 131, 132, 135, 137, 148, 149, 156, 157, 158, 159, 160, 169, 171, 173, 175, 189, 195, 197, 198], "hu": 48, "hua": 119, "huawei": [97, 105, 107], "hub": [7, 51, 68, 72, 73, 131], "hug": [76, 77, 113, 186], "huge": [9, 160, 189, 197], "huggingfac": 75, "human": [2, 9, 52, 69, 70, 71, 145, 165, 189, 191, 197], "human_str": 52, "hundr": 4, "hutton": 58, "hvx": 168, "hw": [61, 64, 66, 175], "hw_emu": 61, "hwc": 189, "hwcn": [88, 175], "hwd": 175, "hwio": [85, 175], "hwoi": 175, "hybrid": [142, 157], "hybrid_argwhere_1d": 175, "hybrid_argwhere_2d": 175, "hybrid_argwhere_3d": 175, "hybrid_argwhere_4d": 175, "hybrid_argwhere_5d": 175, "hybrid_func": [157, 169], "hybridblock": 155, "hybridmodul": 169, "hybridop": 169, "hyperbol": [148, 169, 173, 175], "hypercubestart": 155, "hypot": 173, "hypothet": 128, "hz": 144, "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 22, 23, 25, 26, 27, 30, 31, 32, 34, 35, 36, 37, 38, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 132, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199], "i0": [22, 23, 43, 96, 97, 98, 99, 100, 101, 147, 171, 196], "i1": [22, 23, 43, 96, 97, 98, 99, 100, 101, 147, 169, 171], "i1_inn": 96, "i1_inner_out": 191, "i2": [96, 97, 98, 99, 100, 101, 169, 171], "i3": [96, 97, 98, 99, 100, 171], "i386": 16, "i3_inn": 96, "i7": [90, 197], "i_0": [171, 196], "i_1": [149, 158, 171, 175, 196], "i_2": [149, 158, 175, 196], "i_inn": [123, 124, 125, 187], "i_inner_": 195, "i_inner_j_inner_fus": 125, "i_j_fus": 171, "i_k": [149, 158, 175], "i_m": 171, "i_out": [82, 123, 124, 125, 195], "i_outer_inn": 187, "i_outer_outer_j_outer_outer_fus": 187, "iandola": 159, "ib": [89, 128, 175], "ic": [89, 158, 175, 199], "ic_inn": 89, "ic_out": 89, "icheck": [4, 13, 34, 36, 39], "icheck_eq": [13, 34], "icheck_gt": 36, "icl": 93, "icon": 7, "id": [0, 2, 6, 17, 36, 46, 48, 50, 51, 52, 53, 56, 66, 67, 97, 98, 99, 100, 113, 136, 137, 141, 145, 150, 152, 157, 163, 164, 173], "id_index": 161, "id_to_str": 52, "idea": [20, 35, 36, 128, 136, 197], "ideal": [3, 4, 9, 12, 160, 180], "ident": [4, 16, 73, 84, 120, 129, 136, 149, 158, 159, 164, 169, 173, 175, 179, 180, 183], "identifi": [2, 4, 5, 7, 11, 16, 66, 75, 137, 144, 148, 150, 151, 160, 162, 171, 179, 180, 182, 183, 189, 195, 197], "identify_equiv_term": 174, "identity_el": 173, "identity_valu": 175, "idiom": 177, "idl": 80, "idx": [97, 98, 99, 100, 129, 150], "idx1": 175, "idx2": 175, "idx_1": 129, "idx_2": 129, "ie": 155, "ieee": 168, "if_scop": 157, "if_then_els": [88, 89, 96, 97, 98, 99, 100, 129, 169, 171, 173, 174, 191], "ifcollaps": 35, "ifdef": [96, 123], "ifelseexpr": 174, "ifelsestmt": 174, "ifeq": 69, "ifgo": 175, "ifmap": 199, "ifnod": [35, 150], "ifpattern": 154, "ifstream": 36, "ifthenels": [173, 174], "ignor": [4, 52, 66, 75, 82, 97, 98, 99, 100, 132, 136, 141, 145, 146, 148, 149, 151, 157, 158, 160, 168, 169, 173, 175, 179, 185, 188, 198], "ignore_impur": 160, "ignore_index": [149, 158, 175], "ignore_loop_partit": 173, "ih": 199, "ihw": 156, "ii": [89, 171], "iin": 149, "ij": [157, 175], "ik": 175, "illeg": [170, 174], "illumin": 12, "illustr": [20, 31, 36, 37, 44, 84, 90, 171, 179, 183, 188, 192, 195], "im": 73, "im_data": [157, 175], "im_h": 47, "im_height": [73, 74, 161], "im_info": 161, "im_output": [157, 175], "im_scal": 161, "im_w": 47, "im_width": [73, 74, 161], "imag": [16, 56, 61, 64, 66, 69, 70, 71, 73, 79, 133, 142, 148, 159, 161, 181, 193, 196, 197], "image2d_t": 56, "image_data": [52, 53], "image_depth": 175, "image_height": 175, "image_path": 53, "image_shap": [70, 71, 85, 97, 98, 99, 100, 159, 193], "image_url": [52, 53, 74], "image_width": 175, "imagenet": [67, 68, 69, 70, 71, 189, 197], "imagenet1000_clsid_to_human": [46, 48, 50, 69, 70, 71, 73], "imagenet1k_v1": [51, 67, 68, 70, 71, 73], "imagenet_2012_challenge_label_map_proto": 52, "imagenet_cat": [189, 197], "imagenet_class": 51, "imagenet_mean": [189, 197], "imagenet_stddev": [189, 197], "imagenet_synset": 51, "imagenet_synset_to_human_label_map": 52, "imagenetclassifi": 67, "imagin": 191, "imaginari": [157, 175], "img": [46, 47, 48, 49, 50, 51, 67, 72], "img_bgr": 46, "img_cb": 49, "img_cr": 49, "img_data": [189, 197], "img_i": 49, "img_nam": [52, 69, 70, 71, 74], "img_path": [46, 47, 48, 49, 50, 51, 52, 67, 69, 70, 71, 72, 73, 74, 189, 197], "img_siz": 119, "img_url": [46, 47, 48, 49, 50, 51, 67, 69, 70, 71, 72, 73, 189, 197], "img_ycbcr": 49, "imm": [150, 177], "immedi": [4, 17, 150, 151, 153], "immut": [150, 180], "impact": [20, 32, 97, 98, 99, 100, 127, 160, 189, 195, 197], "imper": [16, 183, 196], "imperfect": [9, 177], "impl": [8, 79, 151, 173], "implement": [1, 2, 3, 4, 6, 13, 20, 25, 27, 31, 34, 35, 37, 41, 44, 56, 58, 65, 74, 79, 80, 82, 85, 88, 90, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 113, 115, 118, 120, 125, 128, 135, 136, 137, 140, 143, 148, 149, 150, 151, 153, 157, 158, 159, 160, 162, 171, 173, 174, 175, 176, 178, 180, 182, 183, 188, 189, 191, 192, 193, 195, 196, 197], "impli": [148, 160, 179], "implicit": [65, 79, 148, 149, 160, 175], "implicitli": [79, 115, 179], "implicitpad": 160, "import": [0, 2, 3, 5, 9, 10, 11, 12, 13, 17, 18, 20, 22, 23, 25, 30, 31, 32, 34, 35, 36, 37, 41, 46, 48, 49, 50, 53, 54, 56, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 80, 82, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 132, 136, 137, 141, 147, 148, 151, 152, 155, 157, 159, 162, 163, 168, 169, 177, 179, 182, 183, 187, 188, 189, 191, 192, 193, 195, 196, 197], "import_graph_def": 52, "import_graphdef": 75, "import_llvm": 128, "import_modul": [61, 195], "import_python_modul": 163, "import_tree_child_indices_": 3, "import_tree_log": 3, "import_tree_row_ptr_": 3, "importantli": [2, 9, 16, 27, 118], "imported_modul": [3, 56, 61, 123, 195], "importeroutput": 148, "importerror": [52, 74], "imprecis": 20, "improv": [4, 9, 12, 15, 16, 17, 18, 41, 44, 65, 80, 110, 135, 160, 174, 189, 192, 195, 196, 197, 198], "impur": [146, 150, 151], "imread": 72, "imshow": [47, 48, 49, 53, 67], "in_batch": 158, "in_buff": [169, 175], "in_channel": [88, 89, 127, 148, 149, 156, 158, 175], "in_channel_block": 175, "in_channel_chunk": 175, "in_degre": 115, "in_depth": [156, 175], "in_dim": 175, "in_dtyp": 175, "in_featur": [113, 148], "in_fil": [136, 137], "in_filt": 175, "in_group": [148, 149, 163], "in_h": 149, "in_height": [156, 158, 175], "in_relay_integr": 135, "in_shap": [36, 158], "in_siz": [72, 88, 127], "in_tupl": 175, "in_typ": 179, "in_w": [148, 149], "in_width": [156, 158, 175], "in_x": 175, "inadvert": 31, "inbound": 175, "inc": 69, "inc_num_ev": 176, "inc_scalar": 179, "incept": 159, "inception_preprocess": 53, "inception_v3": [97, 98, 99, 100, 105, 106, 107, 108, 155, 159], "inceptionv1": [52, 74], "inceptionv3": 159, "includ": [2, 4, 5, 8, 9, 11, 12, 13, 15, 17, 18, 20, 22, 25, 27, 35, 36, 37, 39, 41, 43, 44, 54, 60, 62, 63, 64, 65, 66, 69, 73, 74, 79, 81, 93, 96, 101, 110, 111, 113, 118, 120, 128, 132, 133, 135, 136, 137, 141, 144, 146, 148, 149, 150, 151, 152, 153, 154, 157, 158, 160, 163, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 182, 183, 184, 187, 188, 189, 192, 193, 195, 197, 198, 199], "include_compat": 135, "include_config": 136, "include_input": 169, "include_non_call_op": 160, "include_return": [150, 166], "include_simple_task": 135, "include_top": [48, 69], "inclus": [11, 34, 136, 137, 148, 149, 157, 183], "incom": [149, 158], "incompat": 157, "incomplet": [34, 144, 178], "incompletetyp": [144, 183], "incompletetypenod": 34, "incorpor": [25, 27, 30, 35, 43, 56, 118, 121, 148], "incorrect": [72, 169, 171], "incorrectli": [16, 20], "increas": [9, 36, 56, 65, 67, 69, 84, 85, 90, 135, 136, 141, 150, 157, 166, 173, 175, 183, 189, 195, 198, 199], "increment": [16, 20, 135, 176, 196], "incub": 159, "incumb": 149, "inde": [35, 123], "indec": 157, "indent": 8, "independ": [2, 15, 25, 27, 56, 97, 98, 99, 100, 160, 188, 195, 197], "index": [0, 2, 3, 5, 12, 25, 30, 31, 34, 35, 36, 43, 46, 48, 50, 51, 64, 65, 74, 75, 80, 90, 113, 115, 127, 128, 129, 135, 136, 141, 144, 146, 148, 149, 150, 151, 154, 157, 160, 161, 169, 171, 173, 174, 175, 177, 180, 182, 183], "index_0": 171, "index_1": 171, "index_a": 173, "index_b": 173, "index_c": 173, "index_d": 173, "index_dtyp": 173, "index_dtype_overrid": 169, "index_map": [149, 151, 171, 173], "index_of": 173, "index_rank": 157, "index_var_0": 171, "index_var_1": 171, "indexdiv": [169, 173], "indexerror": 171, "indexexpr": 183, "indexmap": [146, 149, 151, 171, 173, 174], "indexmod": [90, 169, 173, 195], "indian": 52, "indic": [0, 2, 3, 4, 10, 11, 13, 25, 32, 34, 37, 75, 82, 88, 101, 115, 127, 135, 136, 137, 144, 146, 147, 148, 149, 150, 151, 155, 156, 157, 158, 160, 161, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 182, 183, 189, 195, 197], "indices_or_sect": [148, 149, 152, 157, 175], "indices_shap": 149, "indirect": 13, "indirectli": [89, 146], "indispens": 179, "indivdu": 160, "individu": [4, 7, 11, 16, 58, 84, 88, 120, 127, 141, 149, 158, 160, 165], "indow": [158, 175], "indptr": [75, 101, 115, 158], "induc": 171, "induct": 183, "inevit": 85, "infeat": 115, "infeat_dim": 115, "infer": [0, 4, 20, 30, 35, 37, 58, 59, 62, 64, 65, 69, 70, 97, 98, 99, 100, 105, 106, 107, 108, 109, 113, 115, 127, 128, 135, 136, 137, 141, 144, 147, 148, 149, 150, 151, 153, 157, 158, 160, 168, 169, 171, 173, 174, 175, 180, 183, 184, 189, 193, 197], "infer_bound_from_st": 135, "inferbound": [37, 135], "infercorrectlayout": 160, "inferfrag": 174, "infertyp": [35, 59, 84, 85, 143, 154, 160, 182], "infertypeloc": 160, "infin": 173, "infinit": [35, 136, 149, 157, 169, 173, 175], "inflect": 199, "influenc": 11, "info": [4, 37, 65, 69, 70, 71, 84, 85, 97, 98, 99, 100, 105, 106, 107, 108, 109, 137, 143, 144, 146, 147, 148, 149, 150, 151, 160, 173, 174, 175, 176], "infom": [174, 175], "inform": [0, 2, 3, 4, 6, 8, 11, 12, 16, 17, 20, 25, 26, 34, 35, 36, 37, 39, 43, 44, 56, 58, 66, 67, 79, 80, 82, 85, 93, 97, 98, 99, 100, 105, 106, 107, 110, 111, 113, 120, 127, 128, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 148, 149, 150, 151, 154, 155, 157, 160, 165, 168, 169, 171, 174, 175, 176, 179, 180, 183, 185, 189, 190, 191, 195, 197], "infra": [4, 35, 81, 83, 186], "infrastructur": [2, 35, 37, 58, 84, 85, 132, 136, 145, 160, 176, 180], "ing": 16, "ingest": 192, "ingredi": [23, 31, 158], "inherit": [36, 113, 137, 150, 154, 180], "ini": 7, "init": [3, 17, 20, 22, 23, 27, 30, 31, 37, 43, 44, 89, 101, 110, 123, 124, 132, 135, 169, 170, 171, 173, 174, 179, 191], "init_block": 171, "init_ccl": 163, "init_net": 155, "init_popul": 135, "init_search_callback": [96, 100, 101, 135, 187], "init_seq_len": 148, "initattr": 149, "initi": [0, 3, 4, 8, 16, 26, 30, 36, 37, 43, 56, 64, 101, 105, 106, 107, 113, 124, 135, 136, 137, 147, 148, 150, 157, 159, 162, 163, 166, 169, 173, 175, 176, 188, 193, 195, 196], "initial_indic": [169, 173], "inject": [82, 128, 138, 171, 174], "injectcopyintrin": 174, "injectdoublebuff": 174, "injectpermutedlayout": 174, "injectprefetch": 174, "injectptxasynccopi": 174, "injectrollingbuff": 174, "injectsoftwarepipelin": 174, "injectvirtualthread": 174, "inlcud": 148, "inlin": [37, 88, 101, 104, 113, 125, 128, 135, 138, 151, 160, 169, 171, 174, 180, 195], "inline_mark": 171, "inline_onc": 160, "inlinecompilerfunctionsboundto": 160, "inlineprivatefunct": [151, 174], "inner": [31, 82, 90, 101, 125, 127, 128, 136, 141, 147, 156, 157, 169, 171, 175, 180, 188, 195], "innermost": [128, 157, 171, 175, 195], "innerpart_factor": 171, "inp": [72, 73, 136, 139, 175, 182], "inplac": [20, 73, 171], "inplace_indic": [148, 149, 150], "input": [0, 1, 2, 4, 5, 20, 22, 30, 31, 34, 37, 39, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 88, 89, 96, 101, 104, 108, 111, 113, 115, 119, 120, 121, 122, 123, 124, 126, 127, 128, 135, 136, 137, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 182, 183, 186, 187, 188, 189, 193, 195, 196, 198], "input0": [36, 51, 67, 70, 71, 72, 120, 155], "input1": [36, 120, 155, 198], "input2": [36, 120, 198], "input3": [36, 64], "input_0": 155, "input_1": [48, 69, 75, 123, 155], "input_2": 123, "input_axis_separ": 149, "input_channel": 137, "input_data": [51, 59, 65, 66, 67, 70, 71, 74, 159, 193], "input_detail": 74, "input_dict": [75, 141], "input_dim": 115, "input_dtyp": 53, "input_emb": 113, "input_height": 137, "input_id": 113, "input_indic": 160, "input_info": [148, 155], "input_layernorm": 113, "input_len": 113, "input_mod": [4, 160], "input_modul": 176, "input_nam": [49, 51, 66, 67, 69, 70, 71, 72, 73, 108, 141, 189], "input_rv_typ": 171, "input_s": 147, "input_scal": 175, "input_shap": [48, 51, 53, 59, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 97, 98, 99, 100, 105, 106, 107, 108, 110], "input_spec": 75, "input_tensor": [37, 53, 104, 148, 149, 169], "input_til": [98, 100], "input_width": 137, "input_zero_point": 175, "inputmod": 151, "inputmodul": 150, "inputnod": 153, "inputs_dict": 64, "ins": [89, 121, 128, 169, 175], "insert": [4, 7, 22, 66, 84, 121, 125, 144, 148, 149, 150, 151, 155, 157, 160, 169, 171, 174, 175, 180, 195], "insert_transform_stag": 135, "insid": [3, 4, 7, 16, 43, 56, 66, 69, 79, 90, 104, 118, 135, 136, 146, 150, 151, 157, 170, 171, 173, 174, 179, 180, 195], "inspect": [2, 3, 4, 8, 17, 34, 74, 90, 96, 101, 104, 119, 121, 127, 179, 188, 195, 196], "inspir": [4, 120, 137, 180], "inst": [1, 85, 171], "instal": [7, 12, 16, 17, 46, 47, 48, 49, 50, 51, 52, 53, 56, 62, 64, 66, 67, 69, 70, 71, 72, 74, 79, 80, 97, 109, 115, 120, 130, 148, 190, 197, 199], "install_path": 58, "install_root": 61, "installdebugspan": 174, "instanc": [4, 16, 20, 25, 27, 30, 35, 61, 74, 79, 84, 85, 108, 113, 136, 137, 141, 144, 148, 149, 151, 154, 157, 158, 161, 168, 171, 173, 174, 175, 176, 179, 180, 183, 189], "instance_norm": [158, 175], "instant": 5, "instanti": [1, 136, 148, 175, 183], "instantiationerror": 136, "instead": [0, 1, 4, 5, 8, 12, 14, 16, 17, 20, 34, 35, 36, 44, 49, 51, 52, 62, 65, 67, 68, 70, 71, 72, 75, 80, 82, 84, 108, 110, 115, 120, 124, 128, 129, 133, 135, 136, 137, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 164, 169, 171, 173, 174, 175, 176, 177, 179, 180, 183, 188, 192, 195], "instr": [150, 166], "instruct": [2, 9, 12, 16, 25, 27, 37, 50, 56, 62, 64, 67, 68, 69, 70, 71, 73, 74, 75, 80, 89, 90, 93, 100, 101, 109, 128, 132, 138, 150, 157, 163, 166, 168, 171, 173, 174, 184, 189, 195], "instructionkind": 171, "instrument": [81, 83, 84, 142, 150, 166, 174, 176, 186], "instrumentafterpass": 4, "instrumentbeforepass": 4, "instrumentboundcheck": 174, "instrumententerpasscontext": 4, "instrumentexitpasscontext": 4, "instrumentprofileintrins": 174, "insul": 135, "insur": 182, "int": [2, 4, 5, 8, 12, 13, 30, 34, 36, 37, 67, 68, 69, 75, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 113, 115, 119, 121, 123, 128, 135, 136, 137, 138, 141, 144, 145, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 183, 191, 195, 199], "int16": [6, 68, 80, 158, 175, 177], "int32": [2, 30, 58, 68, 75, 80, 82, 89, 90, 96, 101, 113, 115, 123, 124, 125, 128, 129, 137, 144, 147, 148, 149, 150, 152, 154, 156, 157, 158, 169, 171, 173, 174, 175, 177, 179, 180, 183, 187, 191, 195], "int32_max": 99, "int32_t": 199, "int64": [6, 20, 22, 23, 43, 68, 80, 110, 113, 147, 148, 149, 151, 152, 157, 173, 175, 177], "int64_t": [5, 8, 36, 96, 123], "int8": [6, 64, 68, 80, 128, 137, 149, 152, 171, 175, 177, 183], "int8x4": 173, "int_set": 175, "int_valu": 8, "integ": [2, 5, 6, 15, 32, 34, 63, 66, 136, 137, 144, 145, 148, 149, 150, 151, 152, 157, 158, 159, 160, 163, 164, 165, 166, 169, 171, 173, 174, 175, 179, 180, 183], "integr": [2, 7, 23, 34, 36, 79, 86, 133, 135, 180, 199], "intel": [36, 72, 74, 90, 108, 128, 168, 195, 197, 198], "intel_graph": 168, "intellectu": 56, "intend": [1, 2, 6, 27, 34, 79, 120, 137, 149, 151, 168, 175, 179, 189, 197], "intens": [9, 67, 68, 90, 97, 98, 99, 100, 189, 195], "intent": [9, 16, 58, 151, 161], "intenum": 113, "intepret": 153, "inter": 4, "interact": [2, 4, 9, 10, 11, 16, 22, 23, 31, 37, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 135, 137, 139, 150, 153, 163, 173, 176, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199], "interest": [1, 2, 4, 5, 9, 10, 30, 34, 37, 44, 56, 74, 84, 110, 131, 133, 136, 149, 156, 175, 189, 196, 197], "interfac": [0, 1, 2, 4, 6, 9, 12, 16, 34, 35, 36, 37, 62, 65, 76, 77, 82, 84, 90, 93, 119, 120, 135, 136, 137, 145, 150, 153, 160, 162, 165, 166, 168, 177, 182, 186, 190, 192, 194, 195, 197, 199], "interface_api": 199, "interleav": [59, 136, 158], "interm": 182, "intermedi": [1, 2, 20, 22, 27, 36, 37, 44, 59, 89, 113, 121, 124, 147, 149, 150, 151, 154, 155, 158, 160, 169, 171, 175, 178, 192, 195], "intermediate_s": 113, "intern": [2, 4, 9, 11, 12, 13, 15, 22, 34, 35, 36, 39, 106, 118, 121, 127, 135, 136, 140, 141, 144, 146, 150, 151, 157, 160, 162, 166, 169, 171, 173, 174, 175, 180, 195, 199], "internal_kei": 162, "internal_lay": 159, "internal_log": 162, "internal_port": 162, "internal_url": 162, "internalerror": [13, 140], "internet": [8, 47], "interoper": 37, "interpol": [148, 149, 156, 175], "interpret": [1, 6, 30, 32, 39, 74, 127, 139, 148, 149, 150, 153, 157, 183, 189, 197], "interpreter_wrapp": 74, "interprocedur": 160, "intersect": [146, 169, 173], "interv": [135, 136, 137, 141, 149, 150, 157, 166, 175], "interval_al": 136, "interwoven": 175, "intexpr": 148, "intimm": [82, 136, 144, 154, 160, 168, 173, 175], "intra": 4, "intract": 84, "intrin": [169, 171, 173], "intrin_func": [89, 128], "intrin_gemv": 128, "intrin_wmma_gemm": 89, "intrin_wmma_load_matrix": 89, "intrin_wmma_store_matrix": 89, "intrins": [2, 25, 34, 122, 126, 144, 149, 150, 151, 169, 171, 173, 174, 175, 186, 193], "intro_topi": [186, 191, 194], "introduc": [1, 2, 3, 4, 5, 9, 12, 13, 16, 20, 25, 27, 30, 36, 41, 44, 63, 84, 105, 106, 107, 109, 120, 127, 129, 137, 147, 148, 151, 171, 173, 174, 180, 182, 183, 195, 197, 199], "introduct": [2, 4, 5, 38, 62, 123, 124, 125, 127, 128, 180, 186, 190, 194, 195], "introductori": [46, 47, 48, 49, 50, 51, 52, 53, 72, 115, 191, 195, 199], "introspect": [148, 157, 160], "intset": 175, "intuit": [4, 22], "invalid": [67, 84, 97, 98, 99, 100, 104, 105, 106, 107, 108, 115, 124, 140, 147, 175, 189], "invalid_to_bottom": 161, "invalidshapeerror": 175, "invari": [3, 39, 147, 148, 151, 174], "inventori": [2, 34, 56, 175, 180, 191, 192], "invers": [98, 100, 136, 157, 159, 160, 173, 175], "inverse_index_map": 173, "inverse_indic": [157, 175], "inverse_map": 173, "invert": [157, 169], "invert_permut": [157, 175], "invest": [9, 27], "invoc": [4, 59, 180, 183], "invok": [3, 4, 5, 27, 35, 36, 37, 44, 65, 66, 74, 84, 89, 109, 121, 128, 136, 137, 148, 149, 150, 151, 152, 160, 162, 166, 171, 174, 176, 180, 182, 195], "invoke_closur": [149, 150, 166], "invoke_pure_closur": 149, "invoke_st": [150, 166], "involc": 67, "involv": [9, 10, 11, 27, 31, 35, 43, 56, 123, 129, 135, 158, 174, 179, 180, 195], "io": [36, 48, 59, 60, 136, 148], "iodhw": 158, "ioeffect": 148, "ioff": [149, 158, 175], "iohw": [149, 158, 159], "ios_rpc": 80, "iostream": 36, "iou": 161, "iou_loss": 161, "iou_threshold": 161, "iow": [148, 149, 158], "ip": [56, 66, 69, 70, 71, 80, 97, 105, 107, 109, 131, 162, 198], "ipc": 151, "ipcallreducerewrit": 151, "iphon": 5, "ipo": 4, "ipynb": [22, 23, 30, 31, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199], "ir": [4, 5, 18, 22, 23, 30, 31, 37, 43, 44, 67, 73, 74, 75, 84, 85, 89, 90, 96, 101, 110, 111, 113, 118, 123, 124, 125, 128, 129, 130, 135, 136, 137, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 157, 159, 160, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180, 182, 187, 188, 191, 192, 193, 195, 196], "ir_build": [89, 128], "ir_mod": 157, "ir_modul": [4, 20, 22, 23, 27, 30, 31, 43, 44, 45, 82, 89, 90, 96, 110, 111, 123, 124, 125, 128, 129, 145, 147, 151, 153, 186, 187, 191, 195, 196], "ir_module_from_t": 196, "ir_pass": 37, "ir_transform": [82, 172], "irbuild": 2, "irmodul": [1, 2, 4, 19, 20, 22, 23, 30, 31, 42, 44, 45, 58, 70, 71, 72, 82, 84, 115, 120, 130, 135, 137, 138, 139, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 157, 159, 160, 168, 170, 171, 173, 174, 176, 180, 182, 186], "irnod": [2, 144], "is_add_or_sub": 182, "is_ascend": [157, 175], "is_auto_scheduler_en": 135, "is_avail": 137, "is_base_of": 150, "is_caus": 148, "is_const": [154, 182], "is_conv2d": 182, "is_dfvar": 150, "is_elementwis": 138, "is_elemwis": 182, "is_equival": 173, "is_equivalent_to": 173, "is_expr": [154, 182], "is_gemm": 138, "is_gemv": 138, "is_if": [154, 182], "is_in_ci": [111, 113], "is_index_valid": 136, "is_inject": 138, "is_let": [154, 182], "is_lshift_requir": [173, 175], "is_meta_schedule_en": 145, "is_multipli": [158, 175], "is_op": [154, 182, 199], "is_proxi": 162, "is_pur": [147, 150, 171], "is_pure_funct": 170, "is_recurs": 152, "is_reduct": 138, "is_rshift_requir": [173, 175], "is_schedul": 110, "is_shallow": 159, "is_sort": [157, 175], "is_source_path": 137, "is_strict": 174, "is_target_avail": 138, "is_tun": [67, 68], "is_tupl": [154, 182], "is_tuple_get_item": [154, 182], "is_var": [154, 182], "is_void": 34, "isa": [90, 195], "isfil": [67, 105, 106, 107], "isfinit": [149, 157, 169, 173, 175], "ishap": [159, 175], "isinf": [149, 157, 169, 173, 175], "isinst": [4, 23, 36, 74, 82, 85, 120, 135, 140, 144, 148, 151, 154, 160, 174, 176], "isn": [1, 8, 25, 80, 96, 131, 135, 137, 179, 187], "isnan": [149, 157, 169, 173, 175], "isnullptr": 173, "isol": [5, 96, 97, 98, 99, 100, 136], "isop": 36, "issu": [6, 9, 11, 15, 16, 17, 39, 49, 84, 93, 115, 155, 165, 171, 182, 192], "issubclass": 148, "item": [75, 101, 113, 132, 136, 144, 148, 149, 150, 151, 153, 154, 157, 158, 160, 171, 175, 182], "item_list": 153, "iter": [2, 9, 16, 25, 26, 30, 67, 84, 88, 90, 101, 110, 120, 124, 135, 136, 137, 138, 145, 148, 159, 165, 169, 171, 173, 179, 189, 195, 196], "iter_typ": 173, "iter_valu": [173, 174], "iter_var": [118, 123, 128, 171, 173, 174, 191], "iterinfo": 138, "itertool": 75, "itervar": [67, 105, 106, 107, 108, 127, 136, 169, 171, 173, 174, 189], "ith": [148, 149], "its": [0, 1, 3, 4, 5, 7, 8, 9, 18, 20, 31, 35, 36, 37, 52, 63, 67, 68, 69, 70, 71, 75, 79, 80, 88, 96, 101, 108, 127, 130, 135, 136, 137, 138, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 160, 166, 168, 170, 171, 173, 174, 175, 177, 179, 180, 182, 183, 185, 187, 188, 189, 196, 197], "itself": [1, 2, 4, 5, 7, 11, 34, 35, 56, 73, 74, 146, 149, 150, 151, 160, 162, 163, 171, 173, 180, 182], "ivar": 169, "iw": 199, "j": [20, 22, 27, 30, 31, 34, 36, 46, 48, 49, 50, 51, 53, 62, 66, 67, 69, 70, 71, 73, 80, 89, 98, 99, 100, 101, 121, 123, 125, 128, 129, 135, 136, 147, 148, 149, 150, 157, 158, 169, 171, 173, 174, 175, 177, 187, 188, 199], "j0": [31, 101], "j1": [31, 101], "j10": 69, "j2": 109, "j4": [70, 71, 109], "j_0": [31, 171], "j_1": [31, 171], "j_1_init": 31, "j_inner": [125, 128], "j_outer": [125, 128], "jacobian": 169, "java": [2, 5, 44, 53, 56, 57, 134], "javadoc": 134, "javascript": [2, 5], "jcf94": 135, "jenkin": 17, "jenkinsfil": [7, 79], "jetpack": 65, "jetson": [65, 76, 77, 186], "ji": 177, "jia": [96, 97, 100, 101, 187], "jian": [82, 90, 159], "jiang": [71, 109, 119, 125, 129], "jit": [36, 37, 50, 51, 63, 67, 68, 70, 71, 72, 73, 148, 150, 153, 155], "jite": 153, "jited_func": 153, "jitimpl": 36, "jj": 89, "jk": 175, "jni": 56, "jo": 177, "job": [5, 7, 80, 105, 106, 107, 108, 160, 188, 189], "jocelyn": [192, 198], "join": [10, 46, 48, 49, 50, 51, 52, 53, 66, 67, 69, 70, 71, 73, 74, 75, 119, 132, 135, 145, 157, 165, 175], "join_running_task": 145, "joint": [118, 136], "jointli": 135, "jonathancmitchel": 69, "josh": 75, "joshua": [46, 49], "jpegdecod": 52, "jpg": [47, 52, 72, 74, 189, 197], "json": [0, 1, 2, 36, 56, 57, 58, 61, 64, 68, 75, 96, 97, 98, 99, 100, 101, 115, 135, 136, 141, 144, 145, 153, 165, 171, 187, 189, 192, 193, 195, 197, 198, 199], "json_dict": 136, "json_obj": 171, "json_str": 144, "json_typ": 171, "jsonabl": 135, "jsondatabas": [145, 176], "jsonnod": 58, "judgment": 9, "jump": 80, "june": 199, "jupyt": [22, 23, 30, 31, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 131, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199], "just": [2, 3, 4, 5, 14, 34, 36, 52, 56, 65, 79, 80, 82, 89, 97, 98, 99, 100, 105, 106, 107, 118, 119, 120, 127, 128, 132, 136, 148, 149, 150, 151, 157, 160, 174, 175, 176, 177, 179, 180, 182, 183, 188, 189, 195, 196, 197], "jw1": 169, "jw2": 169, "k": [0, 15, 16, 20, 22, 23, 27, 30, 31, 36, 43, 67, 75, 85, 89, 90, 97, 98, 99, 100, 101, 113, 123, 124, 128, 129, 132, 135, 136, 137, 145, 148, 149, 157, 158, 161, 169, 171, 173, 175, 177, 187, 188, 191, 192, 195], "k0_k1_fused_k2_fused_inn": 191, "k0_k1_fused_k2_fused_inner_v": 191, "k0_k1_fused_k2_fused_out": 191, "k1": 191, "k_0": 171, "k_1": [30, 171], "k_elemwis": 182, "k_inner": [90, 123, 187, 191, 195], "k_inner_v": 123, "k_outer": [90, 123, 187, 195], "k_outer_1": 123, "k_proj": 113, "kaim": 159, "karen": 159, "karrayhandl": 36, "kato": 69, "kaxi": 90, "kazutaka": 46, "kb": 195, "kd": 148, "kdatapar": 127, "kdlcpu": 1, "kdlcuda": 1, "kdlextdev": 1, "kdlfloat": 36, "keep": [5, 10, 13, 16, 36, 37, 69, 70, 71, 82, 97, 105, 107, 115, 118, 129, 135, 136, 137, 148, 149, 151, 157, 158, 160, 161, 169, 171, 179, 180, 183], "keep_background": 161, "keep_for_debug": [137, 199], "keep_orig_output_dtyp": 160, "keep_params_as_input": [43, 111, 148], "keep_params_in_input": 148, "keep_quantized_weight": 155, "keepdim": [148, 149, 151, 157, 175], "kei": [3, 4, 5, 9, 11, 12, 15, 19, 23, 26, 27, 35, 37, 39, 56, 58, 67, 69, 72, 75, 80, 85, 97, 98, 99, 100, 104, 105, 106, 107, 108, 113, 115, 135, 136, 137, 141, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 162, 168, 170, 171, 173, 174, 180, 192, 198], "kept": [16, 84, 149, 157, 162, 175, 179], "kera": [54, 55, 56, 64, 75, 155, 186, 197, 198], "keras_mobilenet_v2": 69, "keras_out": 48, "keras_resnet50": 48, "kermani": 191, "kernel": [2, 5, 6, 23, 37, 49, 56, 58, 59, 62, 67, 68, 75, 96, 104, 105, 106, 107, 108, 110, 113, 118, 121, 122, 123, 125, 126, 127, 128, 136, 137, 148, 149, 153, 155, 156, 158, 160, 162, 169, 174, 175, 176, 182, 186, 191, 195], "kernel_1": 96, "kernel_d": 149, "kernel_depth": 175, "kernel_h": [89, 149, 175], "kernel_height": [137, 156, 175], "kernel_layout": [111, 148, 149, 156, 158, 159, 175], "kernel_s": [68, 85, 118, 119, 148, 152, 158, 159, 160, 175, 182, 193], "kernel_scop": 104, "kernel_shap": [49, 89], "kernel_shar": 96, "kernel_shared_1": 96, "kernel_shared_ax0": 96, "kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fus": 96, "kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i": 96, "kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o": 96, "kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i": 96, "kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o": 96, "kernel_shared_ax1": 96, "kernel_shared_ax2": 96, "kernel_shared_ax3": 96, "kernel_w": [89, 148, 149, 175], "kernel_width": [137, 156, 175], "key_aft": 85, "key_befor": 85, "key_list": 168, "key_to_classnam": 51, "keyword": [36, 137, 143, 147, 149, 150, 168, 175, 180], "kfactor": 90, "kglobalsymbol": 174, "kh": [89, 96, 104, 148, 149, 158, 175, 199], "ki": [89, 90, 123, 195], "kick": [96, 101, 132, 187], "kill": [96, 97, 98, 99, 100, 149, 160, 162], "kill_storag": 149, "kill_tensor": 149, "killafterlastus": [113, 151], "kind": [1, 20, 43, 56, 70, 82, 97, 98, 99, 100, 119, 138, 144, 145, 150, 151, 152, 153, 157, 168, 171, 173, 180, 183, 188, 195], "kind_nam": 168, "kindli": 10, "kit": 61, "kitten": [189, 197], "klaiber": 199, "kmaxclockr": 1, "kmaxdeviceapi": 1, "kmd": 80, "kndarraycontain": 36, "knob": [9, 67, 105, 106, 107, 108, 136, 188, 189, 192], "knob2point": 136, "know": [4, 6, 8, 10, 12, 16, 35, 36, 37, 58, 70, 71, 128, 149, 150, 160, 169, 171, 199], "knowledg": [12, 36, 128, 180, 195], "known": [8, 9, 17, 31, 34, 56, 82, 144, 146, 150, 157, 160, 169, 171, 173, 175, 180, 183, 195], "known_failing_target": 79, "knuminput": [146, 151], "ko": [89, 90, 123, 195], "kopaqu": 34, "kraw": 171, "kria": 66, "krishna": [56, 67, 68], "kshape": 159, "ktarget": 174, "kv": [113, 148], "kv260": 66, "kv_cach": [44, 113], "kv_state_add_sequ": 113, "kv_state_begin_forward": 113, "kv_state_end_forward": 113, "kvcach": 148, "kw": [89, 96, 104, 148, 149, 158, 175, 199], "kwarg": [80, 136, 137, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 159, 166, 168, 169, 171], "kwarpsiz": 1, "kworkspaces": 151, "l": [49, 66, 121, 124, 128, 136, 149, 158, 162, 169, 173, 175, 179, 187, 188, 189, 197, 199], "l1": [31, 56, 90, 179, 195], "l163": 148, "l2": [31, 56, 58, 158, 179], "l206": 148, "l243": 53, "l2_normal": 158, "l3": 31, "l4": 31, "l5": 31, "l_": 171, "l_0": 146, "l_1": [146, 171], "l_2": 171, "l_b": 146, "l_i": 171, "l_n": 171, "label": [7, 10, 27, 52, 53, 69, 70, 71, 72, 74, 115, 136, 148, 149, 175, 189, 197], "label_fil": 53, "label_file_url": 53, "label_lookup_path": 52, "label_map": 52, "label_map_url": 52, "label_path": [52, 53], "labels_mobilenet_quant_v1_224": 53, "labels_path": [189, 197], "labels_url": [189, 197], "lack": [12, 180], "laid": 175, "lambda": [4, 30, 37, 56, 61, 75, 82, 88, 89, 90, 101, 109, 113, 119, 121, 123, 124, 125, 128, 129, 135, 136, 139, 147, 154, 160, 169, 171, 173, 175, 182, 187, 188, 189, 191, 196], "lambdalift": [151, 160], "land": [7, 9, 16, 157, 175], "lane": [123, 136, 169, 173, 183], "langref": 173, "languag": [2, 5, 8, 13, 22, 27, 30, 31, 34, 37, 41, 44, 110, 112, 114, 125, 130, 132, 137, 153, 154, 157, 169, 171, 179, 180, 183, 186, 187, 188, 189, 190, 192, 195, 196, 198], "lanteci": 135, "lapack": [157, 175], "laptop": 62, "larg": [4, 7, 9, 16, 41, 72, 74, 84, 88, 89, 96, 97, 98, 99, 100, 104, 106, 112, 114, 130, 136, 157, 159, 160, 178, 186, 187], "larger": [9, 105, 106, 107, 128, 135, 151, 157, 160, 165, 169, 175, 189], "largest": [137, 148, 149], "last": [13, 14, 17, 30, 34, 36, 75, 82, 89, 96, 97, 98, 99, 100, 104, 127, 135, 144, 148, 149, 151, 154, 155, 157, 158, 160, 161, 169, 171, 173, 175, 196], "last_lay": 47, "last_token": 113, "lastli": 66, "latenc": [66, 74, 88, 89, 97, 98, 99, 100, 108, 135, 136, 144, 160, 169], "latent": 48, "later": [4, 9, 11, 14, 36, 56, 69, 79, 80, 84, 88, 96, 97, 98, 99, 100, 101, 124, 125, 128, 135, 136, 144, 146, 154, 157, 171, 177, 179, 180, 183, 187, 188, 189, 195, 197, 198, 199], "latest": [15, 17, 75, 85, 93, 132, 148, 149], "latin1": 115, "latter": [4, 148, 170], "launch": [2, 5, 32, 36, 37, 56, 61, 67, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 131, 135, 162, 169], "launch_param_config_": 37, "launch_param_tag": 37, "launch_thread": [89, 96, 123, 124, 125, 191], "layer": [2, 4, 6, 9, 18, 20, 27, 44, 47, 58, 65, 75, 84, 94, 95, 104, 113, 148, 149, 152, 158, 159, 160, 161, 175, 181, 186, 189, 192, 195, 197, 199], "layer_attr": 47, "layer_count": 152, "layer_id": 113, "layer_nam": 115, "layer_norm": [65, 148, 149, 158, 175], "layer_out": 47, "layer_partit": 113, "layernorm": 148, "layernormattr": 149, "layout": [0, 4, 41, 44, 48, 52, 53, 56, 58, 62, 88, 89, 97, 98, 99, 100, 101, 108, 111, 118, 135, 139, 146, 148, 149, 151, 155, 156, 157, 158, 159, 160, 161, 169, 171, 173, 174, 175, 182, 183, 187, 189, 193], "layout_free_placehold": [135, 187], "layout_info": 175, "layout_rewrit": 135, "layout_rewrite_opt": 135, "layout_str": 173, "layout_transform": [65, 85, 149, 157, 175], "layout_transform_map": 174, "layoutconfig": 160, "layoutrewriteopt": 135, "layouttransformattr": 149, "lazi": [11, 150, 151, 166], "lazili": [151, 160], "lazygetinput": 151, "lazygradientinit": 160, "lazysetoutput": 151, "lazytransformparam": 151, "lca": [146, 170, 171, 174], "ld": [66, 132, 137], "ld_library_path": [67, 80], "ldexp": 173, "ldmatrix": 173, "ldot": [149, 158], "le": 173, "lead": [8, 20, 30, 70, 71, 136, 157, 171, 173], "leader": 9, "leaf": [127, 171], "leaki": [158, 175], "leaky_relu": [65, 115, 158, 175, 182], "leakyrelu": 149, "leandro": 197, "learn": [2, 4, 5, 10, 18, 20, 27, 36, 37, 41, 44, 48, 56, 62, 65, 66, 70, 71, 73, 82, 86, 96, 97, 98, 99, 100, 111, 128, 130, 136, 138, 155, 159, 178, 181, 184, 186, 187, 188, 189, 190, 192, 194, 196, 198], "learnabl": 158, "leas": 199, "least": [11, 17, 75, 97, 98, 99, 100, 135, 146, 148, 149, 150, 160, 171, 177, 180], "leav": [2, 4, 9, 12, 16, 36, 56, 97, 132, 169, 171], "left": [16, 47, 58, 115, 137, 144, 145, 146, 148, 149, 151, 154, 156, 157, 158, 160, 169, 170, 173, 175, 179, 180], "left_left": [157, 175], "left_right": [157, 175], "left_shift": [149, 157, 175], "legaci": [30, 153, 158, 168, 171, 174, 175], "legal": [43, 135, 149, 151, 160, 174, 175], "legalize_map_attr_nam": 160, "legalizefunc": 151, "legalizeop": [2, 23, 43, 110, 113, 151], "legalizepackedcal": 174, "legend": 127, "lei": [148, 149, 158], "len": [8, 67, 72, 74, 75, 85, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 113, 115, 148, 157, 175, 177, 188, 189], "length": [2, 31, 75, 136, 144, 148, 149, 157, 158, 159, 160, 171, 173, 175, 180, 183, 188, 195], "less": [1, 4, 9, 10, 13, 34, 84, 132, 135, 136, 137, 141, 148, 149, 150, 157, 161, 166, 175, 182, 188, 197], "less_equ": [148, 149, 157, 175], "lesson": [8, 10, 16], "let": [2, 3, 4, 8, 12, 16, 20, 23, 25, 27, 30, 31, 35, 36, 37, 43, 44, 67, 68, 74, 75, 84, 85, 88, 96, 101, 113, 118, 119, 120, 123, 127, 128, 135, 144, 154, 157, 158, 160, 170, 173, 174, 178, 179, 183, 187, 191, 192, 193, 195, 197, 198, 199], "let_binding_typ": 174, "let_var": 182, "letexpr": 174, "letnod": 35, "letpattern": 154, "letstmt": [173, 174], "letter": 16, "level": [11, 12, 13, 18, 19, 22, 23, 27, 32, 34, 35, 37, 39, 41, 44, 56, 69, 81, 82, 84, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 108, 110, 111, 113, 118, 135, 136, 144, 145, 146, 149, 150, 151, 152, 155, 157, 159, 160, 169, 170, 173, 174, 175, 176, 177, 179, 181, 182, 183, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 199], "leverag": [26, 44, 56, 67, 68, 75, 82, 111, 113, 122, 126, 130, 182, 186], "lh": [129, 137, 144, 146, 148, 149, 150, 151, 157, 158, 169, 170, 171, 173, 175], "lhs_begin": 157, "lhs_end": 157, "li": [5, 27, 82], "lianmin": [96, 97, 98, 100, 104, 105, 106, 107, 109, 187, 188, 192], "lib": [0, 3, 30, 31, 46, 47, 51, 52, 53, 56, 57, 58, 59, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 97, 98, 99, 100, 105, 106, 107, 108, 109, 115, 118, 119, 132, 137, 141, 150, 162, 168, 189, 193, 199], "lib0": 119, "lib1": 119, "lib_acl": 58, "lib_cl": 109, "lib_edg": 66, "lib_fnam": [69, 70, 71], "lib_format": [135, 136], "lib_kwarg": 66, "lib_osx": 47, "lib_path": [36, 47, 58, 66, 68], "libari": 3, "libc": [67, 80], "libdarknet2": 47, "libdarknet_mac2": 47, "libinfo": 132, "libllvm": 132, "libmod": 141, "libopencl": 69, "libpapi": 93, "librari": [0, 2, 3, 5, 16, 20, 36, 41, 43, 44, 47, 52, 56, 59, 64, 65, 66, 67, 68, 69, 70, 71, 79, 80, 93, 97, 104, 105, 107, 111, 113, 115, 116, 117, 132, 137, 141, 150, 153, 162, 163, 164, 168, 175, 179, 185, 186, 189, 197, 199], "libtvm": [13, 79, 132, 162], "libtvm_runtim": [0, 56, 60, 62, 67, 80, 132], "lie": [149, 157], "life": [4, 9, 196], "lifetim": 160, "lift": [4, 5, 37, 75, 149, 151, 160, 174], "liftattrscop": 174, "liftthreadbind": 174, "lifttransformparam": 151, "light": [2, 62], "lightweight": [2, 63, 120, 162, 164, 192], "like": [0, 2, 3, 4, 5, 7, 8, 9, 12, 13, 14, 16, 17, 20, 22, 30, 36, 37, 39, 43, 48, 52, 56, 57, 58, 65, 67, 68, 70, 71, 74, 75, 80, 82, 84, 85, 86, 93, 96, 106, 109, 110, 113, 118, 119, 120, 123, 124, 125, 129, 131, 132, 133, 135, 136, 137, 141, 144, 146, 148, 151, 152, 153, 155, 157, 160, 161, 164, 165, 168, 169, 173, 174, 175, 177, 179, 180, 182, 183, 188, 189, 191, 192, 195, 197, 198], "likelihood": [149, 158, 175], "limit": [1, 15, 20, 30, 52, 75, 80, 88, 89, 99, 109, 110, 115, 130, 135, 136, 151, 152, 157, 158, 161, 168, 173, 174, 175, 177, 185, 189], "limit_zero_time_iter": 141, "limiting_gpu_memory_growth": [52, 75], "limt": 197, "lin": 115, "linaro": 80, "line": [9, 12, 13, 16, 20, 22, 27, 36, 51, 56, 62, 66, 67, 70, 71, 75, 79, 85, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 113, 121, 123, 124, 127, 128, 132, 135, 144, 157, 165, 174, 189, 191, 192, 195, 197], "linear": [20, 22, 23, 27, 43, 44, 110, 113, 123, 147, 148, 149, 151, 156, 158, 160, 175, 179], "linear_0": 68, "linearl": 175, "lineno": [144, 148], "link": [0, 3, 5, 7, 12, 17, 34, 36, 59, 60, 62, 65, 66, 69, 74, 132, 134, 137, 148, 150, 155, 157, 162, 168, 171, 175, 195, 199], "linkabl": 192, "linker": [137, 162], "lint": [7, 8, 16, 30], "linter": 8, "linux": [7, 47, 50, 56, 58, 62, 64, 66, 67, 68, 69, 70, 71, 80, 97, 99, 105, 107, 109, 131, 132, 133, 137, 159], "linux2": 47, "list": [0, 4, 5, 11, 12, 13, 14, 17, 32, 34, 35, 36, 37, 52, 53, 56, 59, 64, 66, 68, 74, 75, 79, 80, 82, 85, 93, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 113, 120, 121, 124, 125, 135, 136, 137, 138, 139, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 185, 187, 188, 189, 195, 197], "list_config": 176, "list_fake_quantized_op_freq": 152, "list_field_info": 144, "list_int": 0, "list_kind": 168, "list_op_freq": 152, "list_op_nam": 144, "list_physical_devic": [52, 75], "list_shap": 0, "list_str": 0, "list_sum": 179, "list_tag": 168, "listdir": [137, 162, 193, 195], "listen": [9, 56], "lite": [53, 74], "liter": [138, 145, 150, 160, 173, 180, 182], "literatur": [179, 183], "littl": [3, 10, 35, 52, 75, 106, 153], "littlen": 90, "liu": 128, "live": [9, 149, 150, 160], "ll": [22, 35, 50, 75, 128, 153, 179, 193], "ll_code": 128, "ll_path": 128, "llamaattent": 113, "llamaconfig": 113, "llamadecoderlay": 113, "llamaffn": 113, "llamaforcasuallm": 113, "llamamodel": 113, "llc": [109, 195], "lld": [132, 137], "llm": [44, 113], "llvm": [1, 2, 3, 4, 8, 30, 31, 37, 43, 44, 46, 47, 49, 50, 51, 52, 53, 56, 58, 59, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 82, 84, 90, 93, 97, 99, 100, 101, 105, 107, 108, 109, 115, 119, 121, 127, 128, 132, 137, 139, 143, 145, 150, 153, 157, 159, 166, 168, 169, 173, 175, 177, 180, 187, 188, 189, 192, 193, 195, 196, 197, 198], "llvm_mod": 3, "llvm_modul": 37, "llvm_option": 168, "llvm_version": 132, "llvmdev": 132, "llvmmodulenod": 37, "lm": 137, "lm_head": 113, "lnumpy_linear": 20, "lnumpy_matmul": 20, "lnumpy_mlp": 20, "lnumpy_mm_relu": 27, "lnumpy_relu": 20, "lnumpy_relu0": 20, "lo": [17, 82], "load": [0, 2, 3, 5, 56, 57, 59, 60, 64, 65, 66, 70, 71, 79, 88, 89, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 113, 128, 135, 136, 141, 144, 145, 148, 150, 151, 153, 155, 157, 162, 163, 168, 169, 171, 173, 174, 187, 188, 192, 197], "load_best_record": 135, "load_data": [64, 115], "load_execut": 44, "load_fil": 113, "load_from_buff": 136, "load_from_fil": [105, 106, 107, 136], "load_histori": [105, 106, 107, 136], "load_imag": 47, "load_image_color": 47, "load_inference_model": 155, "load_json": [75, 144], "load_keras_model": 75, "load_librari": [119, 162], "load_log_fil": [97, 98, 99, 100, 135], "load_matrix": 89, "load_matrix_sync": 89, "load_model_fil": 135, "load_modul": [0, 2, 3, 36, 58, 59, 61, 65, 66, 67, 69, 70, 71, 97, 99, 105, 107, 109, 141, 150, 162, 193, 195], "load_network": 47, "load_param": [0, 141, 157], "load_param_dict": [75, 157], "load_prelud": [157, 159], "load_record": 135, "load_runtime_modul": 66, "load_state_dict": [115, 148], "load_vm_modul": 163, "load_weight": [48, 69], "loadbinary_blob_type_kei": 3, "loadbinary_cuda": 3, "loadbinary_examplejson": 36, "loaded_lib": [3, 58, 59, 65, 99, 193], "loaded_param": 0, "loadfile_examplejson": 36, "loadfile_so": 3, "loadfromfil": 3, "loc": 137, "loc_pr": 161, "locahost": 136, "local": [4, 7, 14, 22, 23, 26, 30, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 58, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 113, 115, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 131, 132, 133, 135, 136, 141, 145, 146, 149, 150, 151, 152, 154, 157, 158, 162, 171, 173, 174, 175, 177, 179, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199], "local_demo": [67, 68, 69, 70, 71, 109], "local_memori": 99, "local_offset": 173, "local_ptr": 173, "local_s": 173, "localbuild": [67, 97, 99, 104, 105, 106, 107, 108, 135, 136, 189], "localhost": 131, "localrpcmeasurecontext": [96, 98, 135], "localrunn": [97, 99, 100, 104, 106, 108, 135, 136, 145, 188, 189], "localsess": [67, 69, 70, 71, 109, 162], "localvar": 180, "locat": [1, 3, 17, 27, 36, 52, 58, 65, 75, 79, 124, 132, 137, 144, 145, 148, 149, 156, 157, 158, 161, 162, 169, 171, 173, 174, 175, 197], "locate_cach": 136, "lock": 137, "log": [2, 4, 13, 16, 17, 32, 36, 39, 52, 56, 61, 65, 66, 67, 68, 80, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 111, 118, 135, 136, 137, 140, 145, 149, 157, 158, 160, 162, 169, 173, 175, 177, 187, 188, 195, 198], "log10": [157, 169, 173, 175], "log1p": 173, "log2": [157, 169, 173, 175], "log_fil": [96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 135, 187, 198], "log_filenam": [105, 106, 107, 108], "log_interv": 136, "log_softmax": [115, 137, 149, 158, 175], "log_to_databas": 136, "log_to_fil": [67, 104, 105, 106, 107, 108, 136, 188, 189], "logarithm": [149, 175], "logestimatedlat": 135, "logger": [136, 145], "logic": [2, 3, 4, 8, 9, 12, 22, 119, 137, 145, 148, 149, 157, 175], "logical_and": [149, 157, 175], "logical_not": [149, 157, 175], "logical_or": [149, 157, 175], "logical_xor": [149, 157, 175], "logit": [113, 115, 149, 158], "logits_np": 113, "logits_torch": 115, "logits_tvm": 115, "logsoftmax": 147, "logsumexp": 157, "long": [5, 8, 9, 11, 14, 65, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 120, 123, 132, 148, 149, 157, 159, 168, 175, 180, 183, 189, 197], "longer": [5, 8, 9, 65, 79, 105, 106, 107, 115, 141, 151, 162, 175, 188], "longest": 148, "look": [7, 10, 11, 12, 13, 17, 31, 34, 35, 36, 37, 56, 58, 82, 85, 90, 109, 118, 119, 120, 127, 141, 144, 146, 148, 150, 151, 169, 173, 174, 177, 180, 183, 189, 195, 197, 198], "lookup": [1, 3, 36, 52, 136, 147, 148, 150, 166, 189, 197], "lookup_bind": [147, 150], "lookup_param": 173, "loop": [2, 4, 9, 20, 25, 26, 30, 35, 37, 56, 79, 82, 89, 101, 124, 125, 127, 128, 129, 136, 138, 141, 151, 169, 170, 171, 173, 174, 179, 182, 192, 196], "loop_partit": 171, "loop_rv": 138, "loop_stat": 101, "loop_unrol": 9, "loop_var": [82, 173], "looppartit": [139, 174], "looprv": [138, 171], "loopstat": 135, "loos": [12, 109], "lora": 151, "loraa": 151, "lorab": 151, "lorien": 184, "lose": 135, "loss": [4, 65, 67, 135, 136, 149, 158, 159, 161, 175], "loss_typ": [67, 105, 106, 107, 108, 136, 189], "lossi": 75, "lost": 14, "lot": [5, 9, 97, 98, 99, 100, 120, 182], "low": [2, 18, 22, 23, 27, 32, 37, 41, 44, 56, 59, 66, 75, 93, 97, 98, 99, 100, 110, 111, 113, 137, 144, 145, 151, 157, 161, 170, 173, 174, 175, 188, 192, 199], "low_level_custom_pass": [82, 83, 186], "lower": [2, 18, 23, 37, 56, 61, 67, 73, 81, 90, 96, 101, 110, 113, 123, 124, 125, 127, 128, 129, 135, 137, 139, 144, 149, 151, 153, 155, 157, 160, 161, 169, 170, 171, 173, 174, 175, 176, 177, 187, 188, 191, 192, 193, 195, 196, 198], "lower_to_primfunc": 153, "loweralloctensor": [113, 151], "lowerautocopi": 174, "lowercas": 115, "lowercrossthreadreduct": 174, "lowercustomdatatyp": 174, "lowerdevicekernellaunch": 174, "lowerdevicestorageaccessinfo": 174, "loweredoutput": 153, "lowergpuipcallocstorag": 151, "lowerinitblock": 174, "lowerintrin": 174, "lowermatchbuff": 174, "loweropaqueblock": 174, "lowerruntimebuiltin": [113, 151], "lowerthreadallreduc": 174, "lowertvmbuiltin": 174, "lowerwarpmemori": 174, "lowest": [22, 137, 170, 188], "loxodonta": 52, "lp64d": 168, "lrn": [158, 175], "lsb": 62, "lscpu": 58, "lshift": 175, "lstm": [159, 175], "lstm_cell": 159, "lt": 173, "lua": 5, "luckili": 118, "luke": [58, 159], "lumin": 49, "lv": [20, 22, 23, 43, 110, 111, 182], "lv0": [18, 20, 22, 147, 151], "lv1": [18, 20, 22, 43, 111, 147, 148, 149, 151], "lv10": 111, "lv11": 111, "lv12": 111, "lv13": 111, "lv14": 111, "lv15": 111, "lv16": 111, "lv17": 111, "lv18": 111, "lv19": 111, "lv1_1": 22, "lv1_adjoint": 151, "lv2": [20, 22, 43, 111, 148, 149, 151], "lv20": 111, "lv21": 111, "lv22": 111, "lv23": 111, "lv24": 111, "lv25": 111, "lv26": 111, "lv27": 111, "lv28": 111, "lv29": 111, "lv2_adjoint": 151, "lv3": [22, 43, 111], "lv30": 111, "lv31": 111, "lv32": 111, "lv33": 111, "lv34": 111, "lv35": 111, "lv36": 111, "lv37": 111, "lv38": 111, "lv39": 111, "lv4": [22, 43, 111], "lv40": 111, "lv41": 111, "lv42": 111, "lv43": 111, "lv44": 111, "lv45": 111, "lv46": 111, "lv47": 111, "lv48": 111, "lv49": 111, "lv5": [22, 43, 111], "lv50": 111, "lv51": 111, "lv52": 111, "lv53": 111, "lv54": 111, "lv55": 111, "lv56": 111, "lv57": 111, "lv58": 111, "lv59": 111, "lv6": [22, 43, 111], "lv60": 111, "lv61": 111, "lv62": 111, "lv63": 111, "lv64": 111, "lv65": 111, "lv66": 111, "lv67": 111, "lv68": 111, "lv69": 111, "lv7": 111, "lv70": 111, "lv71": 111, "lv72": 111, "lv73": 111, "lv74": 111, "lv75": 111, "lv76": 111, "lv77": 111, "lv78": 111, "lv79": 111, "lv8": 111, "lv80": 111, "lv81": 111, "lv82": 111, "lv83": 111, "lv84": 111, "lv85": 111, "lv86": 111, "lv87": 111, "lv88": 111, "lv89": 111, "lv9": 111, "lv90": 111, "lv_1": 43, "lynx": [67, 73], "m": [0, 4, 7, 14, 16, 17, 20, 22, 30, 31, 35, 46, 47, 51, 52, 56, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 79, 80, 88, 89, 90, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 115, 121, 123, 124, 125, 128, 129, 132, 135, 136, 137, 139, 147, 149, 151, 158, 160, 162, 169, 171, 173, 174, 175, 176, 179, 180, 187, 188, 191, 195, 197, 198], "m0": [101, 173, 175], "m1": [101, 139, 173, 175], "m2": [139, 173, 175], "m_": 37, "m_c": 90, "m_c_init": 90, "m_inner": 90, "m_inner_init": 90, "m_outer": 90, "ma": 50, "mabi": 168, "mac": [152, 199], "macbook": 90, "machin": [4, 16, 17, 18, 20, 27, 37, 41, 44, 56, 58, 59, 62, 65, 66, 67, 69, 70, 71, 72, 75, 79, 82, 97, 100, 101, 105, 106, 107, 108, 111, 130, 132, 135, 136, 150, 153, 157, 162, 166, 178, 184, 189, 192, 193, 197, 198], "machine_nam": 56, "machineri": 182, "maco": [7, 59, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 131, 133, 187, 188], "macosx": 137, "macro": [8, 13, 34, 36, 37, 39], "macro_func": 8, "macro_impl": 8, "macro_stream": 36, "made": [10, 11, 75, 144, 148, 149, 150, 160, 171, 173, 195], "magic": [5, 96, 101, 187], "magnitud": 148, "mai": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17, 22, 25, 32, 34, 35, 36, 39, 49, 51, 56, 58, 59, 64, 65, 67, 68, 70, 71, 72, 73, 75, 79, 80, 82, 84, 85, 89, 101, 104, 108, 109, 110, 111, 115, 118, 127, 128, 132, 135, 144, 146, 147, 148, 149, 150, 151, 155, 159, 160, 163, 166, 168, 169, 170, 171, 173, 174, 175, 176, 179, 180, 182, 183, 189, 192, 195, 197, 198], "mail": [11, 185], "main": [1, 2, 4, 7, 8, 12, 15, 16, 18, 20, 23, 25, 31, 36, 43, 46, 47, 48, 49, 50, 51, 52, 53, 62, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 85, 89, 90, 93, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 110, 111, 115, 119, 120, 123, 124, 125, 128, 129, 137, 139, 145, 146, 147, 148, 149, 150, 151, 152, 157, 159, 160, 170, 171, 175, 179, 182, 187, 189, 191, 193, 195, 196, 197, 199], "main_adjoint": 151, "main_func": 120, "main_gvar": 120, "mainli": [4, 5, 36, 82, 84, 96, 135, 144, 151, 171], "maintain": [4, 9, 11, 15, 16, 31, 65, 79, 84, 132, 136, 149, 157, 158, 160, 171, 175], "mainten": 16, "major": [2, 4, 9, 11, 25, 36, 62, 65, 125, 137, 157, 169, 173, 175, 187, 192, 195, 196], "make": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 15, 16, 17, 27, 34, 35, 36, 37, 44, 53, 56, 58, 62, 65, 66, 67, 69, 70, 71, 73, 74, 75, 79, 80, 84, 85, 89, 93, 96, 97, 101, 104, 105, 106, 107, 108, 109, 113, 120, 121, 127, 128, 130, 132, 135, 136, 140, 144, 152, 154, 155, 156, 157, 160, 169, 173, 174, 175, 176, 178, 179, 180, 182, 183, 186, 187, 188, 189, 190, 192, 194, 196, 197, 198], "make_closur": 149, "make_compilation_config": 168, "make_const": 8, "make_filled_simdgroup_matrix": 173, "make_idx": 175, "make_nat_expr": 159, "make_nat_valu": 159, "make_nod": [4, 144, 154], "make_object": [34, 36], "make_trac": 176, "make_workload_kei": 135, "makecumprod": 34, "makecumsum": 34, "makedir": 119, "makepackedapi": 174, "maker": 82, "makeunpackedapi": 174, "makino": 71, "mali": [94, 95, 107, 135, 168, 186], "malici": 115, "malloc": [36, 185], "malyshev": 56, "manag": [1, 4, 11, 15, 17, 37, 56, 80, 84, 85, 88, 93, 97, 105, 106, 107, 132, 136, 137, 160, 185], "mandatori": 9, "manger": 169, "mani": [2, 4, 5, 9, 10, 11, 12, 20, 34, 35, 36, 39, 56, 59, 62, 65, 69, 73, 74, 75, 76, 80, 81, 85, 97, 98, 99, 100, 104, 105, 106, 107, 108, 113, 135, 136, 137, 138, 151, 160, 174, 175, 179, 180, 182, 189, 192, 195, 197], "manifest": 160, "manifestlifetim": 160, "manifestsharedmemorylocalstag": 174, "manipul": [2, 4, 5, 82, 151, 171, 177, 179, 183], "manner": [4, 31, 84, 125, 160, 176, 179, 183], "manual": [2, 4, 12, 14, 16, 20, 36, 59, 62, 80, 96, 97, 98, 99, 100, 104, 121, 132, 136, 137, 149, 157, 169, 171, 187, 188], "map": [2, 4, 8, 25, 27, 35, 36, 37, 41, 44, 52, 58, 59, 65, 73, 79, 82, 89, 135, 136, 137, 138, 139, 141, 144, 145, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 182, 199], "map_accmul": 179, "map_accuml": 179, "map_accumr": 179, "map_accumr_fold": 179, "map_free_var": 144, "map_indic": 173, "map_input": 58, "map_ndarrai": 173, "map_proto": 52, "map_proto_path": 52, "map_proto_url": 52, "map_shap": 173, "mapndarrai": 174, "mapped_valu": 27, "mapping_funct": [169, 173], "mark": [3, 4, 6, 7, 10, 14, 20, 36, 64, 65, 79, 123, 125, 147, 149, 150, 151, 160, 169, 171, 173, 174, 182, 188, 195], "markcompilerfunctionsasextern": 160, "markdown": 12, "marker": 79, "markup": [12, 59], "marvel": 62, "masahiro": [73, 118], "mask": [47, 72, 123, 148, 149, 157, 164, 173, 175], "mask2str": 1, "mask_valu": [157, 175], "masked_fil": 149, "maskrcnn_resnet50_fpn": 72, "maskrcnn_resnet50_fpn_coco": 72, "maskrcnn_resnet50_fpn_weight": 72, "masquerad": 132, "master": [51, 53, 72, 115, 159], "masuda": [73, 118], "match": [1, 7, 8, 17, 34, 49, 85, 89, 90, 101, 115, 118, 121, 128, 136, 137, 146, 147, 148, 150, 151, 152, 154, 157, 159, 160, 162, 163, 168, 171, 173, 174, 175, 176, 178, 183, 195, 199], "match_buff": [20, 22, 23, 30, 123, 124, 125, 129, 147, 169, 171, 173, 191, 195, 196], "match_cast": [147, 151], "match_order_bewar": 179, "matchbufferregion": 173, "matchcast": [147, 150], "matchcastnod": 150, "matched_bind": 151, "matched_expr": 151, "matchresult": 151, "mate10": [97, 105, 107], "mate10pro": [97, 105, 107], "materi": [12, 123, 124, 128], "math": [157, 158, 160, 169, 173, 181, 195], "mathbb": 27, "mathemat": [34, 173], "mathrm": 148, "matmul": [18, 20, 22, 23, 43, 44, 101, 110, 111, 113, 121, 135, 136, 137, 148, 149, 151, 155, 158, 160, 169, 171, 175, 187, 188], "matmul1": [22, 23, 43, 44, 110], "matmul_1": 187, "matmul_add": 187, "matmul_after_reorder_block_iter_var": 171, "matmul_bas": 188, "matmul_i": 187, "matmul_i_i": 187, "matmul_i_o_i": 187, "matmul_i_o_o_i": 187, "matmul_i_o_o_o": 187, "matmul_intermedi": [23, 43], "matmul_j": 187, "matmul_j_i": 187, "matmul_j_o_i": 187, "matmul_j_o_o_i": 187, "matmul_j_o_o_o": 187, "matmul_k": 187, "matmul_k_i": 187, "matmul_k_o": 187, "matmul_leg": 175, "matmul_nt": 175, "matmul_rf_init": 110, "matmul_rf_loc": 110, "matmul_rf_upd": 110, "matmul_transposed_bias_relu": 110, "matmul_v1": 188, "matmulattr": 149, "matplotlib": [47, 48, 49, 53, 67], "matric": [27, 75, 89, 148, 149, 157, 158, 173, 175, 187, 195], "matrix": [18, 75, 88, 89, 90, 94, 95, 115, 125, 136, 137, 148, 149, 151, 156, 157, 158, 173, 175, 186], "matrix_a": 89, "matrix_b": 89, "matrix_set_diag": [157, 175], "matrixcor": 137, "matt": 180, "matter": [3, 9, 70, 71, 115, 174], "matthew": 197, "mattr": [58, 64, 71, 97, 109, 168], "matur": 4, "max": [20, 22, 23, 27, 30, 31, 43, 65, 67, 69, 73, 74, 96, 97, 98, 99, 100, 101, 118, 123, 135, 141, 148, 149, 157, 158, 161, 163, 168, 169, 171, 173, 175, 191, 197, 198], "max_": [149, 156, 158], "max_batch_s": [65, 113], "max_block_size_i": 168, "max_block_size_x": 168, "max_detect": 161, "max_detections_per_class": 161, "max_diag_len": [157, 175], "max_displac": [158, 175], "max_factor": 136, "max_function_arg": 160, "max_innermost_factor": 171, "max_length": [157, 175], "max_lin": 135, "max_local_memory_per_block": [99, 135], "max_num_thread": [1, 75, 104, 168, 177], "max_number_of_tri": 188, "max_output_boxes_per_class": 161, "max_output_s": 161, "max_per_stage_descriptor_storage_buff": 6, "max_period": 148, "max_pool1d": [149, 158], "max_pool2d": [58, 65, 68, 85, 111, 149, 158, 193], "max_pool2d_0": 68, "max_pool2d_backward": 149, "max_pool2d_grad": 158, "max_pool3d": [65, 149, 158], "max_push_constants_s": 6, "max_r": [169, 173], "max_retri": 162, "max_seqlen_k": 149, "max_seqlen_q": 149, "max_shared_memory_per_block": [99, 135], "max_storage_buffer_rang": 6, "max_threads_per_block": [70, 99, 135], "max_total_seq_len": 113, "max_trial": 145, "max_trials_gloabl": 151, "max_trials_glob": [110, 145, 151], "max_trials_per_task": [145, 151], "max_uniform_buffer_rang": 6, "max_unrol": 136, "max_valu": [169, 173], "max_vthread_ext": [99, 135], "max_workspace_s": 65, "maxim": [88, 157, 175], "maximu": 52, "maximum": [1, 20, 58, 64, 65, 96, 101, 133, 135, 136, 141, 145, 148, 149, 151, 157, 158, 160, 161, 162, 169, 171, 173, 174, 175], "maxinum": 161, "maxperstagedescriptorstoragebuff": 6, "maxpool2d": 58, "maxpushconstantss": 6, "maxstoragebufferrang": 6, "maxuniformbufferrang": 6, "mayb": [80, 135], "mb": [24, 29, 45, 48, 55, 77, 83, 91, 95, 103, 114, 117, 126, 159, 186, 194], "mbarrier": 173, "mbox": [115, 148, 149, 156, 158], "mc": 90, "mcpu": [64, 72, 73, 74, 75, 90, 100, 101, 108, 109, 168, 187, 189, 195, 197, 198], "md": [7, 11, 12, 52, 115, 148, 149, 160], "mean": [0, 4, 5, 7, 9, 12, 17, 27, 31, 34, 35, 36, 43, 50, 51, 58, 65, 67, 69, 70, 71, 72, 73, 74, 85, 88, 89, 90, 98, 100, 104, 105, 106, 107, 108, 109, 110, 115, 121, 135, 136, 138, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 157, 158, 159, 162, 171, 173, 175, 179, 180, 182, 183, 189, 195, 197, 198], "mean_std": 157, "mean_tim": 195, "mean_vari": 157, "meaning": [12, 14, 101, 135, 175], "meant": [12, 150, 166, 190], "meantim": 9, "meanwhil": [4, 27, 41, 43], "measur": [96, 97, 98, 99, 100, 101, 104, 105, 107, 108, 109, 135, 137, 141, 145, 150, 166, 187, 188, 189, 192, 195], "measure_batch": 136, "measure_callback": [96, 97, 98, 99, 100, 101, 135, 145, 187], "measure_candid": 145, "measure_ctx": [96, 98], "measure_method": 136, "measure_opt": [67, 104, 105, 106, 107, 108, 136, 188, 189], "measure_record": [97, 98, 99, 100], "measure_spars": 75, "measure_str_kei": 136, "measurecallback": [135, 145], "measurecandid": 145, "measureerrorno": [136, 188], "measureinput": [135, 136], "measureresult": [135, 136, 188], "meausr": 135, "mechan": [2, 3, 4, 9, 13, 35, 37, 58, 80, 84, 85, 118, 136, 160, 179], "media": [47, 115], "median": [31, 67, 69, 73, 74, 96, 98, 100, 101, 141, 187, 189], "meet": [2, 135, 136, 150, 166, 174, 188], "meet_condition_func": [101, 135], "mem": [24, 29, 45, 55, 77, 83, 91, 95, 103, 114, 117, 126, 186, 194], "mem_copi": 173, "mem_copy_16_16": 173, "mem_scop": 164, "member": [4, 5, 8, 9, 10, 11, 15, 17, 36, 135, 144, 146, 148, 149, 150, 159, 169, 174, 175, 176, 179, 180, 183], "memcpi": 1, "memo_": 35, "memoiz": [35, 137, 150, 157], "memori": [0, 1, 2, 4, 6, 20, 27, 36, 37, 43, 48, 52, 56, 64, 65, 66, 74, 75, 90, 99, 113, 127, 135, 141, 144, 145, 146, 148, 151, 159, 160, 164, 169, 170, 171, 173, 174, 175, 189, 195, 199], "memort": 173, "memory_cfg": [150, 166], "memory_scop": [144, 168], "memorydatabas": 145, "mention": [5, 36, 88, 90, 129, 177, 189, 195, 197], "merg": [9, 10, 11, 12, 14, 16, 17, 49, 135, 136, 144, 151, 160, 171, 174], "mergecompilerregion": 160, "mergecomposit": 160, "mergecompositefunct": 151, "merger": 9, "mergesharedmemoryalloc": 174, "merit": [10, 11], "merrymerci": [97, 159], "mesg": 177, "mesh": 149, "meshgrid": [157, 175], "messag": [6, 7, 9, 10, 13, 14, 15, 32, 39, 72, 105, 106, 107, 113, 127, 135, 136, 140, 149, 173, 177], "message_pass": 37, "met": 171, "meta": [3, 84, 110, 119, 144, 145, 154, 157, 168, 173, 175, 176, 180, 193, 195], "meta_index": 173, "meta_schedul": [130, 151], "meta_schedule_origin_shap": 175, "meta_schedule_original_shap": 175, "metadata": [4, 35, 79, 110, 111, 128, 160, 171, 173, 176, 180, 199], "metal": [5, 41, 43, 62, 132, 137, 162, 164, 168, 195, 198], "metallib": 137, "metaschedul": [2, 111, 151, 174], "metascheduleapplydatabas": [110, 151], "metascheduletuneirmod": 151, "metascheduletunetir": [110, 151], "method": [1, 2, 4, 7, 8, 16, 23, 30, 34, 35, 37, 49, 56, 58, 65, 66, 73, 75, 79, 85, 110, 111, 115, 125, 128, 135, 138, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 161, 162, 164, 168, 169, 171, 173, 175, 176, 177, 188, 195, 196, 197, 198], "methodologi": 90, "metric": [4, 93, 136, 165], "metriccollector": 165, "metz": 159, "mi": 90, "michael": 199, "micro": 128, "microprocessor": 192, "microtvm": 16, "middl": [127, 147], "might": [5, 8, 9, 10, 12, 14, 20, 34, 35, 39, 59, 62, 66, 72, 109, 121, 124, 131, 146, 148, 152, 164, 179, 180, 182, 188, 189, 195, 197], "million": [189, 197], "millisecond": [135, 136, 141, 150, 166], "mimic": [35, 136, 175], "min": [31, 62, 65, 66, 67, 69, 72, 73, 74, 98, 100, 105, 106, 107, 123, 127, 141, 144, 148, 149, 157, 163, 169, 171, 173, 175, 189, 197, 198], "min_exec_num": 108, "min_num_branch": 160, "min_os_vers": 137, "min_r": [169, 173], "min_repeat_m": [96, 97, 98, 99, 100, 101, 104, 106, 108, 135, 136, 141, 150, 166, 187, 189], "min_seed_record": 136, "min_siz": [151, 173], "min_valu": [129, 144, 169, 173], "mind": [10, 20, 27, 66, 118, 132], "mini": [148, 158], "minim": [2, 5, 7, 59, 67, 135, 150, 157, 160, 164, 166, 175, 180, 184, 195], "minimum": [5, 6, 9, 12, 37, 41, 44, 60, 65, 96, 98, 132, 135, 136, 141, 144, 148, 149, 150, 151, 157, 160, 161, 166, 169, 173, 175, 185, 189, 195], "minor": [9, 16, 36, 65, 137, 175], "minrpc": 162, "minu": 85, "minut": [47, 50, 52, 67, 68, 72, 73, 98, 100, 113, 187, 189, 195, 197], "miopen": 118, "miopenconvolut": 137, "miopenfloat": 137, "miopenhalf": 137, "miopentranspos": 137, "mirror": [17, 34, 50, 158, 175, 182], "mirror_pad": [158, 175], "mirrorpad": 158, "mirrorpadinput": 175, "mismatch": [27, 49, 74, 148], "miss": [20, 36, 93, 108, 145, 148, 157, 158, 160, 173], "missing_kei": 148, "missing_op": 140, "missing_op_mod": 160, "missing_pattern": 152, "missingtask": 136, "mistak": 132, "mistakenli": 14, "mix": [43, 49, 56, 66, 67, 121, 148, 149, 151, 155, 158, 160, 175, 192], "mixed_precis": [56, 67], "mixed_precision_acc_typ": [56, 67], "mixed_precision_calculation_typ": [56, 67], "mixed_precision_op": [56, 67], "mixed_precision_typ": 160, "mixin": 148, "mixtur": 149, "mk": 69, "mkdir": [17, 56, 62, 66, 69, 70, 71, 80, 132, 197, 198], "mkl": [36, 72, 90, 195], "mkswap": 66, "ml": [12, 19, 20, 22, 23, 41, 43, 44, 56, 64, 110, 130, 179, 189, 197], "mlc": [20, 27], "mlf": 199, "mlip": 64, "mlir": 148, "mlmodel": [46, 155], "mlp": [22, 44, 93, 97, 100, 113, 145, 159], "mlpmodel": 44, "mlsim": 64, "mm_relu": [27, 30, 31], "mma": [173, 174], "mma_desc": 171, "mma_fil": 173, "mma_intrin": 171, "mma_stor": 173, "mma_sync": [89, 173], "mmult": [90, 195], "mnist": 64, "mo": 90, "mobil": [41, 44, 102, 103, 109, 133, 186], "mobile_net": 159, "mobilenet": [46, 53, 62, 74, 97, 98, 99, 100, 105, 106, 107, 108, 159], "mobilenet_v1_1": 53, "mobilenet_v1_2018_08_02": 53, "mobilenet_v2": [69, 73], "mobilenet_v2_1": 74, "mobilenet_v2_kera": 69, "mobilenet_v2_weight": [69, 73], "mobilenet_v2_weights_tf_dim_ordering_tf_kernels_0": 69, "mobilenetv2": 69, "mobilenetv2_1": 59, "mock": 199, "mod": [1, 2, 3, 4, 22, 23, 31, 35, 36, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 85, 93, 97, 98, 99, 100, 105, 106, 107, 108, 110, 111, 113, 115, 119, 120, 135, 137, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 160, 162, 165, 166, 170, 171, 173, 174, 175, 176, 182, 189, 193, 196, 197, 199], "mod0": 119, "mod1": [84, 119], "mod2": 84, "mod3": 84, "mod_": 3, "mod_from_relax": 43, "mod_from_script": 43, "mod_from_torch": 43, "mod_nam": [119, 153, 157, 160], "mod_spec": 113, "mode": [49, 56, 60, 65, 67, 68, 97, 98, 99, 100, 108, 113, 115, 119, 132, 136, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 168, 169, 173, 175, 176, 199], "model": [2, 4, 8, 11, 12, 16, 19, 22, 30, 36, 39, 41, 55, 56, 58, 59, 65, 77, 80, 86, 94, 96, 97, 98, 99, 100, 102, 105, 106, 107, 108, 112, 114, 127, 130, 135, 136, 137, 141, 145, 147, 148, 149, 151, 152, 153, 155, 157, 159, 160, 161, 168, 176, 178, 181, 184, 186, 187, 188, 190, 194, 196, 199], "model_config": 113, "model_cont": 74, "model_dir": [53, 74], "model_dir_path": 155, "model_embed_tokens_weight1": 113, "model_fil": [46, 64, 135], "model_file_nam": 68, "model_format": 68, "model_func": [72, 75], "model_layers_0_input_layernorm_weight1": 113, "model_layers_0_mlp_down_proj_weight1": 113, "model_layers_0_mlp_gate_up_proj_weight1": 113, "model_layers_0_post_attention_layernorm_weight1": 113, "model_layers_0_self_attn_o_proj_weight1": 113, "model_layers_0_self_attn_qkv_proj_weight1": 113, "model_layers_1_input_layernorm_weight1": 113, "model_layers_1_mlp_down_proj_weight1": 113, "model_layers_1_mlp_gate_up_proj_weight1": 113, "model_layers_1_self_attn_o_proj_weight1": 113, "model_layers_1_self_attn_qkv_proj_weight1": 113, "model_lib": 64, "model_nam": [47, 51, 52, 67, 70, 71, 108, 137], "model_param": [115, 151], "model_path": [46, 49, 50, 52, 53, 74, 115, 189], "model_rt_graph": 64, "model_trac": 72, "model_url": [46, 49, 52, 53, 74, 115, 189], "model_zoo": [59, 65, 159], "modeloptim": 136, "modelproto": [148, 155], "moder": [10, 11], "modern": [4, 59, 62, 195], "modif": [31, 188], "modifi": [4, 6, 14, 17, 32, 35, 36, 56, 58, 62, 65, 80, 84, 97, 104, 105, 107, 109, 136, 145, 149, 150, 151, 160, 174, 175, 176, 179, 195], "modul": [0, 1, 2, 9, 11, 13, 20, 22, 23, 30, 31, 35, 36, 37, 41, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 82, 84, 85, 89, 90, 96, 97, 98, 99, 100, 105, 106, 107, 108, 109, 111, 113, 115, 118, 119, 123, 124, 125, 128, 129, 132, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 157, 159, 160, 162, 163, 165, 166, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 183, 187, 188, 189, 191, 192, 196, 199], "modular": [2, 90, 175, 199], "modular_set": 175, "modularset": 175, "module0": 119, "module1": 119, "module_attr": 110, "module_equ": 145, "module_load": 136, "module_nam": 163, "module_pass": [4, 23, 110, 113, 176], "modulelist": [113, 115, 148], "moduleload": 136, "modulenod": [5, 36, 37], "modulepass": [4, 84, 176], "modulepassnod": 4, "moduleseri": 3, "modulespec": [113, 148], "modulespectyp": 148, "modulo": 149, "modulu": 175, "moment": [56, 67, 80, 118, 171, 195], "momentum": [111, 149, 158, 175], "momodulelistdul": 148, "monitor": 136, "monkei": 135, "monoton": [157, 175], "month": 17, "monthli": 17, "mood": 16, "more": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 20, 22, 27, 30, 32, 34, 35, 36, 37, 39, 41, 43, 44, 50, 52, 56, 60, 62, 65, 66, 73, 74, 75, 79, 84, 85, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 115, 118, 120, 121, 123, 124, 128, 133, 135, 136, 137, 140, 143, 144, 146, 148, 149, 150, 151, 154, 155, 156, 157, 158, 160, 166, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 182, 183, 187, 189, 190, 191, 192, 195, 197], "moreau": 97, "moreov": [73, 74, 128, 157], "morita": 46, "morpholog": [156, 175], "morri": 65, "most": [1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 20, 30, 35, 36, 43, 48, 51, 56, 60, 67, 68, 70, 71, 72, 73, 75, 79, 97, 98, 99, 100, 104, 127, 128, 135, 136, 146, 148, 149, 150, 157, 159, 160, 169, 171, 173, 174, 179, 180, 183, 189, 197, 198], "mostli": [75, 148, 149], "motiv": 27, "mount": [69, 131], "move": [7, 8, 9, 10, 16, 17, 66, 89, 125, 128, 161, 169, 171, 174, 195, 196], "movement": [5, 173], "moving_mean": [149, 158, 175, 182], "moving_var": [149, 158, 175, 182], "mpi": 163, "mpsoc": 66, "mrvl": 62, "msg": [5, 51, 67, 68, 70, 71, 72, 73, 136, 140, 147], "msvc": 132, "mtl": 164, "mtripl": [56, 58, 59, 64, 67, 68, 69, 71, 97, 99, 105, 107, 109, 159, 168], "much": [4, 8, 11, 12, 16, 39, 43, 60, 62, 75, 121, 136, 148, 157, 171, 179, 183, 191, 197], "mul": [36, 148, 149, 157, 173, 175], "mult": 137, "multi": [2, 13, 18, 25, 90, 96, 101, 149, 153, 157, 158, 162, 163, 173, 174, 181, 187, 188, 195], "multi_filt": 136, "multi_target": 168, "multibox": 161, "multibox_prior": 161, "multibox_transform_loc": 161, "multilay": 159, "multilib": 62, "multinomi": [148, 149], "multinomial_from_uniform": [148, 149], "multipl": [1, 2, 4, 5, 9, 11, 15, 16, 18, 22, 25, 27, 31, 56, 75, 79, 80, 84, 89, 90, 94, 95, 97, 98, 99, 100, 105, 107, 110, 123, 125, 129, 132, 135, 136, 137, 141, 144, 148, 149, 151, 157, 158, 160, 165, 169, 170, 171, 173, 174, 175, 176, 179, 180, 182, 186, 189, 196, 197], "multipli": [34, 36, 65, 75, 84, 88, 115, 125, 128, 147, 148, 149, 151, 152, 157, 158, 169, 173, 175, 180], "multiplicand": 173, "multiplicand_a": 173, "multiplicand_b": 173, "multiply_grad": 34, "multiplygrad": 34, "multiprocess": [135, 162], "must": [1, 4, 6, 7, 8, 9, 11, 16, 17, 34, 36, 37, 46, 58, 59, 62, 65, 67, 73, 79, 82, 89, 105, 106, 107, 132, 145, 146, 147, 148, 149, 150, 151, 157, 158, 159, 160, 162, 163, 164, 166, 169, 171, 173, 175, 177, 179, 180, 183, 195], "mutabl": [4, 137, 177], "mutat": [2, 23, 136, 145, 148, 149, 150, 151, 155, 160, 169, 171, 172], "mutate_irmodul": 150, "mutated_dfb": 150, "mutated_root_fn": 150, "mutation_prob": 136, "mutual": [146, 180], "mv": [17, 58, 198], "mx": 155, "mxgan": 159, "mxnet": [4, 13, 46, 48, 49, 50, 51, 53, 59, 65, 66, 67, 69, 70, 71, 74, 84, 97, 98, 99, 100, 105, 106, 107, 108, 115, 155, 157, 159, 179, 193], "my": [10, 12, 70, 71, 109, 151, 160, 174], "my_fix": 7, "my_func": [148, 168], "my_func_cuda": 168, "my_model": 198, "my_preprocess": [51, 67], "my_repo": 7, "my_rul": 138, "my_tvm_addon": 121, "my_tvmc_script": 198, "myadd": [5, 61, 195], "myadd_pack": 195, "myadd_parallel": 195, "myarrai": 63, "myerror": 140, "myexprmut": 150, "myexprvisitor": 150, "myfunct": 12, "mymodul": [27, 30, 31, 148, 196], "mymodulewithaxisremapsugar": 27, "mypackag": 162, "mypkg": 63, "myrul": 138, "myscan": 124, "myscript": 198, "mysubgraph": 36, "mysum": [169, 173], "n": [3, 6, 20, 22, 23, 30, 32, 35, 36, 37, 47, 61, 66, 67, 75, 82, 85, 89, 90, 96, 97, 98, 100, 101, 104, 109, 113, 115, 119, 121, 123, 124, 125, 128, 129, 132, 135, 136, 137, 139, 141, 144, 147, 148, 149, 151, 156, 157, 158, 159, 161, 165, 169, 171, 173, 174, 175, 179, 180, 187, 188, 191, 195], "n0": [101, 173, 175], "n02123045": [189, 197], "n02123159": [189, 197], "n02124075": [189, 197], "n02129604": [189, 197], "n04040759": [189, 197], "n1": [101, 173, 175], "n2": [64, 173, 175], "n_c": 89, "n_c_init": 89, "n_class": 115, "n_dim": [157, 175], "n_elem": 175, "n_fft": [157, 175], "n_hidden": 115, "n_infeat": 115, "n_inner": [89, 90], "n_inner_init": 90, "n_layer": [97, 98, 99, 100, 105, 106, 107, 108, 115], "n_line": 135, "n_outer": 90, "n_parallel": [135, 136], "n_repeat": [73, 74], "n_stage_0": 135, "n_stage_1": 135, "n_stage_i": 135, "n_trial": [67, 104, 105, 106, 107, 108, 136, 188, 189], "nag": 149, "naiv": [113, 128, 135, 195], "name": [0, 1, 2, 3, 4, 5, 8, 9, 13, 16, 17, 23, 27, 30, 31, 32, 34, 35, 36, 37, 43, 47, 49, 52, 53, 58, 61, 67, 68, 69, 70, 73, 74, 75, 79, 80, 82, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 113, 115, 119, 120, 121, 123, 124, 125, 127, 128, 129, 131, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 182, 183, 187, 188, 189, 191, 195, 196, 198], "name_befor": 85, "name_hint": [36, 113, 120, 144, 147, 148, 150, 154, 157, 173], "name_of_debug_func": 148, "name_prefix": 147, "name_to_bind": 146, "named_param": 113, "named_paramet": 148, "namedtupl": [115, 158, 175], "namer": 155, "namespac": [4, 35, 36, 115, 135, 136, 139, 148, 150, 152, 157, 160, 162, 167, 169, 171, 173, 174], "nan": [149, 157, 169, 173, 175], "nano": [65, 76, 77, 186], "narrow": 174, "narrowdatatyp": 174, "nat": [159, 180], "nativ": [20, 27, 30, 41, 44, 56, 62, 64, 121, 151, 184], "natur": [5, 9, 75, 149, 150, 180], "navig": [12, 37], "nb_j": 101, "nbest": 104, "nbyte": 173, "nc": [89, 90, 158], "nc8n": 158, "nccl": 163, "ncdhw": [148, 149, 156, 158, 175], "ncdhw16c": 175, "ncdhw16d": 175, "ncdhw16h": 175, "ncdhw16w": 175, "ncdhwc": 175, "nch": 175, "nchw": [48, 52, 56, 59, 74, 97, 98, 99, 100, 108, 111, 118, 136, 137, 148, 149, 151, 155, 156, 157, 158, 159, 161, 175, 182, 189, 197], "nchw16c": [157, 173, 175], "nchw16h": 175, "nchw16w": 175, "nchw8c": 158, "nchw_pack_layout": 175, "nchw_xc_layout": 175, "nchwc": [74, 108, 158, 169, 175], "nchwinic": 175, "nchwxc": 175, "nci": 89, "ncw": [148, 149, 156, 158, 175], "ncw16c": 175, "ncw16w": 175, "ncwc": 175, "nd": [0, 2, 30, 31, 37, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 61, 64, 67, 69, 70, 71, 75, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 121, 123, 124, 128, 135, 148, 150, 153, 155, 156, 157, 158, 164, 169, 173, 174, 175, 182, 187, 188, 189, 191, 193, 195, 196], "nd_view_func": 113, "ndarrai": [0, 2, 20, 27, 36, 37, 44, 67, 80, 101, 113, 120, 121, 135, 137, 141, 142, 145, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 163, 166, 169, 173, 174, 175, 180], "ndarray_s": [157, 175], "ndata": 115, "ndhwc": [155, 175], "ndim": [147, 148, 149, 150, 157, 169, 171, 173, 175], "ndk": [56, 57, 67, 69, 97, 99, 105, 107, 135, 136], "ne": 173, "nearbyint": [169, 173], "nearest": [148, 149, 156, 169, 173, 175], "nearest_neighbor": [149, 156, 158, 175], "nearli": [12, 195], "neater": 34, "neatli": 35, "necessari": [7, 8, 10, 11, 12, 13, 16, 17, 20, 34, 35, 37, 56, 61, 62, 64, 73, 79, 80, 96, 98, 118, 124, 132, 136, 144, 145, 149, 154, 157, 158, 169, 174, 175, 179, 183, 189, 191, 196, 198], "necessarili": [1, 12, 35], "neck": [49, 159], "need": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 20, 23, 30, 31, 32, 34, 35, 36, 37, 39, 43, 44, 52, 53, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 79, 80, 82, 84, 88, 89, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 118, 120, 121, 123, 124, 128, 129, 131, 132, 133, 135, 136, 139, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 157, 159, 160, 162, 169, 170, 173, 175, 176, 177, 179, 180, 182, 183, 185, 187, 188, 189, 191, 193, 195, 196, 197, 198], "needn": 80, "neg": [65, 127, 136, 146, 148, 149, 157, 158, 159, 160, 169, 171, 173, 175], "negat": 175, "negative_slop": 149, "neighbor": [157, 175], "neighborhood": [136, 158, 195], "neighbourhood": 90, "neightborhood": [158, 175], "neither": [179, 180], "neon": [58, 71, 97], "neovers": 64, "nest": [2, 25, 27, 30, 37, 85, 90, 123, 146, 148, 150, 151, 152, 157, 166, 170, 171, 179, 180, 182, 195, 196], "nested_cal": 173, "net": [47, 69, 70, 71, 97, 105, 107, 118, 119, 151, 155, 159, 178, 191], "netdef": 155, "neth": 47, "netparamet": 155, "netron": [189, 197, 198], "netw": 47, "network": [0, 4, 15, 18, 20, 22, 27, 37, 44, 46, 56, 58, 59, 61, 65, 66, 74, 75, 80, 84, 85, 94, 95, 102, 103, 109, 110, 111, 113, 116, 117, 124, 131, 135, 136, 147, 148, 149, 152, 155, 156, 158, 159, 161, 162, 175, 179, 184, 185, 186, 189, 192, 197, 199], "networkx": 115, "neural": [4, 18, 20, 22, 27, 37, 44, 59, 61, 66, 80, 94, 95, 105, 106, 107, 108, 110, 111, 113, 115, 124, 147, 148, 149, 152, 158, 175, 178, 184, 186, 189, 191, 192, 197, 199], "neuralnetworkclassifi": 155, "nevalu": 108, "never": [4, 10, 56, 62, 80, 135, 148, 149, 159, 174, 180], "nevertheless": [20, 179, 183], "new": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 16, 17, 20, 34, 35, 36, 37, 39, 41, 43, 44, 56, 59, 60, 62, 64, 66, 69, 70, 71, 79, 81, 82, 85, 90, 97, 98, 99, 100, 105, 106, 107, 110, 113, 120, 123, 128, 135, 136, 139, 141, 144, 147, 148, 149, 150, 151, 154, 155, 157, 158, 159, 160, 162, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 183, 185, 188, 190, 192, 195, 196, 197, 199], "new_attr": 136, "new_bind": 151, "new_block": 151, "new_bodi": 173, "new_el": 148, "new_expr": 160, "new_func": [4, 151, 160, 173, 174], "new_input": 136, "new_ir_modul": 4, "new_iter_var": 169, "new_layout": 135, "new_loop": 171, "new_mod": [4, 35, 176], "new_ord": 171, "new_packag": 198, "new_param": 75, "new_point": 136, "new_shap": [157, 175], "new_shape_arrai": 175, "new_shape_shap": 175, "new_sparse_indic": [157, 175], "new_sparse_indices_shap": 175, "new_sparse_valu": 157, "new_transform": 176, "new_var": 150, "new_vdevic": 151, "new_w": 75, "new_workload": 136, "newaxi": [46, 48, 49, 69, 70, 71, 175], "newcom": 12, "newer": [39, 73, 74], "newli": [7, 147, 163, 195], "newshap": [68, 157, 175], "next": [2, 3, 10, 12, 17, 27, 36, 37, 43, 65, 66, 69, 70, 71, 75, 82, 84, 85, 90, 96, 97, 98, 99, 100, 101, 109, 111, 113, 115, 129, 136, 145, 158, 173, 182, 187, 188, 189, 192, 193, 195, 197, 198], "next_batch": 136, "next_task_id": 145, "nextaft": 173, "ngf": 159, "nhwc": [48, 53, 58, 59, 85, 97, 98, 99, 100, 151, 155, 158, 160, 169, 175, 182], "nhwcnc": 89, "ni": [88, 90], "nice": 118, "nightli": [7, 17], "nil": [68, 179, 183], "nimbl": 184, "nll_loss": [149, 158, 175], "nll_loss_backward": 149, "nlp": 160, "nm": [137, 161], "nms_thresh": 47, "nn": [4, 18, 20, 22, 23, 44, 48, 56, 58, 59, 65, 67, 68, 70, 71, 72, 80, 84, 85, 88, 89, 96, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 113, 115, 118, 119, 123, 127, 137, 142, 147, 151, 152, 155, 160, 169, 179, 182, 191, 193, 199], "nn_c": 89, "nn_c_init": 89, "nnc": 89, "nnf": 89, "nnmodul": [2, 19, 23], "nnmodulewithtir": 22, "nnp_initi": 137, "nnp_status_success": 137, "nnpack": 175, "nnvm": [155, 159, 180], "nnz": [75, 175], "no_bind_return_tupl": 148, "no_error": 188, "no_fork": 162, "no_grad": [43, 51, 72, 73, 111, 115, 149], "no_rewrit": 135, "no_tail": 136, "noalia": [22, 23, 30, 31, 43, 82, 89, 90, 96, 101, 110, 123, 124, 125, 128, 129, 147, 151, 187, 191, 195, 196], "node": [0, 5, 18, 35, 36, 37, 49, 52, 58, 59, 64, 65, 72, 82, 85, 97, 105, 106, 107, 115, 120, 127, 130, 136, 137, 141, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 160, 162, 163, 168, 169, 170, 171, 172, 173, 174, 177, 179, 180, 193, 198], "node_attr": 137, "node_detail": 137, "node_id": [52, 137], "node_lookup": 52, "node_map": [154, 182], "node_row_ptr": 0, "node_to_id": [120, 137], "node_typ": 137, "nodeentri": 36, "nodeid": 0, "nodelookup": 52, "noderef": [4, 36, 153], "nois": [104, 189], "nomal": 148, "nomin": 11, "non": [6, 31, 37, 41, 44, 58, 75, 90, 93, 104, 127, 137, 144, 146, 148, 149, 150, 151, 152, 155, 157, 159, 160, 161, 169, 171, 173, 174, 175, 179, 195], "non_max_suppress": 161, "non_surjective_invers": 173, "none": [0, 5, 22, 23, 25, 31, 34, 37, 43, 44, 48, 51, 52, 67, 68, 69, 70, 71, 72, 73, 75, 82, 101, 104, 105, 106, 107, 108, 110, 111, 113, 115, 119, 120, 128, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 182, 188, 195], "nonmaxsuppress": 161, "nonneg": 171, "nonzero": [75, 137, 149, 175], "nor": [159, 160], "norewrit": 135, "norm": [113, 115, 118, 148, 151, 158, 159, 160], "norm_img_data": [189, 197], "normal": [4, 5, 7, 8, 16, 17, 22, 35, 50, 51, 58, 66, 67, 73, 113, 115, 118, 119, 123, 124, 127, 129, 135, 136, 137, 138, 144, 145, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 162, 166, 169, 171, 173, 175, 177, 180, 183, 189, 197], "normal_reduce_temp0": 191, "normal_reduce_temp0_1": 191, "normal_reduce_temp0_2": 191, "normalis": 175, "normalize_file_list_by_unpacking_tar": 137, "normalize_prim_func": 138, "normalized_shap": 148, "normalizeglobalvar": [147, 151], "not_equ": [148, 149, 157, 175], "not_pref": 13, "notabl": [2, 43, 110, 169, 173], "notat": 175, "note": [2, 3, 4, 5, 7, 8, 12, 13, 14, 15, 16, 20, 22, 23, 32, 34, 35, 36, 48, 59, 62, 66, 67, 68, 72, 74, 75, 79, 84, 85, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 124, 128, 131, 132, 135, 136, 137, 139, 144, 146, 147, 148, 149, 150, 151, 153, 154, 155, 157, 158, 159, 160, 162, 163, 166, 168, 169, 171, 173, 175, 176, 179, 180, 182, 183, 185, 196, 198], "notebook": [22, 23, 30, 31, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 131, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199], "noth": [35, 52, 68, 85, 136, 157, 171], "notic": [7, 17, 22, 34, 35, 36, 101, 127, 129, 179, 180, 193, 195, 198], "notify_runner_result": 145, "notimplementederror": [47, 145], "now": [2, 3, 4, 20, 27, 30, 31, 34, 35, 36, 43, 46, 49, 51, 52, 53, 56, 61, 66, 67, 68, 69, 70, 71, 74, 75, 84, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 113, 115, 123, 127, 128, 135, 141, 144, 145, 148, 149, 151, 155, 158, 160, 164, 171, 174, 175, 176, 177, 182, 187, 188, 189, 191, 193, 195, 196, 197, 198, 199], "np": [20, 27, 30, 31, 37, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 61, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 88, 89, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 121, 123, 124, 125, 128, 129, 136, 145, 148, 149, 150, 151, 157, 159, 163, 166, 171, 173, 175, 182, 187, 188, 189, 191, 193, 195, 196, 197], "np_arr": 164, "np_data": [164, 175], "np_input": 75, "np_out": 75, "np_repeat": [90, 195], "np_runing_tim": 90, "np_running_tim": 195, "np_x": 148, "nparamet": 113, "npart": [61, 88, 89, 104, 125, 169, 188], "npo": 36, "nprint": 119, "nproc": [62, 66, 132], "npz": [64, 189, 197], "nt": [155, 158, 175], "nth": 136, "nthread": 137, "ntop5": 67, "nu": [98, 100], "nucleu": 148, "null": [0, 149, 150, 157, 175, 179], "null__unsort": 157, "null_valu": 149, "nullopt": [150, 163, 171], "nullptr": [1, 3, 4, 34, 35, 36, 37, 173], "nullvalu": 34, "num": [148, 173, 176], "num_anchor": 161, "num_attention_head": 113, "num_block": [75, 175], "num_box": [156, 161, 175], "num_channel": [148, 158], "num_class": [70, 71, 97, 100, 115, 159, 161, 193], "num_classes_with_background": 161, "num_cor": [135, 168], "num_detect": 161, "num_ev": 176, "num_filt": [127, 159, 175], "num_filter_block": 175, "num_filter_chunk": 175, "num_group": [148, 149, 158, 163, 175], "num_head": [148, 149], "num_heads_kv": 148, "num_hidden": [115, 159], "num_hidden_lay": 113, "num_input": [0, 22, 23, 34, 43, 44, 110, 111, 113, 144, 150, 151], "num_key_value_head": 113, "num_kv_head": 113, "num_lay": [3, 85, 97, 98, 99, 100, 105, 106, 107, 108, 115, 137, 159, 193], "num_measur": 135, "num_measure_tri": [96, 97, 98, 99, 100, 101, 135, 187], "num_measures_per_round": 135, "num_newaxi": [157, 175], "num_nod": [115, 163], "num_nonzero": 115, "num_of_image_class": 85, "num_output": [0, 104, 136, 188], "num_q_head": 113, "num_ratio": 161, "num_roi": 161, "num_rpc_dev": 141, "num_seg": 157, "num_siz": 161, "num_stag": 159, "num_task": 169, "num_thread": [88, 108, 124, 136, 145], "num_til": 64, "num_total_detect": 161, "num_trials_per_it": 145, "num_tuning_cor": 145, "num_uniqu": [157, 175], "num_unique_subset": 8, "num_valid_anchor": 161, "num_warmup_sampl": 135, "num_work": [148, 149, 163], "num_workers_per_nod": 163, "number": [0, 1, 3, 4, 5, 7, 14, 16, 17, 34, 36, 37, 49, 62, 64, 66, 67, 69, 70, 71, 73, 74, 75, 80, 84, 85, 88, 89, 90, 94, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 115, 132, 135, 136, 137, 141, 144, 145, 146, 148, 149, 150, 151, 152, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 171, 173, 174, 175, 176, 179, 180, 182, 183, 187, 188, 189, 193, 195, 197, 199], "number_format": 173, "number_of_nod": 115, "numbers2": 179, "numclass": 115, "numedg": 115, "numel": 115, "numer": [56, 73, 79, 90, 136, 148, 157, 159, 169, 173, 175, 177, 180, 195], "numfeat": 115, "numnod": 115, "numpi": [0, 2, 5, 9, 20, 27, 30, 31, 34, 37, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 59, 61, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 121, 123, 124, 125, 128, 129, 132, 135, 136, 137, 148, 149, 150, 155, 156, 157, 158, 163, 164, 169, 171, 173, 175, 177, 182, 187, 188, 189, 193, 195, 196, 197], "numpy_mlp": 20, "numpyasarrai": 164, "numpydoc": [8, 12], "numtestsampl": 115, "numtrainingsampl": 115, "numvalidationsampl": 115, "nune": 197, "nvcc": [89, 119, 132, 150, 192], "nvidia": [36, 65, 70, 89, 94, 95, 102, 103, 111, 131, 136, 173, 186, 192, 193, 195, 198], "nvprof": 104, "nvptx": [37, 192], "nvrtc": 37, "nwc": [155, 175], "nx": 115, "nx_graph": 115, "o": [3, 39, 52, 53, 56, 61, 64, 66, 67, 68, 69, 74, 75, 89, 96, 97, 99, 101, 105, 106, 107, 108, 109, 110, 111, 113, 119, 135, 136, 138, 148, 151, 158, 164, 175, 183, 195, 197], "o0": [132, 173, 175], "o1": [173, 175], "o2": [132, 173, 175], "o3": [132, 148], "o_c": 89, "o_c_init": 89, "o_inn": 89, "o_proj": 113, "obei": [85, 120], "obj": [84, 146, 148, 154, 157, 170], "object": [0, 1, 2, 9, 13, 20, 27, 35, 36, 37, 56, 62, 63, 76, 77, 97, 98, 99, 100, 101, 109, 113, 115, 119, 135, 136, 137, 141, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 186, 188, 192, 195, 196], "object_typ": 113, "objective_func": 135, "objectmodul": 148, "objectptr": 36, "objectref": [4, 5, 165, 172], "objectstructinfo": [148, 150], "objecttyp": 150, "observ": [16, 27, 73, 84, 85, 90, 195], "obtain": [2, 4, 16, 35, 36, 43, 70, 71, 73, 75, 109, 132, 136, 150, 166, 180, 185, 188, 189], "obviou": 37, "oc": [89, 158, 175, 199], "occasion": 7, "occup": 93, "occur": [4, 39, 79, 85, 136, 144, 157, 173, 174, 175], "occurr": [85, 144, 146, 150], "oci": 89, "octeon": 62, "od": 148, "odd": [158, 175], "off": [8, 9, 58, 59, 65, 66, 80, 96, 101, 109, 132, 151, 174, 187], "off_valu": [149, 157, 175], "offend": 7, "offer": [4, 18, 94, 102, 155, 180, 183, 192, 197], "offici": [9, 46, 48, 49, 50, 51, 53, 69, 72, 74, 80, 113, 131, 133, 177, 178], "offload": [36, 56, 58, 62, 64, 65, 68, 151, 199], "offset": [123, 128, 144, 148, 149, 157, 158, 161, 169, 171, 173, 175, 179], "offset_factor": [89, 128, 171, 173, 175], "offset_of": 173, "often": [4, 5, 8, 16, 30, 35, 75, 125, 129, 156, 160, 175, 179, 180, 195], "oh": 148, "ohwi": [151, 160], "oidhw": [149, 158], "oihw": [111, 149, 156, 158, 175], "oiw": [148, 149, 158, 175], "ok": [5, 8, 177], "okai": [104, 106, 188], "ol": 104, "olah": 179, "old": [4, 79, 85, 113, 135, 136, 150, 171], "old_var": 150, "older": 49, "omit": [4, 79, 98, 100, 110, 111, 127, 128, 132, 144, 171, 180, 183], "omod": 56, "on_devic": 160, "on_valu": [149, 157, 175], "onc": [1, 2, 3, 7, 8, 9, 14, 17, 30, 34, 35, 62, 66, 73, 75, 79, 132, 143, 146, 147, 148, 151, 152, 153, 154, 160, 169, 172, 180, 197], "one": [1, 2, 3, 4, 5, 8, 9, 11, 12, 15, 16, 17, 20, 22, 23, 25, 26, 27, 30, 34, 35, 36, 37, 56, 60, 65, 66, 69, 70, 71, 73, 75, 79, 80, 84, 85, 89, 90, 96, 97, 98, 99, 100, 106, 108, 109, 113, 118, 120, 121, 124, 125, 127, 128, 129, 132, 135, 136, 137, 141, 144, 145, 148, 149, 150, 151, 154, 156, 157, 158, 160, 166, 169, 170, 171, 173, 174, 175, 179, 180, 182, 183, 188, 193, 195, 197, 198, 199], "one_hot": [149, 157, 175], "one_lay": 182, "onednn": 36, "oneflow": 155, "ones": [2, 5, 9, 14, 16, 35, 82, 118, 129, 141, 148, 149, 150, 151, 155, 157, 158, 174, 175, 182, 197], "ones_lik": [34, 149, 157], "onesid": [157, 175], "onli": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 15, 16, 17, 20, 22, 23, 27, 30, 32, 34, 35, 36, 43, 44, 48, 56, 58, 59, 60, 62, 63, 64, 65, 70, 71, 72, 75, 79, 80, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 108, 109, 110, 111, 113, 115, 118, 123, 128, 129, 132, 133, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 182, 183, 185, 187, 188, 189, 191, 195, 197, 199], "onlin": [12, 58], "only_en": 172, "onnx": [43, 44, 54, 55, 56, 59, 62, 68, 97, 98, 99, 100, 105, 106, 107, 108, 110, 111, 113, 149, 155, 158, 161, 175, 186, 192, 193, 198], "onnx_model": [49, 64, 189], "onnxoptim": [49, 197], "onto": [14, 34, 66, 157, 171], "onward": 66, "oo": 89, "oo_c": 89, "oo_c_init": 89, "oobcheck": 170, "ooc": 89, "oof": 89, "op": [0, 2, 5, 22, 23, 34, 35, 36, 37, 52, 56, 58, 59, 61, 64, 65, 66, 67, 72, 82, 84, 85, 88, 89, 90, 96, 97, 104, 105, 106, 107, 108, 109, 110, 113, 115, 119, 121, 123, 124, 125, 128, 129, 135, 136, 137, 139, 142, 143, 144, 146, 148, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 163, 165, 166, 168, 169, 171, 173, 174, 175, 177, 180, 183, 187, 188, 191, 195], "op1": 160, "op2": 160, "op_buffer_axis_separ": 151, "op_buffer_input_axis_separ": 151, "op_buffer_transform": 151, "op_convert": 155, "op_diff": 85, "op_id_": 36, "op_impl_map": 151, "op_index": 119, "op_kind": 151, "op_macro": 36, "op_nam": [13, 85, 119, 140, 144, 149, 151, 154, 160, 175, 182], "op_pat": 182, "op_pattern": [23, 43, 110], "op_stat": 35, "op_to_cnt_aft": 85, "op_to_cnt_befor": 85, "op_typ": [148, 149], "opaddtyperel": 144, "opaqu": [1, 25, 34, 150, 170, 171, 174, 179, 180], "opaque_func": 150, "opattributeinvalid": 140, "opattributerequir": 140, "opattributeunimpl": 140, "open": [0, 2, 7, 9, 10, 12, 13, 17, 36, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 67, 69, 70, 71, 73, 74, 75, 97, 105, 106, 107, 115, 137, 162, 189, 192, 197, 198], "open_transport": 16, "opencl": [2, 3, 5, 16, 43, 57, 61, 62, 67, 68, 69, 99, 107, 162, 164, 168], "opencl_device_host": 109, "opencl_device_port": 109, "opencl_modul": 56, "openclml": [62, 68], "opencv": 47, "opengl": 173, "openmp": 72, "openpgp": 17, "oper": [0, 1, 2, 4, 5, 9, 12, 13, 16, 18, 22, 23, 25, 31, 33, 37, 39, 41, 43, 44, 49, 52, 56, 62, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 80, 84, 85, 86, 89, 96, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 115, 118, 120, 124, 125, 127, 135, 136, 137, 140, 141, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 171, 173, 174, 175, 177, 178, 179, 182, 183, 186, 189, 190, 192, 193, 194, 196, 197, 198, 199], "operand": [129, 137, 144, 146, 149, 151, 169, 170, 173, 175], "operaton": [169, 173], "operator_macro": 36, "operator_nam": 151, "operatorconvert": 155, "operatormodul": 196, "operror": 140, "opfus": [157, 160], "opimplement": 153, "opnam": 58, "opnod": [35, 150, 153, 169, 177], "opnotimpl": [13, 140], "opportun": [12, 20, 34, 171], "opposit": [136, 157, 175], "opset": [148, 155], "opstrategi": 34, "opt": [69, 84, 137, 179], "opt1": 90, "opt2": 90, "opt3": 90, "opt4": 90, "opt5": 90, "opt6": 90, "opt6_tim": 90, "opt_conv_cuda": [88, 91, 186], "opt_conv_tensorcor": [89, 91, 186], "opt_gemm": [90, 91, 186], "opt_level": [3, 4, 23, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 82, 84, 85, 97, 98, 99, 100, 105, 106, 107, 108, 110, 113, 115, 119, 135, 136, 151, 157, 160, 174, 176, 189, 193], "opt_llm": 113, "opt_pass_level": [157, 160], "opt_sch_fil": 108, "optim": [0, 1, 2, 4, 9, 12, 18, 19, 20, 23, 26, 31, 32, 34, 35, 36, 37, 41, 43, 56, 59, 64, 65, 66, 69, 70, 71, 75, 81, 82, 86, 91, 96, 97, 98, 99, 100, 101, 102, 104, 105, 108, 112, 114, 118, 120, 128, 130, 135, 136, 137, 143, 144, 145, 148, 149, 151, 153, 155, 157, 158, 160, 171, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 190, 191, 193, 194, 196], "optimize_llm": [113, 114, 186], "optimize_oper": [91, 186], "optimizelayouttransform": 151, "option": [0, 1, 4, 6, 7, 9, 12, 16, 17, 18, 27, 34, 35, 36, 52, 56, 58, 62, 63, 65, 66, 67, 68, 70, 71, 75, 79, 80, 81, 84, 98, 99, 100, 109, 113, 115, 118, 127, 132, 135, 136, 137, 139, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 189, 197], "option_constructor": 154, "option_dict": 64, "optiona": [163, 175], "optionail": 161, "optional_qnn_op": 160, "options_from_nam": 168, "optyp": 49, "orchestr": [4, 84, 199], "order": [0, 1, 4, 6, 9, 11, 12, 34, 35, 36, 62, 65, 69, 70, 71, 79, 82, 85, 88, 90, 104, 105, 106, 107, 125, 128, 135, 136, 137, 141, 144, 145, 146, 148, 149, 150, 151, 152, 157, 158, 159, 160, 161, 165, 169, 170, 171, 172, 175, 178, 179, 180, 182, 183, 187, 188, 195, 198], "ordered_loop": 171, "ordered_union": 145, "ordinari": 179, "ordr": 152, "org": [7, 17, 39, 49, 50, 51, 52, 53, 58, 64, 66, 68, 72, 73, 74, 75, 80, 105, 106, 107, 115, 135, 137, 148, 149, 155, 156, 157, 158, 160, 171, 173, 175, 185], "organ": [2, 11, 12, 56, 90], "orgin": 135, "orient": [12, 180], "orig": 34, "orig_cal": [34, 149], "orig_return_valu": 151, "orig_var": 149, "origin": [9, 14, 17, 27, 31, 34, 35, 56, 75, 82, 90, 113, 120, 128, 135, 136, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 169, 171, 173, 174, 175, 193, 195], "origin_mod": 23, "origin_s": 175, "original_output": 151, "original_paramet": 151, "original_return_valu": 151, "ormod": 98, "oserror": 131, "oshap": [159, 175], "oss": 9, "ostringstream": 36, "ot": 136, "other": [1, 2, 3, 4, 7, 8, 10, 11, 12, 13, 14, 16, 20, 22, 27, 35, 36, 37, 39, 44, 46, 47, 51, 56, 60, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 79, 80, 85, 96, 104, 109, 110, 111, 113, 118, 120, 124, 127, 128, 130, 133, 135, 136, 137, 141, 144, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 160, 163, 164, 166, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 182, 183, 185, 187, 188, 192, 193, 195, 197, 199], "other_map": 173, "other_opt": 136, "other_target": 135, "otheropt": 104, "otheroptionent": 136, "otheroptionspac": 136, "otherwis": [4, 34, 36, 82, 113, 127, 128, 135, 136, 137, 139, 141, 144, 145, 148, 149, 150, 151, 153, 154, 157, 159, 160, 163, 168, 169, 170, 171, 173, 174, 175, 176, 180], "our": [3, 5, 9, 12, 16, 23, 27, 34, 35, 36, 44, 56, 67, 68, 69, 70, 71, 72, 73, 80, 82, 84, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 115, 123, 128, 129, 136, 152, 153, 171, 185, 188, 189, 193, 195, 197, 198], "ourselv": [35, 96, 113, 187, 191], "out": [2, 5, 9, 16, 17, 20, 22, 27, 36, 44, 56, 58, 65, 66, 69, 70, 71, 72, 73, 75, 84, 85, 89, 90, 96, 97, 101, 110, 118, 119, 121, 123, 128, 131, 132, 133, 135, 136, 137, 138, 141, 145, 147, 148, 149, 151, 156, 157, 158, 160, 161, 169, 170, 171, 173, 174, 175, 179, 182, 187, 191, 193, 195, 197, 199], "out1_typ": 179, "out2_typ": 179, "out_": 36, "out_1": 187, "out_buff": [169, 175], "out_c": 47, "out_cb": 49, "out_channel": [88, 89, 118, 119, 148, 149, 158, 175], "out_channel_block": 175, "out_channel_chunk": 175, "out_cr": 49, "out_cuda": 118, "out_cudnn": 118, "out_data": 175, "out_deploi": 193, "out_depth": [156, 175], "out_dict": 72, "out_dim": 175, "out_dir": 137, "out_dtyp": [22, 23, 43, 44, 96, 104, 110, 111, 148, 149, 151, 156, 158, 160, 175], "out_featur": [113, 148], "out_fil": [136, 137], "out_filt": 175, "out_format": 148, "out_grad": [149, 158, 175], "out_h": [47, 149], "out_height": [156, 158, 175], "out_i": [49, 187], "out_i_i": 187, "out_i_o_i": 187, "out_i_o_o": 187, "out_i_o_o_j_o_o_fus": 187, "out_idx": 36, "out_indic": [161, 175], "out_indptr": 175, "out_j": 187, "out_j_i": 187, "out_j_o_i": 187, "out_j_o_o": 187, "out_layout": [111, 148, 149, 158, 175], "out_np": [96, 187], "out_shap": [0, 36, 47, 106, 108, 118, 119, 193], "out_sinfo": [20, 22, 23, 43, 110, 149, 150], "out_siz": [36, 88, 135], "out_tensor": 161, "out_tupl": 175, "out_tvm": [96, 187], "out_typ": [34, 153, 175, 179], "out_valu": 175, "out_w": [47, 148, 149], "out_width": [156, 158, 175], "outcom": [31, 145, 148], "outdat": 16, "outer": [27, 31, 82, 90, 101, 118, 125, 127, 141, 146, 151, 157, 169, 171, 174, 175, 180, 188, 195], "outer_product": 177, "outermost": [171, 174, 195], "outlin": [12, 160], "outlinecompilerfunctionswithexistingglobalsymbol": 160, "outmost": 169, "outperform": [90, 104, 195], "output": [1, 2, 5, 6, 7, 17, 18, 20, 22, 23, 25, 30, 31, 34, 36, 37, 43, 44, 46, 47, 48, 49, 51, 53, 56, 57, 64, 65, 66, 67, 68, 70, 71, 74, 79, 80, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 110, 111, 113, 115, 119, 121, 123, 127, 128, 129, 135, 136, 137, 139, 141, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 169, 170, 171, 173, 175, 177, 179, 182, 183, 187, 193, 195, 196, 198, 199], "output_0": [68, 197, 198], "output_1": 123, "output_2": 123, "output_arrai": 163, "output_block": 171, "output_channel": 137, "output_depth": [149, 158], "output_detail": 74, "output_dim": 115, "output_expr": 160, "output_fil": 197, "output_format": [137, 148, 161], "output_grad": [34, 149], "output_height": [137, 149, 158], "output_list": 199, "output_modul": 176, "output_nam": 141, "output_pad": [148, 149, 158, 175], "output_path": 148, "output_rv_typ": 171, "output_s": [68, 111, 147, 149, 158, 175], "output_scal": 175, "output_shap": [30, 58, 85, 89, 97, 98, 99, 100, 105, 106, 107, 108, 149, 157, 175, 189], "output_t": 115, "output_tensor": [64, 177], "output_token": 113, "output_typ": 34, "output_width": [137, 149, 158], "output_zero_point": 175, "outreach": 11, "outsid": [11, 20, 34, 35, 90, 124, 149, 156, 157, 169, 170, 171, 174, 175, 180, 182, 195, 196], "outstand": 10, "outtyp": 148, "over": [8, 9, 11, 16, 34, 35, 56, 67, 68, 79, 90, 109, 123, 124, 125, 128, 137, 144, 146, 148, 149, 150, 157, 158, 160, 165, 166, 169, 171, 173, 175, 179, 188, 195], "overal": [9, 11, 56, 67, 130, 160, 165], "overarch": 2, "overcomput": 174, "overflow": [8, 84, 157], "overhead": [5, 73, 104, 109, 141, 150, 166], "overlap": [9, 12, 157, 171, 175], "overload": [34, 37, 144, 148, 150, 173], "overrid": [1, 5, 6, 35, 36, 37, 65, 67, 109, 120, 135, 136, 148, 150, 151, 155, 166, 168, 171, 173, 175, 176], "overridden": [56, 150, 151, 166, 168], "override_instru": [4, 85, 176], "override_native_generic_func": [34, 168], "overriden": [4, 65], "overse": 11, "overview": [2, 10, 12, 35, 56, 130, 178, 180, 183, 189, 197], "overwhelm": 10, "overwrit": [135, 150, 198], "ow": 148, "own": [4, 9, 11, 12, 14, 23, 33, 35, 43, 58, 79, 82, 88, 115, 120, 131, 132, 136, 151, 155, 164, 171, 173, 175, 180, 182, 184, 189, 192, 197], "own_nam": 146, "owner": 9, "ownership": 11, "p": [43, 56, 69, 98, 100, 110, 111, 135, 149, 155, 158, 175, 179], "p0": [56, 84, 97, 98, 99, 100], "p01": 84, "p02": 84, "p03": 84, "p1": [56, 84, 97, 98, 99, 100], "p11": 84, "p12": 84, "p2": [84, 97, 98, 99, 100], "p3": [84, 97, 98, 99, 100], "p4": [98, 100], "p_bn1_bia": 111, "p_bn1_weight": 111, "p_conv1_weight": 111, "p_dim1_": 36, "p_dim2_": 36, "p_f": 175, "p_fc1_bia": 43, "p_fc1_weight": 43, "p_fc2_bia": 43, "p_fc2_weight": 43, "p_fc_bia": 111, "p_fc_weight": 111, "p_getattr_l__self___layer1___0___bn1_bia": 111, "p_getattr_l__self___layer1___0___bn1_weight": 111, "p_getattr_l__self___layer1___0___bn2_bia": 111, "p_getattr_l__self___layer1___0___bn2_weight": 111, "p_getattr_l__self___layer1___0___conv1_weight": 111, "p_getattr_l__self___layer1___0___conv2_weight": 111, "p_getattr_l__self___layer1___1___bn1_bia": 111, "p_getattr_l__self___layer1___1___bn1_weight": 111, "p_getattr_l__self___layer1___1___bn2_bia": 111, "p_getattr_l__self___layer1___1___bn2_weight": 111, "p_getattr_l__self___layer1___1___conv1_weight": 111, "p_getattr_l__self___layer1___1___conv2_weight": 111, "p_getattr_l__self___layer2___0___bn1_bia": 111, "p_getattr_l__self___layer2___0___bn1_weight": 111, "p_getattr_l__self___layer2___0___bn2_bia": 111, "p_getattr_l__self___layer2___0___bn2_weight": 111, "p_getattr_l__self___layer2___0___conv1_weight": 111, "p_getattr_l__self___layer2___0___conv2_weight": 111, "p_getattr_l__self___layer2___0___downsample_0_weight": 111, "p_getattr_l__self___layer2___0___downsample_1_bia": 111, "p_getattr_l__self___layer2___0___downsample_1_weight": 111, "p_getattr_l__self___layer2___1___bn1_bia": 111, "p_getattr_l__self___layer2___1___bn1_weight": 111, "p_getattr_l__self___layer2___1___bn2_bia": 111, "p_getattr_l__self___layer2___1___bn2_weight": 111, "p_getattr_l__self___layer2___1___conv1_weight": 111, "p_getattr_l__self___layer2___1___conv2_weight": 111, "p_getattr_l__self___layer3___0___bn1_bia": 111, "p_getattr_l__self___layer3___0___bn1_weight": 111, "p_getattr_l__self___layer3___0___bn2_bia": 111, "p_getattr_l__self___layer3___0___bn2_weight": 111, "p_getattr_l__self___layer3___0___conv1_weight": 111, "p_getattr_l__self___layer3___0___conv2_weight": 111, "p_getattr_l__self___layer3___0___downsample_0_weight": 111, "p_getattr_l__self___layer3___0___downsample_1_bia": 111, "p_getattr_l__self___layer3___0___downsample_1_weight": 111, "p_getattr_l__self___layer3___1___bn1_bia": 111, "p_getattr_l__self___layer3___1___bn1_weight": 111, "p_getattr_l__self___layer3___1___bn2_bia": 111, "p_getattr_l__self___layer3___1___bn2_weight": 111, "p_getattr_l__self___layer3___1___conv1_weight": 111, "p_getattr_l__self___layer3___1___conv2_weight": 111, "p_getattr_l__self___layer4___0___bn1_bia": 111, "p_getattr_l__self___layer4___0___bn1_weight": 111, "p_getattr_l__self___layer4___0___bn2_bia": 111, "p_getattr_l__self___layer4___0___bn2_weight": 111, "p_getattr_l__self___layer4___0___conv1_weight": 111, "p_getattr_l__self___layer4___0___conv2_weight": 111, "p_getattr_l__self___layer4___0___downsample_0_weight": 111, "p_getattr_l__self___layer4___0___downsample_1_bia": 111, "p_getattr_l__self___layer4___0___downsample_1_weight": 111, "p_getattr_l__self___layer4___1___bn1_bia": 111, "p_getattr_l__self___layer4___1___bn1_weight": 111, "p_getattr_l__self___layer4___1___bn2_bia": 111, "p_getattr_l__self___layer4___1___bn2_weight": 111, "p_getattr_l__self___layer4___1___conv1_weight": 111, "p_getattr_l__self___layer4___1___conv2_weight": 111, "p_i": 175, "p_id_": 36, "p_o": 175, "p_op_": 36, "p_output0": 23, "p_relu": 23, "p_x": 23, "p_y_inn": 169, "pace": 10, "pack": [3, 4, 5, 7, 12, 20, 22, 36, 74, 79, 84, 113, 135, 149, 150, 157, 158, 163, 168, 169, 173, 174, 175], "pack_axi": [158, 175], "pack_dtyp": [158, 175], "pack_typ": [158, 175], "pack_weight_til": 158, "packag": [9, 17, 49, 51, 53, 56, 58, 65, 67, 68, 69, 70, 71, 72, 73, 74, 80, 93, 104, 105, 106, 107, 115, 132, 137, 138, 145, 148, 150, 159, 166, 169, 188, 192, 197], "package_path": [68, 198], "packed_func": [5, 36, 148, 150], "packed_out": 175, "packed_param": 113, "packedb": [90, 195], "packedb_1": [90, 195], "packedfunc": [1, 2, 13, 22, 36, 37, 63, 121, 141, 149, 150, 153, 159, 163, 165, 166, 168, 169, 173, 174, 175], "packedfunctyp": 150, "packedinput": 175, "packfuncvoidaddr": 37, "pad": [58, 65, 68, 72, 84, 85, 88, 89, 96, 104, 111, 118, 119, 127, 137, 148, 149, 152, 156, 157, 158, 159, 160, 171, 173, 174, 175, 182, 184, 193, 199], "pad_aft": [174, 175], "pad_back": [158, 175], "pad_befor": [174, 175], "pad_bottom": [137, 158, 175], "pad_data": 104, "pad_down": [158, 175], "pad_einsum": 171, "pad_front": [158, 175], "pad_h": [89, 137], "pad_height": [158, 175], "pad_left": [137, 158, 175], "pad_mod": [149, 158], "pad_right": [137, 158, 175], "pad_temp": [96, 98, 99, 100, 118], "pad_temp_global_textur": 56, "pad_temp_i0": 96, "pad_temp_i1": 96, "pad_temp_i2": 96, "pad_temp_i3": 96, "pad_temp_shar": [96, 191], "pad_temp_shared_1": [96, 191], "pad_temp_shared_ax0": 96, "pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fus": 96, "pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i": 96, "pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o": 96, "pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i": 96, "pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o": 96, "pad_temp_shared_ax1": 96, "pad_temp_shared_ax2": 96, "pad_temp_shared_ax3": 96, "pad_top": [137, 158, 175], "pad_valu": [149, 158, 160, 171, 174, 175], "pad_value_block": 171, "pad_w": [89, 137], "pad_width": [149, 158, 175], "padb": 175, "padded_data": 158, "paddedinput": 99, "padding_mod": [156, 175], "paddl": [50, 155], "paddle_resnet50": 50, "paddlepaddl": [54, 55, 155, 186], "padinput": 175, "padl": 175, "padr": 175, "padt": 175, "page": [2, 7, 12, 17, 32, 36, 39, 62, 66, 69, 90, 97, 105, 107, 113, 132, 133, 134, 178, 181, 195, 197], "page_s": 113, "paged_kv_cach": 113, "pagedkvcach": 113, "pai": 9, "pain": 7, "pair": [36, 79, 85, 135, 136, 137, 144, 151, 155, 157, 159, 160, 171, 175, 179, 180, 183, 188], "pair2": 179, "pairwis": 136, "palomero": 199, "panic": 39, "panthera": [189, 197], "paper": [12, 148, 159], "papi": 92, "papi_avail": 93, "papi_fp_op": 93, "papi_native_avail": 93, "papimetriccollector": 93, "paraet": 159, "paragraph": 35, "parallel": [1, 8, 25, 37, 97, 98, 99, 100, 101, 105, 106, 107, 132, 135, 136, 152, 160, 169, 171, 173, 174, 177, 187, 192], "parallel_barrier_when_finish": 169, "parallel_launch_point": 169, "parallel_stride_pattern": 169, "param": [0, 3, 12, 22, 23, 34, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 93, 97, 98, 99, 100, 105, 106, 107, 108, 110, 111, 113, 115, 118, 119, 135, 137, 141, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 157, 158, 159, 160, 169, 173, 174, 175, 179, 182, 189, 193, 197], "param0": 157, "param1": [151, 157], "param2": 151, "param_0": 155, "param_1": 155, "param_byt": 157, "param_d": 75, "param_dict": 113, "param_map": 173, "param_mod": 113, "param_nam": [1, 150, 173], "param_spec": 44, "param_tensor": 115, "param_tuple_nam": 151, "paramet": [0, 1, 2, 6, 7, 12, 25, 26, 30, 34, 49, 51, 52, 56, 67, 68, 69, 70, 71, 72, 75, 79, 84, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 113, 119, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 193, 195, 197, 199], "parameter": [79, 136, 182, 188], "parametr": [78, 84, 179], "parametrize_target": [8, 79, 159], "params_byt": 141, "params_dict": 148, "params_from_relax": 43, "params_from_torch": 43, "paramt": [65, 151], "parent": [3, 141, 148, 154, 169, 171, 173, 182, 199], "parent_pattern": 182, "parit": 154, "parm": 68, "pars": [30, 36, 43, 46, 47, 53, 120, 137, 141, 144, 154, 155, 157, 159, 160, 169, 177, 180], "parse_compute_vers": 137, "parsefromstr": 52, "parsejson": 36, "parser": [1, 74, 137, 155, 160, 177], "part": [2, 3, 9, 11, 18, 20, 36, 38, 49, 56, 59, 76, 77, 79, 80, 88, 97, 98, 99, 100, 101, 106, 110, 113, 115, 124, 128, 135, 137, 148, 149, 151, 157, 158, 160, 169, 171, 175, 180, 182, 184, 186, 189, 197, 199], "parti": [9, 36, 131], "partial": [18, 34, 110, 149, 160, 171], "partialevalu": 160, "particip": [10, 11, 15], "particular": [1, 12, 27, 36, 37, 49, 79, 149, 157, 174, 175, 179, 180, 182, 183, 185, 187, 189, 197], "particularli": [20, 179], "partit": [58, 62, 64, 66, 97, 98, 99, 100, 154, 160, 171, 173, 192, 199], "partition": 59, "partition_for_arm_compute_lib": 58, "partition_for_bnn": 59, "partition_for_clml": 67, "partition_for_cutlass": 119, "partition_for_mrvl": 64, "partition_for_tensorrt": 65, "partition_for_vitis_ai": 66, "partition_loop": 171, "partition_po": 171, "partitionedfrompattern": 182, "partitiongraph": 160, "pass": [1, 2, 3, 5, 7, 8, 9, 16, 17, 19, 20, 22, 32, 33, 34, 36, 37, 41, 43, 48, 49, 51, 52, 56, 58, 59, 62, 63, 65, 66, 67, 68, 70, 71, 72, 73, 75, 79, 80, 81, 83, 90, 93, 97, 99, 101, 105, 107, 108, 109, 110, 113, 115, 120, 128, 135, 136, 137, 138, 140, 143, 144, 147, 148, 149, 150, 151, 152, 155, 157, 160, 162, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 183, 186, 188, 192, 193, 195, 196, 198, 199], "pass1": 4, "pass2": 4, "pass_context": [157, 160], "pass_ctx": 4, "pass_func": [4, 35, 151, 160, 174, 176], "pass_info": [4, 85, 143], "pass_inst": 4, "pass_instru": [4, 84, 85, 143], "pass_nam": [4, 85], "pass_seq": [4, 85], "pass_xx": 4, "passbadenterctx": 85, "passbadexitctx": 85, "passbadrunbefor": 85, "passcontext": [2, 23, 35, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 82, 84, 89, 97, 98, 99, 100, 105, 106, 107, 108, 110, 113, 115, 119, 143, 151, 157, 160, 174, 176, 189, 193], "passcontextnod": 4, "passcontextthreadlocalentri": 4, "passcontextthreadlocalstor": 4, "passen": 4, "passexamplebas": 85, "passfin": 85, "passfine_0": 85, "passfine_1": 85, "passinfo": [4, 143, 157, 160, 176], "passinfonod": 4, "passinstru": [4, 84, 85, 143, 176], "passinstrumentnod": 4, "passinstur": 84, "passnod": 4, "passphas": 199, "passprintinginstru": 143, "passtiminginstru": [4, 85, 143], "password": 17, "past": [17, 131, 137, 171, 179], "pat": [154, 182], "pat1": 182, "pat2": 182, "pat3": 182, "patch": [5, 11, 15, 16, 65, 135, 158, 185], "patern": 154, "path": [0, 3, 6, 8, 13, 14, 32, 36, 52, 53, 56, 58, 61, 65, 66, 67, 74, 75, 79, 93, 99, 105, 106, 107, 109, 113, 119, 131, 132, 136, 137, 145, 148, 150, 154, 155, 162, 163, 169, 175, 182, 189, 197, 199], "path1": 182, "path2": 182, "path_dso": 137, "path_lib": [3, 99, 193], "path_param": 0, "path_pattern": 182, "path_target": 137, "pathlib": [113, 148, 199], "pathlik": 136, "patten": 152, "pattern": [2, 17, 30, 34, 35, 36, 43, 59, 82, 90, 110, 124, 128, 146, 151, 152, 154, 157, 160, 169, 171, 173, 174, 175, 178, 180, 183, 195, 199], "pattern1": 182, "pattern2": 182, "pattern_nam": 160, "pattern_t": 160, "pattern_util": 34, "patterncheckcontext": 151, "patternconstructor": 157, "patternn": 182, "patterntupl": 157, "patternvar": 157, "patternwildcard": 157, "paul": 199, "pave": 4, "pb": 52, "pbqptuner": 108, "pbtxt": 52, "pc": [4, 35, 80, 93, 159], "pc_offset": 150, "pdf": [156, 158, 175], "peephol": 175, "peer": 184, "penalti": 59, "pend": [67, 69, 80, 97, 105, 106, 107, 149, 157, 173], "peopl": [9, 10, 44, 128], "pep": 148, "per": [16, 32, 73, 80, 85, 88, 109, 115, 135, 144, 145, 146, 150, 151, 158, 161, 165, 166, 170, 174, 175], "per_task_early_stop": 135, "percent": [75, 165], "percentag": 75, "percentnod": 165, "perceptron": [159, 181], "perf": 93, "perfect": [8, 171], "perfectli": [9, 182], "perform": [1, 2, 4, 5, 9, 18, 20, 27, 31, 34, 35, 36, 37, 41, 43, 56, 58, 59, 64, 65, 70, 71, 72, 75, 84, 88, 89, 90, 93, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 118, 123, 125, 127, 128, 129, 130, 132, 135, 136, 137, 146, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 169, 171, 173, 174, 175, 176, 182, 183, 184, 186, 188, 191, 196, 197], "performac": 62, "period": [9, 16, 155, 173], "perm": 136, "permit": [125, 180, 183], "permut": [136, 148, 149, 157, 174, 175], "permute_dim": [22, 23, 43, 44, 110, 111, 148, 149, 151], "permute_dims1": [22, 23, 43, 44, 110], "permutedimsattr": 149, "persist": 36, "person": [9, 10], "perspect": [180, 183], "pertain": 9, "pertin": [30, 183], "petalinux": 66, "pf": 36, "phase": [2, 31, 49, 82, 89, 113, 160, 169, 171, 183, 192, 195], "philosophi": 5, "phone": [97, 105, 107, 168], "physic": [1, 6, 10, 11, 73, 74, 79, 80, 108, 132, 145], "pi": [4, 5, 12, 62, 76, 77, 97, 105, 107, 109, 149, 186], "pi_cl": 143, "pi_class": 143, "pick": [9, 14, 15, 34, 58, 67, 75, 90, 104, 105, 106, 107, 113, 136, 153, 188, 192, 195], "pick_best": [67, 105, 106, 107, 136], "pickl": [115, 136, 137, 148], "pictur": 4, "pid": 69, "piec": [9, 39, 67, 148, 153, 160], "piecewis": 158, "pil": [46, 48, 49, 50, 51, 52, 53, 67, 69, 70, 71, 73, 74, 189, 197], "pillow": [49, 66, 197], "ping": 9, "pip": [16, 46, 47, 48, 49, 50, 51, 52, 53, 67, 72, 74, 115, 120, 132, 133, 197, 199], "pip3": [66, 104, 105, 106, 107, 132, 188, 197], "pipe": 163, "pipe_config": 119, "pipelin": [2, 4, 7, 37, 41, 43, 44, 56, 61, 84, 110, 111, 116, 117, 121, 148, 150, 171, 174, 176, 183, 186, 193], "pipeline_executor": 119, "pipeline_executor_build": 119, "pipeline_mod_factori": 119, "pipeline_modul": 119, "pipelineconfig": 119, "pixel": [88, 148, 149, 156, 158, 175], "pjreddi": 47, "pkg_path": 68, "pkl": 115, "pkl_file": 115, "pl": 66, "place": [5, 7, 9, 12, 17, 34, 35, 39, 58, 60, 79, 80, 82, 89, 93, 135, 137, 148, 149, 150, 151, 157, 158, 169, 171, 174, 175, 182, 189], "placehold": [0, 5, 22, 30, 36, 37, 61, 82, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 109, 118, 121, 123, 124, 125, 127, 128, 129, 135, 136, 137, 139, 144, 147, 148, 153, 169, 173, 175, 177, 183, 187, 188, 191, 195, 196, 199], "placeholder1": 199, "placeholder_1": [101, 191], "placeholder_10": 101, "placeholder_11": 101, "placeholder_12": 101, "placeholder_13": 101, "placeholder_14": 101, "placeholder_2": [101, 191], "placeholder_3": [101, 191], "placeholder_4": 101, "placeholder_5": 101, "placeholder_6": 101, "placeholder_7": 101, "placeholder_8": 101, "placeholder_9": 101, "placeholder_shar": 191, "placeholder_shared_1": 191, "placeholderop": [135, 169], "placement": [9, 149], "plai": [84, 120], "plain": [108, 148, 175, 185], "plaintext": 7, "plan": [136, 146, 149, 151, 174], "plan_siz": 136, "planandupdatebufferallocationloc": 174, "planar": 59, "plandevic": 160, "plane": [136, 148], "planner": 151, "platform": [7, 9, 16, 38, 47, 58, 59, 60, 61, 62, 66, 69, 74, 75, 76, 80, 81, 93, 94, 102, 109, 110, 132, 137, 153, 157, 182, 187, 189, 192, 195, 197], "platinum": 108, "pleas": [2, 4, 9, 10, 12, 13, 16, 17, 23, 30, 35, 39, 41, 43, 44, 46, 47, 48, 49, 51, 52, 53, 56, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 80, 84, 85, 89, 90, 99, 111, 113, 115, 120, 129, 132, 137, 140, 147, 149, 155, 157, 158, 164, 171, 174, 175, 180, 185, 189, 197], "plenti": 104, "plevel": [144, 153], "plotter": 137, "plt": [47, 48, 49, 53, 67], "plu": [16, 171, 183], "plug": [4, 66, 84, 101], "plugin": 164, "pmc": [9, 11, 17], "png": [46, 48, 49, 50, 51, 53, 67, 69, 70, 71, 73, 189, 197], "pod": [2, 121, 150, 173], "point": [1, 4, 17, 27, 35, 56, 58, 65, 66, 73, 81, 97, 127, 135, 136, 141, 144, 150, 156, 157, 158, 163, 168, 169, 171, 173, 174, 175, 179, 180, 182, 183, 192, 195, 198], "point2knob": 136, "pointer": [1, 2, 36, 63, 101, 121, 128, 144, 164, 173, 174, 175, 179, 180, 183, 196, 199], "pointertyp": 144, "pointervaluetyperewrit": 174, "pointwise_channel": 159, "polici": [9, 16, 90, 96, 101, 104, 135, 136, 187, 188, 195], "polish": 9, "pollut": 177, "polymorph": [160, 178, 183], "ponit": 56, "pool": [36, 58, 144, 149, 157, 158, 161, 175], "pool1d": 175, "pool2d": 175, "pool2dattr": 149, "pool3d": 175, "pool_grad": 175, "pool_info_properti": 144, "pool_max": [98, 100], "pool_nam": 144, "pool_siz": [58, 68, 85, 111, 149, 158, 193], "pool_typ": 175, "pooled_s": 161, "poolinfo": 144, "poolinfoproperti": 144, "poor": [101, 160], "pop": [14, 85, 113, 171, 176], "pop_siz": [67, 105, 106, 107, 108, 136, 189], "pop_trac": 176, "popcount": [169, 173, 177], "popen": 162, "popensess": 162, "popped_inst": 171, "popul": [20, 35, 135, 150, 160], "popular": [4, 113, 189], "port": [56, 58, 66, 67, 68, 69, 70, 71, 80, 97, 99, 105, 106, 107, 109, 131, 135, 136, 159, 162, 163, 198], "port_end": 162, "port_numb": 198, "portabl": [63, 70, 71, 188], "portion": [150, 166, 180, 183, 195], "posit": [0, 2, 12, 34, 56, 63, 113, 136, 137, 146, 148, 149, 157, 160, 161, 162, 169, 171, 173, 174, 175, 195], "posites2": 155, "posix_popen_serv": 162, "possess": [25, 31], "possibl": [1, 2, 4, 5, 7, 8, 9, 12, 13, 16, 20, 27, 35, 56, 59, 62, 63, 64, 65, 75, 115, 118, 120, 123, 124, 135, 136, 137, 138, 144, 149, 150, 151, 153, 154, 157, 158, 160, 162, 166, 171, 173, 174, 175, 179, 180, 181, 183, 188, 195, 196, 198], "possibli": [2, 147, 151, 171], "post": [7, 15, 39, 73, 82, 137, 145, 146, 150, 152, 154, 160, 169, 172, 179, 189], "post_attention_layernorm": 113, "post_order_visit": [82, 85, 146, 152, 172], "post_tun": 145, "postord": 172, "postproc": 145, "postprocess": [80, 171, 197], "postprocessor": 145, "potenti": [8, 9, 11, 20, 35, 43, 66, 132, 145, 146, 148, 150, 166, 171, 195, 198], "pov": 20, "pow": 173, "power": [2, 4, 18, 56, 58, 65, 66, 80, 115, 136, 149, 157, 169, 173, 175, 177, 179, 183, 195], "power2": 136, "pprint": [85, 113], "pr": [7, 8, 9, 10, 14, 16, 17, 32, 34, 64, 182], "practic": [9, 11, 12, 20, 31, 36, 56, 96, 97, 98, 99, 100, 101, 104, 113, 187, 188, 197], "practition": 178, "pragma": [96, 104, 128, 169, 174, 187], "pragma_import_llvm": 128, "pragma_kei": 174, "pragma_scop": 169, "pragma_typ": 169, "pragma_valu": 169, "pragmat": 30, "prc": 80, "pre": [2, 17, 36, 41, 44, 56, 58, 68, 73, 74, 82, 85, 97, 98, 99, 100, 105, 106, 107, 108, 110, 111, 113, 131, 133, 135, 136, 137, 141, 145, 148, 149, 150, 154, 157, 158, 160, 168, 169, 171, 172, 173, 179, 180, 181, 182, 189, 192, 193], "pre_comput": 175, "pre_order_visit": 172, "pre_tun": 145, "prebuilt": [56, 58, 68], "precis": [8, 30, 65, 66, 89, 108, 148, 149, 151, 158, 159, 160, 175], "precomput": [171, 175], "precondit": 171, "pred": 115, "predefin": [56, 144], "predic": [136, 169, 171, 173], "predict": [46, 48, 50, 51, 52, 53, 64, 69, 70, 71, 74, 90, 97, 98, 99, 100, 135, 136, 145, 149, 158, 161, 175, 188, 189, 197], "predict_net": 155, "predict_stag": 135, "prefer": [8, 13, 16, 36, 79, 97, 98, 99, 100, 153, 160], "prefetch": [169, 173, 174], "prefil": 44, "prefill_chunk_s": 113, "prefill_logit": 44, "prefill_str": 113, "prefix": [13, 66, 67, 101, 105, 106, 107, 108, 132, 136, 147, 148, 151, 159, 160, 169, 175, 180, 189], "preliminari": [169, 177], "preload": 64, "preloadcustomsketchrul": [101, 135], "preloadmeasuredst": [96, 135, 187], "prelu": [158, 175], "prelud": [157, 159, 179], "preorder": 172, "prepack": 151, "prepapr": 76, "prepar": [15, 16, 43, 62, 73, 80, 145, 153, 160, 190, 196], "prepare_param": 115, "prepare_test_lib": 60, "prepend": [148, 149, 157], "preper": 75, "preprint": 159, "preprocess": [48, 51, 52, 53, 66, 67, 73, 80, 115, 150, 151, 166, 175, 197], "preprocess_input": 48, "prequant": [76, 77, 186], "prerequisit": [4, 53, 56, 74, 171], "presenc": 132, "present": [16, 20, 30, 34, 43, 79, 135, 150, 151, 155, 166, 171, 173, 175, 177, 179, 183, 189, 197], "preserv": [82, 149, 155, 157, 171], "preserve_pytorch_scop": 155, "preserve_unit_it": [31, 171], "preserve_unit_loop": [31, 171], "presum": [10, 30], "pretrain": [59, 62, 65, 72, 76, 77, 115, 155, 186], "pretti": [36, 96, 154, 157, 160, 180, 187], "pretty_print": [154, 157], "prev_shap": [157, 175], "prevent": [11, 132, 157], "previou": [2, 9, 15, 17, 23, 31, 36, 43, 56, 79, 97, 98, 99, 100, 110, 121, 124, 136, 152, 157, 158, 175, 180, 183, 188, 189, 195, 197], "previous": [0, 1, 147, 180, 188, 189, 197, 198], "prim": [150, 151, 153], "prim_func": [20, 22, 23, 25, 27, 30, 31, 43, 82, 89, 90, 96, 110, 123, 124, 125, 128, 129, 147, 149, 150, 151, 153, 169, 171, 173, 187, 191, 195, 196], "prim_func_pass": [82, 174], "prim_valu": 151, "primal": 173, "primari": [1, 2, 35, 56, 75, 171, 174, 179], "primarili": [2, 7, 31, 37, 75, 148, 151, 160], "primexpr": [135, 138, 144, 146, 148, 149, 150, 151, 154, 156, 169, 170, 171, 172, 173, 174, 175], "primexprlik": 149, "primexprwithop": [169, 173], "primfn": 101, "primfunc": [2, 4, 138, 139, 145, 146, 147, 148, 149, 150, 151, 153, 165, 169, 170, 171, 172, 173, 174], "primfunc_attr": 147, "primfunc_name_hint": 147, "primfuncnod": 174, "primfuncpass": [84, 174], "primit": [2, 4, 5, 20, 25, 26, 27, 31, 37, 59, 82, 84, 89, 104, 122, 123, 124, 126, 127, 128, 144, 149, 150, 151, 152, 153, 160, 171, 175, 180, 181, 186, 191, 192, 196], "primstructinfo": 150, "primtyp": 144, "primvalu": [113, 149, 150], "primvaluenod": 150, "princip": [20, 27], "principl": [9, 12, 15, 44], "print": [2, 4, 5, 16, 22, 23, 30, 31, 32, 35, 43, 44, 46, 47, 48, 50, 51, 52, 53, 56, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 119, 121, 123, 124, 125, 128, 129, 132, 135, 137, 143, 144, 145, 148, 149, 150, 151, 152, 154, 157, 160, 168, 169, 171, 173, 176, 180, 182, 187, 188, 189, 191, 193, 195, 196, 197, 198, 199], "print0": 17, "print_": 148, "print_after_pass_nam": 143, "print_before_pass_nam": 143, "print_best": [96, 135, 187], "print_for_debug": 135, "print_funct": [121, 123, 124, 125, 128, 129], "print_mod": [96, 135], "print_python_code_from_st": 135, "print_tabular": 148, "print_tuning_statist": 145, "print_var": 152, "printaft": 4, "printafteral": 143, "printbeforeal": 143, "printer": [153, 174], "printir": [4, 84, 176], "printirbefor": 4, "printtableinfo": 135, "printvisitor": 35, "prior": [1, 12, 16, 66, 135, 161, 173, 174], "prior_record": 198, "priorbox": 161, "priorit": [97, 98, 99, 100], "prioriti": [56, 67, 69, 135, 136, 144, 149, 151, 160, 162], "privat": [3, 4, 10, 17, 20, 22, 23, 35, 36, 43, 59, 110, 147, 151, 174, 185], "pro": [97, 105, 107], "proactiv": 16, "prob": [148, 149, 171], "probabilist": 148, "probabl": [70, 71, 113, 136, 148, 149, 158, 161, 171, 189, 197], "problem": [2, 5, 7, 9, 10, 12, 16, 39, 56, 80, 101, 123, 129, 136, 179, 180, 183, 185, 199], "proc": [67, 68, 69, 195], "proce": [1, 17, 31, 154, 169, 172], "procedur": [4, 8, 16, 31, 35, 80, 129, 180, 198], "proceed": [66, 67], "process": [0, 1, 7, 8, 9, 10, 12, 15, 16, 18, 27, 31, 35, 36, 37, 41, 43, 44, 46, 47, 56, 64, 66, 67, 69, 80, 89, 90, 96, 97, 98, 99, 100, 101, 105, 106, 107, 110, 113, 132, 135, 136, 145, 147, 149, 160, 162, 163, 171, 175, 179, 182, 185, 188, 189, 192, 195, 199], "process_param": 160, "processgraphdefparam": 52, "processmoduleblob": 3, "processor": [56, 62, 64, 66, 90, 93, 141, 174, 189, 192, 195, 197, 198], "processsess": 163, "prod": [17, 34, 65, 148, 149, 157, 158, 163, 175, 183], "produc": [0, 12, 34, 35, 56, 62, 68, 75, 79, 105, 106, 107, 118, 128, 132, 135, 146, 148, 149, 151, 154, 156, 158, 159, 160, 164, 169, 171, 173, 174, 179, 180, 183, 188, 189, 192, 195, 197], "producerload": 173, "producerr": 173, "producerstor": 173, "product": [4, 11, 32, 34, 56, 73, 74, 75, 104, 123, 148, 149, 157, 161, 173, 175, 185, 188, 189, 192], "prof": 165, "profil": [4, 5, 73, 85, 86, 142, 143, 145, 150, 153, 166, 173, 174, 189, 195, 197], "profile_all_align": 119, "profile_funct": 165, "profiler_vm": 93, "profileresult": [150, 166], "profit": 160, "program": [2, 4, 5, 12, 19, 20, 23, 26, 27, 34, 35, 36, 41, 43, 44, 65, 70, 71, 89, 90, 93, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 125, 130, 135, 136, 137, 139, 144, 148, 150, 152, 153, 155, 159, 160, 162, 165, 168, 169, 171, 178, 179, 180, 182, 183, 184, 188, 192, 195], "program_cost_model": [100, 101, 135], "program_or_lay": 155, "programbuild": 135, "programm": [88, 89, 130], "programmat": 4, "programrunn": 135, "progress": [9, 17, 27, 32, 105, 106, 107, 108, 136, 189, 197, 198], "progress_bar": [67, 105, 106, 107, 108, 136, 189], "proj": 175, "proj_dim": 175, "project": [2, 9, 11, 12, 15, 16, 58, 60, 62, 113, 132, 164, 175, 183, 190, 192], "prolog": 183, "promis": [9, 90, 136], "promot": [7, 9, 11, 15, 32, 149, 157, 174], "promote_dtyp": 174, "promote_dtype_str": 174, "prompt": 113, "prone": [105, 106, 107, 132], "proof": 175, "proofstrength": 175, "propag": [35, 75, 85, 149, 151], "proper": [16, 32, 36, 51, 72, 132, 150, 158, 160], "properli": [7, 34, 53, 132, 147, 179], "properti": [1, 2, 25, 26, 32, 56, 63, 136, 137, 138, 144, 146, 148, 150, 151, 152, 157, 160, 163, 164, 168, 169, 171, 175, 176, 180, 182, 183, 199], "propos": [9, 10, 11, 13, 136, 161, 182, 188], "proposit": 8, "proprietori": [67, 68], "protect": [17, 96, 98], "protobuf": [52, 148, 155], "protocol": [37, 136], "prototxt": 155, "prototyp": [4, 5, 182, 195], "provd": 137, "prove": [25, 146, 175], "proven": 12, "provi": 160, "provid": [0, 1, 2, 4, 5, 9, 10, 11, 12, 16, 17, 18, 22, 25, 27, 31, 32, 34, 35, 36, 37, 41, 43, 46, 48, 49, 50, 53, 56, 58, 59, 60, 64, 65, 66, 67, 69, 74, 75, 79, 80, 82, 84, 85, 88, 89, 90, 93, 96, 98, 101, 102, 104, 105, 106, 107, 109, 110, 111, 113, 118, 120, 121, 123, 124, 125, 128, 131, 132, 135, 136, 137, 138, 144, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 162, 163, 169, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 185, 188, 189, 190, 191, 192, 195, 197, 198, 199], "proxi": 162, "proxy_server_kei": 162, "proxy_server_port": 162, "proxy_server_url": 162, "prune": [76, 77, 145, 186, 193], "prunebert": 75, "pseudo": [118, 188], "pseudocod": 171, "pssed": [173, 175], "psutil": [104, 105, 106, 107, 132, 188], "pt": 68, "pt_inp": 73, "pt_result": 73, "pt_tensor": 73, "pt_top3_label": 73, "pth": [51, 68, 72, 73], "ptr": 173, "ptr_type": 173, "ptress": 173, "ptx": [37, 137, 173, 195], "ptx_arrive_barri": 173, "ptx_arrive_barrier_expect_tx": 173, "ptx_commit_group": 173, "ptx_cp_async": 173, "ptx_cp_async_barri": 173, "ptx_cp_async_bulk": 173, "ptx_init_barrier_thread_count": 173, "ptx_ldmatrix": 173, "ptx_mma": 173, "ptx_mma_sp": 173, "ptx_wait_barri": 173, "ptx_wait_group": 173, "ptype": [4, 173], "public": [4, 5, 8, 9, 11, 12, 15, 17, 23, 34, 35, 36, 37, 130, 147, 151, 185], "publish": [17, 185], "pull": [7, 8, 9, 11, 12, 14, 15, 17, 93], "pure": [4, 20, 80, 147, 149, 150, 151, 160, 170, 171, 173, 180, 182, 195], "puriti": [146, 150, 151], "purpos": [2, 4, 5, 6, 20, 37, 66, 75, 84, 97, 98, 99, 100, 110, 128, 131, 137, 141, 147, 149, 150, 151, 160, 163, 169, 173, 174, 180, 183, 192, 196], "push": [7, 15, 16, 17, 36, 56, 65, 67, 110, 130, 176], "push_back": 36, "push_trac": 176, "pusharg": 44, "pushd": 17, "put": [4, 13, 14, 16, 36, 49, 63, 80, 82, 85, 120, 127, 128, 129, 158, 183, 195], "pwd": [16, 53, 69, 80], "px": 61, "px_quant_siz": 66, "py": [4, 8, 12, 13, 14, 16, 17, 22, 23, 24, 29, 30, 31, 34, 37, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 80, 82, 83, 84, 85, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 132, 136, 145, 146, 149, 151, 156, 158, 159, 160, 170, 174, 182, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199], "py3": [51, 67, 68, 70, 71, 72, 73, 115], "py_stmt": 171, "pyc": 16, "pyexprmut": [23, 150], "pyexprvisitor": 150, "pyfunc": [157, 169], "pygment": 171, "pylint": [8, 23, 110, 113], "pypi": 50, "pyplot": [47, 48, 49, 53, 67], "pyrunn": 145, "pytest": [7, 8, 16, 79], "python": [1, 2, 5, 7, 9, 13, 15, 22, 23, 27, 31, 32, 35, 36, 37, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 80, 82, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 135, 136, 137, 140, 144, 148, 149, 150, 153, 155, 157, 159, 162, 163, 165, 168, 169, 171, 173, 177, 179, 180, 181, 182, 183, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199], "python2": [104, 105, 106, 107], "python3": [17, 32, 51, 56, 64, 66, 67, 68, 69, 70, 71, 72, 73, 80, 97, 98, 99, 100, 115, 132], "pythonpath": [16, 53, 56, 69, 70, 71, 80, 109, 132, 197], "pytorch": [4, 22, 41, 43, 44, 49, 54, 55, 56, 71, 76, 77, 84, 97, 98, 99, 100, 110, 111, 113, 132, 137, 148, 149, 155, 157, 175, 186, 192, 198], "pytorch_half_pixel": [149, 156, 175], "pyxir": 66, "q": [7, 113, 149, 157, 158, 160, 173, 175], "q_": 173, "q_multiply_shift": 173, "q_multiply_shift_per_axi": 173, "q_output": 149, "q_proj": 113, "qat": 160, "qconfig": 73, "qfloat": 168, "qkv": 113, "qkv_proj": 113, "qmobilenet": 73, "qmodel": 73, "qnn": [58, 74, 155, 160, 175], "qnn_conv2d_alter_layout": 175, "qnn_dense_alter_layout": 175, "qnn_requantize_alter_layout": 175, "qualcomm": 56, "qualifi": [155, 160], "qualiti": [11, 15, 16], "quant_max": 73, "quant_min": 73, "quantiz": [2, 64, 66, 128, 144, 149, 152, 155, 158, 160, 175, 182], "quantize_conv_bias_mkldnn_from_var": 155, "quantize_model": 73, "quantizeinput": 175, "queri": [1, 2, 6, 36, 37, 56, 62, 69, 80, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 113, 135, 136, 145, 148, 149, 153, 171, 173, 179, 180, 185, 187, 188], "query_ir_modul": 145, "query_rpc_track": [67, 69, 80, 97, 105, 106, 107], "query_schedul": 145, "query_tuning_record": 145, "question": [8, 10, 12, 20, 86, 89, 185], "queu": 1, "queue": [1, 56, 67, 69, 80, 97, 105, 106, 107, 158, 163, 175], "quick": [5, 41, 42, 45, 48, 50, 51, 56, 66, 67, 72, 120, 130, 164, 169, 173, 186, 188, 190, 194, 195], "quick_start": [44, 45, 186], "quickli": [4, 9, 11, 16, 17, 37, 41, 44, 56, 110, 127, 133, 135], "quit": [5, 16, 62, 75, 123, 182], "r": [2, 18, 22, 23, 34, 36, 43, 44, 64, 66, 75, 89, 110, 111, 113, 115, 128, 131, 138, 141, 147, 148, 149, 150, 151, 170, 173, 183, 189, 197], "r1": 53, "r_": 175, "r_0": [146, 175], "r_1": [146, 175], "r_a": [98, 100, 146], "r_b": [98, 100], "r_k": 175, "race": 171, "radeon": 195, "radford": 159, "radiat": [189, 197], "rag": 184, "rais": [2, 4, 6, 15, 47, 53, 67, 74, 85, 97, 98, 99, 100, 105, 106, 107, 108, 110, 113, 121, 130, 136, 137, 140, 144, 145, 148, 150, 157, 160, 168, 170, 171, 173, 175, 176, 182, 189, 195], "raise_error": 136, "rama": [56, 67, 68], "ramp": [101, 173], "ran": [7, 162], "rand": [43, 44, 90, 93, 110, 111, 136, 148, 151, 157, 195], "rand_stat": 145, "rand_var": 171, "rand_var_or_sref": 171, "rand_var_or_stmt": 171, "randint": 137, "randn": [43, 51, 67, 68, 70, 71, 101, 111, 148, 177], "random": [30, 31, 37, 43, 44, 56, 58, 59, 61, 65, 67, 68, 72, 75, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 118, 119, 121, 123, 124, 128, 135, 136, 145, 148, 151, 157, 159, 171, 173, 174, 175, 177, 187, 188, 189, 191, 193, 195], "random_bsr_matrix": [75, 101], "random_len": 159, "random_param": [97, 100], "random_sparse_bert_param": 75, "random_walk": 136, "randomli": [75, 135], "randommodel": [135, 145], "randomtun": [67, 105, 106, 107, 108, 136, 188, 189], "rang": [2, 20, 25, 27, 30, 31, 32, 43, 47, 66, 73, 74, 75, 82, 89, 90, 113, 115, 123, 124, 125, 127, 128, 129, 136, 141, 144, 148, 149, 157, 158, 161, 169, 171, 173, 174, 175, 177, 179, 187, 188, 189, 191, 195, 196, 197], "range_idx": 136, "range_length": [104, 136, 188], "range_of_i": 27, "range_of_j": 27, "range_of_k": 27, "rank": [67, 105, 106, 107, 108, 135, 136, 149, 157, 171, 175, 180, 189, 197], "rapese": 52, "rare": [9, 144, 162], "rasp": 168, "rasp3b": [71, 136], "rasp4b": 97, "raspberri": [5, 12, 62, 76, 77, 97, 105, 107, 109, 168, 186], "rate": [90, 148, 149, 156, 158, 175, 195], "rather": [2, 31, 34, 56, 72, 75, 90, 148, 149, 150, 151, 152, 153, 155, 156, 157, 171, 174, 175, 179, 180, 182], "ratio": [161, 165], "rational": 16, "raw": [46, 47, 48, 49, 50, 51, 52, 53, 64, 67, 69, 70, 71, 72, 73, 74, 82, 136, 145, 161, 171, 174, 175, 189, 197, 198], "raw_data": [43, 104], "rb": [0, 52, 53, 74, 75], "rc": [17, 88, 96, 98, 99, 100, 104, 118], "rc0": 17, "rc1": 17, "rc2": 17, "rc_outer": 191, "rc_outer_out": 96, "rccl": 163, "rci": [88, 104], "rcm": 104, "rcnn": 72, "rco": [88, 104], "rdom": 173, "re": [7, 8, 17, 20, 30, 34, 35, 36, 49, 90, 96, 97, 135, 158, 164, 169, 171, 172, 173, 175, 187, 189, 192, 195, 197], "re_data": [157, 175], "re_output": [157, 175], "reach": [8, 11, 13, 37, 130, 136, 179, 183], "read": [0, 2, 3, 7, 15, 20, 22, 23, 27, 30, 31, 36, 43, 46, 48, 52, 53, 56, 65, 67, 69, 70, 71, 73, 74, 75, 82, 97, 98, 100, 110, 120, 131, 135, 137, 138, 144, 147, 151, 157, 169, 170, 171, 173, 174, 189, 196, 197], "read_bandwidth_bytes_per_cycl": 144, "read_buffer_index": 171, "read_latency_cycl": 144, "read_lin": 135, "readabl": [9, 11, 12, 13, 15, 52, 90, 125, 127, 140, 145, 165, 189, 191, 195, 197], "reader": [8, 12, 74, 82, 135, 169], "readi": [11, 20, 27, 36, 67, 90, 96, 101, 113, 158, 186, 187, 190, 194, 195], "readlin": [47, 50, 51, 53], "readm": [12, 69, 97, 105, 107], "real": [4, 12, 36, 56, 67, 68, 69, 70, 71, 75, 80, 109, 110, 125, 136, 144, 151, 155, 157, 160, 169, 175, 188, 189, 197], "realiti": [149, 150], "realiz": [4, 75, 173], "realizevdevic": [149, 151], "realli": [8, 80, 150, 166], "rearrang": [151, 161], "reason": [2, 7, 8, 11, 13, 18, 20, 35, 36, 56, 58, 73, 84, 158, 160, 175, 179, 183, 189, 197], "rebas": [14, 16, 169], "rebuild": [7, 16, 66, 135], "rebuilt": 65, "recal": [34, 36, 188, 195, 197], "recalcul": 160, "recast": 160, "receiv": [0, 4, 9, 149, 173, 179], "recent": [7, 13, 15, 16, 17, 39, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 132, 173, 187, 188], "recept": 161, "reciev": 173, "recip": 191, "reciproc": [9, 149, 161, 169, 173], "recogn": [8, 11, 34, 58, 140, 168], "recognit": 159, "recombin": 49, "recommend": [4, 8, 12, 13, 15, 17, 22, 34, 58, 59, 61, 62, 69, 72, 73, 79, 89, 93, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 115, 124, 132, 136, 140, 151, 160, 165, 173, 182, 185, 188, 189, 197], "recompil": 41, "recomput": [148, 149, 171], "recompute_scale_factor": 148, "reconstruct": [3, 8, 136, 149, 157, 171], "record": [3, 8, 36, 56, 67, 72, 85, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 135, 145, 176, 188, 189, 192, 197, 198], "record_fil": 104, "recordread": 135, "recordtofil": [96, 97, 98, 99, 100, 101, 135, 187], "recov": [3, 15, 36, 175], "recover_measure_input": 135, "recreat": 195, "rectifi": [148, 149, 158], "recur": 9, "recurisv": 152, "recurr": [122, 126, 179, 186], "recurs": [5, 17, 35, 36, 62, 66, 69, 70, 71, 82, 109, 131, 132, 144, 146, 148, 152, 157, 172, 178, 180, 182, 183, 184], "red": [7, 67, 137], "red_buf0": 123, "redirect": 154, "redirect_to": 154, "redistribut": 149, "redistribute_replica_to_shard": 149, "redo": 5, "reduc": [16, 27, 30, 31, 56, 65, 66, 75, 88, 90, 97, 98, 99, 100, 104, 110, 122, 123, 126, 132, 135, 148, 149, 151, 157, 158, 160, 163, 169, 171, 173, 174, 175, 186, 188, 191], "reduce_axi": [30, 88, 89, 90, 96, 104, 123, 128, 129, 135, 136, 169, 171, 173, 187, 188, 191, 195], "reduce_h": 97, "reduce_init": 169, "reduce_rang": 73, "reduce_reset": 128, "reduce_scop": 191, "reduce_temp0": 191, "reduce_temp0_1": 191, "reduce_temp0_2": 191, "reduce_upd": [128, 169], "reduce_w": 97, "reducebranchingthroughovercomput": 174, "reduct": [26, 27, 88, 89, 90, 104, 110, 113, 122, 126, 135, 136, 138, 148, 149, 157, 158, 169, 171, 173, 174, 175, 181, 182, 186, 195], "reduction_block": 138, "redund": [16, 151, 174], "ref": [12, 17, 35, 36, 157, 188], "ref_count": 152, "ref_log": 136, "refcreat": 157, "refer": [2, 4, 5, 8, 9, 13, 17, 23, 27, 30, 31, 35, 36, 41, 43, 44, 46, 48, 49, 50, 51, 52, 53, 56, 57, 58, 62, 64, 66, 68, 72, 73, 75, 80, 84, 85, 89, 99, 104, 106, 113, 115, 120, 124, 129, 134, 136, 137, 140, 144, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 163, 164, 168, 169, 171, 175, 179, 180, 183, 184, 189, 195, 197, 198], "referenc": [5, 160, 180], "referenti": 144, "refit": 136, "reflect": [2, 5, 16, 37, 59, 90, 132, 149, 156, 158, 164, 173, 175, 195], "reflog": 14, "reformat": 16, "refread": 157, "refresh": 82, "reftyp": 157, "refvalu": 153, "refwrit": 157, "reg": [67, 105, 106, 107, 108, 136, 189], "regard": [9, 16, 136, 146, 149, 159, 171, 177, 182, 188], "regardless": [149, 157, 160, 161, 195], "regener": 171, "regex": 176, "region": [8, 20, 27, 47, 64, 88, 138, 149, 151, 152, 156, 158, 160, 169, 170, 171, 173, 174, 175], "region_begin_op": 152, "region_cov": 171, "region_end_op": 152, "regist": [1, 2, 4, 5, 13, 34, 37, 56, 58, 63, 65, 67, 85, 88, 89, 101, 106, 121, 135, 136, 140, 144, 145, 147, 148, 149, 150, 151, 154, 160, 162, 163, 168, 171, 173, 176, 180, 193, 199], "register_comput": 34, "register_df_nod": 154, "register_error": 140, "register_extens": 63, "register_func": [121, 148, 162], "register_gradi": [34, 149], "register_intrin_low": 144, "register_object": [4, 37, 145], "register_op_attr": 144, "register_pipelin": [113, 150], "register_relay_nod": 4, "register_shape_func": 34, "register_strategi": 34, "register_task_input_check_func": 135, "register_topi_comput": 136, "register_topi_schedul": 136, "register_workload": [96, 101, 135, 187], "registers_per_block": 70, "registor": 173, "registr": [34, 35, 36, 63, 136, 165, 168], "registri": [1, 4, 5, 34, 36, 37, 135, 144, 168, 174, 180], "regress": [75, 104, 108, 136, 161], "regular": [9, 56, 59, 64, 65, 75, 148, 161, 175, 182, 185, 195], "regular_non_max_suppress": 161, "regularli": 16, "reimport": 75, "reindex": 171, "reindex_block": 171, "reindex_cache_read": 171, "reindex_cache_writ": 171, "reinterpret": [157, 173, 175, 191], "reinterpret_cast": 3, "reinvent": 9, "reject": [179, 183], "rel": [9, 32, 35, 36, 66, 79, 113, 136, 137, 148, 149, 159, 162, 182, 183], "rel_nam": 144, "relai": [0, 2, 3, 4, 33, 36, 37, 56, 57, 62, 64, 66, 68, 70, 71, 74, 86, 93, 97, 98, 99, 100, 105, 106, 107, 108, 117, 135, 136, 137, 141, 142, 143, 144, 146, 149, 170, 175, 176, 186, 192, 195, 197, 198, 199], "relat": [4, 5, 7, 9, 10, 16, 20, 35, 52, 56, 59, 62, 67, 115, 135, 136, 144, 146, 149, 151, 156, 158, 161, 162, 171, 174, 175, 178, 185, 195], "relationship": [2, 3, 18, 20, 27, 36, 80, 127, 171, 182, 183], "relative_byte_offset": 149, "relax": [23, 24, 30, 41, 44, 111, 130, 144, 166, 175, 176, 186], "relax_cr": [22, 24, 186], "relax_dynamo": 148, "relax_mlp": 20, "relax_transform": [23, 24, 186], "relax_vm": 142, "relaxmodel": [43, 110], "relaxmodul": 22, "relaxmodulewithtir": 22, "relay_fil": 75, "relay_func": 153, "relay_func_typ": 170, "relay_mod": [85, 137, 143], "relay_param": [75, 85, 120, 137], "relay_quick_start": [186, 193, 194], "relay_register_op": 34, "relay_viz": 120, "relaycallnodediff": 85, "relayexpr": [137, 144, 146, 147, 148, 149, 150, 151, 154, 157, 158, 159, 175], "relaynod": 4, "relayreftyp": [144, 157], "relaytotir": 160, "relayvisu": [120, 137], "releas": [11, 15, 16, 48, 56, 58, 66, 67, 69, 73, 80, 105, 106, 107, 115, 131, 132, 133, 137, 164, 183, 185], "relev": [5, 7, 9, 12, 16, 17, 30, 132, 180, 197], "reli": [4, 7, 25, 35, 62, 84, 85, 96, 97, 98, 99, 100, 104, 146, 155, 160, 171, 185, 187, 197], "reliabl": 12, "relink": 109, "reloc": 31, "relocat": 137, "relpath": [3, 66, 67, 68, 69, 70, 71, 97, 99, 105, 107, 109, 128, 137, 193, 195], "relu": [13, 18, 20, 22, 23, 25, 27, 43, 44, 58, 59, 65, 68, 85, 96, 101, 110, 111, 115, 118, 119, 147, 148, 149, 151, 158, 159, 175, 179, 182, 191, 193], "relu0": 0, "relu0_nchw8c": 0, "relu1": [22, 23, 43, 44, 110], "relu1_nchw8c": 0, "relu2_nchw2c": 0, "relu__0": 68, "relu__1": 68, "relu__10": 68, "relu__11": 68, "relu__12": 68, "relu__13": 68, "relu__14": 68, "relu__15": 68, "relu__16": 68, "relu__17": 68, "relu__18": 68, "relu__19": 68, "relu__2": 68, "relu__20": 68, "relu__21": 68, "relu__22": 68, "relu__23": 68, "relu__24": 68, "relu__25": 68, "relu__26": 68, "relu__27": 68, "relu__28": 68, "relu__29": 68, "relu__3": 68, "relu__30": 68, "relu__31": 68, "relu__32": 68, "relu__33": 68, "relu__34": 68, "relu__35": 68, "relu__36": 68, "relu__37": 68, "relu__38": 68, "relu__39": 68, "relu__4": 68, "relu__40": 68, "relu__41": 68, "relu__42": 68, "relu__43": 68, "relu__44": 68, "relu__45": 68, "relu__46": 68, "relu__47": 68, "relu__48": 68, "relu__5": 68, "relu__6": 68, "relu__7": 68, "relu__8": 68, "relu__9": 68, "relu_cel": 179, "relurewrit": 23, "relutogelu": 23, "relwithdebinfo": 132, "remain": [1, 31, 138, 146, 151, 157, 175, 183, 195], "remaind": [8, 148, 149, 151, 157, 169, 173, 192], "remaining_shap": [158, 175], "remap": [20, 22, 23, 27, 30, 31, 43, 110, 144, 147, 150, 151, 169, 170, 171, 173], "remark": [9, 58, 59, 65], "remedi": 35, "rememb": [9, 10, 11, 16, 17, 36, 155, 195], "remind": 16, "remor": 56, "remot": [2, 8, 12, 14, 16, 56, 58, 64, 73, 80, 97, 99, 105, 107, 135, 136, 140, 141, 150, 162, 163, 166, 185, 189, 197], "remote_arrai": 163, "remote_path": 67, "remov": [4, 6, 9, 16, 17, 49, 51, 65, 66, 67, 68, 70, 71, 72, 73, 74, 105, 106, 107, 115, 132, 135, 136, 137, 144, 146, 148, 149, 150, 151, 157, 160, 162, 164, 171, 174, 175, 197], "remove_all_unus": [146, 150, 151], "remove_index_check": 135, "remove_no_mac_subgraph": 65, "remove_postproc": 171, "remove_rv": 171, "remove_unus": 150, "removeassum": 174, "removenoop": 174, "removepuritycheck": [113, 151], "removepuritytrack": 151, "removeredundantreshap": 151, "removestoreundef": 174, "removeunusedfunct": 160, "removeunusedoutput": 151, "removeunusedparamet": 151, "removeweightlayoutrewriteblock": 174, "ren": 159, "renam": [144, 147, 151, 155, 175], "render": [16, 56, 85, 137, 140, 143, 180, 189, 197], "render_kwarg": 137, "renew_def": 172, "renorm": [148, 174], "renormalize_top_p_top_k_prob": 148, "renormalizesplitpattern": 174, "reorder": [25, 31, 37, 59, 88, 89, 90, 96, 101, 104, 128, 136, 149, 150, 151, 169, 171, 174, 177, 180, 187, 188, 195, 196], "reorder_block_iter_var": 171, "reorderd": 177, "reorderent": 136, "reorderpermutedimsafterconcat": 151, "reorderspac": 136, "reordertakeaftermatmul": 151, "reorg": 161, "reorganis": 161, "rep": [149, 157, 175], "repeat": [12, 56, 67, 68, 69, 73, 74, 75, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 135, 136, 141, 148, 149, 150, 157, 166, 171, 175, 189, 197], "repeatattr": 149, "repeatedli": [141, 180, 195], "repeats_to_cooldown": [141, 150, 166], "repetit": [148, 149, 157, 175, 189, 197], "repl": 191, "replac": [2, 4, 11, 17, 23, 35, 36, 74, 75, 84, 89, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 118, 128, 131, 132, 136, 144, 148, 149, 150, 151, 153, 154, 155, 157, 160, 171, 174, 175, 180, 182, 183, 187, 191, 197], "replace_all_us": 150, "replace_global_var": 144, "replaceconst": 84, "replai": 145, "replic": [16, 149], "repo": [5, 7, 14, 16, 17, 32, 62, 66, 90, 131, 132], "repo_bas": [52, 74], "repo_url": 47, "report": [4, 13, 16, 17, 34, 35, 67, 79, 93, 104, 136, 140, 141, 146, 150, 157, 162, 165, 166, 176, 197], "report_runtim": 75, "reportedli": 131, "repositori": [7, 12, 17, 37, 80, 132, 195], "repostitori": 12, "repres": [1, 2, 3, 4, 5, 18, 19, 20, 22, 26, 27, 30, 34, 36, 37, 56, 58, 73, 125, 127, 137, 144, 147, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 161, 168, 169, 171, 173, 174, 175, 178, 179, 180, 181, 183, 192, 195, 197], "represent": [1, 2, 18, 22, 44, 56, 58, 59, 64, 73, 75, 115, 118, 136, 137, 148, 149, 153, 155, 157, 158, 159, 160, 164, 168, 170, 173, 175, 178, 183, 192, 195, 197, 198], "reproduc": [16, 39, 171, 179], "reprsent": 173, "repsent": 175, "requant": [58, 73, 74, 175], "request": [7, 11, 12, 14, 15, 17, 67, 69, 80, 99, 113, 131, 135, 136, 148, 151, 162, 173], "request_and_run": 162, "request_hook": 8, "request_remot": [97, 99, 105, 107], "requir": [1, 3, 4, 5, 6, 7, 10, 12, 14, 16, 17, 22, 27, 34, 36, 37, 43, 48, 51, 56, 57, 58, 59, 62, 65, 67, 68, 69, 72, 73, 80, 84, 90, 96, 97, 98, 99, 100, 105, 106, 107, 113, 125, 128, 129, 132, 135, 136, 137, 139, 140, 146, 148, 149, 150, 151, 153, 154, 155, 157, 158, 160, 163, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 180, 182, 183, 187, 188, 189, 192, 195, 197, 198, 199], "require_grad": 151, "require_typ": [154, 182], "required_pass": [4, 157, 160, 176], "requiredbycondit": 174, "requires_cuda": [8, 79], "requires_gpu": 79, "requires_grad_": 72, "requires_runtim": 79, "requisit": [30, 31, 56, 136], "res_mod": [4, 160], "resampl": 49, "rescal": 158, "research": [5, 53, 110, 113, 130, 178, 184], "resembl": 27, "reserv": [17, 147, 149, 164], "reset": [15, 136, 144, 149, 158], "reset_attr": 144, "reshap": [47, 58, 64, 65, 68, 74, 111, 113, 115, 146, 148, 149, 151, 157, 158, 160, 174, 175, 189], "reshape1": 0, "reshape_lik": 157, "resid": [12, 163], "residu": 159, "residual_unit": 159, "resiz": [36, 46, 48, 49, 50, 51, 52, 53, 67, 69, 70, 71, 72, 73, 74, 148, 149, 156, 158, 171, 175, 189, 197], "resize1d": [156, 175], "resize2d": [149, 156, 175], "resize2dattr": 149, "resize3d": [156, 175], "resize_cache_index": 171, "resized_imag": [53, 189, 197], "resnet": [3, 48, 62, 67, 70, 71, 85, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 111, 137, 159, 189, 193, 198], "resnet18": [2, 3, 51, 67, 70, 71, 111], "resnet18_lib": 3, "resnet18_mod": 3, "resnet18_param": 3, "resnet18_v1": 65, "resnet18_weight": [51, 67, 70, 71, 111], "resnet3d": [97, 98, 99, 100], "resnet50": [48, 56, 189, 197, 198], "resnet50_keras_new": 48, "resnet50_keras_old": 48, "resnet50_trac": 68, "resnet50_weight": 68, "resnet50_weights_tf_dim_ordering_tf_kernel": 48, "resolut": [9, 49, 156, 175], "resolv": [4, 15, 80, 84, 136, 176], "resort": 171, "resourc": [15, 62, 80, 97, 98, 99, 100, 109, 135, 145, 162, 173], "respect": [3, 4, 15, 31, 34, 66, 84, 148, 149, 151, 156, 157, 158, 161, 171, 173, 175, 178, 180], "respectfulli": 9, "respond": 9, "respons": [7, 9, 11, 16, 17, 37, 88, 135, 158, 164, 171, 173, 175], "rest": [10, 36, 37, 58, 59, 64, 65, 73, 75, 110, 118, 121, 127, 151, 157, 179], "restart": 17, "restor": [3, 36, 135, 151], "restrict": [3, 5, 12, 56, 79, 118, 136, 144, 149, 170, 180], "restructuredtext": 12, "result": [0, 2, 4, 5, 9, 10, 12, 17, 20, 23, 27, 31, 34, 35, 36, 37, 39, 43, 46, 51, 52, 56, 58, 67, 68, 69, 70, 71, 75, 79, 80, 82, 85, 90, 96, 98, 101, 104, 105, 106, 107, 108, 119, 123, 124, 125, 128, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 182, 184, 187, 188, 189, 191, 193, 195, 196, 197, 199], "result_": 35, "resum": [96, 97, 98, 99, 100, 101, 135, 187], "resume_search": [96, 187], "ret": [75, 85, 101, 136, 137, 139, 146, 147, 148, 149, 150, 151, 152, 153, 157, 160, 161, 164, 166, 173, 174, 175], "ret_list": 137, "ret_nod": 148, "ret_struct_info": 150, "ret_typ": [144, 148, 149, 157, 173, 175, 183], "ret_valu": [150, 166], "retain": [16, 31, 49, 155, 160], "rethink": 159, "retrain": 75, "retreiv": 164, "retri": 162, "retriev": [4, 36, 136, 143, 145, 170, 171, 173, 180, 183], "retriv": 173, "return": [1, 2, 3, 4, 5, 8, 12, 13, 16, 18, 20, 22, 23, 30, 34, 35, 36, 37, 43, 44, 52, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 79, 82, 84, 85, 89, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 119, 120, 121, 125, 128, 129, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 183, 187, 188, 193, 195, 198, 199], "return_count": [149, 157, 175], "return_curr": 176, "return_index": 149, "return_indic": 161, "return_invers": 149, "return_unexpect": 173, "return_valu": 163, "reus": [5, 9, 88, 115, 135, 136, 137, 148, 151, 158, 160, 162, 169, 171, 175, 198], "reuse_addr": 162, "reuseabl": 179, "rev": 16, "reveres": 175, "revers": [67, 105, 106, 107, 148, 149, 151, 157, 169, 171, 175], "reverse_compute_at": [31, 171], "reverse_compute_inlin": 171, "reverse_reshap": 157, "reverse_sequ": [157, 175], "revert": [7, 16], "review": [2, 7, 8, 10, 12, 15, 16, 17, 20, 184], "revisit": [191, 199], "reward": 10, "rework": 16, "rewrit": [20, 23, 26, 41, 44, 123, 135, 150, 151, 154, 160, 174, 175], "rewrite_compute_bodi": 135, "rewrite_for_pre_transform": 135, "rewrite_layout_from_st": 135, "rewrite_onc": [154, 182], "rewrite_simplifi": 175, "rewrite_tensor_shap": 135, "rewritecudagraph": [113, 151], "rewritedataflowreshap": [113, 151], "rewriteunsafeselect": 174, "rewritten": [4, 23, 110, 123, 135, 150, 151, 154, 169, 170], "rewritten_layout": 135, "rf": [16, 17, 66, 123, 132, 171, 191], "rf_block": 171, "rfactor": [123, 169, 171], "rfc": [10, 11, 12, 13, 135, 160, 199], "rgb": [49, 193], "rh": [129, 137, 144, 146, 148, 149, 150, 151, 157, 158, 169, 170, 171, 173, 175], "rhs_begin": 157, "rhs_end": 157, "rich": 56, "richer": 12, "right": [4, 14, 16, 36, 46, 47, 56, 66, 75, 115, 137, 146, 149, 154, 156, 157, 158, 169, 170, 171, 173, 175, 179, 191, 195], "right_left": [157, 175], "right_right": [157, 175], "right_shift": [149, 157, 175], "risc": 168, "riscv64": 62, "riscv_cpu": 168, "rjust": 195, "rk3399": [97, 99, 105, 107, 109], "rlib": [67, 69, 70, 71, 97, 105, 107], "rm": [16, 17, 66, 132, 148], "rms_norm": [148, 149, 175], "rms_norm_ep": 113, "rmse": 135, "rmsnorm": [113, 148], "rng": [144, 189], "rnn": [66, 124, 159, 179], "ro": 144, "robin": [135, 145], "robust": [2, 9, 15], "rocbla": 118, "rocm": [43, 75, 106, 118, 141, 162, 164, 168, 195], "rocm_link": 137, "rocm_path": 132, "roi": [149, 156, 161, 175], "roi_align": 161, "roi_head": 72, "roi_pool": 161, "role": [9, 10, 17, 35, 113], "roll": [169, 171, 174], "rollabl": 171, "rolling_buff": [169, 171], "root": [3, 16, 22, 23, 30, 31, 37, 43, 61, 66, 71, 80, 104, 105, 106, 107, 109, 110, 125, 127, 132, 136, 137, 147, 148, 149, 150, 160, 169, 171, 173, 175, 188, 195, 196, 197], "root_dir": 80, "root_fn": 150, "root_mark": 171, "root_mod": 3, "root_modul": 3, "rope": 113, "rope_ext_factor": 113, "rope_mod": 113, "rope_sc": 113, "rope_scal": 113, "rope_theta": 113, "ropemod": 113, "rose": 68, "rotary_dim": 113, "rough": [97, 98, 99, 100, 197], "roughli": [5, 17, 169, 177], "round": [135, 145, 149, 156, 157, 160, 169, 173, 175, 177, 196], "rounding_method": [149, 156, 175], "roundtripp": 171, "rout": 35, "routin": [58, 175], "row": [0, 3, 75, 90, 125, 127, 135, 136, 148, 149, 156, 157, 161, 169, 173, 175, 191, 195], "row_major": [89, 173], "row_offset": 101, "rpc": [2, 5, 58, 62, 64, 68, 78, 98, 100, 106, 108, 112, 114, 130, 132, 135, 136, 140, 141, 142, 145, 150, 166, 185, 186, 197, 198], "rpc_host": 97, "rpc_kei": [68, 80, 198], "rpc_key0": 80, "rpc_key1": 80, "rpc_key2": 80, "rpc_port": 97, "rpc_proxi": 80, "rpc_proxy_ip": 80, "rpc_proxy_port": 80, "rpc_server": [70, 71, 80, 97, 105, 106, 107, 109], "rpc_tracker": [67, 68, 69, 80, 97, 105, 106, 107, 198], "rpc_tracker_host": [67, 68], "rpc_tracker_ip": 80, "rpc_tracker_port": [67, 68, 80], "rpcclientsess": 162, "rpcerror": 140, "rpcmodul": 5, "rpcrunner": [67, 97, 98, 99, 100, 105, 106, 107, 135, 136], "rpcserver": [70, 71, 109], "rpcsession": 162, "rpcsessiontimeouterror": 140, "rpctracker": [69, 97, 105, 106, 107], "rpi3b": [105, 107], "rpm": 65, "rpn": 161, "rpn_min_siz": 161, "rpn_post_nms_top_n": 161, "rpn_pre_nms_top_n": 161, "rr": 171, "rshift": 175, "rsqrt": [149, 157, 169, 173, 175, 177], "rss": 171, "rst": 12, "rstrip": [189, 197], "rt_mod": [73, 74, 139, 150, 166], "rtmod": 66, "rtol": [31, 90, 96, 101, 104, 118, 121, 123, 128, 159, 187, 188, 191, 195], "rtvm": 56, "rtx": 111, "rtype": [143, 153, 173, 176], "rtype1": 12, "rule": [2, 12, 16, 34, 65, 67, 94, 95, 135, 138, 144, 145, 148, 149, 150, 151, 156, 157, 158, 160, 169, 173, 175, 176, 183, 186, 195], "rule_nam": 135, "run": [0, 1, 2, 4, 5, 7, 8, 9, 12, 16, 17, 22, 23, 30, 31, 32, 35, 37, 39, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 62, 65, 69, 70, 71, 72, 74, 80, 82, 84, 85, 88, 89, 90, 93, 97, 98, 99, 100, 104, 105, 106, 107, 108, 110, 111, 113, 120, 121, 123, 124, 125, 127, 128, 129, 131, 132, 133, 135, 136, 137, 141, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 165, 166, 170, 174, 175, 176, 179, 180, 182, 183, 188, 189, 191, 192, 195, 199], "run_after_pass": [4, 85, 143], "run_as_python": 159, "run_before_pass": [4, 84, 85, 143], "run_cuda": 195, "run_dens": 75, "run_exampl": 60, "run_inference_on_imag": 52, "run_mod": 64, "run_opencl": 109, "run_pass": 4, "run_relay_graph": 75, "run_spars": 75, "run_tflite_model": 74, "run_tun": [97, 98, 99, 100], "run_tvm": 74, "run_tvm_model": 73, "runafterpass": 4, "runbeforepass": 4, "runcodegen": [110, 151], "runnabl": [37, 41, 44, 79, 109, 135, 150, 195, 196], "runner": [67, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 132, 135, 136, 145, 151, 188, 189, 199], "runner_futur": 145, "runner_input": 145, "runner_result": 145, "runnerfutur": 145, "runnerinput": 145, "runnerpyrunn": 145, "runnerresult": 145, "runnertyp": 145, "running_mean": [68, 149], "running_var": [68, 149], "runpass": 4, "runtim": [0, 1, 3, 4, 30, 32, 35, 37, 39, 41, 43, 44, 52, 53, 56, 58, 59, 61, 63, 64, 66, 67, 69, 72, 73, 75, 79, 82, 93, 96, 97, 98, 101, 105, 106, 107, 108, 110, 111, 113, 118, 119, 120, 121, 130, 132, 133, 136, 137, 139, 141, 144, 148, 149, 150, 151, 153, 154, 155, 157, 159, 162, 168, 169, 171, 173, 174, 183, 185, 192, 193, 199], "runtime_device_index": 149, "runtimeerror": [52, 53, 74, 75, 140, 148], "runtimewarn": 84, "ruofei": 90, "rust": [2, 192], "rv": [5, 36, 37, 169], "rv0": [97, 98, 99, 100, 171], "rv1": [12, 97, 98, 99, 100, 137, 171], "rv2": 137, "rv64gc": 168, "rw": [144, 173], "rw_mask": 173, "rx": [88, 96, 98, 99, 100, 104, 127, 147, 148], "rx_func": 147, "rxi": 104, "rxm": 104, "rxo": 104, "rxplacehold": 147, "rxplaceholder_1": 147, "ry": [88, 96, 98, 99, 100, 104], "ry_out": 191, "ry_outer_out": 96, "ryi": 104, "rym": 104, "ryo": 104, "ryzen": [105, 106, 107], "s0": 101, "s1": [124, 128, 139], "s1_1": 124, "s2": [124, 139, 179], "s2b": 160, "s3": [8, 17, 61, 189, 197], "s3_bucket": 61, "s3_dcp_kei": 61, "s3_logs_kei": 61, "s_": [75, 158], "s_graph_opt": 108, "s_init": [124, 169], "s_init1": 124, "s_init2": 124, "s_orig": 72, "s_scan": 124, "s_scan1": 124, "s_scan2": 124, "s_state": [124, 169], "s_state1": 124, "s_state2": 124, "s_type": 157, "s_updat": [124, 169], "s_update1": 124, "s_update2": 124, "s_update_s1": 124, "s_update_s2": 124, "sa": 136, "safe": [4, 14, 85, 97, 98, 99, 100, 149, 150, 162, 180, 195], "safetensor": 113, "safeti": [135, 146, 179], "sai": [14, 97, 98, 99, 100, 148, 149, 158, 179], "said": [3, 84], "same": [1, 2, 3, 5, 8, 9, 11, 12, 13, 16, 17, 20, 22, 27, 30, 31, 34, 36, 37, 41, 43, 44, 49, 56, 57, 61, 65, 66, 69, 70, 71, 73, 74, 75, 79, 80, 84, 88, 89, 109, 113, 125, 127, 128, 129, 131, 136, 140, 144, 145, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 183, 188, 189, 191, 195, 197, 198, 199], "same_a": [35, 144, 150, 164, 170], "samp": 148, "sampl": [57, 97, 98, 99, 100, 113, 135, 136, 137, 148, 149, 151, 156, 161, 171, 175], "sample_categor": 171, "sample_compute_loc": 171, "sample_indic": [148, 149], "sample_initial_popul": 135, "sample_int": 136, "sample_partitioned_til": 171, "sample_perfect_til": 171, "sample_ratio": 161, "sample_simple_workload": 135, "sample_token": 113, "sample_top_p_top_k_from_sorted_prob": 148, "samuel": [47, 74], "sanit": 148, "saniti": 148, "sanitize_input_nam": 148, "satisfi": [5, 34, 59, 136, 169, 171, 173, 174, 180, 182, 183, 197], "satur": 173, "save": [0, 2, 3, 5, 6, 10, 12, 14, 36, 49, 52, 56, 57, 61, 65, 68, 69, 70, 71, 75, 97, 98, 99, 100, 109, 110, 113, 115, 135, 136, 137, 144, 145, 148, 149, 150, 151, 155, 157, 166, 171, 189, 191, 197], "save_at_exit": 137, "save_funct": [150, 166], "save_json": [75, 144], "save_param_dict": [57, 75, 157], "save_record": 135, "save_relai": 75, "saveabl": 198, "saved_nam": [150, 166], "saver": 52, "saves_model": 68, "savetobinari": 3, "savez": 197, "scalabl": [169, 171, 173, 175], "scalar": [148, 149, 150, 151, 157, 158, 161, 169, 173, 174, 175, 180, 183], "scalar_input": 169, "scalar_param": 169, "scalar_typ": 157, "scale": [49, 73, 85, 97, 105, 107, 111, 136, 137, 144, 148, 149, 156, 158, 159, 160, 161, 175, 178, 180, 193], "scale_d": [158, 175], "scale_factor": [72, 148], "scale_h": [158, 175], "scale_shift_nchw": 175, "scale_shift_nchwc": 175, "scale_shift_nhwc": 175, "scale_w": [158, 175], "scaled_dot_product_attent": 148, "scaled_s": 175, "scan": [34, 122, 126, 149, 169, 175, 186], "scan_1": 124, "scan_2": 124, "scan_3": 124, "scan_4": 124, "scan_5": 124, "scan_axi": [124, 169], "scan_idx": 124, "scan_op": 124, "scanop": [34, 169, 175], "scanopattr": [34, 149], "scanoprel": 34, "scatter": [75, 149, 157, 163, 175], "scatter_el": [149, 157, 175], "scatter_from_worker0": [149, 163], "scatter_nd": [149, 157, 175], "scenario": [41, 58, 174, 182], "scene": 193, "sch": [31, 37, 82, 96, 101, 136, 138, 145, 169, 171, 177, 187, 196], "scheduer": 135, "schedul": [2, 4, 25, 26, 30, 34, 37, 56, 65, 69, 74, 82, 86, 88, 90, 95, 102, 104, 105, 106, 107, 108, 109, 110, 121, 126, 135, 136, 138, 139, 142, 144, 145, 151, 168, 169, 174, 175, 177, 186, 190, 192, 194, 196, 198], "schedule_argsort": 175, "schedule_conv2d_hwcn": 127, "schedule_conv2d_nchw": 191, "schedule_extern": 34, "schedule_inject": 139, "schedule_nam": 136, "schedule_op": 37, "schedule_primit": [125, 126, 171, 186], "schedule_reduc": 191, "schedule_rul": 175, "schedule_scan": 34, "schedule_softmax": 191, "scheduledebugmask": 171, "scheduleerror": 171, "schedulefntyp": 145, "scheduleop": 37, "schedulerul": [138, 145], "schedulest": 171, "scheduletre": 127, "scheduletree2": 127, "schema": 53, "scheme": [4, 12, 88, 136], "scientist": 36, "scipi": [75, 115, 158, 175, 189, 197], "sconv": 191, "scope": [4, 9, 16, 20, 34, 73, 96, 104, 110, 127, 137, 144, 145, 147, 148, 149, 150, 155, 157, 160, 164, 169, 170, 171, 173, 174, 175, 177, 179, 180, 191, 192], "scope_block": 171, "scopebuild": 157, "score": [52, 113, 135, 136, 145, 149, 161, 189, 197], "score_index": 161, "score_s0": 135, "score_s1": 135, "score_si": 135, "score_sn": 135, "score_threshold": [72, 161], "scratch": [5, 9, 16, 65, 135], "screen": [97, 104, 105, 107, 148, 188], "script": [0, 5, 7, 8, 16, 17, 18, 20, 22, 23, 25, 27, 30, 31, 43, 44, 47, 50, 52, 56, 58, 61, 66, 67, 68, 69, 72, 73, 75, 79, 82, 89, 90, 96, 98, 100, 105, 106, 107, 110, 111, 113, 123, 124, 125, 128, 129, 131, 132, 147, 148, 151, 155, 157, 159, 169, 171, 177, 187, 189, 191, 195, 196, 197, 198, 199], "script_modul": [72, 73, 155], "scripted_model": [51, 67, 70, 71], "scroll": 7, "sd": [66, 148], "sdaccel": 61, "sdaccel_dir": 61, "sdaccel_setup": 61, "sdk": [56, 59, 65, 132, 137], "sdk_path": 69, "se": 16, "searc": 102, "search": [0, 2, 7, 16, 39, 58, 59, 79, 110, 135, 136, 137, 145, 151, 152, 157, 162, 171, 174, 175, 188, 192, 195, 198], "search_fc_transpos": [152, 160], "search_polici": [96, 100, 101, 135, 187], "search_policy_param": 135, "search_rang": 175, "search_strategi": 145, "search_task": [101, 135], "searchcallback": 135, "searchpolici": 135, "searchpolicyutilsgetconsum": 101, "searchpolicyutilsiselementwisematch": 101, "searchsort": [157, 175], "searchstrategi": 145, "searchstrategytyp": 145, "searchtask": [96, 101, 135, 175, 187], "sec": 109, "secion": [97, 98, 99, 100], "second": [1, 17, 35, 36, 37, 43, 47, 50, 52, 62, 65, 66, 67, 68, 72, 73, 98, 100, 104, 113, 118, 119, 121, 127, 128, 135, 141, 145, 148, 149, 150, 151, 157, 158, 160, 161, 162, 166, 170, 171, 173, 175, 177, 179, 180, 182, 187, 188, 189, 195], "second_opt": 179, "secondli": 113, "section": [2, 4, 6, 7, 12, 17, 20, 22, 23, 30, 31, 33, 35, 36, 38, 56, 58, 64, 66, 67, 68, 70, 71, 78, 85, 97, 98, 99, 100, 104, 105, 106, 107, 109, 137, 140, 144, 148, 149, 154, 157, 179, 180, 182, 183, 188, 189, 197, 198], "secur": [115, 130], "sed": [80, 109], "see": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 20, 23, 31, 35, 36, 37, 39, 46, 56, 58, 62, 65, 66, 67, 68, 70, 71, 73, 74, 75, 79, 82, 84, 85, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 110, 115, 120, 123, 125, 127, 128, 129, 131, 132, 133, 135, 136, 137, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 160, 162, 166, 169, 171, 173, 174, 175, 180, 183, 187, 189, 191, 195, 197, 198, 199], "seed": [135, 145, 159, 171, 189], "seek": [16, 32], "seem": [7, 135], "seemingli": 90, "seen": [3, 27, 34, 36, 148, 149, 191], "segment": [157, 180], "segment_id": 157, "segment_sum": 157, "segreg": 31, "select": [9, 17, 18, 58, 66, 67, 68, 69, 79, 84, 97, 98, 99, 100, 110, 115, 129, 136, 148, 149, 150, 153, 157, 159, 161, 169, 171, 173, 174, 175, 176, 177, 182, 192], "select_implement": 153, "select_last_index": [157, 175], "selector": 173, "self": [2, 4, 22, 23, 27, 34, 37, 43, 44, 63, 72, 80, 84, 85, 110, 113, 115, 120, 136, 143, 144, 145, 146, 148, 150, 151, 154, 160, 164, 168, 174, 176, 182, 199], "self_attn": 113, "semant": [34, 123, 148, 149, 150, 156, 157, 158, 160, 169, 171, 173, 175, 180, 195], "semicolon": [79, 180], "semiconductor": 56, "semnat": 160, "send": [2, 7, 8, 10, 11, 13, 16, 17, 32, 97, 105, 107, 150, 166], "sens": [9, 12, 13, 35, 179], "sensit": 160, "sent": [10, 11, 148, 149, 185], "sep": 113, "separ": [10, 12, 31, 32, 34, 41, 44, 58, 63, 65, 79, 90, 124, 125, 136, 148, 149, 151, 158, 159, 161, 162, 169, 171, 173, 174, 175, 180, 182, 183, 193, 195], "separable_conv_block": 159, "seper": 158, "seq": [35, 84, 113, 147, 157, 173, 175], "seq_axi": [157, 175], "seq_id": 113, "seq_len": [75, 113, 148, 149, 175], "seq_len_kv": [148, 149], "seq_length": [157, 175], "seqexpr": 150, "seqexprnod": 150, "seqstart_k": 149, "seqstart_q": 149, "seqstmt": 173, "sequanti": 176, "sequenc": [4, 8, 23, 25, 27, 30, 35, 37, 43, 73, 75, 113, 119, 137, 144, 148, 149, 150, 151, 157, 160, 163, 164, 165, 171, 173, 175, 176, 179, 180, 183, 196], "sequence_mask": [157, 175], "sequence_offset": 175, "sequenti": [23, 35, 85, 90, 105, 106, 107, 110, 111, 113, 136, 147, 160, 169, 175, 176, 188, 189, 195], "sequentialnod": 4, "sequentialpass": 4, "sequentialpassnod": 4, "sequentialspan": [144, 157], "seri": [4, 44, 56, 58, 65, 108, 110, 111, 113, 125, 154, 168, 176, 180, 182, 187, 191, 195], "serial": [0, 2, 5, 36, 64, 66, 82, 115, 125, 135, 136, 141, 144, 147, 157, 165, 171, 174, 177, 195, 197], "serializ": 136, "serialize_arg": 136, "serializemodul": 3, "serv": [2, 4, 9, 10, 11, 30, 56, 80, 137, 148, 149, 162, 171, 175, 176, 180, 183, 193, 195, 196], "server": [5, 8, 12, 17, 68, 69, 89, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 135, 136, 140, 162, 185, 189, 197, 198], "server_init_callback": 162, "server_kei": 162, "server_port": 162, "server_url": 162, "servic": [80, 185], "sess": [52, 162], "session": [52, 69, 70, 71, 79, 97, 105, 107, 109, 140, 162, 163, 197], "session_constructor": 162, "session_constructor_arg": 162, "session_timeout": [67, 69, 162], "sestion": [67, 68], "set": [0, 1, 2, 3, 4, 5, 6, 9, 14, 17, 23, 27, 32, 34, 35, 36, 41, 43, 44, 46, 47, 51, 52, 56, 58, 59, 62, 66, 67, 68, 69, 73, 74, 79, 80, 85, 93, 96, 98, 99, 100, 101, 110, 113, 118, 119, 120, 125, 128, 132, 135, 136, 137, 141, 144, 146, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 162, 165, 166, 168, 169, 171, 173, 174, 175, 176, 179, 180, 182, 183, 185, 188, 193, 195, 197, 198], "set_attr": [34, 144], "set_attrs_type_kei": 144, "set_axis_separ": 171, "set_bodi": [5, 36, 37], "set_body_typ": [1, 4, 34, 35, 36], "set_default": [34, 168], "set_dtyp": 171, "set_error_threshold": 136, "set_input": [0, 2, 46, 47, 51, 52, 53, 58, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 97, 98, 99, 100, 105, 106, 107, 108, 118, 119, 141, 150, 166, 189, 193], "set_input_zero_copi": 141, "set_instru": [150, 166], "set_item": 151, "set_keep_for_debug": 137, "set_memory_growth": [52, 75], "set_num_ev": 176, "set_num_input": [34, 144], "set_output_zero_copi": 141, "set_param": 153, "set_scop": [169, 171], "set_stat": 148, "set_store_pred": [123, 169], "set_support_level": [34, 144], "set_target_pars": 1, "set_tensor": 74, "set_to": 137, "set_var_remap": 150, "setaxissepar": 171, "setdevic": 1, "setion": 99, "setlevel": [104, 105, 106, 107, 188], "setrecursionlimit": 157, "setstream": 1, "setter": 36, "settings64": 61, "setup": [17, 58, 62, 68, 78, 90, 108, 109, 131, 139, 144, 147, 150, 153, 154, 195], "sevar": 148, "sever": [2, 4, 7, 11, 16, 18, 56, 63, 67, 70, 71, 73, 79, 101, 108, 123, 125, 132, 135, 136, 149, 150, 151, 157, 169, 175, 192, 197], "sg": 191, "sh": [8, 16, 56, 58, 60, 61, 64, 66, 69, 79, 131, 132, 148, 183], "sha": 17, "sha1": 62, "sha256": 8, "sha512": 17, "shader": 6, "shaderfloat16": 6, "shaderfloat64": 6, "shaderint16": 6, "shaderint64": 6, "shaderint8": 6, "shadow": 180, "shall": 144, "shaoq": 159, "shape": [0, 2, 4, 5, 8, 18, 20, 22, 27, 34, 35, 36, 37, 44, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 61, 65, 67, 68, 69, 70, 71, 74, 75, 84, 89, 90, 96, 101, 104, 110, 111, 113, 115, 121, 125, 128, 129, 135, 136, 137, 139, 141, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 169, 171, 173, 174, 175, 177, 178, 180, 183, 187, 188, 189, 191, 195, 197, 198], "shape_": 151, "shape_data": 36, "shape_dict": [46, 47, 48, 49, 50, 52, 53, 64, 68, 69, 74, 75, 141, 148, 155, 189, 198], "shape_dtype_infer": 148, "shape_lik": [157, 175], "shape_list": [51, 67, 70, 71, 72], "shape_of": [149, 150, 157], "shape_to_tensor": 149, "shape_var_map": 146, "shapeexpr": [113, 148, 149, 150], "shapeexprnod": 150, "shapepattern": 154, "shapestructinfo": 150, "shapetupl": [113, 164], "shapetyp": 150, "shapevar": [157, 183], "shard": 149, "share": [0, 2, 3, 5, 9, 37, 43, 56, 60, 62, 88, 89, 96, 97, 104, 118, 127, 128, 135, 136, 137, 141, 149, 150, 151, 152, 160, 169, 171, 173, 174, 177, 179, 191, 195, 199], "share_param": 141, "shared_memory_per_block": 70, "shared_offset": 173, "shared_ptr": [5, 37, 173], "shared_transform": 151, "shasum": 17, "shell": [16, 56, 66, 67, 68, 69], "shen": 88, "shepherd": [9, 15, 16], "shift": [56, 149, 157, 173, 175], "shift_left": 173, "shift_right": 173, "ship": [5, 56, 132], "shiue": [192, 198], "short": [8, 13, 20, 73, 96, 118, 119, 121, 123, 157, 159, 175, 189], "shortcut": 7, "shorten": 17, "shorter": [157, 175, 191], "shot": [2, 151], "should": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 34, 35, 36, 46, 48, 49, 51, 56, 58, 59, 62, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 85, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 107, 108, 109, 113, 115, 118, 119, 120, 131, 132, 135, 136, 139, 141, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 161, 164, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 180, 183, 185, 187, 189, 190, 191, 192, 195, 197, 198], "should_run": [4, 85, 143], "shouldn": [66, 160], "shouldrun": 4, "show": [2, 4, 7, 12, 14, 20, 22, 23, 27, 30, 31, 37, 43, 44, 47, 48, 49, 53, 56, 58, 67, 75, 84, 88, 89, 109, 110, 111, 113, 118, 120, 125, 127, 128, 132, 148, 150, 151, 166, 171, 180, 187, 188, 189, 193, 195, 197], "show_detect": 47, "show_meta": [110, 111, 128], "show_meta_data": [85, 144, 154, 157, 176, 193], "show_svg": 127, "shown": [12, 23, 35, 36, 39, 56, 79, 80, 88, 118, 127, 187, 188, 195, 199], "shuffl": [161, 173], "shut": 163, "shutdown": 163, "si": 136, "si_prefix": 136, "sid": 36, "side": [2, 4, 20, 37, 56, 82, 115, 127, 131, 136, 139, 144, 146, 148, 149, 150, 153, 156, 157, 158, 159, 160, 163, 169, 170, 171, 174, 175, 195], "sifiv": 168, "sig": 17, "sigil": 180, "sigma": 34, "sigmoid": [34, 65, 115, 148, 149, 157, 169, 173, 175, 177], "sigmoid_grad": 34, "sign": [8, 9, 17, 137, 149, 157, 169, 173, 175], "signal": [7, 157, 175], "signatur": [2, 5, 17, 30, 121, 136, 139, 146, 148, 150, 151, 166, 169, 171, 172, 173, 174, 175, 179, 180, 181, 183, 195], "signifi": [25, 27], "signific": [9, 27, 56, 75, 157, 161, 195], "significantli": 27, "signl": 84, "siju": [47, 74], "silent": [79, 135, 136, 160, 162], "silu": [113, 148, 149, 151], "sim": 64, "simd": [90, 109, 168, 195], "simdgroup": 173, "simdgroup_load": 173, "simdgroup_multiply_accumul": 173, "simdgroup_stor": 173, "similar": [0, 4, 8, 34, 36, 43, 44, 56, 84, 120, 123, 136, 148, 149, 151, 157, 158, 162, 169, 171, 175, 179, 182, 196], "similarli": [4, 27, 56, 84, 108, 149, 150, 168, 179, 180], "similiar": 34, "simonyan": 159, "simpl": [1, 2, 4, 5, 8, 12, 22, 23, 35, 36, 37, 44, 49, 50, 56, 58, 67, 71, 75, 80, 82, 84, 90, 93, 96, 105, 106, 107, 109, 110, 120, 123, 135, 136, 139, 148, 149, 151, 153, 157, 159, 162, 171, 172, 176, 179, 180, 182, 183, 187, 188, 189, 191, 195, 196, 197, 199], "simple_mod": [37, 89, 90, 96, 101, 123, 124, 125, 128, 129, 139, 187, 191, 195], "simple_net": [118, 119], "simpler": 197, "simplest": [5, 90, 189, 197], "simpli": [13, 34, 35, 36, 58, 69, 70, 71, 75, 84, 90, 110, 121, 123, 128, 132, 135, 137, 141, 146, 160, 169, 172, 173, 177, 179, 180, 183], "simplic": [188, 193, 197], "simplif": [4, 128, 160, 170, 173, 174, 175], "simplifi": [2, 4, 36, 43, 56, 67, 113, 151, 160, 171, 174, 175, 182], "simplify_fc_transpos": [75, 152, 160], "simplifyexpr": 160, "simplifyfctranspos": 160, "simplifyinfer": [152, 157, 160], "simul": [62, 136, 164, 175], "simulated_dequant": 175, "simulated_quant": 175, "simultan": [89, 150, 179], "sin": [65, 149, 157, 169, 173, 175], "sinc": [0, 4, 5, 6, 9, 16, 17, 20, 27, 34, 36, 43, 48, 51, 67, 68, 69, 70, 71, 72, 73, 79, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 121, 124, 128, 144, 146, 147, 148, 157, 158, 160, 174, 179, 180, 181, 182, 188, 189, 195], "sine": 148, "sinfo": 146, "sinfo_arg": [149, 150], "sinfo_func": 151, "singl": [1, 2, 3, 4, 5, 8, 13, 16, 20, 22, 25, 27, 31, 36, 46, 48, 49, 50, 53, 58, 66, 75, 79, 82, 90, 101, 110, 118, 129, 135, 136, 144, 148, 149, 150, 151, 152, 153, 154, 157, 158, 160, 165, 168, 169, 170, 171, 174, 175, 179, 180, 182, 188, 192, 195, 199], "single2": 179, "singleton": [146, 148, 149, 150], "singular": 25, "sinh": [149, 157, 169, 173, 175], "sinusoid": 148, "site": [17, 35, 46, 48, 49, 51, 67, 68, 70, 71, 72, 73, 80, 115, 132, 144, 150, 151, 160, 174, 180, 183], "situat": [7, 27, 80, 108, 147, 160, 179, 197], "siva": [56, 67, 68], "six": 175, "siyuan": [89, 196], "size": [2, 27, 30, 31, 32, 34, 35, 36, 37, 49, 56, 61, 65, 68, 72, 75, 88, 89, 90, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 113, 115, 118, 119, 121, 123, 124, 128, 135, 136, 137, 144, 146, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 168, 169, 170, 171, 173, 174, 175, 176, 177, 180, 182, 183, 187, 188, 189, 191, 193, 195, 197], "size_hint_byt": 144, "size_t": [3, 34, 36], "size_var": 169, "sizeof": [90, 175, 195], "sizevar": [169, 173], "skeleton": [36, 199], "sketch": [4, 94, 95, 135, 186], "sketch_search_polici": 135, "sketchpolici": [96, 100, 101, 135, 187], "sketchsearchpolici": 135, "skinni": 174, "skip": [0, 6, 14, 16, 17, 35, 36, 49, 75, 79, 82, 105, 106, 107, 108, 110, 111, 127, 135, 139, 143, 144, 154, 157, 160, 169, 171, 174], "skip_annot": 143, "skip_lay": 160, "skip_lin": 135, "skip_ndarray_rewrit": 174, "skip_pass_nam": 143, "skipassert": 174, "skipfunct": 4, "skipif": 79, "skipoptim": 4, "skippass": 143, "skylak": [72, 73, 74, 100, 101, 108, 187, 189, 195, 197], "slash": 8, "slice": [97, 98, 99, 100, 148, 149, 151, 157, 169, 171, 175], "slice_axi": [158, 175], "slice_lik": 157, "slice_mod": [157, 175], "slid": [157, 175], "slide": [149, 157, 158, 175, 184], "sliding_window": [157, 175], "slight": 65, "slightli": [0, 34, 66, 82, 84, 90, 195], "slim": 53, "slip": 9, "slope": [149, 158, 175], "slot": 0, "slow": [8, 16, 105, 107, 174], "slower": [69, 169], "slowest": 169, "sm": 119, "sm_53": 70, "sm_61": 168, "sm_75": 104, "sm_80": 168, "sm_xx": [106, 191, 193], "small": [4, 5, 90, 97, 98, 99, 100, 141, 148, 149, 157, 158, 160, 175, 188, 189, 192, 195], "smaller": [149, 160, 174, 175], "smallest": [75, 148, 149], "smarter": 188, "sme": 175, "smem_offset": 173, "smem_ptr": 173, "smooth": 182, "snapdragon": 69, "snippet": [2, 12, 35, 44, 56], "so": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 20, 22, 27, 34, 35, 36, 37, 41, 44, 47, 51, 53, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 82, 85, 89, 90, 93, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 118, 119, 120, 125, 128, 129, 131, 132, 135, 136, 140, 141, 144, 146, 149, 150, 154, 155, 157, 160, 161, 162, 166, 169, 171, 175, 177, 179, 180, 182, 183, 188, 189, 193, 195, 197], "soc": [56, 168], "socket": [2, 162, 163], "socketsess": 163, "softmax": [52, 65, 70, 71, 85, 113, 115, 137, 148, 149, 158, 160, 175, 189, 191, 193, 197], "softmax_common": 175, "softmax_tensor": 52, "softmax_topi": 191, "softmaxattr": 149, "softwar": [12, 58, 61, 64, 66, 130, 178, 185], "sole": 43, "solicit": 11, "solitari": 25, "solut": [5, 8, 9, 12, 36, 39, 41, 48, 51, 56, 67, 72, 79, 89, 128, 132, 199], "solv": [5, 9, 12, 63, 89, 101, 144, 180, 183], "solver": 183, "some": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 14, 16, 17, 32, 34, 35, 36, 39, 56, 62, 65, 68, 69, 70, 71, 75, 79, 80, 81, 82, 84, 85, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 113, 118, 121, 125, 129, 131, 132, 133, 135, 136, 137, 146, 148, 149, 150, 151, 152, 155, 157, 159, 160, 169, 171, 173, 175, 176, 177, 178, 179, 180, 182, 187, 188, 189, 190, 195, 197, 198], "somehow": 60, "someon": 12, "someth": [7, 9, 12, 17, 75, 80, 85, 105, 106, 107, 118, 119, 138, 154, 165, 177, 189, 197], "sometim": [9, 10, 14, 67, 82, 90, 101, 118, 120, 121, 123, 129, 132, 135, 174, 177, 179, 182, 183, 195], "soon": [7, 56, 199], "sophist": [105, 106, 107], "sort": [148, 149, 151, 157, 161, 165, 170, 175, 197], "sortattr": 149, "sorted_index": 148, "sorted_prob": 148, "sorted_sequ": [157, 175], "soumith": 159, "sourc": [1, 2, 3, 5, 8, 9, 10, 12, 16, 17, 22, 23, 30, 31, 32, 36, 37, 39, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 61, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 82, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 133, 135, 136, 137, 144, 148, 149, 150, 153, 155, 156, 157, 158, 160, 164, 166, 169, 171, 173, 175, 179, 185, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199], "source_arrai": [137, 164], "source_cod": 148, "source_format": 148, "source_func": 153, "source_nam": 144, "source_to_op": 169, "sourcemodul": 148, "sourcenam": 144, "sourcetensor": 72, "sp": 75, "space": [1, 2, 16, 49, 65, 66, 88, 89, 96, 97, 98, 99, 100, 102, 110, 135, 136, 144, 145, 148, 149, 151, 157, 163, 173, 174, 175, 187, 188, 192, 197, 198], "space_gener": 145, "space_map": [104, 188], "space_to_batch_nd": [158, 160, 175], "space_to_depth": [158, 175], "spacegener": 145, "spacegeneratortyp": 145, "span": [18, 68, 144, 150, 151, 154, 155, 156, 157, 158, 160, 169, 173, 174, 175, 188], "spancheck": 157, "spars": [94, 95, 97, 100, 115, 135, 157, 158, 160, 171, 173, 186], "sparse_add": [158, 175], "sparse_conv2d": [160, 175], "sparse_data": [158, 175], "sparse_dens": [75, 101, 115, 158, 160, 175], "sparse_dense_alter_layout": 175, "sparse_dense_block": 101, "sparse_dense_bsr_": 101, "sparse_dense_sp_lh": 175, "sparse_dense_sp_rh": 175, "sparse_dense_sp_rhs_bsrmm": 101, "sparse_dense_sp_rhs_bsrmm_block": 101, "sparse_fill_empty_row": 157, "sparse_indic": [157, 158, 175], "sparse_indptr": [158, 175], "sparse_lh": [158, 175], "sparse_mat": 158, "sparse_reshap": [157, 175], "sparse_selector": 173, "sparse_sketch_rul": 100, "sparse_to_dens": [157, 175], "sparse_transpos": [158, 175], "sparse_valu": [157, 175], "sparsedens": 101, "sparseplaceholderop": 137, "sparsiti": 75, "sparsity_threshold": [75, 160], "spatial": [25, 27, 30, 31, 74, 104, 110, 136, 138, 147, 148, 156, 158, 170, 171, 175, 196], "spatial_scal": 161, "spatial_shap": [158, 175], "speak": [9, 27], "spec": [6, 22, 23, 32, 43, 44, 49, 110, 113, 148], "special": [4, 6, 8, 18, 27, 32, 36, 58, 59, 73, 74, 82, 84, 89, 104, 113, 135, 137, 141, 145, 148, 149, 151, 157, 158, 160, 168, 169, 171, 173, 175, 176, 180, 189, 192, 197], "special_spac": 145, "specialized_ndk": 137, "specializedcondit": 169, "specif": [1, 2, 4, 7, 8, 12, 15, 16, 20, 22, 25, 27, 30, 35, 36, 37, 44, 51, 52, 56, 62, 66, 73, 75, 79, 86, 89, 90, 97, 98, 99, 100, 105, 106, 107, 109, 110, 113, 118, 120, 121, 125, 132, 135, 136, 137, 139, 140, 141, 144, 145, 148, 149, 150, 151, 153, 156, 157, 158, 160, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 182, 183, 187, 189, 191, 192, 193, 195, 196, 197], "specifi": [0, 1, 2, 4, 6, 7, 8, 16, 17, 27, 30, 32, 34, 43, 56, 58, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 79, 84, 88, 93, 96, 106, 109, 113, 118, 125, 128, 132, 135, 136, 137, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 168, 169, 171, 172, 173, 174, 175, 176, 179, 182, 183, 187, 189, 191, 192, 193, 195, 197, 199], "specifici": 150, "specul": 179, "speed": [5, 56, 64, 69, 75, 89, 97, 98, 99, 100, 105, 107, 135, 141, 158, 175, 188, 189, 195, 197, 198], "speedup": [16, 75, 90], "spell": 16, "spend": [9, 189], "spent": [97, 98, 99, 100, 189], "sphinx": [21, 22, 23, 28, 30, 31, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 84, 85, 87, 88, 89, 90, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199], "spir": 175, "spl": 51, "spline": [149, 156, 175], "split": [31, 37, 48, 49, 51, 56, 58, 61, 65, 82, 85, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 113, 123, 124, 127, 128, 136, 148, 149, 151, 152, 154, 157, 160, 162, 169, 171, 173, 174, 175, 177, 180, 187, 188, 195, 196], "split_config": 119, "split_k_slic": 119, "split_loop": 171, "split_workload": 136, "splitarg": 160, "splitattr": 149, "splitcalltirbypattern": 151, "splitent": [136, 188], "splithostdevic": 174, "splitlayoutrewritepreproc": 151, "splitspac": 136, "spontan": 177, "spot": [9, 90, 195], "spread": 32, "sptr_to_self": [36, 37], "spv_bin": 137, "spv_khr_16bit_storag": 6, "spv_khr_8bit_storag": 6, "spv_khr_storage_buffer_storage_class": 6, "spvvalid": 6, "sqnn_dtype_to_cod": 175, "sqrt": [58, 65, 80, 148, 149, 157, 158, 169, 173, 175, 177, 182], "squad": 75, "squar": [16, 88, 90, 128, 148, 149, 156, 158, 169, 173, 175, 187, 188], "squash": [14, 17], "squeez": [52, 53, 65, 68, 74, 146, 148, 149, 157, 175, 189, 197], "squeezeattr": 149, "squeezenet": [97, 98, 99, 100, 105, 106, 107, 108, 159], "squeezenet_v1": [97, 98, 99, 100, 105, 106, 107, 108], "sr": 171, "src": [4, 13, 17, 32, 34, 35, 36, 37, 53, 56, 58, 65, 66, 82, 135, 155, 156, 163, 169, 171, 173, 174, 175, 180, 183, 199], "src_devic": 157, "src_index": 173, "src_layout": [157, 173, 175], "src_offset": 173, "src_ptr": 173, "src_shape": 173, "src_sref": 171, "sref": [171, 173], "sref2scop": 173, "srr": 171, "ss": [20, 22, 23, 27, 30, 31, 36, 43, 147, 151, 169, 171, 173], "ss2": 36, "ssa": [170, 174], "sse": 37, "ssr": [20, 22, 23, 27, 30, 31, 43, 169, 171], "sssr": 138, "ssss": [138, 171], "sst": 191, "sstream": 36, "stabl": [2, 9, 16, 97, 105, 107, 132, 148, 149, 150, 157, 199], "stablehlo_modul": 148, "stack": [2, 4, 19, 26, 30, 33, 41, 62, 66, 78, 84, 85, 130, 133, 144, 157, 159, 162, 173, 175, 176, 178], "stacktrac": 13, "stackvm": [136, 139, 150, 153], "stage": [1, 37, 41, 43, 44, 56, 66, 67, 79, 80, 101, 104, 118, 121, 125, 127, 135, 136, 148, 149, 159, 169, 171, 174, 176, 191, 195, 196, 197], "stage1_unit1_bn1_beta": [85, 193], "stage1_unit1_bn1_gamma": [85, 193], "stage1_unit1_bn1_moving_mean": [85, 193], "stage1_unit1_bn1_moving_var": [85, 193], "stage1_unit1_bn2_beta": [85, 193], "stage1_unit1_bn2_gamma": [85, 193], "stage1_unit1_bn2_moving_mean": [85, 193], "stage1_unit1_bn2_moving_var": [85, 193], "stage1_unit1_conv1_weight": [85, 193], "stage1_unit1_conv2_weight": [85, 193], "stage1_unit1_sc_weight": [85, 193], "stage1_unit2_bn1_beta": [85, 193], "stage1_unit2_bn1_gamma": [85, 193], "stage1_unit2_bn1_moving_mean": [85, 193], "stage1_unit2_bn1_moving_var": [85, 193], "stage1_unit2_bn2_beta": [85, 193], "stage1_unit2_bn2_gamma": [85, 193], "stage1_unit2_bn2_moving_mean": [85, 193], "stage1_unit2_bn2_moving_var": [85, 193], "stage1_unit2_conv1_weight": [85, 193], "stage1_unit2_conv2_weight": [85, 193], "stage2_unit1_bn1_beta": [85, 193], "stage2_unit1_bn1_gamma": [85, 193], "stage2_unit1_bn1_moving_mean": [85, 193], "stage2_unit1_bn1_moving_var": [85, 193], "stage2_unit1_bn2_beta": [85, 193], "stage2_unit1_bn2_gamma": [85, 193], "stage2_unit1_bn2_moving_mean": [85, 193], "stage2_unit1_bn2_moving_var": [85, 193], "stage2_unit1_conv1_weight": [85, 193], "stage2_unit1_conv2_weight": [85, 193], "stage2_unit1_sc_weight": [85, 193], "stage2_unit2_bn1_beta": [85, 193], "stage2_unit2_bn1_gamma": [85, 193], "stage2_unit2_bn1_moving_mean": [85, 193], "stage2_unit2_bn1_moving_var": [85, 193], "stage2_unit2_bn2_beta": [85, 193], "stage2_unit2_bn2_gamma": [85, 193], "stage2_unit2_bn2_moving_mean": [85, 193], "stage2_unit2_bn2_moving_var": [85, 193], "stage2_unit2_conv1_weight": [85, 193], "stage2_unit2_conv2_weight": [85, 193], "stage3_unit1_bn1_beta": [85, 193], "stage3_unit1_bn1_gamma": [85, 193], "stage3_unit1_bn1_moving_mean": [85, 193], "stage3_unit1_bn1_moving_var": [85, 193], "stage3_unit1_bn2_beta": [85, 193], "stage3_unit1_bn2_gamma": [85, 193], "stage3_unit1_bn2_moving_mean": [85, 193], "stage3_unit1_bn2_moving_var": [85, 193], "stage3_unit1_conv1_weight": [85, 193], "stage3_unit1_conv2_weight": [85, 193], "stage3_unit1_sc_weight": [85, 193], "stage3_unit2_bn1_beta": [85, 193], "stage3_unit2_bn1_gamma": [85, 193], "stage3_unit2_bn1_moving_mean": [85, 193], "stage3_unit2_bn1_moving_var": [85, 193], "stage3_unit2_bn2_beta": [85, 193], "stage3_unit2_bn2_gamma": [85, 193], "stage3_unit2_bn2_moving_mean": [85, 193], "stage3_unit2_bn2_moving_var": [85, 193], "stage3_unit2_conv1_weight": [85, 193], "stage3_unit2_conv2_weight": [85, 193], "stage4_unit1_bn1_beta": [85, 193], "stage4_unit1_bn1_gamma": [85, 193], "stage4_unit1_bn1_moving_mean": [85, 193], "stage4_unit1_bn1_moving_var": [85, 193], "stage4_unit1_bn2_beta": [85, 193], "stage4_unit1_bn2_gamma": [85, 193], "stage4_unit1_bn2_moving_mean": [85, 193], "stage4_unit1_bn2_moving_var": [85, 193], "stage4_unit1_conv1_weight": [85, 193], "stage4_unit1_conv2_weight": [85, 193], "stage4_unit1_sc_weight": [85, 193], "stage4_unit2_bn1_beta": [85, 193], "stage4_unit2_bn1_gamma": [85, 193], "stage4_unit2_bn1_moving_mean": [85, 193], "stage4_unit2_bn1_moving_var": [85, 193], "stage4_unit2_bn2_beta": [85, 193], "stage4_unit2_bn2_gamma": [85, 193], "stage4_unit2_bn2_moving_mean": [85, 193], "stage4_unit2_bn2_moving_var": [85, 193], "stage4_unit2_conv1_weight": [85, 193], "stage4_unit2_conv2_weight": [85, 193], "stage_id": [101, 135], "stage_pipelin": 171, "stage_scores_0": 135, "stage_scores_1": 135, "stai": 58, "stale": 16, "stall": 93, "stamp": [135, 136], "stanc": 185, "stand": [2, 36, 56, 88], "standalon": [30, 35, 56, 69, 135, 144], "standard": [2, 4, 7, 11, 22, 27, 35, 37, 56, 63, 65, 73, 82, 93, 136, 137, 141, 148, 149, 157, 158, 159, 168, 174, 175, 177, 179, 187, 189, 192, 195], "stapl": 179, "start": [0, 2, 5, 9, 12, 16, 17, 27, 39, 41, 43, 45, 51, 53, 56, 62, 66, 70, 71, 72, 74, 75, 79, 80, 92, 106, 108, 109, 113, 115, 128, 131, 132, 135, 136, 137, 141, 144, 147, 149, 151, 157, 160, 161, 162, 169, 171, 173, 175, 186, 187, 188, 190, 192, 194, 195], "start_checkpoint": 149, "start_d": [156, 175], "start_h": [149, 156, 175], "start_nod": 137, "start_profile_intrins": 173, "start_w": [149, 156, 175], "start_x": 175, "startswith": [97, 98, 99, 100, 195], "startup": [32, 168, 197], "stat": 150, "state": [2, 9, 10, 31, 35, 101, 113, 135, 136, 145, 148, 149, 150, 158, 159, 162, 166, 171, 175, 179, 180], "state1": 179, "state1_typ": 179, "state2": 179, "state2_typ": 179, "state_dict": [115, 148], "state_object": 101, "state_placehold": 169, "state_typ": 179, "state_var": 148, "stateless": 162, "statement": [25, 27, 32, 35, 36, 82, 121, 125, 139, 150, 163, 169, 170, 171, 172, 173, 174, 175, 180, 195], "stateobject": 135, "static": [1, 2, 4, 5, 34, 35, 36, 49, 60, 69, 73, 132, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 150, 151, 155, 157, 160, 168, 169, 171, 173, 174, 176, 180, 183, 199], "static_cast": [36, 37], "static_quantization_tutori": 73, "static_shape_tun": 111, "staticmethod": [4, 85], "staticplanblockmemori": [113, 151], "statist": [136, 145, 149, 150, 153, 158, 189], "statisticalattr": 149, "stats": 135, "statu": [7, 10, 67, 69, 80, 96, 97, 105, 106, 107, 135, 136, 145, 187], "std": [4, 5, 31, 32, 35, 36, 37, 50, 51, 67, 69, 73, 74, 98, 100, 105, 106, 107, 108, 148, 149, 157, 163, 189, 197, 198], "stdin": 13, "stdio": [36, 137], "stdout": [104, 188], "steadi": 9, "step": [1, 2, 3, 4, 7, 12, 13, 14, 16, 17, 23, 27, 31, 34, 36, 37, 43, 44, 48, 53, 56, 63, 66, 67, 68, 69, 70, 71, 79, 80, 82, 88, 90, 97, 105, 107, 109, 110, 111, 113, 124, 128, 135, 136, 139, 149, 151, 157, 158, 161, 169, 171, 175, 189, 192, 193, 195, 197, 199], "step_nam": 16, "stermin": 106, "stft": [157, 175], "stick": 8, "still": [4, 5, 9, 17, 32, 34, 35, 49, 58, 61, 79, 84, 109, 120, 137, 146, 148, 150, 151, 155, 157, 160, 174, 176, 177, 179, 191, 197], "stm32": 168, "stm32f4xx": 168, "stm32h7xx": 168, "stmt": [37, 82, 90, 169, 170, 171, 172, 173, 174, 175, 195], "stmt2ref": 173, "stmt_functor": [82, 142], "stmt_list": 173, "stmt_or_mod": 170, "stmt_seq": 173, "stmtsref": [171, 173], "stoi": 36, "stoll": 36, "stop": [56, 67, 135, 136, 141, 157, 175, 182, 189, 191], "stop_lift_param": 149, "storag": [0, 1, 4, 48, 74, 82, 90, 115, 137, 144, 146, 149, 151, 169, 170, 171, 173, 174, 175, 183], "storage_align": [169, 171], "storage_id": 0, "storage_scop": [101, 118, 144, 149, 171, 173, 174], "storagebuffer16bitaccess": 6, "storagebuffer8bitaccess": 6, "storageflatten": 174, "storagerewrit": 174, "store": [0, 1, 2, 3, 4, 36, 56, 60, 66, 82, 88, 89, 90, 105, 106, 107, 111, 113, 123, 135, 136, 141, 144, 145, 149, 155, 157, 160, 168, 169, 171, 173, 174, 177, 179, 180, 183, 188, 189, 195, 197], "store_matrix": 89, "stori": 73, "str": [36, 49, 53, 68, 75, 85, 90, 98, 100, 105, 106, 107, 108, 113, 115, 120, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 189, 195, 199], "str2mask": 1, "straight": 75, "straightforward": [4, 30, 36, 37, 179], "strateg": 11, "strategi": [2, 15, 18, 19, 20, 90, 97, 128, 135, 145, 153, 188, 199], "stream": [1, 3, 36, 37], "streamhandl": [104, 188], "streamlin": 30, "streamsync": 1, "street_smal": 72, "strength": 175, "strict": [7, 148, 155], "strictli": [27, 148, 164], "strid_depth": 175, "stride": [34, 58, 68, 85, 88, 89, 96, 104, 111, 123, 124, 125, 127, 128, 129, 137, 148, 149, 156, 157, 158, 159, 161, 169, 171, 173, 174, 175, 182, 191, 193, 195, 199], "stride1": [158, 175], "stride2": [158, 175], "stride_1": 123, "stride_2": 123, "stride_depth": 175, "stride_h": [89, 137, 175], "stride_height": [137, 175], "stride_w": [89, 137, 175], "stride_width": [137, 175], "strided_set": [157, 175], "strided_slic": [65, 149, 157, 175], "stridedsliceattr": 149, "string": [1, 2, 4, 5, 6, 12, 32, 34, 36, 37, 52, 63, 97, 106, 118, 135, 136, 137, 139, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 170, 171, 173, 174, 175, 198], "stringimm": [4, 128, 149, 150, 173], "stringimmnod": 150, "stringstream": 36, "strip": [47, 51, 62], "strive": [9, 11], "strm": [36, 37], "strongli": [80, 89, 132, 185], "struct": [4, 34, 144, 146, 147, 149, 150, 151, 173, 179], "struct_info": [144, 147, 148, 149, 150], "struct_info_base_check": 146, "struct_info_lca": 146, "structinfo": [144, 146, 147, 149, 150, 151], "structrual_equ": 144, "structtyp": 173, "structur": [0, 4, 5, 12, 13, 18, 26, 41, 44, 75, 82, 89, 128, 136, 140, 144, 145, 146, 148, 149, 150, 151, 155, 160, 164, 169, 170, 171, 173, 175, 177, 179, 180, 183, 189, 193, 195, 196, 197], "structural_equ": [30, 144, 170, 182], "structural_hash": 144, "structuralequ": [145, 170], "stuck": 106, "studi": 2, "studio": [56, 132], "stuff": 17, "style": [4, 9, 11, 12, 15, 20, 34, 79, 84, 137, 148, 149, 150, 155, 157, 160, 169, 171, 175, 180, 183, 192, 195, 196], "styliz": 158, "stype": 137, "su": 66, "sub": [2, 11, 36, 56, 148, 150, 151, 160, 171, 173, 175, 180, 182, 183], "subclass": [1, 2, 4, 5, 35, 37, 143, 145, 148, 175], "subcommand": 197, "subdiagon": [157, 175], "subdirectori": [2, 37, 148], "subexpress": [4, 151, 160], "subgraph": [36, 59, 64, 65, 97, 98, 99, 100, 127, 135, 148, 154, 160, 175, 180, 182, 192], "subgraph_": 36, "subgraph_0": 36, "subgraph_end": 160, "subgraph_start": 160, "subject": [7, 9, 17, 35, 169, 180], "sublinear": 151, "submiss": 16, "submit": [1, 7, 15, 182], "submitt": 7, "submodul": [17, 132, 148], "subordin": 173, "subrang": 136, "subrange_length": 136, "subraph": 160, "subregion": 173, "subroutin": 174, "subroutinemixin": 148, "subscrib": 16, "subscript": [149, 175], "subsect": [30, 180, 183], "subsequ": [5, 30, 31, 43, 157, 180], "subset": [90, 169, 175, 183, 195], "subspac": 171, "substanti": 11, "substitut": [82, 115, 151, 160, 172, 174, 180, 183, 189, 197], "substract": [158, 175], "subsum": 146, "subtensor": 157, "subtract": [36, 65, 148, 149, 157, 169, 173, 175, 180, 182], "subtre": 171, "subtyp": 5, "succe": 183, "success": [7, 9, 10, 11, 12, 56, 66, 79, 108, 132], "successfulli": [4, 7, 12, 53, 69, 70, 71, 74, 80, 85, 96, 108, 109, 115, 145, 188], "successor": 180, "succinctli": 30, "sudo": [61, 62, 66, 104, 105, 106, 107, 132, 188], "suffic": [34, 180], "suffici": [2, 5, 9, 56], "sugar": [22, 26, 121, 154, 171, 175, 180], "suggest": [9, 11, 32, 127, 140, 146, 160, 198], "suggest_layout_transform": 146, "suit": [4, 79, 111], "suitabl": [16, 64, 104, 137, 157, 159, 175], "sum": [25, 30, 34, 65, 73, 88, 89, 90, 93, 97, 98, 99, 100, 128, 135, 136, 148, 149, 151, 157, 158, 163, 165, 169, 171, 173, 175, 179, 187, 188, 191, 195], "sum1": 180, "sum2": 180, "sum_": [148, 149, 158, 175], "sum_data": 158, "sum_i": 149, "sum_j": [148, 149, 158], "sum_k": [27, 30], "sum_r": [169, 173], "sum_sqr_up": 175, "summar": [7, 8, 9, 16], "summari": [5, 10, 11, 17, 19, 31, 67, 69, 73, 74, 98, 100, 162, 197, 198], "summat": [149, 157, 175], "sun": 159, "super": [22, 23, 43, 44, 49, 72, 110, 113, 115, 120, 148, 182, 199], "super_resolut": 49, "super_resolution_0": 49, "super_resolution_with_caffe2": 49, "superdiagon": [157, 175], "supersed": 30, "supplement": 137, "supplementari": 31, "suppli": [32, 52, 136, 169], "support": [1, 3, 4, 5, 6, 8, 12, 17, 18, 20, 22, 34, 36, 41, 43, 44, 47, 49, 51, 52, 56, 61, 62, 66, 67, 68, 72, 73, 74, 75, 76, 79, 80, 82, 89, 97, 98, 99, 100, 101, 109, 115, 118, 121, 124, 128, 130, 131, 135, 136, 137, 140, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 166, 168, 169, 171, 174, 175, 177, 178, 179, 180, 181, 182, 183, 189, 192, 195, 198], "support_block_scope_host": 174, "support_sliding_window": 113, "supported_subgroup_oper": 6, "supportedoper": 6, "supports_float16": 6, "supports_float64": 6, "supports_int16": 6, "supports_int64": 6, "supports_int8": 6, "supports_storage_buffer_16bit_access": 6, "supports_storage_buffer_8bit_access": 6, "supports_storage_buffer_storage_class": 6, "supportsint": 164, "suppos": [27, 34, 128, 137, 138, 148, 149, 150, 152, 171, 175, 179, 180], "suppress": [151, 161], "sur": 59, "sure": [7, 16, 17, 34, 36, 53, 58, 66, 85, 89, 97, 105, 106, 107, 132, 135, 136, 157, 175, 198], "surpris": 9, "surround": [169, 171, 196], "sustain": 11, "svg": 127, "svn": 17, "svn_editor": 17, "sw": 148, "sw_emu": 61, "swap": [66, 157], "swapfil": 66, "swapon": 66, "swift": 5, "switch": [2, 12, 56, 85, 131, 136, 141, 160, 171, 176, 180], "sy": [47, 97, 98, 99, 100, 104, 119, 188], "sym": [52, 136], "symbol": [0, 3, 8, 18, 20, 30, 36, 97, 98, 99, 100, 105, 106, 107, 108, 121, 124, 132, 137, 139, 144, 146, 147, 148, 149, 150, 151, 153, 155, 159, 160, 166, 169, 171, 173, 174, 175, 191, 195], "symbol_resnet": 159, "symbol_section_map": 137, "symbolc": 148, "symbolic_trac": 148, "symlink": 79, "symmetr": [158, 175], "symmetri": [157, 175], "symplif": 171, "sync": [16, 174], "sync_worker_0": 163, "synchon": 141, "synchron": [1, 31, 119, 163, 164, 169, 173], "syncstreamfromto": 1, "synset": [67, 69, 70, 71, 73, 189, 197], "synset_nam": [46, 48, 50, 51, 69, 70, 71, 73], "synset_path": [46, 48, 50, 51, 69, 70, 71, 73], "synset_url": [46, 48, 50, 51, 69, 70, 71, 73], "syntact": [27, 180], "syntat": 154, "syntax": [4, 12, 22, 27, 30, 36, 37, 43, 62, 85, 169, 171, 179, 183, 191, 196, 198], "synthes": 61, "synthesi": 62, "sysroot": 137, "system": [2, 4, 12, 13, 32, 34, 35, 37, 39, 56, 59, 62, 63, 65, 78, 79, 121, 131, 132, 134, 137, 140, 144, 148, 149, 150, 153, 162, 168, 178, 179, 180, 185, 195, 197], "system_lib": [150, 162, 168], "systemat": [4, 179], "szegedi": [149, 158, 159, 175], "t": [1, 3, 4, 5, 7, 8, 9, 14, 16, 17, 20, 22, 23, 25, 27, 30, 31, 32, 34, 35, 39, 43, 50, 52, 56, 59, 61, 66, 67, 69, 72, 75, 82, 84, 85, 89, 90, 93, 96, 97, 98, 99, 100, 101, 110, 113, 115, 121, 123, 124, 125, 127, 128, 129, 131, 135, 137, 141, 144, 147, 148, 149, 151, 152, 153, 157, 158, 160, 162, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 182, 183, 187, 191, 195, 196, 198], "t0": [123, 129], "t1": [129, 179, 183], "t2": [179, 183], "t3": 183, "t_1": 129, "t_2": 129, "t_3": 129, "t_4": 129, "t_5": 129, "t_6": 129, "t_add": [23, 43, 96, 97, 98, 99, 100, 151, 191], "t_add_ax0": 96, "t_add_ax1": 96, "t_add_ax2": 96, "t_add_ax3": 96, "t_add_intermedi": [23, 43], "t_bia": 127, "t_conv": 127, "t_divid": 191, "t_divide_r": 191, "t_divide_red_1": 191, "t_divide_red_rf": 191, "t_divide_red_rf_1": 191, "t_elemwise_sum": 191, "t_matmul_nt": [97, 98, 99, 100], "t_multipli": [97, 98, 99, 100, 151, 191], "t_relu": [97, 98, 99, 100, 127], "t_reshap": 97, "t_softmax_exp": [97, 98, 99, 100, 191], "t_softmax_exp_1": 191, "t_softmax_expsum": [97, 98, 99, 100], "t_softmax_maxelem": [97, 98, 99, 100], "t_softmax_norm": [97, 98, 99, 100, 191], "t_softmax_norm_1": 191, "t_transpos": [23, 43, 110], "tab": [9, 17], "tabbi": [51, 67, 70, 71, 73, 189, 197], "tabl": [1, 6, 66, 97, 98, 99, 100, 135, 145, 147, 165, 171, 189, 197], "tabular": 148, "tack": 34, "tag": [12, 16, 17, 36, 56, 79, 93, 101, 144, 153, 168, 169, 173, 174, 175, 179, 180, 183, 191], "tag_dict": 168, "tag_scop": 169, "tagscop": 169, "tail": 179, "take": [1, 2, 3, 4, 5, 7, 9, 10, 11, 16, 17, 20, 23, 27, 30, 31, 34, 35, 36, 37, 41, 43, 44, 49, 56, 62, 63, 65, 66, 67, 68, 73, 75, 79, 82, 84, 96, 98, 100, 101, 104, 105, 106, 107, 108, 109, 121, 123, 124, 127, 128, 135, 136, 137, 138, 140, 141, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 163, 165, 166, 169, 171, 173, 174, 175, 179, 180, 182, 183, 185, 187, 188, 189, 192, 195, 197, 198], "take_backward": 149, "take_leg": 175, "takeattr": 149, "takeawai": 35, "taken": [9, 148, 149, 150, 158, 166], "talk": [2, 7, 11, 15, 20], "tan": [149, 157, 169, 173, 175], "tangent": [148, 175], "tanh": [65, 80, 148, 149, 157, 169, 173, 175, 177], "tar": [17, 50, 53, 56, 64, 65, 66, 68, 70, 71, 74, 80, 97, 105, 107, 109, 162, 193, 197, 199], "tar_fil": 137, "tarbal": 137, "tarfil": [50, 53, 74], "target": [6, 8, 17, 30, 31, 34, 35, 36, 37, 39, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 78, 84, 87, 90, 93, 94, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 127, 128, 130, 135, 136, 137, 138, 139, 142, 144, 145, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 162, 164, 166, 171, 173, 174, 175, 188, 191, 192, 193, 196, 198, 199], "target_1": [8, 79], "target_2": [8, 79], "target_bit": 174, "target_burst_byt": 144, "target_devic": 159, "target_format": 137, "target_height": [156, 175], "target_host": [56, 67, 68, 119, 135, 136, 139, 153, 157, 168, 198], "target_index": 151, "target_kei": 135, "target_kind": [1, 168], "target_lib": 58, "target_map": 168, "target_nam": 199, "target_op": 108, "target_opt": 151, "target_or_curr": 168, "target_shap": [156, 175], "target_weight_nam": 160, "target_width": [156, 175], "targetkind": 168, "tarrai": 191, "tarray_1": 191, "task": [0, 12, 36, 67, 68, 79, 104, 105, 106, 107, 113, 132, 135, 145, 151, 188, 189, 197, 198], "task_config_build_": 79, "task_cpp_unittest": [16, 132], "task_id": [145, 169], "task_input": [101, 135, 175], "task_inputs_overwrit": 135, "task_inputs_save_to_fil": [101, 135], "task_nam": [136, 145], "task_python_unittest": [16, 79], "task_schedul": 145, "task_weight": [97, 98, 99, 100, 135, 145], "taskextractenv": 136, "tasknam": 136, "taskschedul": [97, 98, 99, 100, 135, 145], "taskschedulercallback": 135, "taskschedulertyp": 145, "tasktempl": 136, "tba": 36, "tcp": [56, 67], "te": [5, 22, 30, 37, 46, 47, 48, 49, 52, 53, 61, 67, 69, 70, 71, 82, 84, 88, 89, 90, 96, 101, 104, 109, 113, 115, 118, 119, 121, 123, 124, 125, 127, 128, 129, 130, 135, 136, 137, 139, 147, 148, 149, 150, 153, 157, 158, 173, 175, 177, 187, 191, 192, 193, 196], "te_compil": 153, "te_func": [30, 147], "te_grad_kwarg": [147, 149, 150], "te_grad_nam": [147, 149, 150], "teach": 12, "technic": [9, 11, 15, 39], "techniqu": [18, 23, 30, 31, 32, 75, 104, 195], "technologi": 130, "tecompil": 153, "tedd": [122, 126, 186], "tediou": [2, 84], "tell": [12, 34, 36, 49, 127], "temodul": 30, "temp": [3, 66, 67, 99, 109, 123, 128, 137, 162, 193, 195], "temp_dir": 119, "tempdir": [3, 66, 67, 69, 70, 71, 97, 99, 105, 107, 109, 119, 128, 137, 193, 195, 199], "tempdirectori": 137, "tempexpr": 178, "tempfil": 110, "templat": [5, 7, 16, 56, 86, 96, 97, 98, 99, 100, 104, 105, 106, 107, 136, 157, 175, 186, 187, 190, 192, 194, 195], "tempor": [123, 173], "temporari": [0, 36, 69, 70, 71, 115, 123, 135, 137, 150, 151, 180, 181], "temporarydirectori": 110, "tempori": 3, "tenant": 9, "tend": [10, 75], "tendenc": 4, "tensor": [2, 5, 9, 18, 20, 22, 23, 26, 27, 31, 34, 36, 37, 41, 43, 44, 51, 52, 53, 59, 65, 67, 68, 72, 75, 84, 85, 86, 88, 90, 96, 97, 98, 99, 100, 101, 110, 111, 113, 115, 118, 119, 124, 125, 126, 129, 130, 135, 136, 137, 139, 141, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 169, 170, 171, 173, 174, 175, 177, 178, 179, 180, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197], "tensor0_float16": 68, "tensor0_float32": 68, "tensor0_float64": 68, "tensor0_int16": 68, "tensor0_int32": 68, "tensor0_int64": 68, "tensor0_int8": 68, "tensor0_uint16": 68, "tensor0_uint8": 68, "tensor1_float16": 68, "tensor1_float32": 68, "tensor1_float64": 68, "tensor1_int16": 68, "tensor1_int32": 68, "tensor1_int64": 68, "tensor1_int8": 68, "tensor1_uint16": 68, "tensor1_uint8": 68, "tensor2_float16": 68, "tensor2_float32": 68, "tensor2_float64": 68, "tensor2_int16": 68, "tensor2_int32": 68, "tensor2_int64": 68, "tensor2_int8": 68, "tensor2_uint16": 68, "tensor2_uint8": 68, "tensor3_float16": 68, "tensor3_float32": 68, "tensor3_float64": 68, "tensor3_int16": 68, "tensor3_int32": 68, "tensor3_int64": 68, "tensor3_int8": 68, "tensor3_uint16": 68, "tensor3_uint8": 68, "tensor4_float16": 68, "tensor4_float32": 68, "tensor4_float64": 68, "tensor4_int16": 68, "tensor4_int32": 68, "tensor4_int64": 68, "tensor4_int8": 68, "tensor4_uint16": 68, "tensor4_uint8": 68, "tensor5_float16": 68, "tensor5_float32": 68, "tensor5_float64": 68, "tensor5_int16": 68, "tensor5_int32": 68, "tensor5_int64": 68, "tensor5_int8": 68, "tensor5_uint16": 68, "tensor5_uint8": 68, "tensor6_float16": 68, "tensor6_float32": 68, "tensor6_float64": 68, "tensor6_int16": 68, "tensor6_int32": 68, "tensor6_int64": 68, "tensor6_int8": 68, "tensor6_uint16": 68, "tensor6_uint8": 68, "tensor_a": [158, 175], "tensor_b": [158, 175], "tensor_expr_func": 148, "tensor_expr_get_start": [186, 188, 194, 195], "tensor_expr_op": [22, 113, 148], "tensor_float16_t": 68, "tensor_float32_t": 68, "tensor_float64_t": 68, "tensor_input_map": 135, "tensor_int16_t": 68, "tensor_int32_t": 68, "tensor_int64_t": 68, "tensor_int8_t": 68, "tensor_intrin": [2, 169, 171], "tensor_ir": [29, 186], "tensor_ir_blitz_cours": [186, 194, 196], "tensor_ir_inplace_op": 148, "tensor_ir_op": [22, 148], "tensor_nil_float16": 68, "tensor_nil_float32": 68, "tensor_nil_float64": 68, "tensor_nil_int16": 68, "tensor_nil_int32": 68, "tensor_nil_int64": 68, "tensor_nil_int8": 68, "tensor_nil_uint16": 68, "tensor_nil_uint8": 68, "tensor_to_shap": [149, 151], "tensor_typ": 137, "tensor_uint16_t": 68, "tensor_uint8_t": 68, "tensoraffinetyp": 144, "tensorcomputeop": 169, "tensorcor": [87, 91, 137, 145, 174, 186], "tensordot": 175, "tensorflow": [12, 41, 48, 53, 54, 55, 56, 66, 68, 74, 75, 97, 98, 99, 100, 105, 106, 107, 108, 115, 155, 157, 161, 175, 186, 192, 193, 197, 198], "tensorflow_op": 52, "tensorintrin": [169, 171, 173], "tensorir": [2, 19, 22, 29, 31, 43, 44, 110, 111, 113, 130, 139, 169, 171, 186, 190, 194], "tensornod": 5, "tensorrt": [36, 41, 62, 106], "tensorrt_op": 65, "tensorrtopconvert": 65, "tensorslic": 169, "tensorspec": 75, "tensorstructinfo": [20, 22, 147, 148, 149, 150, 151], "tensortyp": [4, 34, 84, 118, 119, 144, 157, 176, 183], "tensortypenod": [34, 36], "term": [9, 11, 27, 34, 49, 121, 129, 151, 155, 157, 159, 171, 173, 175, 180, 182, 197], "termgraph": [120, 137], "termin": [56, 66, 69, 97, 98, 99, 100, 105, 106, 107, 137, 145, 162, 173], "terminate_task": 145, "terminologi": [37, 150, 157], "termnod": 137, "termplott": [120, 137], "termvizpars": [120, 137], "ternari": 180, "tesor": 86, "test": [3, 5, 6, 7, 9, 11, 13, 15, 17, 31, 52, 56, 58, 61, 62, 64, 65, 66, 69, 70, 71, 80, 84, 85, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 118, 119, 121, 123, 124, 128, 131, 135, 136, 137, 142, 145, 146, 147, 148, 149, 150, 151, 155, 157, 158, 160, 161, 162, 164, 168, 170, 173, 175, 182, 187, 188, 191, 193, 195, 197], "test_add": 139, "test_add1": 139, "test_add2": 139, "test_all_elemwis": 16, "test_arm_compute_lib": 58, "test_config": 58, "test_dataflow_pattern": 182, "test_dir": 199, "test_forward": 16, "test_funct": 79, "test_i": 64, "test_imag": 47, "test_input": 159, "test_mask": 115, "test_match_const": 182, "test_match_data_layout": 182, "test_match_diamond": 182, "test_match_dom_diamond": 182, "test_match_func": 182, "test_match_funct": 182, "test_match_if": 182, "test_match_kernel_s": 182, "test_match_let": 182, "test_match_op_or": 182, "test_match_opt": 182, "test_match_plus_zero": 182, "test_match_tupl": 182, "test_match_tuple_get_item": 182, "test_match_typ": 182, "test_mma_intrin": 171, "test_mytest": 8, "test_nam": 7, "test_no_match_attr": 182, "test_op_level3": 34, "test_opencl": 69, "test_pass_storage_rewrit": 16, "test_pipeline_executor": 119, "test_something_flaki": 7, "test_street_smal": 72, "test_target": [67, 68, 69], "test_tensorrt": 65, "test_tir_transform_inject_rolling_buff": 16, "test_upscal": 16, "test_vulkan": 69, "test_x": 64, "testcas": 137, "testing_scop": 147, "testingscop": 147, "testreplacebind": 151, "testreplacefunc": [4, 151, 160, 174], "testtimeevalu": [150, 166], "text": [14, 16, 17, 52, 120, 137, 144, 148, 149, 150, 154, 155, 157, 158, 159, 162, 169, 179, 180, 183, 185, 197, 198], "text_summari": 162, "textiobas": 136, "textual": 160, "textur": [56, 67, 68], "textureflatten": 174, "tf": [48, 52, 53, 66, 69, 74, 75, 104, 155, 157], "tf_compat_v1": 52, "tf_crop_and_res": [149, 156, 175], "tf_half_pixel_for_nn": [149, 156, 175], "tf_test": 52, "tfactor": 169, "tfbertforsequenceclassif": 75, "tflite": [16, 54, 55, 68, 76, 77, 155, 161, 186, 197, 198], "tflite_11_05_08": 74, "tflite_model": [53, 74], "tflite_model_buf": [53, 74], "tflite_model_fil": [53, 74], "tflite_output": 74, "tflite_pr": 74, "tflite_r": 74, "tgt": [61, 195], "tgt_gpu": 195, "tgt_stmt": 171, "tgz": [17, 53, 74], "th": [34, 141, 148, 149, 150, 151, 154, 156, 157, 158, 171, 175, 195], "tha": 14, "than": [1, 2, 4, 8, 9, 12, 16, 17, 22, 27, 31, 34, 35, 36, 49, 51, 67, 68, 69, 70, 71, 73, 74, 75, 79, 90, 105, 124, 128, 135, 136, 137, 141, 144, 148, 149, 150, 151, 152, 153, 155, 156, 157, 161, 162, 165, 166, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 182, 188, 189, 191, 196, 197], "thank": [2, 5], "thei": [1, 2, 3, 4, 7, 9, 10, 11, 12, 16, 17, 20, 27, 35, 36, 37, 39, 43, 56, 58, 59, 65, 75, 79, 80, 84, 90, 96, 97, 98, 99, 100, 115, 118, 127, 128, 129, 131, 136, 144, 146, 148, 149, 150, 151, 152, 156, 157, 158, 160, 166, 169, 171, 174, 175, 176, 179, 180, 181, 183, 188, 191, 195, 198], "them": [2, 3, 4, 5, 7, 8, 9, 10, 12, 16, 20, 23, 27, 34, 35, 36, 43, 56, 59, 60, 61, 67, 75, 79, 80, 84, 90, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 118, 120, 127, 128, 129, 132, 135, 136, 137, 144, 146, 148, 149, 151, 152, 155, 156, 157, 158, 160, 163, 169, 171, 174, 179, 180, 182, 183, 185, 188, 189, 191, 192, 193, 195, 196], "themselv": [11, 25, 180], "then_cas": 173, "therebi": 90, "therefor": [4, 34, 79, 84, 88, 93, 132, 141, 149], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 22, 23, 25, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 82, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 120, 121, 123, 124, 125, 127, 128, 129, 131, 132, 134, 135, 136, 137, 139, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199], "thie": 173, "thierri": 97, "thin": [137, 138, 141, 174], "thing": [9, 10, 12, 17, 35, 36, 44, 60, 63, 89, 120, 131, 148, 165, 180, 188, 189, 197, 198], "think": [9, 182], "third": [36, 131, 161, 170, 173], "thirdparti": 137, "those": [1, 4, 7, 9, 12, 16, 22, 35, 37, 59, 65, 66, 75, 79, 89, 127, 132, 148, 149, 150, 151, 160, 171, 175, 179, 180, 183, 191], "though": [9, 16, 35, 109, 128, 136, 149, 150, 157, 160, 166, 174, 177, 180, 183, 189], "thought": [9, 37], "thread": [1, 2, 4, 10, 13, 17, 27, 37, 39, 43, 62, 82, 89, 90, 108, 110, 125, 135, 136, 145, 163, 168, 169, 171, 173, 174, 188, 196, 199], "thread_axi": [37, 61, 88, 89, 96, 104, 109, 123, 124, 125, 169, 171, 173, 195], "thread_bind": [110, 171, 173, 196], "thread_count": 173, "thread_ext": 118, "thread_i": [88, 89], "thread_ivar": 169, "thread_tag": [169, 173], "thread_warp_s": [70, 75, 104, 168], "thread_x": [88, 89, 124], "thread_xz": 88, "thread_yz": 88, "thread_z": 89, "threadbind": 173, "threadblock": 173, "threadedsess": 163, "threadgroup": 173, "threadidx": [37, 88, 89, 96, 104, 109, 110, 118, 123, 124, 125, 127, 171, 174, 177, 191, 195, 196], "threadidx_i": [89, 191], "threadidx_x": [89, 96, 123, 124, 125, 191], "threadidx_x_1": [96, 191], "threadidx_x_2": 191, "threadidx_y_1": 191, "threadidx_y_2": 191, "threadidx_z": [89, 191], "threadidx_z_1": 191, "threadidx_z_2": 191, "threadloc": 37, "threadlocalstor": 4, "threadripp": [105, 106, 107], "threadsaf": 5, "threadsync": 174, "threadworkload": 37, "three": [1, 3, 9, 25, 27, 35, 36, 37, 56, 63, 69, 70, 71, 89, 113, 127, 146, 148, 161, 169, 170, 175, 180, 189, 193, 195, 197, 199], "thresh": 47, "threshold": [47, 66, 136, 148, 161, 171], "through": [1, 4, 7, 8, 9, 11, 13, 17, 18, 20, 30, 34, 35, 37, 52, 56, 59, 62, 64, 65, 66, 67, 74, 75, 79, 80, 84, 109, 120, 123, 124, 131, 133, 149, 150, 151, 160, 166, 168, 171, 174, 176, 179, 188, 189, 190, 192, 196, 197, 198], "throughout": [17, 75], "throughput": [66, 135], "throw": [4, 49, 85, 135, 160, 168, 173, 179], "thrown": [4, 140, 148, 149], "thu": [31, 34, 82, 88, 89, 128, 136, 144, 149, 152, 157, 169, 175, 177, 179, 180, 183], "ti": [2, 89, 106, 111], "tian": [118, 193], "tianqi": [121, 123, 124, 151, 195], "tiger": [46, 50, 53, 67, 69, 73, 189, 197], "tigri": [189, 197], "tile": [26, 64, 75, 88, 89, 90, 96, 101, 104, 105, 106, 107, 128, 135, 136, 137, 149, 157, 158, 169, 171, 175, 187, 188, 192, 195, 196], "tile_0": 136, "tile_f": 104, "tile_i": [104, 136, 188], "tile_k": [158, 175], "tile_n": [158, 175], "tile_rc": 104, "tile_ri": 104, "tile_rx": 104, "tile_s": [158, 175], "tile_x": [104, 136, 188], "tileattr": 149, "time": [0, 4, 5, 8, 9, 11, 15, 16, 17, 27, 30, 31, 32, 34, 37, 39, 43, 47, 49, 50, 52, 56, 59, 65, 67, 68, 69, 72, 73, 74, 75, 79, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 113, 124, 132, 135, 136, 137, 141, 143, 144, 145, 146, 148, 149, 150, 151, 153, 155, 157, 158, 159, 160, 162, 166, 168, 169, 171, 174, 175, 180, 183, 187, 188, 189, 195, 197, 198], "time_end": 141, "time_evalu": [31, 88, 89, 90, 96, 101, 104, 109, 150, 166, 187, 195], "time_f": 109, "time_start": 141, "time_wait": 162, "timeit": [90, 145, 189, 195], "timeout": [67, 97, 98, 99, 104, 105, 106, 107, 135, 136, 162, 189, 198], "timer": [141, 189], "timestamp": [135, 136, 169, 188], "timestep": [124, 148], "timing_inst": [85, 143], "timing_numb": 189, "timing_r": [150, 166], "timing_repeat": 189, "timing_result": 141, "tindex": 169, "tinfo": [136, 175], "tini": 47, "tinyllama": 113, "tip": [9, 10, 15, 32, 33, 73, 74, 78], "tir": [4, 6, 16, 22, 23, 25, 30, 31, 37, 43, 82, 84, 88, 89, 90, 96, 97, 98, 99, 100, 101, 110, 113, 121, 123, 124, 125, 128, 129, 130, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 169, 175, 187, 191, 192, 195, 196, 199], "tir_creat": [29, 30, 186], "tir_gv": 22, "tir_linear": 22, "tir_matmul": 169, "tir_phase_0": 199, "tir_transform": [29, 31, 186], "tir_var": [149, 150], "tir_var_upper_bound": 151, "tir_vars_in_struct_info": 146, "tirpagedkvcach": 113, "titanx": 106, "titl": [7, 12, 16, 17, 89], "tl": 90, "tlc": [7, 12], "tlcpack": [7, 79, 131, 133], "tlcpackstag": 7, "tmlc": 64, "tmoreau89": 97, "tmp": [0, 66, 67, 69, 70, 71, 85, 97, 105, 106, 107, 119, 127, 137, 150, 199], "tmp_dir": [110, 119], "tmp_log_fil": [67, 105, 106, 107], "tmp_path": 68, "tn": 179, "to_arrai": 163, "to_batch": 160, "to_batch_matmul": 160, "to_cp": 160, "to_dlpack": 44, "to_dlpack_func": 137, "to_exclud": 136, "to_json_dict": 136, "to_mxnet_func": 137, "to_networkx": 115, "to_python": 159, "to_pytorch_func": 137, "to_scipy_sparse_arrai": 115, "to_sourc": 159, "to_str": 36, "to_vdevic": 149, "toanormalform": [35, 84, 160], "toanormalformexpr": 160, "tobasicblocknormalform": 160, "tocp": 160, "todai": [75, 182], "todens": [75, 101], "todo": [4, 48, 73, 90, 135, 155], "togeth": [3, 9, 19, 31, 35, 36, 37, 43, 75, 84, 120, 127, 128, 129, 130, 135, 150, 151, 157, 158, 160, 166, 175, 191, 195], "tographnormalform": 160, "token": [36, 131, 148, 149, 162], "toler": 159, "tolist": 72, "tomixedprecis": [56, 67, 151, 160], "tomohiro": 69, "tonondataflow": [113, 151], "too": [3, 23, 56, 80, 96, 98, 100, 101, 104, 105, 106, 107, 108, 113, 135, 136], "took": [36, 56], "tool": [2, 9, 16, 30, 61, 62, 66, 69, 75, 80, 97, 99, 137, 148, 154, 189, 190, 197, 198], "toolchain": [56, 62, 68, 69, 80, 132, 137], "toolkit": 61, "top": [2, 5, 7, 14, 16, 32, 35, 46, 47, 48, 50, 51, 52, 53, 66, 67, 69, 70, 71, 74, 79, 127, 135, 136, 145, 148, 149, 152, 156, 157, 158, 161, 171, 175, 176, 179, 182, 183, 184, 187, 190], "top1": [46, 50, 69, 70, 71], "top1_kera": 48, "top1_torch": 51, "top1_tvm": [48, 51], "top3": 73, "top5": 67, "top_categori": 67, "top_k": [52, 145, 148, 161], "top_k_record": 145, "top_p": 148, "topdir": 199, "tophub": 136, "topi": [22, 34, 37, 96, 97, 98, 99, 100, 101, 104, 108, 127, 128, 130, 136, 139, 142, 149, 151, 156, 157, 169, 186, 190, 192, 194], "topi_comput": 34, "topi_integr": 136, "topi_schedul": 136, "topic": [12, 16, 44, 82, 113], "topisst": 35, "topk": [148, 149, 157, 175], "topkattr": 149, "topleft": 149, "topleveltracedmodul": 155, "topmost": 176, "topolog": 36, "topologi": [59, 180, 182], "topologicalsort": 151, "toppattern": [34, 182], "torch": [43, 44, 51, 67, 68, 70, 71, 72, 73, 84, 111, 113, 115, 149, 155, 197], "torch_class_kei": 51, "torch_fx": 148, "torch_img": 51, "torch_model": [111, 115, 148], "torchfximport": 148, "torchmodel": 43, "torchscript": [51, 67, 68, 70, 71, 155], "torchvis": [51, 67, 68, 70, 71, 111], "tornado": [104, 105, 106, 107, 132], "tornadomeet": 159, "tos": [12, 54, 62, 76, 81, 87, 94, 102], "total": [17, 24, 29, 45, 47, 50, 52, 55, 67, 68, 69, 72, 73, 77, 80, 83, 90, 91, 93, 95, 97, 98, 99, 100, 103, 105, 106, 107, 113, 114, 117, 126, 135, 136, 141, 146, 150, 151, 152, 157, 161, 166, 169, 171, 177, 186, 187, 189, 194, 195], "total_el": 36, "total_seq_len": 149, "total_seq_len_kv": 149, "total_tim": 141, "total_tri": 111, "totensor": [50, 51, 67, 73], "touch": [16, 80, 145, 198], "touch_task": 145, "tour": 192, "toward": [12, 141, 173, 195], "tp": [4, 56, 176], "tp1": 152, "tqchen": 159, "trace": [4, 26, 32, 51, 67, 68, 70, 71, 84, 145, 148, 155, 157, 160, 169, 171, 173, 176], "trace_act": [169, 173], "trace_stack": 176, "traceabl": [151, 174, 176], "traceback": 13, "traced_model": 68, "tracer": 148, "tracerwarn": 72, "tracewrapp": 72, "track": [5, 18, 20, 37, 147, 151, 171, 173, 179, 180, 183], "tracker": [56, 58, 67, 98, 100, 106, 108, 132, 135, 136, 162, 185, 197, 198], "tracker_addr": 162, "tracker_host": 69, "tracker_port": 69, "trackersess": 162, "tradit": [62, 89, 180, 192], "tradition": 155, "trail": [8, 189], "train": [2, 12, 41, 44, 59, 67, 68, 73, 110, 111, 113, 115, 135, 136, 149, 151, 155, 158, 175, 179, 188, 189, 197, 198], "train_i": 64, "train_resnet": 159, "train_x": 64, "trained_cel": 179, "trait": 11, "tran": 173, "trans_a": 175, "trans_b": 175, "transa": 137, "transact": 173, "transb": 137, "transfer": [1, 17, 36, 37, 66, 88, 136, 141, 149, 157, 193], "transform": [0, 4, 16, 18, 19, 21, 22, 24, 25, 26, 28, 29, 34, 35, 36, 37, 41, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 84, 85, 89, 90, 97, 98, 99, 100, 101, 105, 106, 107, 108, 110, 111, 113, 115, 119, 125, 127, 130, 135, 136, 137, 142, 143, 144, 146, 147, 148, 149, 150, 156, 157, 158, 159, 161, 169, 170, 171, 172, 173, 175, 178, 180, 181, 182, 183, 186, 187, 189, 192, 193, 195], "transform_block_layout": 171, "transform_dataflowblock": 151, "transform_funct": [4, 84, 151, 160, 174], "transform_imag": [69, 70, 71], "transform_layout": [169, 171], "transform_modul": [23, 110, 176], "transform_param": [149, 151], "transform_step": 101, "transformed_kernel": 137, "transformlayout": 171, "transformmmabufferlayout": 174, "transformspac": 136, "transit": [124, 136], "translat": [37, 58, 89, 148, 169, 171, 173, 192, 198], "translatedlay": 155, "transp_a": 175, "transp_b": 175, "transpar": [36, 118, 121, 180], "transpos": [23, 43, 46, 47, 48, 65, 69, 70, 71, 72, 75, 110, 115, 137, 148, 149, 151, 152, 155, 157, 158, 159, 160, 169, 173, 175, 189, 192, 197], "transpose1": [23, 43], "transpose_a": [155, 158, 175], "transpose_b": [155, 158, 175], "transpose_matrix": 173, "travel": 9, "travers": [4, 25, 36, 56, 148, 152, 157, 169, 195], "treat": [9, 16, 72, 97, 98, 99, 100, 118, 121, 141, 144, 148, 149, 150, 155, 157, 158, 168, 179, 180, 183], "tree": [3, 16, 39, 68, 115, 127, 148, 151, 171, 179, 182, 183], "tremend": 189, "trevor": 65, "tri": [180, 198], "triag": 17, "trial": [56, 68, 96, 97, 98, 99, 100, 101, 104, 110, 135, 136, 145, 150, 151, 166, 187, 188, 189, 198], "trial_scor": 136, "trial_timestamp": 136, "triangular": [148, 149, 157, 175], "trick": [5, 90, 195], "trigger": 7, "tril": 149, "trilinear": [156, 158, 175], "trilu": [157, 175], "triluattr": 149, "tripl": [109, 137, 151, 168], "triplet": 128, "trippabl": 196, "triu": [148, 149], "trivial": [7, 138, 171], "tru": 182, "truck": 47, "true": [6, 9, 20, 22, 23, 30, 31, 34, 35, 36, 37, 39, 43, 46, 47, 48, 49, 50, 51, 52, 53, 56, 59, 65, 67, 68, 69, 70, 71, 72, 73, 75, 79, 82, 85, 89, 90, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 113, 115, 119, 121, 123, 124, 125, 127, 128, 129, 132, 135, 136, 137, 138, 141, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 180, 182, 183, 187, 189, 191, 193, 195, 196, 198, 199], "true_branch": [35, 150, 154, 157], "true_valu": 173, "truman": [118, 193], "trunc": [157, 169, 173, 175], "trunc_divid": 157, "trunc_mod": 157, "truncat": [169, 173, 175], "truncdiv": [169, 173, 175], "truncmod": [169, 173], "trust": [15, 162, 185], "truth": [135, 149], "try": [3, 8, 9, 10, 13, 23, 34, 37, 51, 52, 53, 56, 67, 68, 74, 75, 85, 90, 97, 98, 99, 100, 101, 104, 106, 110, 125, 133, 135, 136, 137, 138, 148, 150, 151, 153, 160, 171, 173, 174, 189, 191, 192, 193, 195, 196, 197], "try_get_conv2d_sparse_input": 175, "try_get_sparse_input": 175, "try_inlin": 138, "try_inline_contiguous_spati": 138, "try_spatial_pack_depthwis": 105, "try_unrol": 136, "try_unroll_vec": 136, "try_wait": 173, "tsk": [67, 105, 106, 107, 136], "tsk_trial": [67, 105, 106, 107], "ttf": 47, "ttype": 154, "tun": [67, 68], "tunabl": [67, 104, 105, 106, 107, 136, 138, 188, 192, 195], "tune": [2, 56, 65, 67, 68, 69, 74, 75, 86, 94, 96, 101, 103, 111, 132, 135, 136, 145, 151, 160, 168, 174, 176, 186, 187, 190, 192], "tune_and_evalu": [97, 99, 101, 105, 106, 107, 108], "tune_conv2d_cuda": [103, 104, 186], "tune_conv2d_layer_cuda": [95, 96, 186], "tune_graph": 108, "tune_kernel": 108, "tune_log": [67, 68], "tune_network_arm": [95, 97, 186], "tune_network_cuda": [95, 98, 186], "tune_network_mali": [95, 99, 186], "tune_network_x86": [95, 100, 186], "tune_opt": [96, 97, 98, 99, 100, 101, 135, 187], "tune_relay_arm": [103, 105, 186], "tune_relay_cuda": [103, 106, 186], "tune_relay_mobile_gpu": [103, 107, 186], "tune_relay_x86": [103, 108, 186], "tune_sparse_x86": [95, 101, 186], "tune_task": [105, 106, 107, 145], "tune_tir": 145, "tune_with_autoschedul": [95, 186], "tune_with_autotvm": [103, 186], "tunecontext": 145, "tuner": [56, 67, 68, 97, 98, 99, 100, 104, 105, 106, 107, 108, 184, 189, 197], "tuner_obj": [67, 105, 106, 107, 108, 189], "tuning_api": 176, "tuning_api_databas": 176, "tuning_log": 111, "tuning_opt": [105, 106, 107, 108, 135, 189], "tuning_record": [68, 145, 189, 198], "tuningopt": [96, 97, 98, 99, 100, 101, 135, 187], "tuningrecord": 145, "tup": [34, 180], "tupl": [0, 34, 35, 48, 65, 79, 82, 96, 111, 113, 120, 122, 123, 126, 135, 136, 137, 141, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 169, 171, 173, 175, 176, 177, 178, 179, 182, 186, 187, 188], "tuple_get_item_nod": 182, "tuple_input": [126, 129, 186], "tuple_pattern": 182, "tuple_valu": [150, 154, 157], "tupleaffinetyp": 144, "tuplegetitem": [35, 150, 154, 157, 180, 182], "tuplegetitemnod": [35, 150], "tuplegetitempattern": 154, "tupleitemgetnod": 35, "tuplenod": [35, 36, 150], "tuplepattern": 154, "tuplestructinfo": [20, 150], "tupletyp": [144, 152, 183], "tuplewrapp": [157, 193], "ture": 155, "turn": [2, 7, 12, 37, 59, 75, 118, 130, 132, 137, 151, 160, 169, 174, 195], "tusker": 52, "tutori": [4, 8, 11, 15, 18, 22, 23, 24, 29, 30, 31, 34, 36, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 56, 58, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 133, 171, 180, 184, 186, 187, 188, 189, 191, 192, 194, 195, 196, 197, 198, 199], "tutorial_dir": 119, "tvfm": 79, "tvm": [0, 1, 3, 4, 6, 8, 9, 10, 13, 14, 15, 16, 18, 19, 20, 22, 23, 25, 26, 27, 30, 31, 33, 34, 35, 38, 41, 43, 44, 54, 58, 61, 66, 68, 72, 75, 76, 77, 78, 79, 82, 83, 86, 88, 89, 90, 94, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 113, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 194, 195, 196], "tvm4j": 56, "tvm_access_ptr": [89, 128, 173], "tvm_add_filelin": 34, "tvm_attr_field": 34, "tvm_autotun": 197, "tvm_black_format": 171, "tvm_bmma_sync": 173, "tvm_call_pack": [118, 174], "tvm_check_return": 173, "tvm_class_kei": 51, "tvm_data": [44, 175], "tvm_declare_attr": 34, "tvm_define_object_ref_method": 4, "tvm_dev_mblob": 3, "tvm_dll": [4, 199], "tvm_dll_export_typed_func": [36, 148], "tvm_enable_l2_prefetch": [96, 123], "tvm_ffi": 16, "tvm_fill_frag": [89, 173], "tvm_func": 137, "tvm_home": [56, 79, 132, 148, 199], "tvm_if_then_els": 118, "tvm_lib": 66, "tvm_library_path": [79, 132], "tvm_load_matrix_sync": [89, 173], "tvm_log_debug": 32, "tvm_mma_sync": [89, 171, 173], "tvm_ndk_cc": [69, 97, 99], "tvm_num_thread": [73, 74, 108], "tvm_op": [0, 141], "tvm_out": [0, 47, 48, 175], "tvm_output": [46, 49, 50, 51, 52, 53, 67, 75, 189], "tvm_pkg": 148, "tvm_pred": 74, "tvm_re": [72, 74], "tvm_register_": 37, "tvm_register_glob": [1, 4, 5, 34, 35, 36, 37, 148], "tvm_register_node_typ": 34, "tvm_register_pass_config_opt": 4, "tvm_register_target_kind": 1, "tvm_result": 73, "tvm_root": 16, "tvm_rpc": [56, 67], "tvm_runtim": [56, 66, 80], "tvm_runtime_pack": 60, "tvm_stack_alloca": 173, "tvm_stack_make_arrai": [118, 173], "tvm_stack_make_shap": [118, 173], "tvm_store_matrix_sync": [89, 173], "tvm_struct_get": 173, "tvm_struct_set": 173, "tvm_target": [64, 66], "tvm_tensorrt_cache_dir": 65, "tvm_tensorrt_max_workspace_s": 65, "tvm_tensorrt_multi_engin": 65, "tvm_tensorrt_use_fp16": 65, "tvm_test_target": [79, 159], "tvm_thread_allreduc": [173, 191], "tvm_throw_last_error": 173, "tvm_top3_label": 73, "tvm_tracker_host": [67, 68, 69], "tvm_tracker_port": [67, 68, 69], "tvm_tupl": 173, "tvm_vulkan_debug_shader_savepath": 6, "tvm_vulkan_disable_dedicated_alloc": 6, "tvm_vulkan_disable_push_descriptor": 6, "tvm_vulkan_disable_shader_valid": 6, "tvm_vulkan_enable_validation_lay": 6, "tvmarg": [5, 36, 37, 174], "tvmargssett": 36, "tvmarrai": 164, "tvmarrayhandl": 173, "tvmbackendallocworkspac": 173, "tvmbackendfreeworkspac": 173, "tvmc": [16, 56, 62, 67, 76, 77, 186, 189, 190, 194], "tvmc_command_line_driv": [64, 186, 194, 197], "tvmc_mode": 68, "tvmc_model": 68, "tvmc_packag": 68, "tvmc_python": [186, 194, 197, 198], "tvmcmodel": 56, "tvmcpackag": [56, 68, 198], "tvmcpythonintro": 198, "tvmdbg": 0, "tvmdeviceexttyp": 1, "tvmerror": [13, 140, 144, 150], "tvmfunccal": 13, "tvmgen_": 160, "tvmgen_default_fused_nn_conv2d_kernel0": 56, "tvmgen_default_vanilla_accelerator_main_0": 199, "tvmgen_mod_name_": 160, "tvmgetlasterror": 173, "tvmj": 137, "tvmpackag": [56, 68], "tvmretvalu": [5, 36, 37, 174], "tvmrunner": 56, "tvmscript": [2, 19, 20, 26, 27, 110, 147, 169, 171, 196], "tvmscriptmodul": 43, "tvmstreamhandl": 1, "tvmvalu": [5, 36, 174], "tvm\u015b": 199, "tvo": 59, "tweak": 132, "twice": [11, 31, 43, 120, 153, 180], "two": [1, 2, 5, 7, 10, 12, 14, 17, 20, 25, 27, 30, 31, 34, 35, 36, 37, 41, 43, 44, 56, 58, 60, 61, 62, 65, 66, 67, 75, 82, 84, 85, 90, 101, 106, 113, 115, 118, 124, 125, 128, 129, 132, 135, 136, 137, 139, 144, 146, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 165, 169, 170, 171, 173, 174, 175, 176, 179, 180, 183, 187, 188, 189, 191, 192, 195, 196, 197], "two_elementwise_transformed_intermediate_buff": 171, "tx": [37, 88, 89, 104, 123, 125, 173, 177, 195], "tx1": 65, "tx2": 65, "txt": [46, 48, 50, 51, 52, 53, 67, 69, 70, 71, 73, 189, 197], "txz": 88, "ty": [84, 85, 88, 89, 104, 119, 171, 182, 193], "ty_nam": [157, 159], "typ": 157, "type": [0, 1, 2, 3, 4, 5, 8, 9, 14, 15, 16, 20, 27, 30, 35, 36, 37, 47, 49, 53, 56, 58, 59, 62, 63, 64, 67, 68, 75, 79, 84, 85, 90, 106, 113, 118, 121, 127, 129, 131, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 189, 195, 196, 197], "type1": 12, "type2": 12, "type3": 12, "type_annot": [89, 128, 144, 154, 157, 173], "type_arg": [149, 157], "type_cal": 144, "type_cod": 36, "type_constraint": [144, 183], "type_def": 144, "type_definit": 144, "type_index": 5, "type_kei": [3, 5, 36, 56, 144, 154], "type_nam": [120, 137], "type_nod": 36, "type_of": 157, "type_param": [70, 71, 144, 157, 183], "type_rel": 144, "type_rel_func": 144, "type_var": [144, 157], "typecal": [144, 183], "typecheck": [179, 183], "typecod": 63, "typeconstraint": [144, 183], "typedata": [144, 157, 183], "typedef": 4, "typedoc": 134, "typedpackedfunc": [4, 35], "typedstorag": 115, "typeerror": [144, 148], "typefunctor": 157, "typekind": 144, "typematch": 36, "typemut": 157, "typenam": 175, "typeparam": [152, 157], "typepattern": 154, "typerel": [144, 183], "typereport": [34, 144], "typescript": 134, "typevar": [144, 148, 152, 157, 183], "typevisitor": 157, "typic": [1, 2, 4, 7, 16, 25, 27, 37, 41, 49, 66, 75, 90, 96, 97, 98, 99, 100, 108, 123, 124, 132, 136, 139, 154, 158, 160, 171, 180, 181, 183, 196], "typing_extens": [138, 145], "tyz": 88, "tz": 104, "u": [0, 2, 3, 5, 7, 9, 17, 20, 27, 35, 48, 51, 52, 56, 67, 72, 75, 80, 90, 96, 101, 110, 123, 127, 128, 171, 179, 180, 188, 191, 195], "u16": 174, "u200": 66, "u250": 66, "u280": 66, "u50": 66, "u54": 168, "u8": 174, "ubiquit": 179, "ubuntu": [65, 93, 97], "ubuntu_download_arm_compute_lib_binari": 58, "ucb": 62, "uchar": [96, 123], "udchain": 146, "uid_lookup_path": 52, "uint": [96, 123], "uint16": [68, 80, 177], "uint32": [80, 158, 175, 177, 191], "uint64": [80, 177, 191], "uint64_t": [5, 96, 123], "uint8": [49, 52, 58, 68, 73, 74, 80, 158, 177], "uint8_t": 199, "uintimm": 173, "ultim": [7, 34, 182, 197], "ultra96": 66, "ultrascal": 66, "ulyanov": 158, "uma": [186, 190, 194], "uma_backend": 199, "uma_cli": 199, "umabackend": 199, "un": [131, 150], "un_cp": 160, "unabl": 25, "unannot": 171, "unari": 171, "unbias": 157, "unbound": [148, 168], "uncas": 75, "uncertain": 9, "unchang": [149, 158, 171], "uncom": [75, 85, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 143], "uncommit": 173, "uncontrol": 160, "undef": 173, "undefin": [4, 150, 157, 170, 173, 174, 175], "undefined_var": 170, "under": [4, 5, 7, 12, 13, 20, 36, 37, 56, 67, 73, 80, 84, 127, 132, 136, 145, 146, 148, 150, 166, 168, 169, 171, 177, 179, 182, 185, 188, 189, 191, 195, 197], "underflow": 157, "underli": [12, 37, 137, 141, 157, 163, 164, 171, 189, 195], "underlin": 36, "understand": [0, 1, 2, 3, 9, 12, 19, 26, 30, 31, 35, 69, 70, 71, 84, 104, 120, 127, 130, 132, 188, 192, 195, 197, 198], "understood": [157, 179], "underwai": 6, "undetermin": 4, "undisclos": 185, "undo": 160, "unexpect": [80, 148, 173], "unexpected_kei": 148, "unfold": 179, "unfoldr": 179, "unfortun": 9, "unidirect": 37, "unif": 174, "unifi": [2, 3, 36, 130, 146, 174, 184, 198], "uniform": [16, 30, 31, 37, 58, 59, 61, 65, 72, 75, 88, 89, 90, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 118, 119, 121, 123, 124, 128, 137, 156, 173, 175, 187, 188, 191, 193, 195], "uniform_sampl": [148, 149], "uniformli": [137, 148, 149], "unifythreadbind": 174, "unimport": 135, "unind": 8, "uniniti": 148, "union": [5, 120, 135, 137, 138, 139, 144, 145, 146, 148, 149, 150, 151, 152, 153, 156, 157, 158, 160, 162, 163, 164, 166, 168, 169, 170, 171, 173, 174, 175, 176, 179, 183], "unipolar": [158, 175], "uniqu": [5, 36, 65, 89, 136, 137, 144, 147, 149, 150, 151, 152, 153, 157, 160, 163, 171, 175, 179, 180, 183], "unit": [16, 17, 25, 27, 56, 58, 64, 65, 66, 68, 85, 89, 90, 115, 119, 128, 135, 144, 147, 148, 149, 158, 159, 161, 168, 171, 173, 184, 193, 195], "unit_shap": 148, "uniti": [2, 18, 19, 20, 30, 43, 110, 111], "units_in": 158, "unittest": 16, "univers": [5, 12, 41, 110, 111, 113, 199], "unknown": [36, 146, 150, 168, 182], "unleash": 66, "unless": [3, 73, 74, 115, 170, 173, 175], "unlik": [1, 62, 148, 149, 158, 169, 171, 173, 175, 177, 180, 198], "unlist": 136, "unload": 151, "unmatched_cas": 152, "unmodifi": [149, 169, 176], "unnecessari": [8, 35], "unnecessarili": 16, "unoptim": [189, 197], "unpack": [1, 36, 79, 135, 137, 149, 150, 155, 173, 175], "unpack_nchwc_to_nchw": 175, "unpacked_out": 175, "unpartit": 149, "unpickl": 115, "unprun": 75, "unravel_index": [157, 175], "unrecogn": 36, "unrel": [7, 16], "unreli": [90, 195], "unrol": [4, 37, 82, 90, 96, 101, 104, 105, 106, 107, 136, 139, 159, 169, 171, 174, 177, 187, 188, 192, 195], "unroll_explicit": [37, 96, 104, 187], "unroll_loop": 4, "unrollloop": [2, 4, 37, 89, 174], "unrollloopconfig": 4, "unsaf": [171, 174], "unsafe_hide_buffer_access": 171, "unsafe_set_dtyp": 171, "unschedul": 174, "unseen": 136, "unset": [6, 61, 79], "unsign": [96, 123], "unsorted_segment_sum": 157, "unspecifi": [6, 151, 157, 175], "unsqueez": [148, 175], "unstabl": [51, 72], "unstructur": [75, 171], "unsuit": 136, "unsupervis": 159, "unsupport": [36, 105, 106, 107, 108, 163], "untar": 137, "until": [1, 31, 113, 135, 141, 145, 147, 163, 179, 182, 183], "untouch": 171, "untri": 136, "untrust": 115, "untyped_storag": 115, "untypedstorag": 115, "unus": [1, 4, 146, 150, 151, 158, 160, 179], "unwant": 151, "unwrap": [148, 151], "unwrap_unit_return_tupl": [43, 148], "up": [1, 4, 5, 7, 9, 10, 13, 14, 17, 36, 37, 47, 58, 66, 67, 68, 69, 72, 73, 75, 80, 82, 85, 90, 97, 105, 107, 113, 135, 136, 141, 144, 148, 149, 150, 151, 157, 160, 162, 166, 173, 177, 179, 180, 183, 189, 191, 195, 197, 198], "up_proj": 113, "up_x": 113, "upcom": [188, 195], "updat": [4, 8, 13, 15, 16, 27, 31, 35, 36, 39, 62, 70, 71, 84, 89, 109, 115, 124, 132, 135, 136, 137, 144, 145, 147, 149, 150, 151, 153, 157, 158, 160, 169, 171, 174, 175, 176, 179, 183], "update_from_fil": [96, 135, 187], "update_func": [23, 144, 147], "update_global_info": 144, "update_o": 171, "updated_dag": 135, "updated_func": 147, "updated_mod": [151, 160, 174, 176], "updated_st": 135, "updateparamstructinfo": 151, "updatevdevic": 151, "upfront": 66, "uphold": 11, "upload": [7, 8, 15, 61, 67, 69, 70, 71, 97, 99, 105, 107, 108, 109, 162], "upload_ci_resourc": 8, "upon": [4, 30, 34, 49, 148, 149, 153, 155, 157, 171, 183, 189, 197], "upper": [16, 135, 136, 137, 148, 149, 151, 157, 173, 175, 189], "uppercas": 16, "upsampl": [158, 175], "upsampling3d": [158, 175], "upstream": [14, 16, 17], "url": [8, 12, 14, 16, 17, 50, 131, 162, 189], "url_map": 8, "urrent": 137, "us": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 31, 32, 34, 35, 36, 37, 39, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 79, 80, 81, 82, 83, 86, 87, 88, 90, 91, 97, 98, 99, 100, 101, 104, 105, 107, 108, 109, 110, 111, 113, 115, 116, 117, 122, 123, 124, 125, 126, 129, 131, 132, 133, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 196, 199], "usabl": [1, 12, 35, 179], "usag": [12, 13, 15, 36, 62, 64, 79, 118, 120, 127, 128, 129, 136, 144, 146, 148, 150, 151, 153, 160, 161, 162, 169, 173, 175, 177], "usampl": [148, 149], "use_3xtf32": 119, "use_android": [105, 107], "use_arm_compute_lib": 58, "use_arm_compute_lib_graph_executor": 58, "use_auto_schedul": [97, 98, 99, 100], "use_autotvm": 153, "use_bnn": 59, "use_ccach": 132, "use_clml": 56, "use_clml_graph_executor": 56, "use_codegenc": 36, "use_cpp_rpc": 56, "use_cpp_rtvm": 56, "use_cubla": 132, "use_cuda": [70, 132], "use_cudnn": [118, 132], "use_cutlass": [119, 132], "use_dens": 155, "use_dp": 108, "use_fast_exp": 175, "use_fast_math": 119, "use_graph_executor": 56, "use_ieee_fp": 168, "use_implicit_batch": 65, "use_int_div": 175, "use_kalloc_align": 56, "use_libbacktrac": [56, 80], "use_llvm": [56, 66, 80, 132], "use_met": 132, "use_multiprocess": 119, "use_ndk": [97, 99], "use_nt_batch_matmul": 155, "use_opencl": [56, 69, 80, 109, 132], "use_papi": 93, "use_parser_friendly_nam": 155, "use_pass_infra": [83, 84, 186], "use_pass_instru": [83, 85, 186], "use_pipeline_executor": 119, "use_profil": 0, "use_qat": 160, "use_qfloat": 168, "use_rasp": 12, "use_relay_debug": 32, "use_rocm": 132, "use_rpc": 56, "use_scalable_vector": 175, "use_sm": 175, "use_spars": [97, 100], "use_tensorrt_codegen": 65, "use_tensorrt_runtim": 65, "use_transfer_learn": [105, 106, 107], "use_unpacked_api": 199, "use_vart_edge_dpu": 66, "use_vitis_ai": 66, "use_vulkan": [69, 132], "use_xpu": 80, "useassumetoreducebranch": 174, "usecas": [157, 171], "useless": 43, "user": [2, 4, 5, 8, 9, 12, 13, 16, 22, 30, 36, 37, 43, 56, 62, 66, 80, 82, 84, 86, 90, 96, 101, 104, 105, 106, 107, 113, 115, 118, 119, 120, 121, 124, 125, 128, 130, 131, 135, 136, 137, 143, 144, 148, 149, 150, 151, 152, 154, 155, 157, 159, 160, 162, 163, 165, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 182, 183, 185, 187, 188, 192, 193, 195, 196, 197], "usernam": [16, 17], "userwarn": [49, 51, 52, 67, 68, 70, 71, 72, 73, 106, 115, 191, 193, 198], "uses_gpu": [79, 159], "ushort": [96, 123], "using_external_lib": [117, 118, 186], "using_pipeline_executor": [117, 119, 186], "using_relay_viz": [117, 120, 186], "usingblockvar": 174, "usr": [62, 66, 72, 80, 97, 99, 132], "usual": [2, 5, 7, 9, 11, 14, 16, 19, 20, 25, 35, 66, 80, 104, 109, 110, 113, 118, 120, 127, 135, 136, 148, 151, 152, 165, 173, 174, 175, 179, 183], "utf": 47, "util": [1, 2, 3, 18, 30, 31, 35, 36, 52, 56, 66, 67, 68, 69, 70, 71, 73, 90, 97, 99, 100, 101, 105, 106, 107, 109, 119, 120, 128, 131, 136, 146, 149, 155, 157, 159, 170, 172, 176, 180, 189, 193, 195, 199], "utk": 93, "uwsampl": 67, "ux": 0, "v": [5, 13, 16, 17, 22, 69, 75, 97, 105, 107, 109, 113, 132, 136, 149, 157, 168, 170, 175, 179, 180], "v0": [17, 48, 66, 67, 110, 137, 148, 157, 160, 164, 171], "v1": [17, 52, 53, 66, 69, 105, 110, 113, 115, 148, 155, 158, 171, 179, 188], "v16": 132, "v2": [54, 55, 62, 74, 186, 189, 197, 198], "v21": 58, "v3": [54, 55, 58, 108, 159, 186], "v6": 132, "v68": 168, "v8a": [56, 69], "v_ax0": [23, 43, 151], "v_ax1": [23, 43, 151], "v_i": [20, 30], "v_i0": [22, 23, 43, 196], "v_i1": [22, 23, 43], "v_j": [20, 30], "v_k": [20, 23, 30, 43], "v_proj": 113, "vagu": [16, 155], "val": [104, 129, 136, 151, 153, 173, 188], "val_1": 129, "val_2": 129, "valid": [1, 2, 6, 7, 12, 27, 48, 49, 56, 64, 67, 72, 79, 97, 98, 99, 100, 104, 115, 135, 136, 137, 140, 141, 145, 148, 149, 150, 151, 153, 157, 160, 161, 166, 168, 171, 173, 174, 175, 180, 183, 189, 195, 197], "valid_box": 72, "valid_count": [151, 157, 161, 175], "valid_length": [157, 175], "valid_list": 137, "valid_op": 152, "valu": [0, 1, 2, 4, 5, 6, 8, 12, 15, 16, 27, 30, 35, 36, 49, 64, 65, 69, 70, 71, 72, 73, 75, 82, 84, 85, 96, 98, 101, 105, 106, 107, 113, 115, 123, 124, 128, 129, 132, 135, 136, 137, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 175, 179, 180, 182, 183, 187, 188, 189, 192, 193, 195, 196], "value_index": [5, 123, 169, 173, 191], "value_to_bound_var": 151, "valueerror": [13, 67, 85, 97, 98, 99, 100, 105, 106, 107, 108, 113, 144, 168, 189], "valuetoexpr": 35, "vanilla": 158, "vanilla_acceler": 199, "vanilla_accelerator_conv2dnchw": 199, "vanilla_conv2dnchw": 199, "vanillaacceler": 199, "vanillaacceleratorbackend": 199, "vanillaacceleratorconv2dpass": 199, "var": [2, 4, 22, 30, 34, 35, 43, 58, 61, 82, 84, 113, 115, 118, 119, 120, 121, 123, 124, 125, 128, 129, 136, 137, 138, 139, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 182, 191, 195], "var_a": 30, "var_add": 23, "var_b": 30, "var_c": 30, "var_comput": [22, 23, 147], "var_env_linear": 22, "var_lv": 22, "var_map": 146, "var_matmul": 23, "var_matmul1": 23, "var_relu": 23, "var_rxplacehold": 147, "var_rxplaceholder_1": 147, "var_t_add": 23, "var_usag": 151, "var_x": 23, "varaibl": 65, "vararg": 169, "varargs_nam": 169, "varbind": [146, 150, 151], "varbindingnod": 150, "vardef": 172, "vari": [6, 128, 180, 183, 189, 192, 195, 197], "variabl": [0, 2, 8, 9, 12, 25, 31, 51, 56, 61, 65, 66, 70, 71, 73, 74, 79, 80, 82, 88, 90, 97, 109, 115, 125, 132, 136, 137, 141, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 160, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 195], "variad": [163, 173], "varianc": [104, 148, 149, 157, 158, 161, 175, 188], "variant": [2, 31, 75, 110, 143, 144, 158, 159, 174, 176, 189, 197], "varibl": [70, 71], "varieti": [7, 8, 12, 54, 76, 87, 93, 94, 102, 118, 179], "varint": 145, "variou": [2, 4, 15, 18, 22, 33, 36, 41, 43, 52, 56, 62, 67, 78, 84, 85, 90, 113, 118, 125, 137, 163, 175, 180, 183, 196], "varnam": 151, "varnod": [36, 144, 150, 154, 182], "varpattern": 154, "vast": 2, "vastli": 90, "vax1_fused_0": 110, "vax1_fused_1": 110, "vd": 66, "vdevic": [144, 149, 150, 151], "vdevice_id": 144, "ve": [4, 17, 31, 34, 35, 189, 195, 197], "vec": 173, "vec1": 173, "vec2": 173, "vec_siz": 136, "vector": [2, 4, 9, 25, 36, 75, 82, 88, 89, 96, 101, 105, 107, 128, 135, 136, 149, 157, 158, 168, 169, 171, 173, 174, 175, 177, 187, 188, 189, 192, 196], "vector_unit_byt": 135, "vectorcombin": 173, "vectorhigh": 173, "vectorize8": 82, "vectorizeloop": [37, 174], "vectorlow": 173, "vendor": [104, 118, 130], "venv": [51, 67, 68, 70, 71, 72, 73, 115, 132], "verbos": [16, 32, 34, 96, 101, 135, 136, 187], "verbose_ev": 135, "veri": [2, 5, 9, 13, 35, 36, 37, 39, 43, 70, 71, 75, 79, 80, 82, 104, 105, 107, 118, 119, 159, 160, 169, 173, 175, 179, 185, 188, 196, 198], "verif": [5, 56, 170, 171, 188], "verifi": [7, 17, 30, 34, 49, 56, 73, 119, 123, 132, 162, 169, 170, 171, 174, 175, 182, 189, 195, 197], "verify_cached_flag": 171, "verify_gpu_cod": 170, "verify_memori": 170, "verify_sref_tre": 171, "verify_ssa": 170, "verify_well_form": 170, "verifymemori": 174, "verifyvtcmlimit": 174, "verison": 174, "versatil": [179, 197], "version": [0, 2, 6, 7, 8, 14, 15, 16, 34, 39, 49, 51, 53, 56, 57, 58, 59, 62, 65, 72, 75, 80, 84, 85, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 115, 128, 132, 135, 136, 137, 149, 151, 155, 157, 158, 159, 160, 168, 169, 173, 175, 177, 179, 187, 188, 193, 195, 197, 198], "versu": 179, "veto": 11, "vf": 104, "vgg": [105, 106, 107, 108, 159], "vh": [98, 100], "vi": [22, 25, 27, 30, 31, 70, 71, 109, 169, 171, 173, 196], "vi2": 171, "via": [2, 5, 7, 8, 11, 16, 17, 20, 22, 30, 31, 32, 34, 35, 41, 48, 51, 56, 58, 65, 67, 70, 71, 72, 74, 85, 97, 109, 110, 111, 113, 115, 121, 124, 125, 128, 132, 136, 137, 141, 144, 150, 153, 162, 165, 166, 169, 171, 173, 175, 179, 180, 195, 197, 198], "vid": 150, "view": [2, 5, 7, 56, 58, 62, 84, 137, 148, 149, 164, 179, 180, 195], "viewer": [7, 189, 197], "vii": 171, "vim": 17, "vio": 171, "violat": [39, 179], "virtual": [3, 4, 5, 8, 136, 149, 150, 151, 153, 157, 160, 166, 169, 174], "virtual_device_index": 149, "virtualaxi": 136, "virtualdevic": 168, "virtualmachin": [43, 44, 72, 110, 111, 113, 150, 166], "virtualmachineprofil": 93, "visibl": [3, 58, 146, 147, 150, 170, 180], "vision": [50, 59, 64, 65, 142, 159, 181, 189, 197, 198], "visit": [5, 23, 35, 36, 82, 84, 85, 133, 144, 146, 148, 150, 152, 157, 172], "visit_": 148, "visit_bind": 150, "visit_binding_block": 150, "visit_binding_block_": 150, "visit_call_": [23, 150], "visit_const": [72, 84], "visit_constant_": 150, "visit_data_type_imm_": 150, "visit_dataflow_block_": 150, "visit_dataflow_var_": 150, "visit_dataflow_var_def_": 150, "visit_effect": 148, "visit_expr": [23, 150], "visit_expr_post_ord": 150, "visit_extern_func_": 150, "visit_function_": 150, "visit_global_var_": 150, "visit_if_": 150, "visit_match_cast_": 150, "visit_modul": 148, "visit_modulelist": 148, "visit_nameconst": 72, "visit_num": 72, "visit_op_": 150, "visit_param": 148, "visit_prim_value_": 150, "visit_seq_expr_": 150, "visit_shape_expr_": 150, "visit_span": 150, "visit_str": 72, "visit_string_imm_": 150, "visit_tuple_": 150, "visit_tuple_getitem_": 150, "visit_var_": 150, "visit_var_binding_": 150, "visit_var_def": 150, "visit_var_def_": 150, "visit_with_new_scop": 150, "visitattr": 5, "visitbind": 150, "visitbinding_": 150, "visitbindingblock": 150, "visitbindingblock_": 150, "visitexpr": [35, 36, 150], "visitexpr_": [35, 36, 150], "visitor": [36, 72, 146, 150, 152, 157, 172, 182], "visitspan": 150, "visitvardef": 150, "visitvardef_": 150, "visual": [116, 117, 122, 126, 132, 137, 157, 186], "viti": 62, "vitis_ai": 66, "viz": [120, 137, 149], "viz_dataflow_graph": 127, "viz_edg": 137, "viz_itervar_relationship_graph": 127, "viz_nod": [120, 137], "viz_schedule_tre": 127, "vizedg": [120, 137], "vizgraph": [120, 137], "viznod": [120, 137], "vizpars": [120, 137], "vj": [22, 27, 30, 31, 169, 171, 173], "vjo": 171, "vk": [22, 27, 30, 31, 169, 171], "vk_khr_16bit_storag": 6, "vk_khr_8bit_storag": 6, "vk_khr_dedicated_alloc": 6, "vk_khr_descriptor_update_templ": 6, "vk_khr_push_descriptor": 6, "vk_khr_shader_float16_int8": 6, "vk_khr_storage_buffer_storage_class": 6, "vkmemorydedicatedrequir": 6, "vko": 171, "vkphysicaldevice16bitstoragefeatureskhr": 6, "vkphysicaldevice8bitstoragefeatureskhr": 6, "vkphysicaldevicefeatur": 6, "vkphysicaldevicelimit": 6, "vkphysicaldeviceshaderfloat16int8featureskhr": 6, "vkphysicaldevicesubgroupproperti": 6, "vksubgroupfeatureflagbit": 6, "vload": 173, "vm": [43, 44, 93, 110, 111, 113, 148, 149, 150, 151, 153, 157, 163, 166], "vm_exec": 72, "vmap": 172, "vmbuiltinlow": 151, "vmclosur": [149, 150, 166], "vmcompil": 153, "vmexecutor": 153, "vmfunckind": 150, "vmfuncscop": 150, "vminstrumentreturnkind": [150, 166], "vmshapelow": [113, 151], "vn": 179, "vnni": [73, 74], "vocab_s": [113, 148, 149], "vocabulari": [148, 149], "void": [1, 3, 4, 5, 8, 13, 22, 23, 32, 35, 36, 37, 43, 44, 56, 96, 110, 123, 173], "void_arg": 37, "volunt": [9, 11], "vote": [11, 15], "vpi": 164, "vscale": 173, "vstore": 173, "vta": [67, 69], "vtabl": 35, "vtcm": [168, 170, 174], "vtcm_capac": 168, "vthread": [88, 96, 104, 135, 171, 174], "vulkan": [1, 5, 43, 69, 132, 162, 164, 168, 175, 198], "vulner": 185, "vulp": 67, "vw": [98, 100], "vx": [88, 104], "vy": [88, 104], "w": [20, 22, 47, 57, 69, 75, 88, 89, 96, 97, 98, 100, 104, 115, 127, 128, 135, 137, 148, 149, 151, 152, 156, 158, 160, 161, 164, 169, 170, 173, 175, 179, 182], "w0": [20, 22], "w1": [20, 22, 152, 169], "w2": [152, 169], "w_1": 89, "w_data": 101, "w_data_shap": 101, "w_data_tvm": 101, "w_end": 161, "w_in": 161, "w_indic": 101, "w_indices_shap": 101, "w_indices_tvm": 101, "w_indptr": 101, "w_indptr_shap": 101, "w_indptr_tvm": 101, "w_np": [88, 89, 101, 104], "w_share": 89, "w_shared_1": 89, "w_shared_wmma_matrix_b": 89, "w_shared_wmma_matrix_b_1": 89, "w_sp_np": 101, "w_start": 161, "w_tvm": 104, "wa": [0, 1, 4, 9, 12, 16, 36, 49, 62, 66, 73, 79, 84, 137, 145, 149, 151, 159, 163, 170, 179, 180, 189, 195, 197], "wai": [2, 4, 5, 9, 10, 11, 12, 13, 17, 20, 22, 23, 30, 31, 35, 36, 37, 43, 52, 56, 58, 60, 62, 63, 66, 68, 75, 81, 84, 89, 90, 94, 102, 110, 111, 118, 123, 128, 132, 135, 136, 151, 155, 169, 173, 177, 179, 182, 183, 188, 189, 195, 196, 197, 198], "wait": [7, 9, 136, 145, 163, 173, 188], "walk": [20, 34, 35, 66, 109, 123, 124, 136, 195], "walkthrough": 38, "wall": 136, "wang": [85, 108, 120, 193], "want": [1, 2, 3, 4, 5, 7, 8, 14, 16, 17, 22, 30, 34, 35, 36, 58, 62, 63, 65, 67, 68, 69, 70, 71, 82, 84, 109, 118, 120, 121, 123, 129, 131, 132, 135, 137, 139, 150, 151, 152, 153, 155, 160, 166, 169, 171, 173, 175, 176, 182, 187, 188, 189, 192, 193, 195, 196, 197, 198], "wanted_relay_op": 136, "war": 171, "warm": [73, 135, 136, 150, 166], "warmup": [65, 96, 98], "warmup_it": 165, "warn": [49, 51, 52, 66, 67, 68, 70, 71, 72, 73, 85, 106, 127, 135, 149, 150, 151, 157, 160, 168, 169, 171, 191, 193], "warp": [89, 93, 135, 173, 174, 191], "warp_col_til": 89, "warp_row_til": 89, "warp_siz": [89, 99, 135], "washington": 115, "wasm": 137, "wast": 197, "watch": [7, 10], "watcho": 59, "wavenet": [158, 175], "waw": 171, "wb": [57, 75, 162, 171], "wb_pin_ocm": 64, "wc": 89, "wc1": 182, "wc2": 182, "we": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22, 23, 25, 27, 30, 31, 32, 34, 35, 36, 37, 41, 43, 44, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 120, 121, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 139, 140, 141, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 183, 185, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199], "wear": 10, "web": [12, 47, 52, 64, 67, 72, 74, 90, 195], "webassembli": 43, "webgpu": [162, 164], "webpag": [96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109], "websit": [15, 73], "week": [9, 10, 115], "wei": [85, 120, 159], "weight": [2, 18, 22, 36, 44, 47, 48, 51, 56, 59, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 84, 97, 98, 99, 100, 105, 106, 107, 108, 111, 115, 118, 119, 135, 137, 141, 144, 145, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 174, 175, 179, 180, 182, 199], "weight_bit": [158, 175], "weight_data": 175, "weight_h": 149, "weight_indic": 175, "weight_indptr": 175, "weight_layout": [158, 175], "weight_nam": 160, "weight_np": 96, "weight_shap": 160, "weight_t": 115, "weight_tvm": 96, "weight_w": [148, 149], "weights_fil": [48, 69], "weights_nam": 47, "weights_onli": 115, "weights_path": [47, 48, 69], "weights_url": [47, 48, 69], "welcom": [9, 10, 11, 15, 32, 39, 74, 130, 182], "well": [2, 4, 7, 9, 16, 17, 20, 34, 36, 39, 56, 62, 64, 66, 67, 82, 84, 93, 101, 105, 106, 107, 123, 128, 135, 136, 144, 146, 148, 150, 151, 152, 170, 174, 175, 176, 180, 182, 183, 191, 195, 197, 199], "well_form": [146, 152], "weng": [82, 90], "went": 137, "were": [4, 12, 20, 36, 75, 84, 140, 157, 160, 195], "west": 17, "west_cmd": 16, "wf": 89, "wget": [53, 64, 66, 197, 198], "wh": 175, "what": [4, 9, 12, 13, 15, 16, 19, 20, 23, 25, 30, 34, 36, 37, 52, 58, 75, 79, 82, 85, 113, 121, 148, 157, 158, 175, 182, 195, 197], "whatev": [154, 198], "wheel": 9, "when": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 20, 23, 25, 27, 32, 34, 35, 36, 37, 56, 58, 67, 69, 75, 79, 80, 84, 85, 90, 97, 98, 99, 100, 101, 105, 106, 107, 109, 115, 118, 127, 131, 132, 135, 136, 137, 139, 140, 141, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 162, 163, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 182, 183, 188, 189, 192, 195, 197, 198], "whenev": [5, 144, 146, 179], "where": [1, 5, 7, 8, 9, 10, 11, 12, 16, 17, 18, 27, 30, 32, 34, 35, 36, 37, 56, 58, 60, 79, 84, 88, 89, 90, 93, 96, 97, 98, 99, 100, 105, 106, 107, 110, 113, 115, 125, 135, 136, 138, 141, 144, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 165, 166, 168, 169, 171, 173, 174, 175, 176, 179, 180, 182, 183, 187, 188, 189, 192, 195, 198], "wherea": [35, 160, 169, 173, 183], "wherev": 180, "whether": [0, 2, 3, 4, 6, 9, 35, 36, 64, 65, 66, 69, 79, 109, 128, 135, 136, 137, 138, 139, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 179, 182, 183, 193], "which": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 20, 22, 23, 26, 27, 34, 35, 36, 37, 39, 43, 44, 48, 49, 52, 53, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 75, 79, 80, 82, 84, 85, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 121, 123, 125, 128, 129, 130, 132, 135, 136, 137, 139, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 178, 179, 180, 182, 183, 187, 188, 189, 192, 193, 195, 196, 197, 199], "while": [0, 1, 2, 4, 7, 8, 9, 10, 12, 16, 17, 22, 25, 30, 34, 36, 56, 65, 67, 79, 89, 101, 110, 113, 118, 120, 121, 124, 128, 130, 143, 146, 148, 149, 150, 151, 156, 157, 158, 162, 169, 171, 173, 175, 179, 180, 183, 188, 189, 192, 193, 195, 199], "whilst": 58, "who": [1, 2, 7, 9, 10, 11, 17, 22, 44, 129, 162, 171, 185, 190], "whole": [0, 4, 16, 19, 23, 58, 59, 69, 84, 96, 97, 98, 99, 100, 101, 105, 106, 107, 135, 148, 149, 157, 158, 175, 179, 187, 188, 195], "whose": [3, 5, 20, 30, 34, 35, 82, 90, 136, 146, 148, 149, 150, 151, 157, 160, 166, 169, 171, 173, 175, 176, 179, 180, 183], "why": [4, 12, 16, 17, 20, 26, 35, 180], "wi": [88, 175], "wich": 135, "wide": [2, 12, 22, 23, 36, 162, 179], "widen": 65, "wider": [130, 188], "width": [68, 72, 88, 89, 123, 135, 137, 148, 149, 156, 158, 161, 173, 175, 183], "wiki": 173, "wikipedia": 173, "wildcard": [154, 157, 179, 180, 199], "wildcardpattern": 154, "willing": 11, "win_length": [157, 175], "window": [7, 17, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 149, 157, 158, 161, 175, 187, 188], "window_s": 149, "window_shap": [157, 175], "winograd": [74, 158, 170, 175], "winograd_transform_matric": 175, "wio": 175, "wip": 64, "wise": [25, 58, 125, 146, 148, 149, 151, 157, 169, 173, 174, 175, 182], "wish": 58, "with_attr": [30, 144, 182], "with_bodi": [82, 173], "with_decis": 171, "with_mean": 157, "with_minrpc": 162, "with_shap": 52, "with_struct_info": 150, "within": [1, 4, 11, 12, 17, 18, 20, 27, 30, 31, 34, 43, 48, 88, 127, 128, 129, 136, 137, 144, 146, 147, 148, 151, 156, 157, 158, 160, 161, 171, 174, 175, 176, 180, 183, 188, 195, 198], "within_index": 175, "without": [2, 4, 5, 11, 12, 16, 17, 32, 35, 36, 39, 41, 62, 65, 68, 73, 74, 79, 80, 96, 106, 108, 132, 135, 136, 144, 146, 150, 151, 157, 158, 160, 161, 166, 169, 171, 173, 174, 175, 176, 179, 180, 183, 187, 188], "without_attr": 144, "withscop": 157, "wl": [37, 88, 104], "wmma": [89, 173], "won": [39, 43, 66, 75, 113, 135, 171, 172], "wonder": 16, "wong": 51, "word": [20, 69, 70, 71, 75, 97, 98, 99, 100, 137, 169], "work": [1, 2, 3, 4, 7, 8, 9, 10, 12, 13, 19, 20, 22, 32, 33, 34, 36, 37, 41, 43, 44, 62, 69, 75, 78, 80, 81, 82, 84, 86, 90, 97, 98, 99, 100, 105, 106, 107, 130, 135, 136, 137, 145, 148, 150, 151, 157, 159, 160, 166, 169, 171, 172, 174, 176, 179, 180, 183, 186, 188, 190, 192, 194, 196, 197], "work_dir": [110, 111, 145, 151], "work_on": 171, "work_with_relai": [115, 117, 186], "work_with_schedul": [126, 186], "workaround": [80, 135], "worker": [148, 149, 163], "worker0": 163, "worker0_onli": 163, "worker_id": 163, "workflow": [8, 14, 73, 109, 125, 188, 195, 196], "workflow_dispatch": 8, "workload": [2, 3, 36, 39, 41, 44, 56, 64, 70, 71, 75, 88, 97, 98, 99, 100, 104, 105, 106, 107, 108, 124, 135, 136, 138, 141, 145, 159, 175, 181, 184], "workload_arg": 135, "workload_func": 135, "workload_hash": 135, "workload_kei": [97, 98, 99, 100, 135], "workload_nam": 145, "workspac": [49, 51, 52, 65, 66, 67, 68, 69, 70, 71, 72, 73, 84, 106, 115, 131, 144, 151, 157, 170, 173, 191, 193], "workspace_byte_align": 170, "workspace_dir": 150, "workspace_memory_pool": 157, "workspacememorypool": [144, 157], "workspacepoolinfo": [144, 157], "workstat": 62, "worktre": 16, "workworload": 197, "world": [5, 9, 110, 182], "worri": [36, 177], "wors": 120, "worth": [12, 75, 104, 129, 182, 189, 195], "would": [2, 4, 8, 9, 11, 12, 20, 34, 35, 36, 58, 65, 67, 70, 71, 73, 74, 75, 84, 110, 123, 129, 133, 144, 146, 148, 149, 150, 151, 152, 155, 157, 160, 163, 175, 179, 180, 182, 198], "wrap": [5, 34, 35, 36, 37, 82, 84, 85, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 136, 137, 141, 144, 146, 148, 151, 157, 165, 168, 169, 170, 174, 175, 179, 187, 188, 195], "wrap_compute_scanop": 34, "wrap_nest": 148, "wrap_param": 149, "wrap_topi_schedul": 34, "wrapp": 160, "wrapped_func": 137, "wrapper": [4, 13, 34, 36, 132, 135, 137, 138, 139, 141, 143, 148, 157, 169, 174, 176, 195], "write": [3, 4, 5, 7, 9, 11, 12, 13, 15, 16, 17, 20, 22, 23, 27, 30, 31, 35, 36, 57, 69, 75, 79, 81, 83, 84, 88, 89, 96, 102, 104, 108, 110, 131, 135, 137, 138, 144, 147, 150, 151, 157, 162, 169, 170, 171, 173, 174, 176, 177, 179, 180, 182, 183, 185, 186, 187, 188, 189, 191, 196], "write_bandwidth_bytes_per_cycl": 144, "write_buffer_index": 171, "write_buffer_transform": 146, "write_latency_cycl": 144, "write_opt_sch2record_fil": 108, "writer": [160, 169, 171], "written": [4, 12, 16, 22, 35, 82, 105, 106, 107, 121, 123, 132, 135, 170, 171, 179, 180, 183, 198], "wrong": [14, 27, 85, 105, 106, 107, 132, 135], "wrote": [7, 16, 34, 188], "wrt": [169, 175], "wt": 160, "wu": [46, 53, 99, 105, 149, 159], "ww": [88, 104], "www": [17, 50, 52, 75, 157], "wxh": [149, 158], "x": [0, 2, 4, 5, 7, 8, 12, 13, 16, 18, 20, 22, 23, 34, 37, 43, 44, 46, 47, 49, 51, 52, 61, 66, 69, 70, 71, 74, 75, 84, 88, 89, 90, 96, 97, 101, 104, 109, 110, 111, 113, 118, 121, 123, 124, 125, 128, 129, 135, 136, 137, 141, 144, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 182, 188, 191, 195, 196], "x1": [75, 113, 147, 148, 149, 173, 180], "x2": [113, 148, 149, 173, 179, 180], "x2paddl": 50, "x3": 149, "x64_64": 62, "x86": [2, 37, 43, 53, 56, 58, 67, 68, 69, 70, 71, 72, 73, 74, 75, 90, 94, 95, 97, 102, 103, 136, 186, 189, 192, 197], "x86_64": [56, 59, 62, 68, 159], "x86_64_aarch64": 80, "x_": [156, 158, 175], "x_0": 175, "x_1": [124, 175], "x_2": 124, "x_adjoint": 151, "x_c": 195, "x_c_init": 195, "x_factor": [125, 169], "x_i": [148, 149, 158], "x_inner": [169, 195], "x_inner_init": 195, "x_j": [148, 149, 158], "x_m": 175, "x_np": 101, "x_outer": [169, 195], "x_parent": 169, "x_q": 144, "x_torch": 44, "x_tvm": [44, 101], "xa": 149, "xarg": 17, "xavier": [65, 193], "xc": 195, "xcl_emulation_mod": 61, "xcl_target": 61, "xclbin": 61, "xcrun": 137, "xeon": 108, "xf": 17, "xfail": 7, "xgb": [56, 67, 68, 105, 106, 107, 108, 135, 145, 189], "xgb_curv": [67, 105, 106, 107, 108, 189], "xgb_itervar": [67, 105, 106, 107, 108, 189], "xgb_knob": [67, 105, 106, 107, 108, 189], "xgb_rank": [67, 105, 106, 107, 108, 189], "xgb_rank_binari": [67, 105, 106, 107, 108, 189], "xgb_rank_binary_curv": [67, 105, 106, 107, 108, 189], "xgb_rank_binary_itervar": [67, 105, 106, 107, 108, 189], "xgb_rank_binary_knob": [67, 105, 106, 107, 108, 189], "xgb_rank_curv": [67, 105, 106, 107, 108, 189], "xgb_rank_itervar": [67, 105, 106, 107, 108, 189], "xgb_rank_knob": [67, 105, 106, 107, 108, 189], "xgbmodel": [96, 100, 101, 135, 187], "xgboost": [67, 104, 105, 106, 107, 132, 135, 136, 188, 189, 197], "xgboosttun": [104, 188], "xgbtuner": [67, 104, 105, 106, 107, 108, 136, 188, 189], "xi": [88, 104, 109, 123, 124, 125, 136, 188, 195], "xiangyu": 159, "xilinx": [61, 66], "xilinx_sdx": 61, "xmax": 161, "xmin": 161, "xo": [89, 109, 123, 124, 125, 136, 188, 195], "xor": [149, 157, 173, 175], "xpu": 80, "xvf": 197, "xw": 175, "xx": [4, 88, 96, 98, 99, 100], "xxx": [80, 84, 136], "xxxentiti": 136, "xxxspace": 136, "xy": [34, 157, 175], "xyz": [8, 140], "xzf": 80, "y": [2, 13, 16, 20, 22, 27, 30, 31, 34, 49, 75, 84, 88, 89, 97, 104, 110, 118, 121, 123, 127, 128, 129, 135, 136, 137, 144, 147, 148, 149, 150, 151, 152, 156, 157, 158, 160, 161, 168, 169, 170, 171, 173, 174, 175, 179, 180, 182, 188, 191, 195], "y_": [27, 30, 156, 175], "y_0": 175, "y_adjoint": 151, "y_factor": [125, 169], "y_i": 149, "y_init": 31, "y_inner": [169, 195], "y_inner_init": 195, "y_np": 101, "y_outer": [169, 195], "y_parent": 169, "y_tvm": 101, "y_updat": 31, "yan": [105, 106, 107, 108], "yao": [108, 115, 193], "yc": 195, "ycbcr": 49, "yet": [4, 59, 148, 150, 157, 164, 169, 171, 177, 180, 183], "yi": [88, 104, 125, 128, 136, 188, 195], "yield": [4, 27, 31, 75, 136, 148, 149, 157], "yizhi": 128, "ymax": 161, "ymin": 161, "yml": 8, "yo": [89, 125, 128, 136, 188, 195], "yolo": [54, 55, 161, 186], "yolo_detect": 47, "yolo_reorg": 161, "yolov2": 47, "yolov3": 47, "yongfeng": 127, "you": [0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 22, 23, 30, 31, 32, 34, 35, 36, 37, 39, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 82, 84, 85, 86, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 131, 132, 133, 135, 136, 140, 141, 144, 149, 155, 159, 162, 168, 169, 173, 177, 182, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199], "your": [4, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 32, 33, 34, 35, 37, 39, 49, 56, 58, 59, 60, 62, 64, 65, 66, 67, 69, 70, 71, 73, 74, 75, 80, 93, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 111, 113, 115, 118, 123, 125, 131, 132, 133, 136, 148, 155, 159, 175, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198], "your_kei": 198, "your_module_lib_path": 36, "yourawesomepars": 120, "yourself": [10, 53, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 195], "yu": [90, 115], "yulun": 115, "yuwei": 48, "yuxin": 149, "yy": [88, 96, 98, 99, 100], "yyi": 80, "z": [20, 22, 46, 49, 84, 88, 89, 97, 104, 118, 128, 148, 149, 150, 151, 157, 158, 169, 171, 173, 174, 175, 179, 180, 182, 191, 195], "z1": [84, 169], "z2": [84, 169], "zcu102": 66, "zcu104": 66, "zd": 66, "zephyr": 16, "zephyr_board": 16, "zero": [6, 30, 31, 34, 35, 37, 41, 43, 44, 61, 73, 75, 88, 89, 90, 101, 104, 109, 110, 113, 121, 123, 124, 128, 137, 141, 144, 148, 149, 150, 151, 156, 157, 158, 162, 169, 171, 173, 175, 180, 182, 191, 195, 196, 197], "zero_point": [144, 149], "zeros_lik": [149, 157], "zeroth": 157, "zh": 50, "zhang": [46, 49, 148, 149, 159], "zhao": [46, 53, 99, 105], "zheng": [96, 97, 98, 100, 104, 105, 106, 107, 109, 187, 188, 192], "zhi": 84, "zhreshold": [46, 48, 49, 50, 69, 70, 71, 73], "zi": 128, "ziheng": [71, 109, 125, 129], "zip": [22, 23, 30, 31, 43, 44, 46, 47, 48, 49, 50, 51, 52, 67, 68, 69, 70, 71, 72, 73, 75, 82, 84, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 179, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199], "zisserman": 159, "ziyuan": 50, "zo": 128, "zone": 9, "zoo": [51, 67, 72, 136, 189, 197], "zxvf": 66, "\u03c3i": 157}, "titles": ["Debugger", "Device/Target Interactions", "Design and Architecture", "Introduction to Module Serialization", "Pass Infrastructure", "TVM Runtime System", "Vulkan Runtime", "Using TVM\u2019s CI", "Code Guide and Tips", "Code Reviews", "Committer Guide", "TVM Community Guidelines", "Documentation", "Error Handling Guide", "Git Usage Tips", "Contributor Guide", "Submit a Pull Request", "Release Process", "Graph Abstraction for ML Models", "Relax", "Understand Relax Abstraction", "Deep Dive: Relax", "Relax Creation", "Transformation", "Computation times", "Tensor Program Abstraction", "TensorIR", "Understand TensorIR Abstraction", "Deep Dive: TensorIR", "Computation times", "TensorIR Creation", "Transformation", "Debugging TVM", "Developer How-To Guide", "Adding an Operator to Relay", "Adding a Compiler Pass to Relay", "Bring Your Own Codegen To TVM", "TVM Codebase Walkthrough by Example", "Developer Tutorial", "Handle TVM Errors", "Index", "Overview", "Get Started", "IRModule", "Quick Start", "Computation times", "Compile CoreML Models", "Compile YOLO-V2 and YOLO-V3 in DarkNet Models", "Compile Keras Models", "Compile ONNX Models", "Compile PaddlePaddle Models", "Compile PyTorch Models", "Compile Tensorflow Models", "Compile TFLite Models", "Compile Deep Learning Models", "Computation times", "Deploy to Adreno\u2122 GPU", "Deploy to Android", "Relay Arm<sup>\u00ae</sup> Compute Library Integration", "Relay BNNS Integration", "Deploy TVM Module using C++ API", "HLS Backend Example", "Deploy Models and Integrate TVM", "Integrate TVM into Your Project", "Marvell Machine Learning Integration", "Relay TensorRT Integration", "Vitis AI Integration", "Deploy the Pretrained Model on Adreno\u2122", "Deploy the Pretrained Model on Adreno\u2122 with tvmc Interface", "Deploy the Pretrained Model on Android", "Deploy the Pretrained Model on Jetson Nano", "Deploy the Pretrained Model on Raspberry Pi", "Compile PyTorch Object Detection Models", "Deploy a Framework-prequantized Model with TVM", "Deploy a Framework-prequantized Model with TVM - Part 3 (TFLite)", "Deploy a Hugging Face Pruned Model on CPU", "Deploy Deep Learning Models", "Computation times", "Development Guides", "Python Target Parametrization", "Setup RPC System", "Extend TVM", "Writing a Customized Pass", "Computation times", "How to Use TVM Pass Infra", "How to Use TVM Pass Instrument", "How To Guides", "Optimize Tensor Operators", "How to optimize convolution on GPU", "How to optimize convolution using TensorCores", "How to optimize GEMM on CPU", "Computation times", "Profile Models", "Getting Started With PAPI", "Use AutoScheduler for Template-Free Scheduling", "Computation times", "Auto-scheduling a Convolution Layer for GPU", "Auto-scheduling a Neural Network for ARM CPU", "Auto-scheduling a Neural Network for NVIDIA GPU", "Auto-scheduling a Neural Network for mali GPU", "Auto-scheduling a Neural Network for x86 CPU", "Auto-scheduling Sparse Matrix Multiplication on CPU with Custom Sketch Rule", "Auto-Tune with Templates and AutoTVM", "Computation times", "Tuning High Performance Convolution on NVIDIA GPUs", "Auto-tuning a Convolutional Network for ARM CPU", "Auto-tuning a Convolutional Network for NVIDIA GPU", "Auto-tuning a Convolutional Network for Mobile GPU", "Auto-tuning a Convolutional Network for x86 CPU", "Cross Compilation and RPC", "Customize Optimization", "End-to-End Optimize Model", "HOW TO", "Optimize Large Language Model", "Computation times", "Building a Graph Convolutional Network", "Work With Relay", "Computation times", "Using External Libraries in Relay", "Using Pipeline Executor in Relay", "Use Relay Visualizer to Visualize Relay", "External Tensor Functions", "Work With Tensor Expression and Schedules", "Reduction", "Scan and Recurrent Kernel", "Schedule Primitives in TVM", "Computation times", "Use Tensor Expression Debug Display (TEDD) for Visualization", "Use Tensorize to Leverage Hardware Intrinsics", "Compute and Reduce with Tuple Inputs", "Apache TVM Documentation", "Docker Images", "Install from Source", "Installing TVM", "Other APIs", "tvm.auto_scheduler", "tvm.autotvm", "tvm.contrib", "tvm.dlight", "tvm.driver", "tvm.error", "tvm.contrib.graph_executor", "Python API", "tvm.instrument", "tvm.ir", "tvm.meta_schedule", "tvm.relax.analysis", "tvm.relax.block_builder", "tvm.relax.frontend", "tvm.relax.op", "tvm.relax", "tvm.relax.transform", "tvm.relay.analysis", "tvm.relay.backend", "tvm.relay.dataflow_pattern", "tvm.relay.frontend", "tvm.relay.image", "tvm.relay", "tvm.relay.nn", "tvm.relay.testing", "tvm.relay.transform", "tvm.relay.vision", "tvm.rpc", "tvm.runtime.disco", "tvm.runtime.ndarray", "tvm.runtime.profiling", "tvm.runtime.relax_vm", "tvm.runtime", "tvm.target", "tvm.te", "tvm.tir.analysis", "tvm.tir.schedule", "tvm.tir.stmt_functor", "tvm.tir", "tvm.tir.transform", "tvm.topi", "tvm.transform", "Hybrid Frontend Language Reference", "Language Reference", "Algebraic Data Types in Relay", "Expressions in Relay", "Relay Core Tensor Operators", "Pattern Matching in Relay", "Relay\u2019s Type System", "Publications", "Security Guide", "Computation times", "Optimizing Operators with Auto-scheduling", "Optimizing Operators with Schedule Templates and AutoTVM", "Compiling and Optimizing a Model with the Python Interface (AutoTVM)", "User Tutorial", "Introduction to TOPI", "Introduction", "Quick Start Tutorial for Compiling Deep Learning Models", "Computation times", "Working with Operators Using Tensor Expression", "Blitz Course to TensorIR", "Compiling and Optimizing a Model with TVMC", "Getting Starting using TVMC Python: a high-level API for TVM", "Making your Hardware Accelerator TVM-ready with UMA"], "titleterms": {"": [7, 64, 183], "0": [59, 72, 198], "1": [0, 34, 59, 64, 80, 104, 132, 195, 198], "18": 65, "2": [0, 34, 64, 80, 104, 132, 188, 195, 198], "2d": 123, "3": [34, 64, 74, 80, 132, 195, 198], "4": [34, 64, 132, 195], "5": [64, 132, 195, 198], "6": [34, 195], "7": 34, "8": 34, "9": 72, "A": 188, "Be": 9, "For": 7, "If": [180, 182], "One": [182, 195], "TO": 112, "The": [4, 12, 35, 70, 71, 80, 197], "Then": 180, "To": [33, 36, 86, 130], "Tos": [12, 62], "With": [85, 93, 116, 122, 189], "aarch64": 62, "about": [9, 56, 130], "abstract": [18, 20, 25, 27], "acceler": 199, "accuraci": [74, 115], "acl": 58, "ad": [7, 34, 35, 58, 65, 197], "add": 37, "addit": [9, 62, 195, 198], "adreno": [56, 67, 68], "adt": [179, 180, 183], "advanc": [56, 132, 188], "after": 14, "ai": 66, "algebra": [179, 183], "algorithm": [88, 89, 189, 197], "all": 75, "alloc": 177, "altern": 182, "alveo": 66, "an": [13, 34, 39, 43, 84, 85, 99, 179, 182, 189, 192, 196, 197], "analysi": [146, 152, 170], "android": [57, 69], "announc": 17, "anoth": 12, "apach": 130, "api": [9, 22, 34, 60, 64, 130, 134, 142, 188, 195, 198], "appli": [14, 23, 84, 85], "applic": [56, 182], "approv": 9, "architectur": [2, 12, 62, 80, 113], "archiv": 10, "arith": 2, "ariti": 34, "arm": [58, 97, 105], "around": 120, "arrai": [63, 90, 177, 195], "assert": 177, "ast": 35, "attribut": [34, 43, 177, 182], "auto": [96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 110, 187, 188], "auto_schedul": 135, "automat": [56, 197], "autoschedul": [94, 198], "autotun": [67, 68], "autotvm": [102, 136, 188, 189], "ax": 27, "axi": 27, "backend": [4, 43, 56, 61, 115, 118, 153, 177, 193], "baselin": [90, 195], "basic": [188, 189, 191], "batchwis": 129, "begin": [98, 100, 105, 106, 107, 188], "bia": 127, "bind": [27, 125, 177, 180], "blitz": 196, "block": [20, 22, 27, 88, 90, 195], "block_build": 147, "bnn": 59, "box": 72, "branch": 14, "bring": 36, "broad": 10, "broken": 7, "buffer": 27, "build": [9, 44, 51, 52, 57, 58, 59, 62, 64, 65, 70, 71, 93, 109, 111, 115, 118, 119, 124, 132, 196], "builder": 22, "built": 4, "builtin": 149, "c": [4, 8, 12, 13, 16, 34, 36, 60, 63, 132], "cach": [90, 195], "call": [17, 34, 180, 182, 183], "call_tir": 20, "can": [80, 119], "candid": 17, "capabl": 6, "carefulli": 9, "caus": 80, "cbla": 137, "cc": 137, "ccach": 132, "ccl": 149, "cell": 124, "cfg": 188, "chang": 9, "check": [96, 179, 187], "cherri": 17, "chocol": 199, "choos": [13, 47], "ci": [7, 16, 79], "clang": 137, "class": 85, "cleaner": 34, "clone": 64, "closur": 180, "cloudpickl": 80, "code": [1, 8, 9, 36, 75, 195], "codebas": 37, "codegen": 36, "codegenc": 36, "collabor": [10, 129], "collect": 189, "combin": 14, "come": 39, "command": 64, "commandlin": 56, "commit": [14, 16], "committ": [10, 11], "common": 179, "commun": [9, 10, 11, 199], "commut": 123, "compar": [73, 189, 195, 197], "comparison": 74, "compil": [5, 35, 46, 47, 48, 49, 50, 51, 52, 53, 54, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 80, 98, 100, 109, 113, 115, 177, 189, 193, 195, 197, 198], "complex": 198, "compos": 110, "comput": [0, 24, 27, 29, 34, 45, 55, 58, 77, 83, 89, 91, 95, 96, 101, 103, 114, 117, 126, 129, 186, 194, 195], "compute_at": 125, "compute_inlin": 125, "compute_root": 125, "concis": [9, 30], "conclus": 118, "condit": 177, "configur": [67, 68, 75, 108, 132], "conflict": 14, "consensu": 9, "consequ": 14, "consid": 9, "consider": 12, "consist": 9, "constant": [8, 35, 180], "constantcheck": 35, "constantfold": 35, "constraint": 183, "construct": [4, 44, 113, 180], "constructor": [36, 180], "contain": [64, 79], "content": [43, 44, 79, 110, 132, 192], "contrib": [121, 137, 141], "contributor": [7, 15], "control": 180, "convert": [67, 73, 75, 111], "convolut": [88, 89, 96, 104, 105, 106, 107, 108, 115, 118, 123, 127, 191], "cooper": 88, "core": 181, "coreml": 46, "correct": [96, 187, 189, 197], "cours": 196, "cpu": [43, 75, 90, 97, 100, 101, 105, 108, 109, 195], "creat": [22, 30, 34, 43, 84, 85, 96, 101, 108, 113, 118, 119, 187, 195, 196], "createcsourcemodul": 36, "creation": [22, 30], "cross": [2, 62, 80, 109, 123], "csourcecodegen": 36, "cubla": 137, "cuda": [88, 89, 118], "cudnn": 118, "current": [4, 85], "custom": [23, 36, 82, 85, 101, 110, 120, 187], "cut": 17, "cutlass": 119, "darknet": 47, "data": [2, 9, 59, 115, 179, 183, 189, 197], "dataflow": [20, 180], "dataflow_pattern": 154, "dataset": 115, "deal": 7, "debug": [0, 7, 32, 84, 127], "debugg": 0, "decis": 11, "declar": 109, "decod": [52, 113], "decor": 84, "deep": [21, 28, 54, 76, 130, 193], "default": 195, "defin": [34, 63, 89, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 113, 115, 120, 123, 127, 128, 179, 187, 189, 193, 197], "define_split": 188, "definit": [1, 183], "deliber": 9, "dens": [75, 101], "depend": [9, 104, 105, 106, 107, 132, 188], "deploi": [43, 56, 57, 59, 60, 62, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 80, 110, 111, 113], "deploy": [5, 44, 62], "describ": [123, 129, 195], "deseri": 3, "design": [2, 4, 182], "detail": [5, 12], "detect": 72, "develop": [11, 33, 38, 56, 78], "devic": [1, 62, 69, 70, 71, 80, 97, 99, 105, 106, 107, 109, 198], "deviceapi": 1, "dgl": 115, "diamond": 182, "differ": 195, "disco": 163, "discuss": 2, "dispatch": 110, "displai": [49, 53, 127], "distribut": 149, "dive": [21, 28, 130], "dlight": [2, 110, 138, 142], "dlpack": [63, 137], "do": [39, 72], "docker": [7, 16, 64, 79, 131], "document": [9, 12, 130], "domin": 182, "download": [47, 52, 53, 72, 74, 75, 189], "driver": 139, "dtype": 182, "due": 7, "dump": 0, "dynam": [30, 60], "e2": 74, "element": [20, 25], "els": 180, "embed": 113, "emcc": 137, "emit": 36, "emul": [61, 177], "enabl": [67, 132], "encount": 39, "end": [20, 111], "enhanc": 56, "environ": [6, 16, 56, 69], "error": [13, 39, 140], "evalu": [96, 97, 98, 99, 100, 115, 187, 195], "everyth": 195, "exampl": [3, 35, 37, 58, 59, 61, 84, 85, 182, 183, 191, 195, 198], "examplejsoncodegen": 36, "except": 85, "exchang": 0, "execut": [2, 20, 46, 47, 48, 49, 50, 51, 52, 53, 59, 69, 189], "executor": 119, "exist": 43, "explan": 188, "explicitli": 9, "export": [3, 113], "expos": 34, "express": [8, 30, 35, 122, 127, 177, 179, 180, 182, 195], "extend": 81, "extern": [118, 121], "extra": [25, 27, 132], "extract": [53, 74, 97, 98, 99, 100], "face": 75, "factor": [9, 123], "failur": 7, "featur": [6, 18, 177], "fetch": 88, "figur": 12, "file": [47, 52, 53, 74, 79, 96, 187], "final": [187, 188, 189, 195, 197], "first": 10, "flaki": 7, "flow": [2, 41, 44, 64, 110, 111, 113], "fold": 35, "forc": 14, "format": [0, 3, 30, 189, 195, 197], "four": 12, "fragment": 180, "framework": [73, 74], "free": 94, "from": [9, 39, 43, 72, 73, 132, 197], "frontend": [4, 73, 148, 155, 177], "function": [4, 27, 30, 115, 119, 121, 180, 182, 183, 195, 198], "fuse": [125, 191], "fuzzi": 182, "galleri": 12, "gcn": 115, "gemm": 90, "gemv": 128, "gencfunc": 36, "gener": [1, 11, 36, 56, 88, 89, 123, 191, 193, 195], "get": [42, 60, 67, 72, 74, 93, 115, 130, 132, 198], "getfunct": 36, "git": 14, "github": 132, "global": [180, 183], "globalvar": 120, "glue": 82, "goal": 41, "golden": 115, "gpg": 17, "gpu": [43, 56, 88, 96, 98, 99, 104, 106, 107, 195, 196], "grad": 149, "gradient": 34, "graph": [0, 18, 47, 51, 52, 59, 70, 71, 72, 75, 115, 120, 127, 180, 182], "graph_executor": [119, 141], "graphconv": 115, "green": 7, "guid": [8, 10, 12, 13, 15, 33, 78, 86, 185], "guidelin": [11, 16], "handl": [8, 13, 39, 85], "hardwar": [128, 193, 199], "hierarchi": 88, "high": [20, 104, 198], "hl": 61, "hood": 3, "hook": [34, 121], "how": [0, 12, 13, 14, 33, 62, 84, 85, 86, 88, 89, 90, 112, 130], "hug": 75, "hybrid": [169, 177, 178], "i": [14, 18, 39], "imag": [7, 12, 46, 47, 48, 49, 50, 51, 52, 53, 67, 72, 74, 131, 149, 156, 175, 189], "implement": [5, 9, 36, 84, 179], "import": [43, 44, 47, 51, 52, 72, 74, 198], "improv": 187, "includ": 34, "incomplet": 183, "independ": 10, "index": [40, 130], "infer": [52, 66, 67, 72, 74], "info": 20, "inform": [5, 27], "infra": 84, "infrastructur": 4, "initi": [31, 119], "input": [36, 59, 129, 197, 199], "inspect": [56, 187], "instal": [58, 65, 93, 104, 105, 106, 107, 132, 133, 188], "instruct": 66, "instrument": [4, 85, 143], "integ": 8, "integr": [20, 56, 58, 59, 62, 63, 64, 65, 66], "interact": [1, 30], "interest": 120, "interfac": [56, 68, 189], "intrins": [89, 128, 177], "introduct": [3, 56, 58, 59, 64, 65, 89, 178, 191, 192], "introductori": 12, "ir": [2, 82, 120, 144], "irmodul": [43, 110, 111, 113, 196], "issu": [7, 185], "iter": 27, "jenkin": 7, "jetson": 70, "k": 14, "keep": 7, "kei": [2, 17, 18, 20, 25, 41], "kera": [48, 69], "kernel": [88, 89, 109, 124], "keyword": 177, "kvcach": 113, "label": 73, "lack": 80, "lambda": 195, "languag": [113, 177, 178, 182], "larg": 113, "larger": 72, "latest": 14, "launch": 80, "layer": [96, 115, 118], "layout": 59, "learn": [9, 54, 64, 76, 193], "legaci": [130, 142], "lesson": 9, "let": [180, 182], "level": [2, 4, 20, 198], "leverag": [31, 128], "librari": [58, 60, 62, 110, 118, 193, 195], "limit": 6, "line": 64, "list": 183, "llvm": 64, "load": [46, 47, 48, 49, 50, 51, 53, 67, 68, 69, 72, 73, 74, 75, 115, 119, 189, 193, 195, 198], "loadfrombinari": 36, "local": [16, 31, 79, 109, 180], "locat": 12, "log": 7, "look": [46, 48, 50, 51], "loop": [27, 31, 90, 177, 195], "low": 20, "lower": [82, 89], "machin": [64, 80, 109], "main": [14, 17], "maintain": 7, "make": [68, 199], "mali": 99, "manag": [10, 35], "manual": [56, 84, 195], "marvel": 64, "maskrcnn": 72, "match": [179, 180, 182], "math": 177, "matmul": 128, "matrix": [101, 128, 187, 188, 195], "measur": [73, 74, 106, 136], "memori": [88, 89, 149], "merg": 7, "messag": 16, "meta_schedul": [2, 142, 145], "minim": 9, "miopen": 137, "misc": 142, "ml": 18, "mobil": 107, "mobilenet": [59, 73], "model": [18, 20, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 92, 110, 111, 113, 115, 119, 185, 189, 192, 193, 197, 198], "modul": [3, 4, 5, 43, 60, 67, 73, 75, 110, 120, 180, 193, 195, 197], "monitor": 7, "more": [58, 188, 198], "most": 14, "mrvl": 64, "multi": 124, "multipl": [14, 85, 101, 106, 120, 124, 128, 187, 188, 195], "mutat": 35, "mxnet": [73, 137], "name": [46, 48, 50, 51], "nano": 70, "ndarrai": 164, "ndk": 137, "necessari": 74, "need": 115, "net": 179, "network": [8, 97, 98, 99, 100, 105, 106, 107, 108, 115, 118, 119, 193], "neural": [97, 98, 99, 100, 179, 193], "new": [7, 58, 65], "next": 44, "nn": [43, 148, 149, 158, 175], "nnmodul": 22, "nnpack": 137, "node": [2, 34, 182], "non": 182, "note": [17, 49, 187, 188, 195], "numpi": [80, 191], "nvcc": 137, "nvidia": [98, 104, 106], "object": [4, 5, 72], "obtain": 197, "octeon": 64, "offload": [59, 67], "one": 14, "onli": 14, "onnx": [49, 64, 148, 189, 197], "op": [101, 149, 182], "op_attr": 149, "opencl": [56, 109, 195], "openclml": [56, 67], "oper": [20, 34, 36, 58, 59, 65, 87, 123, 129, 180, 181, 187, 188, 191, 195], "optim": [44, 62, 84, 87, 88, 89, 90, 110, 111, 113, 187, 188, 189, 192, 195, 197], "option": [64, 97, 105, 106, 107, 182, 195, 198], "other": [9, 34, 43, 62, 97, 98, 99, 100, 134, 189], "output": [0, 52, 69, 73, 75, 105, 106, 107, 108, 189, 197], "overal": [2, 44, 110, 111, 113], "overload": 191, "overrid": 4, "overview": [37, 41, 44, 177, 181, 192, 193], "own": 36, "pack": [80, 90, 195], "packag": 198, "packedfunc": 5, "paddlepaddl": 50, "papi": 93, "parallel": [90, 123, 195], "paramet": [27, 115, 183, 187, 188, 189], "parametr": 79, "parser": 120, "part": 74, "particip": 9, "partit": [59, 65, 182], "pass": [4, 23, 35, 82, 84, 85], "passcontext": [4, 85], "patch": 17, "pattern": [179, 182], "perform": [44, 67, 73, 74, 96, 104, 187, 189, 195], "permut": [90, 195], "pi": 71, "pick": 17, "pickle_memo": 137, "pipelin": [113, 119], "pipelinemodul": 119, "plotter": 120, "polymorph": [179, 180], "portabl": [51, 52], "post": [17, 182, 197], "postprocess": 189, "pre": [70, 71, 72, 119, 197], "precis": [56, 67], "predict": 67, "prefil": 113, "prepar": [17, 67, 70, 71, 88, 89, 90, 110, 111, 113, 115, 195], "preprocess": 189, "prequant": [73, 74], "prerequisit": 82, "pretrain": [46, 48, 49, 50, 51, 53, 67, 68, 69, 70, 71, 73, 74], "previou": 14, "primit": [125, 195], "principl": [10, 41], "procedur": 7, "process": [11, 17, 52, 72, 197, 198], "profil": [92, 93, 165], "program": [22, 25, 84, 85, 196], "project": [10, 63, 180], "properti": 27, "proxi": 80, "prune": 75, "public": [10, 184], "pull": [10, 16], "push": 14, "put": 115, "python": [4, 8, 12, 16, 30, 34, 56, 63, 64, 79, 84, 121, 132, 142, 189, 198], "pytorch": [51, 67, 68, 72, 73, 115], "qnn": 73, "qualiti": 9, "quantiz": [73, 74], "quick": [44, 82, 193], "r": 20, "rais": 13, "random": 137, "raspberri": 71, "read": [9, 44], "readi": [73, 199], "real": 74, "recent": 14, "recommend": [9, 16, 198], "record": [96, 136, 187], "recov": 14, "recurr": 124, "recurs": 179, "reduc": [128, 129], "reduct": [31, 123, 129], "refer": [12, 130, 177, 178, 199], "regist": [35, 36, 69, 97, 99, 105, 107], "registr": 4, "relai": [34, 35, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 65, 67, 69, 72, 73, 75, 84, 85, 115, 116, 118, 119, 120, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 178, 179, 180, 181, 182, 183, 189, 193], "relat": [34, 180, 183], "relax": [2, 18, 19, 20, 21, 22, 43, 110, 113, 142, 146, 147, 148, 149, 150, 151], "relax_vm": 166, "relay_viz": 137, "releas": 17, "relu": 127, "remark": [189, 197], "remot": [5, 67, 69, 70, 71, 109, 198], "render": [120, 127], "reorder": 125, "repo": 64, "report": [7, 185], "represent": [20, 36], "reproduc": 7, "request": [9, 10, 16, 199], "requir": [47, 52, 66, 75], "reset": 14, "resnet": [65, 197], "resnet50": [50, 68], "resolv": 14, "resourc": 8, "respect": 9, "result": [49, 53, 115, 118, 121, 198], "review": [9, 11, 110, 111, 113], "rewrit": [31, 182], "risc": 62, "rocbla": 137, "rocm": [132, 137], "rotat": 7, "row": 123, "rpc": [56, 67, 69, 70, 71, 80, 97, 99, 105, 107, 109, 162], "rule": [101, 110], "run": [36, 61, 64, 66, 67, 68, 73, 75, 79, 96, 101, 109, 115, 118, 119, 187, 193, 196, 197, 198], "runtim": [2, 5, 6, 36, 47, 57, 60, 62, 65, 70, 71, 80, 109, 142, 163, 164, 165, 166, 167, 189, 195, 197], "safeti": 195, "sampl": [0, 69, 75, 105, 106, 107, 108], "save": [193, 195, 198], "savetobinari": 36, "scale": 106, "scan": 124, "schedul": [31, 89, 94, 96, 97, 98, 99, 100, 101, 122, 123, 124, 125, 127, 128, 129, 171, 187, 188, 191, 195], "scope": 89, "score": 72, "script": 178, "search": [96, 97, 98, 99, 100, 101, 104, 187, 189, 197], "secur": 185, "sequenc": 84, "sequenti": [4, 84], "serial": 3, "server": [67, 70, 71, 80, 109], "set": [65, 70, 71, 75, 97, 105, 106, 107, 108, 109, 115, 187, 189], "setup": [56, 61, 66, 69, 80], "shape": [30, 182], "shepherd": 10, "should": 39, "simpl": [118, 119], "simul": 64, "simultan": 7, "sketch": 101, "skip": 7, "softwar": 177, "sourc": [56, 131, 132], "space": 104, "spars": [75, 101, 137, 175], "special": [12, 101, 195], "specif": [5, 6, 13, 64], "sphinx": 12, "spir": 6, "spirv": 137, "split": [88, 119, 125], "stablehlo": 148, "stack": 5, "stage": [7, 124], "standard": [3, 30], "start": [42, 44, 64, 69, 93, 97, 99, 105, 107, 130, 193, 198], "state": 124, "statement": 177, "static": 30, "statist": 67, "step": [101, 104, 132, 188, 198], "stmt_functor": 172, "storag": 195, "strategi": [11, 34], "strawberri": 199, "structur": [2, 9, 20, 25, 37], "style": [8, 191], "subgraph": 119, "submit": 16, "sugar": [27, 30], "suggest": 80, "sum": 123, "summari": [2, 22, 23, 36, 79, 84, 89, 90, 109, 110, 120, 121, 123, 124, 125, 127, 128, 129, 187, 188, 191, 195], "support": [2, 58, 59, 63, 64, 65, 132, 193, 197], "synset": [46, 48, 50, 51], "syntact": 30, "syntax": [64, 180], "synthesi": 61, "system": [5, 60, 66, 80, 183], "t": 80, "tabl": [43, 44, 110, 132], "tag": 7, "tar": 137, "target": [1, 2, 57, 62, 64, 67, 79, 119, 168, 187, 189, 195, 197], "task": [96, 97, 98, 99, 100, 101, 108, 136, 187], "te": [2, 142, 169, 188, 195], "technic": 12, "tedd": 127, "tempexpr": 180, "templat": [94, 102, 188], "tensor": [0, 25, 30, 87, 89, 108, 121, 122, 127, 128, 181, 183, 195], "tensorcor": 89, "tensorflow": 52, "tensorir": [25, 26, 27, 28, 30, 196], "tensorrt": 65, "termin": [120, 198], "test": [8, 16, 34, 46, 47, 48, 49, 50, 51, 53, 67, 72, 74, 79, 115, 132, 159, 189], "tflite": [53, 73, 74], "than": 72, "thi": 119, "thread": [88, 123, 177, 195], "through": [104, 195], "tile": [31, 125], "time": [10, 24, 29, 45, 55, 77, 83, 91, 95, 103, 114, 117, 126, 186, 194], "tip": [8, 14, 97, 98, 99, 100], "tir": [2, 142, 170, 171, 172, 173, 174], "togeth": 115, "token": 113, "too": 119, "tool": 56, "topi": [2, 175, 191], "topic": 34, "torch": 148, "torchvis": [72, 73], "trace": [31, 72, 73], "tracker": [69, 80, 97, 99, 105, 107], "train": [70, 71, 72, 119], "transform": [2, 23, 31, 43, 44, 75, 82, 151, 160, 174, 176, 196], "translat": 2, "travers": 35, "troubleshoot": 80, "trust": 9, "tune": [62, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 110, 177, 188, 189, 197, 198], "tuner": [136, 188], "tupl": [129, 180, 183], "tutori": [12, 38, 52, 190, 193], "tvm": [2, 5, 7, 11, 12, 17, 32, 36, 37, 39, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 60, 62, 63, 64, 65, 67, 69, 70, 71, 73, 74, 80, 81, 84, 85, 93, 109, 115, 125, 130, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 188, 189, 192, 193, 197, 198, 199], "tvmc": [64, 68, 197, 198], "tvmscript": [22, 30, 43], "two": [119, 182], "type": [12, 13, 34, 120, 179, 180, 182, 183], "uma": 199, "under": 3, "understand": [20, 27], "unit": [34, 79], "univers": [43, 44], "untun": [189, 197], "up": [34, 46, 48, 50, 51, 70, 71, 106, 109, 115], "updat": [7, 17, 128, 195], "upload": 17, "us": [0, 7, 22, 30, 60, 64, 73, 84, 85, 89, 93, 94, 96, 106, 118, 119, 120, 121, 127, 128, 179, 187, 188, 195, 197, 198], "usag": [14, 56, 58], "user": [63, 190], "util": [53, 74, 137], "v": [6, 60, 62], "v2": [47, 59, 73], "v3": 47, "valid": [80, 132], "vanilla": 199, "variabl": [6, 30, 36, 177, 180, 182, 183], "vck190": 66, "vck5000": 66, "vector": [37, 90, 195], "verif": 119, "verifi": [115, 118, 121, 124], "versal": 66, "version": 17, "via": [43, 123], "view": 82, "virtual": 88, "vision": 161, "visitor": [35, 82], "visual": [120, 127], "viti": 66, "vlog": 32, "vm": 72, "vote": 17, "vulkan": 6, "walkthrough": 37, "websit": 17, "weight": 113, "what": [14, 18, 39], "when": 39, "where": 39, "while": 93, "why": 27, "wildcard": 182, "window": 132, "work": [116, 122, 189, 195], "workload": 101, "wrapper": 121, "write": [8, 34, 43, 82, 90, 101, 195], "x86": [100, 108], "x86_64": 64, "xcode": 137, "yolo": 47, "your": [36, 63, 199], "zip": [53, 74], "zynq": 66}})