
.. DO NOT EDIT. THIS FILE WAS AUTOMATICALLY GENERATED BY
.. TVM'S MONKEY-PATCHED VERSION OF SPHINX-GALLERY. TO MAKE
.. CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.py"

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        This tutorial can be used interactively with Google Colab! You can also click
        :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>` to run the Jupyter notebook locally.

        .. image:: https://raw.githubusercontent.com/tlc-pack/web-data/main/images/utilities/colab_button.svg
            :align: center
            :target: https://colab.research.google.com/github/apache/tvm-site/blob/asf-site/docs/_downloads/5f1f7bd7d90710fd404f7bcdc4965622/tune_conv2d_layer_cuda.ipynb
            :width: 300px

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.

.. GENERATED FROM PYTHON SOURCE LINES 39-47

.. code-block:: default


    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python








.. GENERATED FROM PYTHON SOURCE LINES 51-56

Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.

.. GENERATED FROM PYTHON SOURCE LINES 56-68

.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]









.. GENERATED FROM PYTHON SOURCE LINES 69-72

Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.

.. GENERATED FROM PYTHON SOURCE LINES 72-85

.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)





.. GENERATED FROM PYTHON SOURCE LINES 86-103

Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.

.. GENERATED FROM PYTHON SOURCE LINES 103-113

.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Get devices for measurement successfully!




.. GENERATED FROM PYTHON SOURCE LINES 114-120

Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.

.. GENERATED FROM PYTHON SOURCE LINES 120-129

.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx








.. GENERATED FROM PYTHON SOURCE LINES 130-133

We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.

.. GENERATED FROM PYTHON SOURCE LINES 133-137

.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Lowered TIR:
    # from tvm.script import ir as I
    # from tvm.script import tir as T

    @I.ir_module
    class Module:
        @T.prim_func
        def main(data: T.Buffer((1, 512, 7, 7), "float32"), kernel: T.Buffer((512, 512, 3, 3), "float32"), bias: T.Buffer((1, 512, 1, 1), "float32"), compute: T.Buffer((1, 512, 7, 7), "float32")):
            T.func_attr({"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True})
            blockIdx_x = T.launch_thread("blockIdx.x", 16)
            conv2d_nchw = T.allocate([7], "float32", "local")
            pad_temp_shared = T.allocate([2592], "float32", "shared")
            kernel_shared = T.allocate([9216], "float32", "shared")
            threadIdx_x = T.launch_thread("threadIdx.x", 224)
            conv2d_nchw_1 = T.Buffer((1,), data=conv2d_nchw, scope="local", align=4)
            conv2d_nchw_1[0] = T.float32(0)
            conv2d_nchw_1[1] = T.float32(0)
            conv2d_nchw_1[2] = T.float32(0)
            conv2d_nchw_1[3] = T.float32(0)
            conv2d_nchw_1[4] = T.float32(0)
            conv2d_nchw_1[5] = T.float32(0)
            conv2d_nchw_1[6] = T.float32(0)
            for rc_outer_outer in range(16):
                cse_var_2: T.int32 = rc_outer_outer * 1568
                cse_var_1: T.int32 = rc_outer_outer * 288
                threadIdx_x_1 = T.env_thread("threadIdx.x")
                pad_temp_shared_1 = T.Buffer((2592,), data=pad_temp_shared, scope="shared")
                data_1 = T.Buffer((25088,), data=data.data)
                with T.launch_thread(threadIdx_x_1, 224):
                    pad_temp_shared_1[threadIdx_x_1] = T.if_then_else(9 <= threadIdx_x_1 % 81 and threadIdx_x_1 % 81 < 72 and 1 <= threadIdx_x_1 % 9 and threadIdx_x_1 % 9 < 8, data_1[cse_var_2 + threadIdx_x_1 // 81 * 49 + threadIdx_x_1 % 81 // 9 * 7 + threadIdx_x_1 % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 224):
                    pad_temp_shared_1[threadIdx_x_1 + 224] = T.if_then_else(9 <= (threadIdx_x_1 + 62) % 81 and (threadIdx_x_1 + 62) % 81 < 72 and 1 <= (threadIdx_x_1 + 8) % 9 and (threadIdx_x_1 + 8) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 224) // 81 * 49 + (threadIdx_x_1 + 62) % 81 // 9 * 7 + (threadIdx_x_1 + 8) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 224):
                    pad_temp_shared_1[threadIdx_x_1 + 448] = T.if_then_else(9 <= (threadIdx_x_1 + 43) % 81 and (threadIdx_x_1 + 43) % 81 < 72 and 1 <= (threadIdx_x_1 + 7) % 9 and (threadIdx_x_1 + 7) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 448) // 81 * 49 + (threadIdx_x_1 + 43) % 81 // 9 * 7 + (threadIdx_x_1 + 7) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 224):
                    pad_temp_shared_1[threadIdx_x_1 + 672] = T.if_then_else(9 <= (threadIdx_x_1 + 24) % 81 and (threadIdx_x_1 + 24) % 81 < 72 and 1 <= (threadIdx_x_1 + 6) % 9 and (threadIdx_x_1 + 6) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 672) // 81 * 49 + (threadIdx_x_1 + 24) % 81 // 9 * 7 + (threadIdx_x_1 + 6) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 224):
                    pad_temp_shared_1[threadIdx_x_1 + 896] = T.if_then_else(9 <= (threadIdx_x_1 + 5) % 81 and (threadIdx_x_1 + 5) % 81 < 72 and 1 <= (threadIdx_x_1 + 5) % 9 and (threadIdx_x_1 + 5) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 896) // 81 * 49 + (threadIdx_x_1 + 5) % 81 // 9 * 7 + (threadIdx_x_1 + 5) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 224):
                    pad_temp_shared_1[threadIdx_x_1 + 1120] = T.if_then_else(9 <= (threadIdx_x_1 + 67) % 81 and (threadIdx_x_1 + 67) % 81 < 72 and 1 <= (threadIdx_x_1 + 4) % 9 and (threadIdx_x_1 + 4) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1120) // 81 * 49 + (threadIdx_x_1 + 67) % 81 // 9 * 7 + (threadIdx_x_1 + 4) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 224):
                    pad_temp_shared_1[threadIdx_x_1 + 1344] = T.if_then_else(9 <= (threadIdx_x_1 + 48) % 81 and (threadIdx_x_1 + 48) % 81 < 72 and 1 <= (threadIdx_x_1 + 3) % 9 and (threadIdx_x_1 + 3) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1344) // 81 * 49 + (threadIdx_x_1 + 48) % 81 // 9 * 7 + (threadIdx_x_1 + 3) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 224):
                    pad_temp_shared_1[threadIdx_x_1 + 1568] = T.if_then_else(9 <= (threadIdx_x_1 + 29) % 81 and (threadIdx_x_1 + 29) % 81 < 72 and 1 <= (threadIdx_x_1 + 2) % 9 and (threadIdx_x_1 + 2) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1568) // 81 * 49 + (threadIdx_x_1 + 29) % 81 // 9 * 7 + (threadIdx_x_1 + 2) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 224):
                    pad_temp_shared_1[threadIdx_x_1 + 1792] = T.if_then_else(9 <= (threadIdx_x_1 + 10) % 81 and (threadIdx_x_1 + 10) % 81 < 72 and 1 <= (threadIdx_x_1 + 1) % 9 and (threadIdx_x_1 + 1) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1792) // 81 * 49 + (threadIdx_x_1 + 10) % 81 // 9 * 7 + (threadIdx_x_1 + 1) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 224):
                    pad_temp_shared_1[threadIdx_x_1 + 2016] = T.if_then_else(1 <= (threadIdx_x_1 // 9 + 8) % 9 and (threadIdx_x_1 + 72) % 81 < 72 and 1 <= threadIdx_x_1 % 9 and threadIdx_x_1 % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2016) // 81 * 49 + (threadIdx_x_1 // 9 + 8) % 9 * 7 + threadIdx_x_1 % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 224):
                    pad_temp_shared_1[threadIdx_x_1 + 2240] = T.if_then_else(9 <= (threadIdx_x_1 + 53) % 81 and (threadIdx_x_1 + 53) % 81 < 72 and 1 <= (threadIdx_x_1 + 8) % 9 and (threadIdx_x_1 + 8) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2240) // 81 * 49 + (threadIdx_x_1 + 53) % 81 // 9 * 7 + (threadIdx_x_1 + 8) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 224):
                    if T.likely(threadIdx_x_1 < 128):
                        pad_temp_shared_1[threadIdx_x_1 + 2464] = T.if_then_else(9 <= (threadIdx_x_1 + 34) % 81 and (threadIdx_x_1 + 34) % 81 < 72 and 1 <= (threadIdx_x_1 + 7) % 9 and (threadIdx_x_1 + 7) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2464) // 81 * 49 + (threadIdx_x_1 + 34) % 81 // 9 * 7 + (threadIdx_x_1 + 7) % 9 - 8], T.float32(0))
                threadIdx_x_2 = T.env_thread("threadIdx.x")
                kernel_shared_1 = T.Buffer((9216,), data=kernel_shared, scope="shared")
                kernel_1 = T.Buffer((2359296,), data=kernel.data)
                with T.launch_thread(threadIdx_x_2, 224):
                    kernel_shared_1[threadIdx_x_2 * 16] = kernel_1[blockIdx_x * 147456 + threadIdx_x_2 // 18 * 4608 + cse_var_1 + threadIdx_x_2 % 18 * 16]
                    kernel_shared_1[threadIdx_x_2 * 16 + 1] = kernel_1[blockIdx_x * 147456 + threadIdx_x_2 // 18 * 4608 + cse_var_1 + threadIdx_x_2 % 18 * 16 + 1]
                    kernel_shared_1[threadIdx_x_2 * 16 + 2] = kernel_1[blockIdx_x * 147456 + threadIdx_x_2 // 18 * 4608 + cse_var_1 + threadIdx_x_2 % 18 * 16 + 2]
                    kernel_shared_1[threadIdx_x_2 * 16 + 3] = kernel_1[blockIdx_x * 147456 + threadIdx_x_2 // 18 * 4608 + cse_var_1 + threadIdx_x_2 % 18 * 16 + 3]
                    kernel_shared_1[threadIdx_x_2 * 16 + 4] = kernel_1[blockIdx_x * 147456 + threadIdx_x_2 // 18 * 4608 + cse_var_1 + threadIdx_x_2 % 18 * 16 + 4]
                    kernel_shared_1[threadIdx_x_2 * 16 + 5] = kernel_1[blockIdx_x * 147456 + threadIdx_x_2 // 18 * 4608 + cse_var_1 + threadIdx_x_2 % 18 * 16 + 5]
                    kernel_shared_1[threadIdx_x_2 * 16 + 6] = kernel_1[blockIdx_x * 147456 + threadIdx_x_2 // 18 * 4608 + cse_var_1 + threadIdx_x_2 % 18 * 16 + 6]
                    kernel_shared_1[threadIdx_x_2 * 16 + 7] = kernel_1[blockIdx_x * 147456 + threadIdx_x_2 // 18 * 4608 + cse_var_1 + threadIdx_x_2 % 18 * 16 + 7]
                    kernel_shared_1[threadIdx_x_2 * 16 + 8] = kernel_1[blockIdx_x * 147456 + threadIdx_x_2 // 18 * 4608 + cse_var_1 + threadIdx_x_2 % 18 * 16 + 8]
                    kernel_shared_1[threadIdx_x_2 * 16 + 9] = kernel_1[blockIdx_x * 147456 + threadIdx_x_2 // 18 * 4608 + cse_var_1 + threadIdx_x_2 % 18 * 16 + 9]
                    kernel_shared_1[threadIdx_x_2 * 16 + 10] = kernel_1[blockIdx_x * 147456 + threadIdx_x_2 // 18 * 4608 + cse_var_1 + threadIdx_x_2 % 18 * 16 + 10]
                    kernel_shared_1[threadIdx_x_2 * 16 + 11] = kernel_1[blockIdx_x * 147456 + threadIdx_x_2 // 18 * 4608 + cse_var_1 + threadIdx_x_2 % 18 * 16 + 11]
                    kernel_shared_1[threadIdx_x_2 * 16 + 12] = kernel_1[blockIdx_x * 147456 + threadIdx_x_2 // 18 * 4608 + cse_var_1 + threadIdx_x_2 % 18 * 16 + 12]
                    kernel_shared_1[threadIdx_x_2 * 16 + 13] = kernel_1[blockIdx_x * 147456 + threadIdx_x_2 // 18 * 4608 + cse_var_1 + threadIdx_x_2 % 18 * 16 + 13]
                    kernel_shared_1[threadIdx_x_2 * 16 + 14] = kernel_1[blockIdx_x * 147456 + threadIdx_x_2 // 18 * 4608 + cse_var_1 + threadIdx_x_2 % 18 * 16 + 14]
                    kernel_shared_1[threadIdx_x_2 * 16 + 15] = kernel_1[blockIdx_x * 147456 + threadIdx_x_2 // 18 * 4608 + cse_var_1 + threadIdx_x_2 % 18 * 16 + 15]
                with T.launch_thread(threadIdx_x_2, 224):
                    kernel_shared_1[threadIdx_x_2 * 16 + 3584] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 224) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 128) % 288]
                    kernel_shared_1[threadIdx_x_2 * 16 + 3585] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 224) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 129) % 288]
                    kernel_shared_1[threadIdx_x_2 * 16 + 3586] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 224) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 130) % 288]
                    kernel_shared_1[threadIdx_x_2 * 16 + 3587] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 224) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 131) % 288]
                    kernel_shared_1[threadIdx_x_2 * 16 + 3588] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 224) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 132) % 288]
                    kernel_shared_1[threadIdx_x_2 * 16 + 3589] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 224) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 133) % 288]
                    kernel_shared_1[threadIdx_x_2 * 16 + 3590] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 224) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 134) % 288]
                    kernel_shared_1[threadIdx_x_2 * 16 + 3591] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 224) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 135) % 288]
                    kernel_shared_1[threadIdx_x_2 * 16 + 3592] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 224) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 136) % 288]
                    kernel_shared_1[threadIdx_x_2 * 16 + 3593] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 224) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 137) % 288]
                    kernel_shared_1[threadIdx_x_2 * 16 + 3594] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 224) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 138) % 288]
                    kernel_shared_1[threadIdx_x_2 * 16 + 3595] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 224) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 139) % 288]
                    kernel_shared_1[threadIdx_x_2 * 16 + 3596] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 224) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 140) % 288]
                    kernel_shared_1[threadIdx_x_2 * 16 + 3597] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 224) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 141) % 288]
                    kernel_shared_1[threadIdx_x_2 * 16 + 3598] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 224) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 142) % 288]
                    kernel_shared_1[threadIdx_x_2 * 16 + 3599] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 224) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 143) % 288]
                with T.launch_thread(threadIdx_x_2, 224):
                    if T.likely(threadIdx_x_2 < 128):
                        kernel_shared_1[threadIdx_x_2 * 16 + 7168] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 448) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 256) % 288]
                    if T.likely(threadIdx_x_2 < 128):
                        kernel_shared_1[threadIdx_x_2 * 16 + 7169] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 448) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 257) % 288]
                    if T.likely(threadIdx_x_2 < 128):
                        kernel_shared_1[threadIdx_x_2 * 16 + 7170] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 448) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 258) % 288]
                    if T.likely(threadIdx_x_2 < 128):
                        kernel_shared_1[threadIdx_x_2 * 16 + 7171] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 448) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 259) % 288]
                    if T.likely(threadIdx_x_2 < 128):
                        kernel_shared_1[threadIdx_x_2 * 16 + 7172] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 448) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 260) % 288]
                    if T.likely(threadIdx_x_2 < 128):
                        kernel_shared_1[threadIdx_x_2 * 16 + 7173] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 448) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 261) % 288]
                    if T.likely(threadIdx_x_2 < 128):
                        kernel_shared_1[threadIdx_x_2 * 16 + 7174] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 448) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 262) % 288]
                    if T.likely(threadIdx_x_2 < 128):
                        kernel_shared_1[threadIdx_x_2 * 16 + 7175] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 448) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 263) % 288]
                    if T.likely(threadIdx_x_2 < 128):
                        kernel_shared_1[threadIdx_x_2 * 16 + 7176] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 448) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 264) % 288]
                    if T.likely(threadIdx_x_2 < 128):
                        kernel_shared_1[threadIdx_x_2 * 16 + 7177] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 448) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 265) % 288]
                    if T.likely(threadIdx_x_2 < 128):
                        kernel_shared_1[threadIdx_x_2 * 16 + 7178] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 448) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 266) % 288]
                    if T.likely(threadIdx_x_2 < 128):
                        kernel_shared_1[threadIdx_x_2 * 16 + 7179] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 448) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 267) % 288]
                    if T.likely(threadIdx_x_2 < 128):
                        kernel_shared_1[threadIdx_x_2 * 16 + 7180] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 448) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 268) % 288]
                    if T.likely(threadIdx_x_2 < 128):
                        kernel_shared_1[threadIdx_x_2 * 16 + 7181] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 448) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 269) % 288]
                    if T.likely(threadIdx_x_2 < 128):
                        kernel_shared_1[threadIdx_x_2 * 16 + 7182] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 448) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 270) % 288]
                    if T.likely(threadIdx_x_2 < 128):
                        kernel_shared_1[threadIdx_x_2 * 16 + 7183] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 448) // 18 * 4608 + cse_var_1 + (threadIdx_x_2 * 16 + 271) % 288]
                for rc_outer_inner, rx_outer_inner in T.grid(2, 3):
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 27] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 36] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 45] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 54] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 3]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 3]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 27] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 3]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 36] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 3]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 45] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 3]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 54] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 3]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 63] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 3]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 6]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 27] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 6]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 36] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 6]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 45] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 6]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 54] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 6]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 63] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 6]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 72] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 6]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 9]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 9]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 9]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 108] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 9]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 117] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 9]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 126] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 9]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 135] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 9]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 12]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 12]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 108] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 12]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 117] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 12]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 126] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 12]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 135] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 12]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 144] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 12]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 15]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 108] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 15]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 117] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 15]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 126] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 15]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 135] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 15]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 144] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 15]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 153] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 15]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 162] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 18]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 171] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 18]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 180] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 18]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 189] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 18]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 198] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 18]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 207] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 18]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 216] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 18]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 171] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 21]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 180] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 21]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 189] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 21]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 198] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 21]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 207] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 21]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 216] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 21]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 225] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 21]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 180] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 24]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 189] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 24]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 198] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 24]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 207] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 24]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 216] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 24]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 225] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 24]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 234] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 24]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 243] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 27]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 252] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 27]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 261] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 27]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 270] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 27]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 279] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 27]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 288] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 27]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 297] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 27]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 252] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 30]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 261] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 30]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 270] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 30]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 279] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 30]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 288] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 30]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 297] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 30]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 306] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 30]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 261] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 33]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 270] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 33]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 279] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 33]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 288] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 33]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 297] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 33]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 306] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 33]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 315] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 33]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 324] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 36]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 333] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 36]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 342] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 36]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 351] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 36]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 360] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 36]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 369] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 36]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 378] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 36]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 333] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 39]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 342] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 39]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 351] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 39]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 360] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 39]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 369] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 39]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 378] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 39]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 387] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 39]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 342] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 42]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 351] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 42]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 360] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 42]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 369] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 42]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 378] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 42]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 387] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 42]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 396] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 42]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 405] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 45]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 414] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 45]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 423] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 45]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 432] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 45]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 441] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 45]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 450] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 45]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 459] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 45]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 414] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 48]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 423] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 48]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 432] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 48]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 441] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 48]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 450] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 48]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 459] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 48]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 468] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 48]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 423] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 51]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 432] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 51]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 441] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 51]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 450] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 51]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 459] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 51]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 468] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 51]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 477] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 51]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 486] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 54]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 495] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 54]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 504] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 54]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 513] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 54]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 522] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 54]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 531] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 54]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 540] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 54]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 495] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 57]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 504] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 57]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 513] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 57]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 522] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 57]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 531] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 57]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 540] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 57]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 549] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 57]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 504] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 60]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 513] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 60]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 522] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 60]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 531] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 60]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 540] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 60]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 549] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 60]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 558] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 60]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 567] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 63]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 576] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 63]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 585] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 63]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 594] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 63]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 603] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 63]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 612] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 63]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 621] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 63]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 576] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 66]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 585] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 66]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 594] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 66]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 603] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 66]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 612] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 66]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 621] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 66]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 630] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 66]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 585] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 69]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 594] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 69]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 603] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 69]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 612] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 69]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 621] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 69]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 630] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 69]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 639] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 69]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 648] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 72]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 657] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 72]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 666] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 72]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 675] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 72]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 684] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 72]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 693] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 72]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 702] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 72]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 657] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 75]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 666] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 75]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 675] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 75]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 684] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 75]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 693] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 75]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 702] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 75]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 711] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 75]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 666] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 78]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 675] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 78]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 684] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 78]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 693] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 78]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 702] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 78]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 711] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 78]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 720] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 78]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 729] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 81]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 738] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 81]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 747] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 81]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 756] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 81]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 765] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 81]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 774] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 81]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 783] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 81]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 738] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 84]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 747] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 84]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 756] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 84]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 765] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 84]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 774] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 84]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 783] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 84]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 792] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 84]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 747] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 87]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 756] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 87]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 765] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 87]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 774] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 87]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 783] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 87]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 792] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 87]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 801] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 87]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 810] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 90]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 819] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 90]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 828] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 90]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 837] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 90]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 846] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 90]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 855] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 90]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 864] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 90]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 819] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 93]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 828] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 93]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 837] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 93]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 846] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 93]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 855] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 93]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 864] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 93]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 873] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 93]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 828] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 96]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 837] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 96]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 846] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 96]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 855] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 96]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 864] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 96]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 873] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 96]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 882] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 96]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 891] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 99]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 900] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 99]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 909] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 99]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 918] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 99]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 927] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 99]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 936] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 99]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 945] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 99]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 900] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 102]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 909] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 102]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 918] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 102]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 927] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 102]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 936] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 102]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 945] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 102]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 954] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 102]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 909] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 105]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 918] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 105]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 927] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 105]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 936] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 105]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 945] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 105]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 954] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 105]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 963] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 105]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 972] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 108]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 981] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 108]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 990] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 108]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 999] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 108]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1008] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 108]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1017] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 108]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1026] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 108]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 981] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 111]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 990] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 111]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 999] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 111]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1008] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 111]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1017] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 111]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1026] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 111]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1035] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 111]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 990] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 114]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 999] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 114]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1008] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 114]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1017] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 114]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1026] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 114]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1035] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 114]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1044] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 114]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1053] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 117]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1062] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 117]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1071] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 117]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1080] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 117]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1089] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 117]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1098] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 117]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1107] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 117]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1062] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 120]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1071] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 120]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1080] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 120]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1089] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 120]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1098] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 120]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1107] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 120]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1116] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 120]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1071] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 123]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1080] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 123]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1089] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 123]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1098] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 123]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1107] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 123]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1116] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 123]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1125] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 123]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1134] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 126]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1143] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 126]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1152] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 126]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1161] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 126]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1170] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 126]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1179] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 126]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1188] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 126]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1143] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 129]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1152] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 129]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1161] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 129]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1170] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 129]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1179] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 129]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1188] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 129]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1197] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 129]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1152] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 132]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1161] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 132]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1170] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 132]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1179] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 132]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1188] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 132]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1197] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 132]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1206] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 132]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1215] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 135]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1224] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 135]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1233] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 135]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1242] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 135]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1251] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 135]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1260] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 135]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1269] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 135]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1224] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 138]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1233] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 138]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1242] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 138]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1251] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 138]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1260] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 138]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1269] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 138]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1278] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 138]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1233] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 141]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1242] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 141]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1251] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 141]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1260] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 141]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1269] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 141]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1278] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 141]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 1296 + rx_outer_inner + threadIdx_x % 7 + 1287] * kernel_shared_1[threadIdx_x // 7 * 288 + rc_outer_inner * 144 + rx_outer_inner + 141]
            compute_1 = T.Buffer((25088,), data=compute.data)
            bias_1 = T.Buffer((512,), data=bias.data)
            compute_1[blockIdx_x * 1568 + threadIdx_x // 7 * 49 + threadIdx_x % 7] = T.max(conv2d_nchw_1[0] + bias_1[blockIdx_x * 32 + threadIdx_x // 7], T.float32(0))
            compute_1[blockIdx_x * 1568 + threadIdx_x // 7 * 49 + threadIdx_x % 7 + 7] = T.max(conv2d_nchw_1[1] + bias_1[blockIdx_x * 32 + threadIdx_x // 7], T.float32(0))
            compute_1[blockIdx_x * 1568 + threadIdx_x // 7 * 49 + threadIdx_x % 7 + 14] = T.max(conv2d_nchw_1[2] + bias_1[blockIdx_x * 32 + threadIdx_x // 7], T.float32(0))
            compute_1[blockIdx_x * 1568 + threadIdx_x // 7 * 49 + threadIdx_x % 7 + 21] = T.max(conv2d_nchw_1[3] + bias_1[blockIdx_x * 32 + threadIdx_x // 7], T.float32(0))
            compute_1[blockIdx_x * 1568 + threadIdx_x // 7 * 49 + threadIdx_x % 7 + 28] = T.max(conv2d_nchw_1[4] + bias_1[blockIdx_x * 32 + threadIdx_x // 7], T.float32(0))
            compute_1[blockIdx_x * 1568 + threadIdx_x // 7 * 49 + threadIdx_x % 7 + 35] = T.max(conv2d_nchw_1[5] + bias_1[blockIdx_x * 32 + threadIdx_x // 7], T.float32(0))
            compute_1[blockIdx_x * 1568 + threadIdx_x // 7 * 49 + threadIdx_x % 7 + 42] = T.max(conv2d_nchw_1[6] + bias_1[blockIdx_x * 32 + threadIdx_x // 7], T.float32(0))




.. GENERATED FROM PYTHON SOURCE LINES 138-141

Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.

.. GENERATED FROM PYTHON SOURCE LINES 141-168

.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Execution time of this operator: 0.235 ms




.. GENERATED FROM PYTHON SOURCE LINES 169-174

Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

.. GENERATED FROM PYTHON SOURCE LINES 176-179

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.

.. GENERATED FROM PYTHON SOURCE LINES 179-186

.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=1)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=32)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=1)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=7)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=7)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=16)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=2)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=3)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=1)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=1)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=3)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=1)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=32)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=1)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=1)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=7)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=7)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=16)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=224)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=224)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 512)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(224) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[7];
      __shared__ float pad_temp_shared[2592];
      __shared__ float kernel_shared[9216];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 16; ++rc_outer_outer) {
        __syncthreads();
        pad_temp_shared[((int)threadIdx.x)] = (((((9 <= (((int)threadIdx.x) % 81)) && ((((int)threadIdx.x) % 81) < 72)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + ((((int)threadIdx.x) / 81) * 49)) + (((((int)threadIdx.x) % 81) / 9) * 7)) + (((int)threadIdx.x) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 224)] = (((((9 <= ((((int)threadIdx.x) + 62) % 81)) && (((((int)threadIdx.x) + 62) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 224) / 81) * 49)) + ((((((int)threadIdx.x) + 62) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 448)] = (((((9 <= ((((int)threadIdx.x) + 43) % 81)) && (((((int)threadIdx.x) + 43) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 448) / 81) * 49)) + ((((((int)threadIdx.x) + 43) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 672)] = (((((9 <= ((((int)threadIdx.x) + 24) % 81)) && (((((int)threadIdx.x) + 24) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 672) / 81) * 49)) + ((((((int)threadIdx.x) + 24) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 896)] = (((((9 <= ((((int)threadIdx.x) + 5) % 81)) && (((((int)threadIdx.x) + 5) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 896) / 81) * 49)) + ((((((int)threadIdx.x) + 5) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1120)] = (((((9 <= ((((int)threadIdx.x) + 67) % 81)) && (((((int)threadIdx.x) + 67) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1120) / 81) * 49)) + ((((((int)threadIdx.x) + 67) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1344)] = (((((9 <= ((((int)threadIdx.x) + 48) % 81)) && (((((int)threadIdx.x) + 48) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1344) / 81) * 49)) + ((((((int)threadIdx.x) + 48) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1568)] = (((((9 <= ((((int)threadIdx.x) + 29) % 81)) && (((((int)threadIdx.x) + 29) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1568) / 81) * 49)) + ((((((int)threadIdx.x) + 29) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1792)] = (((((9 <= ((((int)threadIdx.x) + 10) % 81)) && (((((int)threadIdx.x) + 10) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1792) / 81) * 49)) + ((((((int)threadIdx.x) + 10) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 2016)] = (((((1 <= (((((int)threadIdx.x) / 9) + 8) % 9)) && (((((int)threadIdx.x) + 72) % 81) < 72)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 2016) / 81) * 49)) + ((((((int)threadIdx.x) / 9) + 8) % 9) * 7)) + (((int)threadIdx.x) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 2240)] = (((((9 <= ((((int)threadIdx.x) + 53) % 81)) && (((((int)threadIdx.x) + 53) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 2240) / 81) * 49)) + ((((((int)threadIdx.x) + 53) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
        if (((int)threadIdx.x) < 128) {
          pad_temp_shared[(((int)threadIdx.x) + 2464)] = (((((9 <= ((((int)threadIdx.x) + 34) % 81)) && (((((int)threadIdx.x) + 34) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 2464) / 81) * 49)) + ((((((int)threadIdx.x) + 34) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
        }
        kernel_shared[(((int)threadIdx.x) * 16)] = kernel[((((((int)blockIdx.x) * 147456) + ((((int)threadIdx.x) / 18) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) % 18) * 16))];
        kernel_shared[((((int)threadIdx.x) * 16) + 1)] = kernel[(((((((int)blockIdx.x) * 147456) + ((((int)threadIdx.x) / 18) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) % 18) * 16)) + 1)];
        kernel_shared[((((int)threadIdx.x) * 16) + 2)] = kernel[(((((((int)blockIdx.x) * 147456) + ((((int)threadIdx.x) / 18) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) % 18) * 16)) + 2)];
        kernel_shared[((((int)threadIdx.x) * 16) + 3)] = kernel[(((((((int)blockIdx.x) * 147456) + ((((int)threadIdx.x) / 18) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) % 18) * 16)) + 3)];
        kernel_shared[((((int)threadIdx.x) * 16) + 4)] = kernel[(((((((int)blockIdx.x) * 147456) + ((((int)threadIdx.x) / 18) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) % 18) * 16)) + 4)];
        kernel_shared[((((int)threadIdx.x) * 16) + 5)] = kernel[(((((((int)blockIdx.x) * 147456) + ((((int)threadIdx.x) / 18) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) % 18) * 16)) + 5)];
        kernel_shared[((((int)threadIdx.x) * 16) + 6)] = kernel[(((((((int)blockIdx.x) * 147456) + ((((int)threadIdx.x) / 18) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) % 18) * 16)) + 6)];
        kernel_shared[((((int)threadIdx.x) * 16) + 7)] = kernel[(((((((int)blockIdx.x) * 147456) + ((((int)threadIdx.x) / 18) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) % 18) * 16)) + 7)];
        kernel_shared[((((int)threadIdx.x) * 16) + 8)] = kernel[(((((((int)blockIdx.x) * 147456) + ((((int)threadIdx.x) / 18) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) % 18) * 16)) + 8)];
        kernel_shared[((((int)threadIdx.x) * 16) + 9)] = kernel[(((((((int)blockIdx.x) * 147456) + ((((int)threadIdx.x) / 18) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) % 18) * 16)) + 9)];
        kernel_shared[((((int)threadIdx.x) * 16) + 10)] = kernel[(((((((int)blockIdx.x) * 147456) + ((((int)threadIdx.x) / 18) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) % 18) * 16)) + 10)];
        kernel_shared[((((int)threadIdx.x) * 16) + 11)] = kernel[(((((((int)blockIdx.x) * 147456) + ((((int)threadIdx.x) / 18) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) % 18) * 16)) + 11)];
        kernel_shared[((((int)threadIdx.x) * 16) + 12)] = kernel[(((((((int)blockIdx.x) * 147456) + ((((int)threadIdx.x) / 18) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) % 18) * 16)) + 12)];
        kernel_shared[((((int)threadIdx.x) * 16) + 13)] = kernel[(((((((int)blockIdx.x) * 147456) + ((((int)threadIdx.x) / 18) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) % 18) * 16)) + 13)];
        kernel_shared[((((int)threadIdx.x) * 16) + 14)] = kernel[(((((((int)blockIdx.x) * 147456) + ((((int)threadIdx.x) / 18) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) % 18) * 16)) + 14)];
        kernel_shared[((((int)threadIdx.x) * 16) + 15)] = kernel[(((((((int)blockIdx.x) * 147456) + ((((int)threadIdx.x) / 18) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) % 18) * 16)) + 15)];
        kernel_shared[((((int)threadIdx.x) * 16) + 3584)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 224) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 128) % 288))];
        kernel_shared[((((int)threadIdx.x) * 16) + 3585)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 224) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 129) % 288))];
        kernel_shared[((((int)threadIdx.x) * 16) + 3586)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 224) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 130) % 288))];
        kernel_shared[((((int)threadIdx.x) * 16) + 3587)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 224) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 131) % 288))];
        kernel_shared[((((int)threadIdx.x) * 16) + 3588)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 224) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 132) % 288))];
        kernel_shared[((((int)threadIdx.x) * 16) + 3589)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 224) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 133) % 288))];
        kernel_shared[((((int)threadIdx.x) * 16) + 3590)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 224) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 134) % 288))];
        kernel_shared[((((int)threadIdx.x) * 16) + 3591)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 224) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 135) % 288))];
        kernel_shared[((((int)threadIdx.x) * 16) + 3592)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 224) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 136) % 288))];
        kernel_shared[((((int)threadIdx.x) * 16) + 3593)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 224) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 137) % 288))];
        kernel_shared[((((int)threadIdx.x) * 16) + 3594)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 224) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 138) % 288))];
        kernel_shared[((((int)threadIdx.x) * 16) + 3595)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 224) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 139) % 288))];
        kernel_shared[((((int)threadIdx.x) * 16) + 3596)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 224) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 140) % 288))];
        kernel_shared[((((int)threadIdx.x) * 16) + 3597)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 224) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 141) % 288))];
        kernel_shared[((((int)threadIdx.x) * 16) + 3598)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 224) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 142) % 288))];
        kernel_shared[((((int)threadIdx.x) * 16) + 3599)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 224) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 143) % 288))];
        if (((int)threadIdx.x) < 128) {
          kernel_shared[((((int)threadIdx.x) * 16) + 7168)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 448) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 256) % 288))];
        }
        if (((int)threadIdx.x) < 128) {
          kernel_shared[((((int)threadIdx.x) * 16) + 7169)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 448) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 257) % 288))];
        }
        if (((int)threadIdx.x) < 128) {
          kernel_shared[((((int)threadIdx.x) * 16) + 7170)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 448) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 258) % 288))];
        }
        if (((int)threadIdx.x) < 128) {
          kernel_shared[((((int)threadIdx.x) * 16) + 7171)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 448) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 259) % 288))];
        }
        if (((int)threadIdx.x) < 128) {
          kernel_shared[((((int)threadIdx.x) * 16) + 7172)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 448) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 260) % 288))];
        }
        if (((int)threadIdx.x) < 128) {
          kernel_shared[((((int)threadIdx.x) * 16) + 7173)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 448) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 261) % 288))];
        }
        if (((int)threadIdx.x) < 128) {
          kernel_shared[((((int)threadIdx.x) * 16) + 7174)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 448) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 262) % 288))];
        }
        if (((int)threadIdx.x) < 128) {
          kernel_shared[((((int)threadIdx.x) * 16) + 7175)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 448) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 263) % 288))];
        }
        if (((int)threadIdx.x) < 128) {
          kernel_shared[((((int)threadIdx.x) * 16) + 7176)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 448) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 264) % 288))];
        }
        if (((int)threadIdx.x) < 128) {
          kernel_shared[((((int)threadIdx.x) * 16) + 7177)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 448) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 265) % 288))];
        }
        if (((int)threadIdx.x) < 128) {
          kernel_shared[((((int)threadIdx.x) * 16) + 7178)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 448) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 266) % 288))];
        }
        if (((int)threadIdx.x) < 128) {
          kernel_shared[((((int)threadIdx.x) * 16) + 7179)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 448) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 267) % 288))];
        }
        if (((int)threadIdx.x) < 128) {
          kernel_shared[((((int)threadIdx.x) * 16) + 7180)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 448) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 268) % 288))];
        }
        if (((int)threadIdx.x) < 128) {
          kernel_shared[((((int)threadIdx.x) * 16) + 7181)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 448) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 269) % 288))];
        }
        if (((int)threadIdx.x) < 128) {
          kernel_shared[((((int)threadIdx.x) * 16) + 7182)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 448) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 270) % 288))];
        }
        if (((int)threadIdx.x) < 128) {
          kernel_shared[((((int)threadIdx.x) * 16) + 7183)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 448) / 18) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) * 16) + 271) % 288))];
        }
        __syncthreads();
        for (int rc_outer_inner = 0; rc_outer_inner < 2; ++rc_outer_inner) {
          for (int rx_outer_inner = 0; rx_outer_inner < 3; ++rx_outer_inner) {
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 27)] * kernel_shared[((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 36)] * kernel_shared[((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 45)] * kernel_shared[((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 54)] * kernel_shared[((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 3)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 3)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 27)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 3)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 36)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 3)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 45)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 3)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 54)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 3)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 63)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 3)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 6)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 27)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 6)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 36)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 6)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 45)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 6)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 54)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 6)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 63)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 6)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 72)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 6)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 9)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 9)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 9)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 108)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 9)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 117)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 9)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 126)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 9)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 135)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 9)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 12)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 12)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 108)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 12)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 117)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 12)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 126)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 12)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 135)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 12)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 144)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 12)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 15)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 108)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 15)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 117)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 15)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 126)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 15)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 135)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 15)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 144)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 15)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 153)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 15)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 18)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 18)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 18)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 189)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 18)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 198)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 18)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 207)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 18)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 216)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 18)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 21)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 21)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 189)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 21)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 198)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 21)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 207)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 21)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 216)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 21)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 225)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 21)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 24)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 189)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 24)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 198)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 24)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 207)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 24)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 216)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 24)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 225)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 24)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 234)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 24)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 27)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 27)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 27)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 270)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 27)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 279)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 27)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 288)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 27)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 297)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 27)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 30)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 30)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 270)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 30)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 279)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 30)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 288)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 30)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 297)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 30)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 306)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 30)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 33)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 270)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 33)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 279)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 33)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 288)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 33)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 297)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 33)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 306)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 33)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 315)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 33)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 36)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 36)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 36)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 351)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 36)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 360)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 36)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 369)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 36)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 378)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 36)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 39)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 39)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 351)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 39)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 360)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 39)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 369)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 39)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 378)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 39)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 387)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 39)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 42)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 351)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 42)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 360)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 42)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 369)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 42)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 378)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 42)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 387)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 42)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 396)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 42)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 45)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 45)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 45)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 432)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 45)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 441)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 45)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 450)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 45)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 459)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 45)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 48)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 48)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 432)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 48)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 441)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 48)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 450)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 48)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 459)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 48)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 468)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 48)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 51)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 432)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 51)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 441)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 51)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 450)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 51)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 459)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 51)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 468)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 51)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 477)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 51)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 54)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 54)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 54)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 513)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 54)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 522)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 54)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 531)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 54)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 540)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 54)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 57)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 57)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 513)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 57)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 522)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 57)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 531)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 57)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 540)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 57)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 549)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 57)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 60)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 513)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 60)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 522)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 60)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 531)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 60)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 540)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 60)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 549)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 60)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 558)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 60)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 63)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 576)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 63)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 63)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 594)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 63)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 603)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 63)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 612)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 63)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 621)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 63)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 576)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 66)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 66)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 594)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 66)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 603)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 66)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 612)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 66)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 621)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 66)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 630)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 66)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 69)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 594)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 69)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 603)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 69)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 612)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 69)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 621)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 69)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 630)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 69)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 639)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 69)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 648)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 72)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 657)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 72)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 666)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 72)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 675)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 72)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 684)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 72)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 693)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 72)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 702)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 72)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 657)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 75)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 666)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 75)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 675)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 75)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 684)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 75)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 693)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 75)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 702)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 75)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 711)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 75)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 666)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 78)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 675)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 78)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 684)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 78)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 693)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 78)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 702)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 78)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 711)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 78)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 720)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 78)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 729)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 81)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 738)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 81)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 747)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 81)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 756)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 81)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 765)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 81)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 774)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 81)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 783)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 81)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 738)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 84)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 747)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 84)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 756)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 84)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 765)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 84)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 774)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 84)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 783)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 84)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 792)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 84)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 747)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 87)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 756)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 87)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 765)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 87)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 774)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 87)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 783)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 87)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 792)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 87)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 801)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 87)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 810)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 90)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 90)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 828)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 90)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 837)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 90)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 846)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 90)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 855)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 90)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 864)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 90)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 93)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 828)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 93)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 837)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 93)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 846)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 93)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 855)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 93)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 864)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 93)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 873)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 93)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 828)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 96)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 837)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 96)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 846)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 96)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 855)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 96)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 864)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 96)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 873)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 96)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 882)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 96)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 891)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 99)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 900)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 99)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 909)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 99)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 918)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 99)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 927)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 99)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 936)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 99)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 945)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 99)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 900)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 102)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 909)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 102)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 918)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 102)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 927)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 102)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 936)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 102)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 945)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 102)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 954)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 102)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 909)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 105)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 918)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 105)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 927)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 105)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 936)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 105)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 945)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 105)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 954)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 105)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 963)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 105)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 972)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 108)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 981)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 108)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 990)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 108)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 999)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 108)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1008)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 108)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1017)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 108)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1026)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 108)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 981)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 111)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 990)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 111)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 999)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 111)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1008)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 111)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1017)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 111)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1026)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 111)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1035)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 111)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 990)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 114)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 999)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 114)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1008)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 114)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1017)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 114)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1026)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 114)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1035)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 114)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1044)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 114)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1053)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 117)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1062)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 117)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1071)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 117)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1080)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 117)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1089)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 117)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1098)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 117)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1107)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 117)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1062)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 120)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1071)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 120)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1080)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 120)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1089)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 120)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1098)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 120)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1107)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 120)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1116)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 120)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1071)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 123)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1080)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 123)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1089)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 123)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1098)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 123)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1107)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 123)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1116)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 123)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1125)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 123)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1134)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 126)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1143)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 126)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1152)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 126)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1161)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 126)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1170)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 126)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1179)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 126)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1188)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 126)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1143)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 129)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1152)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 129)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1161)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 129)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1170)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 129)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1179)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 129)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1188)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 129)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1197)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 129)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1152)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 132)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1161)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 132)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1170)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 132)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1179)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 132)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1188)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 132)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1197)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 132)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1206)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 132)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1215)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 135)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1224)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 135)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1233)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 135)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1242)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 135)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1251)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 135)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1260)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 135)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1269)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 135)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1224)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 138)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1233)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 138)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1242)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 138)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1251)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 138)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1260)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 138)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1269)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 138)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1278)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 138)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1233)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 141)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1242)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 141)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1251)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 141)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1260)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 141)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1269)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 141)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1278)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 141)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1296) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1287)] * kernel_shared[(((((((int)threadIdx.x) / 7) * 288) + (rc_outer_inner * 144)) + rx_outer_inner) + 141)]));
          }
        }
      }
      compute[(((((int)blockIdx.x) * 1568) + ((((int)threadIdx.x) / 7) * 49)) + (((int)threadIdx.x) % 7))] = max((conv2d_nchw[0] + bias[((((int)blockIdx.x) * 32) + (((int)threadIdx.x) / 7))]), 0.000000e+00f);
      compute[((((((int)blockIdx.x) * 1568) + ((((int)threadIdx.x) / 7) * 49)) + (((int)threadIdx.x) % 7)) + 7)] = max((conv2d_nchw[1] + bias[((((int)blockIdx.x) * 32) + (((int)threadIdx.x) / 7))]), 0.000000e+00f);
      compute[((((((int)blockIdx.x) * 1568) + ((((int)threadIdx.x) / 7) * 49)) + (((int)threadIdx.x) % 7)) + 14)] = max((conv2d_nchw[2] + bias[((((int)blockIdx.x) * 32) + (((int)threadIdx.x) / 7))]), 0.000000e+00f);
      compute[((((((int)blockIdx.x) * 1568) + ((((int)threadIdx.x) / 7) * 49)) + (((int)threadIdx.x) % 7)) + 21)] = max((conv2d_nchw[3] + bias[((((int)blockIdx.x) * 32) + (((int)threadIdx.x) / 7))]), 0.000000e+00f);
      compute[((((((int)blockIdx.x) * 1568) + ((((int)threadIdx.x) / 7) * 49)) + (((int)threadIdx.x) % 7)) + 28)] = max((conv2d_nchw[4] + bias[((((int)blockIdx.x) * 32) + (((int)threadIdx.x) / 7))]), 0.000000e+00f);
      compute[((((((int)blockIdx.x) * 1568) + ((((int)threadIdx.x) / 7) * 49)) + (((int)threadIdx.x) % 7)) + 35)] = max((conv2d_nchw[5] + bias[((((int)blockIdx.x) * 32) + (((int)threadIdx.x) / 7))]), 0.000000e+00f);
      compute[((((((int)blockIdx.x) * 1568) + ((((int)threadIdx.x) / 7) * 49)) + (((int)threadIdx.x) % 7)) + 42)] = max((conv2d_nchw[6] + bias[((((int)blockIdx.x) * 32) + (((int)threadIdx.x) / 7))]), 0.000000e+00f);
    }






.. GENERATED FROM PYTHON SOURCE LINES 187-191

A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.

.. GENERATED FROM PYTHON SOURCE LINES 191-213

.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Resume search:
    Get devices for measurement successfully!






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 6 minutes  2.332 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
