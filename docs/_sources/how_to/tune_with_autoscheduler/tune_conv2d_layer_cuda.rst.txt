
.. DO NOT EDIT. THIS FILE WAS AUTOMATICALLY GENERATED BY
.. TVM'S MONKEY-PATCHED VERSION OF SPHINX-GALLERY. TO MAKE
.. CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.py"

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        This tutorial can be used interactively with Google Colab! You can also click
        :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>` to run the Jupyter notebook locally.

        .. image:: https://raw.githubusercontent.com/tlc-pack/web-data/main/images/utilities/colab_button.svg
            :align: center
            :target: https://colab.research.google.com/github/apache/tvm-site/blob/asf-site/docs/_downloads/5f1f7bd7d90710fd404f7bcdc4965622/tune_conv2d_layer_cuda.ipynb
            :width: 300px

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.

.. GENERATED FROM PYTHON SOURCE LINES 39-47

.. code-block:: default


    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python








.. GENERATED FROM PYTHON SOURCE LINES 51-56

Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.

.. GENERATED FROM PYTHON SOURCE LINES 56-68

.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]









.. GENERATED FROM PYTHON SOURCE LINES 69-72

Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.

.. GENERATED FROM PYTHON SOURCE LINES 72-85

.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)





.. GENERATED FROM PYTHON SOURCE LINES 86-103

Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.

.. GENERATED FROM PYTHON SOURCE LINES 103-113

.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Get devices for measurement successfully!




.. GENERATED FROM PYTHON SOURCE LINES 114-120

Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.

.. GENERATED FROM PYTHON SOURCE LINES 120-129

.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx








.. GENERATED FROM PYTHON SOURCE LINES 130-133

We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.

.. GENERATED FROM PYTHON SOURCE LINES 133-137

.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Lowered TIR:
    @I.ir_module
    class Module:
        @T.prim_func
        def main(data: T.Buffer((1, 512, 7, 7), "float32"), kernel: T.Buffer((512, 512, 3, 3), "float32"), bias: T.Buffer((1, 512, 1, 1), "float32"), compute: T.Buffer((1, 512, 7, 7), "float32")):
            T.func_attr({"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True})
            blockIdx_x = T.env_thread("blockIdx.x")
            T.launch_thread(blockIdx_x, 128)
            conv2d_nchw = T.allocate([4], "float32", "local")
            pad_temp_shared = T.allocate([1568], "float32", "shared")
            kernel_shared = T.allocate([128], "float32", "shared")
            threadIdx_x = T.env_thread("threadIdx.x")
            T.launch_thread(threadIdx_x, 49)
            conv2d_nchw_1 = T.Buffer((4,), data=conv2d_nchw, scope="local", align=8)
            conv2d_nchw_1[0] = T.float32(0)
            conv2d_nchw_1[2] = T.float32(0)
            conv2d_nchw_1[1] = T.float32(0)
            conv2d_nchw_1[3] = T.float32(0)
            for rc_outer_outer, ry_outer_outer in T.grid(16, 3):
                threadIdx_x_1 = T.env_thread("threadIdx.x")
                pad_temp_shared_1 = T.Buffer((1568,), data=pad_temp_shared, scope="shared")
                data_1 = T.Buffer((25088,), data=data.data)
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 49] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 41], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 98] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 90], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 147] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 139], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 196] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 188], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 245] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 237], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 294] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 286], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 343] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 335], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 392] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 384], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 441] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 433], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 490] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 482], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 539] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 531], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 588] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 580], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 637] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 629], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 686] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 678], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 735] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 727], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 784] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 776], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 833] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 825], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 882] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 874], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 931] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 923], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 980] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 972], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1029] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1021], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1078] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1070], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1127] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1119], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1176] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1168], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1225] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1217], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1274] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1266], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1323] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1315], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1372] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1364], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1421] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1413], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1470] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1462], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1519] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and 1 <= threadIdx_x_1 % 7, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1511], T.float32(0))
                threadIdx_x_2 = T.env_thread("threadIdx.x")
                kernel_shared_1 = T.Buffer((128,), data=kernel_shared, scope="shared")
                kernel_1 = T.Buffer((2359296,), data=kernel.data)
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 * 2] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 16 * 4608 + rc_outer_outer * 288 + threadIdx_x_2 % 16 * 18 + ry_outer_outer * 3]
                    kernel_shared_1[threadIdx_x_2 * 2 + 1] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 16 * 4608 + rc_outer_outer * 288 + threadIdx_x_2 % 16 * 18 + ry_outer_outer * 3 + 9]
                with T.launch_thread(threadIdx_x_2, 49):
                    if T.likely(threadIdx_x_2 < 15):
                        cse_var_1: T.int32 = ry_outer_outer * 3
                        kernel_shared_1[threadIdx_x_2 * 2 + 98] = kernel_1[blockIdx_x * 18432 + (threadIdx_x_2 + 49) // 16 * 4608 + rc_outer_outer * 288 + (threadIdx_x_2 * 2 + 2) * 9 + cse_var_1]
                        kernel_shared_1[threadIdx_x_2 * 2 + 99] = kernel_1[blockIdx_x * 18432 + (threadIdx_x_2 + 49) // 16 * 4608 + rc_outer_outer * 288 + (threadIdx_x_2 * 2 + 3) * 9 + cse_var_1]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x] * kernel_shared_1[0]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x] * kernel_shared_1[64]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x] * kernel_shared_1[32]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x] * kernel_shared_1[96]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 49] * kernel_shared_1[1]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 49] * kernel_shared_1[65]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 49] * kernel_shared_1[33]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 49] * kernel_shared_1[97]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 98] * kernel_shared_1[2]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 98] * kernel_shared_1[66]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 98] * kernel_shared_1[34]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 98] * kernel_shared_1[98]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 147] * kernel_shared_1[3]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 147] * kernel_shared_1[67]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 147] * kernel_shared_1[35]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 147] * kernel_shared_1[99]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 196] * kernel_shared_1[4]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 196] * kernel_shared_1[68]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 196] * kernel_shared_1[36]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 196] * kernel_shared_1[100]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 245] * kernel_shared_1[5]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 245] * kernel_shared_1[69]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 245] * kernel_shared_1[37]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 245] * kernel_shared_1[101]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 294] * kernel_shared_1[6]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 294] * kernel_shared_1[70]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 294] * kernel_shared_1[38]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 294] * kernel_shared_1[102]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 343] * kernel_shared_1[7]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 343] * kernel_shared_1[71]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 343] * kernel_shared_1[39]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 343] * kernel_shared_1[103]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 392] * kernel_shared_1[8]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 392] * kernel_shared_1[72]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 392] * kernel_shared_1[40]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 392] * kernel_shared_1[104]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 441] * kernel_shared_1[9]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 441] * kernel_shared_1[73]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 441] * kernel_shared_1[41]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 441] * kernel_shared_1[105]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 490] * kernel_shared_1[10]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 490] * kernel_shared_1[74]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 490] * kernel_shared_1[42]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 490] * kernel_shared_1[106]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 539] * kernel_shared_1[11]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 539] * kernel_shared_1[75]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 539] * kernel_shared_1[43]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 539] * kernel_shared_1[107]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 588] * kernel_shared_1[12]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 588] * kernel_shared_1[76]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 588] * kernel_shared_1[44]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 588] * kernel_shared_1[108]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 637] * kernel_shared_1[13]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 637] * kernel_shared_1[77]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 637] * kernel_shared_1[45]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 637] * kernel_shared_1[109]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 686] * kernel_shared_1[14]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 686] * kernel_shared_1[78]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 686] * kernel_shared_1[46]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 686] * kernel_shared_1[110]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 735] * kernel_shared_1[15]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 735] * kernel_shared_1[79]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 735] * kernel_shared_1[47]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 735] * kernel_shared_1[111]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 784] * kernel_shared_1[16]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 784] * kernel_shared_1[80]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 784] * kernel_shared_1[48]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 784] * kernel_shared_1[112]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 833] * kernel_shared_1[17]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 833] * kernel_shared_1[81]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 833] * kernel_shared_1[49]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 833] * kernel_shared_1[113]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 882] * kernel_shared_1[18]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 882] * kernel_shared_1[82]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 882] * kernel_shared_1[50]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 882] * kernel_shared_1[114]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 931] * kernel_shared_1[19]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 931] * kernel_shared_1[83]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 931] * kernel_shared_1[51]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 931] * kernel_shared_1[115]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 980] * kernel_shared_1[20]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 980] * kernel_shared_1[84]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 980] * kernel_shared_1[52]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 980] * kernel_shared_1[116]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1029] * kernel_shared_1[21]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1029] * kernel_shared_1[85]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1029] * kernel_shared_1[53]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1029] * kernel_shared_1[117]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1078] * kernel_shared_1[22]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1078] * kernel_shared_1[86]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1078] * kernel_shared_1[54]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1078] * kernel_shared_1[118]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1127] * kernel_shared_1[23]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1127] * kernel_shared_1[87]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1127] * kernel_shared_1[55]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1127] * kernel_shared_1[119]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1176] * kernel_shared_1[24]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1176] * kernel_shared_1[88]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1176] * kernel_shared_1[56]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1176] * kernel_shared_1[120]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1225] * kernel_shared_1[25]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1225] * kernel_shared_1[89]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1225] * kernel_shared_1[57]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1225] * kernel_shared_1[121]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1274] * kernel_shared_1[26]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1274] * kernel_shared_1[90]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1274] * kernel_shared_1[58]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1274] * kernel_shared_1[122]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1323] * kernel_shared_1[27]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1323] * kernel_shared_1[91]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1323] * kernel_shared_1[59]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1323] * kernel_shared_1[123]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1372] * kernel_shared_1[28]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1372] * kernel_shared_1[92]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1372] * kernel_shared_1[60]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1372] * kernel_shared_1[124]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1421] * kernel_shared_1[29]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1421] * kernel_shared_1[93]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1421] * kernel_shared_1[61]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1421] * kernel_shared_1[125]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1470] * kernel_shared_1[30]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1470] * kernel_shared_1[94]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1470] * kernel_shared_1[62]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1470] * kernel_shared_1[126]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1519] * kernel_shared_1[31]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1519] * kernel_shared_1[95]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1519] * kernel_shared_1[63]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1519] * kernel_shared_1[127]
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 - 7], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 49] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 42], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 98] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 91], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 147] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 140], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 196] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 189], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 245] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 238], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 294] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 287], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 343] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 336], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 392] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 385], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 441] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 434], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 490] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 483], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 539] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 532], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 588] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 581], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 637] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 630], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 686] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 679], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 735] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 728], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 784] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 777], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 833] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 826], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 882] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 875], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 931] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 924], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 980] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 973], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1029] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1022], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1078] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1071], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1127] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1120], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1176] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1169], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1225] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1218], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1274] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1267], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1323] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1316], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1372] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1365], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1421] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1414], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1470] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1463], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1519] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1512], T.float32(0))
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 * 2] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 16 * 4608 + rc_outer_outer * 288 + threadIdx_x_2 % 16 * 18 + ry_outer_outer * 3 + 1]
                    kernel_shared_1[threadIdx_x_2 * 2 + 1] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 16 * 4608 + rc_outer_outer * 288 + threadIdx_x_2 % 16 * 18 + ry_outer_outer * 3 + 10]
                with T.launch_thread(threadIdx_x_2, 49):
                    if T.likely(threadIdx_x_2 < 15):
                        cse_var_2: T.int32 = ry_outer_outer * 3
                        kernel_shared_1[threadIdx_x_2 * 2 + 98] = kernel_1[blockIdx_x * 18432 + (threadIdx_x_2 + 49) // 16 * 4608 + rc_outer_outer * 288 + (threadIdx_x_2 * 2 + 2) * 9 + cse_var_2 + 1]
                        kernel_shared_1[threadIdx_x_2 * 2 + 99] = kernel_1[blockIdx_x * 18432 + (threadIdx_x_2 + 49) // 16 * 4608 + rc_outer_outer * 288 + (threadIdx_x_2 * 2 + 3) * 9 + cse_var_2 + 1]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x] * kernel_shared_1[0]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x] * kernel_shared_1[64]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x] * kernel_shared_1[32]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x] * kernel_shared_1[96]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 49] * kernel_shared_1[1]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 49] * kernel_shared_1[65]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 49] * kernel_shared_1[33]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 49] * kernel_shared_1[97]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 98] * kernel_shared_1[2]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 98] * kernel_shared_1[66]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 98] * kernel_shared_1[34]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 98] * kernel_shared_1[98]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 147] * kernel_shared_1[3]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 147] * kernel_shared_1[67]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 147] * kernel_shared_1[35]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 147] * kernel_shared_1[99]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 196] * kernel_shared_1[4]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 196] * kernel_shared_1[68]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 196] * kernel_shared_1[36]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 196] * kernel_shared_1[100]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 245] * kernel_shared_1[5]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 245] * kernel_shared_1[69]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 245] * kernel_shared_1[37]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 245] * kernel_shared_1[101]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 294] * kernel_shared_1[6]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 294] * kernel_shared_1[70]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 294] * kernel_shared_1[38]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 294] * kernel_shared_1[102]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 343] * kernel_shared_1[7]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 343] * kernel_shared_1[71]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 343] * kernel_shared_1[39]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 343] * kernel_shared_1[103]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 392] * kernel_shared_1[8]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 392] * kernel_shared_1[72]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 392] * kernel_shared_1[40]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 392] * kernel_shared_1[104]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 441] * kernel_shared_1[9]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 441] * kernel_shared_1[73]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 441] * kernel_shared_1[41]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 441] * kernel_shared_1[105]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 490] * kernel_shared_1[10]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 490] * kernel_shared_1[74]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 490] * kernel_shared_1[42]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 490] * kernel_shared_1[106]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 539] * kernel_shared_1[11]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 539] * kernel_shared_1[75]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 539] * kernel_shared_1[43]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 539] * kernel_shared_1[107]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 588] * kernel_shared_1[12]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 588] * kernel_shared_1[76]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 588] * kernel_shared_1[44]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 588] * kernel_shared_1[108]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 637] * kernel_shared_1[13]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 637] * kernel_shared_1[77]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 637] * kernel_shared_1[45]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 637] * kernel_shared_1[109]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 686] * kernel_shared_1[14]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 686] * kernel_shared_1[78]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 686] * kernel_shared_1[46]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 686] * kernel_shared_1[110]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 735] * kernel_shared_1[15]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 735] * kernel_shared_1[79]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 735] * kernel_shared_1[47]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 735] * kernel_shared_1[111]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 784] * kernel_shared_1[16]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 784] * kernel_shared_1[80]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 784] * kernel_shared_1[48]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 784] * kernel_shared_1[112]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 833] * kernel_shared_1[17]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 833] * kernel_shared_1[81]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 833] * kernel_shared_1[49]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 833] * kernel_shared_1[113]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 882] * kernel_shared_1[18]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 882] * kernel_shared_1[82]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 882] * kernel_shared_1[50]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 882] * kernel_shared_1[114]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 931] * kernel_shared_1[19]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 931] * kernel_shared_1[83]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 931] * kernel_shared_1[51]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 931] * kernel_shared_1[115]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 980] * kernel_shared_1[20]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 980] * kernel_shared_1[84]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 980] * kernel_shared_1[52]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 980] * kernel_shared_1[116]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1029] * kernel_shared_1[21]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1029] * kernel_shared_1[85]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1029] * kernel_shared_1[53]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1029] * kernel_shared_1[117]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1078] * kernel_shared_1[22]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1078] * kernel_shared_1[86]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1078] * kernel_shared_1[54]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1078] * kernel_shared_1[118]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1127] * kernel_shared_1[23]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1127] * kernel_shared_1[87]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1127] * kernel_shared_1[55]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1127] * kernel_shared_1[119]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1176] * kernel_shared_1[24]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1176] * kernel_shared_1[88]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1176] * kernel_shared_1[56]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1176] * kernel_shared_1[120]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1225] * kernel_shared_1[25]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1225] * kernel_shared_1[89]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1225] * kernel_shared_1[57]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1225] * kernel_shared_1[121]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1274] * kernel_shared_1[26]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1274] * kernel_shared_1[90]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1274] * kernel_shared_1[58]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1274] * kernel_shared_1[122]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1323] * kernel_shared_1[27]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1323] * kernel_shared_1[91]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1323] * kernel_shared_1[59]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1323] * kernel_shared_1[123]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1372] * kernel_shared_1[28]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1372] * kernel_shared_1[92]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1372] * kernel_shared_1[60]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1372] * kernel_shared_1[124]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1421] * kernel_shared_1[29]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1421] * kernel_shared_1[93]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1421] * kernel_shared_1[61]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1421] * kernel_shared_1[125]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1470] * kernel_shared_1[30]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1470] * kernel_shared_1[94]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1470] * kernel_shared_1[62]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1470] * kernel_shared_1[126]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1519] * kernel_shared_1[31]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1519] * kernel_shared_1[95]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1519] * kernel_shared_1[63]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1519] * kernel_shared_1[127]
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 - 6], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 49] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 43], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 98] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 92], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 147] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 141], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 196] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 190], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 245] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 239], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 294] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 288], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 343] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 337], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 392] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 386], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 441] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 435], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 490] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 484], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 539] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 533], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 588] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 582], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 637] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 631], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 686] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 680], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 735] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 729], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 784] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 778], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 833] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 827], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 882] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 876], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 931] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 925], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 980] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 974], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1029] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1023], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1078] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1072], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1127] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1121], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1176] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1170], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1225] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1219], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1274] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1268], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1323] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1317], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1372] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1366], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1421] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1415], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1470] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1464], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1519] = T.if_then_else(1 <= threadIdx_x_1 // 7 + ry_outer_outer and threadIdx_x_1 // 7 + ry_outer_outer < 8 and threadIdx_x_1 % 7 < 6, data_1[rc_outer_outer * 1568 + ry_outer_outer * 7 + threadIdx_x_1 + 1513], T.float32(0))
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 * 2] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 16 * 4608 + rc_outer_outer * 288 + threadIdx_x_2 % 16 * 18 + ry_outer_outer * 3 + 2]
                    kernel_shared_1[threadIdx_x_2 * 2 + 1] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 16 * 4608 + rc_outer_outer * 288 + threadIdx_x_2 % 16 * 18 + ry_outer_outer * 3 + 11]
                with T.launch_thread(threadIdx_x_2, 49):
                    if T.likely(threadIdx_x_2 < 15):
                        cse_var_3: T.int32 = ry_outer_outer * 3
                        kernel_shared_1[threadIdx_x_2 * 2 + 98] = kernel_1[blockIdx_x * 18432 + (threadIdx_x_2 + 49) // 16 * 4608 + rc_outer_outer * 288 + (threadIdx_x_2 * 2 + 2) * 9 + cse_var_3 + 2]
                        kernel_shared_1[threadIdx_x_2 * 2 + 99] = kernel_1[blockIdx_x * 18432 + (threadIdx_x_2 + 49) // 16 * 4608 + rc_outer_outer * 288 + (threadIdx_x_2 * 2 + 3) * 9 + cse_var_3 + 2]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x] * kernel_shared_1[0]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x] * kernel_shared_1[64]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x] * kernel_shared_1[32]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x] * kernel_shared_1[96]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 49] * kernel_shared_1[1]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 49] * kernel_shared_1[65]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 49] * kernel_shared_1[33]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 49] * kernel_shared_1[97]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 98] * kernel_shared_1[2]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 98] * kernel_shared_1[66]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 98] * kernel_shared_1[34]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 98] * kernel_shared_1[98]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 147] * kernel_shared_1[3]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 147] * kernel_shared_1[67]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 147] * kernel_shared_1[35]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 147] * kernel_shared_1[99]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 196] * kernel_shared_1[4]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 196] * kernel_shared_1[68]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 196] * kernel_shared_1[36]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 196] * kernel_shared_1[100]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 245] * kernel_shared_1[5]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 245] * kernel_shared_1[69]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 245] * kernel_shared_1[37]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 245] * kernel_shared_1[101]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 294] * kernel_shared_1[6]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 294] * kernel_shared_1[70]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 294] * kernel_shared_1[38]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 294] * kernel_shared_1[102]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 343] * kernel_shared_1[7]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 343] * kernel_shared_1[71]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 343] * kernel_shared_1[39]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 343] * kernel_shared_1[103]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 392] * kernel_shared_1[8]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 392] * kernel_shared_1[72]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 392] * kernel_shared_1[40]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 392] * kernel_shared_1[104]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 441] * kernel_shared_1[9]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 441] * kernel_shared_1[73]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 441] * kernel_shared_1[41]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 441] * kernel_shared_1[105]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 490] * kernel_shared_1[10]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 490] * kernel_shared_1[74]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 490] * kernel_shared_1[42]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 490] * kernel_shared_1[106]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 539] * kernel_shared_1[11]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 539] * kernel_shared_1[75]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 539] * kernel_shared_1[43]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 539] * kernel_shared_1[107]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 588] * kernel_shared_1[12]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 588] * kernel_shared_1[76]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 588] * kernel_shared_1[44]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 588] * kernel_shared_1[108]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 637] * kernel_shared_1[13]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 637] * kernel_shared_1[77]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 637] * kernel_shared_1[45]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 637] * kernel_shared_1[109]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 686] * kernel_shared_1[14]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 686] * kernel_shared_1[78]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 686] * kernel_shared_1[46]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 686] * kernel_shared_1[110]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 735] * kernel_shared_1[15]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 735] * kernel_shared_1[79]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 735] * kernel_shared_1[47]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 735] * kernel_shared_1[111]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 784] * kernel_shared_1[16]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 784] * kernel_shared_1[80]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 784] * kernel_shared_1[48]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 784] * kernel_shared_1[112]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 833] * kernel_shared_1[17]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 833] * kernel_shared_1[81]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 833] * kernel_shared_1[49]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 833] * kernel_shared_1[113]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 882] * kernel_shared_1[18]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 882] * kernel_shared_1[82]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 882] * kernel_shared_1[50]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 882] * kernel_shared_1[114]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 931] * kernel_shared_1[19]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 931] * kernel_shared_1[83]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 931] * kernel_shared_1[51]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 931] * kernel_shared_1[115]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 980] * kernel_shared_1[20]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 980] * kernel_shared_1[84]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 980] * kernel_shared_1[52]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 980] * kernel_shared_1[116]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1029] * kernel_shared_1[21]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1029] * kernel_shared_1[85]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1029] * kernel_shared_1[53]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1029] * kernel_shared_1[117]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1078] * kernel_shared_1[22]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1078] * kernel_shared_1[86]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1078] * kernel_shared_1[54]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1078] * kernel_shared_1[118]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1127] * kernel_shared_1[23]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1127] * kernel_shared_1[87]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1127] * kernel_shared_1[55]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1127] * kernel_shared_1[119]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1176] * kernel_shared_1[24]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1176] * kernel_shared_1[88]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1176] * kernel_shared_1[56]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1176] * kernel_shared_1[120]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1225] * kernel_shared_1[25]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1225] * kernel_shared_1[89]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1225] * kernel_shared_1[57]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1225] * kernel_shared_1[121]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1274] * kernel_shared_1[26]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1274] * kernel_shared_1[90]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1274] * kernel_shared_1[58]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1274] * kernel_shared_1[122]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1323] * kernel_shared_1[27]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1323] * kernel_shared_1[91]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1323] * kernel_shared_1[59]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1323] * kernel_shared_1[123]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1372] * kernel_shared_1[28]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1372] * kernel_shared_1[92]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1372] * kernel_shared_1[60]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1372] * kernel_shared_1[124]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1421] * kernel_shared_1[29]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1421] * kernel_shared_1[93]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1421] * kernel_shared_1[61]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1421] * kernel_shared_1[125]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1470] * kernel_shared_1[30]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1470] * kernel_shared_1[94]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1470] * kernel_shared_1[62]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1470] * kernel_shared_1[126]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x + 1519] * kernel_shared_1[31]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x + 1519] * kernel_shared_1[95]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x + 1519] * kernel_shared_1[63]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x + 1519] * kernel_shared_1[127]
            for i1_inner in range(2):
                compute_1 = T.Buffer((25088,), data=compute.data)
                bias_1 = T.Buffer((512,), data=bias.data)
                compute_1[blockIdx_x * 196 + i1_inner * 49 + threadIdx_x] = T.max(conv2d_nchw_1[i1_inner] + bias_1[blockIdx_x * 4 + i1_inner], T.float32(0))
                compute_1[blockIdx_x * 196 + i1_inner * 49 + threadIdx_x + 98] = T.max(conv2d_nchw_1[i1_inner + 2] + bias_1[blockIdx_x * 4 + i1_inner + 2], T.float32(0))




.. GENERATED FROM PYTHON SOURCE LINES 138-141

Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.

.. GENERATED FROM PYTHON SOURCE LINES 141-168

.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Execution time of this operator: 0.304 ms




.. GENERATED FROM PYTHON SOURCE LINES 169-174

Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

.. GENERATED FROM PYTHON SOURCE LINES 176-179

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.

.. GENERATED FROM PYTHON SOURCE LINES 179-186

.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=1)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=2)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=2)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=7)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=7)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=1)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=32)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=1)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=1)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=1)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=1)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=2)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=1)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=2)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=7)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=7)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=2)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=49)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=49)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 512)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(49) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[4];
      __shared__ float pad_temp_shared[1568];
      __shared__ float kernel_shared[128];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 16; ++rc_outer_outer) {
        for (int ry_outer_outer = 0; ry_outer_outer < 3; ++ry_outer_outer) {
          __syncthreads();
          pad_temp_shared[((int)threadIdx.x)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 49)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 41)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 98)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 90)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 147)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 139)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 196)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 188)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 245)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 237)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 294)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 286)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 343)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 335)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 392)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 384)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 441)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 433)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 490)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 482)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 539)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 531)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 588)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 580)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 637)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 629)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 686)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 678)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 735)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 727)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 784)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 776)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 833)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 825)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 882)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 874)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 931)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 923)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 980)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 972)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1029)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1021)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1078)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1070)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1127)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1119)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1176)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1168)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1225)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1217)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1274)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1266)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1323)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1315)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1372)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1364)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1421)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1413)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1470)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1462)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1519)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1511)] : 0.000000e+00f);
          kernel_shared[(((int)threadIdx.x) * 2)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) >> 4) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) & 15) * 18)) + (ry_outer_outer * 3))];
          kernel_shared[((((int)threadIdx.x) * 2) + 1)] = kernel[((((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) >> 4) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) & 15) * 18)) + (ry_outer_outer * 3)) + 9)];
          if (((int)threadIdx.x) < 15) {
            kernel_shared[((((int)threadIdx.x) * 2) + 98)] = kernel[((((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 49) >> 4) * 4608)) + (rc_outer_outer * 288)) + (((int)threadIdx.x) * 18)) + (ry_outer_outer * 3)) + 18)];
            kernel_shared[((((int)threadIdx.x) * 2) + 99)] = kernel[((((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 49) >> 4) * 4608)) + (rc_outer_outer * 288)) + (((int)threadIdx.x) * 18)) + (ry_outer_outer * 3)) + 27)];
          }
          __syncthreads();
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((int)threadIdx.x)] * kernel_shared[0]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((int)threadIdx.x)] * kernel_shared[64]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((int)threadIdx.x)] * kernel_shared[32]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((int)threadIdx.x)] * kernel_shared[96]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * kernel_shared[1]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * kernel_shared[65]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * kernel_shared[33]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * kernel_shared[97]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * kernel_shared[2]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * kernel_shared[66]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * kernel_shared[34]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * kernel_shared[98]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * kernel_shared[3]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * kernel_shared[67]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * kernel_shared[35]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * kernel_shared[99]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * kernel_shared[4]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * kernel_shared[68]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * kernel_shared[36]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * kernel_shared[100]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 245)] * kernel_shared[5]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 245)] * kernel_shared[69]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 245)] * kernel_shared[37]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 245)] * kernel_shared[101]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * kernel_shared[6]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * kernel_shared[70]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * kernel_shared[38]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * kernel_shared[102]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 343)] * kernel_shared[7]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 343)] * kernel_shared[71]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 343)] * kernel_shared[39]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 343)] * kernel_shared[103]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * kernel_shared[8]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * kernel_shared[72]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * kernel_shared[40]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * kernel_shared[104]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 441)] * kernel_shared[9]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 441)] * kernel_shared[73]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 441)] * kernel_shared[41]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 441)] * kernel_shared[105]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * kernel_shared[10]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * kernel_shared[74]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * kernel_shared[42]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * kernel_shared[106]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 539)] * kernel_shared[11]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 539)] * kernel_shared[75]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 539)] * kernel_shared[43]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 539)] * kernel_shared[107]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * kernel_shared[12]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * kernel_shared[76]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * kernel_shared[44]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * kernel_shared[108]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 637)] * kernel_shared[13]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 637)] * kernel_shared[77]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 637)] * kernel_shared[45]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 637)] * kernel_shared[109]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 686)] * kernel_shared[14]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 686)] * kernel_shared[78]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 686)] * kernel_shared[46]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 686)] * kernel_shared[110]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 735)] * kernel_shared[15]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 735)] * kernel_shared[79]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 735)] * kernel_shared[47]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 735)] * kernel_shared[111]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * kernel_shared[16]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * kernel_shared[80]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * kernel_shared[48]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * kernel_shared[112]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 833)] * kernel_shared[17]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 833)] * kernel_shared[81]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 833)] * kernel_shared[49]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 833)] * kernel_shared[113]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 882)] * kernel_shared[18]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 882)] * kernel_shared[82]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 882)] * kernel_shared[50]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 882)] * kernel_shared[114]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 931)] * kernel_shared[19]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 931)] * kernel_shared[83]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 931)] * kernel_shared[51]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 931)] * kernel_shared[115]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 980)] * kernel_shared[20]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 980)] * kernel_shared[84]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 980)] * kernel_shared[52]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 980)] * kernel_shared[116]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1029)] * kernel_shared[21]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1029)] * kernel_shared[85]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1029)] * kernel_shared[53]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1029)] * kernel_shared[117]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1078)] * kernel_shared[22]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1078)] * kernel_shared[86]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1078)] * kernel_shared[54]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1078)] * kernel_shared[118]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1127)] * kernel_shared[23]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1127)] * kernel_shared[87]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1127)] * kernel_shared[55]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1127)] * kernel_shared[119]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1176)] * kernel_shared[24]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1176)] * kernel_shared[88]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1176)] * kernel_shared[56]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1176)] * kernel_shared[120]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1225)] * kernel_shared[25]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1225)] * kernel_shared[89]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1225)] * kernel_shared[57]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1225)] * kernel_shared[121]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1274)] * kernel_shared[26]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1274)] * kernel_shared[90]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1274)] * kernel_shared[58]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1274)] * kernel_shared[122]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1323)] * kernel_shared[27]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1323)] * kernel_shared[91]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1323)] * kernel_shared[59]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1323)] * kernel_shared[123]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1372)] * kernel_shared[28]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1372)] * kernel_shared[92]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1372)] * kernel_shared[60]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1372)] * kernel_shared[124]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1421)] * kernel_shared[29]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1421)] * kernel_shared[93]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1421)] * kernel_shared[61]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1421)] * kernel_shared[125]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1470)] * kernel_shared[30]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1470)] * kernel_shared[94]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1470)] * kernel_shared[62]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1470)] * kernel_shared[126]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1519)] * kernel_shared[31]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1519)] * kernel_shared[95]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1519)] * kernel_shared[63]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1519)] * kernel_shared[127]));
          __syncthreads();
          pad_temp_shared[((int)threadIdx.x)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) - 7)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 49)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 42)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 98)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 91)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 147)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 140)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 196)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 189)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 245)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 238)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 294)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 287)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 343)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 336)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 392)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 385)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 441)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 434)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 490)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 483)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 539)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 532)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 588)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 581)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 637)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 630)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 686)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 679)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 735)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 728)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 784)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 777)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 833)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 826)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 882)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 875)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 931)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 924)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 980)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 973)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1029)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1022)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1078)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1071)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1127)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1120)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1176)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1169)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1225)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1218)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1274)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1267)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1323)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1316)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1372)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1365)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1421)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1414)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1470)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1463)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1519)] = (((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1512)] : 0.000000e+00f);
          kernel_shared[(((int)threadIdx.x) * 2)] = kernel[((((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) >> 4) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) & 15) * 18)) + (ry_outer_outer * 3)) + 1)];
          kernel_shared[((((int)threadIdx.x) * 2) + 1)] = kernel[((((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) >> 4) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) & 15) * 18)) + (ry_outer_outer * 3)) + 10)];
          if (((int)threadIdx.x) < 15) {
            kernel_shared[((((int)threadIdx.x) * 2) + 98)] = kernel[((((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 49) >> 4) * 4608)) + (rc_outer_outer * 288)) + (((int)threadIdx.x) * 18)) + (ry_outer_outer * 3)) + 19)];
            kernel_shared[((((int)threadIdx.x) * 2) + 99)] = kernel[((((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 49) >> 4) * 4608)) + (rc_outer_outer * 288)) + (((int)threadIdx.x) * 18)) + (ry_outer_outer * 3)) + 28)];
          }
          __syncthreads();
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((int)threadIdx.x)] * kernel_shared[0]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((int)threadIdx.x)] * kernel_shared[64]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((int)threadIdx.x)] * kernel_shared[32]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((int)threadIdx.x)] * kernel_shared[96]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * kernel_shared[1]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * kernel_shared[65]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * kernel_shared[33]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * kernel_shared[97]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * kernel_shared[2]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * kernel_shared[66]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * kernel_shared[34]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * kernel_shared[98]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * kernel_shared[3]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * kernel_shared[67]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * kernel_shared[35]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * kernel_shared[99]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * kernel_shared[4]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * kernel_shared[68]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * kernel_shared[36]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * kernel_shared[100]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 245)] * kernel_shared[5]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 245)] * kernel_shared[69]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 245)] * kernel_shared[37]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 245)] * kernel_shared[101]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * kernel_shared[6]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * kernel_shared[70]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * kernel_shared[38]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * kernel_shared[102]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 343)] * kernel_shared[7]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 343)] * kernel_shared[71]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 343)] * kernel_shared[39]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 343)] * kernel_shared[103]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * kernel_shared[8]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * kernel_shared[72]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * kernel_shared[40]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * kernel_shared[104]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 441)] * kernel_shared[9]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 441)] * kernel_shared[73]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 441)] * kernel_shared[41]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 441)] * kernel_shared[105]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * kernel_shared[10]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * kernel_shared[74]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * kernel_shared[42]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * kernel_shared[106]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 539)] * kernel_shared[11]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 539)] * kernel_shared[75]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 539)] * kernel_shared[43]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 539)] * kernel_shared[107]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * kernel_shared[12]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * kernel_shared[76]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * kernel_shared[44]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * kernel_shared[108]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 637)] * kernel_shared[13]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 637)] * kernel_shared[77]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 637)] * kernel_shared[45]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 637)] * kernel_shared[109]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 686)] * kernel_shared[14]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 686)] * kernel_shared[78]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 686)] * kernel_shared[46]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 686)] * kernel_shared[110]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 735)] * kernel_shared[15]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 735)] * kernel_shared[79]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 735)] * kernel_shared[47]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 735)] * kernel_shared[111]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * kernel_shared[16]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * kernel_shared[80]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * kernel_shared[48]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * kernel_shared[112]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 833)] * kernel_shared[17]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 833)] * kernel_shared[81]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 833)] * kernel_shared[49]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 833)] * kernel_shared[113]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 882)] * kernel_shared[18]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 882)] * kernel_shared[82]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 882)] * kernel_shared[50]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 882)] * kernel_shared[114]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 931)] * kernel_shared[19]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 931)] * kernel_shared[83]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 931)] * kernel_shared[51]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 931)] * kernel_shared[115]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 980)] * kernel_shared[20]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 980)] * kernel_shared[84]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 980)] * kernel_shared[52]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 980)] * kernel_shared[116]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1029)] * kernel_shared[21]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1029)] * kernel_shared[85]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1029)] * kernel_shared[53]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1029)] * kernel_shared[117]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1078)] * kernel_shared[22]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1078)] * kernel_shared[86]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1078)] * kernel_shared[54]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1078)] * kernel_shared[118]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1127)] * kernel_shared[23]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1127)] * kernel_shared[87]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1127)] * kernel_shared[55]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1127)] * kernel_shared[119]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1176)] * kernel_shared[24]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1176)] * kernel_shared[88]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1176)] * kernel_shared[56]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1176)] * kernel_shared[120]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1225)] * kernel_shared[25]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1225)] * kernel_shared[89]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1225)] * kernel_shared[57]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1225)] * kernel_shared[121]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1274)] * kernel_shared[26]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1274)] * kernel_shared[90]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1274)] * kernel_shared[58]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1274)] * kernel_shared[122]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1323)] * kernel_shared[27]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1323)] * kernel_shared[91]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1323)] * kernel_shared[59]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1323)] * kernel_shared[123]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1372)] * kernel_shared[28]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1372)] * kernel_shared[92]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1372)] * kernel_shared[60]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1372)] * kernel_shared[124]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1421)] * kernel_shared[29]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1421)] * kernel_shared[93]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1421)] * kernel_shared[61]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1421)] * kernel_shared[125]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1470)] * kernel_shared[30]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1470)] * kernel_shared[94]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1470)] * kernel_shared[62]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1470)] * kernel_shared[126]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1519)] * kernel_shared[31]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1519)] * kernel_shared[95]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1519)] * kernel_shared[63]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1519)] * kernel_shared[127]));
          __syncthreads();
          pad_temp_shared[((int)threadIdx.x)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) - 6)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 49)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 43)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 98)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 92)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 147)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 141)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 196)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 190)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 245)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 239)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 294)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 288)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 343)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 337)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 392)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 386)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 441)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 435)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 490)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 484)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 539)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 533)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 588)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 582)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 637)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 631)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 686)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 680)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 735)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 729)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 784)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 778)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 833)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 827)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 882)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 876)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 931)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 925)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 980)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 974)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1029)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1023)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1078)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1072)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1127)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1121)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1176)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1170)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1225)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1219)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1274)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1268)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1323)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1317)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1372)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1366)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1421)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1415)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1470)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1464)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1519)] = ((((1 <= ((((int)threadIdx.x) / 7) + ry_outer_outer)) && (((((int)threadIdx.x) / 7) + ry_outer_outer) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + ((int)threadIdx.x)) + 1513)] : 0.000000e+00f);
          kernel_shared[(((int)threadIdx.x) * 2)] = kernel[((((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) >> 4) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) & 15) * 18)) + (ry_outer_outer * 3)) + 2)];
          kernel_shared[((((int)threadIdx.x) * 2) + 1)] = kernel[((((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) >> 4) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) & 15) * 18)) + (ry_outer_outer * 3)) + 11)];
          if (((int)threadIdx.x) < 15) {
            kernel_shared[((((int)threadIdx.x) * 2) + 98)] = kernel[((((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 49) >> 4) * 4608)) + (rc_outer_outer * 288)) + (((int)threadIdx.x) * 18)) + (ry_outer_outer * 3)) + 20)];
            kernel_shared[((((int)threadIdx.x) * 2) + 99)] = kernel[((((((((int)blockIdx.x) * 18432) + (((((int)threadIdx.x) + 49) >> 4) * 4608)) + (rc_outer_outer * 288)) + (((int)threadIdx.x) * 18)) + (ry_outer_outer * 3)) + 29)];
          }
          __syncthreads();
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((int)threadIdx.x)] * kernel_shared[0]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((int)threadIdx.x)] * kernel_shared[64]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((int)threadIdx.x)] * kernel_shared[32]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((int)threadIdx.x)] * kernel_shared[96]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * kernel_shared[1]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * kernel_shared[65]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * kernel_shared[33]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * kernel_shared[97]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * kernel_shared[2]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * kernel_shared[66]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * kernel_shared[34]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * kernel_shared[98]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * kernel_shared[3]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * kernel_shared[67]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * kernel_shared[35]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * kernel_shared[99]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * kernel_shared[4]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * kernel_shared[68]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * kernel_shared[36]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * kernel_shared[100]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 245)] * kernel_shared[5]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 245)] * kernel_shared[69]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 245)] * kernel_shared[37]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 245)] * kernel_shared[101]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * kernel_shared[6]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * kernel_shared[70]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * kernel_shared[38]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * kernel_shared[102]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 343)] * kernel_shared[7]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 343)] * kernel_shared[71]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 343)] * kernel_shared[39]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 343)] * kernel_shared[103]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * kernel_shared[8]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * kernel_shared[72]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * kernel_shared[40]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * kernel_shared[104]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 441)] * kernel_shared[9]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 441)] * kernel_shared[73]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 441)] * kernel_shared[41]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 441)] * kernel_shared[105]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * kernel_shared[10]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * kernel_shared[74]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * kernel_shared[42]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * kernel_shared[106]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 539)] * kernel_shared[11]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 539)] * kernel_shared[75]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 539)] * kernel_shared[43]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 539)] * kernel_shared[107]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * kernel_shared[12]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * kernel_shared[76]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * kernel_shared[44]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * kernel_shared[108]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 637)] * kernel_shared[13]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 637)] * kernel_shared[77]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 637)] * kernel_shared[45]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 637)] * kernel_shared[109]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 686)] * kernel_shared[14]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 686)] * kernel_shared[78]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 686)] * kernel_shared[46]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 686)] * kernel_shared[110]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 735)] * kernel_shared[15]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 735)] * kernel_shared[79]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 735)] * kernel_shared[47]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 735)] * kernel_shared[111]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * kernel_shared[16]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * kernel_shared[80]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * kernel_shared[48]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * kernel_shared[112]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 833)] * kernel_shared[17]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 833)] * kernel_shared[81]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 833)] * kernel_shared[49]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 833)] * kernel_shared[113]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 882)] * kernel_shared[18]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 882)] * kernel_shared[82]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 882)] * kernel_shared[50]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 882)] * kernel_shared[114]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 931)] * kernel_shared[19]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 931)] * kernel_shared[83]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 931)] * kernel_shared[51]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 931)] * kernel_shared[115]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 980)] * kernel_shared[20]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 980)] * kernel_shared[84]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 980)] * kernel_shared[52]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 980)] * kernel_shared[116]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1029)] * kernel_shared[21]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1029)] * kernel_shared[85]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1029)] * kernel_shared[53]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1029)] * kernel_shared[117]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1078)] * kernel_shared[22]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1078)] * kernel_shared[86]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1078)] * kernel_shared[54]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1078)] * kernel_shared[118]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1127)] * kernel_shared[23]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1127)] * kernel_shared[87]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1127)] * kernel_shared[55]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1127)] * kernel_shared[119]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1176)] * kernel_shared[24]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1176)] * kernel_shared[88]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1176)] * kernel_shared[56]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1176)] * kernel_shared[120]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1225)] * kernel_shared[25]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1225)] * kernel_shared[89]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1225)] * kernel_shared[57]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1225)] * kernel_shared[121]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1274)] * kernel_shared[26]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1274)] * kernel_shared[90]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1274)] * kernel_shared[58]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1274)] * kernel_shared[122]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1323)] * kernel_shared[27]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1323)] * kernel_shared[91]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1323)] * kernel_shared[59]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1323)] * kernel_shared[123]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1372)] * kernel_shared[28]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1372)] * kernel_shared[92]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1372)] * kernel_shared[60]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1372)] * kernel_shared[124]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1421)] * kernel_shared[29]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1421)] * kernel_shared[93]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1421)] * kernel_shared[61]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1421)] * kernel_shared[125]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1470)] * kernel_shared[30]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1470)] * kernel_shared[94]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1470)] * kernel_shared[62]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1470)] * kernel_shared[126]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) + 1519)] * kernel_shared[31]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) + 1519)] * kernel_shared[95]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) + 1519)] * kernel_shared[63]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) + 1519)] * kernel_shared[127]));
        }
      }
      for (int i1_inner = 0; i1_inner < 2; ++i1_inner) {
        compute[(((((int)blockIdx.x) * 196) + (i1_inner * 49)) + ((int)threadIdx.x))] = max((conv2d_nchw[i1_inner] + bias[((((int)blockIdx.x) * 4) + i1_inner)]), 0.000000e+00f);
        compute[((((((int)blockIdx.x) * 196) + (i1_inner * 49)) + ((int)threadIdx.x)) + 98)] = max((conv2d_nchw[(i1_inner + 2)] + bias[(((((int)blockIdx.x) * 4) + i1_inner) + 2)]), 0.000000e+00f);
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 187-191

A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.

.. GENERATED FROM PYTHON SOURCE LINES 191-213

.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Resume search:
    /venv/apache-tvm-py3.7/lib/python3.7/site-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 5 minutes  30.408 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
