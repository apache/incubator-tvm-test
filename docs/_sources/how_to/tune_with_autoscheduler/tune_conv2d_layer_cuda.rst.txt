
.. DO NOT EDIT. THIS FILE WAS AUTOMATICALLY GENERATED BY
.. TVM'S MONKEY-PATCHED VERSION OF SPHINX-GALLERY. TO MAKE
.. CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.py"

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        This tutorial can be used interactively with Google Colab! You can also click
        :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>` to run the Jupyter notebook locally.

        .. image:: https://raw.githubusercontent.com/tlc-pack/web-data/main/images/utilities/colab_button.svg
            :align: center
            :target: https://colab.research.google.com/github/apache/tvm-site/blob/asf-site/docs/_downloads/5f1f7bd7d90710fd404f7bcdc4965622/tune_conv2d_layer_cuda.ipynb
            :width: 300px

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.

.. GENERATED FROM PYTHON SOURCE LINES 39-48

.. code-block:: default



    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python








.. GENERATED FROM PYTHON SOURCE LINES 55-60

Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.

.. GENERATED FROM PYTHON SOURCE LINES 60-72

.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]









.. GENERATED FROM PYTHON SOURCE LINES 73-76

Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.

.. GENERATED FROM PYTHON SOURCE LINES 76-89

.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)





.. GENERATED FROM PYTHON SOURCE LINES 90-107

Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.

.. GENERATED FROM PYTHON SOURCE LINES 107-117

.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Get devices for measurement successfully!




.. GENERATED FROM PYTHON SOURCE LINES 118-124

Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.

.. GENERATED FROM PYTHON SOURCE LINES 124-133

.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx








.. GENERATED FROM PYTHON SOURCE LINES 134-137

We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.

.. GENERATED FROM PYTHON SOURCE LINES 137-141

.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Lowered TIR:
    @main = primfn(data_1: handle, kernel_1: handle, bias_1: handle, compute_1: handle) -> ()
      attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
      buffers = {data: Buffer(data_2: Pointer(float32), float32, [1, 512, 7, 7], []),
                 kernel: Buffer(kernel_2: Pointer(float32), float32, [512, 512, 3, 3], []),
                 bias: Buffer(bias_2: Pointer(float32), float32, [1, 512, 1, 1], []),
                 compute: Buffer(compute_2: Pointer(float32), float32, [1, 512, 7, 7], [])}
      buffer_map = {data_1: data, kernel_1: kernel, bias_1: bias, compute_1: compute} {
      attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = 32;
      allocate(conv2d_nchw: Pointer(local float32), float32, [7]), storage_scope = local;
      allocate(pad_temp.shared: Pointer(shared float32), float32, [1568]), storage_scope = shared;
      allocate(kernel.shared: Pointer(shared float32), float32, [512]), storage_scope = shared;
      attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112 {
        conv2d_nchw_1: Buffer(conv2d_nchw, float32, [7], [], scope="local", align=16)[0] = 0f32
        conv2d_nchw_1[1] = 0f32
        conv2d_nchw_1[2] = 0f32
        conv2d_nchw_1[3] = 0f32
        conv2d_nchw_1[4] = 0f32
        conv2d_nchw_1[5] = 0f32
        conv2d_nchw_1[6] = 0f32
        for (rc.outer.outer: int32, 0, 16) {
          for (ry.outer.outer: int32, 0, 3) {
            let cse_var_4: int32 = (rc.outer.outer*1568)
            let cse_var_3: int32 = (rc.outer.outer*288)
            let cse_var_2: int32 = (ry.outer.outer*7)
            let cse_var_1: int32 = (ry.outer.outer*3)
             {
              attr [IterVar(threadIdx.x_1: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112 {
                pad_temp.shared_1: Buffer(pad_temp.shared, float32, [1568], [], scope="shared")[(threadIdx.x_1*2)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1*2), 7))), data_3: Buffer(data_2, float32, [25088], [])[(((cse_var_4 + cse_var_2) + (threadIdx.x_1*2)) - 8)], 0f32, dtype=float32)
                pad_temp.shared_1[((threadIdx.x_1*2) + 1)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod(((threadIdx.x_1*2) + 1), 7))), data_3[(((cse_var_4 + cse_var_2) + (threadIdx.x_1*2)) - 7)], 0f32, dtype=float32)
              }
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112 {
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 224), 49)*49) + (floormod((floordiv((threadIdx.x_1*2), 7) + 4), 7)*7)) + floormod((threadIdx.x_1*2), 7))] = @tir.if_then_else((((1 <= (ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 4), 7))) && ((ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 4), 7)) < 8)) && (1 <= floormod((threadIdx.x_1*2), 7))), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 224), 49)*49)) + cse_var_2) + (floormod((floordiv((threadIdx.x_1*2), 7) + 4), 7)*7)) + floormod((threadIdx.x_1*2), 7)) - 8)], 0f32, dtype=float32)
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 225), 49)*49) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 4), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7))] = @tir.if_then_else((((1 <= (ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 4), 7))) && ((ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 4), 7)) < 8)) && (1 <= floormod(((threadIdx.x_1*2) + 1), 7))), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 225), 49)*49)) + cse_var_2) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 4), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7)) - 8)], 0f32, dtype=float32)
              }
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112 {
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 448), 49)*49) + (floormod((floordiv((threadIdx.x_1*2), 7) + 1), 7)*7)) + floormod((threadIdx.x_1*2), 7))] = @tir.if_then_else((((1 <= (ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 1), 7))) && ((ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 1), 7)) < 8)) && (1 <= floormod((threadIdx.x_1*2), 7))), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 448), 49)*49)) + cse_var_2) + (floormod((floordiv((threadIdx.x_1*2), 7) + 1), 7)*7)) + floormod((threadIdx.x_1*2), 7)) - 8)], 0f32, dtype=float32)
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 449), 49)*49) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 1), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7))] = @tir.if_then_else((((1 <= (ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 1), 7))) && ((ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 1), 7)) < 8)) && (1 <= floormod(((threadIdx.x_1*2) + 1), 7))), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 449), 49)*49)) + cse_var_2) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 1), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7)) - 8)], 0f32, dtype=float32)
              }
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112 {
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 672), 49)*49) + (floormod((floordiv((threadIdx.x_1*2), 7) + 5), 7)*7)) + floormod((threadIdx.x_1*2), 7))] = @tir.if_then_else((((1 <= (ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 5), 7))) && ((ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 5), 7)) < 8)) && (1 <= floormod((threadIdx.x_1*2), 7))), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 672), 49)*49)) + cse_var_2) + (floormod((floordiv((threadIdx.x_1*2), 7) + 5), 7)*7)) + floormod((threadIdx.x_1*2), 7)) - 8)], 0f32, dtype=float32)
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 673), 49)*49) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 5), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7))] = @tir.if_then_else((((1 <= (ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 5), 7))) && ((ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 5), 7)) < 8)) && (1 <= floormod(((threadIdx.x_1*2) + 1), 7))), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 673), 49)*49)) + cse_var_2) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 5), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7)) - 8)], 0f32, dtype=float32)
              }
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112 {
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 896), 49)*49) + (floormod((floordiv((threadIdx.x_1*2), 7) + 2), 7)*7)) + floormod((threadIdx.x_1*2), 7))] = @tir.if_then_else((((1 <= (ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 2), 7))) && ((ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 2), 7)) < 8)) && (1 <= floormod((threadIdx.x_1*2), 7))), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 896), 49)*49)) + cse_var_2) + (floormod((floordiv((threadIdx.x_1*2), 7) + 2), 7)*7)) + floormod((threadIdx.x_1*2), 7)) - 8)], 0f32, dtype=float32)
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 897), 49)*49) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 2), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7))] = @tir.if_then_else((((1 <= (ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 2), 7))) && ((ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 2), 7)) < 8)) && (1 <= floormod(((threadIdx.x_1*2) + 1), 7))), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 897), 49)*49)) + cse_var_2) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 2), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7)) - 8)], 0f32, dtype=float32)
              }
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112 {
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 1120), 49)*49) + (floormod((floordiv((threadIdx.x_1*2), 7) + 6), 7)*7)) + floormod((threadIdx.x_1*2), 7))] = @tir.if_then_else((((1 <= (ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 6), 7))) && ((ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 6), 7)) < 8)) && (1 <= floormod((threadIdx.x_1*2), 7))), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 1120), 49)*49)) + cse_var_2) + (floormod((floordiv((threadIdx.x_1*2), 7) + 6), 7)*7)) + floormod((threadIdx.x_1*2), 7)) - 8)], 0f32, dtype=float32)
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 1121), 49)*49) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 6), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7))] = @tir.if_then_else((((1 <= (ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 6), 7))) && ((ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 6), 7)) < 8)) && (1 <= floormod(((threadIdx.x_1*2) + 1), 7))), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 1121), 49)*49)) + cse_var_2) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 6), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7)) - 8)], 0f32, dtype=float32)
              }
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112 {
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 1344), 49)*49) + (floormod((floordiv((threadIdx.x_1*2), 7) + 3), 7)*7)) + floormod((threadIdx.x_1*2), 7))] = @tir.if_then_else((((1 <= (ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 3), 7))) && ((ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 3), 7)) < 8)) && (1 <= floormod((threadIdx.x_1*2), 7))), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 1344), 49)*49)) + cse_var_2) + (floormod((floordiv((threadIdx.x_1*2), 7) + 3), 7)*7)) + floormod((threadIdx.x_1*2), 7)) - 8)], 0f32, dtype=float32)
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 1345), 49)*49) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 3), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7))] = @tir.if_then_else((((1 <= (ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 3), 7))) && ((ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 3), 7)) < 8)) && (1 <= floormod(((threadIdx.x_1*2) + 1), 7))), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 1345), 49)*49)) + cse_var_2) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 3), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7)) - 8)], 0f32, dtype=float32)
              }
              attr [IterVar(threadIdx.x_2: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1: Buffer(kernel.shared, float32, [512], [], scope="shared")[threadIdx.x_2] = kernel_3: Buffer(kernel_2, float32, [2359296], [])[(((((blockIdx.x*73728) + (floordiv(threadIdx.x_2, 32)*4608)) + cse_var_3) + (floormod(threadIdx.x_2, 32)*9)) + cse_var_1)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 112)] = kernel_3[(((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 112), 32)*4608)) + cse_var_3) + (floormod((threadIdx.x_2 + 16), 32)*9)) + cse_var_1)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 224)] = kernel_3[((((((blockIdx.x*73728) + (floordiv(threadIdx.x_2, 32)*4608)) + cse_var_3) + (floormod(threadIdx.x_2, 32)*9)) + cse_var_1) + 32256)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 336)] = kernel_3[(((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 336), 32)*4608)) + cse_var_3) + (floormod((threadIdx.x_2 + 16), 32)*9)) + cse_var_1)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              if @tir.likely((threadIdx.x_2 < 64), dtype=bool) {
                kernel.shared_1[(threadIdx.x_2 + 448)] = kernel_3[((((((blockIdx.x*73728) + (floordiv(threadIdx.x_2, 32)*4608)) + cse_var_3) + (floormod(threadIdx.x_2, 32)*9)) + cse_var_1) + 64512)]
              }
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[floormod(threadIdx.x, 7)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*32)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 7)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*32)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 14)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*32)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 21)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*32)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 28)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*32)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 35)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*32)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 42)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*32)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 49)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 1)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 1)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 63)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 1)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 70)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 1)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 77)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 1)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 1)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 91)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 1)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 98)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 2)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 105)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 2)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 112)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 2)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 119)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 2)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 126)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 2)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 133)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 2)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 140)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 2)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 147)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 3)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 154)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 3)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 161)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 3)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 168)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 3)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 175)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 3)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 182)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 3)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 189)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 3)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 196)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 4)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 203)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 4)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 210)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 4)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 217)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 4)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 224)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 4)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 231)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 4)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 238)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 4)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 245)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 5)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 252)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 5)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 259)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 5)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 266)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 5)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 273)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 5)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 280)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 5)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 287)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 5)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 294)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 6)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 301)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 6)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 308)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 6)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 315)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 6)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 322)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 6)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 329)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 6)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 336)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 6)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 343)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 7)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 350)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 7)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 357)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 7)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 364)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 7)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 371)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 7)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 378)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 7)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 385)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 7)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 392)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 8)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 399)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 8)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 406)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 8)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 413)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 8)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 420)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 8)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 427)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 8)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 434)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 8)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 441)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 9)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 448)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 9)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 455)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 9)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 462)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 9)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 469)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 9)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 476)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 9)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 483)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 9)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 490)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 10)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 497)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 10)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 504)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 10)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 511)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 10)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 518)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 10)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 525)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 10)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 532)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 10)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 539)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 11)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 546)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 11)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 553)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 11)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 560)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 11)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 567)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 11)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 574)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 11)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 581)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 11)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 588)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 12)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 595)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 12)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 602)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 12)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 609)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 12)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 616)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 12)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 623)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 12)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 630)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 12)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 637)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 13)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 644)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 13)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 651)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 13)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 658)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 13)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 665)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 13)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 672)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 13)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 679)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 13)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 686)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 14)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 693)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 14)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 700)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 14)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 707)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 14)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 714)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 14)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 721)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 14)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 728)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 14)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 735)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 15)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 742)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 15)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 749)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 15)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 756)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 15)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 763)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 15)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 770)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 15)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 777)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 15)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 784)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 16)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 791)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 16)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 798)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 16)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 805)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 16)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 812)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 16)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 819)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 16)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 826)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 16)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 833)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 17)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 840)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 17)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 847)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 17)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 854)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 17)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 861)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 17)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 868)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 17)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 875)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 17)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 882)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 18)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 889)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 18)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 896)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 18)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 903)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 18)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 910)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 18)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 917)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 18)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 924)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 18)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 931)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 19)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 938)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 19)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 945)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 19)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 952)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 19)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 959)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 19)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 966)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 19)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 973)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 19)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 980)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 20)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 987)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 20)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 994)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 20)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1001)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 20)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1008)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 20)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1015)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 20)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1022)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 20)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1029)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 21)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1036)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 21)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1043)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 21)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1050)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 21)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1057)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 21)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1064)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 21)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1071)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 21)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1078)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 22)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1085)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 22)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1092)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 22)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1099)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 22)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1106)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 22)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1113)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 22)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1120)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 22)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1127)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 23)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1134)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 23)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1141)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 23)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1148)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 23)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1155)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 23)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1162)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 23)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1169)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 23)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1176)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 24)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1183)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 24)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1190)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 24)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1197)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 24)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1204)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 24)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1211)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 24)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1218)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 24)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1225)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 25)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1232)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 25)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1239)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 25)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1246)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 25)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1253)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 25)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1260)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 25)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1267)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 25)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1274)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 26)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1281)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 26)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1288)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 26)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1295)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 26)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1302)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 26)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1309)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 26)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1316)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 26)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1323)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 27)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1330)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 27)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1337)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 27)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1344)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 27)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1351)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 27)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1358)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 27)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1365)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 27)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1372)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 28)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1379)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 28)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1386)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 28)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1393)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 28)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1400)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 28)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1407)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 28)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1414)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 28)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1421)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 29)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1428)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 29)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1435)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 29)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1442)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 29)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1449)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 29)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1456)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 29)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1463)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 29)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1470)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 30)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1477)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 30)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1484)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 30)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1491)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 30)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1498)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 30)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1505)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 30)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1512)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 30)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1519)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 31)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1526)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 31)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1533)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 31)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1540)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 31)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1547)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 31)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1554)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 31)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1561)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 31)]))
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112 {
                pad_temp.shared_1[(threadIdx.x_1*2)] = @tir.if_then_else(((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)), data_3[(((cse_var_4 + cse_var_2) + (threadIdx.x_1*2)) - 7)], 0f32, dtype=float32)
                pad_temp.shared_1[((threadIdx.x_1*2) + 1)] = @tir.if_then_else(((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)), data_3[(((cse_var_4 + cse_var_2) + (threadIdx.x_1*2)) - 6)], 0f32, dtype=float32)
              }
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112 {
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 224), 49)*49) + (floormod((floordiv((threadIdx.x_1*2), 7) + 4), 7)*7)) + floormod((threadIdx.x_1*2), 7))] = @tir.if_then_else(((1 <= (ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 4), 7))) && ((ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 4), 7)) < 8)), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 224), 49)*49)) + cse_var_2) + (floormod((floordiv((threadIdx.x_1*2), 7) + 4), 7)*7)) + floormod((threadIdx.x_1*2), 7)) - 7)], 0f32, dtype=float32)
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 225), 49)*49) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 4), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7))] = @tir.if_then_else(((1 <= (ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 4), 7))) && ((ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 4), 7)) < 8)), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 225), 49)*49)) + cse_var_2) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 4), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7)) - 7)], 0f32, dtype=float32)
              }
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112 {
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 448), 49)*49) + (floormod((floordiv((threadIdx.x_1*2), 7) + 1), 7)*7)) + floormod((threadIdx.x_1*2), 7))] = @tir.if_then_else(((1 <= (ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 1), 7))) && ((ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 1), 7)) < 8)), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 448), 49)*49)) + cse_var_2) + (floormod((floordiv((threadIdx.x_1*2), 7) + 1), 7)*7)) + floormod((threadIdx.x_1*2), 7)) - 7)], 0f32, dtype=float32)
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 449), 49)*49) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 1), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7))] = @tir.if_then_else(((1 <= (ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 1), 7))) && ((ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 1), 7)) < 8)), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 449), 49)*49)) + cse_var_2) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 1), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7)) - 7)], 0f32, dtype=float32)
              }
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112 {
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 672), 49)*49) + (floormod((floordiv((threadIdx.x_1*2), 7) + 5), 7)*7)) + floormod((threadIdx.x_1*2), 7))] = @tir.if_then_else(((1 <= (ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 5), 7))) && ((ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 5), 7)) < 8)), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 672), 49)*49)) + cse_var_2) + (floormod((floordiv((threadIdx.x_1*2), 7) + 5), 7)*7)) + floormod((threadIdx.x_1*2), 7)) - 7)], 0f32, dtype=float32)
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 673), 49)*49) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 5), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7))] = @tir.if_then_else(((1 <= (ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 5), 7))) && ((ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 5), 7)) < 8)), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 673), 49)*49)) + cse_var_2) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 5), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7)) - 7)], 0f32, dtype=float32)
              }
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112 {
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 896), 49)*49) + (floormod((floordiv((threadIdx.x_1*2), 7) + 2), 7)*7)) + floormod((threadIdx.x_1*2), 7))] = @tir.if_then_else(((1 <= (ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 2), 7))) && ((ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 2), 7)) < 8)), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 896), 49)*49)) + cse_var_2) + (floormod((floordiv((threadIdx.x_1*2), 7) + 2), 7)*7)) + floormod((threadIdx.x_1*2), 7)) - 7)], 0f32, dtype=float32)
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 897), 49)*49) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 2), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7))] = @tir.if_then_else(((1 <= (ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 2), 7))) && ((ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 2), 7)) < 8)), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 897), 49)*49)) + cse_var_2) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 2), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7)) - 7)], 0f32, dtype=float32)
              }
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112 {
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 1120), 49)*49) + (floormod((floordiv((threadIdx.x_1*2), 7) + 6), 7)*7)) + floormod((threadIdx.x_1*2), 7))] = @tir.if_then_else(((1 <= (ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 6), 7))) && ((ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 6), 7)) < 8)), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 1120), 49)*49)) + cse_var_2) + (floormod((floordiv((threadIdx.x_1*2), 7) + 6), 7)*7)) + floormod((threadIdx.x_1*2), 7)) - 7)], 0f32, dtype=float32)
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 1121), 49)*49) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 6), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7))] = @tir.if_then_else(((1 <= (ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 6), 7))) && ((ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 6), 7)) < 8)), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 1121), 49)*49)) + cse_var_2) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 6), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7)) - 7)], 0f32, dtype=float32)
              }
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112 {
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 1344), 49)*49) + (floormod((floordiv((threadIdx.x_1*2), 7) + 3), 7)*7)) + floormod((threadIdx.x_1*2), 7))] = @tir.if_then_else(((1 <= (ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 3), 7))) && ((ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 3), 7)) < 8)), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 1344), 49)*49)) + cse_var_2) + (floormod((floordiv((threadIdx.x_1*2), 7) + 3), 7)*7)) + floormod((threadIdx.x_1*2), 7)) - 7)], 0f32, dtype=float32)
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 1345), 49)*49) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 3), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7))] = @tir.if_then_else(((1 <= (ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 3), 7))) && ((ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 3), 7)) < 8)), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 1345), 49)*49)) + cse_var_2) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 3), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7)) - 7)], 0f32, dtype=float32)
              }
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[threadIdx.x_2] = kernel_3[((((((blockIdx.x*73728) + (floordiv(threadIdx.x_2, 32)*4608)) + cse_var_3) + (floormod(threadIdx.x_2, 32)*9)) + cse_var_1) + 1)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 112)] = kernel_3[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 112), 32)*4608)) + cse_var_3) + (floormod((threadIdx.x_2 + 16), 32)*9)) + cse_var_1) + 1)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 224)] = kernel_3[((((((blockIdx.x*73728) + (floordiv(threadIdx.x_2, 32)*4608)) + cse_var_3) + (floormod(threadIdx.x_2, 32)*9)) + cse_var_1) + 32257)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 336)] = kernel_3[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 336), 32)*4608)) + cse_var_3) + (floormod((threadIdx.x_2 + 16), 32)*9)) + cse_var_1) + 1)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              if @tir.likely((threadIdx.x_2 < 64), dtype=bool) {
                kernel.shared_1[(threadIdx.x_2 + 448)] = kernel_3[((((((blockIdx.x*73728) + (floordiv(threadIdx.x_2, 32)*4608)) + cse_var_3) + (floormod(threadIdx.x_2, 32)*9)) + cse_var_1) + 64513)]
              }
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[floormod(threadIdx.x, 7)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*32)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 7)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*32)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 14)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*32)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 21)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*32)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 28)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*32)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 35)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*32)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 42)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*32)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 49)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 1)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 1)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 63)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 1)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 70)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 1)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 77)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 1)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 1)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 91)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 1)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 98)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 2)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 105)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 2)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 112)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 2)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 119)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 2)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 126)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 2)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 133)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 2)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 140)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 2)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 147)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 3)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 154)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 3)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 161)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 3)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 168)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 3)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 175)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 3)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 182)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 3)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 189)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 3)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 196)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 4)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 203)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 4)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 210)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 4)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 217)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 4)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 224)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 4)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 231)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 4)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 238)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 4)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 245)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 5)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 252)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 5)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 259)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 5)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 266)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 5)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 273)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 5)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 280)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 5)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 287)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 5)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 294)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 6)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 301)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 6)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 308)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 6)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 315)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 6)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 322)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 6)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 329)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 6)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 336)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 6)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 343)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 7)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 350)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 7)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 357)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 7)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 364)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 7)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 371)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 7)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 378)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 7)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 385)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 7)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 392)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 8)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 399)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 8)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 406)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 8)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 413)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 8)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 420)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 8)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 427)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 8)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 434)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 8)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 441)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 9)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 448)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 9)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 455)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 9)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 462)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 9)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 469)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 9)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 476)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 9)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 483)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 9)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 490)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 10)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 497)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 10)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 504)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 10)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 511)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 10)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 518)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 10)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 525)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 10)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 532)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 10)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 539)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 11)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 546)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 11)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 553)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 11)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 560)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 11)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 567)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 11)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 574)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 11)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 581)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 11)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 588)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 12)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 595)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 12)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 602)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 12)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 609)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 12)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 616)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 12)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 623)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 12)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 630)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 12)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 637)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 13)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 644)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 13)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 651)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 13)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 658)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 13)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 665)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 13)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 672)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 13)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 679)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 13)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 686)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 14)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 693)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 14)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 700)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 14)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 707)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 14)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 714)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 14)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 721)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 14)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 728)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 14)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 735)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 15)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 742)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 15)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 749)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 15)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 756)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 15)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 763)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 15)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 770)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 15)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 777)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 15)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 784)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 16)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 791)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 16)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 798)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 16)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 805)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 16)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 812)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 16)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 819)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 16)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 826)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 16)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 833)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 17)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 840)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 17)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 847)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 17)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 854)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 17)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 861)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 17)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 868)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 17)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 875)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 17)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 882)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 18)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 889)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 18)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 896)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 18)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 903)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 18)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 910)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 18)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 917)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 18)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 924)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 18)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 931)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 19)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 938)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 19)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 945)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 19)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 952)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 19)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 959)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 19)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 966)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 19)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 973)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 19)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 980)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 20)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 987)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 20)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 994)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 20)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1001)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 20)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1008)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 20)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1015)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 20)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1022)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 20)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1029)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 21)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1036)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 21)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1043)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 21)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1050)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 21)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1057)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 21)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1064)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 21)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1071)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 21)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1078)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 22)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1085)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 22)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1092)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 22)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1099)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 22)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1106)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 22)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1113)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 22)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1120)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 22)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1127)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 23)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1134)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 23)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1141)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 23)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1148)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 23)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1155)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 23)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1162)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 23)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1169)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 23)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1176)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 24)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1183)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 24)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1190)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 24)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1197)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 24)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1204)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 24)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1211)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 24)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1218)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 24)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1225)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 25)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1232)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 25)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1239)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 25)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1246)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 25)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1253)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 25)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1260)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 25)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1267)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 25)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1274)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 26)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1281)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 26)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1288)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 26)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1295)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 26)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1302)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 26)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1309)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 26)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1316)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 26)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1323)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 27)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1330)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 27)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1337)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 27)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1344)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 27)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1351)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 27)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1358)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 27)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1365)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 27)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1372)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 28)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1379)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 28)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1386)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 28)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1393)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 28)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1400)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 28)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1407)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 28)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1414)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 28)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1421)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 29)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1428)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 29)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1435)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 29)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1442)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 29)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1449)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 29)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1456)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 29)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1463)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 29)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1470)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 30)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1477)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 30)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1484)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 30)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1491)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 30)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1498)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 30)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1505)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 30)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1512)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 30)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1519)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 31)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1526)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 31)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1533)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 31)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1540)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 31)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1547)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 31)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1554)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 31)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1561)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 31)]))
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112 {
                pad_temp.shared_1[(threadIdx.x_1*2)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (floormod((threadIdx.x_1*2), 7) < 6)), data_3[(((cse_var_4 + cse_var_2) + (threadIdx.x_1*2)) - 6)], 0f32, dtype=float32)
                pad_temp.shared_1[((threadIdx.x_1*2) + 1)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (floormod(((threadIdx.x_1*2) + 1), 7) < 6)), data_3[(((cse_var_4 + cse_var_2) + (threadIdx.x_1*2)) - 5)], 0f32, dtype=float32)
              }
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112 {
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 224), 49)*49) + (floormod((floordiv((threadIdx.x_1*2), 7) + 4), 7)*7)) + floormod((threadIdx.x_1*2), 7))] = @tir.if_then_else((((1 <= (ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 4), 7))) && ((ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 4), 7)) < 8)) && (floormod((threadIdx.x_1*2), 7) < 6)), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 224), 49)*49)) + cse_var_2) + (floormod((floordiv((threadIdx.x_1*2), 7) + 4), 7)*7)) + floormod((threadIdx.x_1*2), 7)) - 6)], 0f32, dtype=float32)
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 225), 49)*49) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 4), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7))] = @tir.if_then_else((((1 <= (ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 4), 7))) && ((ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 4), 7)) < 8)) && (floormod(((threadIdx.x_1*2) + 1), 7) < 6)), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 225), 49)*49)) + cse_var_2) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 4), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7)) - 6)], 0f32, dtype=float32)
              }
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112 {
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 448), 49)*49) + (floormod((floordiv((threadIdx.x_1*2), 7) + 1), 7)*7)) + floormod((threadIdx.x_1*2), 7))] = @tir.if_then_else((((1 <= (ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 1), 7))) && ((ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 1), 7)) < 8)) && (floormod((threadIdx.x_1*2), 7) < 6)), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 448), 49)*49)) + cse_var_2) + (floormod((floordiv((threadIdx.x_1*2), 7) + 1), 7)*7)) + floormod((threadIdx.x_1*2), 7)) - 6)], 0f32, dtype=float32)
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 449), 49)*49) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 1), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7))] = @tir.if_then_else((((1 <= (ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 1), 7))) && ((ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 1), 7)) < 8)) && (floormod(((threadIdx.x_1*2) + 1), 7) < 6)), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 449), 49)*49)) + cse_var_2) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 1), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7)) - 6)], 0f32, dtype=float32)
              }
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112 {
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 672), 49)*49) + (floormod((floordiv((threadIdx.x_1*2), 7) + 5), 7)*7)) + floormod((threadIdx.x_1*2), 7))] = @tir.if_then_else((((1 <= (ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 5), 7))) && ((ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 5), 7)) < 8)) && (floormod((threadIdx.x_1*2), 7) < 6)), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 672), 49)*49)) + cse_var_2) + (floormod((floordiv((threadIdx.x_1*2), 7) + 5), 7)*7)) + floormod((threadIdx.x_1*2), 7)) - 6)], 0f32, dtype=float32)
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 673), 49)*49) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 5), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7))] = @tir.if_then_else((((1 <= (ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 5), 7))) && ((ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 5), 7)) < 8)) && (floormod(((threadIdx.x_1*2) + 1), 7) < 6)), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 673), 49)*49)) + cse_var_2) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 5), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7)) - 6)], 0f32, dtype=float32)
              }
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112 {
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 896), 49)*49) + (floormod((floordiv((threadIdx.x_1*2), 7) + 2), 7)*7)) + floormod((threadIdx.x_1*2), 7))] = @tir.if_then_else((((1 <= (ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 2), 7))) && ((ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 2), 7)) < 8)) && (floormod((threadIdx.x_1*2), 7) < 6)), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 896), 49)*49)) + cse_var_2) + (floormod((floordiv((threadIdx.x_1*2), 7) + 2), 7)*7)) + floormod((threadIdx.x_1*2), 7)) - 6)], 0f32, dtype=float32)
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 897), 49)*49) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 2), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7))] = @tir.if_then_else((((1 <= (ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 2), 7))) && ((ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 2), 7)) < 8)) && (floormod(((threadIdx.x_1*2) + 1), 7) < 6)), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 897), 49)*49)) + cse_var_2) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 2), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7)) - 6)], 0f32, dtype=float32)
              }
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112 {
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 1120), 49)*49) + (floormod((floordiv((threadIdx.x_1*2), 7) + 6), 7)*7)) + floormod((threadIdx.x_1*2), 7))] = @tir.if_then_else((((1 <= (ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 6), 7))) && ((ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 6), 7)) < 8)) && (floormod((threadIdx.x_1*2), 7) < 6)), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 1120), 49)*49)) + cse_var_2) + (floormod((floordiv((threadIdx.x_1*2), 7) + 6), 7)*7)) + floormod((threadIdx.x_1*2), 7)) - 6)], 0f32, dtype=float32)
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 1121), 49)*49) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 6), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7))] = @tir.if_then_else((((1 <= (ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 6), 7))) && ((ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 6), 7)) < 8)) && (floormod(((threadIdx.x_1*2) + 1), 7) < 6)), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 1121), 49)*49)) + cse_var_2) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 6), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7)) - 6)], 0f32, dtype=float32)
              }
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112 {
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 1344), 49)*49) + (floormod((floordiv((threadIdx.x_1*2), 7) + 3), 7)*7)) + floormod((threadIdx.x_1*2), 7))] = @tir.if_then_else((((1 <= (ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 3), 7))) && ((ry.outer.outer + floormod((floordiv((threadIdx.x_1*2), 7) + 3), 7)) < 8)) && (floormod((threadIdx.x_1*2), 7) < 6)), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 1344), 49)*49)) + cse_var_2) + (floormod((floordiv((threadIdx.x_1*2), 7) + 3), 7)*7)) + floormod((threadIdx.x_1*2), 7)) - 6)], 0f32, dtype=float32)
                pad_temp.shared_1[(((floordiv(((threadIdx.x_1*2) + 1345), 49)*49) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 3), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7))] = @tir.if_then_else((((1 <= (ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 3), 7))) && ((ry.outer.outer + floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 3), 7)) < 8)) && (floormod(((threadIdx.x_1*2) + 1), 7) < 6)), data_3[(((((cse_var_4 + (floordiv(((threadIdx.x_1*2) + 1345), 49)*49)) + cse_var_2) + (floormod((floordiv(((threadIdx.x_1*2) + 1), 7) + 3), 7)*7)) + floormod(((threadIdx.x_1*2) + 1), 7)) - 6)], 0f32, dtype=float32)
              }
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[threadIdx.x_2] = kernel_3[((((((blockIdx.x*73728) + (floordiv(threadIdx.x_2, 32)*4608)) + cse_var_3) + (floormod(threadIdx.x_2, 32)*9)) + cse_var_1) + 2)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 112)] = kernel_3[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 112), 32)*4608)) + cse_var_3) + (floormod((threadIdx.x_2 + 16), 32)*9)) + cse_var_1) + 2)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 224)] = kernel_3[((((((blockIdx.x*73728) + (floordiv(threadIdx.x_2, 32)*4608)) + cse_var_3) + (floormod(threadIdx.x_2, 32)*9)) + cse_var_1) + 32258)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 336)] = kernel_3[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 336), 32)*4608)) + cse_var_3) + (floormod((threadIdx.x_2 + 16), 32)*9)) + cse_var_1) + 2)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              if @tir.likely((threadIdx.x_2 < 64), dtype=bool) {
                kernel.shared_1[(threadIdx.x_2 + 448)] = kernel_3[((((((blockIdx.x*73728) + (floordiv(threadIdx.x_2, 32)*4608)) + cse_var_3) + (floormod(threadIdx.x_2, 32)*9)) + cse_var_1) + 64514)]
              }
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[floormod(threadIdx.x, 7)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*32)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 7)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*32)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 14)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*32)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 21)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*32)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 28)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*32)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 35)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*32)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 42)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*32)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 49)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 1)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 1)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 63)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 1)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 70)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 1)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 77)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 1)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 1)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 91)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 1)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 98)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 2)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 105)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 2)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 112)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 2)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 119)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 2)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 126)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 2)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 133)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 2)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 140)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 2)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 147)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 3)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 154)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 3)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 161)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 3)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 168)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 3)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 175)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 3)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 182)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 3)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 189)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 3)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 196)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 4)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 203)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 4)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 210)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 4)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 217)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 4)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 224)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 4)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 231)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 4)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 238)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 4)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 245)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 5)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 252)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 5)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 259)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 5)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 266)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 5)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 273)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 5)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 280)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 5)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 287)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 5)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 294)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 6)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 301)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 6)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 308)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 6)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 315)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 6)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 322)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 6)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 329)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 6)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 336)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 6)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 343)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 7)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 350)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 7)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 357)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 7)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 364)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 7)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 371)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 7)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 378)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 7)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 385)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 7)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 392)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 8)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 399)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 8)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 406)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 8)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 413)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 8)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 420)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 8)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 427)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 8)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 434)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 8)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 441)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 9)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 448)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 9)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 455)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 9)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 462)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 9)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 469)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 9)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 476)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 9)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 483)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 9)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 490)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 10)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 497)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 10)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 504)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 10)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 511)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 10)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 518)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 10)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 525)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 10)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 532)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 10)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 539)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 11)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 546)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 11)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 553)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 11)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 560)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 11)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 567)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 11)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 574)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 11)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 581)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 11)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 588)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 12)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 595)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 12)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 602)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 12)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 609)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 12)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 616)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 12)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 623)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 12)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 630)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 12)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 637)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 13)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 644)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 13)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 651)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 13)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 658)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 13)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 665)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 13)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 672)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 13)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 679)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 13)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 686)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 14)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 693)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 14)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 700)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 14)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 707)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 14)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 714)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 14)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 721)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 14)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 728)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 14)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 735)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 15)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 742)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 15)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 749)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 15)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 756)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 15)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 763)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 15)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 770)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 15)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 777)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 15)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 784)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 16)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 791)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 16)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 798)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 16)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 805)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 16)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 812)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 16)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 819)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 16)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 826)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 16)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 833)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 17)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 840)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 17)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 847)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 17)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 854)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 17)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 861)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 17)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 868)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 17)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 875)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 17)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 882)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 18)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 889)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 18)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 896)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 18)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 903)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 18)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 910)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 18)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 917)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 18)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 924)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 18)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 931)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 19)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 938)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 19)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 945)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 19)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 952)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 19)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 959)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 19)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 966)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 19)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 973)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 19)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 980)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 20)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 987)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 20)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 994)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 20)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1001)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 20)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1008)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 20)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1015)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 20)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1022)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 20)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1029)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 21)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1036)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 21)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1043)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 21)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1050)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 21)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1057)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 21)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1064)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 21)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1071)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 21)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1078)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 22)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1085)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 22)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1092)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 22)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1099)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 22)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1106)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 22)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1113)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 22)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1120)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 22)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1127)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 23)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1134)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 23)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1141)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 23)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1148)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 23)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1155)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 23)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1162)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 23)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1169)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 23)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1176)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 24)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1183)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 24)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1190)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 24)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1197)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 24)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1204)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 24)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1211)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 24)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1218)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 24)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1225)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 25)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1232)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 25)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1239)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 25)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1246)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 25)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1253)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 25)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1260)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 25)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1267)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 25)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1274)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 26)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1281)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 26)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1288)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 26)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1295)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 26)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1302)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 26)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1309)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 26)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1316)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 26)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1323)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 27)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1330)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 27)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1337)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 27)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1344)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 27)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1351)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 27)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1358)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 27)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1365)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 27)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1372)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 28)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1379)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 28)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1386)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 28)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1393)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 28)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1400)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 28)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1407)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 28)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1414)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 28)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1421)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 29)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1428)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 29)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1435)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 29)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1442)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 29)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1449)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 29)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1456)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 29)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1463)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 29)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1470)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 30)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1477)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 30)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1484)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 30)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1491)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 30)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1498)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 30)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1505)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 30)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1512)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 30)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1519)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 31)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1526)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 31)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1533)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 31)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1540)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 31)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1547)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 31)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1554)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 31)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 1561)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*32) + 31)]))
            }
          }
        }
        for (i2.inner: int32, 0, 7) {
          compute_3: Buffer(compute_2, float32, [25088], [])[((((blockIdx.x*784) + (floordiv(threadIdx.x, 7)*49)) + (i2.inner*7)) + floormod(threadIdx.x, 7))] = max((conv2d_nchw_1[i2.inner] + bias_3: Buffer(bias_2, float32, [512], [])[((blockIdx.x*16) + floordiv(threadIdx.x, 7))]), 0f32)
        }
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 142-145

Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.

.. GENERATED FROM PYTHON SOURCE LINES 145-172

.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Execution time of this operator: 0.290 ms




.. GENERATED FROM PYTHON SOURCE LINES 173-178

Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

.. GENERATED FROM PYTHON SOURCE LINES 180-183

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.

.. GENERATED FROM PYTHON SOURCE LINES 183-190

.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=1)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=16)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=1)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=7)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=7)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=2)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=16)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=1)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=1)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=1)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=1)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=1)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=16)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=1)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=7)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=1)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=7)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=112)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=2)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=112)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 1024)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(112) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[7];
      __shared__ float pad_temp_shared[1568];
      __shared__ float kernel_shared[512];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 16; ++rc_outer_outer) {
        for (int ry_outer_outer = 0; ry_outer_outer < 3; ++ry_outer_outer) {
          __syncthreads();
          pad_temp_shared[(((int)threadIdx.x) * 2)] = ((((1 <= ((((((int)threadIdx.x) * 2) % 49) / 7) + ry_outer_outer)) && (((((((int)threadIdx.x) * 2) % 49) / 7) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) * 2) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + (((int)threadIdx.x) * 2)) - 8)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] = ((((1 <= (((((((int)threadIdx.x) * 2) + 1) % 49) / 7) + ry_outer_outer)) && ((((((((int)threadIdx.x) * 2) + 1) % 49) / 7) + ry_outer_outer) < 8)) && (1 <= (((((int)threadIdx.x) * 2) + 1) % 7))) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + (((int)threadIdx.x) * 2)) - 7)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 224) / 49) * 49) + (((((((int)threadIdx.x) * 2) / 7) + 4) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7))] = ((((1 <= (ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 4) % 7))) && ((ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 4) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) * 2) % 7))) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 224) / 49) * 49)) + (ry_outer_outer * 7)) + (((((((int)threadIdx.x) * 2) / 7) + 4) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 225) / 49) * 49) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 4) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7))] = ((((1 <= (ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 4) % 7))) && ((ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 4) % 7)) < 8)) && (1 <= (((((int)threadIdx.x) * 2) + 1) % 7))) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 225) / 49) * 49)) + (ry_outer_outer * 7)) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 4) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 448) / 49) * 49) + (((((((int)threadIdx.x) * 2) / 7) + 1) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7))] = ((((1 <= (ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 1) % 7))) && ((ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 1) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) * 2) % 7))) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 448) / 49) * 49)) + (ry_outer_outer * 7)) + (((((((int)threadIdx.x) * 2) / 7) + 1) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 449) / 49) * 49) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 1) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7))] = ((((1 <= (ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 1) % 7))) && ((ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 1) % 7)) < 8)) && (1 <= (((((int)threadIdx.x) * 2) + 1) % 7))) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 449) / 49) * 49)) + (ry_outer_outer * 7)) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 1) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 672) / 49) * 49) + (((((((int)threadIdx.x) * 2) / 7) + 5) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7))] = ((((1 <= (ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 5) % 7))) && ((ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 5) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) * 2) % 7))) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 672) / 49) * 49)) + (ry_outer_outer * 7)) + (((((((int)threadIdx.x) * 2) / 7) + 5) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 673) / 49) * 49) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 5) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7))] = ((((1 <= (ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 5) % 7))) && ((ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 5) % 7)) < 8)) && (1 <= (((((int)threadIdx.x) * 2) + 1) % 7))) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 673) / 49) * 49)) + (ry_outer_outer * 7)) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 5) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 896) / 49) * 49) + (((((((int)threadIdx.x) * 2) / 7) + 2) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7))] = ((((1 <= (ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 2) % 7))) && ((ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 2) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) * 2) % 7))) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 896) / 49) * 49)) + (ry_outer_outer * 7)) + (((((((int)threadIdx.x) * 2) / 7) + 2) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 897) / 49) * 49) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 2) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7))] = ((((1 <= (ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 2) % 7))) && ((ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 2) % 7)) < 8)) && (1 <= (((((int)threadIdx.x) * 2) + 1) % 7))) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 897) / 49) * 49)) + (ry_outer_outer * 7)) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 2) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 1120) / 49) * 49) + (((((((int)threadIdx.x) * 2) / 7) + 6) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7))] = ((((1 <= (ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 6) % 7))) && ((ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 6) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) * 2) % 7))) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 1120) / 49) * 49)) + (ry_outer_outer * 7)) + (((((((int)threadIdx.x) * 2) / 7) + 6) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 1121) / 49) * 49) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 6) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7))] = ((((1 <= (ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 6) % 7))) && ((ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 6) % 7)) < 8)) && (1 <= (((((int)threadIdx.x) * 2) + 1) % 7))) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 1121) / 49) * 49)) + (ry_outer_outer * 7)) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 6) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 1344) / 49) * 49) + (((((((int)threadIdx.x) * 2) / 7) + 3) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7))] = ((((1 <= (ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 3) % 7))) && ((ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 3) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) * 2) % 7))) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 1344) / 49) * 49)) + (ry_outer_outer * 7)) + (((((((int)threadIdx.x) * 2) / 7) + 3) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 1345) / 49) * 49) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 3) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7))] = ((((1 <= (ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 3) % 7))) && ((ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 3) % 7)) < 8)) && (1 <= (((((int)threadIdx.x) * 2) + 1) % 7))) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 1345) / 49) * 49)) + (ry_outer_outer * 7)) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 3) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7)) - 8)] : 0.000000e+00f);
          kernel_shared[((int)threadIdx.x)] = kernel[(((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) >> 5) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) & 31) * 9)) + (ry_outer_outer * 3))];
          kernel_shared[(((int)threadIdx.x) + 112)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 112) >> 5) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 16) & 31) * 9)) + (ry_outer_outer * 3))];
          kernel_shared[(((int)threadIdx.x) + 224)] = kernel[((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) >> 5) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) & 31) * 9)) + (ry_outer_outer * 3)) + 32256)];
          kernel_shared[(((int)threadIdx.x) + 336)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 336) >> 5) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 16) & 31) * 9)) + (ry_outer_outer * 3))];
          if (((int)threadIdx.x) < 64) {
            kernel_shared[(((int)threadIdx.x) + 448)] = kernel[((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) >> 5) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) & 31) * 9)) + (ry_outer_outer * 3)) + 64512)];
          }
          __syncthreads();
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[((((int)threadIdx.x) / 7) * 32)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[((((int)threadIdx.x) / 7) * 32)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[((((int)threadIdx.x) / 7) * 32)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[((((int)threadIdx.x) / 7) * 32)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[((((int)threadIdx.x) / 7) * 32)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[((((int)threadIdx.x) / 7) * 32)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[((((int)threadIdx.x) / 7) * 32)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 1)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 1)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 1)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 1)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 1)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 1)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 1)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 2)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 2)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 112)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 2)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 119)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 2)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 126)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 2)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 133)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 2)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 2)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 147)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 3)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 154)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 3)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 161)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 3)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 3)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 175)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 3)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 182)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 3)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 3)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 196)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 4)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 203)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 4)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 210)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 4)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 217)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 4)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 224)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 4)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 231)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 4)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 238)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 4)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 245)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 5)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 252)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 5)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 259)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 5)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 266)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 5)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 273)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 5)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 280)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 5)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 287)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 5)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 294)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 6)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 301)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 6)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 308)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 6)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 315)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 6)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 322)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 6)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 329)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 6)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 336)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 6)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 343)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 7)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 350)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 7)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 357)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 7)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 364)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 7)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 371)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 7)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 378)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 7)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 385)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 7)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 392)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 8)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 399)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 8)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 406)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 8)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 413)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 8)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 420)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 8)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 427)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 8)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 434)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 8)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 441)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 9)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 448)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 9)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 455)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 9)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 462)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 9)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 469)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 9)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 476)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 9)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 483)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 9)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 490)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 10)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 497)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 10)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 504)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 10)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 511)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 10)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 518)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 10)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 525)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 10)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 532)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 10)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 539)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 11)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 546)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 11)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 553)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 11)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 560)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 11)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 567)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 11)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 574)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 11)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 581)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 11)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 588)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 12)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 595)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 12)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 602)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 12)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 609)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 12)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 616)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 12)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 623)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 12)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 630)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 12)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 637)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 13)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 644)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 13)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 651)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 13)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 658)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 13)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 665)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 13)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 672)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 13)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 679)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 13)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 686)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 14)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 693)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 14)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 700)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 14)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 707)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 14)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 714)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 14)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 721)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 14)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 728)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 14)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 735)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 15)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 742)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 15)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 749)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 15)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 756)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 15)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 763)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 15)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 770)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 15)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 777)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 15)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 784)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 16)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 791)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 16)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 798)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 16)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 805)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 16)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 812)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 16)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 819)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 16)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 826)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 16)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 833)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 17)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 840)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 17)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 847)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 17)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 854)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 17)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 861)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 17)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 868)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 17)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 875)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 17)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 882)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 18)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 889)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 18)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 896)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 18)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 903)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 18)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 910)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 18)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 917)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 18)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 924)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 18)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 931)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 19)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 938)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 19)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 945)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 19)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 952)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 19)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 959)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 19)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 966)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 19)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 973)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 19)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 980)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 20)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 987)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 20)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 994)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 20)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1001)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 20)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1008)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 20)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1015)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 20)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1022)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 20)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1029)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 21)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1036)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 21)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1043)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 21)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1050)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 21)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1057)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 21)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1064)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 21)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1071)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 21)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1078)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 22)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1085)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 22)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1092)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 22)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1099)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 22)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1106)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 22)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1113)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 22)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1120)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 22)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1127)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 23)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1134)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 23)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1141)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 23)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1148)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 23)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1155)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 23)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1162)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 23)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1169)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 23)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1176)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 24)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1183)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 24)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1190)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 24)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1197)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 24)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1204)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 24)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1211)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 24)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1218)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 24)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1225)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 25)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1232)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 25)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1239)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 25)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1246)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 25)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1253)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 25)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1260)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 25)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1267)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 25)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1274)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 26)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1281)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 26)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1288)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 26)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1295)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 26)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1302)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 26)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1309)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 26)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1316)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 26)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1323)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 27)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1330)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 27)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1337)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 27)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1344)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 27)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1351)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 27)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1358)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 27)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1365)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 27)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1372)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 28)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1379)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 28)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1386)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 28)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1393)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 28)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1400)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 28)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1407)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 28)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1414)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 28)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1421)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 29)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1428)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 29)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1435)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 29)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1442)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 29)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1449)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 29)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1456)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 29)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1463)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 29)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1470)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 30)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1477)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 30)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1484)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 30)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1491)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 30)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1498)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 30)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1505)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 30)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1512)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 30)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1519)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 31)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1526)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 31)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1533)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 31)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1540)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 31)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1547)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 31)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1554)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 31)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1561)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 31)]));
          __syncthreads();
          pad_temp_shared[(((int)threadIdx.x) * 2)] = (((1 <= ((((((int)threadIdx.x) * 2) % 49) / 7) + ry_outer_outer)) && (((((((int)threadIdx.x) * 2) % 49) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + (((int)threadIdx.x) * 2)) - 7)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] = (((1 <= (((((((int)threadIdx.x) * 2) + 1) % 49) / 7) + ry_outer_outer)) && ((((((((int)threadIdx.x) * 2) + 1) % 49) / 7) + ry_outer_outer) < 8)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + (((int)threadIdx.x) * 2)) - 6)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 224) / 49) * 49) + (((((((int)threadIdx.x) * 2) / 7) + 4) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7))] = (((1 <= (ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 4) % 7))) && ((ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 4) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 224) / 49) * 49)) + (ry_outer_outer * 7)) + (((((((int)threadIdx.x) * 2) / 7) + 4) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7)) - 7)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 225) / 49) * 49) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 4) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7))] = (((1 <= (ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 4) % 7))) && ((ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 4) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 225) / 49) * 49)) + (ry_outer_outer * 7)) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 4) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7)) - 7)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 448) / 49) * 49) + (((((((int)threadIdx.x) * 2) / 7) + 1) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7))] = (((1 <= (ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 1) % 7))) && ((ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 1) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 448) / 49) * 49)) + (ry_outer_outer * 7)) + (((((((int)threadIdx.x) * 2) / 7) + 1) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7)) - 7)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 449) / 49) * 49) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 1) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7))] = (((1 <= (ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 1) % 7))) && ((ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 1) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 449) / 49) * 49)) + (ry_outer_outer * 7)) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 1) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7)) - 7)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 672) / 49) * 49) + (((((((int)threadIdx.x) * 2) / 7) + 5) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7))] = (((1 <= (ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 5) % 7))) && ((ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 5) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 672) / 49) * 49)) + (ry_outer_outer * 7)) + (((((((int)threadIdx.x) * 2) / 7) + 5) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7)) - 7)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 673) / 49) * 49) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 5) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7))] = (((1 <= (ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 5) % 7))) && ((ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 5) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 673) / 49) * 49)) + (ry_outer_outer * 7)) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 5) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7)) - 7)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 896) / 49) * 49) + (((((((int)threadIdx.x) * 2) / 7) + 2) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7))] = (((1 <= (ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 2) % 7))) && ((ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 2) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 896) / 49) * 49)) + (ry_outer_outer * 7)) + (((((((int)threadIdx.x) * 2) / 7) + 2) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7)) - 7)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 897) / 49) * 49) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 2) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7))] = (((1 <= (ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 2) % 7))) && ((ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 2) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 897) / 49) * 49)) + (ry_outer_outer * 7)) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 2) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7)) - 7)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 1120) / 49) * 49) + (((((((int)threadIdx.x) * 2) / 7) + 6) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7))] = (((1 <= (ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 6) % 7))) && ((ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 6) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 1120) / 49) * 49)) + (ry_outer_outer * 7)) + (((((((int)threadIdx.x) * 2) / 7) + 6) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7)) - 7)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 1121) / 49) * 49) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 6) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7))] = (((1 <= (ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 6) % 7))) && ((ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 6) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 1121) / 49) * 49)) + (ry_outer_outer * 7)) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 6) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7)) - 7)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 1344) / 49) * 49) + (((((((int)threadIdx.x) * 2) / 7) + 3) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7))] = (((1 <= (ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 3) % 7))) && ((ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 3) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 1344) / 49) * 49)) + (ry_outer_outer * 7)) + (((((((int)threadIdx.x) * 2) / 7) + 3) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7)) - 7)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 1345) / 49) * 49) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 3) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7))] = (((1 <= (ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 3) % 7))) && ((ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 3) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 1345) / 49) * 49)) + (ry_outer_outer * 7)) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 3) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7)) - 7)] : 0.000000e+00f);
          kernel_shared[((int)threadIdx.x)] = kernel[((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) >> 5) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) & 31) * 9)) + (ry_outer_outer * 3)) + 1)];
          kernel_shared[(((int)threadIdx.x) + 112)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 112) >> 5) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 16) & 31) * 9)) + (ry_outer_outer * 3)) + 1)];
          kernel_shared[(((int)threadIdx.x) + 224)] = kernel[((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) >> 5) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) & 31) * 9)) + (ry_outer_outer * 3)) + 32257)];
          kernel_shared[(((int)threadIdx.x) + 336)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 336) >> 5) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 16) & 31) * 9)) + (ry_outer_outer * 3)) + 1)];
          if (((int)threadIdx.x) < 64) {
            kernel_shared[(((int)threadIdx.x) + 448)] = kernel[((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) >> 5) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) & 31) * 9)) + (ry_outer_outer * 3)) + 64513)];
          }
          __syncthreads();
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[((((int)threadIdx.x) / 7) * 32)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[((((int)threadIdx.x) / 7) * 32)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[((((int)threadIdx.x) / 7) * 32)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[((((int)threadIdx.x) / 7) * 32)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[((((int)threadIdx.x) / 7) * 32)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[((((int)threadIdx.x) / 7) * 32)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[((((int)threadIdx.x) / 7) * 32)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 1)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 1)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 1)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 1)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 1)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 1)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 1)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 2)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 2)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 112)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 2)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 119)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 2)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 126)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 2)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 133)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 2)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 2)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 147)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 3)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 154)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 3)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 161)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 3)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 3)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 175)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 3)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 182)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 3)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 3)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 196)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 4)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 203)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 4)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 210)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 4)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 217)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 4)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 224)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 4)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 231)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 4)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 238)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 4)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 245)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 5)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 252)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 5)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 259)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 5)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 266)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 5)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 273)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 5)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 280)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 5)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 287)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 5)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 294)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 6)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 301)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 6)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 308)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 6)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 315)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 6)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 322)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 6)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 329)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 6)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 336)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 6)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 343)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 7)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 350)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 7)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 357)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 7)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 364)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 7)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 371)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 7)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 378)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 7)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 385)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 7)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 392)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 8)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 399)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 8)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 406)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 8)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 413)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 8)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 420)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 8)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 427)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 8)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 434)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 8)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 441)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 9)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 448)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 9)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 455)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 9)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 462)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 9)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 469)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 9)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 476)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 9)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 483)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 9)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 490)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 10)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 497)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 10)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 504)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 10)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 511)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 10)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 518)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 10)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 525)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 10)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 532)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 10)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 539)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 11)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 546)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 11)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 553)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 11)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 560)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 11)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 567)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 11)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 574)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 11)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 581)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 11)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 588)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 12)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 595)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 12)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 602)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 12)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 609)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 12)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 616)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 12)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 623)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 12)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 630)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 12)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 637)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 13)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 644)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 13)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 651)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 13)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 658)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 13)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 665)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 13)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 672)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 13)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 679)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 13)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 686)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 14)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 693)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 14)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 700)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 14)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 707)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 14)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 714)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 14)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 721)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 14)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 728)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 14)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 735)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 15)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 742)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 15)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 749)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 15)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 756)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 15)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 763)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 15)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 770)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 15)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 777)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 15)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 784)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 16)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 791)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 16)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 798)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 16)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 805)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 16)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 812)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 16)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 819)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 16)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 826)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 16)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 833)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 17)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 840)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 17)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 847)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 17)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 854)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 17)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 861)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 17)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 868)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 17)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 875)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 17)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 882)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 18)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 889)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 18)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 896)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 18)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 903)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 18)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 910)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 18)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 917)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 18)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 924)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 18)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 931)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 19)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 938)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 19)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 945)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 19)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 952)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 19)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 959)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 19)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 966)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 19)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 973)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 19)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 980)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 20)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 987)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 20)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 994)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 20)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1001)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 20)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1008)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 20)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1015)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 20)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1022)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 20)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1029)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 21)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1036)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 21)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1043)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 21)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1050)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 21)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1057)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 21)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1064)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 21)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1071)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 21)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1078)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 22)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1085)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 22)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1092)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 22)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1099)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 22)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1106)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 22)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1113)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 22)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1120)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 22)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1127)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 23)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1134)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 23)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1141)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 23)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1148)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 23)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1155)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 23)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1162)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 23)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1169)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 23)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1176)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 24)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1183)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 24)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1190)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 24)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1197)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 24)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1204)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 24)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1211)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 24)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1218)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 24)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1225)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 25)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1232)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 25)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1239)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 25)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1246)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 25)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1253)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 25)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1260)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 25)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1267)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 25)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1274)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 26)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1281)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 26)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1288)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 26)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1295)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 26)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1302)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 26)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1309)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 26)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1316)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 26)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1323)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 27)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1330)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 27)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1337)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 27)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1344)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 27)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1351)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 27)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1358)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 27)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1365)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 27)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1372)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 28)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1379)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 28)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1386)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 28)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1393)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 28)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1400)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 28)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1407)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 28)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1414)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 28)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1421)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 29)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1428)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 29)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1435)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 29)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1442)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 29)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1449)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 29)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1456)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 29)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1463)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 29)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1470)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 30)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1477)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 30)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1484)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 30)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1491)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 30)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1498)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 30)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1505)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 30)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1512)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 30)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1519)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 31)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1526)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 31)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1533)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 31)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1540)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 31)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1547)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 31)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1554)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 31)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1561)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 31)]));
          __syncthreads();
          pad_temp_shared[(((int)threadIdx.x) * 2)] = ((((1 <= ((((((int)threadIdx.x) * 2) % 49) / 7) + ry_outer_outer)) && (((((((int)threadIdx.x) * 2) % 49) / 7) + ry_outer_outer) < 8)) && (((((int)threadIdx.x) * 2) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + (((int)threadIdx.x) * 2)) - 6)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] = ((((1 <= (((((((int)threadIdx.x) * 2) + 1) % 49) / 7) + ry_outer_outer)) && ((((((((int)threadIdx.x) * 2) + 1) % 49) / 7) + ry_outer_outer) < 8)) && ((((((int)threadIdx.x) * 2) + 1) % 7) < 6)) ? data[((((rc_outer_outer * 1568) + (ry_outer_outer * 7)) + (((int)threadIdx.x) * 2)) - 5)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 224) / 49) * 49) + (((((((int)threadIdx.x) * 2) / 7) + 4) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7))] = ((((1 <= (ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 4) % 7))) && ((ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 4) % 7)) < 8)) && (((((int)threadIdx.x) * 2) % 7) < 6)) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 224) / 49) * 49)) + (ry_outer_outer * 7)) + (((((((int)threadIdx.x) * 2) / 7) + 4) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7)) - 6)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 225) / 49) * 49) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 4) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7))] = ((((1 <= (ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 4) % 7))) && ((ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 4) % 7)) < 8)) && ((((((int)threadIdx.x) * 2) + 1) % 7) < 6)) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 225) / 49) * 49)) + (ry_outer_outer * 7)) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 4) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7)) - 6)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 448) / 49) * 49) + (((((((int)threadIdx.x) * 2) / 7) + 1) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7))] = ((((1 <= (ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 1) % 7))) && ((ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 1) % 7)) < 8)) && (((((int)threadIdx.x) * 2) % 7) < 6)) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 448) / 49) * 49)) + (ry_outer_outer * 7)) + (((((((int)threadIdx.x) * 2) / 7) + 1) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7)) - 6)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 449) / 49) * 49) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 1) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7))] = ((((1 <= (ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 1) % 7))) && ((ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 1) % 7)) < 8)) && ((((((int)threadIdx.x) * 2) + 1) % 7) < 6)) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 449) / 49) * 49)) + (ry_outer_outer * 7)) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 1) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7)) - 6)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 672) / 49) * 49) + (((((((int)threadIdx.x) * 2) / 7) + 5) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7))] = ((((1 <= (ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 5) % 7))) && ((ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 5) % 7)) < 8)) && (((((int)threadIdx.x) * 2) % 7) < 6)) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 672) / 49) * 49)) + (ry_outer_outer * 7)) + (((((((int)threadIdx.x) * 2) / 7) + 5) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7)) - 6)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 673) / 49) * 49) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 5) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7))] = ((((1 <= (ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 5) % 7))) && ((ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 5) % 7)) < 8)) && ((((((int)threadIdx.x) * 2) + 1) % 7) < 6)) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 673) / 49) * 49)) + (ry_outer_outer * 7)) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 5) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7)) - 6)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 896) / 49) * 49) + (((((((int)threadIdx.x) * 2) / 7) + 2) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7))] = ((((1 <= (ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 2) % 7))) && ((ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 2) % 7)) < 8)) && (((((int)threadIdx.x) * 2) % 7) < 6)) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 896) / 49) * 49)) + (ry_outer_outer * 7)) + (((((((int)threadIdx.x) * 2) / 7) + 2) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7)) - 6)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 897) / 49) * 49) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 2) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7))] = ((((1 <= (ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 2) % 7))) && ((ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 2) % 7)) < 8)) && ((((((int)threadIdx.x) * 2) + 1) % 7) < 6)) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 897) / 49) * 49)) + (ry_outer_outer * 7)) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 2) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7)) - 6)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 1120) / 49) * 49) + (((((((int)threadIdx.x) * 2) / 7) + 6) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7))] = ((((1 <= (ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 6) % 7))) && ((ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 6) % 7)) < 8)) && (((((int)threadIdx.x) * 2) % 7) < 6)) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 1120) / 49) * 49)) + (ry_outer_outer * 7)) + (((((((int)threadIdx.x) * 2) / 7) + 6) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7)) - 6)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 1121) / 49) * 49) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 6) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7))] = ((((1 <= (ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 6) % 7))) && ((ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 6) % 7)) < 8)) && ((((((int)threadIdx.x) * 2) + 1) % 7) < 6)) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 1121) / 49) * 49)) + (ry_outer_outer * 7)) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 6) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7)) - 6)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 1344) / 49) * 49) + (((((((int)threadIdx.x) * 2) / 7) + 3) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7))] = ((((1 <= (ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 3) % 7))) && ((ry_outer_outer + ((((((int)threadIdx.x) * 2) / 7) + 3) % 7)) < 8)) && (((((int)threadIdx.x) * 2) % 7) < 6)) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 1344) / 49) * 49)) + (ry_outer_outer * 7)) + (((((((int)threadIdx.x) * 2) / 7) + 3) % 7) * 7)) + ((((int)threadIdx.x) * 2) % 7)) - 6)] : 0.000000e+00f);
          pad_temp_shared[((((((((int)threadIdx.x) * 2) + 1345) / 49) * 49) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 3) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7))] = ((((1 <= (ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 3) % 7))) && ((ry_outer_outer + (((((((int)threadIdx.x) * 2) + 1) / 7) + 3) % 7)) < 8)) && ((((((int)threadIdx.x) * 2) + 1) % 7) < 6)) ? data[((((((rc_outer_outer * 1568) + ((((((int)threadIdx.x) * 2) + 1345) / 49) * 49)) + (ry_outer_outer * 7)) + ((((((((int)threadIdx.x) * 2) + 1) / 7) + 3) % 7) * 7)) + (((((int)threadIdx.x) * 2) + 1) % 7)) - 6)] : 0.000000e+00f);
          kernel_shared[((int)threadIdx.x)] = kernel[((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) >> 5) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) & 31) * 9)) + (ry_outer_outer * 3)) + 2)];
          kernel_shared[(((int)threadIdx.x) + 112)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 112) >> 5) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 16) & 31) * 9)) + (ry_outer_outer * 3)) + 2)];
          kernel_shared[(((int)threadIdx.x) + 224)] = kernel[((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) >> 5) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) & 31) * 9)) + (ry_outer_outer * 3)) + 32258)];
          kernel_shared[(((int)threadIdx.x) + 336)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 336) >> 5) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 16) & 31) * 9)) + (ry_outer_outer * 3)) + 2)];
          if (((int)threadIdx.x) < 64) {
            kernel_shared[(((int)threadIdx.x) + 448)] = kernel[((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) >> 5) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) & 31) * 9)) + (ry_outer_outer * 3)) + 64514)];
          }
          __syncthreads();
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[((((int)threadIdx.x) / 7) * 32)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[((((int)threadIdx.x) / 7) * 32)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[((((int)threadIdx.x) / 7) * 32)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[((((int)threadIdx.x) / 7) * 32)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[((((int)threadIdx.x) / 7) * 32)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[((((int)threadIdx.x) / 7) * 32)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[((((int)threadIdx.x) / 7) * 32)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 1)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 1)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 1)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 1)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 1)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 1)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 1)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 2)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 2)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 112)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 2)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 119)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 2)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 126)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 2)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 133)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 2)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 2)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 147)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 3)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 154)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 3)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 161)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 3)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 3)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 175)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 3)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 182)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 3)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 3)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 196)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 4)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 203)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 4)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 210)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 4)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 217)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 4)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 224)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 4)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 231)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 4)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 238)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 4)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 245)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 5)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 252)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 5)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 259)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 5)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 266)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 5)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 273)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 5)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 280)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 5)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 287)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 5)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 294)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 6)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 301)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 6)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 308)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 6)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 315)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 6)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 322)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 6)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 329)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 6)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 336)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 6)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 343)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 7)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 350)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 7)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 357)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 7)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 364)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 7)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 371)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 7)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 378)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 7)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 385)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 7)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 392)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 8)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 399)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 8)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 406)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 8)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 413)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 8)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 420)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 8)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 427)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 8)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 434)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 8)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 441)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 9)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 448)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 9)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 455)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 9)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 462)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 9)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 469)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 9)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 476)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 9)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 483)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 9)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 490)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 10)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 497)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 10)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 504)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 10)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 511)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 10)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 518)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 10)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 525)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 10)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 532)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 10)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 539)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 11)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 546)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 11)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 553)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 11)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 560)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 11)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 567)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 11)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 574)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 11)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 581)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 11)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 588)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 12)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 595)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 12)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 602)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 12)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 609)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 12)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 616)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 12)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 623)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 12)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 630)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 12)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 637)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 13)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 644)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 13)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 651)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 13)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 658)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 13)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 665)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 13)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 672)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 13)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 679)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 13)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 686)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 14)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 693)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 14)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 700)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 14)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 707)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 14)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 714)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 14)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 721)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 14)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 728)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 14)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 735)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 15)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 742)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 15)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 749)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 15)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 756)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 15)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 763)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 15)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 770)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 15)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 777)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 15)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 784)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 16)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 791)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 16)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 798)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 16)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 805)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 16)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 812)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 16)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 819)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 16)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 826)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 16)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 833)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 17)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 840)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 17)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 847)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 17)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 854)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 17)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 861)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 17)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 868)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 17)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 875)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 17)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 882)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 18)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 889)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 18)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 896)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 18)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 903)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 18)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 910)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 18)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 917)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 18)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 924)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 18)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 931)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 19)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 938)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 19)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 945)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 19)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 952)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 19)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 959)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 19)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 966)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 19)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 973)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 19)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 980)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 20)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 987)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 20)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 994)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 20)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1001)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 20)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1008)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 20)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1015)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 20)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1022)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 20)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1029)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 21)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1036)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 21)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1043)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 21)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1050)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 21)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1057)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 21)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1064)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 21)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1071)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 21)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1078)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 22)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1085)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 22)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1092)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 22)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1099)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 22)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1106)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 22)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1113)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 22)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1120)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 22)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1127)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 23)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1134)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 23)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1141)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 23)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1148)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 23)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1155)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 23)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1162)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 23)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1169)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 23)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1176)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 24)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1183)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 24)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1190)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 24)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1197)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 24)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1204)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 24)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1211)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 24)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1218)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 24)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1225)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 25)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1232)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 25)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1239)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 25)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1246)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 25)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1253)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 25)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1260)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 25)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1267)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 25)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1274)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 26)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1281)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 26)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1288)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 26)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1295)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 26)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1302)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 26)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1309)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 26)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1316)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 26)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1323)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 27)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1330)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 27)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1337)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 27)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1344)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 27)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1351)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 27)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1358)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 27)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1365)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 27)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1372)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 28)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1379)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 28)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1386)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 28)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1393)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 28)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1400)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 28)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1407)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 28)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1414)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 28)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1421)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 29)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1428)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 29)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1435)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 29)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1442)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 29)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1449)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 29)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1456)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 29)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1463)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 29)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1470)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 30)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1477)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 30)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1484)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 30)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1491)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 30)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1498)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 30)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1505)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 30)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1512)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 30)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1519)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 31)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1526)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 31)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1533)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 31)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1540)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 31)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1547)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 31)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1554)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 31)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1561)] * kernel_shared[(((((int)threadIdx.x) / 7) * 32) + 31)]));
        }
      }
      for (int i2_inner = 0; i2_inner < 7; ++i2_inner) {
        compute[((((((int)blockIdx.x) * 784) + ((((int)threadIdx.x) / 7) * 49)) + (i2_inner * 7)) + (((int)threadIdx.x) % 7))] = max((conv2d_nchw[i2_inner] + bias[((((int)blockIdx.x) * 16) + (((int)threadIdx.x) / 7))]), 0.000000e+00f);
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 191-195

A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.

.. GENERATED FROM PYTHON SOURCE LINES 195-217

.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Resume search:
    /venv/apache-tvm-py3.7/lib/python3.7/site-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 5 minutes  30.311 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
