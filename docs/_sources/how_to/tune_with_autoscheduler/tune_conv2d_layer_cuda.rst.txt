
.. DO NOT EDIT. THIS FILE WAS AUTOMATICALLY GENERATED BY
.. TVM'S MONKEY-PATCHED VERSION OF SPHINX-GALLERY. TO MAKE
.. CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.py"

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        This tutorial can be used interactively with Google Colab! You can also click
        :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>` to run the Jupyter notebook locally.

        .. image:: https://raw.githubusercontent.com/tlc-pack/web-data/main/images/utilities/colab_button.svg
            :align: center
            :target: https://colab.research.google.com/github/apache/tvm-site/blob/asf-site/docs/_downloads/5f1f7bd7d90710fd404f7bcdc4965622/tune_conv2d_layer_cuda.ipynb
            :width: 300px

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.

.. GENERATED FROM PYTHON SOURCE LINES 39-47

.. code-block:: default


    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python








.. GENERATED FROM PYTHON SOURCE LINES 51-56

Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.

.. GENERATED FROM PYTHON SOURCE LINES 56-68

.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]









.. GENERATED FROM PYTHON SOURCE LINES 69-72

Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.

.. GENERATED FROM PYTHON SOURCE LINES 72-85

.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)





.. GENERATED FROM PYTHON SOURCE LINES 86-103

Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.

.. GENERATED FROM PYTHON SOURCE LINES 103-113

.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Get devices for measurement successfully!




.. GENERATED FROM PYTHON SOURCE LINES 114-120

Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.

.. GENERATED FROM PYTHON SOURCE LINES 120-129

.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx








.. GENERATED FROM PYTHON SOURCE LINES 130-133

We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.

.. GENERATED FROM PYTHON SOURCE LINES 133-137

.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Lowered TIR:
    # from tvm.script import ir as I
    # from tvm.script import tir as T

    @I.ir_module
    class Module:
        @T.prim_func
        def main(data: T.Buffer((1, 512, 7, 7), "float32"), kernel: T.Buffer((512, 512, 3, 3), "float32"), bias: T.Buffer((1, 512, 1, 1), "float32"), compute: T.Buffer((1, 512, 7, 7), "float32")):
            T.func_attr({"from_legacy_te_schedule": T.bool(True), "global_symbol": "main", "tir.noalias": T.bool(True)})
            blockIdx_x = T.launch_thread("blockIdx.x", 112)
            conv2d_nchw = T.allocate([4], "float32", "local")
            pad_temp_shared = T.allocate([672], "float32", "shared")
            kernel_shared = T.allocate([3072], "float32", "shared")
            threadIdx_x = T.launch_thread("threadIdx.x", 56)
            conv2d_nchw_1 = T.Buffer((4,), data=conv2d_nchw, scope="local", align=8)
            conv2d_nchw_1[0] = T.float32(0)
            conv2d_nchw_1[2] = T.float32(0)
            conv2d_nchw_1[1] = T.float32(0)
            conv2d_nchw_1[3] = T.float32(0)
            for rc_outer_outer, ry_outer_outer in T.grid(16, 3):
                cse_var_4: T.int32 = rc_outer_outer * 1568
                cse_var_3: T.int32 = ry_outer_outer * 7
                cse_var_2: T.int32 = rc_outer_outer * 288
                cse_var_1: T.int32 = ry_outer_outer * 3
                threadIdx_x_1 = T.env_thread("threadIdx.x")
                pad_temp_shared_1 = T.Buffer((672,), data=pad_temp_shared, scope="shared")
                data_1 = T.Buffer((25088,), data=data.data)
                with T.launch_thread(threadIdx_x_1, 56):
                    pad_temp_shared_1[threadIdx_x_1] = T.if_then_else(1 <= threadIdx_x_1 % 21 // 3 + ry_outer_outer and threadIdx_x_1 % 21 // 3 + ry_outer_outer < 8 and 1 <= blockIdx_x % 7 + threadIdx_x_1 % 3 and blockIdx_x % 7 + threadIdx_x_1 % 3 < 8, data_1[cse_var_4 + threadIdx_x_1 // 3 * 7 + cse_var_3 + blockIdx_x % 7 + threadIdx_x_1 % 3 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 56):
                    pad_temp_shared_1[threadIdx_x_1 + 56] = T.if_then_else(1 <= (threadIdx_x_1 + 14) % 21 // 3 + ry_outer_outer and (threadIdx_x_1 + 14) % 21 // 3 + ry_outer_outer < 8 and 1 <= blockIdx_x % 7 + (threadIdx_x_1 + 2) % 3 and blockIdx_x % 7 + (threadIdx_x_1 + 2) % 3 < 8, data_1[cse_var_4 + (threadIdx_x_1 + 56) // 3 * 7 + cse_var_3 + blockIdx_x % 7 + (threadIdx_x_1 + 2) % 3 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 56):
                    pad_temp_shared_1[threadIdx_x_1 + 112] = T.if_then_else(1 <= (threadIdx_x_1 + 7) % 21 // 3 + ry_outer_outer and (threadIdx_x_1 + 7) % 21 // 3 + ry_outer_outer < 8 and 1 <= blockIdx_x % 7 + (threadIdx_x_1 + 1) % 3 and blockIdx_x % 7 + (threadIdx_x_1 + 1) % 3 < 8, data_1[cse_var_4 + (threadIdx_x_1 + 112) // 3 * 7 + cse_var_3 + blockIdx_x % 7 + (threadIdx_x_1 + 1) % 3 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 56):
                    pad_temp_shared_1[threadIdx_x_1 + 168] = T.if_then_else(1 <= threadIdx_x_1 % 21 // 3 + ry_outer_outer and threadIdx_x_1 % 21 // 3 + ry_outer_outer < 8 and 1 <= blockIdx_x % 7 + threadIdx_x_1 % 3 and blockIdx_x % 7 + threadIdx_x_1 % 3 < 8, data_1[cse_var_4 + threadIdx_x_1 // 3 * 7 + cse_var_3 + blockIdx_x % 7 + threadIdx_x_1 % 3 + 384], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 56):
                    pad_temp_shared_1[threadIdx_x_1 + 224] = T.if_then_else(1 <= (threadIdx_x_1 + 14) % 21 // 3 + ry_outer_outer and (threadIdx_x_1 + 14) % 21 // 3 + ry_outer_outer < 8 and 1 <= blockIdx_x % 7 + (threadIdx_x_1 + 2) % 3 and blockIdx_x % 7 + (threadIdx_x_1 + 2) % 3 < 8, data_1[cse_var_4 + (threadIdx_x_1 + 224) // 3 * 7 + cse_var_3 + blockIdx_x % 7 + (threadIdx_x_1 + 2) % 3 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 56):
                    pad_temp_shared_1[threadIdx_x_1 + 280] = T.if_then_else(1 <= (threadIdx_x_1 + 7) % 21 // 3 + ry_outer_outer and (threadIdx_x_1 + 7) % 21 // 3 + ry_outer_outer < 8 and 1 <= blockIdx_x % 7 + (threadIdx_x_1 + 1) % 3 and blockIdx_x % 7 + (threadIdx_x_1 + 1) % 3 < 8, data_1[cse_var_4 + (threadIdx_x_1 + 280) // 3 * 7 + cse_var_3 + blockIdx_x % 7 + (threadIdx_x_1 + 1) % 3 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 56):
                    pad_temp_shared_1[threadIdx_x_1 + 336] = T.if_then_else(1 <= threadIdx_x_1 % 21 // 3 + ry_outer_outer and threadIdx_x_1 % 21 // 3 + ry_outer_outer < 8 and 1 <= blockIdx_x % 7 + threadIdx_x_1 % 3 and blockIdx_x % 7 + threadIdx_x_1 % 3 < 8, data_1[cse_var_4 + threadIdx_x_1 // 3 * 7 + cse_var_3 + blockIdx_x % 7 + threadIdx_x_1 % 3 + 776], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 56):
                    pad_temp_shared_1[threadIdx_x_1 + 392] = T.if_then_else(1 <= (threadIdx_x_1 + 14) % 21 // 3 + ry_outer_outer and (threadIdx_x_1 + 14) % 21 // 3 + ry_outer_outer < 8 and 1 <= blockIdx_x % 7 + (threadIdx_x_1 + 2) % 3 and blockIdx_x % 7 + (threadIdx_x_1 + 2) % 3 < 8, data_1[cse_var_4 + (threadIdx_x_1 + 392) // 3 * 7 + cse_var_3 + blockIdx_x % 7 + (threadIdx_x_1 + 2) % 3 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 56):
                    pad_temp_shared_1[threadIdx_x_1 + 448] = T.if_then_else(1 <= (threadIdx_x_1 + 7) % 21 // 3 + ry_outer_outer and (threadIdx_x_1 + 7) % 21 // 3 + ry_outer_outer < 8 and 1 <= blockIdx_x % 7 + (threadIdx_x_1 + 1) % 3 and blockIdx_x % 7 + (threadIdx_x_1 + 1) % 3 < 8, data_1[cse_var_4 + (threadIdx_x_1 + 448) // 3 * 7 + cse_var_3 + blockIdx_x % 7 + (threadIdx_x_1 + 1) % 3 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 56):
                    pad_temp_shared_1[threadIdx_x_1 + 504] = T.if_then_else(1 <= threadIdx_x_1 % 21 // 3 + ry_outer_outer and threadIdx_x_1 % 21 // 3 + ry_outer_outer < 8 and 1 <= blockIdx_x % 7 + threadIdx_x_1 % 3 and blockIdx_x % 7 + threadIdx_x_1 % 3 < 8, data_1[cse_var_4 + threadIdx_x_1 // 3 * 7 + cse_var_3 + blockIdx_x % 7 + threadIdx_x_1 % 3 + 1168], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 56):
                    pad_temp_shared_1[threadIdx_x_1 + 560] = T.if_then_else(1 <= (threadIdx_x_1 + 14) % 21 // 3 + ry_outer_outer and (threadIdx_x_1 + 14) % 21 // 3 + ry_outer_outer < 8 and 1 <= blockIdx_x % 7 + (threadIdx_x_1 + 2) % 3 and blockIdx_x % 7 + (threadIdx_x_1 + 2) % 3 < 8, data_1[cse_var_4 + (threadIdx_x_1 + 560) // 3 * 7 + cse_var_3 + blockIdx_x % 7 + (threadIdx_x_1 + 2) % 3 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 56):
                    pad_temp_shared_1[threadIdx_x_1 + 616] = T.if_then_else(1 <= (threadIdx_x_1 + 7) % 21 // 3 + ry_outer_outer and (threadIdx_x_1 + 7) % 21 // 3 + ry_outer_outer < 8 and 1 <= blockIdx_x % 7 + (threadIdx_x_1 + 1) % 3 and blockIdx_x % 7 + (threadIdx_x_1 + 1) % 3 < 8, data_1[cse_var_4 + (threadIdx_x_1 + 616) // 3 * 7 + cse_var_3 + blockIdx_x % 7 + (threadIdx_x_1 + 1) % 3 - 8], T.float32(0))
                threadIdx_x_2 = T.env_thread("threadIdx.x")
                kernel_shared_1 = T.Buffer((3072,), data=kernel_shared, scope="shared")
                kernel_1 = T.Buffer((2359296,), data=kernel.data)
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2] = kernel_1[blockIdx_x // 7 * 147456 + cse_var_2 + threadIdx_x_2 // 3 * 9 + cse_var_1 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 56] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 56) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 56) % 96 // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 112] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 112) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 16) // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 168] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 168) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 // 3 + 24) % 32 * 9 + cse_var_1 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 224] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 224) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 32) // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 280] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 280) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 88) % 96 // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 336] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 336) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 // 3 + 16) % 32 * 9 + cse_var_1 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 392] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 392) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 8) // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 448] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 448) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 64) % 96 // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 504] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 504) // 96 * 4608 + cse_var_2 + threadIdx_x_2 // 3 * 9 + cse_var_1 + threadIdx_x_2 % 3 + 72]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 560] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 560) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 80) % 96 // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 616] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 616) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 40) // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 672] = kernel_1[blockIdx_x // 7 * 147456 + cse_var_2 + threadIdx_x_2 // 3 * 9 + cse_var_1 + threadIdx_x_2 % 3 + 32256]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 728] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 728) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 56) % 96 // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 784] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 784) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 16) // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 840] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 840) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 // 3 + 24) % 32 * 9 + cse_var_1 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 896] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 896) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 32) // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 952] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 952) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 88) % 96 // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 1008] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1008) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 // 3 + 16) % 32 * 9 + cse_var_1 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 1064] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1064) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 8) // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 1120] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1120) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 64) % 96 // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 1176] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1176) // 96 * 4608 + cse_var_2 + threadIdx_x_2 // 3 * 9 + cse_var_1 + threadIdx_x_2 % 3 + 72]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 1232] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1232) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 80) % 96 // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 1288] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1288) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 40) // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 1344] = kernel_1[blockIdx_x // 7 * 147456 + cse_var_2 + threadIdx_x_2 // 3 * 9 + cse_var_1 + threadIdx_x_2 % 3 + 64512]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 1400] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1400) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 56) % 96 // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 1456] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1456) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 16) // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 1512] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1512) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 // 3 + 24) % 32 * 9 + cse_var_1 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 1568] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1568) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 32) // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 1624] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1624) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 88) % 96 // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 1680] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1680) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 // 3 + 16) % 32 * 9 + cse_var_1 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 1736] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1736) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 8) // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 1792] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1792) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 64) % 96 // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 1848] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1848) // 96 * 4608 + cse_var_2 + threadIdx_x_2 // 3 * 9 + cse_var_1 + threadIdx_x_2 % 3 + 72]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 1904] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1904) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 80) % 96 // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 1960] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1960) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 40) // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 2016] = kernel_1[blockIdx_x // 7 * 147456 + cse_var_2 + threadIdx_x_2 // 3 * 9 + cse_var_1 + threadIdx_x_2 % 3 + 96768]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 2072] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2072) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 56) % 96 // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 2128] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2128) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 16) // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 2184] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2184) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 // 3 + 24) % 32 * 9 + cse_var_1 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 2240] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2240) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 32) // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 2296] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2296) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 88) % 96 // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 2352] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2352) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 // 3 + 16) % 32 * 9 + cse_var_1 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 2408] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2408) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 8) // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 2464] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2464) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 64) % 96 // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 2520] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2520) // 96 * 4608 + cse_var_2 + threadIdx_x_2 // 3 * 9 + cse_var_1 + threadIdx_x_2 % 3 + 72]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 2576] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2576) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 80) % 96 // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 2632] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2632) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 40) // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 2688] = kernel_1[blockIdx_x // 7 * 147456 + cse_var_2 + threadIdx_x_2 // 3 * 9 + cse_var_1 + threadIdx_x_2 % 3 + 129024]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 2744] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2744) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 56) % 96 // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 2800] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2800) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 16) // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 2856] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2856) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 // 3 + 24) % 32 * 9 + cse_var_1 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 2912] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2912) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 32) // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    kernel_shared_1[threadIdx_x_2 + 2968] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2968) // 96 * 4608 + cse_var_2 + (threadIdx_x_2 + 88) % 96 // 3 * 9 + cse_var_1 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 56):
                    if T.likely(threadIdx_x_2 < 48):
                        kernel_shared_1[threadIdx_x_2 + 3024] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3024) // 96 * 4608 + cse_var_2 + threadIdx_x_2 // 3 * 9 + cse_var_1 + threadIdx_x_2 % 3 + 144]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3] * kernel_shared_1[threadIdx_x // 7 * 192]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3] * kernel_shared_1[threadIdx_x // 7 * 192 + 1536]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3] * kernel_shared_1[threadIdx_x // 7 * 192 + 96]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3] * kernel_shared_1[threadIdx_x // 7 * 192 + 1632]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 21] * kernel_shared_1[threadIdx_x // 7 * 192 + 3]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 21] * kernel_shared_1[threadIdx_x // 7 * 192 + 1539]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 21] * kernel_shared_1[threadIdx_x // 7 * 192 + 99]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 21] * kernel_shared_1[threadIdx_x // 7 * 192 + 1635]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 42] * kernel_shared_1[threadIdx_x // 7 * 192 + 6]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 42] * kernel_shared_1[threadIdx_x // 7 * 192 + 1542]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 42] * kernel_shared_1[threadIdx_x // 7 * 192 + 102]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 42] * kernel_shared_1[threadIdx_x // 7 * 192 + 1638]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 63] * kernel_shared_1[threadIdx_x // 7 * 192 + 9]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 63] * kernel_shared_1[threadIdx_x // 7 * 192 + 1545]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 63] * kernel_shared_1[threadIdx_x // 7 * 192 + 105]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 63] * kernel_shared_1[threadIdx_x // 7 * 192 + 1641]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 1] * kernel_shared_1[threadIdx_x // 7 * 192 + 1]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 1] * kernel_shared_1[threadIdx_x // 7 * 192 + 1537]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 1] * kernel_shared_1[threadIdx_x // 7 * 192 + 97]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 1] * kernel_shared_1[threadIdx_x // 7 * 192 + 1633]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 22] * kernel_shared_1[threadIdx_x // 7 * 192 + 4]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 22] * kernel_shared_1[threadIdx_x // 7 * 192 + 1540]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 22] * kernel_shared_1[threadIdx_x // 7 * 192 + 100]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 22] * kernel_shared_1[threadIdx_x // 7 * 192 + 1636]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 43] * kernel_shared_1[threadIdx_x // 7 * 192 + 7]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 43] * kernel_shared_1[threadIdx_x // 7 * 192 + 1543]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 43] * kernel_shared_1[threadIdx_x // 7 * 192 + 103]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 43] * kernel_shared_1[threadIdx_x // 7 * 192 + 1639]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 64] * kernel_shared_1[threadIdx_x // 7 * 192 + 10]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 64] * kernel_shared_1[threadIdx_x // 7 * 192 + 1546]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 64] * kernel_shared_1[threadIdx_x // 7 * 192 + 106]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 64] * kernel_shared_1[threadIdx_x // 7 * 192 + 1642]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 2] * kernel_shared_1[threadIdx_x // 7 * 192 + 2]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 2] * kernel_shared_1[threadIdx_x // 7 * 192 + 1538]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 2] * kernel_shared_1[threadIdx_x // 7 * 192 + 98]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 2] * kernel_shared_1[threadIdx_x // 7 * 192 + 1634]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 23] * kernel_shared_1[threadIdx_x // 7 * 192 + 5]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 23] * kernel_shared_1[threadIdx_x // 7 * 192 + 1541]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 23] * kernel_shared_1[threadIdx_x // 7 * 192 + 101]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 23] * kernel_shared_1[threadIdx_x // 7 * 192 + 1637]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 44] * kernel_shared_1[threadIdx_x // 7 * 192 + 8]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 44] * kernel_shared_1[threadIdx_x // 7 * 192 + 1544]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 44] * kernel_shared_1[threadIdx_x // 7 * 192 + 104]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 44] * kernel_shared_1[threadIdx_x // 7 * 192 + 1640]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 65] * kernel_shared_1[threadIdx_x // 7 * 192 + 11]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 65] * kernel_shared_1[threadIdx_x // 7 * 192 + 1547]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 65] * kernel_shared_1[threadIdx_x // 7 * 192 + 107]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 65] * kernel_shared_1[threadIdx_x // 7 * 192 + 1643]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 84] * kernel_shared_1[threadIdx_x // 7 * 192 + 12]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 84] * kernel_shared_1[threadIdx_x // 7 * 192 + 1548]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 84] * kernel_shared_1[threadIdx_x // 7 * 192 + 108]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 84] * kernel_shared_1[threadIdx_x // 7 * 192 + 1644]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 105] * kernel_shared_1[threadIdx_x // 7 * 192 + 15]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 105] * kernel_shared_1[threadIdx_x // 7 * 192 + 1551]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 105] * kernel_shared_1[threadIdx_x // 7 * 192 + 111]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 105] * kernel_shared_1[threadIdx_x // 7 * 192 + 1647]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 126] * kernel_shared_1[threadIdx_x // 7 * 192 + 18]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 126] * kernel_shared_1[threadIdx_x // 7 * 192 + 1554]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 126] * kernel_shared_1[threadIdx_x // 7 * 192 + 114]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 126] * kernel_shared_1[threadIdx_x // 7 * 192 + 1650]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 147] * kernel_shared_1[threadIdx_x // 7 * 192 + 21]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 147] * kernel_shared_1[threadIdx_x // 7 * 192 + 1557]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 147] * kernel_shared_1[threadIdx_x // 7 * 192 + 117]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 147] * kernel_shared_1[threadIdx_x // 7 * 192 + 1653]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 85] * kernel_shared_1[threadIdx_x // 7 * 192 + 13]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 85] * kernel_shared_1[threadIdx_x // 7 * 192 + 1549]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 85] * kernel_shared_1[threadIdx_x // 7 * 192 + 109]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 85] * kernel_shared_1[threadIdx_x // 7 * 192 + 1645]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 106] * kernel_shared_1[threadIdx_x // 7 * 192 + 16]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 106] * kernel_shared_1[threadIdx_x // 7 * 192 + 1552]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 106] * kernel_shared_1[threadIdx_x // 7 * 192 + 112]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 106] * kernel_shared_1[threadIdx_x // 7 * 192 + 1648]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 127] * kernel_shared_1[threadIdx_x // 7 * 192 + 19]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 127] * kernel_shared_1[threadIdx_x // 7 * 192 + 1555]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 127] * kernel_shared_1[threadIdx_x // 7 * 192 + 115]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 127] * kernel_shared_1[threadIdx_x // 7 * 192 + 1651]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 148] * kernel_shared_1[threadIdx_x // 7 * 192 + 22]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 148] * kernel_shared_1[threadIdx_x // 7 * 192 + 1558]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 148] * kernel_shared_1[threadIdx_x // 7 * 192 + 118]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 148] * kernel_shared_1[threadIdx_x // 7 * 192 + 1654]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 86] * kernel_shared_1[threadIdx_x // 7 * 192 + 14]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 86] * kernel_shared_1[threadIdx_x // 7 * 192 + 1550]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 86] * kernel_shared_1[threadIdx_x // 7 * 192 + 110]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 86] * kernel_shared_1[threadIdx_x // 7 * 192 + 1646]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 107] * kernel_shared_1[threadIdx_x // 7 * 192 + 17]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 107] * kernel_shared_1[threadIdx_x // 7 * 192 + 1553]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 107] * kernel_shared_1[threadIdx_x // 7 * 192 + 113]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 107] * kernel_shared_1[threadIdx_x // 7 * 192 + 1649]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 128] * kernel_shared_1[threadIdx_x // 7 * 192 + 20]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 128] * kernel_shared_1[threadIdx_x // 7 * 192 + 1556]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 128] * kernel_shared_1[threadIdx_x // 7 * 192 + 116]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 128] * kernel_shared_1[threadIdx_x // 7 * 192 + 1652]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 149] * kernel_shared_1[threadIdx_x // 7 * 192 + 23]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 149] * kernel_shared_1[threadIdx_x // 7 * 192 + 1559]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 149] * kernel_shared_1[threadIdx_x // 7 * 192 + 119]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 149] * kernel_shared_1[threadIdx_x // 7 * 192 + 1655]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 168] * kernel_shared_1[threadIdx_x // 7 * 192 + 24]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 168] * kernel_shared_1[threadIdx_x // 7 * 192 + 1560]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 168] * kernel_shared_1[threadIdx_x // 7 * 192 + 120]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 168] * kernel_shared_1[threadIdx_x // 7 * 192 + 1656]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 189] * kernel_shared_1[threadIdx_x // 7 * 192 + 27]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 189] * kernel_shared_1[threadIdx_x // 7 * 192 + 1563]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 189] * kernel_shared_1[threadIdx_x // 7 * 192 + 123]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 189] * kernel_shared_1[threadIdx_x // 7 * 192 + 1659]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 210] * kernel_shared_1[threadIdx_x // 7 * 192 + 30]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 210] * kernel_shared_1[threadIdx_x // 7 * 192 + 1566]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 210] * kernel_shared_1[threadIdx_x // 7 * 192 + 126]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 210] * kernel_shared_1[threadIdx_x // 7 * 192 + 1662]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 231] * kernel_shared_1[threadIdx_x // 7 * 192 + 33]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 231] * kernel_shared_1[threadIdx_x // 7 * 192 + 1569]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 231] * kernel_shared_1[threadIdx_x // 7 * 192 + 129]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 231] * kernel_shared_1[threadIdx_x // 7 * 192 + 1665]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 169] * kernel_shared_1[threadIdx_x // 7 * 192 + 25]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 169] * kernel_shared_1[threadIdx_x // 7 * 192 + 1561]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 169] * kernel_shared_1[threadIdx_x // 7 * 192 + 121]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 169] * kernel_shared_1[threadIdx_x // 7 * 192 + 1657]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 190] * kernel_shared_1[threadIdx_x // 7 * 192 + 28]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 190] * kernel_shared_1[threadIdx_x // 7 * 192 + 1564]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 190] * kernel_shared_1[threadIdx_x // 7 * 192 + 124]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 190] * kernel_shared_1[threadIdx_x // 7 * 192 + 1660]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 211] * kernel_shared_1[threadIdx_x // 7 * 192 + 31]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 211] * kernel_shared_1[threadIdx_x // 7 * 192 + 1567]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 211] * kernel_shared_1[threadIdx_x // 7 * 192 + 127]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 211] * kernel_shared_1[threadIdx_x // 7 * 192 + 1663]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 232] * kernel_shared_1[threadIdx_x // 7 * 192 + 34]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 232] * kernel_shared_1[threadIdx_x // 7 * 192 + 1570]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 232] * kernel_shared_1[threadIdx_x // 7 * 192 + 130]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 232] * kernel_shared_1[threadIdx_x // 7 * 192 + 1666]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 170] * kernel_shared_1[threadIdx_x // 7 * 192 + 26]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 170] * kernel_shared_1[threadIdx_x // 7 * 192 + 1562]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 170] * kernel_shared_1[threadIdx_x // 7 * 192 + 122]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 170] * kernel_shared_1[threadIdx_x // 7 * 192 + 1658]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 191] * kernel_shared_1[threadIdx_x // 7 * 192 + 29]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 191] * kernel_shared_1[threadIdx_x // 7 * 192 + 1565]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 191] * kernel_shared_1[threadIdx_x // 7 * 192 + 125]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 191] * kernel_shared_1[threadIdx_x // 7 * 192 + 1661]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 212] * kernel_shared_1[threadIdx_x // 7 * 192 + 32]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 212] * kernel_shared_1[threadIdx_x // 7 * 192 + 1568]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 212] * kernel_shared_1[threadIdx_x // 7 * 192 + 128]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 212] * kernel_shared_1[threadIdx_x // 7 * 192 + 1664]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 233] * kernel_shared_1[threadIdx_x // 7 * 192 + 35]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 233] * kernel_shared_1[threadIdx_x // 7 * 192 + 1571]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 233] * kernel_shared_1[threadIdx_x // 7 * 192 + 131]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 233] * kernel_shared_1[threadIdx_x // 7 * 192 + 1667]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 252] * kernel_shared_1[threadIdx_x // 7 * 192 + 36]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 252] * kernel_shared_1[threadIdx_x // 7 * 192 + 1572]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 252] * kernel_shared_1[threadIdx_x // 7 * 192 + 132]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 252] * kernel_shared_1[threadIdx_x // 7 * 192 + 1668]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 273] * kernel_shared_1[threadIdx_x // 7 * 192 + 39]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 273] * kernel_shared_1[threadIdx_x // 7 * 192 + 1575]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 273] * kernel_shared_1[threadIdx_x // 7 * 192 + 135]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 273] * kernel_shared_1[threadIdx_x // 7 * 192 + 1671]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 294] * kernel_shared_1[threadIdx_x // 7 * 192 + 42]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 294] * kernel_shared_1[threadIdx_x // 7 * 192 + 1578]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 294] * kernel_shared_1[threadIdx_x // 7 * 192 + 138]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 294] * kernel_shared_1[threadIdx_x // 7 * 192 + 1674]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 315] * kernel_shared_1[threadIdx_x // 7 * 192 + 45]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 315] * kernel_shared_1[threadIdx_x // 7 * 192 + 1581]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 315] * kernel_shared_1[threadIdx_x // 7 * 192 + 141]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 315] * kernel_shared_1[threadIdx_x // 7 * 192 + 1677]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 253] * kernel_shared_1[threadIdx_x // 7 * 192 + 37]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 253] * kernel_shared_1[threadIdx_x // 7 * 192 + 1573]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 253] * kernel_shared_1[threadIdx_x // 7 * 192 + 133]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 253] * kernel_shared_1[threadIdx_x // 7 * 192 + 1669]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 274] * kernel_shared_1[threadIdx_x // 7 * 192 + 40]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 274] * kernel_shared_1[threadIdx_x // 7 * 192 + 1576]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 274] * kernel_shared_1[threadIdx_x // 7 * 192 + 136]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 274] * kernel_shared_1[threadIdx_x // 7 * 192 + 1672]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 295] * kernel_shared_1[threadIdx_x // 7 * 192 + 43]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 295] * kernel_shared_1[threadIdx_x // 7 * 192 + 1579]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 295] * kernel_shared_1[threadIdx_x // 7 * 192 + 139]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 295] * kernel_shared_1[threadIdx_x // 7 * 192 + 1675]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 316] * kernel_shared_1[threadIdx_x // 7 * 192 + 46]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 316] * kernel_shared_1[threadIdx_x // 7 * 192 + 1582]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 316] * kernel_shared_1[threadIdx_x // 7 * 192 + 142]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 316] * kernel_shared_1[threadIdx_x // 7 * 192 + 1678]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 254] * kernel_shared_1[threadIdx_x // 7 * 192 + 38]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 254] * kernel_shared_1[threadIdx_x // 7 * 192 + 1574]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 254] * kernel_shared_1[threadIdx_x // 7 * 192 + 134]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 254] * kernel_shared_1[threadIdx_x // 7 * 192 + 1670]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 275] * kernel_shared_1[threadIdx_x // 7 * 192 + 41]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 275] * kernel_shared_1[threadIdx_x // 7 * 192 + 1577]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 275] * kernel_shared_1[threadIdx_x // 7 * 192 + 137]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 275] * kernel_shared_1[threadIdx_x // 7 * 192 + 1673]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 296] * kernel_shared_1[threadIdx_x // 7 * 192 + 44]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 296] * kernel_shared_1[threadIdx_x // 7 * 192 + 1580]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 296] * kernel_shared_1[threadIdx_x // 7 * 192 + 140]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 296] * kernel_shared_1[threadIdx_x // 7 * 192 + 1676]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 317] * kernel_shared_1[threadIdx_x // 7 * 192 + 47]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 317] * kernel_shared_1[threadIdx_x // 7 * 192 + 1583]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 317] * kernel_shared_1[threadIdx_x // 7 * 192 + 143]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 317] * kernel_shared_1[threadIdx_x // 7 * 192 + 1679]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 336] * kernel_shared_1[threadIdx_x // 7 * 192 + 48]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 336] * kernel_shared_1[threadIdx_x // 7 * 192 + 1584]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 336] * kernel_shared_1[threadIdx_x // 7 * 192 + 144]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 336] * kernel_shared_1[threadIdx_x // 7 * 192 + 1680]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 357] * kernel_shared_1[threadIdx_x // 7 * 192 + 51]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 357] * kernel_shared_1[threadIdx_x // 7 * 192 + 1587]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 357] * kernel_shared_1[threadIdx_x // 7 * 192 + 147]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 357] * kernel_shared_1[threadIdx_x // 7 * 192 + 1683]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 378] * kernel_shared_1[threadIdx_x // 7 * 192 + 54]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 378] * kernel_shared_1[threadIdx_x // 7 * 192 + 1590]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 378] * kernel_shared_1[threadIdx_x // 7 * 192 + 150]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 378] * kernel_shared_1[threadIdx_x // 7 * 192 + 1686]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 399] * kernel_shared_1[threadIdx_x // 7 * 192 + 57]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 399] * kernel_shared_1[threadIdx_x // 7 * 192 + 1593]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 399] * kernel_shared_1[threadIdx_x // 7 * 192 + 153]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 399] * kernel_shared_1[threadIdx_x // 7 * 192 + 1689]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 337] * kernel_shared_1[threadIdx_x // 7 * 192 + 49]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 337] * kernel_shared_1[threadIdx_x // 7 * 192 + 1585]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 337] * kernel_shared_1[threadIdx_x // 7 * 192 + 145]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 337] * kernel_shared_1[threadIdx_x // 7 * 192 + 1681]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 358] * kernel_shared_1[threadIdx_x // 7 * 192 + 52]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 358] * kernel_shared_1[threadIdx_x // 7 * 192 + 1588]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 358] * kernel_shared_1[threadIdx_x // 7 * 192 + 148]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 358] * kernel_shared_1[threadIdx_x // 7 * 192 + 1684]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 379] * kernel_shared_1[threadIdx_x // 7 * 192 + 55]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 379] * kernel_shared_1[threadIdx_x // 7 * 192 + 1591]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 379] * kernel_shared_1[threadIdx_x // 7 * 192 + 151]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 379] * kernel_shared_1[threadIdx_x // 7 * 192 + 1687]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 400] * kernel_shared_1[threadIdx_x // 7 * 192 + 58]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 400] * kernel_shared_1[threadIdx_x // 7 * 192 + 1594]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 400] * kernel_shared_1[threadIdx_x // 7 * 192 + 154]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 400] * kernel_shared_1[threadIdx_x // 7 * 192 + 1690]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 338] * kernel_shared_1[threadIdx_x // 7 * 192 + 50]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 338] * kernel_shared_1[threadIdx_x // 7 * 192 + 1586]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 338] * kernel_shared_1[threadIdx_x // 7 * 192 + 146]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 338] * kernel_shared_1[threadIdx_x // 7 * 192 + 1682]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 359] * kernel_shared_1[threadIdx_x // 7 * 192 + 53]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 359] * kernel_shared_1[threadIdx_x // 7 * 192 + 1589]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 359] * kernel_shared_1[threadIdx_x // 7 * 192 + 149]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 359] * kernel_shared_1[threadIdx_x // 7 * 192 + 1685]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 380] * kernel_shared_1[threadIdx_x // 7 * 192 + 56]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 380] * kernel_shared_1[threadIdx_x // 7 * 192 + 1592]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 380] * kernel_shared_1[threadIdx_x // 7 * 192 + 152]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 380] * kernel_shared_1[threadIdx_x // 7 * 192 + 1688]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 401] * kernel_shared_1[threadIdx_x // 7 * 192 + 59]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 401] * kernel_shared_1[threadIdx_x // 7 * 192 + 1595]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 401] * kernel_shared_1[threadIdx_x // 7 * 192 + 155]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 401] * kernel_shared_1[threadIdx_x // 7 * 192 + 1691]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 420] * kernel_shared_1[threadIdx_x // 7 * 192 + 60]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 420] * kernel_shared_1[threadIdx_x // 7 * 192 + 1596]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 420] * kernel_shared_1[threadIdx_x // 7 * 192 + 156]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 420] * kernel_shared_1[threadIdx_x // 7 * 192 + 1692]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 441] * kernel_shared_1[threadIdx_x // 7 * 192 + 63]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 441] * kernel_shared_1[threadIdx_x // 7 * 192 + 1599]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 441] * kernel_shared_1[threadIdx_x // 7 * 192 + 159]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 441] * kernel_shared_1[threadIdx_x // 7 * 192 + 1695]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 462] * kernel_shared_1[threadIdx_x // 7 * 192 + 66]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 462] * kernel_shared_1[threadIdx_x // 7 * 192 + 1602]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 462] * kernel_shared_1[threadIdx_x // 7 * 192 + 162]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 462] * kernel_shared_1[threadIdx_x // 7 * 192 + 1698]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 483] * kernel_shared_1[threadIdx_x // 7 * 192 + 69]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 483] * kernel_shared_1[threadIdx_x // 7 * 192 + 1605]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 483] * kernel_shared_1[threadIdx_x // 7 * 192 + 165]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 483] * kernel_shared_1[threadIdx_x // 7 * 192 + 1701]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 421] * kernel_shared_1[threadIdx_x // 7 * 192 + 61]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 421] * kernel_shared_1[threadIdx_x // 7 * 192 + 1597]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 421] * kernel_shared_1[threadIdx_x // 7 * 192 + 157]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 421] * kernel_shared_1[threadIdx_x // 7 * 192 + 1693]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 442] * kernel_shared_1[threadIdx_x // 7 * 192 + 64]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 442] * kernel_shared_1[threadIdx_x // 7 * 192 + 1600]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 442] * kernel_shared_1[threadIdx_x // 7 * 192 + 160]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 442] * kernel_shared_1[threadIdx_x // 7 * 192 + 1696]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 463] * kernel_shared_1[threadIdx_x // 7 * 192 + 67]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 463] * kernel_shared_1[threadIdx_x // 7 * 192 + 1603]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 463] * kernel_shared_1[threadIdx_x // 7 * 192 + 163]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 463] * kernel_shared_1[threadIdx_x // 7 * 192 + 1699]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 484] * kernel_shared_1[threadIdx_x // 7 * 192 + 70]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 484] * kernel_shared_1[threadIdx_x // 7 * 192 + 1606]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 484] * kernel_shared_1[threadIdx_x // 7 * 192 + 166]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 484] * kernel_shared_1[threadIdx_x // 7 * 192 + 1702]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 422] * kernel_shared_1[threadIdx_x // 7 * 192 + 62]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 422] * kernel_shared_1[threadIdx_x // 7 * 192 + 1598]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 422] * kernel_shared_1[threadIdx_x // 7 * 192 + 158]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 422] * kernel_shared_1[threadIdx_x // 7 * 192 + 1694]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 443] * kernel_shared_1[threadIdx_x // 7 * 192 + 65]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 443] * kernel_shared_1[threadIdx_x // 7 * 192 + 1601]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 443] * kernel_shared_1[threadIdx_x // 7 * 192 + 161]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 443] * kernel_shared_1[threadIdx_x // 7 * 192 + 1697]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 464] * kernel_shared_1[threadIdx_x // 7 * 192 + 68]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 464] * kernel_shared_1[threadIdx_x // 7 * 192 + 1604]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 464] * kernel_shared_1[threadIdx_x // 7 * 192 + 164]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 464] * kernel_shared_1[threadIdx_x // 7 * 192 + 1700]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 485] * kernel_shared_1[threadIdx_x // 7 * 192 + 71]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 485] * kernel_shared_1[threadIdx_x // 7 * 192 + 1607]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 485] * kernel_shared_1[threadIdx_x // 7 * 192 + 167]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 485] * kernel_shared_1[threadIdx_x // 7 * 192 + 1703]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 504] * kernel_shared_1[threadIdx_x // 7 * 192 + 72]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 504] * kernel_shared_1[threadIdx_x // 7 * 192 + 1608]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 504] * kernel_shared_1[threadIdx_x // 7 * 192 + 168]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 504] * kernel_shared_1[threadIdx_x // 7 * 192 + 1704]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 525] * kernel_shared_1[threadIdx_x // 7 * 192 + 75]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 525] * kernel_shared_1[threadIdx_x // 7 * 192 + 1611]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 525] * kernel_shared_1[threadIdx_x // 7 * 192 + 171]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 525] * kernel_shared_1[threadIdx_x // 7 * 192 + 1707]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 546] * kernel_shared_1[threadIdx_x // 7 * 192 + 78]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 546] * kernel_shared_1[threadIdx_x // 7 * 192 + 1614]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 546] * kernel_shared_1[threadIdx_x // 7 * 192 + 174]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 546] * kernel_shared_1[threadIdx_x // 7 * 192 + 1710]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 567] * kernel_shared_1[threadIdx_x // 7 * 192 + 81]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 567] * kernel_shared_1[threadIdx_x // 7 * 192 + 1617]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 567] * kernel_shared_1[threadIdx_x // 7 * 192 + 177]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 567] * kernel_shared_1[threadIdx_x // 7 * 192 + 1713]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 505] * kernel_shared_1[threadIdx_x // 7 * 192 + 73]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 505] * kernel_shared_1[threadIdx_x // 7 * 192 + 1609]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 505] * kernel_shared_1[threadIdx_x // 7 * 192 + 169]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 505] * kernel_shared_1[threadIdx_x // 7 * 192 + 1705]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 526] * kernel_shared_1[threadIdx_x // 7 * 192 + 76]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 526] * kernel_shared_1[threadIdx_x // 7 * 192 + 1612]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 526] * kernel_shared_1[threadIdx_x // 7 * 192 + 172]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 526] * kernel_shared_1[threadIdx_x // 7 * 192 + 1708]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 547] * kernel_shared_1[threadIdx_x // 7 * 192 + 79]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 547] * kernel_shared_1[threadIdx_x // 7 * 192 + 1615]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 547] * kernel_shared_1[threadIdx_x // 7 * 192 + 175]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 547] * kernel_shared_1[threadIdx_x // 7 * 192 + 1711]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 568] * kernel_shared_1[threadIdx_x // 7 * 192 + 82]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 568] * kernel_shared_1[threadIdx_x // 7 * 192 + 1618]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 568] * kernel_shared_1[threadIdx_x // 7 * 192 + 178]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 568] * kernel_shared_1[threadIdx_x // 7 * 192 + 1714]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 506] * kernel_shared_1[threadIdx_x // 7 * 192 + 74]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 506] * kernel_shared_1[threadIdx_x // 7 * 192 + 1610]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 506] * kernel_shared_1[threadIdx_x // 7 * 192 + 170]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 506] * kernel_shared_1[threadIdx_x // 7 * 192 + 1706]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 527] * kernel_shared_1[threadIdx_x // 7 * 192 + 77]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 527] * kernel_shared_1[threadIdx_x // 7 * 192 + 1613]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 527] * kernel_shared_1[threadIdx_x // 7 * 192 + 173]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 527] * kernel_shared_1[threadIdx_x // 7 * 192 + 1709]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 548] * kernel_shared_1[threadIdx_x // 7 * 192 + 80]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 548] * kernel_shared_1[threadIdx_x // 7 * 192 + 1616]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 548] * kernel_shared_1[threadIdx_x // 7 * 192 + 176]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 548] * kernel_shared_1[threadIdx_x // 7 * 192 + 1712]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 569] * kernel_shared_1[threadIdx_x // 7 * 192 + 83]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 569] * kernel_shared_1[threadIdx_x // 7 * 192 + 1619]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 569] * kernel_shared_1[threadIdx_x // 7 * 192 + 179]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 569] * kernel_shared_1[threadIdx_x // 7 * 192 + 1715]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 588] * kernel_shared_1[threadIdx_x // 7 * 192 + 84]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 588] * kernel_shared_1[threadIdx_x // 7 * 192 + 1620]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 588] * kernel_shared_1[threadIdx_x // 7 * 192 + 180]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 588] * kernel_shared_1[threadIdx_x // 7 * 192 + 1716]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 609] * kernel_shared_1[threadIdx_x // 7 * 192 + 87]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 609] * kernel_shared_1[threadIdx_x // 7 * 192 + 1623]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 609] * kernel_shared_1[threadIdx_x // 7 * 192 + 183]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 609] * kernel_shared_1[threadIdx_x // 7 * 192 + 1719]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 630] * kernel_shared_1[threadIdx_x // 7 * 192 + 90]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 630] * kernel_shared_1[threadIdx_x // 7 * 192 + 1626]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 630] * kernel_shared_1[threadIdx_x // 7 * 192 + 186]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 630] * kernel_shared_1[threadIdx_x // 7 * 192 + 1722]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 651] * kernel_shared_1[threadIdx_x // 7 * 192 + 93]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 651] * kernel_shared_1[threadIdx_x // 7 * 192 + 1629]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 651] * kernel_shared_1[threadIdx_x // 7 * 192 + 189]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 651] * kernel_shared_1[threadIdx_x // 7 * 192 + 1725]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 589] * kernel_shared_1[threadIdx_x // 7 * 192 + 85]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 589] * kernel_shared_1[threadIdx_x // 7 * 192 + 1621]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 589] * kernel_shared_1[threadIdx_x // 7 * 192 + 181]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 589] * kernel_shared_1[threadIdx_x // 7 * 192 + 1717]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 610] * kernel_shared_1[threadIdx_x // 7 * 192 + 88]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 610] * kernel_shared_1[threadIdx_x // 7 * 192 + 1624]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 610] * kernel_shared_1[threadIdx_x // 7 * 192 + 184]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 610] * kernel_shared_1[threadIdx_x // 7 * 192 + 1720]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 631] * kernel_shared_1[threadIdx_x // 7 * 192 + 91]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 631] * kernel_shared_1[threadIdx_x // 7 * 192 + 1627]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 631] * kernel_shared_1[threadIdx_x // 7 * 192 + 187]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 631] * kernel_shared_1[threadIdx_x // 7 * 192 + 1723]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 652] * kernel_shared_1[threadIdx_x // 7 * 192 + 94]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 652] * kernel_shared_1[threadIdx_x // 7 * 192 + 1630]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 652] * kernel_shared_1[threadIdx_x // 7 * 192 + 190]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 652] * kernel_shared_1[threadIdx_x // 7 * 192 + 1726]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 590] * kernel_shared_1[threadIdx_x // 7 * 192 + 86]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 590] * kernel_shared_1[threadIdx_x // 7 * 192 + 1622]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 590] * kernel_shared_1[threadIdx_x // 7 * 192 + 182]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 590] * kernel_shared_1[threadIdx_x // 7 * 192 + 1718]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 611] * kernel_shared_1[threadIdx_x // 7 * 192 + 89]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 611] * kernel_shared_1[threadIdx_x // 7 * 192 + 1625]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 611] * kernel_shared_1[threadIdx_x // 7 * 192 + 185]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 611] * kernel_shared_1[threadIdx_x // 7 * 192 + 1721]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 632] * kernel_shared_1[threadIdx_x // 7 * 192 + 92]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 632] * kernel_shared_1[threadIdx_x // 7 * 192 + 1628]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 632] * kernel_shared_1[threadIdx_x // 7 * 192 + 188]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 632] * kernel_shared_1[threadIdx_x // 7 * 192 + 1724]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 653] * kernel_shared_1[threadIdx_x // 7 * 192 + 95]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 653] * kernel_shared_1[threadIdx_x // 7 * 192 + 1631]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 653] * kernel_shared_1[threadIdx_x // 7 * 192 + 191]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 3 + 653] * kernel_shared_1[threadIdx_x // 7 * 192 + 1727]
            for i1_inner in range(2):
                compute_1 = T.Buffer((25088,), data=compute.data)
                bias_1 = T.Buffer((512,), data=bias.data)
                compute_1[blockIdx_x // 7 * 1568 + threadIdx_x // 7 * 98 + i1_inner * 49 + threadIdx_x % 7 * 7 + blockIdx_x % 7] = T.max(conv2d_nchw_1[i1_inner] + bias_1[blockIdx_x // 7 * 32 + threadIdx_x // 7 * 2 + i1_inner], T.float32(0))
                compute_1[blockIdx_x // 7 * 1568 + threadIdx_x // 7 * 98 + i1_inner * 49 + threadIdx_x % 7 * 7 + blockIdx_x % 7 + 784] = T.max(conv2d_nchw_1[i1_inner + 2] + bias_1[blockIdx_x // 7 * 32 + threadIdx_x // 7 * 2 + i1_inner + 16], T.float32(0))




.. GENERATED FROM PYTHON SOURCE LINES 138-141

Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.

.. GENERATED FROM PYTHON SOURCE LINES 141-168

.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Execution time of this operator: 0.419 ms




.. GENERATED FROM PYTHON SOURCE LINES 169-174

Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

.. GENERATED FROM PYTHON SOURCE LINES 176-179

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.

.. GENERATED FROM PYTHON SOURCE LINES 179-186

.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=2)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=8)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=2)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=7)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=4)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=8)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=1)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=1)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=1)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=3)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=2)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=8)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=2)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=7)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=1)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=56)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=56)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 1024)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(56) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[4];
      __shared__ float pad_temp_shared[672];
      __shared__ float kernel_shared[3072];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 16; ++rc_outer_outer) {
        for (int ry_outer_outer = 0; ry_outer_outer < 3; ++ry_outer_outer) {
          __syncthreads();
          pad_temp_shared[((int)threadIdx.x)] = (((((1 <= (((((int)threadIdx.x) % 21) / 3) + ry_outer_outer)) && ((((((int)threadIdx.x) % 21) / 3) + ry_outer_outer) < 8)) && (1 <= ((((int)blockIdx.x) % 7) + (((int)threadIdx.x) % 3)))) && (((((int)blockIdx.x) % 7) + (((int)threadIdx.x) % 3)) < 8)) ? data[((((((rc_outer_outer * 1568) + ((((int)threadIdx.x) / 3) * 7)) + (ry_outer_outer * 7)) + (((int)blockIdx.x) % 7)) + (((int)threadIdx.x) % 3)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 56)] = (((((1 <= ((((((int)threadIdx.x) + 14) % 21) / 3) + ry_outer_outer)) && (((((((int)threadIdx.x) + 14) % 21) / 3) + ry_outer_outer) < 8)) && (1 <= ((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 2) % 3)))) && (((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 2) % 3)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 56) / 3) * 7)) + (ry_outer_outer * 7)) + (((int)blockIdx.x) % 7)) + ((((int)threadIdx.x) + 2) % 3)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 112)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 21) / 3) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 21) / 3) + ry_outer_outer) < 8)) && (1 <= ((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 1) % 3)))) && (((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 1) % 3)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 112) / 3) * 7)) + (ry_outer_outer * 7)) + (((int)blockIdx.x) % 7)) + ((((int)threadIdx.x) + 1) % 3)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 168)] = (((((1 <= (((((int)threadIdx.x) % 21) / 3) + ry_outer_outer)) && ((((((int)threadIdx.x) % 21) / 3) + ry_outer_outer) < 8)) && (1 <= ((((int)blockIdx.x) % 7) + (((int)threadIdx.x) % 3)))) && (((((int)blockIdx.x) % 7) + (((int)threadIdx.x) % 3)) < 8)) ? data[((((((rc_outer_outer * 1568) + ((((int)threadIdx.x) / 3) * 7)) + (ry_outer_outer * 7)) + (((int)blockIdx.x) % 7)) + (((int)threadIdx.x) % 3)) + 384)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 224)] = (((((1 <= ((((((int)threadIdx.x) + 14) % 21) / 3) + ry_outer_outer)) && (((((((int)threadIdx.x) + 14) % 21) / 3) + ry_outer_outer) < 8)) && (1 <= ((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 2) % 3)))) && (((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 2) % 3)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 224) / 3) * 7)) + (ry_outer_outer * 7)) + (((int)blockIdx.x) % 7)) + ((((int)threadIdx.x) + 2) % 3)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 280)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 21) / 3) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 21) / 3) + ry_outer_outer) < 8)) && (1 <= ((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 1) % 3)))) && (((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 1) % 3)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 280) / 3) * 7)) + (ry_outer_outer * 7)) + (((int)blockIdx.x) % 7)) + ((((int)threadIdx.x) + 1) % 3)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 336)] = (((((1 <= (((((int)threadIdx.x) % 21) / 3) + ry_outer_outer)) && ((((((int)threadIdx.x) % 21) / 3) + ry_outer_outer) < 8)) && (1 <= ((((int)blockIdx.x) % 7) + (((int)threadIdx.x) % 3)))) && (((((int)blockIdx.x) % 7) + (((int)threadIdx.x) % 3)) < 8)) ? data[((((((rc_outer_outer * 1568) + ((((int)threadIdx.x) / 3) * 7)) + (ry_outer_outer * 7)) + (((int)blockIdx.x) % 7)) + (((int)threadIdx.x) % 3)) + 776)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 392)] = (((((1 <= ((((((int)threadIdx.x) + 14) % 21) / 3) + ry_outer_outer)) && (((((((int)threadIdx.x) + 14) % 21) / 3) + ry_outer_outer) < 8)) && (1 <= ((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 2) % 3)))) && (((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 2) % 3)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 392) / 3) * 7)) + (ry_outer_outer * 7)) + (((int)blockIdx.x) % 7)) + ((((int)threadIdx.x) + 2) % 3)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 448)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 21) / 3) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 21) / 3) + ry_outer_outer) < 8)) && (1 <= ((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 1) % 3)))) && (((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 1) % 3)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 448) / 3) * 7)) + (ry_outer_outer * 7)) + (((int)blockIdx.x) % 7)) + ((((int)threadIdx.x) + 1) % 3)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 504)] = (((((1 <= (((((int)threadIdx.x) % 21) / 3) + ry_outer_outer)) && ((((((int)threadIdx.x) % 21) / 3) + ry_outer_outer) < 8)) && (1 <= ((((int)blockIdx.x) % 7) + (((int)threadIdx.x) % 3)))) && (((((int)blockIdx.x) % 7) + (((int)threadIdx.x) % 3)) < 8)) ? data[((((((rc_outer_outer * 1568) + ((((int)threadIdx.x) / 3) * 7)) + (ry_outer_outer * 7)) + (((int)blockIdx.x) % 7)) + (((int)threadIdx.x) % 3)) + 1168)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 560)] = (((((1 <= ((((((int)threadIdx.x) + 14) % 21) / 3) + ry_outer_outer)) && (((((((int)threadIdx.x) + 14) % 21) / 3) + ry_outer_outer) < 8)) && (1 <= ((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 2) % 3)))) && (((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 2) % 3)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 560) / 3) * 7)) + (ry_outer_outer * 7)) + (((int)blockIdx.x) % 7)) + ((((int)threadIdx.x) + 2) % 3)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 616)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 21) / 3) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 21) / 3) + ry_outer_outer) < 8)) && (1 <= ((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 1) % 3)))) && (((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 1) % 3)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 616) / 3) * 7)) + (ry_outer_outer * 7)) + (((int)blockIdx.x) % 7)) + ((((int)threadIdx.x) + 1) % 3)) - 8)] : 0.000000e+00f);
          kernel_shared[((int)threadIdx.x)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3))];
          kernel_shared[(((int)threadIdx.x) + 56)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 56) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 56) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 112)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 112) / 96) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 16) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 168)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 168) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) / 3) + 24) & 31) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3))];
          kernel_shared[(((int)threadIdx.x) + 224)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 224) / 96) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 32) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 280)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 280) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 88) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 336)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 336) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) / 3) + 16) & 31) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3))];
          kernel_shared[(((int)threadIdx.x) + 392)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 392) / 96) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 8) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 448)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 448) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 504)] = kernel[((((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 504) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 72)];
          kernel_shared[(((int)threadIdx.x) + 560)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 560) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 80) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 616)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 616) / 96) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 40) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 672)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 32256)];
          kernel_shared[(((int)threadIdx.x) + 728)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 728) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 56) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 784)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 784) / 96) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 16) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 840)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 840) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) / 3) + 24) & 31) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3))];
          kernel_shared[(((int)threadIdx.x) + 896)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 896) / 96) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 32) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 952)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 952) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 88) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1008)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1008) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) / 3) + 16) & 31) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1064)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1064) / 96) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 8) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1120)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1120) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1176)] = kernel[((((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1176) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 72)];
          kernel_shared[(((int)threadIdx.x) + 1232)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1232) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 80) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1288)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1288) / 96) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 40) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1344)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 64512)];
          kernel_shared[(((int)threadIdx.x) + 1400)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1400) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 56) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1456)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1456) / 96) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 16) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1512)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1512) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) / 3) + 24) & 31) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1568)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1568) / 96) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 32) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1624)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1624) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 88) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1680)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1680) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) / 3) + 16) & 31) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1736)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1736) / 96) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 8) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1792)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1792) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1848)] = kernel[((((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1848) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 72)];
          kernel_shared[(((int)threadIdx.x) + 1904)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1904) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 80) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1960)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1960) / 96) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 40) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2016)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 96768)];
          kernel_shared[(((int)threadIdx.x) + 2072)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2072) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 56) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2128)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2128) / 96) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 16) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2184)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2184) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) / 3) + 24) & 31) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2240)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2240) / 96) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 32) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2296)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2296) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 88) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2352)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2352) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) / 3) + 16) & 31) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2408)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2408) / 96) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 8) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2464)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2464) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2520)] = kernel[((((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2520) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 72)];
          kernel_shared[(((int)threadIdx.x) + 2576)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2576) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 80) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2632)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2632) / 96) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 40) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2688)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 129024)];
          kernel_shared[(((int)threadIdx.x) + 2744)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2744) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 56) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2800)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2800) / 96) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 16) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2856)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2856) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) / 3) + 24) & 31) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2912)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2912) / 96) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 32) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2968)] = kernel[(((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2968) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 88) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          if (((int)threadIdx.x) < 48) {
            kernel_shared[(((int)threadIdx.x) + 3024)] = kernel[((((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3024) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 144)];
          }
          __syncthreads();
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[((((int)threadIdx.x) / 7) * 192)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1536)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 96)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1632)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 3)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1539)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 99)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1635)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 6)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1542)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 102)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1638)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 9)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1545)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 105)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1641)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1537)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 97)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1633)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 22)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 4)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 22)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1540)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 22)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 100)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 22)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1636)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 43)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 7)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 43)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1543)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 43)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 103)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 43)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1639)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 64)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 10)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 64)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1546)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 64)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 106)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 64)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1642)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 2)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1538)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 98)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1634)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 23)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 5)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 23)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1541)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 23)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 101)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 23)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1637)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 44)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 8)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 44)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1544)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 44)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 104)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 44)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1640)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 65)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 11)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 65)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1547)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 65)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 107)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 65)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1643)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 12)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1548)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 108)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1644)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 15)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1551)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 111)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1647)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 126)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 18)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 126)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1554)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 126)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 114)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 126)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1650)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 147)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 21)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 147)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1557)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 147)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 117)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 147)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1653)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 13)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1549)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 109)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1645)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 106)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 16)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 106)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1552)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 106)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 112)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 106)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1648)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 127)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 19)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 127)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1555)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 127)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 115)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 127)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1651)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 148)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 22)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 148)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1558)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 148)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 118)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 148)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1654)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 14)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1550)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 110)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1646)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 107)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 17)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 107)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1553)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 107)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 113)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 107)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1649)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 128)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 20)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 128)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1556)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 128)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 116)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 128)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1652)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 149)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 23)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 149)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1559)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 149)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 119)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 149)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1655)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 24)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1560)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 120)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1656)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 27)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1563)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 123)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1659)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 210)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 30)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 210)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1566)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 210)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 126)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 210)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1662)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 231)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 33)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 231)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1569)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 231)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 129)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 231)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1665)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 169)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 25)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 169)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1561)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 169)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 121)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 169)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1657)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 190)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 28)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 190)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1564)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 190)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 124)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 190)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1660)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 211)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 31)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 211)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1567)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 211)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 127)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 211)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1663)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 232)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 34)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 232)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1570)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 232)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 130)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 232)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1666)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 170)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 26)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 170)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1562)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 170)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 122)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 170)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1658)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 191)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 29)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 191)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1565)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 191)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 125)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 191)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1661)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 212)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 32)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 212)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1568)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 212)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 128)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 212)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1664)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 233)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 35)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 233)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1571)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 233)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 131)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 233)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1667)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 252)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 36)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 252)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1572)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 252)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 132)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 252)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1668)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 273)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 39)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 273)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1575)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 273)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 135)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 273)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1671)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 294)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 42)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 294)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1578)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 294)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 138)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 294)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1674)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 315)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 45)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 315)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1581)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 315)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 141)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 315)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1677)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 253)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 37)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 253)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1573)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 253)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 133)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 253)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1669)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 274)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 40)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 274)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1576)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 274)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 136)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 274)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1672)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 295)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 43)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 295)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1579)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 295)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 139)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 295)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1675)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 316)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 46)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 316)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1582)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 316)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 142)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 316)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1678)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 254)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 38)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 254)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1574)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 254)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 134)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 254)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1670)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 275)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 41)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 275)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1577)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 275)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 137)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 275)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1673)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 296)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 44)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 296)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1580)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 296)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 140)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 296)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1676)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 317)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 47)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 317)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1583)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 317)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 143)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 317)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1679)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 336)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 48)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 336)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1584)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 336)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 144)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 336)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1680)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 357)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 51)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 357)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1587)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 357)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 147)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 357)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1683)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 378)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 54)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 378)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1590)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 378)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 150)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 378)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1686)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 399)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 57)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 399)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1593)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 399)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 153)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 399)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1689)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 337)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 49)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 337)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1585)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 337)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 145)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 337)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1681)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 358)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 52)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 358)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1588)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 358)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 148)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 358)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1684)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 379)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 55)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 379)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1591)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 379)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 151)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 379)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1687)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 400)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 58)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 400)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1594)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 400)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 154)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 400)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1690)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 338)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 50)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 338)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1586)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 338)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 146)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 338)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1682)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 359)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 53)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 359)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1589)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 359)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 149)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 359)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1685)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 380)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 56)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 380)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1592)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 380)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 152)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 380)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1688)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 401)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 59)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 401)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1595)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 401)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 155)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 401)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1691)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 420)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 60)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 420)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1596)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 420)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 156)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 420)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1692)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 441)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 63)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 441)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1599)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 441)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 159)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 441)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1695)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 462)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 66)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 462)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1602)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 462)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 162)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 462)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1698)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 483)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 69)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 483)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1605)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 483)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 165)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 483)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1701)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 421)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 61)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 421)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1597)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 421)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 157)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 421)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1693)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 442)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 64)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 442)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1600)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 442)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 160)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 442)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1696)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 463)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 67)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 463)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1603)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 463)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 163)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 463)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1699)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 484)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 70)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 484)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1606)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 484)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 166)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 484)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1702)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 422)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 62)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 422)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1598)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 422)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 158)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 422)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1694)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 443)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 65)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 443)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1601)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 443)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 161)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 443)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1697)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 464)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 68)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 464)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1604)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 464)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 164)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 464)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1700)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 485)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 71)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 485)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1607)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 485)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 167)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 485)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1703)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 504)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 72)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 504)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1608)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 504)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 168)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 504)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1704)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 525)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 75)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 525)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1611)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 525)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 171)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 525)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1707)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 546)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 78)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 546)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1614)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 546)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 174)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 546)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1710)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 567)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 81)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 567)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1617)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 567)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 177)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 567)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1713)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 505)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 73)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 505)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1609)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 505)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 169)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 505)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1705)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 526)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 76)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 526)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1612)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 526)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 172)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 526)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1708)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 547)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 79)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 547)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1615)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 547)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 175)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 547)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1711)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 568)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 82)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 568)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1618)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 568)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 178)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 568)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1714)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 506)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 74)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 506)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1610)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 506)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 170)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 506)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1706)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 527)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 77)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 527)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1613)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 527)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 173)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 527)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1709)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 548)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 80)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 548)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1616)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 548)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 176)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 548)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1712)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 569)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 83)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 569)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1619)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 569)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 179)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 569)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1715)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 588)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 84)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 588)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1620)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 588)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 180)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 588)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1716)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 609)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 87)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 609)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1623)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 609)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 183)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 609)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1719)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 630)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 90)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 630)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1626)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 630)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 186)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 630)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1722)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 651)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 93)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 651)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1629)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 651)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 189)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 651)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1725)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 589)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 85)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 589)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1621)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 589)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 181)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 589)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1717)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 610)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 88)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 610)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1624)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 610)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 184)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 610)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1720)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 631)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 91)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 631)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1627)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 631)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 187)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 631)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1723)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 652)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 94)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 652)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1630)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 652)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 190)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 652)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1726)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 590)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 86)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 590)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1622)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 590)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 182)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 590)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1718)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 611)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 89)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 611)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1625)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 611)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 185)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 611)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1721)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 632)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 92)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 632)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1628)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 632)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 188)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 632)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1724)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 653)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 95)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 653)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1631)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 653)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 191)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 653)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + 1727)]));
        }
      }
      for (int i1_inner = 0; i1_inner < 2; ++i1_inner) {
        compute[((((((((int)blockIdx.x) / 7) * 1568) + ((((int)threadIdx.x) / 7) * 98)) + (i1_inner * 49)) + ((((int)threadIdx.x) % 7) * 7)) + (((int)blockIdx.x) % 7))] = max((conv2d_nchw[i1_inner] + bias[((((((int)blockIdx.x) / 7) * 32) + ((((int)threadIdx.x) / 7) * 2)) + i1_inner)]), 0.000000e+00f);
        compute[(((((((((int)blockIdx.x) / 7) * 1568) + ((((int)threadIdx.x) / 7) * 98)) + (i1_inner * 49)) + ((((int)threadIdx.x) % 7) * 7)) + (((int)blockIdx.x) % 7)) + 784)] = max((conv2d_nchw[(i1_inner + 2)] + bias[(((((((int)blockIdx.x) / 7) * 32) + ((((int)threadIdx.x) / 7) * 2)) + i1_inner) + 16)]), 0.000000e+00f);
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 187-191

A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.

.. GENERATED FROM PYTHON SOURCE LINES 191-213

.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Resume search:
    Get devices for measurement successfully!






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 6 minutes  18.523 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
