
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.

.. GENERATED FROM PYTHON SOURCE LINES 39-48

.. code-block:: default



    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python








.. GENERATED FROM PYTHON SOURCE LINES 54-59

Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.

.. GENERATED FROM PYTHON SOURCE LINES 59-71

.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]









.. GENERATED FROM PYTHON SOURCE LINES 72-75

Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.

.. GENERATED FROM PYTHON SOURCE LINES 75-88

.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)





.. GENERATED FROM PYTHON SOURCE LINES 89-106

Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.

.. GENERATED FROM PYTHON SOURCE LINES 106-116

.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Get devices for measurement successfully!




.. GENERATED FROM PYTHON SOURCE LINES 117-123

Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.

.. GENERATED FROM PYTHON SOURCE LINES 123-132

.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx








.. GENERATED FROM PYTHON SOURCE LINES 133-136

We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.

.. GENERATED FROM PYTHON SOURCE LINES 136-140

.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Lowered TIR:
    @main = primfn(data_1: handle, kernel_1: handle, bias_1: handle, compute_1: handle) -> ()
      attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
      buffers = {data: Buffer(data_2: Pointer(float32), float32, [25088], []),
                 kernel: Buffer(kernel_2: Pointer(float32), float32, [2359296], []),
                 bias: Buffer(bias_2: Pointer(float32), float32, [512], []),
                 compute: Buffer(compute_2: Pointer(float32), float32, [25088], [])}
      buffer_map = {data_1: data, kernel_1: kernel, bias_1: bias, compute_1: compute}
      preflattened_buffer_map = {data_1: data_3: Buffer(data_2, float32, [1, 512, 7, 7], []), kernel_1: kernel_3: Buffer(kernel_2, float32, [512, 512, 3, 3], []), bias_1: bias_3: Buffer(bias_2, float32, [1, 512, 1, 1], []), compute_1: compute_3: Buffer(compute_2, float32, [1, 512, 7, 7], [])} {
      attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = 112;
      allocate(conv2d_nchw: Pointer(local float32), float32, [7]), storage_scope = local;
      allocate(pad_temp.shared: Pointer(shared float32), float32, [432]), storage_scope = shared;
      allocate(kernel.shared: Pointer(shared float32), float32, [4608]), storage_scope = shared;
      attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32 {
        conv2d_nchw_1: Buffer(conv2d_nchw, float32, [7], [], scope="local", align=16)[0] = 0f32
        conv2d_nchw_1[1] = 0f32
        conv2d_nchw_1[2] = 0f32
        conv2d_nchw_1[3] = 0f32
        conv2d_nchw_1[4] = 0f32
        conv2d_nchw_1[5] = 0f32
        conv2d_nchw_1[6] = 0f32
        for (rc.outer.outer: int32, 0, 32) {
          let cse_var_2: int32 = (rc.outer.outer*784)
          let cse_var_1: int32 = (rc.outer.outer*144)
           {
            attr [IterVar(threadIdx.x_1: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            pad_temp.shared_1: Buffer(pad_temp.shared, float32, [432], [], scope="shared")[threadIdx.x_1] = @tir.if_then_else(((((3 <= floormod(threadIdx.x_1, 27)) && (floormod(threadIdx.x_1, 27) < 24)) && (1 <= (floormod(blockIdx.x, 7) + floormod(threadIdx.x_1, 3)))) && ((floormod(blockIdx.x, 7) + floormod(threadIdx.x_1, 3)) < 8)), data[(((((cse_var_2 + (floordiv(threadIdx.x_1, 27)*49)) + (floordiv(floormod(threadIdx.x_1, 27), 3)*7)) + floormod(blockIdx.x, 7)) + floormod(threadIdx.x_1, 3)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            pad_temp.shared_1[(threadIdx.x_1 + 32)] = @tir.if_then_else(((((3 <= floormod((threadIdx.x_1 + 5), 27)) && (floormod((threadIdx.x_1 + 5), 27) < 24)) && (1 <= (floormod(blockIdx.x, 7) + floormod((threadIdx.x_1 + 2), 3)))) && ((floormod(blockIdx.x, 7) + floormod((threadIdx.x_1 + 2), 3)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 32), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 5), 27), 3)*7)) + floormod(blockIdx.x, 7)) + floormod((threadIdx.x_1 + 2), 3)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            pad_temp.shared_1[(threadIdx.x_1 + 64)] = @tir.if_then_else(((((3 <= floormod((threadIdx.x_1 + 10), 27)) && (floormod((threadIdx.x_1 + 10), 27) < 24)) && (1 <= (floormod(blockIdx.x, 7) + floormod((threadIdx.x_1 + 1), 3)))) && ((floormod(blockIdx.x, 7) + floormod((threadIdx.x_1 + 1), 3)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 64), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 10), 27), 3)*7)) + floormod(blockIdx.x, 7)) + floormod((threadIdx.x_1 + 1), 3)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            pad_temp.shared_1[(threadIdx.x_1 + 96)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 3) + 5), 9)) && (floormod((threadIdx.x_1 + 15), 27) < 24)) && (1 <= (floormod(blockIdx.x, 7) + floormod(threadIdx.x_1, 3)))) && ((floormod(blockIdx.x, 7) + floormod(threadIdx.x_1, 3)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 96), 27)*49)) + (floormod((floordiv(threadIdx.x_1, 3) + 5), 9)*7)) + floormod(blockIdx.x, 7)) + floormod(threadIdx.x_1, 3)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            pad_temp.shared_1[(threadIdx.x_1 + 128)] = @tir.if_then_else(((((3 <= floormod((threadIdx.x_1 + 20), 27)) && (floormod((threadIdx.x_1 + 20), 27) < 24)) && (1 <= (floormod(blockIdx.x, 7) + floormod((threadIdx.x_1 + 2), 3)))) && ((floormod(blockIdx.x, 7) + floormod((threadIdx.x_1 + 2), 3)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 128), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 20), 27), 3)*7)) + floormod(blockIdx.x, 7)) + floormod((threadIdx.x_1 + 2), 3)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            pad_temp.shared_1[(threadIdx.x_1 + 160)] = @tir.if_then_else(((((3 <= floormod((threadIdx.x_1 + 25), 27)) && (floormod((threadIdx.x_1 + 25), 27) < 24)) && (1 <= (floormod(blockIdx.x, 7) + floormod((threadIdx.x_1 + 1), 3)))) && ((floormod(blockIdx.x, 7) + floormod((threadIdx.x_1 + 1), 3)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 160), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 25), 27), 3)*7)) + floormod(blockIdx.x, 7)) + floormod((threadIdx.x_1 + 1), 3)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            pad_temp.shared_1[(threadIdx.x_1 + 192)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 3) + 1), 9)) && (floormod((threadIdx.x_1 + 3), 27) < 24)) && (1 <= (floormod(blockIdx.x, 7) + floormod(threadIdx.x_1, 3)))) && ((floormod(blockIdx.x, 7) + floormod(threadIdx.x_1, 3)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 192), 27)*49)) + (floormod((floordiv(threadIdx.x_1, 3) + 1), 9)*7)) + floormod(blockIdx.x, 7)) + floormod(threadIdx.x_1, 3)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            pad_temp.shared_1[(threadIdx.x_1 + 224)] = @tir.if_then_else(((((3 <= floormod((threadIdx.x_1 + 8), 27)) && (floormod((threadIdx.x_1 + 8), 27) < 24)) && (1 <= (floormod(blockIdx.x, 7) + floormod((threadIdx.x_1 + 2), 3)))) && ((floormod(blockIdx.x, 7) + floormod((threadIdx.x_1 + 2), 3)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 224), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 8), 27), 3)*7)) + floormod(blockIdx.x, 7)) + floormod((threadIdx.x_1 + 2), 3)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            pad_temp.shared_1[(threadIdx.x_1 + 256)] = @tir.if_then_else(((((3 <= floormod((threadIdx.x_1 + 13), 27)) && (floormod((threadIdx.x_1 + 13), 27) < 24)) && (1 <= (floormod(blockIdx.x, 7) + floormod((threadIdx.x_1 + 1), 3)))) && ((floormod(blockIdx.x, 7) + floormod((threadIdx.x_1 + 1), 3)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 256), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 13), 27), 3)*7)) + floormod(blockIdx.x, 7)) + floormod((threadIdx.x_1 + 1), 3)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            pad_temp.shared_1[(threadIdx.x_1 + 288)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 3) + 6), 9)) && (floormod((threadIdx.x_1 + 18), 27) < 24)) && (1 <= (floormod(blockIdx.x, 7) + floormod(threadIdx.x_1, 3)))) && ((floormod(blockIdx.x, 7) + floormod(threadIdx.x_1, 3)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 288), 27)*49)) + (floormod((floordiv(threadIdx.x_1, 3) + 6), 9)*7)) + floormod(blockIdx.x, 7)) + floormod(threadIdx.x_1, 3)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            pad_temp.shared_1[(threadIdx.x_1 + 320)] = @tir.if_then_else(((((3 <= floormod((threadIdx.x_1 + 23), 27)) && (floormod((threadIdx.x_1 + 23), 27) < 24)) && (1 <= (floormod(blockIdx.x, 7) + floormod((threadIdx.x_1 + 2), 3)))) && ((floormod(blockIdx.x, 7) + floormod((threadIdx.x_1 + 2), 3)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 320), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 23), 27), 3)*7)) + floormod(blockIdx.x, 7)) + floormod((threadIdx.x_1 + 2), 3)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            pad_temp.shared_1[(threadIdx.x_1 + 352)] = @tir.if_then_else(((((3 <= floormod((threadIdx.x_1 + 1), 27)) && (floormod((threadIdx.x_1 + 1), 27) < 24)) && (1 <= (floormod(blockIdx.x, 7) + floormod((threadIdx.x_1 + 1), 3)))) && ((floormod(blockIdx.x, 7) + floormod((threadIdx.x_1 + 1), 3)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 352), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 1), 27), 3)*7)) + floormod(blockIdx.x, 7)) + floormod((threadIdx.x_1 + 1), 3)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            pad_temp.shared_1[(threadIdx.x_1 + 384)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 3) + 2), 9)) && (floormod((threadIdx.x_1 + 6), 27) < 24)) && (1 <= (floormod(blockIdx.x, 7) + floormod(threadIdx.x_1, 3)))) && ((floormod(blockIdx.x, 7) + floormod(threadIdx.x_1, 3)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 384), 27)*49)) + (floormod((floordiv(threadIdx.x_1, 3) + 2), 9)*7)) + floormod(blockIdx.x, 7)) + floormod(threadIdx.x_1, 3)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            if @tir.likely((threadIdx.x_1 < 16), dtype=bool) {
              pad_temp.shared_1[(threadIdx.x_1 + 416)] = @tir.if_then_else((((threadIdx.x_1 < 13) && (1 <= (floormod(blockIdx.x, 7) + floormod((threadIdx.x_1 + 2), 3)))) && ((floormod(blockIdx.x, 7) + floormod((threadIdx.x_1 + 2), 3)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 416), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 11), 27), 3)*7)) + floormod(blockIdx.x, 7)) + floormod((threadIdx.x_1 + 2), 3)) - 8)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_2: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1: Buffer(kernel.shared, float32, [4608], [], scope="shared")[threadIdx.x_2] = kernel[(((floordiv(blockIdx.x, 7)*147456) + cse_var_1) + threadIdx.x_2)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 32)] = kernel[((((floordiv(blockIdx.x, 7)*147456) + cse_var_1) + (floordiv((threadIdx.x_2 + 32), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 64)] = kernel[((((floordiv(blockIdx.x, 7)*147456) + cse_var_1) + (floordiv((threadIdx.x_2 + 64), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 96)] = kernel[((((floordiv(blockIdx.x, 7)*147456) + cse_var_1) + threadIdx.x_2) + 96)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 128)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 128), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 128), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 160)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 160), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 192)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 192), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 16)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 224)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 224), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 80), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 256)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 256), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 112), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 288)] = kernel[((((floordiv(blockIdx.x, 7)*147456) + cse_var_1) + threadIdx.x_2) + 9216)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 320)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 320), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 352)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 352), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 384)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 384), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 32)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 416)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 416), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 128), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 448)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 448), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 480)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 480), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 16)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 512)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 512), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 80), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 544)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 544), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 112), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 576)] = kernel[((((floordiv(blockIdx.x, 7)*147456) + cse_var_1) + threadIdx.x_2) + 18432)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 608)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 608), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 640)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 640), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 672)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 672), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 32)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 704)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 704), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 128), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 736)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 736), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 768)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 768), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 16)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 800)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 800), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 80), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 832)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 832), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 112), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 864)] = kernel[((((floordiv(blockIdx.x, 7)*147456) + cse_var_1) + threadIdx.x_2) + 27648)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 896)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 896), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 928)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 928), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 960)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 960), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 32)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 992)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 992), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 128), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1024)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1024), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1056)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1056), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 16)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1088)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1088), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 80), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1120)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1120), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 112), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1152)] = kernel[((((floordiv(blockIdx.x, 7)*147456) + cse_var_1) + threadIdx.x_2) + 36864)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1184)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1184), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1216)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1216), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1248)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1248), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 32)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1280)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1280), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 128), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1312)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1312), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1344)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1344), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 16)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1376)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1376), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 80), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1408)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1408), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 112), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1440)] = kernel[((((floordiv(blockIdx.x, 7)*147456) + cse_var_1) + threadIdx.x_2) + 46080)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1472)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1472), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1504)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1504), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1536)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1536), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 32)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1568)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1568), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 128), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1600)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1600), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1632)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1632), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 16)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1664)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1664), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 80), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1696)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1696), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 112), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1728)] = kernel[((((floordiv(blockIdx.x, 7)*147456) + cse_var_1) + threadIdx.x_2) + 55296)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1760)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1760), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1792)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1792), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1824)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1824), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 32)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1856)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1856), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 128), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1888)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1888), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1920)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1920), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 16)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1952)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1952), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 80), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1984)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 1984), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 112), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2016)] = kernel[((((floordiv(blockIdx.x, 7)*147456) + cse_var_1) + threadIdx.x_2) + 64512)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2048)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2048), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2080)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2080), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2112)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2112), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 32)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2144)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2144), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 128), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2176)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2176), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2208)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2208), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 16)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2240)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2240), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 80), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2272)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2272), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 112), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2304)] = kernel[((((floordiv(blockIdx.x, 7)*147456) + cse_var_1) + threadIdx.x_2) + 73728)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2336)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2336), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2368)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2368), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2400)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2400), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 32)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2432)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2432), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 128), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2464)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2464), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2496)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2496), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 16)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2528)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2528), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 80), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2560)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2560), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 112), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2592)] = kernel[((((floordiv(blockIdx.x, 7)*147456) + cse_var_1) + threadIdx.x_2) + 82944)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2624)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2624), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2656)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2656), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2688)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2688), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 32)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2720)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2720), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 128), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2752)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2752), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2784)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2784), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 16)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2816)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2816), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 80), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2848)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2848), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 112), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2880)] = kernel[((((floordiv(blockIdx.x, 7)*147456) + cse_var_1) + threadIdx.x_2) + 92160)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2912)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2912), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2944)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2944), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2976)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 2976), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 32)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3008)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3008), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 128), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3040)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3040), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3072)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3072), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 16)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3104)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3104), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 80), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3136)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3136), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 112), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3168)] = kernel[((((floordiv(blockIdx.x, 7)*147456) + cse_var_1) + threadIdx.x_2) + 101376)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3200)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3200), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3232)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3232), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3264)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3264), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 32)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3296)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3296), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 128), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3328)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3328), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3360)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3360), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 16)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3392)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3392), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 80), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3424)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3424), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 112), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3456)] = kernel[((((floordiv(blockIdx.x, 7)*147456) + cse_var_1) + threadIdx.x_2) + 110592)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3488)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3488), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3520)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3520), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3552)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3552), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 32)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3584)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3584), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 128), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3616)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3616), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3648)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3648), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 16)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3680)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3680), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 80), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3712)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3712), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 112), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3744)] = kernel[((((floordiv(blockIdx.x, 7)*147456) + cse_var_1) + threadIdx.x_2) + 119808)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3776)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3776), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3808)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3808), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3840)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3840), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 32)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3872)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3872), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 128), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3904)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3904), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3936)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3936), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 16)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3968)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 3968), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 80), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4000)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 4000), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 112), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4032)] = kernel[((((floordiv(blockIdx.x, 7)*147456) + cse_var_1) + threadIdx.x_2) + 129024)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4064)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 4064), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4096)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 4096), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4128)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 4128), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 32)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4160)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 4160), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 128), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4192)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 4192), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4224)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 4224), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 16)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4256)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 4256), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 80), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4288)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 4288), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 112), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4320)] = kernel[((((floordiv(blockIdx.x, 7)*147456) + cse_var_1) + threadIdx.x_2) + 138240)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4352)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 4352), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4384)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 4384), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4416)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 4416), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 32)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4448)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 4448), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 128), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4480)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 4480), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4512)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 4512), 144)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 16)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4544)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 4544), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 80), 144), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4576)] = kernel[(((((floordiv(blockIdx.x, 7)*147456) + (floordiv((threadIdx.x_2 + 4576), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 112), 144), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            for (rc.outer.inner: int32, 0, 2) {
              let cse_var_171: int32 = (rc.outer.inner*216)
              let cse_var_170: int32 = (cse_var_171 + 99)
              let cse_var_169: int32 = (cse_var_171 + 98)
              let cse_var_168: int32 = (cse_var_171 + 97)
              let cse_var_167: int32 = (cse_var_171 + 96)
              let cse_var_166: int32 = (cse_var_171 + 95)
              let cse_var_165: int32 = (cse_var_171 + 94)
              let cse_var_164: int32 = (cse_var_171 + 93)
              let cse_var_163: int32 = (cse_var_171 + 92)
              let cse_var_162: int32 = (cse_var_171 + 91)
              let cse_var_161: int32 = (cse_var_171 + 90)
              let cse_var_160: int32 = (cse_var_171 + 9)
              let cse_var_159: int32 = (cse_var_171 + 89)
              let cse_var_158: int32 = (cse_var_171 + 88)
              let cse_var_157: int32 = (cse_var_171 + 87)
              let cse_var_156: int32 = (cse_var_171 + 86)
              let cse_var_155: int32 = (cse_var_171 + 85)
              let cse_var_154: int32 = (cse_var_171 + 84)
              let cse_var_153: int32 = (cse_var_171 + 8)
              let cse_var_152: int32 = (cse_var_171 + 77)
              let cse_var_151: int32 = (cse_var_171 + 76)
              let cse_var_150: int32 = (cse_var_171 + 75)
              let cse_var_149: int32 = (cse_var_171 + 74)
              let cse_var_148: int32 = (cse_var_171 + 73)
              let cse_var_147: int32 = (cse_var_171 + 72)
              let cse_var_146: int32 = (cse_var_171 + 71)
              let cse_var_145: int32 = (cse_var_171 + 70)
              let cse_var_144: int32 = (cse_var_171 + 7)
              let cse_var_143: int32 = (cse_var_171 + 69)
              let cse_var_142: int32 = (cse_var_171 + 68)
              let cse_var_141: int32 = (cse_var_171 + 67)
              let cse_var_140: int32 = (cse_var_171 + 66)
              let cse_var_139: int32 = (cse_var_171 + 65)
              let cse_var_138: int32 = (cse_var_171 + 64)
              let cse_var_137: int32 = (cse_var_171 + 63)
              let cse_var_136: int32 = (cse_var_171 + 62)
              let cse_var_135: int32 = (cse_var_171 + 61)
              let cse_var_134: int32 = (cse_var_171 + 60)
              let cse_var_133: int32 = (cse_var_171 + 6)
              let cse_var_132: int32 = (cse_var_171 + 59)
              let cse_var_131: int32 = (cse_var_171 + 58)
              let cse_var_130: int32 = (cse_var_171 + 57)
              let cse_var_129: int32 = (cse_var_171 + 50)
              let cse_var_128: int32 = (cse_var_171 + 5)
              let cse_var_127: int32 = (cse_var_171 + 49)
              let cse_var_126: int32 = (cse_var_171 + 48)
              let cse_var_125: int32 = (cse_var_171 + 47)
              let cse_var_124: int32 = (cse_var_171 + 46)
              let cse_var_123: int32 = (cse_var_171 + 45)
              let cse_var_122: int32 = (cse_var_171 + 44)
              let cse_var_121: int32 = (cse_var_171 + 43)
              let cse_var_120: int32 = (cse_var_171 + 42)
              let cse_var_119: int32 = (cse_var_171 + 41)
              let cse_var_118: int32 = (cse_var_171 + 40)
              let cse_var_117: int32 = (cse_var_171 + 4)
              let cse_var_116: int32 = (cse_var_171 + 39)
              let cse_var_115: int32 = (cse_var_171 + 38)
              let cse_var_114: int32 = (cse_var_171 + 37)
              let cse_var_113: int32 = (cse_var_171 + 36)
              let cse_var_112: int32 = (cse_var_171 + 35)
              let cse_var_111: int32 = (cse_var_171 + 34)
              let cse_var_110: int32 = (cse_var_171 + 33)
              let cse_var_109: int32 = (cse_var_171 + 32)
              let cse_var_108: int32 = (cse_var_171 + 31)
              let cse_var_107: int32 = (cse_var_171 + 30)
              let cse_var_106: int32 = (cse_var_171 + 3)
              let cse_var_105: int32 = (cse_var_171 + 23)
              let cse_var_104: int32 = (cse_var_171 + 22)
              let cse_var_103: int32 = (cse_var_171 + 212)
              let cse_var_102: int32 = (cse_var_171 + 211)
              let cse_var_101: int32 = (cse_var_171 + 210)
              let cse_var_100: int32 = (cse_var_171 + 21)
              let cse_var_99: int32 = (cse_var_171 + 209)
              let cse_var_98: int32 = (cse_var_171 + 208)
              let cse_var_97: int32 = (cse_var_171 + 207)
              let cse_var_96: int32 = (cse_var_171 + 206)
              let cse_var_95: int32 = (cse_var_171 + 205)
              let cse_var_94: int32 = (cse_var_171 + 204)
              let cse_var_93: int32 = (cse_var_171 + 203)
              let cse_var_92: int32 = (cse_var_171 + 202)
              let cse_var_91: int32 = (cse_var_171 + 201)
              let cse_var_90: int32 = (cse_var_171 + 200)
              let cse_var_89: int32 = (cse_var_171 + 20)
              let cse_var_88: int32 = (cse_var_171 + 199)
              let cse_var_87: int32 = (cse_var_171 + 198)
              let cse_var_86: int32 = (cse_var_171 + 197)
              let cse_var_85: int32 = (cse_var_171 + 196)
              let cse_var_84: int32 = (cse_var_171 + 195)
              let cse_var_83: int32 = (cse_var_171 + 194)
              let cse_var_82: int32 = (cse_var_171 + 193)
              let cse_var_81: int32 = (cse_var_171 + 192)
              let cse_var_80: int32 = (cse_var_171 + 19)
              let cse_var_79: int32 = (cse_var_171 + 185)
              let cse_var_78: int32 = (cse_var_171 + 184)
              let cse_var_77: int32 = (cse_var_171 + 183)
              let cse_var_76: int32 = (cse_var_171 + 182)
              let cse_var_75: int32 = (cse_var_171 + 181)
              let cse_var_74: int32 = (cse_var_171 + 180)
              let cse_var_73: int32 = (cse_var_171 + 18)
              let cse_var_72: int32 = (cse_var_171 + 179)
              let cse_var_71: int32 = (cse_var_171 + 178)
              let cse_var_70: int32 = (cse_var_171 + 177)
              let cse_var_69: int32 = (cse_var_171 + 176)
              let cse_var_68: int32 = (cse_var_171 + 175)
              let cse_var_67: int32 = (cse_var_171 + 174)
              let cse_var_66: int32 = (cse_var_171 + 173)
              let cse_var_65: int32 = (cse_var_171 + 172)
              let cse_var_64: int32 = (cse_var_171 + 171)
              let cse_var_63: int32 = (cse_var_171 + 170)
              let cse_var_62: int32 = (cse_var_171 + 17)
              let cse_var_61: int32 = (cse_var_171 + 169)
              let cse_var_60: int32 = (cse_var_171 + 168)
              let cse_var_59: int32 = (cse_var_171 + 167)
              let cse_var_58: int32 = (cse_var_171 + 166)
              let cse_var_57: int32 = (cse_var_171 + 165)
              let cse_var_56: int32 = (cse_var_171 + 16)
              let cse_var_55: int32 = (cse_var_171 + 158)
              let cse_var_54: int32 = (cse_var_171 + 157)
              let cse_var_53: int32 = (cse_var_171 + 156)
              let cse_var_52: int32 = (cse_var_171 + 155)
              let cse_var_51: int32 = (cse_var_171 + 154)
              let cse_var_50: int32 = (cse_var_171 + 153)
              let cse_var_49: int32 = (cse_var_171 + 152)
              let cse_var_48: int32 = (cse_var_171 + 151)
              let cse_var_47: int32 = (cse_var_171 + 150)
              let cse_var_46: int32 = (cse_var_171 + 15)
              let cse_var_45: int32 = (cse_var_171 + 149)
              let cse_var_44: int32 = (cse_var_171 + 148)
              let cse_var_43: int32 = (cse_var_171 + 147)
              let cse_var_42: int32 = (cse_var_171 + 146)
              let cse_var_41: int32 = (cse_var_171 + 145)
              let cse_var_40: int32 = (cse_var_171 + 144)
              let cse_var_39: int32 = (cse_var_171 + 143)
              let cse_var_38: int32 = (cse_var_171 + 142)
              let cse_var_37: int32 = (cse_var_171 + 141)
              let cse_var_36: int32 = (cse_var_171 + 140)
              let cse_var_35: int32 = (cse_var_171 + 14)
              let cse_var_34: int32 = (cse_var_171 + 139)
              let cse_var_33: int32 = (cse_var_171 + 138)
              let cse_var_32: int32 = (cse_var_171 + 131)
              let cse_var_31: int32 = (cse_var_171 + 130)
              let cse_var_30: int32 = (cse_var_171 + 13)
              let cse_var_29: int32 = (cse_var_171 + 129)
              let cse_var_28: int32 = (cse_var_171 + 128)
              let cse_var_27: int32 = (cse_var_171 + 127)
              let cse_var_26: int32 = (cse_var_171 + 126)
              let cse_var_25: int32 = (cse_var_171 + 125)
              let cse_var_24: int32 = (cse_var_171 + 124)
              let cse_var_23: int32 = (cse_var_171 + 123)
              let cse_var_22: int32 = (cse_var_171 + 122)
              let cse_var_21: int32 = (cse_var_171 + 121)
              let cse_var_20: int32 = (cse_var_171 + 120)
              let cse_var_19: int32 = (cse_var_171 + 12)
              let cse_var_18: int32 = (cse_var_171 + 119)
              let cse_var_17: int32 = (cse_var_171 + 118)
              let cse_var_16: int32 = (cse_var_171 + 117)
              let cse_var_15: int32 = (cse_var_171 + 116)
              let cse_var_14: int32 = (cse_var_171 + 115)
              let cse_var_13: int32 = (cse_var_171 + 114)
              let cse_var_12: int32 = (cse_var_171 + 113)
              let cse_var_11: int32 = (cse_var_171 + 112)
              let cse_var_10: int32 = (cse_var_171 + 111)
              let cse_var_9: int32 = (cse_var_171 + 11)
              let cse_var_8: int32 = (cse_var_171 + 104)
              let cse_var_7: int32 = (cse_var_171 + 103)
              let cse_var_6: int32 = (cse_var_171 + 102)
              let cse_var_5: int32 = (cse_var_171 + 101)
              let cse_var_4: int32 = (cse_var_171 + 100)
              let cse_var_3: int32 = (cse_var_171 + 10)
               {
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_171]*kernel.shared_1[((threadIdx.x*144) + (rc.outer.inner*72))]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(cse_var_171 + 1)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 1)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(cse_var_171 + 2)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 2)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(cse_var_171 + 27)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 9)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(cse_var_171 + 28)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 10)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(cse_var_171 + 29)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 11)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(cse_var_171 + 54)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 18)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(cse_var_171 + 55)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 19)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(cse_var_171 + 56)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 20)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(cse_var_171 + 81)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 27)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(cse_var_171 + 82)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 28)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(cse_var_171 + 83)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 29)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(cse_var_171 + 108)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 36)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(cse_var_171 + 109)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 37)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(cse_var_171 + 110)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 38)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(cse_var_171 + 135)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 45)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(cse_var_171 + 136)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 46)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(cse_var_171 + 137)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 47)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(cse_var_171 + 162)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 54)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(cse_var_171 + 163)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 55)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(cse_var_171 + 164)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 56)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(cse_var_171 + 189)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 63)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(cse_var_171 + 190)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 64)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(cse_var_171 + 191)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 65)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_106]*kernel.shared_1[((threadIdx.x*144) + (rc.outer.inner*72))]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_117]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 1)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_128]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 2)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_107]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 9)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_108]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 10)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_109]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 11)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_130]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 18)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_131]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 19)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_132]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 20)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_154]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 27)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_155]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 28)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_156]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 29)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_10]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 36)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_11]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 37)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_12]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 38)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_33]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 45)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_34]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 46)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_36]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 47)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_57]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 54)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_58]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 55)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_59]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 56)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_81]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 63)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_82]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 64)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_83]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 65)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_133]*kernel.shared_1[((threadIdx.x*144) + (rc.outer.inner*72))]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_144]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 1)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_153]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 2)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_110]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 9)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_111]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 10)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_112]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 11)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_134]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 18)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_135]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 19)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_136]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 20)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_157]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 27)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_158]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 28)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_159]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 29)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_13]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 36)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_14]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 37)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_15]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 38)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_37]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 45)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_38]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 46)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_39]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 47)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_60]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 54)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_61]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 55)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_63]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 56)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_84]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 63)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_85]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 64)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_86]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 65)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_160]*kernel.shared_1[((threadIdx.x*144) + (rc.outer.inner*72))]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_3]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 1)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_9]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 2)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_113]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 9)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_114]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 10)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_115]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 11)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_137]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 18)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_138]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 19)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_139]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 20)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_161]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 27)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_162]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 28)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_163]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 29)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_16]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 36)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_17]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 37)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_18]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 38)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_40]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 45)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_41]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 46)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_42]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 47)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_64]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 54)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_65]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 55)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_66]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 56)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_87]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 63)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_88]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 64)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_90]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 65)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_19]*kernel.shared_1[((threadIdx.x*144) + (rc.outer.inner*72))]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_30]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 1)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_35]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 2)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_116]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 9)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_118]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 10)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_119]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 11)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_140]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 18)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_141]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 19)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_142]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 20)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_164]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 27)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_165]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 28)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_166]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 29)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_20]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 36)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_21]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 37)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_22]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 38)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_43]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 45)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_44]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 46)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_45]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 47)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_67]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 54)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_68]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 55)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_69]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 56)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_91]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 63)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_92]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 64)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_93]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 65)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_46]*kernel.shared_1[((threadIdx.x*144) + (rc.outer.inner*72))]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_56]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 1)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_62]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 2)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_120]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 9)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_121]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 10)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_122]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 11)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_143]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 18)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_145]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 19)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_146]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 20)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_167]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 27)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_168]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 28)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_169]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 29)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_23]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 36)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_24]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 37)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_25]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 38)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_47]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 45)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_48]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 46)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_49]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 47)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_70]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 54)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_71]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 55)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_72]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 56)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_94]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 63)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_95]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 64)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_96]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 65)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_73]*kernel.shared_1[((threadIdx.x*144) + (rc.outer.inner*72))]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_80]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 1)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_89]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 2)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_123]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 9)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_124]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 10)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_125]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 11)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_147]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 18)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_148]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 19)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_149]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 20)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_170]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 27)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_4]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 28)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_5]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 29)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_26]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 36)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_27]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 37)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_28]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 38)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_50]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 45)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_51]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 46)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_52]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 47)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_74]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 54)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_75]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 55)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_76]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 56)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_97]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 63)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_98]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 64)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_99]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 65)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_106]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 3)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_117]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 4)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_128]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 5)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_107]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 12)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_108]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 13)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_109]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 14)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_130]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 21)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_131]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 22)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_132]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 23)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_154]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 30)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_155]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 31)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_156]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 32)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_10]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 39)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_11]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 40)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_12]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 41)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_33]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 48)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_34]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 49)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_36]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 50)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_57]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 57)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_58]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 58)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_59]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 59)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_81]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 66)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_82]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 67)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_83]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 68)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_133]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 3)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_144]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 4)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_153]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 5)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_110]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 12)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_111]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 13)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_112]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 14)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_134]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 21)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_135]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 22)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_136]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 23)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_157]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 30)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_158]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 31)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_159]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 32)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_13]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 39)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_14]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 40)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_15]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 41)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_37]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 48)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_38]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 49)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_39]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 50)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_60]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 57)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_61]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 58)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_63]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 59)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_84]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 66)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_85]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 67)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_86]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 68)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_160]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 3)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_3]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 4)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_9]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 5)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_113]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 12)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_114]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 13)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_115]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 14)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_137]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 21)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_138]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 22)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_139]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 23)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_161]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 30)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_162]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 31)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_163]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 32)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_16]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 39)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_17]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 40)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_18]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 41)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_40]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 48)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_41]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 49)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_42]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 50)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_64]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 57)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_65]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 58)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_66]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 59)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_87]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 66)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_88]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 67)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_90]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 68)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_19]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 3)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_30]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 4)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_35]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 5)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_116]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 12)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_118]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 13)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_119]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 14)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_140]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 21)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_141]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 22)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_142]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 23)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_164]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 30)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_165]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 31)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_166]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 32)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_20]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 39)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_21]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 40)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_22]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 41)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_43]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 48)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_44]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 49)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_45]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 50)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_67]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 57)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_68]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 58)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_69]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 59)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_91]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 66)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_92]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 67)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_93]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 68)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_46]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 3)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_56]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 4)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_62]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 5)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_120]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 12)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_121]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 13)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_122]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 14)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_143]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 21)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_145]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 22)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_146]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 23)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_167]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 30)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_168]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 31)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_169]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 32)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_23]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 39)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_24]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 40)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_25]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 41)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_47]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 48)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_48]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 49)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_49]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 50)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_70]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 57)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_71]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 58)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_72]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 59)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_94]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 66)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_95]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 67)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_96]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 68)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_73]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 3)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_80]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 4)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_89]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 5)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_123]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 12)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_124]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 13)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_125]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 14)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_147]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 21)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_148]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 22)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_149]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 23)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_170]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 30)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_4]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 31)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_5]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 32)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_26]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 39)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_27]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 40)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_28]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 41)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_50]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 48)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_51]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 49)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_52]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 50)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_74]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 57)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_75]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 58)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_76]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 59)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_97]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 66)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_98]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 67)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_99]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 68)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_100]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 3)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_104]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 4)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_105]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 5)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_126]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 12)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_127]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 13)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_129]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 14)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_150]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 21)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_151]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 22)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_152]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 23)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_6]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 30)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_7]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 31)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_8]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 32)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_29]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 39)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_31]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 40)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_32]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 41)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_53]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 48)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_54]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 49)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_55]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 50)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_77]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 57)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_78]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 58)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_79]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 59)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_101]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 66)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_102]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 67)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_103]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 68)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_133]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 6)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_144]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 7)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_153]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 8)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_110]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 15)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_111]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 16)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_112]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 17)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_134]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 24)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_135]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 25)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_136]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 26)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_157]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 33)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_158]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 34)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_159]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 35)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_13]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 42)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_14]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 43)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_15]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 44)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_37]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 51)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_38]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 52)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_39]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 53)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_60]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 60)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_61]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 61)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_63]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 62)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_84]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 69)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_85]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 70)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_86]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 71)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_160]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 6)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_3]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 7)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_9]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 8)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_113]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 15)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_114]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 16)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_115]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 17)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_137]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 24)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_138]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 25)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_139]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 26)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_161]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 33)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_162]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 34)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_163]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 35)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_16]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 42)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_17]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 43)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_18]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 44)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_40]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 51)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_41]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 52)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_42]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 53)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_64]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 60)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_65]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 61)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_66]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 62)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_87]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 69)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_88]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 70)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_90]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 71)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_19]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 6)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_30]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 7)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_35]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 8)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_116]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 15)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_118]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 16)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_119]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 17)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_140]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 24)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_141]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 25)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_142]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 26)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_164]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 33)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_165]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 34)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_166]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 35)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_20]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 42)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_21]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 43)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_22]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 44)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_43]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 51)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_44]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 52)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_45]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 53)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_67]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 60)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_68]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 61)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_69]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 62)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_91]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 69)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_92]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 70)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_93]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 71)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_46]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 6)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_56]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 7)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_62]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 8)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_120]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 15)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_121]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 16)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_122]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 17)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_143]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 24)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_145]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 25)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_146]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 26)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_167]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 33)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_168]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 34)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_169]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 35)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_23]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 42)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_24]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 43)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_25]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 44)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_47]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 51)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_48]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 52)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_49]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 53)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_70]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 60)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_71]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 61)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_72]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 62)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_94]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 69)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_95]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 70)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_96]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 71)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_73]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 6)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_80]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 7)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_89]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 8)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_123]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 15)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_124]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 16)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_125]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 17)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_147]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 24)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_148]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 25)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_149]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 26)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_170]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 33)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_4]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 34)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_5]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 35)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_26]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 42)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_27]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 43)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_28]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 44)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_50]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 51)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_51]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 52)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_52]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 53)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_74]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 60)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_75]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 61)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_76]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 62)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_97]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 69)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_98]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 70)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_99]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 71)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_100]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 6)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_104]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 7)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_105]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 8)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_126]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 15)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_127]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 16)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_129]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 17)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_150]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 24)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_151]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 25)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_152]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 26)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_6]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 33)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_7]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 34)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_8]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 35)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_29]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 42)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_31]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 43)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_32]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 44)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_53]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 51)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_54]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 52)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_55]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 53)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_77]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 60)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_78]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 61)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_79]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 62)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_101]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 69)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_102]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 70)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_103]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 71)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(cse_var_171 + 24)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 6)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(cse_var_171 + 25)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 7)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(cse_var_171 + 26)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 8)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(cse_var_171 + 51)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 15)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(cse_var_171 + 52)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 16)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(cse_var_171 + 53)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 17)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(cse_var_171 + 78)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 24)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(cse_var_171 + 79)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 25)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(cse_var_171 + 80)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 26)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(cse_var_171 + 105)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 33)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(cse_var_171 + 106)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 34)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(cse_var_171 + 107)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 35)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(cse_var_171 + 132)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 42)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(cse_var_171 + 133)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 43)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(cse_var_171 + 134)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 44)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(cse_var_171 + 159)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 51)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(cse_var_171 + 160)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 52)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(cse_var_171 + 161)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 53)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(cse_var_171 + 186)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 60)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(cse_var_171 + 187)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 61)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(cse_var_171 + 188)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 62)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(cse_var_171 + 213)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 69)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(cse_var_171 + 214)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 70)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(cse_var_171 + 215)]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*72)) + 71)]))
              }
            }
          }
        }
        for (i2.inner: int32, 0, 7) {
          compute[((((floordiv(blockIdx.x, 7)*1568) + (threadIdx.x*49)) + (i2.inner*7)) + floormod(blockIdx.x, 7))] = max((conv2d_nchw_1[i2.inner] + bias[((floordiv(blockIdx.x, 7)*32) + threadIdx.x)]), 0f32)
        }
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 141-144

Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.

.. GENERATED FROM PYTHON SOURCE LINES 144-171

.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Execution time of this operator: 0.266 ms




.. GENERATED FROM PYTHON SOURCE LINES 172-177

Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

.. GENERATED FROM PYTHON SOURCE LINES 179-182

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.

.. GENERATED FROM PYTHON SOURCE LINES 182-189

.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=1)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=32)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=1)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=7)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=8)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=2)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=1)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=3)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=3)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=1)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=1)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=32)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=1)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=7)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=1)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=1)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=32)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=32)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 512)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(32) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[7];
      __shared__ float pad_temp_shared[432];
      __shared__ float kernel_shared[4608];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 32; ++rc_outer_outer) {
        __syncthreads();
        pad_temp_shared[((int)threadIdx.x)] = (((((3 <= (((int)threadIdx.x) % 27)) && ((((int)threadIdx.x) % 27) < 24)) && (1 <= ((((int)blockIdx.x) % 7) + (((int)threadIdx.x) % 3)))) && (((((int)blockIdx.x) % 7) + (((int)threadIdx.x) % 3)) < 8)) ? data[((((((rc_outer_outer * 784) + ((((int)threadIdx.x) / 27) * 49)) + (((((int)threadIdx.x) % 27) / 3) * 7)) + (((int)blockIdx.x) % 7)) + (((int)threadIdx.x) % 3)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 32)] = (((((3 <= ((((int)threadIdx.x) + 5) % 27)) && (((((int)threadIdx.x) + 5) % 27) < 24)) && (1 <= ((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 2) % 3)))) && (((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 2) % 3)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 32) / 27) * 49)) + ((((((int)threadIdx.x) + 5) % 27) / 3) * 7)) + (((int)blockIdx.x) % 7)) + ((((int)threadIdx.x) + 2) % 3)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 64)] = (((((3 <= ((((int)threadIdx.x) + 10) % 27)) && (((((int)threadIdx.x) + 10) % 27) < 24)) && (1 <= ((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 1) % 3)))) && (((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 1) % 3)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 64) / 27) * 49)) + ((((((int)threadIdx.x) + 10) % 27) / 3) * 7)) + (((int)blockIdx.x) % 7)) + ((((int)threadIdx.x) + 1) % 3)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 96)] = (((((1 <= (((((int)threadIdx.x) / 3) + 5) % 9)) && (((((int)threadIdx.x) + 15) % 27) < 24)) && (1 <= ((((int)blockIdx.x) % 7) + (((int)threadIdx.x) % 3)))) && (((((int)blockIdx.x) % 7) + (((int)threadIdx.x) % 3)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 96) / 27) * 49)) + ((((((int)threadIdx.x) / 3) + 5) % 9) * 7)) + (((int)blockIdx.x) % 7)) + (((int)threadIdx.x) % 3)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 128)] = (((((3 <= ((((int)threadIdx.x) + 20) % 27)) && (((((int)threadIdx.x) + 20) % 27) < 24)) && (1 <= ((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 2) % 3)))) && (((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 2) % 3)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 128) / 27) * 49)) + ((((((int)threadIdx.x) + 20) % 27) / 3) * 7)) + (((int)blockIdx.x) % 7)) + ((((int)threadIdx.x) + 2) % 3)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 160)] = (((((3 <= ((((int)threadIdx.x) + 25) % 27)) && (((((int)threadIdx.x) + 25) % 27) < 24)) && (1 <= ((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 1) % 3)))) && (((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 1) % 3)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 160) / 27) * 49)) + ((((((int)threadIdx.x) + 25) % 27) / 3) * 7)) + (((int)blockIdx.x) % 7)) + ((((int)threadIdx.x) + 1) % 3)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 192)] = (((((1 <= (((((int)threadIdx.x) / 3) + 1) % 9)) && (((((int)threadIdx.x) + 3) % 27) < 24)) && (1 <= ((((int)blockIdx.x) % 7) + (((int)threadIdx.x) % 3)))) && (((((int)blockIdx.x) % 7) + (((int)threadIdx.x) % 3)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 192) / 27) * 49)) + ((((((int)threadIdx.x) / 3) + 1) % 9) * 7)) + (((int)blockIdx.x) % 7)) + (((int)threadIdx.x) % 3)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 224)] = (((((3 <= ((((int)threadIdx.x) + 8) % 27)) && (((((int)threadIdx.x) + 8) % 27) < 24)) && (1 <= ((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 2) % 3)))) && (((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 2) % 3)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 224) / 27) * 49)) + ((((((int)threadIdx.x) + 8) % 27) / 3) * 7)) + (((int)blockIdx.x) % 7)) + ((((int)threadIdx.x) + 2) % 3)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 256)] = (((((3 <= ((((int)threadIdx.x) + 13) % 27)) && (((((int)threadIdx.x) + 13) % 27) < 24)) && (1 <= ((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 1) % 3)))) && (((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 1) % 3)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 256) / 27) * 49)) + ((((((int)threadIdx.x) + 13) % 27) / 3) * 7)) + (((int)blockIdx.x) % 7)) + ((((int)threadIdx.x) + 1) % 3)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 288)] = (((((1 <= (((((int)threadIdx.x) / 3) + 6) % 9)) && (((((int)threadIdx.x) + 18) % 27) < 24)) && (1 <= ((((int)blockIdx.x) % 7) + (((int)threadIdx.x) % 3)))) && (((((int)blockIdx.x) % 7) + (((int)threadIdx.x) % 3)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 288) / 27) * 49)) + ((((((int)threadIdx.x) / 3) + 6) % 9) * 7)) + (((int)blockIdx.x) % 7)) + (((int)threadIdx.x) % 3)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 320)] = (((((3 <= ((((int)threadIdx.x) + 23) % 27)) && (((((int)threadIdx.x) + 23) % 27) < 24)) && (1 <= ((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 2) % 3)))) && (((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 2) % 3)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 320) / 27) * 49)) + ((((((int)threadIdx.x) + 23) % 27) / 3) * 7)) + (((int)blockIdx.x) % 7)) + ((((int)threadIdx.x) + 2) % 3)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 352)] = (((((3 <= ((((int)threadIdx.x) + 1) % 27)) && (((((int)threadIdx.x) + 1) % 27) < 24)) && (1 <= ((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 1) % 3)))) && (((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 1) % 3)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 352) / 27) * 49)) + ((((((int)threadIdx.x) + 1) % 27) / 3) * 7)) + (((int)blockIdx.x) % 7)) + ((((int)threadIdx.x) + 1) % 3)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 384)] = (((((1 <= (((((int)threadIdx.x) / 3) + 2) % 9)) && (((((int)threadIdx.x) + 6) % 27) < 24)) && (1 <= ((((int)blockIdx.x) % 7) + (((int)threadIdx.x) % 3)))) && (((((int)blockIdx.x) % 7) + (((int)threadIdx.x) % 3)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 384) / 27) * 49)) + ((((((int)threadIdx.x) / 3) + 2) % 9) * 7)) + (((int)blockIdx.x) % 7)) + (((int)threadIdx.x) % 3)) - 8)] : 0.000000e+00f);
        if (((int)threadIdx.x) < 16) {
          pad_temp_shared[(((int)threadIdx.x) + 416)] = ((((((int)threadIdx.x) < 13) && (1 <= ((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 2) % 3)))) && (((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 2) % 3)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 416) / 27) * 49)) + (((((int)threadIdx.x) + 11) / 3) * 7)) + (((int)blockIdx.x) % 7)) + ((((int)threadIdx.x) + 2) % 3)) - 8)] : 0.000000e+00f);
        }
        kernel_shared[((int)threadIdx.x)] = kernel[((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x))];
        kernel_shared[(((int)threadIdx.x) + 32)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 64)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 96)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 128)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 128) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 160)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 160) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 192)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 192) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 224)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 224) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 256)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 256) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 288)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 9216)];
        kernel_shared[(((int)threadIdx.x) + 320)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 320) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 352)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 352) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 384)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 384) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 416)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 416) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 448)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 448) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 480)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 480) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 512)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 512) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 544)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 544) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 576)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 18432)];
        kernel_shared[(((int)threadIdx.x) + 608)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 608) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 640)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 640) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 672)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 672) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 704)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 704) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 736)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 736) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 768)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 768) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 800)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 800) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 832)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 832) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 864)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 27648)];
        kernel_shared[(((int)threadIdx.x) + 896)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 896) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 928)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 928) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 960)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 960) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 992)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 992) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1024)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1024) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1056)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1056) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 1088)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1088) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1120)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1120) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1152)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 36864)];
        kernel_shared[(((int)threadIdx.x) + 1184)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1184) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1216)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1216) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1248)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1248) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 1280)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1280) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1312)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1312) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1344)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1344) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 1376)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1376) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1408)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1408) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1440)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 46080)];
        kernel_shared[(((int)threadIdx.x) + 1472)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1472) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1504)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1504) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1536)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1536) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 1568)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1568) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1600)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1600) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1632)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1632) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 1664)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1664) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1696)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1696) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1728)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 55296)];
        kernel_shared[(((int)threadIdx.x) + 1760)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1760) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1792)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1792) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1824)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1824) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 1856)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1856) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1888)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1888) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1920)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1920) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 1952)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1952) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1984)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1984) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2016)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 64512)];
        kernel_shared[(((int)threadIdx.x) + 2048)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2048) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2080)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2080) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2112)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2112) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 2144)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2144) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2176)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2176) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2208)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2208) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 2240)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2240) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2272)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2272) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2304)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 73728)];
        kernel_shared[(((int)threadIdx.x) + 2336)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2336) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2368)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2368) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2400)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2400) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 2432)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2432) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2464)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2464) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2496)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2496) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 2528)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2528) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2560)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2560) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2592)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 82944)];
        kernel_shared[(((int)threadIdx.x) + 2624)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2624) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2656)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2656) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2688)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2688) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 2720)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2720) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2752)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2752) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2784)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2784) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 2816)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2816) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2848)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2848) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2880)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 92160)];
        kernel_shared[(((int)threadIdx.x) + 2912)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2912) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2944)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2944) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2976)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2976) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 3008)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3008) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3040)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3040) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3072)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3072) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 3104)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3104) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3136)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3136) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3168)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 101376)];
        kernel_shared[(((int)threadIdx.x) + 3200)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3200) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3232)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3232) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3264)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3264) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 3296)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3296) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3328)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3328) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3360)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3360) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 3392)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3392) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3424)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3424) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3456)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 110592)];
        kernel_shared[(((int)threadIdx.x) + 3488)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3488) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3520)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3520) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3552)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3552) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 3584)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3584) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3616)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3616) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3648)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3648) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 3680)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3680) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3712)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3712) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3744)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 119808)];
        kernel_shared[(((int)threadIdx.x) + 3776)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3776) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3808)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3808) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3840)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3840) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 3872)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3872) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3904)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3904) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3936)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3936) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 3968)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3968) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4000)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4000) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4032)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 129024)];
        kernel_shared[(((int)threadIdx.x) + 4064)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4064) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4096)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4096) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4128)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4128) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 4160)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4160) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4192)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4192) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4224)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4224) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 4256)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4256) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4288)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4288) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4320)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 138240)];
        kernel_shared[(((int)threadIdx.x) + 4352)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4352) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4384)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4384) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4416)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4416) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 4448)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4448) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4480)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4480) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4512)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4512) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 4544)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4544) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4576)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4576) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        __syncthreads();
        for (int rc_outer_inner = 0; rc_outer_inner < 2; ++rc_outer_inner) {
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(rc_outer_inner * 216)] * kernel_shared[((((int)threadIdx.x) * 144) + (rc_outer_inner * 72))]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 1)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 1)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 2)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 2)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 27)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 9)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 28)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 10)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 29)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 11)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 54)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 18)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 55)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 19)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 56)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 20)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 81)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 27)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 82)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 28)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 83)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 29)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 108)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 36)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 109)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 37)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 110)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 38)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 135)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 45)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 136)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 46)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 137)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 47)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 162)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 54)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 163)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 55)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 164)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 56)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 189)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 63)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 190)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 64)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 191)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 65)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 3)] * kernel_shared[((((int)threadIdx.x) * 144) + (rc_outer_inner * 72))]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 4)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 1)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 5)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 2)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 30)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 9)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 31)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 10)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 32)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 11)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 57)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 18)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 58)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 19)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 59)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 20)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 84)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 27)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 85)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 28)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 86)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 29)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 111)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 36)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 112)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 37)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 113)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 38)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 138)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 45)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 139)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 46)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 140)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 47)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 165)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 54)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 166)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 55)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 167)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 56)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 192)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 63)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 193)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 64)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 194)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 65)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 6)] * kernel_shared[((((int)threadIdx.x) * 144) + (rc_outer_inner * 72))]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 7)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 1)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 8)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 2)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 33)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 9)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 34)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 10)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 35)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 11)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 60)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 18)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 61)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 19)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 62)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 20)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 87)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 27)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 88)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 28)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 89)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 29)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 114)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 36)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 115)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 37)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 116)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 38)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 141)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 45)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 142)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 46)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 143)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 47)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 168)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 54)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 169)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 55)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 170)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 56)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 195)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 63)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 196)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 64)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 197)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 65)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 9)] * kernel_shared[((((int)threadIdx.x) * 144) + (rc_outer_inner * 72))]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 10)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 1)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 11)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 2)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 36)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 9)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 37)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 10)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 38)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 11)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 63)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 18)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 64)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 19)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 65)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 20)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 90)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 27)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 91)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 28)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 92)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 29)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 117)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 36)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 118)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 37)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 119)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 38)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 144)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 45)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 145)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 46)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 146)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 47)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 171)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 54)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 172)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 55)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 173)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 56)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 198)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 63)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 199)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 64)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 200)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 65)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 12)] * kernel_shared[((((int)threadIdx.x) * 144) + (rc_outer_inner * 72))]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 13)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 1)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 14)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 2)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 39)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 9)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 40)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 10)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 41)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 11)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 66)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 18)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 67)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 19)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 68)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 20)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 93)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 27)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 94)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 28)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 95)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 29)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 120)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 36)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 121)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 37)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 122)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 38)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 147)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 45)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 148)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 46)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 149)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 47)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 174)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 54)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 175)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 55)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 176)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 56)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 201)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 63)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 202)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 64)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 203)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 65)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 15)] * kernel_shared[((((int)threadIdx.x) * 144) + (rc_outer_inner * 72))]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 16)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 1)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 17)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 2)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 42)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 9)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 43)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 10)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 44)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 11)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 69)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 18)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 70)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 19)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 71)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 20)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 96)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 27)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 97)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 28)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 98)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 29)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 123)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 36)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 124)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 37)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 125)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 38)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 150)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 45)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 151)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 46)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 152)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 47)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 177)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 54)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 178)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 55)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 179)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 56)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 204)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 63)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 205)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 64)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 206)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 65)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 18)] * kernel_shared[((((int)threadIdx.x) * 144) + (rc_outer_inner * 72))]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 19)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 1)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 20)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 2)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 45)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 9)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 46)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 10)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 47)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 11)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 72)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 18)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 73)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 19)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 74)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 20)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 99)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 27)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 100)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 28)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 101)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 29)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 126)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 36)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 127)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 37)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 128)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 38)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 153)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 45)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 154)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 46)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 155)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 47)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 180)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 54)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 181)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 55)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 182)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 56)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 207)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 63)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 208)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 64)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 209)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 65)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 3)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 3)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 4)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 4)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 5)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 5)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 30)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 12)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 31)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 13)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 32)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 14)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 57)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 21)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 58)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 22)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 59)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 23)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 84)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 30)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 85)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 31)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 86)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 32)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 111)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 39)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 112)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 40)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 113)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 41)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 138)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 48)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 139)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 49)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 140)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 50)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 165)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 57)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 166)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 58)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 167)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 59)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 192)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 66)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 193)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 67)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 194)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 68)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 6)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 3)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 7)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 4)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 8)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 5)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 33)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 12)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 34)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 13)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 35)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 14)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 60)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 21)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 61)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 22)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 62)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 23)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 87)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 30)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 88)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 31)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 89)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 32)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 114)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 39)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 115)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 40)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 116)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 41)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 141)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 48)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 142)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 49)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 143)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 50)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 168)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 57)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 169)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 58)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 170)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 59)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 195)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 66)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 196)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 67)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 197)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 68)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 9)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 3)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 10)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 4)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 11)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 5)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 36)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 12)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 37)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 13)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 38)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 14)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 63)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 21)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 64)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 22)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 65)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 23)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 90)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 30)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 91)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 31)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 92)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 32)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 117)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 39)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 118)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 40)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 119)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 41)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 144)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 48)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 145)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 49)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 146)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 50)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 171)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 57)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 172)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 58)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 173)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 59)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 198)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 66)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 199)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 67)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 200)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 68)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 12)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 3)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 13)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 4)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 14)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 5)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 39)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 12)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 40)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 13)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 41)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 14)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 66)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 21)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 67)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 22)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 68)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 23)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 93)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 30)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 94)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 31)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 95)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 32)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 120)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 39)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 121)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 40)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 122)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 41)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 147)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 48)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 148)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 49)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 149)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 50)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 174)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 57)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 175)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 58)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 176)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 59)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 201)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 66)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 202)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 67)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 203)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 68)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 15)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 3)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 16)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 4)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 17)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 5)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 42)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 12)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 43)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 13)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 44)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 14)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 69)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 21)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 70)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 22)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 71)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 23)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 96)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 30)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 97)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 31)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 98)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 32)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 123)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 39)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 124)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 40)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 125)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 41)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 150)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 48)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 151)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 49)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 152)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 50)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 177)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 57)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 178)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 58)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 179)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 59)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 204)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 66)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 205)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 67)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 206)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 68)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 18)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 3)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 19)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 4)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 20)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 5)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 45)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 12)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 46)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 13)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 47)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 14)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 72)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 21)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 73)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 22)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 74)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 23)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 99)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 30)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 100)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 31)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 101)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 32)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 126)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 39)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 127)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 40)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 128)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 41)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 153)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 48)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 154)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 49)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 155)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 50)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 180)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 57)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 181)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 58)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 182)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 59)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 207)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 66)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 208)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 67)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 209)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 68)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 21)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 3)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 22)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 4)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 23)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 5)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 48)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 12)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 49)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 13)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 50)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 14)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 75)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 21)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 76)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 22)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 77)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 23)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 102)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 30)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 103)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 31)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 104)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 32)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 129)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 39)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 130)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 40)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 131)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 41)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 156)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 48)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 157)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 49)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 158)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 50)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 183)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 57)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 184)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 58)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 185)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 59)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 210)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 66)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 211)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 67)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 212)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 68)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 6)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 6)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 7)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 7)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 8)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 8)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 33)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 15)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 34)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 16)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 35)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 17)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 60)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 24)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 61)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 25)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 62)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 26)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 87)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 33)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 88)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 34)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 89)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 35)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 114)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 42)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 115)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 43)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 116)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 44)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 141)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 51)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 142)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 52)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 143)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 53)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 168)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 60)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 169)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 61)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 170)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 62)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 195)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 69)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 196)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 70)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 216) + 197)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 71)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 9)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 6)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 10)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 7)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 11)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 8)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 36)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 15)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 37)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 16)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 38)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 17)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 63)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 24)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 64)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 25)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 65)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 26)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 90)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 33)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 91)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 34)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 92)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 35)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 117)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 42)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 118)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 43)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 119)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 44)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 144)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 51)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 145)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 52)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 146)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 53)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 171)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 60)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 172)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 61)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 173)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 62)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 198)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 69)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 199)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 70)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 216) + 200)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 71)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 12)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 6)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 13)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 7)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 14)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 8)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 39)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 15)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 40)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 16)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 41)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 17)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 66)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 24)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 67)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 25)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 68)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 26)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 93)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 33)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 94)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 34)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 95)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 35)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 120)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 42)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 121)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 43)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 122)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 44)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 147)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 51)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 148)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 52)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 149)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 53)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 174)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 60)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 175)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 61)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 176)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 62)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 201)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 69)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 202)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 70)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 216) + 203)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 71)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 15)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 6)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 16)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 7)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 17)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 8)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 42)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 15)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 43)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 16)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 44)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 17)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 69)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 24)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 70)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 25)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 71)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 26)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 96)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 33)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 97)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 34)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 98)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 35)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 123)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 42)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 124)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 43)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 125)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 44)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 150)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 51)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 151)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 52)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 152)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 53)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 177)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 60)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 178)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 61)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 179)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 62)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 204)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 69)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 205)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 70)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 216) + 206)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 71)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 18)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 6)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 19)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 7)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 20)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 8)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 45)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 15)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 46)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 16)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 47)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 17)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 72)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 24)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 73)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 25)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 74)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 26)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 99)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 33)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 100)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 34)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 101)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 35)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 126)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 42)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 127)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 43)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 128)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 44)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 153)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 51)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 154)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 52)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 155)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 53)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 180)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 60)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 181)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 61)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 182)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 62)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 207)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 69)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 208)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 70)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 216) + 209)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 71)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 21)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 6)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 22)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 7)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 23)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 8)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 48)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 15)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 49)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 16)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 50)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 17)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 75)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 24)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 76)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 25)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 77)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 26)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 102)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 33)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 103)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 34)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 104)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 35)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 129)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 42)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 130)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 43)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 131)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 44)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 156)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 51)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 157)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 52)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 158)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 53)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 183)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 60)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 184)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 61)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 185)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 62)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 210)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 69)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 211)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 70)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 216) + 212)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 71)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 24)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 6)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 25)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 7)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 26)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 8)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 51)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 15)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 52)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 16)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 53)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 17)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 78)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 24)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 79)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 25)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 80)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 26)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 105)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 33)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 106)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 34)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 107)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 35)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 132)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 42)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 133)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 43)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 134)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 44)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 159)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 51)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 160)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 52)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 161)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 53)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 186)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 60)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 187)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 61)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 188)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 62)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 213)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 69)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 214)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 70)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 216) + 215)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 72)) + 71)]));
        }
      }
      for (int i2_inner = 0; i2_inner < 7; ++i2_inner) {
        compute[(((((((int)blockIdx.x) / 7) * 1568) + (((int)threadIdx.x) * 49)) + (i2_inner * 7)) + (((int)blockIdx.x) % 7))] = max((conv2d_nchw[i2_inner] + bias[(((((int)blockIdx.x) / 7) * 32) + ((int)threadIdx.x))]), 0.000000e+00f);
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 190-194

A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.

.. GENERATED FROM PYTHON SOURCE LINES 194-216

.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Resume search:
    /venv/apache-tvm-py3.7/lib/python3.7/site-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 5 minutes  46.350 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
