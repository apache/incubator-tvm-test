
.. DO NOT EDIT. THIS FILE WAS AUTOMATICALLY GENERATED BY
.. TVM'S MONKEY-PATCHED VERSION OF SPHINX-GALLERY. TO MAKE
.. CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.py"

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        This tutorial can be used interactively with Google Colab! You can also click
        :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>` to run the Jupyter notebook locally.

        .. image:: https://raw.githubusercontent.com/tlc-pack/web-data/main/images/utilities/colab_button.svg
            :align: center
            :target: https://colab.research.google.com/github/apache/tvm-site/blob/asf-site/docs/_downloads/5f1f7bd7d90710fd404f7bcdc4965622/tune_conv2d_layer_cuda.ipynb
            :width: 300px

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.

.. GENERATED FROM PYTHON SOURCE LINES 39-47

.. code-block:: default


    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python








.. GENERATED FROM PYTHON SOURCE LINES 51-56

Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.

.. GENERATED FROM PYTHON SOURCE LINES 56-68

.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]









.. GENERATED FROM PYTHON SOURCE LINES 69-72

Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.

.. GENERATED FROM PYTHON SOURCE LINES 72-85

.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)





.. GENERATED FROM PYTHON SOURCE LINES 86-103

Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.

.. GENERATED FROM PYTHON SOURCE LINES 103-113

.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Get devices for measurement successfully!




.. GENERATED FROM PYTHON SOURCE LINES 114-120

Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.

.. GENERATED FROM PYTHON SOURCE LINES 120-129

.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx








.. GENERATED FROM PYTHON SOURCE LINES 130-133

We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.

.. GENERATED FROM PYTHON SOURCE LINES 133-137

.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Lowered TIR:
    # from tvm.script import ir as I
    # from tvm.script import tir as T

    @I.ir_module
    class Module:
        @T.prim_func
        def main(data: T.Buffer((1, 512, 7, 7), "float32"), kernel: T.Buffer((512, 512, 3, 3), "float32"), bias: T.Buffer((1, 512, 1, 1), "float32"), compute: T.Buffer((1, 512, 7, 7), "float32")):
            T.func_attr({"from_legacy_te_schedule": T.bool(True), "global_symbol": "main", "tir.noalias": T.bool(True)})
            blockIdx_x = T.launch_thread("blockIdx.x", 16)
            conv2d_nchw = T.allocate([16], "float32", "local")
            pad_temp_shared = T.allocate([2592], "float32", "shared")
            kernel_shared = T.allocate([9216], "float32", "shared")
            threadIdx_x = T.launch_thread("threadIdx.x", 98)
            conv2d_nchw_1 = T.Buffer((64,), data=conv2d_nchw, scope="local", align=32)
            conv2d_nchw_1[0] = T.float32(0)
            conv2d_nchw_1[8] = T.float32(0)
            conv2d_nchw_1[1] = T.float32(0)
            conv2d_nchw_1[9] = T.float32(0)
            conv2d_nchw_1[2] = T.float32(0)
            conv2d_nchw_1[10] = T.float32(0)
            conv2d_nchw_1[3] = T.float32(0)
            conv2d_nchw_1[11] = T.float32(0)
            conv2d_nchw_1[4] = T.float32(0)
            conv2d_nchw_1[12] = T.float32(0)
            conv2d_nchw_1[5] = T.float32(0)
            conv2d_nchw_1[13] = T.float32(0)
            conv2d_nchw_1[6] = T.float32(0)
            conv2d_nchw_1[14] = T.float32(0)
            conv2d_nchw_1[7] = T.float32(0)
            conv2d_nchw_1[15] = T.float32(0)
            for rc_outer_outer in range(16):
                cse_var_2: T.int32 = rc_outer_outer * 1568
                cse_var_1: T.int32 = rc_outer_outer * 288
                threadIdx_x_1 = T.env_thread("threadIdx.x")
                pad_temp_shared_1 = T.Buffer((2592,), data=pad_temp_shared, scope="shared")
                data_1 = T.Buffer((25088,), data=data.data)
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1] = T.if_then_else(9 <= threadIdx_x_1 % 81 and threadIdx_x_1 % 81 < 72 and 1 <= threadIdx_x_1 % 9 and threadIdx_x_1 % 9 < 8, data_1[cse_var_2 + threadIdx_x_1 // 81 * 49 + threadIdx_x_1 % 81 // 9 * 7 + threadIdx_x_1 % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 98] = T.if_then_else(9 <= (threadIdx_x_1 + 17) % 81 and (threadIdx_x_1 + 17) % 81 < 72 and 1 <= (threadIdx_x_1 + 8) % 9 and (threadIdx_x_1 + 8) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 98) // 81 * 49 + (threadIdx_x_1 + 17) % 81 // 9 * 7 + (threadIdx_x_1 + 8) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 196] = T.if_then_else(9 <= (threadIdx_x_1 + 34) % 81 and (threadIdx_x_1 + 34) % 81 < 72 and 1 <= (threadIdx_x_1 + 7) % 9 and (threadIdx_x_1 + 7) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 196) // 81 * 49 + (threadIdx_x_1 + 34) % 81 // 9 * 7 + (threadIdx_x_1 + 7) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 294] = T.if_then_else(9 <= (threadIdx_x_1 + 51) % 81 and (threadIdx_x_1 + 51) % 81 < 72 and 1 <= (threadIdx_x_1 + 6) % 9 and (threadIdx_x_1 + 6) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 294) // 81 * 49 + (threadIdx_x_1 + 51) % 81 // 9 * 7 + (threadIdx_x_1 + 6) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 392] = T.if_then_else(9 <= (threadIdx_x_1 + 68) % 81 and (threadIdx_x_1 + 68) % 81 < 72 and 1 <= (threadIdx_x_1 + 5) % 9 and (threadIdx_x_1 + 5) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 392) // 81 * 49 + (threadIdx_x_1 + 68) % 81 // 9 * 7 + (threadIdx_x_1 + 5) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 490] = T.if_then_else(9 <= (threadIdx_x_1 + 4) % 81 and (threadIdx_x_1 + 4) % 81 < 72 and 1 <= (threadIdx_x_1 + 4) % 9 and (threadIdx_x_1 + 4) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 490) // 81 * 49 + (threadIdx_x_1 + 4) % 81 // 9 * 7 + (threadIdx_x_1 + 4) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 588] = T.if_then_else(9 <= (threadIdx_x_1 + 21) % 81 and (threadIdx_x_1 + 21) % 81 < 72 and 1 <= (threadIdx_x_1 + 3) % 9 and (threadIdx_x_1 + 3) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 588) // 81 * 49 + (threadIdx_x_1 + 21) % 81 // 9 * 7 + (threadIdx_x_1 + 3) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 686] = T.if_then_else(9 <= (threadIdx_x_1 + 38) % 81 and (threadIdx_x_1 + 38) % 81 < 72 and 1 <= (threadIdx_x_1 + 2) % 9 and (threadIdx_x_1 + 2) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 686) // 81 * 49 + (threadIdx_x_1 + 38) % 81 // 9 * 7 + (threadIdx_x_1 + 2) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 784] = T.if_then_else(9 <= (threadIdx_x_1 + 55) % 81 and (threadIdx_x_1 + 55) % 81 < 72 and 1 <= (threadIdx_x_1 + 1) % 9 and (threadIdx_x_1 + 1) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 784) // 81 * 49 + (threadIdx_x_1 + 55) % 81 // 9 * 7 + (threadIdx_x_1 + 1) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 882] = T.if_then_else(1 <= (threadIdx_x_1 // 9 + 8) % 9 and (threadIdx_x_1 + 72) % 81 < 72 and 1 <= threadIdx_x_1 % 9 and threadIdx_x_1 % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 882) // 81 * 49 + (threadIdx_x_1 // 9 + 8) % 9 * 7 + threadIdx_x_1 % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 980] = T.if_then_else(9 <= (threadIdx_x_1 + 8) % 81 and (threadIdx_x_1 + 8) % 81 < 72 and 1 <= (threadIdx_x_1 + 8) % 9 and (threadIdx_x_1 + 8) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 980) // 81 * 49 + (threadIdx_x_1 + 8) % 81 // 9 * 7 + (threadIdx_x_1 + 8) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 1078] = T.if_then_else(9 <= (threadIdx_x_1 + 25) % 81 and (threadIdx_x_1 + 25) % 81 < 72 and 1 <= (threadIdx_x_1 + 7) % 9 and (threadIdx_x_1 + 7) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1078) // 81 * 49 + (threadIdx_x_1 + 25) % 81 // 9 * 7 + (threadIdx_x_1 + 7) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 1176] = T.if_then_else(9 <= (threadIdx_x_1 + 42) % 81 and (threadIdx_x_1 + 42) % 81 < 72 and 1 <= (threadIdx_x_1 + 6) % 9 and (threadIdx_x_1 + 6) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1176) // 81 * 49 + (threadIdx_x_1 + 42) % 81 // 9 * 7 + (threadIdx_x_1 + 6) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 1274] = T.if_then_else(9 <= (threadIdx_x_1 + 59) % 81 and (threadIdx_x_1 + 59) % 81 < 72 and 1 <= (threadIdx_x_1 + 5) % 9 and (threadIdx_x_1 + 5) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1274) // 81 * 49 + (threadIdx_x_1 + 59) % 81 // 9 * 7 + (threadIdx_x_1 + 5) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 1372] = T.if_then_else(9 <= (threadIdx_x_1 + 76) % 81 and (threadIdx_x_1 + 76) % 81 < 72 and 1 <= (threadIdx_x_1 + 4) % 9 and (threadIdx_x_1 + 4) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1372) // 81 * 49 + (threadIdx_x_1 + 76) % 81 // 9 * 7 + (threadIdx_x_1 + 4) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 1470] = T.if_then_else(9 <= (threadIdx_x_1 + 12) % 81 and (threadIdx_x_1 + 12) % 81 < 72 and 1 <= (threadIdx_x_1 + 3) % 9 and (threadIdx_x_1 + 3) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1470) // 81 * 49 + (threadIdx_x_1 + 12) % 81 // 9 * 7 + (threadIdx_x_1 + 3) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 1568] = T.if_then_else(9 <= (threadIdx_x_1 + 29) % 81 and (threadIdx_x_1 + 29) % 81 < 72 and 1 <= (threadIdx_x_1 + 2) % 9 and (threadIdx_x_1 + 2) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1568) // 81 * 49 + (threadIdx_x_1 + 29) % 81 // 9 * 7 + (threadIdx_x_1 + 2) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 1666] = T.if_then_else(9 <= (threadIdx_x_1 + 46) % 81 and (threadIdx_x_1 + 46) % 81 < 72 and 1 <= (threadIdx_x_1 + 1) % 9 and (threadIdx_x_1 + 1) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1666) // 81 * 49 + (threadIdx_x_1 + 46) % 81 // 9 * 7 + (threadIdx_x_1 + 1) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 1764] = T.if_then_else(1 <= (threadIdx_x_1 // 9 + 7) % 9 and (threadIdx_x_1 + 63) % 81 < 72 and 1 <= threadIdx_x_1 % 9 and threadIdx_x_1 % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1764) // 81 * 49 + (threadIdx_x_1 // 9 + 7) % 9 * 7 + threadIdx_x_1 % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 1862] = T.if_then_else(9 <= (threadIdx_x_1 + 80) % 81 and (threadIdx_x_1 + 80) % 81 < 72 and 1 <= (threadIdx_x_1 + 8) % 9 and (threadIdx_x_1 + 8) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1862) // 81 * 49 + (threadIdx_x_1 + 80) % 81 // 9 * 7 + (threadIdx_x_1 + 8) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 1960] = T.if_then_else(9 <= (threadIdx_x_1 + 16) % 81 and (threadIdx_x_1 + 16) % 81 < 72 and 1 <= (threadIdx_x_1 + 7) % 9 and (threadIdx_x_1 + 7) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1960) // 81 * 49 + (threadIdx_x_1 + 16) % 81 // 9 * 7 + (threadIdx_x_1 + 7) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 2058] = T.if_then_else(9 <= (threadIdx_x_1 + 33) % 81 and (threadIdx_x_1 + 33) % 81 < 72 and 1 <= (threadIdx_x_1 + 6) % 9 and (threadIdx_x_1 + 6) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2058) // 81 * 49 + (threadIdx_x_1 + 33) % 81 // 9 * 7 + (threadIdx_x_1 + 6) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 2156] = T.if_then_else(9 <= (threadIdx_x_1 + 50) % 81 and (threadIdx_x_1 + 50) % 81 < 72 and 1 <= (threadIdx_x_1 + 5) % 9 and (threadIdx_x_1 + 5) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2156) // 81 * 49 + (threadIdx_x_1 + 50) % 81 // 9 * 7 + (threadIdx_x_1 + 5) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 2254] = T.if_then_else(9 <= (threadIdx_x_1 + 67) % 81 and (threadIdx_x_1 + 67) % 81 < 72 and 1 <= (threadIdx_x_1 + 4) % 9 and (threadIdx_x_1 + 4) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2254) // 81 * 49 + (threadIdx_x_1 + 67) % 81 // 9 * 7 + (threadIdx_x_1 + 4) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 2352] = T.if_then_else(9 <= (threadIdx_x_1 + 3) % 81 and (threadIdx_x_1 + 3) % 81 < 72 and 1 <= (threadIdx_x_1 + 3) % 9 and (threadIdx_x_1 + 3) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2352) // 81 * 49 + (threadIdx_x_1 + 3) % 81 // 9 * 7 + (threadIdx_x_1 + 3) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 2450] = T.if_then_else(9 <= (threadIdx_x_1 + 20) % 81 and (threadIdx_x_1 + 20) % 81 < 72 and 1 <= (threadIdx_x_1 + 2) % 9 and (threadIdx_x_1 + 2) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2450) // 81 * 49 + (threadIdx_x_1 + 20) % 81 // 9 * 7 + (threadIdx_x_1 + 2) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    if T.likely(threadIdx_x_1 < 44):
                        pad_temp_shared_1[threadIdx_x_1 + 2548] = T.if_then_else(threadIdx_x_1 < 35 and 1 <= (threadIdx_x_1 + 1) % 9 and (threadIdx_x_1 + 1) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2548) // 81 * 49 + (threadIdx_x_1 + 37) // 9 * 7 + (threadIdx_x_1 + 1) % 9 - 8], T.float32(0))
                threadIdx_x_2 = T.env_thread("threadIdx.x")
                kernel_shared_1 = T.Buffer((9216,), data=kernel_shared, scope="shared")
                kernel_1 = T.Buffer((2359296,), data=kernel.data)
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2] = kernel_1[blockIdx_x * 147456 + cse_var_1 + threadIdx_x_2]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 98] = kernel_1[blockIdx_x * 147456 + cse_var_1 + threadIdx_x_2 + 98]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 196] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 196) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 196) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 294] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 294) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 6]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 392] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 392) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 104]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 490] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 490) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 202) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 588] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 588) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 12]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 686] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 686) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 110]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 784] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 784) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 208) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 882] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 882) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 18]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 980] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 980) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 116]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 1078] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 1078) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 214) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 1176] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 1176) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 24]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 1274] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 1274) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 122]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 1372] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 1372) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 220) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 1470] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 1470) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 30]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 1568] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 1568) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 128]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 1666] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 1666) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 226) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 1764] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 1764) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 36]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 1862] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 1862) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 134]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 1960] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 1960) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 232) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 2058] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 2058) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 42]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 2156] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 2156) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 140]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 2254] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 2254) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 238) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 2352] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 2352) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 48]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 2450] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 2450) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 146]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 2548] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 2548) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 244) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 2646] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 2646) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 54]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 2744] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 2744) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 152]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 2842] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 2842) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 250) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 2940] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 2940) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 60]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 3038] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 3038) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 158]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 3136] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 3136) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 256) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 3234] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 3234) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 66]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 3332] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 3332) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 164]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 3430] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 3430) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 262) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 3528] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 3528) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 72]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 3626] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 3626) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 170]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 3724] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 3724) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 268) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 3822] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 3822) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 78]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 3920] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 3920) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 176]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 4018] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 4018) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 274) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 4116] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 4116) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 84]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 4214] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 4214) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 182]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 4312] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 4312) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 280) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 4410] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 4410) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 90]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 4508] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 4508) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 188]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 4606] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 4606) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 286) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 4704] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 4704) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 96]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 4802] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 4802) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 194) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 4900] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 4900) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 4]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 4998] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 4998) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 102]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 5096] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 5096) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 200) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 5194] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 5194) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 10]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 5292] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 5292) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 108]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 5390] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 5390) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 206) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 5488] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 5488) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 16]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 5586] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 5586) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 114]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 5684] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 5684) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 212) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 5782] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 5782) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 22]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 5880] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 5880) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 120]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 5978] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 5978) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 218) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 6076] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 6076) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 28]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 6174] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 6174) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 126]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 6272] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 6272) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 224) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 6370] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 6370) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 34]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 6468] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 6468) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 132]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 6566] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 6566) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 230) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 6664] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 6664) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 40]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 6762] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 6762) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 138]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 6860] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 6860) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 236) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 6958] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 6958) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 46]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 7056] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 7056) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 144]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 7154] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 7154) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 242) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 7252] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 7252) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 52]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 7350] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 7350) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 150]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 7448] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 7448) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 248) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 7546] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 7546) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 58]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 7644] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 7644) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 156]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 7742] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 7742) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 254) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 7840] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 7840) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 64]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 7938] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 7938) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 162]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 8036] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 8036) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 260) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 8134] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 8134) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 70]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 8232] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 8232) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 168]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 8330] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 8330) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 266) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 8428] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 8428) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 76]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 8526] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 8526) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 174]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 8624] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 8624) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 272) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 8722] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 8722) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 82]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 8820] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 8820) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 180]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 8918] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 8918) // 288 * 4608 + cse_var_1 + (threadIdx_x_2 + 278) % 288]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 9016] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 9016) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 88]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 9114] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 9114) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 186]
                with T.launch_thread(threadIdx_x_2, 98):
                    if T.likely(threadIdx_x_2 < 4):
                        kernel_shared_1[threadIdx_x_2 + 9212] = kernel_1[blockIdx_x * 147456 + (threadIdx_x_2 + 9212) // 288 * 4608 + cse_var_1 + threadIdx_x_2 + 284]
                for rc_outer_inner in range(16):
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4608]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 9]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4617]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 288]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4896]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 297]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4905]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 576]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5184]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 585]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5193]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 864]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5472]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 873]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5481]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1152]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5760]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1161]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5769]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1440]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6048]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1449]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6057]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1728]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6336]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1737]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6345]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 2016]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6624]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 2025]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6633]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4609]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 10]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4618]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 289]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4897]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 298]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4906]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 577]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5185]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 586]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5194]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 865]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5473]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 874]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5482]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1153]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5761]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1162]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5770]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1441]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6049]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1450]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6058]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1729]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6337]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1738]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6346]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 2017]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6625]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 2026]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6634]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 2]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4610]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 11]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4619]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 290]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4898]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 299]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4907]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 578]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5186]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 587]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5195]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 866]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5474]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 875]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5483]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1154]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5762]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1163]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5771]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1442]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6050]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1451]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6059]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1730]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6338]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1739]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6347]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 2018]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6626]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 2027]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6635]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 3]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4611]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 12]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4620]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 291]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4899]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 300]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4908]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 579]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5187]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 588]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5196]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 867]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5475]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 876]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5484]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1155]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5763]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1164]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5772]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1443]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6051]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1452]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6060]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1731]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6339]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1740]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6348]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 2019]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6627]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 2028]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6636]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4612]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 13]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4621]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 292]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4900]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 301]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4909]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 580]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5188]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 589]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5197]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 868]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5476]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 877]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5485]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1156]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5764]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1165]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5773]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1444]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6052]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1453]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6061]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1732]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6340]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1741]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6349]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 2020]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6628]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 2029]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6637]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4613]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 14]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4622]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 293]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4901]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 302]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4910]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 581]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5189]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 590]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5198]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 869]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5477]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 878]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5486]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1157]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5765]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1166]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5774]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1445]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6053]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1454]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6062]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1733]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6341]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1742]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6350]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 2021]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6629]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 2030]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6638]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4614]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 15]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4623]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 294]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4902]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 303]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4911]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 582]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5190]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 591]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5199]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 870]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5478]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 879]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5487]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1158]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5766]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1167]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5775]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1446]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6054]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1455]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6063]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1734]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6342]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1743]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6351]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 2022]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6630]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 2031]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6639]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 7]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4615]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 16]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4624]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 295]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4903]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 304]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4912]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 583]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5191]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 592]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5200]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 871]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5479]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 880]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5488]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1159]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5767]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1168]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5776]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1447]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6055]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1456]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6064]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1735]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6343]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1744]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6352]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 2023]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6631]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 2032]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6640]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 8]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4616]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 17]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4625]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 296]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4904]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 305]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 4913]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 584]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5192]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 593]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5201]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 872]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5480]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 881]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5489]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1160]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5768]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1169]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 5777]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1448]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6056]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1457]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6065]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1736]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6344]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 1745]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6353]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 2024]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6632]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 2033]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 162 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 2304 + rc_outer_inner * 18 + 6641]
            for i1_inner in range(8):
                compute_1 = T.Buffer((25088,), data=compute.data)
                bias_1 = T.Buffer((512,), data=bias.data)
                compute_1[blockIdx_x * 1568 + threadIdx_x // 49 * 392 + i1_inner * 49 + threadIdx_x % 49] = T.max(conv2d_nchw_1[i1_inner] + bias_1[blockIdx_x * 32 + threadIdx_x // 49 * 8 + i1_inner], T.float32(0))
                compute_1[blockIdx_x * 1568 + threadIdx_x // 49 * 392 + i1_inner * 49 + threadIdx_x % 49 + 784] = T.max(conv2d_nchw_1[i1_inner + 8] + bias_1[blockIdx_x * 32 + threadIdx_x // 49 * 8 + i1_inner + 16], T.float32(0))




.. GENERATED FROM PYTHON SOURCE LINES 138-141

Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.

.. GENERATED FROM PYTHON SOURCE LINES 141-168

.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Execution time of this operator: 0.268 ms




.. GENERATED FROM PYTHON SOURCE LINES 169-174

Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

.. GENERATED FROM PYTHON SOURCE LINES 176-179

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.

.. GENERATED FROM PYTHON SOURCE LINES 179-186

.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=1)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=8)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=2)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=2)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=7)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=7)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=2)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=16)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=1)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=3)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=1)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=3)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=8)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=2)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=2)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=7)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=7)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=98)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=98)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 1024)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #if (((__CUDACC_VER_MAJOR__ == 11) && (__CUDACC_VER_MINOR__ >= 4)) || \
         (__CUDACC_VER_MAJOR__ > 11))
    #define TVM_ENABLE_L2_PREFETCH 1
    #else
    #define TVM_ENABLE_L2_PREFETCH 0
    #endif

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(98) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[16];
      __shared__ float pad_temp_shared[2592];
      __shared__ float kernel_shared[9216];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[8] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[9] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[10] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[11] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[12] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[13] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      conv2d_nchw[14] = 0.000000e+00f;
      conv2d_nchw[7] = 0.000000e+00f;
      conv2d_nchw[15] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 16; ++rc_outer_outer) {
        __syncthreads();
        pad_temp_shared[((int)threadIdx.x)] = (((((9 <= (((int)threadIdx.x) % 81)) && ((((int)threadIdx.x) % 81) < 72)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + ((((int)threadIdx.x) / 81) * 49)) + (((((int)threadIdx.x) % 81) / 9) * 7)) + (((int)threadIdx.x) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 98)] = (((((9 <= ((((int)threadIdx.x) + 17) % 81)) && (((((int)threadIdx.x) + 17) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 98) / 81) * 49)) + ((((((int)threadIdx.x) + 17) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 196)] = (((((9 <= ((((int)threadIdx.x) + 34) % 81)) && (((((int)threadIdx.x) + 34) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 196) / 81) * 49)) + ((((((int)threadIdx.x) + 34) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 294)] = (((((9 <= ((((int)threadIdx.x) + 51) % 81)) && (((((int)threadIdx.x) + 51) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 294) / 81) * 49)) + ((((((int)threadIdx.x) + 51) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 392)] = (((((9 <= ((((int)threadIdx.x) + 68) % 81)) && (((((int)threadIdx.x) + 68) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 392) / 81) * 49)) + ((((((int)threadIdx.x) + 68) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 490)] = (((((9 <= ((((int)threadIdx.x) + 4) % 81)) && (((((int)threadIdx.x) + 4) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 490) / 81) * 49)) + ((((((int)threadIdx.x) + 4) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 588)] = (((((9 <= ((((int)threadIdx.x) + 21) % 81)) && (((((int)threadIdx.x) + 21) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 588) / 81) * 49)) + ((((((int)threadIdx.x) + 21) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 686)] = (((((9 <= ((((int)threadIdx.x) + 38) % 81)) && (((((int)threadIdx.x) + 38) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 686) / 81) * 49)) + ((((((int)threadIdx.x) + 38) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 784)] = (((((9 <= ((((int)threadIdx.x) + 55) % 81)) && (((((int)threadIdx.x) + 55) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 784) / 81) * 49)) + ((((((int)threadIdx.x) + 55) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 882)] = (((((1 <= (((((int)threadIdx.x) / 9) + 8) % 9)) && (((((int)threadIdx.x) + 72) % 81) < 72)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 882) / 81) * 49)) + ((((((int)threadIdx.x) / 9) + 8) % 9) * 7)) + (((int)threadIdx.x) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 980)] = (((((9 <= ((((int)threadIdx.x) + 8) % 81)) && (((((int)threadIdx.x) + 8) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 980) / 81) * 49)) + ((((((int)threadIdx.x) + 8) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1078)] = (((((9 <= ((((int)threadIdx.x) + 25) % 81)) && (((((int)threadIdx.x) + 25) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1078) / 81) * 49)) + ((((((int)threadIdx.x) + 25) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1176)] = (((((9 <= ((((int)threadIdx.x) + 42) % 81)) && (((((int)threadIdx.x) + 42) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1176) / 81) * 49)) + ((((((int)threadIdx.x) + 42) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1274)] = (((((9 <= ((((int)threadIdx.x) + 59) % 81)) && (((((int)threadIdx.x) + 59) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1274) / 81) * 49)) + ((((((int)threadIdx.x) + 59) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1372)] = (((((9 <= ((((int)threadIdx.x) + 76) % 81)) && (((((int)threadIdx.x) + 76) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1372) / 81) * 49)) + ((((((int)threadIdx.x) + 76) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1470)] = (((((9 <= ((((int)threadIdx.x) + 12) % 81)) && (((((int)threadIdx.x) + 12) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1470) / 81) * 49)) + ((((((int)threadIdx.x) + 12) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1568)] = (((((9 <= ((((int)threadIdx.x) + 29) % 81)) && (((((int)threadIdx.x) + 29) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1568) / 81) * 49)) + ((((((int)threadIdx.x) + 29) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1666)] = (((((9 <= ((((int)threadIdx.x) + 46) % 81)) && (((((int)threadIdx.x) + 46) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1666) / 81) * 49)) + ((((((int)threadIdx.x) + 46) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1764)] = (((((1 <= (((((int)threadIdx.x) / 9) + 7) % 9)) && (((((int)threadIdx.x) + 63) % 81) < 72)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1764) / 81) * 49)) + ((((((int)threadIdx.x) / 9) + 7) % 9) * 7)) + (((int)threadIdx.x) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1862)] = (((((9 <= ((((int)threadIdx.x) + 80) % 81)) && (((((int)threadIdx.x) + 80) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1862) / 81) * 49)) + ((((((int)threadIdx.x) + 80) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1960)] = (((((9 <= ((((int)threadIdx.x) + 16) % 81)) && (((((int)threadIdx.x) + 16) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1960) / 81) * 49)) + ((((((int)threadIdx.x) + 16) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 2058)] = (((((9 <= ((((int)threadIdx.x) + 33) % 81)) && (((((int)threadIdx.x) + 33) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 2058) / 81) * 49)) + ((((((int)threadIdx.x) + 33) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 2156)] = (((((9 <= ((((int)threadIdx.x) + 50) % 81)) && (((((int)threadIdx.x) + 50) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 2156) / 81) * 49)) + ((((((int)threadIdx.x) + 50) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 2254)] = (((((9 <= ((((int)threadIdx.x) + 67) % 81)) && (((((int)threadIdx.x) + 67) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 2254) / 81) * 49)) + ((((((int)threadIdx.x) + 67) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 2352)] = (((((9 <= ((((int)threadIdx.x) + 3) % 81)) && (((((int)threadIdx.x) + 3) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 2352) / 81) * 49)) + ((((((int)threadIdx.x) + 3) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 2450)] = (((((9 <= ((((int)threadIdx.x) + 20) % 81)) && (((((int)threadIdx.x) + 20) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 2450) / 81) * 49)) + ((((((int)threadIdx.x) + 20) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
        if (((int)threadIdx.x) < 44) {
          pad_temp_shared[(((int)threadIdx.x) + 2548)] = ((((((int)threadIdx.x) < 35) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 2548) / 81) * 49)) + (((((int)threadIdx.x) + 37) / 9) * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
        }
        kernel_shared[((int)threadIdx.x)] = kernel[(((((int)blockIdx.x) * 147456) + (rc_outer_outer * 288)) + ((int)threadIdx.x))];
        kernel_shared[(((int)threadIdx.x) + 98)] = kernel[((((((int)blockIdx.x) * 147456) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 98)];
        kernel_shared[(((int)threadIdx.x) + 196)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 196) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 196) % 288))];
        kernel_shared[(((int)threadIdx.x) + 294)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 294) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 6)];
        kernel_shared[(((int)threadIdx.x) + 392)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 392) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 104)];
        kernel_shared[(((int)threadIdx.x) + 490)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 490) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 202) % 288))];
        kernel_shared[(((int)threadIdx.x) + 588)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 588) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 12)];
        kernel_shared[(((int)threadIdx.x) + 686)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 686) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 110)];
        kernel_shared[(((int)threadIdx.x) + 784)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 784) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 208) % 288))];
        kernel_shared[(((int)threadIdx.x) + 882)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 882) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 18)];
        kernel_shared[(((int)threadIdx.x) + 980)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 980) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 116)];
        kernel_shared[(((int)threadIdx.x) + 1078)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1078) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 214) % 288))];
        kernel_shared[(((int)threadIdx.x) + 1176)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1176) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 24)];
        kernel_shared[(((int)threadIdx.x) + 1274)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1274) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 122)];
        kernel_shared[(((int)threadIdx.x) + 1372)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1372) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 220) % 288))];
        kernel_shared[(((int)threadIdx.x) + 1470)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1470) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 30)];
        kernel_shared[(((int)threadIdx.x) + 1568)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1568) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 128)];
        kernel_shared[(((int)threadIdx.x) + 1666)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1666) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 226) % 288))];
        kernel_shared[(((int)threadIdx.x) + 1764)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1764) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 36)];
        kernel_shared[(((int)threadIdx.x) + 1862)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1862) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 134)];
        kernel_shared[(((int)threadIdx.x) + 1960)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1960) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 232) % 288))];
        kernel_shared[(((int)threadIdx.x) + 2058)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 2058) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 42)];
        kernel_shared[(((int)threadIdx.x) + 2156)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 2156) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 140)];
        kernel_shared[(((int)threadIdx.x) + 2254)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 2254) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 238) % 288))];
        kernel_shared[(((int)threadIdx.x) + 2352)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 2352) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 2450)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 2450) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 146)];
        kernel_shared[(((int)threadIdx.x) + 2548)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 2548) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 244) % 288))];
        kernel_shared[(((int)threadIdx.x) + 2646)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 2646) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 54)];
        kernel_shared[(((int)threadIdx.x) + 2744)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 2744) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 152)];
        kernel_shared[(((int)threadIdx.x) + 2842)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 2842) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 250) % 288))];
        kernel_shared[(((int)threadIdx.x) + 2940)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 2940) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 60)];
        kernel_shared[(((int)threadIdx.x) + 3038)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 3038) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 158)];
        kernel_shared[(((int)threadIdx.x) + 3136)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 3136) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 256) % 288))];
        kernel_shared[(((int)threadIdx.x) + 3234)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 3234) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 66)];
        kernel_shared[(((int)threadIdx.x) + 3332)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 3332) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 164)];
        kernel_shared[(((int)threadIdx.x) + 3430)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 3430) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 262) % 288))];
        kernel_shared[(((int)threadIdx.x) + 3528)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 3528) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 72)];
        kernel_shared[(((int)threadIdx.x) + 3626)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 3626) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 170)];
        kernel_shared[(((int)threadIdx.x) + 3724)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 3724) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 268) % 288))];
        kernel_shared[(((int)threadIdx.x) + 3822)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 3822) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 78)];
        kernel_shared[(((int)threadIdx.x) + 3920)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 3920) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 176)];
        kernel_shared[(((int)threadIdx.x) + 4018)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 4018) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 274) % 288))];
        kernel_shared[(((int)threadIdx.x) + 4116)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 4116) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 84)];
        kernel_shared[(((int)threadIdx.x) + 4214)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 4214) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 182)];
        kernel_shared[(((int)threadIdx.x) + 4312)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 4312) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 280) % 288))];
        kernel_shared[(((int)threadIdx.x) + 4410)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 4410) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 90)];
        kernel_shared[(((int)threadIdx.x) + 4508)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 4508) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 188)];
        kernel_shared[(((int)threadIdx.x) + 4606)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 4606) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 286) % 288))];
        kernel_shared[(((int)threadIdx.x) + 4704)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 4704) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 4802)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 4802) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 194) % 288))];
        kernel_shared[(((int)threadIdx.x) + 4900)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 4900) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 4)];
        kernel_shared[(((int)threadIdx.x) + 4998)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 4998) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 102)];
        kernel_shared[(((int)threadIdx.x) + 5096)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 5096) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 200) % 288))];
        kernel_shared[(((int)threadIdx.x) + 5194)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 5194) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 10)];
        kernel_shared[(((int)threadIdx.x) + 5292)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 5292) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 108)];
        kernel_shared[(((int)threadIdx.x) + 5390)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 5390) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 206) % 288))];
        kernel_shared[(((int)threadIdx.x) + 5488)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 5488) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 16)];
        kernel_shared[(((int)threadIdx.x) + 5586)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 5586) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 114)];
        kernel_shared[(((int)threadIdx.x) + 5684)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 5684) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 212) % 288))];
        kernel_shared[(((int)threadIdx.x) + 5782)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 5782) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 22)];
        kernel_shared[(((int)threadIdx.x) + 5880)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 5880) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 120)];
        kernel_shared[(((int)threadIdx.x) + 5978)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 5978) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 218) % 288))];
        kernel_shared[(((int)threadIdx.x) + 6076)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 6076) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 28)];
        kernel_shared[(((int)threadIdx.x) + 6174)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 6174) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 126)];
        kernel_shared[(((int)threadIdx.x) + 6272)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 6272) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 224) % 288))];
        kernel_shared[(((int)threadIdx.x) + 6370)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 6370) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 34)];
        kernel_shared[(((int)threadIdx.x) + 6468)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 6468) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 132)];
        kernel_shared[(((int)threadIdx.x) + 6566)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 6566) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 230) % 288))];
        kernel_shared[(((int)threadIdx.x) + 6664)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 6664) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 40)];
        kernel_shared[(((int)threadIdx.x) + 6762)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 6762) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 138)];
        kernel_shared[(((int)threadIdx.x) + 6860)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 6860) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 236) % 288))];
        kernel_shared[(((int)threadIdx.x) + 6958)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 6958) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 46)];
        kernel_shared[(((int)threadIdx.x) + 7056)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 7056) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 144)];
        kernel_shared[(((int)threadIdx.x) + 7154)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 7154) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 242) % 288))];
        kernel_shared[(((int)threadIdx.x) + 7252)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 7252) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 52)];
        kernel_shared[(((int)threadIdx.x) + 7350)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 7350) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 150)];
        kernel_shared[(((int)threadIdx.x) + 7448)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 7448) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 248) % 288))];
        kernel_shared[(((int)threadIdx.x) + 7546)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 7546) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 58)];
        kernel_shared[(((int)threadIdx.x) + 7644)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 7644) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 156)];
        kernel_shared[(((int)threadIdx.x) + 7742)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 7742) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 254) % 288))];
        kernel_shared[(((int)threadIdx.x) + 7840)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 7840) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 64)];
        kernel_shared[(((int)threadIdx.x) + 7938)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 7938) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 162)];
        kernel_shared[(((int)threadIdx.x) + 8036)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 8036) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 260) % 288))];
        kernel_shared[(((int)threadIdx.x) + 8134)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 8134) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 70)];
        kernel_shared[(((int)threadIdx.x) + 8232)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 8232) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 168)];
        kernel_shared[(((int)threadIdx.x) + 8330)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 8330) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 266) % 288))];
        kernel_shared[(((int)threadIdx.x) + 8428)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 8428) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 76)];
        kernel_shared[(((int)threadIdx.x) + 8526)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 8526) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 174)];
        kernel_shared[(((int)threadIdx.x) + 8624)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 8624) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 272) % 288))];
        kernel_shared[(((int)threadIdx.x) + 8722)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 8722) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 82)];
        kernel_shared[(((int)threadIdx.x) + 8820)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 8820) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 180)];
        kernel_shared[(((int)threadIdx.x) + 8918)] = kernel[((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 8918) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) + 278) % 288))];
        kernel_shared[(((int)threadIdx.x) + 9016)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 9016) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 88)];
        kernel_shared[(((int)threadIdx.x) + 9114)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 9114) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 186)];
        if (((int)threadIdx.x) < 4) {
          kernel_shared[(((int)threadIdx.x) + 9212)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 9212) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 284)];
        }
        __syncthreads();
        for (int rc_outer_inner = 0; rc_outer_inner < 16; ++rc_outer_inner) {
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[(((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18))]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4608)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 9)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4617)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 288)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4896)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 297)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4905)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 576)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5184)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 585)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5193)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 864)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5472)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 873)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5481)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1152)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5760)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1161)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5769)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1440)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6048)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1449)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6057)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1728)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6336)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1737)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6345)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 2016)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6624)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 2025)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6633)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4609)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 10)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4618)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 289)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4897)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 298)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4906)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 577)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5185)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 586)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5194)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 865)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5473)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 874)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5482)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1153)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5761)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1162)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5770)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1441)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6049)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1450)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6058)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1729)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6337)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1738)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6346)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 2017)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6625)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 2026)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6634)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 2)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4610)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 11)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4619)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 290)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4898)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 299)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4907)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 578)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5186)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 587)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5195)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 866)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5474)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 875)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5483)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1154)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5762)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1163)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5771)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1442)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6050)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1451)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6059)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1730)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6338)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1739)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6347)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 2018)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6626)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 2027)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6635)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 3)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4611)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 12)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4620)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 291)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4899)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 300)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4908)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 579)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5187)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 588)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5196)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 867)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5475)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 876)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5484)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1155)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5763)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1164)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5772)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1443)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6051)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1452)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6060)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1731)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6339)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1740)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6348)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 2019)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6627)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 2028)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6636)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4612)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 13)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4621)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 292)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4900)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 301)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4909)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 580)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5188)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 589)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5197)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 868)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5476)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 877)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5485)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1156)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5764)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1165)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5773)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1444)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6052)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1453)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6061)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1732)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6340)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1741)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6349)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 2020)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6628)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 2029)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6637)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4613)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 14)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4622)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 293)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4901)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 302)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4910)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 581)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5189)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 590)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5198)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 869)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5477)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 878)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5486)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1157)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5765)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1166)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5774)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1445)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6053)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1454)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6062)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1733)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6341)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1742)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6350)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 2021)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6629)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 2030)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6638)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4614)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 15)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4623)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 294)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4902)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 303)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4911)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 582)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5190)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 591)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5199)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 870)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5478)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 879)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5487)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1158)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5766)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1167)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5775)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1446)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6054)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1455)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6063)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1734)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6342)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1743)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6351)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 2022)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6630)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 2031)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6639)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 7)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4615)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 16)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4624)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 295)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4903)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 304)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4912)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 583)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5191)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 592)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5200)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 871)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5479)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 880)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5488)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1159)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5767)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1168)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5776)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1447)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6055)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1456)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6064)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1735)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6343)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1744)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6352)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 2023)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6631)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 2032)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6640)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 8)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4616)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 17)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4625)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 296)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4904)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 305)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 4913)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 584)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5192)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 593)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5201)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 872)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5480)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 881)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5489)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1160)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5768)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1169)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 5777)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1448)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6056)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1457)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6065)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1736)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6344)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 1745)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6353)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 2024)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6632)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 2033)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((rc_outer_inner * 162) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[((((((int)threadIdx.x) / 49) * 2304) + (rc_outer_inner * 18)) + 6641)]));
        }
      }
      for (int i1_inner = 0; i1_inner < 8; ++i1_inner) {
        compute[((((((int)blockIdx.x) * 1568) + ((((int)threadIdx.x) / 49) * 392)) + (i1_inner * 49)) + (((int)threadIdx.x) % 49))] = max((conv2d_nchw[i1_inner] + bias[(((((int)blockIdx.x) * 32) + ((((int)threadIdx.x) / 49) * 8)) + i1_inner)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 1568) + ((((int)threadIdx.x) / 49) * 392)) + (i1_inner * 49)) + (((int)threadIdx.x) % 49)) + 784)] = max((conv2d_nchw[(i1_inner + 8)] + bias[((((((int)blockIdx.x) * 32) + ((((int)threadIdx.x) / 49) * 8)) + i1_inner) + 16)]), 0.000000e+00f);
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 187-191

A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.

.. GENERATED FROM PYTHON SOURCE LINES 191-213

.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Resume search:
    Get devices for measurement successfully!
    .T





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 6 minutes  51.242 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
