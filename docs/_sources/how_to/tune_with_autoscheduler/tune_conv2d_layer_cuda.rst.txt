
.. DO NOT EDIT. THIS FILE WAS AUTOMATICALLY GENERATED BY
.. TVM'S MONKEY-PATCHED VERSION OF SPHINX-GALLERY. TO MAKE
.. CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.py"

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        This tutorial can be used interactively with Google Colab! You can also click
        :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>` to run the Jupyter notebook locally.

        .. image:: https://raw.githubusercontent.com/tlc-pack/web-data/main/images/utilities/colab_button.svg
            :align: center
            :target: https://colab.research.google.com/github/apache/tvm-site/blob/asf-site/docs/_downloads/5f1f7bd7d90710fd404f7bcdc4965622/tune_conv2d_layer_cuda.ipynb
            :width: 300px

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.

.. GENERATED FROM PYTHON SOURCE LINES 39-47

.. code-block:: default


    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python








.. GENERATED FROM PYTHON SOURCE LINES 51-56

Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.

.. GENERATED FROM PYTHON SOURCE LINES 56-68

.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]









.. GENERATED FROM PYTHON SOURCE LINES 69-72

Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.

.. GENERATED FROM PYTHON SOURCE LINES 72-85

.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)





.. GENERATED FROM PYTHON SOURCE LINES 86-103

Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.

.. GENERATED FROM PYTHON SOURCE LINES 103-113

.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Get devices for measurement successfully!




.. GENERATED FROM PYTHON SOURCE LINES 114-120

Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.

.. GENERATED FROM PYTHON SOURCE LINES 120-129

.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx








.. GENERATED FROM PYTHON SOURCE LINES 130-133

We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.

.. GENERATED FROM PYTHON SOURCE LINES 133-137

.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Lowered TIR:
    # from tvm.script import ir as I
    # from tvm.script import tir as T

    @I.ir_module
    class Module:
        @T.prim_func
        def main(data: T.Buffer((1, 512, 7, 7), "float32"), kernel: T.Buffer((512, 512, 3, 3), "float32"), bias: T.Buffer((1, 512, 1, 1), "float32"), compute: T.Buffer((1, 512, 7, 7), "float32")):
            T.func_attr({"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True})
            blockIdx_x = T.launch_thread("blockIdx.x", 64)
            conv2d_nchw = T.allocate([4], "float32", "local")
            pad_temp_shared = T.allocate([1296], "float32", "shared")
            kernel_shared = T.allocate([1152], "float32", "shared")
            threadIdx_x = T.launch_thread("threadIdx.x", 98)
            conv2d_nchw_1 = T.Buffer((4,), data=conv2d_nchw, scope="local", align=16)
            conv2d_nchw_1[0] = T.float32(0)
            conv2d_nchw_1[1] = T.float32(0)
            conv2d_nchw_1[2] = T.float32(0)
            conv2d_nchw_1[3] = T.float32(0)
            for rc_outer_outer in range(32):
                cse_var_1: T.int32 = rc_outer_outer * 784
                threadIdx_x_1 = T.env_thread("threadIdx.x")
                pad_temp_shared_1 = T.Buffer((1296,), data=pad_temp_shared, scope="shared")
                data_1 = T.Buffer((25088,), data=data.data)
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1] = T.if_then_else(9 <= threadIdx_x_1 % 81 and threadIdx_x_1 % 81 < 72 and 1 <= threadIdx_x_1 % 9 and threadIdx_x_1 % 9 < 8, data_1[cse_var_1 + threadIdx_x_1 // 81 * 49 + threadIdx_x_1 % 81 // 9 * 7 + threadIdx_x_1 % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 98] = T.if_then_else(9 <= (threadIdx_x_1 + 17) % 81 and (threadIdx_x_1 + 17) % 81 < 72 and 1 <= (threadIdx_x_1 + 8) % 9 and (threadIdx_x_1 + 8) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 98) // 81 * 49 + (threadIdx_x_1 + 17) % 81 // 9 * 7 + (threadIdx_x_1 + 8) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 196] = T.if_then_else(9 <= (threadIdx_x_1 + 34) % 81 and (threadIdx_x_1 + 34) % 81 < 72 and 1 <= (threadIdx_x_1 + 7) % 9 and (threadIdx_x_1 + 7) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 196) // 81 * 49 + (threadIdx_x_1 + 34) % 81 // 9 * 7 + (threadIdx_x_1 + 7) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 294] = T.if_then_else(9 <= (threadIdx_x_1 + 51) % 81 and (threadIdx_x_1 + 51) % 81 < 72 and 1 <= (threadIdx_x_1 + 6) % 9 and (threadIdx_x_1 + 6) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 294) // 81 * 49 + (threadIdx_x_1 + 51) % 81 // 9 * 7 + (threadIdx_x_1 + 6) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 392] = T.if_then_else(9 <= (threadIdx_x_1 + 68) % 81 and (threadIdx_x_1 + 68) % 81 < 72 and 1 <= (threadIdx_x_1 + 5) % 9 and (threadIdx_x_1 + 5) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 392) // 81 * 49 + (threadIdx_x_1 + 68) % 81 // 9 * 7 + (threadIdx_x_1 + 5) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 490] = T.if_then_else(9 <= (threadIdx_x_1 + 4) % 81 and (threadIdx_x_1 + 4) % 81 < 72 and 1 <= (threadIdx_x_1 + 4) % 9 and (threadIdx_x_1 + 4) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 490) // 81 * 49 + (threadIdx_x_1 + 4) % 81 // 9 * 7 + (threadIdx_x_1 + 4) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 588] = T.if_then_else(9 <= (threadIdx_x_1 + 21) % 81 and (threadIdx_x_1 + 21) % 81 < 72 and 1 <= (threadIdx_x_1 + 3) % 9 and (threadIdx_x_1 + 3) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 588) // 81 * 49 + (threadIdx_x_1 + 21) % 81 // 9 * 7 + (threadIdx_x_1 + 3) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 686] = T.if_then_else(9 <= (threadIdx_x_1 + 38) % 81 and (threadIdx_x_1 + 38) % 81 < 72 and 1 <= (threadIdx_x_1 + 2) % 9 and (threadIdx_x_1 + 2) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 686) // 81 * 49 + (threadIdx_x_1 + 38) % 81 // 9 * 7 + (threadIdx_x_1 + 2) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 784] = T.if_then_else(9 <= (threadIdx_x_1 + 55) % 81 and (threadIdx_x_1 + 55) % 81 < 72 and 1 <= (threadIdx_x_1 + 1) % 9 and (threadIdx_x_1 + 1) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 784) // 81 * 49 + (threadIdx_x_1 + 55) % 81 // 9 * 7 + (threadIdx_x_1 + 1) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 882] = T.if_then_else(1 <= (threadIdx_x_1 // 9 + 8) % 9 and (threadIdx_x_1 + 72) % 81 < 72 and 1 <= threadIdx_x_1 % 9 and threadIdx_x_1 % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 882) // 81 * 49 + (threadIdx_x_1 // 9 + 8) % 9 * 7 + threadIdx_x_1 % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 980] = T.if_then_else(9 <= (threadIdx_x_1 + 8) % 81 and (threadIdx_x_1 + 8) % 81 < 72 and 1 <= (threadIdx_x_1 + 8) % 9 and (threadIdx_x_1 + 8) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 980) // 81 * 49 + (threadIdx_x_1 + 8) % 81 // 9 * 7 + (threadIdx_x_1 + 8) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 1078] = T.if_then_else(9 <= (threadIdx_x_1 + 25) % 81 and (threadIdx_x_1 + 25) % 81 < 72 and 1 <= (threadIdx_x_1 + 7) % 9 and (threadIdx_x_1 + 7) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 1078) // 81 * 49 + (threadIdx_x_1 + 25) % 81 // 9 * 7 + (threadIdx_x_1 + 7) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    pad_temp_shared_1[threadIdx_x_1 + 1176] = T.if_then_else(9 <= (threadIdx_x_1 + 42) % 81 and (threadIdx_x_1 + 42) % 81 < 72 and 1 <= (threadIdx_x_1 + 6) % 9 and (threadIdx_x_1 + 6) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 1176) // 81 * 49 + (threadIdx_x_1 + 42) % 81 // 9 * 7 + (threadIdx_x_1 + 6) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 98):
                    if T.likely(threadIdx_x_1 < 22):
                        pad_temp_shared_1[threadIdx_x_1 + 1274] = T.if_then_else(threadIdx_x_1 < 13 and 1 <= (threadIdx_x_1 + 5) % 9 and (threadIdx_x_1 + 5) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 1274) // 81 * 49 + (threadIdx_x_1 + 59) // 9 * 7 + (threadIdx_x_1 + 5) % 9 - 8], T.float32(0))
                kernel_shared_1 = T.Buffer((1152,), data=kernel_shared, scope="shared")
                with T.launch_thread("threadIdx.x", 98) as threadIdx_x_2:
                    kernel_1 = T.Buffer((2359296,), data=kernel.data)
                    if T.likely(threadIdx_x_2 < 48):
                        kernel_shared_1[threadIdx_x_2 * 24] = kernel_1[blockIdx_x * 36864 + threadIdx_x_2 // 6 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 6 * 24]
                    if T.likely(threadIdx_x_2 < 48):
                        kernel_shared_1[threadIdx_x_2 * 24 + 1] = kernel_1[blockIdx_x * 36864 + threadIdx_x_2 // 6 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 6 * 24 + 1]
                    if T.likely(threadIdx_x_2 < 48):
                        kernel_shared_1[threadIdx_x_2 * 24 + 2] = kernel_1[blockIdx_x * 36864 + threadIdx_x_2 // 6 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 6 * 24 + 2]
                    if T.likely(threadIdx_x_2 < 48):
                        kernel_shared_1[threadIdx_x_2 * 24 + 3] = kernel_1[blockIdx_x * 36864 + threadIdx_x_2 // 6 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 6 * 24 + 3]
                    if T.likely(threadIdx_x_2 < 48):
                        kernel_shared_1[threadIdx_x_2 * 24 + 4] = kernel_1[blockIdx_x * 36864 + threadIdx_x_2 // 6 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 6 * 24 + 4]
                    if T.likely(threadIdx_x_2 < 48):
                        kernel_shared_1[threadIdx_x_2 * 24 + 5] = kernel_1[blockIdx_x * 36864 + threadIdx_x_2 // 6 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 6 * 24 + 5]
                    if T.likely(threadIdx_x_2 < 48):
                        kernel_shared_1[threadIdx_x_2 * 24 + 6] = kernel_1[blockIdx_x * 36864 + threadIdx_x_2 // 6 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 6 * 24 + 6]
                    if T.likely(threadIdx_x_2 < 48):
                        kernel_shared_1[threadIdx_x_2 * 24 + 7] = kernel_1[blockIdx_x * 36864 + threadIdx_x_2 // 6 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 6 * 24 + 7]
                    if T.likely(threadIdx_x_2 < 48):
                        kernel_shared_1[threadIdx_x_2 * 24 + 8] = kernel_1[blockIdx_x * 36864 + threadIdx_x_2 // 6 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 6 * 24 + 8]
                    if T.likely(threadIdx_x_2 < 48):
                        kernel_shared_1[threadIdx_x_2 * 24 + 9] = kernel_1[blockIdx_x * 36864 + threadIdx_x_2 // 6 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 6 * 24 + 9]
                    if T.likely(threadIdx_x_2 < 48):
                        kernel_shared_1[threadIdx_x_2 * 24 + 10] = kernel_1[blockIdx_x * 36864 + threadIdx_x_2 // 6 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 6 * 24 + 10]
                    if T.likely(threadIdx_x_2 < 48):
                        kernel_shared_1[threadIdx_x_2 * 24 + 11] = kernel_1[blockIdx_x * 36864 + threadIdx_x_2 // 6 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 6 * 24 + 11]
                    if T.likely(threadIdx_x_2 < 48):
                        kernel_shared_1[threadIdx_x_2 * 24 + 12] = kernel_1[blockIdx_x * 36864 + threadIdx_x_2 // 6 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 6 * 24 + 12]
                    if T.likely(threadIdx_x_2 < 48):
                        kernel_shared_1[threadIdx_x_2 * 24 + 13] = kernel_1[blockIdx_x * 36864 + threadIdx_x_2 // 6 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 6 * 24 + 13]
                    if T.likely(threadIdx_x_2 < 48):
                        kernel_shared_1[threadIdx_x_2 * 24 + 14] = kernel_1[blockIdx_x * 36864 + threadIdx_x_2 // 6 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 6 * 24 + 14]
                    if T.likely(threadIdx_x_2 < 48):
                        kernel_shared_1[threadIdx_x_2 * 24 + 15] = kernel_1[blockIdx_x * 36864 + threadIdx_x_2 // 6 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 6 * 24 + 15]
                    if T.likely(threadIdx_x_2 < 48):
                        kernel_shared_1[threadIdx_x_2 * 24 + 16] = kernel_1[blockIdx_x * 36864 + threadIdx_x_2 // 6 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 6 * 24 + 16]
                    if T.likely(threadIdx_x_2 < 48):
                        kernel_shared_1[threadIdx_x_2 * 24 + 17] = kernel_1[blockIdx_x * 36864 + threadIdx_x_2 // 6 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 6 * 24 + 17]
                    if T.likely(threadIdx_x_2 < 48):
                        kernel_shared_1[threadIdx_x_2 * 24 + 18] = kernel_1[blockIdx_x * 36864 + threadIdx_x_2 // 6 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 6 * 24 + 18]
                    if T.likely(threadIdx_x_2 < 48):
                        kernel_shared_1[threadIdx_x_2 * 24 + 19] = kernel_1[blockIdx_x * 36864 + threadIdx_x_2 // 6 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 6 * 24 + 19]
                    if T.likely(threadIdx_x_2 < 48):
                        kernel_shared_1[threadIdx_x_2 * 24 + 20] = kernel_1[blockIdx_x * 36864 + threadIdx_x_2 // 6 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 6 * 24 + 20]
                    if T.likely(threadIdx_x_2 < 48):
                        kernel_shared_1[threadIdx_x_2 * 24 + 21] = kernel_1[blockIdx_x * 36864 + threadIdx_x_2 // 6 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 6 * 24 + 21]
                    if T.likely(threadIdx_x_2 < 48):
                        kernel_shared_1[threadIdx_x_2 * 24 + 22] = kernel_1[blockIdx_x * 36864 + threadIdx_x_2 // 6 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 6 * 24 + 22]
                    if T.likely(threadIdx_x_2 < 48):
                        kernel_shared_1[threadIdx_x_2 * 24 + 23] = kernel_1[blockIdx_x * 36864 + threadIdx_x_2 // 6 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 6 * 24 + 23]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 576]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 576 + 144]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 576 + 1]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 576 + 145]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 576 + 2]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 576 + 146]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 576 + 9]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 576 + 153]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 576 + 10]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 576 + 154]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 576 + 11]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 576 + 155]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 162] * kernel_shared_1[threadIdx_x // 49 * 576 + 18]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 162] * kernel_shared_1[threadIdx_x // 49 * 576 + 162]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 163] * kernel_shared_1[threadIdx_x // 49 * 576 + 19]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 163] * kernel_shared_1[threadIdx_x // 49 * 576 + 163]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 164] * kernel_shared_1[threadIdx_x // 49 * 576 + 20]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 164] * kernel_shared_1[threadIdx_x // 49 * 576 + 164]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 243] * kernel_shared_1[threadIdx_x // 49 * 576 + 27]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 243] * kernel_shared_1[threadIdx_x // 49 * 576 + 171]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 244] * kernel_shared_1[threadIdx_x // 49 * 576 + 28]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 244] * kernel_shared_1[threadIdx_x // 49 * 576 + 172]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 245] * kernel_shared_1[threadIdx_x // 49 * 576 + 29]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 245] * kernel_shared_1[threadIdx_x // 49 * 576 + 173]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 324] * kernel_shared_1[threadIdx_x // 49 * 576 + 36]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 324] * kernel_shared_1[threadIdx_x // 49 * 576 + 180]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 325] * kernel_shared_1[threadIdx_x // 49 * 576 + 37]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 325] * kernel_shared_1[threadIdx_x // 49 * 576 + 181]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 326] * kernel_shared_1[threadIdx_x // 49 * 576 + 38]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 326] * kernel_shared_1[threadIdx_x // 49 * 576 + 182]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 405] * kernel_shared_1[threadIdx_x // 49 * 576 + 45]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 405] * kernel_shared_1[threadIdx_x // 49 * 576 + 189]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 406] * kernel_shared_1[threadIdx_x // 49 * 576 + 46]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 406] * kernel_shared_1[threadIdx_x // 49 * 576 + 190]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 407] * kernel_shared_1[threadIdx_x // 49 * 576 + 47]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 407] * kernel_shared_1[threadIdx_x // 49 * 576 + 191]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 486] * kernel_shared_1[threadIdx_x // 49 * 576 + 54]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 486] * kernel_shared_1[threadIdx_x // 49 * 576 + 198]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 487] * kernel_shared_1[threadIdx_x // 49 * 576 + 55]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 487] * kernel_shared_1[threadIdx_x // 49 * 576 + 199]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 488] * kernel_shared_1[threadIdx_x // 49 * 576 + 56]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 488] * kernel_shared_1[threadIdx_x // 49 * 576 + 200]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 567] * kernel_shared_1[threadIdx_x // 49 * 576 + 63]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 567] * kernel_shared_1[threadIdx_x // 49 * 576 + 207]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 568] * kernel_shared_1[threadIdx_x // 49 * 576 + 64]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 568] * kernel_shared_1[threadIdx_x // 49 * 576 + 208]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 569] * kernel_shared_1[threadIdx_x // 49 * 576 + 65]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 569] * kernel_shared_1[threadIdx_x // 49 * 576 + 209]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 576 + 288]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 576 + 432]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 576 + 289]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 576 + 433]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 576 + 290]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 576 + 434]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 576 + 297]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 576 + 441]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 576 + 298]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 576 + 442]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 576 + 299]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 576 + 443]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 162] * kernel_shared_1[threadIdx_x // 49 * 576 + 306]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 162] * kernel_shared_1[threadIdx_x // 49 * 576 + 450]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 163] * kernel_shared_1[threadIdx_x // 49 * 576 + 307]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 163] * kernel_shared_1[threadIdx_x // 49 * 576 + 451]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 164] * kernel_shared_1[threadIdx_x // 49 * 576 + 308]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 164] * kernel_shared_1[threadIdx_x // 49 * 576 + 452]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 243] * kernel_shared_1[threadIdx_x // 49 * 576 + 315]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 243] * kernel_shared_1[threadIdx_x // 49 * 576 + 459]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 244] * kernel_shared_1[threadIdx_x // 49 * 576 + 316]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 244] * kernel_shared_1[threadIdx_x // 49 * 576 + 460]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 245] * kernel_shared_1[threadIdx_x // 49 * 576 + 317]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 245] * kernel_shared_1[threadIdx_x // 49 * 576 + 461]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 324] * kernel_shared_1[threadIdx_x // 49 * 576 + 324]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 324] * kernel_shared_1[threadIdx_x // 49 * 576 + 468]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 325] * kernel_shared_1[threadIdx_x // 49 * 576 + 325]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 325] * kernel_shared_1[threadIdx_x // 49 * 576 + 469]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 326] * kernel_shared_1[threadIdx_x // 49 * 576 + 326]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 326] * kernel_shared_1[threadIdx_x // 49 * 576 + 470]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 405] * kernel_shared_1[threadIdx_x // 49 * 576 + 333]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 405] * kernel_shared_1[threadIdx_x // 49 * 576 + 477]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 406] * kernel_shared_1[threadIdx_x // 49 * 576 + 334]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 406] * kernel_shared_1[threadIdx_x // 49 * 576 + 478]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 407] * kernel_shared_1[threadIdx_x // 49 * 576 + 335]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 407] * kernel_shared_1[threadIdx_x // 49 * 576 + 479]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 486] * kernel_shared_1[threadIdx_x // 49 * 576 + 342]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 486] * kernel_shared_1[threadIdx_x // 49 * 576 + 486]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 487] * kernel_shared_1[threadIdx_x // 49 * 576 + 343]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 487] * kernel_shared_1[threadIdx_x // 49 * 576 + 487]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 488] * kernel_shared_1[threadIdx_x // 49 * 576 + 344]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 488] * kernel_shared_1[threadIdx_x // 49 * 576 + 488]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 567] * kernel_shared_1[threadIdx_x // 49 * 576 + 351]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 567] * kernel_shared_1[threadIdx_x // 49 * 576 + 495]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 568] * kernel_shared_1[threadIdx_x // 49 * 576 + 352]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 568] * kernel_shared_1[threadIdx_x // 49 * 576 + 496]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 569] * kernel_shared_1[threadIdx_x // 49 * 576 + 353]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 569] * kernel_shared_1[threadIdx_x // 49 * 576 + 497]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 576 + 3]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 576 + 147]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 576 + 4]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 576 + 148]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 576 + 5]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 576 + 149]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 576 + 12]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 576 + 156]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 576 + 13]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 576 + 157]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 576 + 14]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 576 + 158]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 171] * kernel_shared_1[threadIdx_x // 49 * 576 + 21]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 171] * kernel_shared_1[threadIdx_x // 49 * 576 + 165]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 172] * kernel_shared_1[threadIdx_x // 49 * 576 + 22]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 172] * kernel_shared_1[threadIdx_x // 49 * 576 + 166]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 173] * kernel_shared_1[threadIdx_x // 49 * 576 + 23]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 173] * kernel_shared_1[threadIdx_x // 49 * 576 + 167]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 252] * kernel_shared_1[threadIdx_x // 49 * 576 + 30]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 252] * kernel_shared_1[threadIdx_x // 49 * 576 + 174]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 253] * kernel_shared_1[threadIdx_x // 49 * 576 + 31]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 253] * kernel_shared_1[threadIdx_x // 49 * 576 + 175]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 254] * kernel_shared_1[threadIdx_x // 49 * 576 + 32]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 254] * kernel_shared_1[threadIdx_x // 49 * 576 + 176]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 333] * kernel_shared_1[threadIdx_x // 49 * 576 + 39]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 333] * kernel_shared_1[threadIdx_x // 49 * 576 + 183]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 334] * kernel_shared_1[threadIdx_x // 49 * 576 + 40]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 334] * kernel_shared_1[threadIdx_x // 49 * 576 + 184]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 335] * kernel_shared_1[threadIdx_x // 49 * 576 + 41]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 335] * kernel_shared_1[threadIdx_x // 49 * 576 + 185]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 414] * kernel_shared_1[threadIdx_x // 49 * 576 + 48]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 414] * kernel_shared_1[threadIdx_x // 49 * 576 + 192]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 415] * kernel_shared_1[threadIdx_x // 49 * 576 + 49]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 415] * kernel_shared_1[threadIdx_x // 49 * 576 + 193]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 416] * kernel_shared_1[threadIdx_x // 49 * 576 + 50]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 416] * kernel_shared_1[threadIdx_x // 49 * 576 + 194]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 495] * kernel_shared_1[threadIdx_x // 49 * 576 + 57]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 495] * kernel_shared_1[threadIdx_x // 49 * 576 + 201]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 496] * kernel_shared_1[threadIdx_x // 49 * 576 + 58]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 496] * kernel_shared_1[threadIdx_x // 49 * 576 + 202]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 497] * kernel_shared_1[threadIdx_x // 49 * 576 + 59]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 497] * kernel_shared_1[threadIdx_x // 49 * 576 + 203]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 576] * kernel_shared_1[threadIdx_x // 49 * 576 + 66]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 576] * kernel_shared_1[threadIdx_x // 49 * 576 + 210]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 577] * kernel_shared_1[threadIdx_x // 49 * 576 + 67]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 577] * kernel_shared_1[threadIdx_x // 49 * 576 + 211]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 578] * kernel_shared_1[threadIdx_x // 49 * 576 + 68]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 578] * kernel_shared_1[threadIdx_x // 49 * 576 + 212]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 576 + 291]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 576 + 435]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 576 + 292]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 576 + 436]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 576 + 293]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 576 + 437]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 576 + 300]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 576 + 444]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 576 + 301]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 576 + 445]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 576 + 302]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 576 + 446]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 171] * kernel_shared_1[threadIdx_x // 49 * 576 + 309]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 171] * kernel_shared_1[threadIdx_x // 49 * 576 + 453]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 172] * kernel_shared_1[threadIdx_x // 49 * 576 + 310]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 172] * kernel_shared_1[threadIdx_x // 49 * 576 + 454]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 173] * kernel_shared_1[threadIdx_x // 49 * 576 + 311]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 173] * kernel_shared_1[threadIdx_x // 49 * 576 + 455]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 252] * kernel_shared_1[threadIdx_x // 49 * 576 + 318]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 252] * kernel_shared_1[threadIdx_x // 49 * 576 + 462]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 253] * kernel_shared_1[threadIdx_x // 49 * 576 + 319]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 253] * kernel_shared_1[threadIdx_x // 49 * 576 + 463]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 254] * kernel_shared_1[threadIdx_x // 49 * 576 + 320]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 254] * kernel_shared_1[threadIdx_x // 49 * 576 + 464]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 333] * kernel_shared_1[threadIdx_x // 49 * 576 + 327]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 333] * kernel_shared_1[threadIdx_x // 49 * 576 + 471]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 334] * kernel_shared_1[threadIdx_x // 49 * 576 + 328]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 334] * kernel_shared_1[threadIdx_x // 49 * 576 + 472]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 335] * kernel_shared_1[threadIdx_x // 49 * 576 + 329]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 335] * kernel_shared_1[threadIdx_x // 49 * 576 + 473]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 414] * kernel_shared_1[threadIdx_x // 49 * 576 + 336]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 414] * kernel_shared_1[threadIdx_x // 49 * 576 + 480]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 415] * kernel_shared_1[threadIdx_x // 49 * 576 + 337]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 415] * kernel_shared_1[threadIdx_x // 49 * 576 + 481]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 416] * kernel_shared_1[threadIdx_x // 49 * 576 + 338]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 416] * kernel_shared_1[threadIdx_x // 49 * 576 + 482]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 495] * kernel_shared_1[threadIdx_x // 49 * 576 + 345]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 495] * kernel_shared_1[threadIdx_x // 49 * 576 + 489]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 496] * kernel_shared_1[threadIdx_x // 49 * 576 + 346]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 496] * kernel_shared_1[threadIdx_x // 49 * 576 + 490]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 497] * kernel_shared_1[threadIdx_x // 49 * 576 + 347]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 497] * kernel_shared_1[threadIdx_x // 49 * 576 + 491]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 576] * kernel_shared_1[threadIdx_x // 49 * 576 + 354]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 576] * kernel_shared_1[threadIdx_x // 49 * 576 + 498]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 577] * kernel_shared_1[threadIdx_x // 49 * 576 + 355]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 577] * kernel_shared_1[threadIdx_x // 49 * 576 + 499]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 578] * kernel_shared_1[threadIdx_x // 49 * 576 + 356]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 578] * kernel_shared_1[threadIdx_x // 49 * 576 + 500]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 576 + 6]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 576 + 150]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 576 + 7]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 576 + 151]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 576 + 8]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 576 + 152]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 576 + 15]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 576 + 159]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 576 + 16]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 576 + 160]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 576 + 17]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 576 + 161]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 180] * kernel_shared_1[threadIdx_x // 49 * 576 + 24]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 180] * kernel_shared_1[threadIdx_x // 49 * 576 + 168]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 181] * kernel_shared_1[threadIdx_x // 49 * 576 + 25]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 181] * kernel_shared_1[threadIdx_x // 49 * 576 + 169]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 182] * kernel_shared_1[threadIdx_x // 49 * 576 + 26]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 182] * kernel_shared_1[threadIdx_x // 49 * 576 + 170]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 261] * kernel_shared_1[threadIdx_x // 49 * 576 + 33]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 261] * kernel_shared_1[threadIdx_x // 49 * 576 + 177]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 262] * kernel_shared_1[threadIdx_x // 49 * 576 + 34]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 262] * kernel_shared_1[threadIdx_x // 49 * 576 + 178]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 263] * kernel_shared_1[threadIdx_x // 49 * 576 + 35]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 263] * kernel_shared_1[threadIdx_x // 49 * 576 + 179]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 342] * kernel_shared_1[threadIdx_x // 49 * 576 + 42]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 342] * kernel_shared_1[threadIdx_x // 49 * 576 + 186]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 343] * kernel_shared_1[threadIdx_x // 49 * 576 + 43]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 343] * kernel_shared_1[threadIdx_x // 49 * 576 + 187]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 344] * kernel_shared_1[threadIdx_x // 49 * 576 + 44]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 344] * kernel_shared_1[threadIdx_x // 49 * 576 + 188]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 423] * kernel_shared_1[threadIdx_x // 49 * 576 + 51]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 423] * kernel_shared_1[threadIdx_x // 49 * 576 + 195]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 424] * kernel_shared_1[threadIdx_x // 49 * 576 + 52]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 424] * kernel_shared_1[threadIdx_x // 49 * 576 + 196]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 425] * kernel_shared_1[threadIdx_x // 49 * 576 + 53]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 425] * kernel_shared_1[threadIdx_x // 49 * 576 + 197]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 504] * kernel_shared_1[threadIdx_x // 49 * 576 + 60]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 504] * kernel_shared_1[threadIdx_x // 49 * 576 + 204]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 505] * kernel_shared_1[threadIdx_x // 49 * 576 + 61]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 505] * kernel_shared_1[threadIdx_x // 49 * 576 + 205]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 506] * kernel_shared_1[threadIdx_x // 49 * 576 + 62]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 506] * kernel_shared_1[threadIdx_x // 49 * 576 + 206]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 585] * kernel_shared_1[threadIdx_x // 49 * 576 + 69]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 585] * kernel_shared_1[threadIdx_x // 49 * 576 + 213]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 586] * kernel_shared_1[threadIdx_x // 49 * 576 + 70]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 586] * kernel_shared_1[threadIdx_x // 49 * 576 + 214]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 587] * kernel_shared_1[threadIdx_x // 49 * 576 + 71]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 587] * kernel_shared_1[threadIdx_x // 49 * 576 + 215]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 576 + 294]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 576 + 438]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 576 + 295]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 576 + 439]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 576 + 296]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 576 + 440]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 576 + 303]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 576 + 447]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 576 + 304]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 576 + 448]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 576 + 305]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 576 + 449]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 180] * kernel_shared_1[threadIdx_x // 49 * 576 + 312]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 180] * kernel_shared_1[threadIdx_x // 49 * 576 + 456]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 181] * kernel_shared_1[threadIdx_x // 49 * 576 + 313]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 181] * kernel_shared_1[threadIdx_x // 49 * 576 + 457]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 182] * kernel_shared_1[threadIdx_x // 49 * 576 + 314]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 182] * kernel_shared_1[threadIdx_x // 49 * 576 + 458]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 261] * kernel_shared_1[threadIdx_x // 49 * 576 + 321]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 261] * kernel_shared_1[threadIdx_x // 49 * 576 + 465]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 262] * kernel_shared_1[threadIdx_x // 49 * 576 + 322]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 262] * kernel_shared_1[threadIdx_x // 49 * 576 + 466]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 263] * kernel_shared_1[threadIdx_x // 49 * 576 + 323]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 263] * kernel_shared_1[threadIdx_x // 49 * 576 + 467]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 342] * kernel_shared_1[threadIdx_x // 49 * 576 + 330]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 342] * kernel_shared_1[threadIdx_x // 49 * 576 + 474]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 343] * kernel_shared_1[threadIdx_x // 49 * 576 + 331]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 343] * kernel_shared_1[threadIdx_x // 49 * 576 + 475]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 344] * kernel_shared_1[threadIdx_x // 49 * 576 + 332]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 344] * kernel_shared_1[threadIdx_x // 49 * 576 + 476]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 423] * kernel_shared_1[threadIdx_x // 49 * 576 + 339]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 423] * kernel_shared_1[threadIdx_x // 49 * 576 + 483]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 424] * kernel_shared_1[threadIdx_x // 49 * 576 + 340]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 424] * kernel_shared_1[threadIdx_x // 49 * 576 + 484]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 425] * kernel_shared_1[threadIdx_x // 49 * 576 + 341]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 425] * kernel_shared_1[threadIdx_x // 49 * 576 + 485]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 504] * kernel_shared_1[threadIdx_x // 49 * 576 + 348]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 504] * kernel_shared_1[threadIdx_x // 49 * 576 + 492]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 505] * kernel_shared_1[threadIdx_x // 49 * 576 + 349]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 505] * kernel_shared_1[threadIdx_x // 49 * 576 + 493]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 506] * kernel_shared_1[threadIdx_x // 49 * 576 + 350]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 506] * kernel_shared_1[threadIdx_x // 49 * 576 + 494]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 585] * kernel_shared_1[threadIdx_x // 49 * 576 + 357]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 585] * kernel_shared_1[threadIdx_x // 49 * 576 + 501]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 586] * kernel_shared_1[threadIdx_x // 49 * 576 + 358]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 586] * kernel_shared_1[threadIdx_x // 49 * 576 + 502]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 587] * kernel_shared_1[threadIdx_x // 49 * 576 + 359]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 587] * kernel_shared_1[threadIdx_x // 49 * 576 + 503]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 648] * kernel_shared_1[threadIdx_x // 49 * 576 + 72]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 648] * kernel_shared_1[threadIdx_x // 49 * 576 + 216]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 649] * kernel_shared_1[threadIdx_x // 49 * 576 + 73]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 649] * kernel_shared_1[threadIdx_x // 49 * 576 + 217]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 650] * kernel_shared_1[threadIdx_x // 49 * 576 + 74]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 650] * kernel_shared_1[threadIdx_x // 49 * 576 + 218]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 729] * kernel_shared_1[threadIdx_x // 49 * 576 + 81]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 729] * kernel_shared_1[threadIdx_x // 49 * 576 + 225]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 730] * kernel_shared_1[threadIdx_x // 49 * 576 + 82]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 730] * kernel_shared_1[threadIdx_x // 49 * 576 + 226]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 731] * kernel_shared_1[threadIdx_x // 49 * 576 + 83]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 731] * kernel_shared_1[threadIdx_x // 49 * 576 + 227]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 810] * kernel_shared_1[threadIdx_x // 49 * 576 + 90]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 810] * kernel_shared_1[threadIdx_x // 49 * 576 + 234]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 811] * kernel_shared_1[threadIdx_x // 49 * 576 + 91]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 811] * kernel_shared_1[threadIdx_x // 49 * 576 + 235]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 812] * kernel_shared_1[threadIdx_x // 49 * 576 + 92]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 812] * kernel_shared_1[threadIdx_x // 49 * 576 + 236]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 891] * kernel_shared_1[threadIdx_x // 49 * 576 + 99]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 891] * kernel_shared_1[threadIdx_x // 49 * 576 + 243]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 892] * kernel_shared_1[threadIdx_x // 49 * 576 + 100]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 892] * kernel_shared_1[threadIdx_x // 49 * 576 + 244]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 893] * kernel_shared_1[threadIdx_x // 49 * 576 + 101]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 893] * kernel_shared_1[threadIdx_x // 49 * 576 + 245]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 972] * kernel_shared_1[threadIdx_x // 49 * 576 + 108]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 972] * kernel_shared_1[threadIdx_x // 49 * 576 + 252]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 973] * kernel_shared_1[threadIdx_x // 49 * 576 + 109]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 973] * kernel_shared_1[threadIdx_x // 49 * 576 + 253]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 974] * kernel_shared_1[threadIdx_x // 49 * 576 + 110]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 974] * kernel_shared_1[threadIdx_x // 49 * 576 + 254]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1053] * kernel_shared_1[threadIdx_x // 49 * 576 + 117]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1053] * kernel_shared_1[threadIdx_x // 49 * 576 + 261]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1054] * kernel_shared_1[threadIdx_x // 49 * 576 + 118]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1054] * kernel_shared_1[threadIdx_x // 49 * 576 + 262]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1055] * kernel_shared_1[threadIdx_x // 49 * 576 + 119]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1055] * kernel_shared_1[threadIdx_x // 49 * 576 + 263]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1134] * kernel_shared_1[threadIdx_x // 49 * 576 + 126]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1134] * kernel_shared_1[threadIdx_x // 49 * 576 + 270]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1135] * kernel_shared_1[threadIdx_x // 49 * 576 + 127]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1135] * kernel_shared_1[threadIdx_x // 49 * 576 + 271]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1136] * kernel_shared_1[threadIdx_x // 49 * 576 + 128]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1136] * kernel_shared_1[threadIdx_x // 49 * 576 + 272]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1215] * kernel_shared_1[threadIdx_x // 49 * 576 + 135]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1215] * kernel_shared_1[threadIdx_x // 49 * 576 + 279]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1216] * kernel_shared_1[threadIdx_x // 49 * 576 + 136]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1216] * kernel_shared_1[threadIdx_x // 49 * 576 + 280]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1217] * kernel_shared_1[threadIdx_x // 49 * 576 + 137]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1217] * kernel_shared_1[threadIdx_x // 49 * 576 + 281]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 648] * kernel_shared_1[threadIdx_x // 49 * 576 + 360]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 648] * kernel_shared_1[threadIdx_x // 49 * 576 + 504]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 649] * kernel_shared_1[threadIdx_x // 49 * 576 + 361]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 649] * kernel_shared_1[threadIdx_x // 49 * 576 + 505]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 650] * kernel_shared_1[threadIdx_x // 49 * 576 + 362]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 650] * kernel_shared_1[threadIdx_x // 49 * 576 + 506]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 729] * kernel_shared_1[threadIdx_x // 49 * 576 + 369]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 729] * kernel_shared_1[threadIdx_x // 49 * 576 + 513]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 730] * kernel_shared_1[threadIdx_x // 49 * 576 + 370]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 730] * kernel_shared_1[threadIdx_x // 49 * 576 + 514]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 731] * kernel_shared_1[threadIdx_x // 49 * 576 + 371]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 731] * kernel_shared_1[threadIdx_x // 49 * 576 + 515]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 810] * kernel_shared_1[threadIdx_x // 49 * 576 + 378]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 810] * kernel_shared_1[threadIdx_x // 49 * 576 + 522]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 811] * kernel_shared_1[threadIdx_x // 49 * 576 + 379]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 811] * kernel_shared_1[threadIdx_x // 49 * 576 + 523]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 812] * kernel_shared_1[threadIdx_x // 49 * 576 + 380]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 812] * kernel_shared_1[threadIdx_x // 49 * 576 + 524]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 891] * kernel_shared_1[threadIdx_x // 49 * 576 + 387]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 891] * kernel_shared_1[threadIdx_x // 49 * 576 + 531]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 892] * kernel_shared_1[threadIdx_x // 49 * 576 + 388]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 892] * kernel_shared_1[threadIdx_x // 49 * 576 + 532]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 893] * kernel_shared_1[threadIdx_x // 49 * 576 + 389]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 893] * kernel_shared_1[threadIdx_x // 49 * 576 + 533]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 972] * kernel_shared_1[threadIdx_x // 49 * 576 + 396]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 972] * kernel_shared_1[threadIdx_x // 49 * 576 + 540]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 973] * kernel_shared_1[threadIdx_x // 49 * 576 + 397]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 973] * kernel_shared_1[threadIdx_x // 49 * 576 + 541]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 974] * kernel_shared_1[threadIdx_x // 49 * 576 + 398]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 974] * kernel_shared_1[threadIdx_x // 49 * 576 + 542]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1053] * kernel_shared_1[threadIdx_x // 49 * 576 + 405]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1053] * kernel_shared_1[threadIdx_x // 49 * 576 + 549]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1054] * kernel_shared_1[threadIdx_x // 49 * 576 + 406]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1054] * kernel_shared_1[threadIdx_x // 49 * 576 + 550]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1055] * kernel_shared_1[threadIdx_x // 49 * 576 + 407]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1055] * kernel_shared_1[threadIdx_x // 49 * 576 + 551]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1134] * kernel_shared_1[threadIdx_x // 49 * 576 + 414]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1134] * kernel_shared_1[threadIdx_x // 49 * 576 + 558]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1135] * kernel_shared_1[threadIdx_x // 49 * 576 + 415]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1135] * kernel_shared_1[threadIdx_x // 49 * 576 + 559]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1136] * kernel_shared_1[threadIdx_x // 49 * 576 + 416]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1136] * kernel_shared_1[threadIdx_x // 49 * 576 + 560]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1215] * kernel_shared_1[threadIdx_x // 49 * 576 + 423]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1215] * kernel_shared_1[threadIdx_x // 49 * 576 + 567]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1216] * kernel_shared_1[threadIdx_x // 49 * 576 + 424]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1216] * kernel_shared_1[threadIdx_x // 49 * 576 + 568]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1217] * kernel_shared_1[threadIdx_x // 49 * 576 + 425]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1217] * kernel_shared_1[threadIdx_x // 49 * 576 + 569]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 657] * kernel_shared_1[threadIdx_x // 49 * 576 + 75]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 657] * kernel_shared_1[threadIdx_x // 49 * 576 + 219]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 658] * kernel_shared_1[threadIdx_x // 49 * 576 + 76]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 658] * kernel_shared_1[threadIdx_x // 49 * 576 + 220]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 659] * kernel_shared_1[threadIdx_x // 49 * 576 + 77]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 659] * kernel_shared_1[threadIdx_x // 49 * 576 + 221]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 738] * kernel_shared_1[threadIdx_x // 49 * 576 + 84]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 738] * kernel_shared_1[threadIdx_x // 49 * 576 + 228]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 739] * kernel_shared_1[threadIdx_x // 49 * 576 + 85]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 739] * kernel_shared_1[threadIdx_x // 49 * 576 + 229]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 740] * kernel_shared_1[threadIdx_x // 49 * 576 + 86]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 740] * kernel_shared_1[threadIdx_x // 49 * 576 + 230]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 819] * kernel_shared_1[threadIdx_x // 49 * 576 + 93]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 819] * kernel_shared_1[threadIdx_x // 49 * 576 + 237]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 820] * kernel_shared_1[threadIdx_x // 49 * 576 + 94]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 820] * kernel_shared_1[threadIdx_x // 49 * 576 + 238]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 821] * kernel_shared_1[threadIdx_x // 49 * 576 + 95]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 821] * kernel_shared_1[threadIdx_x // 49 * 576 + 239]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 900] * kernel_shared_1[threadIdx_x // 49 * 576 + 102]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 900] * kernel_shared_1[threadIdx_x // 49 * 576 + 246]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 901] * kernel_shared_1[threadIdx_x // 49 * 576 + 103]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 901] * kernel_shared_1[threadIdx_x // 49 * 576 + 247]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 902] * kernel_shared_1[threadIdx_x // 49 * 576 + 104]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 902] * kernel_shared_1[threadIdx_x // 49 * 576 + 248]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 981] * kernel_shared_1[threadIdx_x // 49 * 576 + 111]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 981] * kernel_shared_1[threadIdx_x // 49 * 576 + 255]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 982] * kernel_shared_1[threadIdx_x // 49 * 576 + 112]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 982] * kernel_shared_1[threadIdx_x // 49 * 576 + 256]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 983] * kernel_shared_1[threadIdx_x // 49 * 576 + 113]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 983] * kernel_shared_1[threadIdx_x // 49 * 576 + 257]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1062] * kernel_shared_1[threadIdx_x // 49 * 576 + 120]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1062] * kernel_shared_1[threadIdx_x // 49 * 576 + 264]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1063] * kernel_shared_1[threadIdx_x // 49 * 576 + 121]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1063] * kernel_shared_1[threadIdx_x // 49 * 576 + 265]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1064] * kernel_shared_1[threadIdx_x // 49 * 576 + 122]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1064] * kernel_shared_1[threadIdx_x // 49 * 576 + 266]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1143] * kernel_shared_1[threadIdx_x // 49 * 576 + 129]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1143] * kernel_shared_1[threadIdx_x // 49 * 576 + 273]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1144] * kernel_shared_1[threadIdx_x // 49 * 576 + 130]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1144] * kernel_shared_1[threadIdx_x // 49 * 576 + 274]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1145] * kernel_shared_1[threadIdx_x // 49 * 576 + 131]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1145] * kernel_shared_1[threadIdx_x // 49 * 576 + 275]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1224] * kernel_shared_1[threadIdx_x // 49 * 576 + 138]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1224] * kernel_shared_1[threadIdx_x // 49 * 576 + 282]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1225] * kernel_shared_1[threadIdx_x // 49 * 576 + 139]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1225] * kernel_shared_1[threadIdx_x // 49 * 576 + 283]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1226] * kernel_shared_1[threadIdx_x // 49 * 576 + 140]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1226] * kernel_shared_1[threadIdx_x // 49 * 576 + 284]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 657] * kernel_shared_1[threadIdx_x // 49 * 576 + 363]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 657] * kernel_shared_1[threadIdx_x // 49 * 576 + 507]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 658] * kernel_shared_1[threadIdx_x // 49 * 576 + 364]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 658] * kernel_shared_1[threadIdx_x // 49 * 576 + 508]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 659] * kernel_shared_1[threadIdx_x // 49 * 576 + 365]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 659] * kernel_shared_1[threadIdx_x // 49 * 576 + 509]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 738] * kernel_shared_1[threadIdx_x // 49 * 576 + 372]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 738] * kernel_shared_1[threadIdx_x // 49 * 576 + 516]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 739] * kernel_shared_1[threadIdx_x // 49 * 576 + 373]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 739] * kernel_shared_1[threadIdx_x // 49 * 576 + 517]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 740] * kernel_shared_1[threadIdx_x // 49 * 576 + 374]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 740] * kernel_shared_1[threadIdx_x // 49 * 576 + 518]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 819] * kernel_shared_1[threadIdx_x // 49 * 576 + 381]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 819] * kernel_shared_1[threadIdx_x // 49 * 576 + 525]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 820] * kernel_shared_1[threadIdx_x // 49 * 576 + 382]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 820] * kernel_shared_1[threadIdx_x // 49 * 576 + 526]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 821] * kernel_shared_1[threadIdx_x // 49 * 576 + 383]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 821] * kernel_shared_1[threadIdx_x // 49 * 576 + 527]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 900] * kernel_shared_1[threadIdx_x // 49 * 576 + 390]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 900] * kernel_shared_1[threadIdx_x // 49 * 576 + 534]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 901] * kernel_shared_1[threadIdx_x // 49 * 576 + 391]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 901] * kernel_shared_1[threadIdx_x // 49 * 576 + 535]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 902] * kernel_shared_1[threadIdx_x // 49 * 576 + 392]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 902] * kernel_shared_1[threadIdx_x // 49 * 576 + 536]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 981] * kernel_shared_1[threadIdx_x // 49 * 576 + 399]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 981] * kernel_shared_1[threadIdx_x // 49 * 576 + 543]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 982] * kernel_shared_1[threadIdx_x // 49 * 576 + 400]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 982] * kernel_shared_1[threadIdx_x // 49 * 576 + 544]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 983] * kernel_shared_1[threadIdx_x // 49 * 576 + 401]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 983] * kernel_shared_1[threadIdx_x // 49 * 576 + 545]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1062] * kernel_shared_1[threadIdx_x // 49 * 576 + 408]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1062] * kernel_shared_1[threadIdx_x // 49 * 576 + 552]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1063] * kernel_shared_1[threadIdx_x // 49 * 576 + 409]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1063] * kernel_shared_1[threadIdx_x // 49 * 576 + 553]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1064] * kernel_shared_1[threadIdx_x // 49 * 576 + 410]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1064] * kernel_shared_1[threadIdx_x // 49 * 576 + 554]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1143] * kernel_shared_1[threadIdx_x // 49 * 576 + 417]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1143] * kernel_shared_1[threadIdx_x // 49 * 576 + 561]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1144] * kernel_shared_1[threadIdx_x // 49 * 576 + 418]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1144] * kernel_shared_1[threadIdx_x // 49 * 576 + 562]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1145] * kernel_shared_1[threadIdx_x // 49 * 576 + 419]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1145] * kernel_shared_1[threadIdx_x // 49 * 576 + 563]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1224] * kernel_shared_1[threadIdx_x // 49 * 576 + 426]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1224] * kernel_shared_1[threadIdx_x // 49 * 576 + 570]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1225] * kernel_shared_1[threadIdx_x // 49 * 576 + 427]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1225] * kernel_shared_1[threadIdx_x // 49 * 576 + 571]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1226] * kernel_shared_1[threadIdx_x // 49 * 576 + 428]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1226] * kernel_shared_1[threadIdx_x // 49 * 576 + 572]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 666] * kernel_shared_1[threadIdx_x // 49 * 576 + 78]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 666] * kernel_shared_1[threadIdx_x // 49 * 576 + 222]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 667] * kernel_shared_1[threadIdx_x // 49 * 576 + 79]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 667] * kernel_shared_1[threadIdx_x // 49 * 576 + 223]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 668] * kernel_shared_1[threadIdx_x // 49 * 576 + 80]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 668] * kernel_shared_1[threadIdx_x // 49 * 576 + 224]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 747] * kernel_shared_1[threadIdx_x // 49 * 576 + 87]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 747] * kernel_shared_1[threadIdx_x // 49 * 576 + 231]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 748] * kernel_shared_1[threadIdx_x // 49 * 576 + 88]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 748] * kernel_shared_1[threadIdx_x // 49 * 576 + 232]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 749] * kernel_shared_1[threadIdx_x // 49 * 576 + 89]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 749] * kernel_shared_1[threadIdx_x // 49 * 576 + 233]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 828] * kernel_shared_1[threadIdx_x // 49 * 576 + 96]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 828] * kernel_shared_1[threadIdx_x // 49 * 576 + 240]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 829] * kernel_shared_1[threadIdx_x // 49 * 576 + 97]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 829] * kernel_shared_1[threadIdx_x // 49 * 576 + 241]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 830] * kernel_shared_1[threadIdx_x // 49 * 576 + 98]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 830] * kernel_shared_1[threadIdx_x // 49 * 576 + 242]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 909] * kernel_shared_1[threadIdx_x // 49 * 576 + 105]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 909] * kernel_shared_1[threadIdx_x // 49 * 576 + 249]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 910] * kernel_shared_1[threadIdx_x // 49 * 576 + 106]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 910] * kernel_shared_1[threadIdx_x // 49 * 576 + 250]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 911] * kernel_shared_1[threadIdx_x // 49 * 576 + 107]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 911] * kernel_shared_1[threadIdx_x // 49 * 576 + 251]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 990] * kernel_shared_1[threadIdx_x // 49 * 576 + 114]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 990] * kernel_shared_1[threadIdx_x // 49 * 576 + 258]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 991] * kernel_shared_1[threadIdx_x // 49 * 576 + 115]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 991] * kernel_shared_1[threadIdx_x // 49 * 576 + 259]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 992] * kernel_shared_1[threadIdx_x // 49 * 576 + 116]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 992] * kernel_shared_1[threadIdx_x // 49 * 576 + 260]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1071] * kernel_shared_1[threadIdx_x // 49 * 576 + 123]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1071] * kernel_shared_1[threadIdx_x // 49 * 576 + 267]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1072] * kernel_shared_1[threadIdx_x // 49 * 576 + 124]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1072] * kernel_shared_1[threadIdx_x // 49 * 576 + 268]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1073] * kernel_shared_1[threadIdx_x // 49 * 576 + 125]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1073] * kernel_shared_1[threadIdx_x // 49 * 576 + 269]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1152] * kernel_shared_1[threadIdx_x // 49 * 576 + 132]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1152] * kernel_shared_1[threadIdx_x // 49 * 576 + 276]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1153] * kernel_shared_1[threadIdx_x // 49 * 576 + 133]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1153] * kernel_shared_1[threadIdx_x // 49 * 576 + 277]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1154] * kernel_shared_1[threadIdx_x // 49 * 576 + 134]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1154] * kernel_shared_1[threadIdx_x // 49 * 576 + 278]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1233] * kernel_shared_1[threadIdx_x // 49 * 576 + 141]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1233] * kernel_shared_1[threadIdx_x // 49 * 576 + 285]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1234] * kernel_shared_1[threadIdx_x // 49 * 576 + 142]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1234] * kernel_shared_1[threadIdx_x // 49 * 576 + 286]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1235] * kernel_shared_1[threadIdx_x // 49 * 576 + 143]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1235] * kernel_shared_1[threadIdx_x // 49 * 576 + 287]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 666] * kernel_shared_1[threadIdx_x // 49 * 576 + 366]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 666] * kernel_shared_1[threadIdx_x // 49 * 576 + 510]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 667] * kernel_shared_1[threadIdx_x // 49 * 576 + 367]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 667] * kernel_shared_1[threadIdx_x // 49 * 576 + 511]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 668] * kernel_shared_1[threadIdx_x // 49 * 576 + 368]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 668] * kernel_shared_1[threadIdx_x // 49 * 576 + 512]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 747] * kernel_shared_1[threadIdx_x // 49 * 576 + 375]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 747] * kernel_shared_1[threadIdx_x // 49 * 576 + 519]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 748] * kernel_shared_1[threadIdx_x // 49 * 576 + 376]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 748] * kernel_shared_1[threadIdx_x // 49 * 576 + 520]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 749] * kernel_shared_1[threadIdx_x // 49 * 576 + 377]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 749] * kernel_shared_1[threadIdx_x // 49 * 576 + 521]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 828] * kernel_shared_1[threadIdx_x // 49 * 576 + 384]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 828] * kernel_shared_1[threadIdx_x // 49 * 576 + 528]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 829] * kernel_shared_1[threadIdx_x // 49 * 576 + 385]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 829] * kernel_shared_1[threadIdx_x // 49 * 576 + 529]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 830] * kernel_shared_1[threadIdx_x // 49 * 576 + 386]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 830] * kernel_shared_1[threadIdx_x // 49 * 576 + 530]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 909] * kernel_shared_1[threadIdx_x // 49 * 576 + 393]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 909] * kernel_shared_1[threadIdx_x // 49 * 576 + 537]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 910] * kernel_shared_1[threadIdx_x // 49 * 576 + 394]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 910] * kernel_shared_1[threadIdx_x // 49 * 576 + 538]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 911] * kernel_shared_1[threadIdx_x // 49 * 576 + 395]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 911] * kernel_shared_1[threadIdx_x // 49 * 576 + 539]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 990] * kernel_shared_1[threadIdx_x // 49 * 576 + 402]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 990] * kernel_shared_1[threadIdx_x // 49 * 576 + 546]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 991] * kernel_shared_1[threadIdx_x // 49 * 576 + 403]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 991] * kernel_shared_1[threadIdx_x // 49 * 576 + 547]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 992] * kernel_shared_1[threadIdx_x // 49 * 576 + 404]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 992] * kernel_shared_1[threadIdx_x // 49 * 576 + 548]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1071] * kernel_shared_1[threadIdx_x // 49 * 576 + 411]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1071] * kernel_shared_1[threadIdx_x // 49 * 576 + 555]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1072] * kernel_shared_1[threadIdx_x // 49 * 576 + 412]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1072] * kernel_shared_1[threadIdx_x // 49 * 576 + 556]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1073] * kernel_shared_1[threadIdx_x // 49 * 576 + 413]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1073] * kernel_shared_1[threadIdx_x // 49 * 576 + 557]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1152] * kernel_shared_1[threadIdx_x // 49 * 576 + 420]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1152] * kernel_shared_1[threadIdx_x // 49 * 576 + 564]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1153] * kernel_shared_1[threadIdx_x // 49 * 576 + 421]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1153] * kernel_shared_1[threadIdx_x // 49 * 576 + 565]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1154] * kernel_shared_1[threadIdx_x // 49 * 576 + 422]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1154] * kernel_shared_1[threadIdx_x // 49 * 576 + 566]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1233] * kernel_shared_1[threadIdx_x // 49 * 576 + 429]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1233] * kernel_shared_1[threadIdx_x // 49 * 576 + 573]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1234] * kernel_shared_1[threadIdx_x // 49 * 576 + 430]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1234] * kernel_shared_1[threadIdx_x // 49 * 576 + 574]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1235] * kernel_shared_1[threadIdx_x // 49 * 576 + 431]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1235] * kernel_shared_1[threadIdx_x // 49 * 576 + 575]
            for i1_inner in range(4):
                compute_1 = T.Buffer((25088,), data=compute.data)
                bias_1 = T.Buffer((512,), data=bias.data)
                compute_1[blockIdx_x * 392 + threadIdx_x // 49 * 196 + i1_inner * 49 + threadIdx_x % 49] = T.max(conv2d_nchw_1[i1_inner] + bias_1[blockIdx_x * 8 + threadIdx_x // 49 * 4 + i1_inner], T.float32(0))




.. GENERATED FROM PYTHON SOURCE LINES 138-141

Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.

.. GENERATED FROM PYTHON SOURCE LINES 141-168

.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Execution time of this operator: 0.293 ms




.. GENERATED FROM PYTHON SOURCE LINES 169-174

Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

.. GENERATED FROM PYTHON SOURCE LINES 176-179

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.

.. GENERATED FROM PYTHON SOURCE LINES 179-186

.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=2)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=2)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=2)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=1)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=7)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=7)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=8)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=2)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=1)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=3)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=3)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=1)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=4)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=2)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=1)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=7)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=7)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=24)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=98)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=98)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 1024)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(98) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[4];
      __shared__ float pad_temp_shared[1296];
      __shared__ float kernel_shared[1152];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 32; ++rc_outer_outer) {
        __syncthreads();
        pad_temp_shared[((int)threadIdx.x)] = (((((9 <= (((int)threadIdx.x) % 81)) && ((((int)threadIdx.x) % 81) < 72)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + ((((int)threadIdx.x) / 81) * 49)) + (((((int)threadIdx.x) % 81) / 9) * 7)) + (((int)threadIdx.x) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 98)] = (((((9 <= ((((int)threadIdx.x) + 17) % 81)) && (((((int)threadIdx.x) + 17) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 98) / 81) * 49)) + ((((((int)threadIdx.x) + 17) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 196)] = (((((9 <= ((((int)threadIdx.x) + 34) % 81)) && (((((int)threadIdx.x) + 34) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 196) / 81) * 49)) + ((((((int)threadIdx.x) + 34) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 294)] = (((((9 <= ((((int)threadIdx.x) + 51) % 81)) && (((((int)threadIdx.x) + 51) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 294) / 81) * 49)) + ((((((int)threadIdx.x) + 51) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 392)] = (((((9 <= ((((int)threadIdx.x) + 68) % 81)) && (((((int)threadIdx.x) + 68) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 392) / 81) * 49)) + ((((((int)threadIdx.x) + 68) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 490)] = (((((9 <= ((((int)threadIdx.x) + 4) % 81)) && (((((int)threadIdx.x) + 4) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 490) / 81) * 49)) + ((((((int)threadIdx.x) + 4) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 588)] = (((((9 <= ((((int)threadIdx.x) + 21) % 81)) && (((((int)threadIdx.x) + 21) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 588) / 81) * 49)) + ((((((int)threadIdx.x) + 21) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 686)] = (((((9 <= ((((int)threadIdx.x) + 38) % 81)) && (((((int)threadIdx.x) + 38) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 686) / 81) * 49)) + ((((((int)threadIdx.x) + 38) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 784)] = (((((9 <= ((((int)threadIdx.x) + 55) % 81)) && (((((int)threadIdx.x) + 55) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 784) / 81) * 49)) + ((((((int)threadIdx.x) + 55) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 882)] = (((((1 <= (((((int)threadIdx.x) / 9) + 8) % 9)) && (((((int)threadIdx.x) + 72) % 81) < 72)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 882) / 81) * 49)) + ((((((int)threadIdx.x) / 9) + 8) % 9) * 7)) + (((int)threadIdx.x) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 980)] = (((((9 <= ((((int)threadIdx.x) + 8) % 81)) && (((((int)threadIdx.x) + 8) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 980) / 81) * 49)) + ((((((int)threadIdx.x) + 8) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1078)] = (((((9 <= ((((int)threadIdx.x) + 25) % 81)) && (((((int)threadIdx.x) + 25) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 1078) / 81) * 49)) + ((((((int)threadIdx.x) + 25) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1176)] = (((((9 <= ((((int)threadIdx.x) + 42) % 81)) && (((((int)threadIdx.x) + 42) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 1176) / 81) * 49)) + ((((((int)threadIdx.x) + 42) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
        if (((int)threadIdx.x) < 22) {
          pad_temp_shared[(((int)threadIdx.x) + 1274)] = ((((((int)threadIdx.x) < 13) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 1274) / 81) * 49)) + (((((int)threadIdx.x) + 59) / 9) * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 48) {
          kernel_shared[(((int)threadIdx.x) * 24)] = kernel[((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) / 6) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 6) * 24))];
        }
        if (((int)threadIdx.x) < 48) {
          kernel_shared[((((int)threadIdx.x) * 24) + 1)] = kernel[(((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) / 6) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 6) * 24)) + 1)];
        }
        if (((int)threadIdx.x) < 48) {
          kernel_shared[((((int)threadIdx.x) * 24) + 2)] = kernel[(((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) / 6) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 6) * 24)) + 2)];
        }
        if (((int)threadIdx.x) < 48) {
          kernel_shared[((((int)threadIdx.x) * 24) + 3)] = kernel[(((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) / 6) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 6) * 24)) + 3)];
        }
        if (((int)threadIdx.x) < 48) {
          kernel_shared[((((int)threadIdx.x) * 24) + 4)] = kernel[(((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) / 6) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 6) * 24)) + 4)];
        }
        if (((int)threadIdx.x) < 48) {
          kernel_shared[((((int)threadIdx.x) * 24) + 5)] = kernel[(((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) / 6) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 6) * 24)) + 5)];
        }
        if (((int)threadIdx.x) < 48) {
          kernel_shared[((((int)threadIdx.x) * 24) + 6)] = kernel[(((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) / 6) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 6) * 24)) + 6)];
        }
        if (((int)threadIdx.x) < 48) {
          kernel_shared[((((int)threadIdx.x) * 24) + 7)] = kernel[(((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) / 6) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 6) * 24)) + 7)];
        }
        if (((int)threadIdx.x) < 48) {
          kernel_shared[((((int)threadIdx.x) * 24) + 8)] = kernel[(((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) / 6) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 6) * 24)) + 8)];
        }
        if (((int)threadIdx.x) < 48) {
          kernel_shared[((((int)threadIdx.x) * 24) + 9)] = kernel[(((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) / 6) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 6) * 24)) + 9)];
        }
        if (((int)threadIdx.x) < 48) {
          kernel_shared[((((int)threadIdx.x) * 24) + 10)] = kernel[(((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) / 6) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 6) * 24)) + 10)];
        }
        if (((int)threadIdx.x) < 48) {
          kernel_shared[((((int)threadIdx.x) * 24) + 11)] = kernel[(((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) / 6) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 6) * 24)) + 11)];
        }
        if (((int)threadIdx.x) < 48) {
          kernel_shared[((((int)threadIdx.x) * 24) + 12)] = kernel[(((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) / 6) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 6) * 24)) + 12)];
        }
        if (((int)threadIdx.x) < 48) {
          kernel_shared[((((int)threadIdx.x) * 24) + 13)] = kernel[(((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) / 6) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 6) * 24)) + 13)];
        }
        if (((int)threadIdx.x) < 48) {
          kernel_shared[((((int)threadIdx.x) * 24) + 14)] = kernel[(((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) / 6) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 6) * 24)) + 14)];
        }
        if (((int)threadIdx.x) < 48) {
          kernel_shared[((((int)threadIdx.x) * 24) + 15)] = kernel[(((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) / 6) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 6) * 24)) + 15)];
        }
        if (((int)threadIdx.x) < 48) {
          kernel_shared[((((int)threadIdx.x) * 24) + 16)] = kernel[(((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) / 6) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 6) * 24)) + 16)];
        }
        if (((int)threadIdx.x) < 48) {
          kernel_shared[((((int)threadIdx.x) * 24) + 17)] = kernel[(((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) / 6) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 6) * 24)) + 17)];
        }
        if (((int)threadIdx.x) < 48) {
          kernel_shared[((((int)threadIdx.x) * 24) + 18)] = kernel[(((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) / 6) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 6) * 24)) + 18)];
        }
        if (((int)threadIdx.x) < 48) {
          kernel_shared[((((int)threadIdx.x) * 24) + 19)] = kernel[(((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) / 6) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 6) * 24)) + 19)];
        }
        if (((int)threadIdx.x) < 48) {
          kernel_shared[((((int)threadIdx.x) * 24) + 20)] = kernel[(((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) / 6) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 6) * 24)) + 20)];
        }
        if (((int)threadIdx.x) < 48) {
          kernel_shared[((((int)threadIdx.x) * 24) + 21)] = kernel[(((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) / 6) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 6) * 24)) + 21)];
        }
        if (((int)threadIdx.x) < 48) {
          kernel_shared[((((int)threadIdx.x) * 24) + 22)] = kernel[(((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) / 6) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 6) * 24)) + 22)];
        }
        if (((int)threadIdx.x) < 48) {
          kernel_shared[((((int)threadIdx.x) * 24) + 23)] = kernel[(((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) / 6) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 6) * 24)) + 23)];
        }
        __syncthreads();
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7))] * kernel_shared[((((int)threadIdx.x) / 49) * 576)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7))] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 144)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 1)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 145)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 2)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 146)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 9)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 153)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 10)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 154)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 11)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 155)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 18)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 162)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 163)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 19)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 163)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 163)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 164)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 20)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 164)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 164)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 27)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 171)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 244)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 28)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 244)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 172)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 245)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 29)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 245)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 173)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 36)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 180)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 325)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 37)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 325)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 181)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 326)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 38)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 326)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 182)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 45)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 189)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 406)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 46)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 406)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 190)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 407)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 47)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 407)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 191)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 54)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 198)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 487)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 55)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 487)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 199)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 488)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 56)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 488)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 200)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 63)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 207)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 568)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 64)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 568)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 208)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 569)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 65)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 569)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 209)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7))] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 288)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7))] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 432)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 289)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 433)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 290)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 434)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 297)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 441)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 298)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 442)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 299)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 443)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 306)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 450)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 163)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 307)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 163)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 451)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 164)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 308)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 164)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 452)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 315)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 459)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 244)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 316)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 244)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 460)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 245)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 317)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 245)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 461)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 324)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 468)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 325)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 325)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 325)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 469)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 326)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 326)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 326)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 470)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 333)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 477)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 406)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 334)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 406)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 478)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 407)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 335)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 407)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 479)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 342)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 486)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 487)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 343)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 487)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 487)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 488)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 344)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 488)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 488)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 351)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 495)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 568)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 352)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 568)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 496)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 569)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 353)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 569)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 497)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 3)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 147)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 4)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 148)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 5)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 149)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 12)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 156)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 13)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 157)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 14)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 158)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 21)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 165)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 172)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 22)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 172)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 166)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 173)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 23)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 173)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 167)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 30)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 174)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 31)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 175)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 32)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 176)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 39)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 183)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 334)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 40)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 334)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 184)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 335)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 41)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 335)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 185)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 48)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 192)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 415)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 49)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 415)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 193)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 416)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 50)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 416)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 194)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 57)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 201)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 496)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 58)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 496)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 202)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 497)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 59)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 497)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 203)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 576)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 66)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 576)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 210)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 577)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 67)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 577)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 211)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 578)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 68)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 578)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 212)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 291)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 435)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 292)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 436)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 293)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 437)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 300)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 444)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 301)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 445)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 302)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 446)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 309)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 453)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 172)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 310)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 172)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 454)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 173)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 311)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 173)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 455)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 318)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 462)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 319)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 463)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 320)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 464)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 327)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 471)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 334)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 328)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 334)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 472)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 335)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 329)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 335)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 473)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 336)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 480)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 415)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 337)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 415)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 481)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 416)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 338)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 416)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 482)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 345)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 489)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 496)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 346)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 496)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 490)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 497)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 347)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 497)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 491)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 576)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 354)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 576)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 498)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 577)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 355)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 577)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 499)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 578)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 356)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 578)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 500)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 6)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 150)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 7)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 151)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 8)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 152)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 15)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 159)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 16)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 160)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 17)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 161)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 24)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 168)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 181)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 25)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 181)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 169)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 182)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 26)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 182)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 170)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 33)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 177)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 262)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 34)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 262)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 178)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 263)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 35)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 263)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 179)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 42)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 186)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 343)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 43)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 343)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 187)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 344)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 44)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 344)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 188)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 51)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 195)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 424)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 52)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 424)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 196)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 425)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 53)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 425)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 197)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 60)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 204)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 505)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 61)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 505)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 205)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 506)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 62)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 506)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 206)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 69)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 213)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 586)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 70)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 586)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 214)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 587)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 71)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 587)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 215)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 294)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 438)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 295)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 439)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 296)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 440)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 303)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 447)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 304)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 448)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 305)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 449)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 312)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 456)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 181)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 313)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 181)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 457)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 182)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 314)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 182)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 458)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 321)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 465)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 262)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 322)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 262)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 466)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 263)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 323)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 263)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 467)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 330)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 474)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 343)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 331)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 343)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 475)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 344)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 332)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 344)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 476)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 339)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 483)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 424)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 340)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 424)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 484)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 425)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 341)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 425)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 485)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 348)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 492)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 505)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 349)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 505)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 493)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 506)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 350)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 506)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 494)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 357)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 501)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 586)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 358)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 586)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 502)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 587)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 359)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 587)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 503)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 648)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 72)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 648)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 216)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 649)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 73)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 649)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 217)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 650)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 74)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 650)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 218)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 729)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 81)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 729)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 225)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 730)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 82)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 730)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 226)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 731)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 83)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 731)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 227)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 810)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 90)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 810)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 234)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 811)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 91)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 811)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 235)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 812)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 92)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 812)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 236)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 891)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 99)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 891)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 243)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 892)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 100)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 892)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 244)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 893)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 101)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 893)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 245)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 972)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 108)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 972)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 252)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 973)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 109)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 973)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 253)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 974)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 110)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 974)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 254)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1053)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 117)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1053)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 261)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1054)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 118)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1054)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 262)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1055)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 119)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1055)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 263)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1134)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 126)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1134)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 270)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1135)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 127)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1135)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 271)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1136)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 128)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1136)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 272)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1215)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 135)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1215)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 279)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1216)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 136)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1216)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 280)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1217)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 137)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1217)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 281)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 648)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 360)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 648)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 504)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 649)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 361)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 649)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 505)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 650)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 362)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 650)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 506)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 729)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 369)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 729)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 513)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 730)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 370)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 730)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 514)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 731)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 371)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 731)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 515)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 810)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 378)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 810)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 522)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 811)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 379)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 811)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 523)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 812)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 380)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 812)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 524)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 891)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 387)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 891)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 531)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 892)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 388)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 892)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 532)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 893)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 389)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 893)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 533)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 972)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 396)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 972)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 540)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 973)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 397)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 973)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 541)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 974)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 398)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 974)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 542)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1053)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 405)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1053)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 549)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1054)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 406)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1054)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 550)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1055)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 407)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1055)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 551)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1134)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 414)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1134)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 558)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1135)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 415)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1135)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 559)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1136)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 416)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1136)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 560)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1215)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 423)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1215)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 567)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1216)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 424)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1216)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 568)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1217)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 425)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1217)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 569)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 657)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 75)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 657)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 219)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 658)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 76)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 658)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 220)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 659)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 77)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 659)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 221)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 738)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 84)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 738)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 228)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 739)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 85)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 739)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 229)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 740)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 86)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 740)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 230)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 93)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 237)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 820)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 94)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 820)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 238)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 821)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 95)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 821)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 239)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 900)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 102)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 900)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 246)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 901)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 103)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 901)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 247)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 902)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 104)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 902)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 248)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 981)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 111)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 981)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 255)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 982)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 112)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 982)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 256)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 983)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 113)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 983)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 257)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1062)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 120)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1062)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 264)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1063)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 121)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1063)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 265)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1064)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 122)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1064)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 266)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1143)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 129)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1143)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 273)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1144)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 130)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1144)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 274)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1145)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 131)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1145)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 275)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1224)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 138)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1224)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 282)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1225)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 139)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1225)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 283)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1226)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 140)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1226)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 284)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 657)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 363)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 657)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 507)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 658)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 364)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 658)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 508)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 659)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 365)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 659)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 509)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 738)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 372)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 738)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 516)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 739)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 373)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 739)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 517)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 740)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 374)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 740)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 518)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 381)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 525)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 820)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 382)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 820)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 526)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 821)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 383)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 821)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 527)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 900)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 390)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 900)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 534)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 901)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 391)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 901)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 535)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 902)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 392)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 902)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 536)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 981)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 399)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 981)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 543)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 982)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 400)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 982)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 544)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 983)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 401)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 983)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 545)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1062)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 408)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1062)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 552)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1063)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 409)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1063)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 553)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1064)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 410)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1064)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 554)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1143)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 417)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1143)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 561)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1144)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 418)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1144)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 562)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1145)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 419)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1145)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 563)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1224)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 426)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1224)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 570)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1225)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 427)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1225)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 571)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1226)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 428)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1226)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 572)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 666)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 78)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 666)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 222)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 667)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 79)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 667)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 223)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 668)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 80)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 668)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 224)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 747)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 87)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 747)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 231)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 748)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 88)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 748)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 232)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 749)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 89)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 749)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 233)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 828)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 96)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 828)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 240)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 829)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 97)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 829)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 241)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 830)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 98)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 830)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 242)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 909)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 105)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 909)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 249)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 910)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 106)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 910)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 250)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 911)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 107)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 911)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 251)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 990)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 114)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 990)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 258)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 991)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 115)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 991)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 259)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 992)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 116)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 992)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 260)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1071)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 123)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1071)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 267)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1072)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 124)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1072)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 268)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1073)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 125)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1073)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 269)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1152)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 132)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1152)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 276)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1153)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 133)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1153)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 277)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1154)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 134)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1154)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 278)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1233)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 141)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1233)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 285)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1234)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 142)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1234)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 286)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1235)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 143)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1235)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 287)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 666)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 366)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 666)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 510)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 667)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 367)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 667)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 511)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 668)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 368)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 668)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 512)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 747)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 375)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 747)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 519)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 748)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 376)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 748)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 520)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 749)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 377)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 749)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 521)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 828)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 384)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 828)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 528)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 829)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 385)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 829)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 529)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 830)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 386)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 830)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 530)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 909)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 393)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 909)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 537)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 910)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 394)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 910)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 538)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 911)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 395)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 911)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 539)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 990)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 402)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 990)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 546)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 991)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 403)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 991)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 547)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 992)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 404)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 992)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 548)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1071)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 411)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1071)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 555)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1072)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 412)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1072)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 556)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1073)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 413)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1073)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 557)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1152)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 420)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1152)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 564)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1153)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 421)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1153)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 565)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1154)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 422)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1154)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 566)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1233)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 429)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1233)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 573)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1234)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 430)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1234)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 574)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1235)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 431)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1235)] * kernel_shared[(((((int)threadIdx.x) / 49) * 576) + 575)]));
      }
      for (int i1_inner = 0; i1_inner < 4; ++i1_inner) {
        compute[((((((int)blockIdx.x) * 392) + ((((int)threadIdx.x) / 49) * 196)) + (i1_inner * 49)) + (((int)threadIdx.x) % 49))] = max((conv2d_nchw[i1_inner] + bias[(((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) / 49) * 4)) + i1_inner)]), 0.000000e+00f);
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 187-191

A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.

.. GENERATED FROM PYTHON SOURCE LINES 191-213

.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Resume search:
    Get devices for measurement successfully!






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 6 minutes  8.606 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
