
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.

.. GENERATED FROM PYTHON SOURCE LINES 39-48

.. code-block:: default



    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python








.. GENERATED FROM PYTHON SOURCE LINES 54-59

Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.

.. GENERATED FROM PYTHON SOURCE LINES 59-71

.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]









.. GENERATED FROM PYTHON SOURCE LINES 72-75

Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.

.. GENERATED FROM PYTHON SOURCE LINES 75-88

.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)





.. GENERATED FROM PYTHON SOURCE LINES 89-106

Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.

.. GENERATED FROM PYTHON SOURCE LINES 106-116

.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Get devices for measurement successfully!




.. GENERATED FROM PYTHON SOURCE LINES 117-123

Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.

.. GENERATED FROM PYTHON SOURCE LINES 123-132

.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx








.. GENERATED FROM PYTHON SOURCE LINES 133-136

We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.

.. GENERATED FROM PYTHON SOURCE LINES 136-140

.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Lowered TIR:
    @main = primfn(data_1: handle, kernel_1: handle, bias_1: handle, compute_1: handle) -> ()
      attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
      buffers = {data: Buffer(data_2: Pointer(float32), float32, [1, 512, 7, 7], []),
                 kernel: Buffer(kernel_2: Pointer(float32), float32, [512, 512, 3, 3], []),
                 bias: Buffer(bias_2: Pointer(float32), float32, [1, 512, 1, 1], []),
                 compute: Buffer(compute_2: Pointer(float32), float32, [1, 512, 7, 7], [])}
      buffer_map = {data_1: data, kernel_1: kernel, bias_1: bias, compute_1: compute} {
      attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = 224;
      allocate(conv2d_nchw: Pointer(local float32), float32, [8]), storage_scope = local;
      allocate(pad_temp.shared: Pointer(shared float32), float32, [216]), storage_scope = shared;
      allocate(kernel.shared: Pointer(shared float32), float32, [1152]), storage_scope = shared;
      attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14 {
        conv2d_nchw_1: Buffer(conv2d_nchw, float32, [8], [], scope="local", align=32)[0] = 0f32
        conv2d_nchw_1[1] = 0f32
        conv2d_nchw_1[2] = 0f32
        conv2d_nchw_1[3] = 0f32
        conv2d_nchw_1[4] = 0f32
        conv2d_nchw_1[5] = 0f32
        conv2d_nchw_1[6] = 0f32
        conv2d_nchw_1[7] = 0f32
        for (rc.outer.outer: int32, 0, 64) {
          let cse_var_2: int32 = (rc.outer.outer*392)
          let cse_var_1: int32 = (rc.outer.outer*72)
           {
            attr [IterVar(threadIdx.x_1: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14 {
              pad_temp.shared_1: Buffer(pad_temp.shared, float32, [216], [], scope="shared")[(threadIdx.x_1*3)] = @tir.if_then_else((((1 <= floormod(threadIdx.x_1, 9)) && (floormod(threadIdx.x_1, 9) < 8)) && (1 <= floormod(blockIdx.x, 7))), data_3: Buffer(data_2, float32, [25088], [])[((((cse_var_2 + (floordiv(threadIdx.x_1, 9)*49)) + (floormod(threadIdx.x_1, 9)*7)) + floormod(blockIdx.x, 7)) - 8)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*3) + 1)] = @tir.if_then_else(((1 <= floormod(threadIdx.x_1, 9)) && (floormod(threadIdx.x_1, 9) < 8)), data_3[((((cse_var_2 + (floordiv(threadIdx.x_1, 9)*49)) + (floormod(threadIdx.x_1, 9)*7)) + floormod(blockIdx.x, 7)) - 7)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*3) + 2)] = @tir.if_then_else((((1 <= floormod(threadIdx.x_1, 9)) && (floormod(threadIdx.x_1, 9) < 8)) && (floormod(blockIdx.x, 7) < 6)), data_3[((((cse_var_2 + (floordiv(threadIdx.x_1, 9)*49)) + (floormod(threadIdx.x_1, 9)*7)) + floormod(blockIdx.x, 7)) - 6)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14 {
              pad_temp.shared_1[((threadIdx.x_1*3) + 42)] = @tir.if_then_else((((1 <= floormod((threadIdx.x_1 + 5), 9)) && (floormod((threadIdx.x_1 + 5), 9) < 8)) && (1 <= floormod(blockIdx.x, 7))), data_3[((((cse_var_2 + (floordiv((threadIdx.x_1 + 14), 9)*49)) + (floormod((threadIdx.x_1 + 5), 9)*7)) + floormod(blockIdx.x, 7)) - 8)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*3) + 43)] = @tir.if_then_else(((1 <= floormod((threadIdx.x_1 + 5), 9)) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data_3[((((cse_var_2 + (floordiv((threadIdx.x_1 + 14), 9)*49)) + (floormod((threadIdx.x_1 + 5), 9)*7)) + floormod(blockIdx.x, 7)) - 7)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*3) + 44)] = @tir.if_then_else((((1 <= floormod((threadIdx.x_1 + 5), 9)) && (floormod((threadIdx.x_1 + 5), 9) < 8)) && (floormod(blockIdx.x, 7) < 6)), data_3[((((cse_var_2 + (floordiv((threadIdx.x_1 + 14), 9)*49)) + (floormod((threadIdx.x_1 + 5), 9)*7)) + floormod(blockIdx.x, 7)) - 6)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14 {
              pad_temp.shared_1[((threadIdx.x_1*3) + 84)] = @tir.if_then_else((((1 <= floormod((threadIdx.x_1 + 1), 9)) && (floormod((threadIdx.x_1 + 1), 9) < 8)) && (1 <= floormod(blockIdx.x, 7))), data_3[((((cse_var_2 + (floordiv((threadIdx.x_1 + 28), 9)*49)) + (floormod((threadIdx.x_1 + 1), 9)*7)) + floormod(blockIdx.x, 7)) - 8)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*3) + 85)] = @tir.if_then_else(((1 <= floormod((threadIdx.x_1 + 1), 9)) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data_3[((((cse_var_2 + (floordiv((threadIdx.x_1 + 28), 9)*49)) + (floormod((threadIdx.x_1 + 1), 9)*7)) + floormod(blockIdx.x, 7)) - 7)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*3) + 86)] = @tir.if_then_else((((1 <= floormod((threadIdx.x_1 + 1), 9)) && (floormod((threadIdx.x_1 + 1), 9) < 8)) && (floormod(blockIdx.x, 7) < 6)), data_3[((((cse_var_2 + (floordiv((threadIdx.x_1 + 28), 9)*49)) + (floormod((threadIdx.x_1 + 1), 9)*7)) + floormod(blockIdx.x, 7)) - 6)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14 {
              pad_temp.shared_1[((threadIdx.x_1*3) + 126)] = @tir.if_then_else((((1 <= floormod((threadIdx.x_1 + 6), 9)) && (floormod((threadIdx.x_1 + 6), 9) < 8)) && (1 <= floormod(blockIdx.x, 7))), data_3[((((cse_var_2 + (floordiv((threadIdx.x_1 + 42), 9)*49)) + (floormod((threadIdx.x_1 + 6), 9)*7)) + floormod(blockIdx.x, 7)) - 8)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*3) + 127)] = @tir.if_then_else(((1 <= floormod((threadIdx.x_1 + 6), 9)) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data_3[((((cse_var_2 + (floordiv((threadIdx.x_1 + 42), 9)*49)) + (floormod((threadIdx.x_1 + 6), 9)*7)) + floormod(blockIdx.x, 7)) - 7)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*3) + 128)] = @tir.if_then_else((((1 <= floormod((threadIdx.x_1 + 6), 9)) && (floormod((threadIdx.x_1 + 6), 9) < 8)) && (floormod(blockIdx.x, 7) < 6)), data_3[((((cse_var_2 + (floordiv((threadIdx.x_1 + 42), 9)*49)) + (floormod((threadIdx.x_1 + 6), 9)*7)) + floormod(blockIdx.x, 7)) - 6)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14 {
              pad_temp.shared_1[((threadIdx.x_1*3) + 168)] = @tir.if_then_else((((1 <= floormod((threadIdx.x_1 + 2), 9)) && (floormod((threadIdx.x_1 + 2), 9) < 8)) && (1 <= floormod(blockIdx.x, 7))), data_3[((((cse_var_2 + (floordiv((threadIdx.x_1 + 56), 9)*49)) + (floormod((threadIdx.x_1 + 2), 9)*7)) + floormod(blockIdx.x, 7)) - 8)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*3) + 169)] = @tir.if_then_else(((1 <= floormod((threadIdx.x_1 + 2), 9)) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data_3[((((cse_var_2 + (floordiv((threadIdx.x_1 + 56), 9)*49)) + (floormod((threadIdx.x_1 + 2), 9)*7)) + floormod(blockIdx.x, 7)) - 7)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*3) + 170)] = @tir.if_then_else((((1 <= floormod((threadIdx.x_1 + 2), 9)) && (floormod((threadIdx.x_1 + 2), 9) < 8)) && (floormod(blockIdx.x, 7) < 6)), data_3[((((cse_var_2 + (floordiv((threadIdx.x_1 + 56), 9)*49)) + (floormod((threadIdx.x_1 + 2), 9)*7)) + floormod(blockIdx.x, 7)) - 6)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            if @tir.likely((threadIdx.x_1 < 2), dtype=bool) {
              pad_temp.shared_1[((threadIdx.x_1*3) + 210)] = @tir.if_then_else(((threadIdx.x_1 < 1) && (1 <= floormod(blockIdx.x, 7))), data_3[((((cse_var_2 + (floordiv((threadIdx.x_1 + 70), 9)*49)) + ((threadIdx.x_1 + 7)*7)) + floormod(blockIdx.x, 7)) - 8)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*3) + 211)] = @tir.if_then_else((threadIdx.x_1 < 1), data_3[((((cse_var_2 + (floordiv((threadIdx.x_1 + 70), 9)*49)) + ((threadIdx.x_1 + 7)*7)) + floormod(blockIdx.x, 7)) - 7)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*3) + 212)] = @tir.if_then_else(((threadIdx.x_1 < 1) && (floormod(blockIdx.x, 7) < 6)), data_3[((((cse_var_2 + (floordiv((threadIdx.x_1 + 70), 9)*49)) + ((threadIdx.x_1 + 7)*7)) + floormod(blockIdx.x, 7)) - 6)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_2: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1: Buffer(kernel.shared, float32, [1152], [], scope="shared")[threadIdx.x_2] = kernel_3: Buffer(kernel_2, float32, [2359296], [])[(((floordiv(blockIdx.x, 7)*73728) + cse_var_1) + threadIdx.x_2)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 14)] = kernel_3[((((floordiv(blockIdx.x, 7)*73728) + cse_var_1) + (floordiv((threadIdx.x_2 + 14), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 28)] = kernel_3[((((floordiv(blockIdx.x, 7)*73728) + cse_var_1) + (floordiv((threadIdx.x_2 + 28), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 42)] = kernel_3[((((floordiv(blockIdx.x, 7)*73728) + cse_var_1) + threadIdx.x_2) + 42)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 56)] = kernel_3[((((floordiv(blockIdx.x, 7)*73728) + cse_var_1) + (floordiv((threadIdx.x_2 + 56), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 70)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 70), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 70), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 84)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 84), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 4)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 98)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 98), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 26), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 112)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 112), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 40), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 126)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 126), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 18)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 140)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 140), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 68), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 154)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 154), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 10), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 168)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 168), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 8)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 182)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 182), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 38), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 196)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 196), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 52), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 210)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 210), 72)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 22), 24)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 224)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 224), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 238)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 238), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 22), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 252)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 252), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 12)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 266)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 266), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 50), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 280)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 280), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 294)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 294), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 2)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 308)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 308), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 20), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 322)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 322), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 34), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 336)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 336), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 16)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 350)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 350), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 62), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 364)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 364), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 4), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 378)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 378), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 6)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 392)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 392), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 406)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 406), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 46), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 420)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 420), 72)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 20), 24)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 434)] = kernel_3[((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 434), 72)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 72))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 448)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 448), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 462)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 462), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 10)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 476)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 476), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 44), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 490)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 490), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 58), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 504)] = kernel_3[((((floordiv(blockIdx.x, 7)*73728) + cse_var_1) + threadIdx.x_2) + 32256)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 518)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 518), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 14), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 532)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 532), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 28), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 546)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 546), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 14)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 560)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 560), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 56), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 574)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 574), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 70), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 588)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 588), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 4)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 602)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 602), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 26), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 616)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 616), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 40), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 630)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 630), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 18)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 644)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 644), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 68), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 658)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 658), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 10), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 672)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 672), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 8)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 686)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 686), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 38), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 700)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 700), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 52), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 714)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 714), 72)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 22), 24)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 728)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 728), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 742)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 742), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 22), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 756)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 756), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 12)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 770)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 770), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 50), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 784)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 784), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 798)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 798), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 2)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 812)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 812), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 20), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 826)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 826), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 34), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 840)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 840), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 16)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 854)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 854), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 62), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 868)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 868), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 4), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 882)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 882), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 6)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 896)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 896), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 910)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 910), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 46), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 924)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 924), 72)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 20), 24)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 938)] = kernel_3[((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 938), 72)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 72))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 952)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 952), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 966)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 966), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 10)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 980)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 980), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 44), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 994)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 994), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 58), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 1008)] = kernel_3[((((floordiv(blockIdx.x, 7)*73728) + cse_var_1) + threadIdx.x_2) + 64512)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 1022)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 1022), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 14), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 1036)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 1036), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 28), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 1050)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 1050), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 14)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 1064)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 1064), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 56), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 1078)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 1078), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 70), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 1092)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 1092), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 4)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 1106)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 1106), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 26), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 1120)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 1120), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 40), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 1134)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 1134), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 18)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            if @tir.likely((threadIdx.x_2 < 4), dtype=bool) {
              kernel.shared_1[(threadIdx.x_2 + 1148)] = kernel_3[(((((floordiv(blockIdx.x, 7)*73728) + (floordiv((threadIdx.x_2 + 1148), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 68), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            }
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7)*3)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*576)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 1)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 2)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 3)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 4)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 5)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 6)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 7)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 8)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 8)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 27)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 9)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 10)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 29)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 11)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 30)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 12)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 31)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 13)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 32)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 14)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 33)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 15)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 34)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 16)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 17)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 54)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 18)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 55)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 19)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 20)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 57)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 21)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 58)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 22)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 59)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 23)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 60)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 24)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 61)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 25)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 62)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 26)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 27)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 28)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 29)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 30)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 31)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 32)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 33)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 88)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 34)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 89)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 35)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7)*3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 72)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 73)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 74)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 75)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 76)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 77)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 78)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 79)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 8)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 80)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 27)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 81)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 82)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 29)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 83)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 30)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 84)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 31)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 85)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 32)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 86)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 33)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 87)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 34)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 88)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 89)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 54)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 90)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 55)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 91)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 92)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 57)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 93)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 58)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 94)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 59)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 95)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 60)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 96)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 61)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 97)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 62)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 98)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 99)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 100)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 101)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 102)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 103)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 104)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 105)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 88)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 106)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 89)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 107)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7)*3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 144)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 145)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 146)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 147)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 148)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 149)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 150)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 151)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 8)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 152)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 27)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 153)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 154)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 29)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 155)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 30)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 156)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 31)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 157)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 32)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 158)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 33)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 159)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 34)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 160)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 161)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 54)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 162)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 55)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 163)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 164)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 57)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 165)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 58)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 166)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 59)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 167)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 60)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 168)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 61)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 169)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 62)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 170)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 171)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 172)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 173)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 174)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 175)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 176)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 177)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 88)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 178)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 89)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 179)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7)*3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 216)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 217)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 218)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 219)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 220)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 221)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 222)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 223)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 8)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 224)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 27)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 225)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 226)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 29)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 227)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 30)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 228)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 31)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 229)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 32)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 230)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 33)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 231)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 34)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 232)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 233)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 54)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 234)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 55)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 235)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 236)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 57)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 237)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 58)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 238)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 59)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 239)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 60)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 240)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 61)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 241)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 62)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 242)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 243)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 244)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 245)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 246)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 247)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 248)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 249)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 88)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 250)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 89)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 251)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7)*3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 288)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 289)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 290)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 291)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 292)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 293)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 294)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 295)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 8)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 296)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 27)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 297)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 298)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 29)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 299)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 30)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 300)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 31)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 301)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 32)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 302)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 33)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 303)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 34)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 304)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 305)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 54)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 306)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 55)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 307)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 308)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 57)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 309)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 58)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 310)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 59)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 311)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 60)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 312)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 61)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 313)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 62)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 314)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 315)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 316)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 317)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 318)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 319)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 320)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 321)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 88)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 322)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 89)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 323)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7)*3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 360)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 361)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 362)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 363)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 364)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 365)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 366)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 367)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 8)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 368)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 27)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 369)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 370)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 29)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 371)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 30)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 372)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 31)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 373)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 32)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 374)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 33)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 375)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 34)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 376)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 377)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 54)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 378)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 55)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 379)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 380)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 57)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 381)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 58)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 382)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 59)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 383)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 60)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 384)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 61)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 385)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 62)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 386)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 387)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 388)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 389)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 390)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 391)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 392)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 393)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 88)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 394)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 89)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 395)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7)*3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 432)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 433)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 434)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 435)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 436)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 437)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 438)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 439)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 8)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 440)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 27)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 441)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 442)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 29)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 443)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 30)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 444)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 31)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 445)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 32)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 446)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 33)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 447)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 34)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 448)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 449)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 54)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 450)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 55)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 451)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 452)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 57)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 453)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 58)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 454)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 59)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 455)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 60)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 456)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 61)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 457)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 62)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 458)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 459)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 460)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 461)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 462)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 463)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 464)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 465)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 88)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 466)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 89)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 467)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(floormod(threadIdx.x, 7)*3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 504)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 505)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 506)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 507)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 508)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 509)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 510)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 511)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 8)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 512)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 27)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 513)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 514)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 29)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 515)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 30)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 516)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 31)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 517)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 32)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 518)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 33)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 519)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 34)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 520)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 521)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 54)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 522)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 55)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 523)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 524)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 57)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 525)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 58)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 526)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 59)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 527)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 60)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 528)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 61)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 529)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 62)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 530)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 531)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 532)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 533)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 534)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 535)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 536)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 537)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 88)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 538)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 89)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 539)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 108)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 36)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 109)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 37)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 110)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 38)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 111)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 39)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 112)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 40)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 113)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 41)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 114)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 42)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 115)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 43)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 116)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 44)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 135)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 45)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 136)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 46)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 137)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 47)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 138)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 48)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 139)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 49)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 140)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 50)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 141)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 51)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 142)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 52)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 143)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 53)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 162)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 54)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 163)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 55)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 164)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 56)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 165)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 57)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 166)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 58)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 167)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 59)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 168)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 60)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 169)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 61)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 170)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 62)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 189)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 63)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 190)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 64)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 191)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 65)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 192)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 66)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 193)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 67)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 194)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 68)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 195)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 69)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 196)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 70)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 197)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 71)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 108)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 108)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 109)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 109)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 110)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 110)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 111)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 111)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 112)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 112)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 113)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 113)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 114)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 114)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 115)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 115)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 116)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 116)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 135)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 117)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 136)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 118)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 137)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 119)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 138)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 120)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 139)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 121)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 140)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 122)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 141)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 123)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 142)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 124)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 143)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 125)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 162)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 126)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 163)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 127)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 164)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 128)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 165)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 129)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 166)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 130)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 167)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 131)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 168)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 132)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 169)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 133)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 170)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 134)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 189)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 135)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 190)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 136)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 191)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 137)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 192)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 138)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 193)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 139)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 194)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 140)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 195)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 141)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 196)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 142)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 197)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 143)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 108)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 180)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 109)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 181)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 110)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 182)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 111)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 183)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 112)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 184)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 113)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 185)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 114)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 186)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 115)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 187)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 116)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 188)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 135)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 189)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 136)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 190)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 137)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 191)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 138)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 192)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 139)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 193)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 140)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 194)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 141)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 195)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 142)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 196)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 143)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 197)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 162)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 198)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 163)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 199)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 164)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 200)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 165)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 201)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 166)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 202)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 167)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 203)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 168)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 204)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 169)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 205)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 170)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 206)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 189)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 207)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 190)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 208)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 191)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 209)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 192)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 210)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 193)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 211)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 194)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 212)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 195)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 213)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 196)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 214)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 197)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 215)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 108)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 252)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 109)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 253)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 110)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 254)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 111)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 255)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 112)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 256)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 113)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 257)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 114)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 258)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 115)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 259)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 116)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 260)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 135)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 261)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 136)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 262)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 137)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 263)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 138)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 264)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 139)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 265)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 140)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 266)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 141)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 267)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 142)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 268)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 143)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 269)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 162)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 270)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 163)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 271)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 164)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 272)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 165)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 273)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 166)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 274)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 167)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 275)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 168)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 276)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 169)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 277)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 170)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 278)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 189)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 279)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 190)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 280)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 191)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 281)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 192)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 282)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 193)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 283)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 194)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 284)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 195)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 285)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 196)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 286)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 197)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 287)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 108)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 324)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 109)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 325)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 110)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 326)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 111)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 327)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 112)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 328)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 113)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 329)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 114)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 330)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 115)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 331)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 116)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 332)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 135)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 333)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 136)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 334)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 137)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 335)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 138)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 336)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 139)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 337)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 140)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 338)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 141)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 339)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 142)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 340)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 143)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 341)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 162)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 342)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 163)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 343)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 164)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 344)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 165)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 345)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 166)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 346)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 167)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 347)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 168)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 348)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 169)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 349)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 170)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 350)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 189)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 351)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 190)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 352)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 191)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 353)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 192)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 354)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 193)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 355)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 194)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 356)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 195)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 357)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 196)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 358)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 197)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 359)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 108)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 396)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 109)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 397)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 110)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 398)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 111)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 399)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 112)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 400)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 113)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 401)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 114)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 402)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 115)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 403)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 116)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 404)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 135)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 405)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 136)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 406)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 137)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 407)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 138)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 408)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 139)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 409)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 140)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 410)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 141)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 411)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 142)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 412)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 143)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 413)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 162)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 414)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 163)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 415)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 164)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 416)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 165)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 417)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 166)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 418)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 167)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 419)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 168)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 420)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 169)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 421)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 170)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 422)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 189)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 423)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 190)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 424)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 191)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 425)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 192)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 426)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 193)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 427)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 194)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 428)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 195)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 429)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 196)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 430)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 197)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 431)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 108)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 468)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 109)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 469)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 110)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 470)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 111)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 471)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 112)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 472)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 113)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 473)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 114)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 474)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 115)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 475)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 116)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 476)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 135)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 477)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 136)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 478)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 137)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 479)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 138)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 480)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 139)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 481)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 140)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 482)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 141)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 483)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 142)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 484)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 143)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 485)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 162)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 486)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 163)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 487)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 164)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 488)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 165)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 489)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 166)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 490)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 167)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 491)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 168)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 492)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 169)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 493)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 170)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 494)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 189)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 495)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 190)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 496)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 191)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 497)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 192)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 498)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 193)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 499)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 194)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 500)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 195)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 501)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 196)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 502)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 197)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 503)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 108)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 540)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 109)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 541)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 110)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 542)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 111)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 543)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 112)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 544)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 113)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 545)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 114)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 546)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 115)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 547)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 116)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 548)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 135)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 549)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 136)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 550)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 137)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 551)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 138)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 552)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 139)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 553)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 140)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 554)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 141)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 555)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 142)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 556)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 143)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 557)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 162)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 558)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 163)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 559)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 164)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 560)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 165)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 561)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 166)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 562)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 167)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 563)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 168)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 564)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 169)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 565)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 170)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 566)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 189)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 567)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 190)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 568)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 191)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 569)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 192)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 570)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 193)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 571)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 194)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 572)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 195)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 573)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 196)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 574)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 197)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*576) + 575)]))
          }
        }
        for (i1.inner: int32, 0, 8) {
          compute_3: Buffer(compute_2, float32, [25088], [])[(((((floordiv(blockIdx.x, 7)*784) + (floordiv(threadIdx.x, 7)*392)) + (i1.inner*49)) + (floormod(threadIdx.x, 7)*7)) + floormod(blockIdx.x, 7))] = max((conv2d_nchw_1[i1.inner] + bias_3: Buffer(bias_2, float32, [512], [])[(((floordiv(blockIdx.x, 7)*16) + (floordiv(threadIdx.x, 7)*8)) + i1.inner)]), 0f32)
        }
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 141-144

Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.

.. GENERATED FROM PYTHON SOURCE LINES 144-171

.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Execution time of this operator: 0.434 ms




.. GENERATED FROM PYTHON SOURCE LINES 172-177

Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

.. GENERATED FROM PYTHON SOURCE LINES 179-182

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.

.. GENERATED FROM PYTHON SOURCE LINES 182-189

.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=1)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=8)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=2)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=1)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=7)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=4)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=2)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=3)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=1)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=3)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=1)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=8)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=2)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=1)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=7)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=1)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=14)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=3)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=14)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 1024)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(14) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[8];
      __shared__ float pad_temp_shared[216];
      __shared__ float kernel_shared[1152];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      conv2d_nchw[7] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 64; ++rc_outer_outer) {
        __syncthreads();
        pad_temp_shared[(((int)threadIdx.x) * 3)] = ((((1 <= (((int)threadIdx.x) % 9)) && ((((int)threadIdx.x) % 9) < 8)) && (1 <= (((int)blockIdx.x) % 7))) ? data[(((((rc_outer_outer * 392) + ((((int)threadIdx.x) / 9) * 49)) + ((((int)threadIdx.x) % 9) * 7)) + (((int)blockIdx.x) % 7)) - 8)] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) * 3) + 1)] = (((1 <= (((int)threadIdx.x) % 9)) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 392) + ((((int)threadIdx.x) / 9) * 49)) + ((((int)threadIdx.x) % 9) * 7)) + (((int)blockIdx.x) % 7)) - 7)] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) * 3) + 2)] = ((((1 <= (((int)threadIdx.x) % 9)) && ((((int)threadIdx.x) % 9) < 8)) && ((((int)blockIdx.x) % 7) < 6)) ? data[(((((rc_outer_outer * 392) + ((((int)threadIdx.x) / 9) * 49)) + ((((int)threadIdx.x) % 9) * 7)) + (((int)blockIdx.x) % 7)) - 6)] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) * 3) + 42)] = ((((1 <= ((((int)threadIdx.x) + 5) % 9)) && (((((int)threadIdx.x) + 5) % 9) < 8)) && (1 <= (((int)blockIdx.x) % 7))) ? data[(((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 14) / 9) * 49)) + (((((int)threadIdx.x) + 5) % 9) * 7)) + (((int)blockIdx.x) % 7)) - 8)] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) * 3) + 43)] = (((1 <= ((((int)threadIdx.x) + 5) % 9)) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 14) / 9) * 49)) + (((((int)threadIdx.x) + 5) % 9) * 7)) + (((int)blockIdx.x) % 7)) - 7)] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) * 3) + 44)] = ((((1 <= ((((int)threadIdx.x) + 5) % 9)) && (((((int)threadIdx.x) + 5) % 9) < 8)) && ((((int)blockIdx.x) % 7) < 6)) ? data[(((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 14) / 9) * 49)) + (((((int)threadIdx.x) + 5) % 9) * 7)) + (((int)blockIdx.x) % 7)) - 6)] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) * 3) + 84)] = ((((1 <= ((((int)threadIdx.x) + 1) % 9)) && (((((int)threadIdx.x) + 1) % 9) < 8)) && (1 <= (((int)blockIdx.x) % 7))) ? data[(((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 28) / 9) * 49)) + (((((int)threadIdx.x) + 1) % 9) * 7)) + (((int)blockIdx.x) % 7)) - 8)] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) * 3) + 85)] = (((1 <= ((((int)threadIdx.x) + 1) % 9)) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 28) / 9) * 49)) + (((((int)threadIdx.x) + 1) % 9) * 7)) + (((int)blockIdx.x) % 7)) - 7)] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) * 3) + 86)] = ((((1 <= ((((int)threadIdx.x) + 1) % 9)) && (((((int)threadIdx.x) + 1) % 9) < 8)) && ((((int)blockIdx.x) % 7) < 6)) ? data[(((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 28) / 9) * 49)) + (((((int)threadIdx.x) + 1) % 9) * 7)) + (((int)blockIdx.x) % 7)) - 6)] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) * 3) + 126)] = ((((1 <= ((((int)threadIdx.x) + 6) % 9)) && (((((int)threadIdx.x) + 6) % 9) < 8)) && (1 <= (((int)blockIdx.x) % 7))) ? data[(((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 42) / 9) * 49)) + (((((int)threadIdx.x) + 6) % 9) * 7)) + (((int)blockIdx.x) % 7)) - 8)] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) * 3) + 127)] = (((1 <= ((((int)threadIdx.x) + 6) % 9)) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 42) / 9) * 49)) + (((((int)threadIdx.x) + 6) % 9) * 7)) + (((int)blockIdx.x) % 7)) - 7)] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) * 3) + 128)] = ((((1 <= ((((int)threadIdx.x) + 6) % 9)) && (((((int)threadIdx.x) + 6) % 9) < 8)) && ((((int)blockIdx.x) % 7) < 6)) ? data[(((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 42) / 9) * 49)) + (((((int)threadIdx.x) + 6) % 9) * 7)) + (((int)blockIdx.x) % 7)) - 6)] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) * 3) + 168)] = ((((1 <= ((((int)threadIdx.x) + 2) % 9)) && (((((int)threadIdx.x) + 2) % 9) < 8)) && (1 <= (((int)blockIdx.x) % 7))) ? data[(((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 56) / 9) * 49)) + (((((int)threadIdx.x) + 2) % 9) * 7)) + (((int)blockIdx.x) % 7)) - 8)] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) * 3) + 169)] = (((1 <= ((((int)threadIdx.x) + 2) % 9)) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 56) / 9) * 49)) + (((((int)threadIdx.x) + 2) % 9) * 7)) + (((int)blockIdx.x) % 7)) - 7)] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) * 3) + 170)] = ((((1 <= ((((int)threadIdx.x) + 2) % 9)) && (((((int)threadIdx.x) + 2) % 9) < 8)) && ((((int)blockIdx.x) % 7) < 6)) ? data[(((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 56) / 9) * 49)) + (((((int)threadIdx.x) + 2) % 9) * 7)) + (((int)blockIdx.x) % 7)) - 6)] : 0.000000e+00f);
        if (((int)threadIdx.x) < 2) {
          pad_temp_shared[((((int)threadIdx.x) * 3) + 210)] = (((((int)threadIdx.x) < 1) && (1 <= (((int)blockIdx.x) % 7))) ? data[(((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 70) / 9) * 49)) + (((int)threadIdx.x) * 7)) + (((int)blockIdx.x) % 7)) + 41)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 3) + 211)] = ((((int)threadIdx.x) < 1) ? data[(((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 70) / 9) * 49)) + (((int)threadIdx.x) * 7)) + (((int)blockIdx.x) % 7)) + 42)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 3) + 212)] = (((((int)threadIdx.x) < 1) && ((((int)blockIdx.x) % 7) < 6)) ? data[(((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 70) / 9) * 49)) + (((int)threadIdx.x) * 7)) + (((int)blockIdx.x) % 7)) + 43)] : 0.000000e+00f);
        }
        kernel_shared[((int)threadIdx.x)] = kernel[((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x))];
        kernel_shared[(((int)threadIdx.x) + 14)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 14) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 28)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 28) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 42)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 42)];
        kernel_shared[(((int)threadIdx.x) + 56)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 56) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 70)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 70) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 70) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 84)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 84) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 12)];
        kernel_shared[(((int)threadIdx.x) + 98)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 98) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 26) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 112)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 112) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 126)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 126) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 54)];
        kernel_shared[(((int)threadIdx.x) + 140)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 140) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 68) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 154)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 154) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 10) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 168)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 168) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 24)];
        kernel_shared[(((int)threadIdx.x) + 182)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 182) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 38) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 196)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 196) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 52) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 210)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 210) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) / 3) + 22) % 24) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 224)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 224) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 238)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 238) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 22) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 252)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 252) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 36)];
        kernel_shared[(((int)threadIdx.x) + 266)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 266) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 50) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 280)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 280) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 64) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 294)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 294) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 6)];
        kernel_shared[(((int)threadIdx.x) + 308)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 308) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 20) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 322)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 322) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 34) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 336)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 336) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 350)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 350) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 62) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 364)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 364) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 4) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 378)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 378) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 18)];
        kernel_shared[(((int)threadIdx.x) + 392)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 392) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 406)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 406) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 46) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 420)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 420) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) / 3) + 20) % 24) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 434)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 434) / 72) * 4608)) + (rc_outer_outer * 72)) + (((int)threadIdx.x) + 2))];
        kernel_shared[(((int)threadIdx.x) + 448)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 448) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 462)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 462) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 30)];
        kernel_shared[(((int)threadIdx.x) + 476)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 476) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 44) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 490)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 490) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 58) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 504)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 32256)];
        kernel_shared[(((int)threadIdx.x) + 518)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 518) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 14) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 532)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 532) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 28) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 546)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 546) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 42)];
        kernel_shared[(((int)threadIdx.x) + 560)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 560) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 56) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 574)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 574) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 70) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 588)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 588) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 12)];
        kernel_shared[(((int)threadIdx.x) + 602)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 602) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 26) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 616)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 616) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 630)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 630) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 54)];
        kernel_shared[(((int)threadIdx.x) + 644)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 644) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 68) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 658)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 658) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 10) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 672)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 672) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 24)];
        kernel_shared[(((int)threadIdx.x) + 686)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 686) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 38) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 700)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 700) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 52) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 714)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 714) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) / 3) + 22) % 24) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 728)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 728) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 742)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 742) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 22) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 756)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 756) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 36)];
        kernel_shared[(((int)threadIdx.x) + 770)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 770) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 50) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 784)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 784) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 64) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 798)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 798) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 6)];
        kernel_shared[(((int)threadIdx.x) + 812)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 812) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 20) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 826)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 826) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 34) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 840)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 840) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 854)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 854) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 62) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 868)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 868) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 4) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 882)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 882) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 18)];
        kernel_shared[(((int)threadIdx.x) + 896)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 896) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 910)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 910) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 46) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 924)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 924) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) / 3) + 20) % 24) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 938)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 938) / 72) * 4608)) + (rc_outer_outer * 72)) + (((int)threadIdx.x) + 2))];
        kernel_shared[(((int)threadIdx.x) + 952)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 952) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 966)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 966) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 30)];
        kernel_shared[(((int)threadIdx.x) + 980)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 980) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 44) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 994)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 994) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 58) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1008)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 64512)];
        kernel_shared[(((int)threadIdx.x) + 1022)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 1022) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 14) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1036)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 1036) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 28) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1050)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 1050) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 42)];
        kernel_shared[(((int)threadIdx.x) + 1064)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 1064) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 56) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1078)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 1078) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 70) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1092)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 1092) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 12)];
        kernel_shared[(((int)threadIdx.x) + 1106)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 1106) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 26) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1120)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 1120) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1134)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 1134) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 54)];
        if (((int)threadIdx.x) < 4) {
          kernel_shared[(((int)threadIdx.x) + 1148)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (((((int)threadIdx.x) + 1148) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 68) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        }
        __syncthreads();
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[((((int)threadIdx.x) / 7) * 576)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 1)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 2)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 3)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 4)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 5)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 6)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 7)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 8)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 8)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 27)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 9)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 10)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 29)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 11)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 30)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 12)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 31)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 13)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 32)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 14)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 33)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 15)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 34)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 16)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 17)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 54)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 18)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 55)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 19)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 20)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 57)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 21)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 58)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 22)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 59)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 23)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 60)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 24)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 61)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 25)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 62)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 26)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 81)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 27)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 28)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 29)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 30)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 31)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 32)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 33)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 88)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 34)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 89)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 35)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 72)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 73)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 74)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 75)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 76)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 77)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 78)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 79)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 8)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 80)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 27)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 81)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 82)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 29)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 83)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 30)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 84)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 31)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 85)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 32)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 86)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 33)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 87)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 34)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 88)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 89)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 54)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 90)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 55)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 91)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 92)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 57)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 93)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 58)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 94)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 59)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 95)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 60)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 96)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 61)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 97)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 62)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 98)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 81)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 99)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 100)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 101)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 102)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 103)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 104)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 105)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 88)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 106)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 89)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 107)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 144)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 145)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 146)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 147)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 148)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 149)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 150)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 151)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 8)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 152)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 27)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 153)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 154)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 29)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 155)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 30)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 156)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 31)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 157)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 32)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 158)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 33)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 159)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 34)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 160)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 161)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 54)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 162)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 55)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 163)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 164)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 57)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 165)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 58)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 166)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 59)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 167)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 60)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 168)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 61)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 169)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 62)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 170)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 81)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 171)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 172)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 173)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 174)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 175)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 176)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 177)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 88)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 178)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 89)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 179)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 216)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 217)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 218)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 219)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 220)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 221)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 222)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 223)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 8)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 224)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 27)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 225)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 226)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 29)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 227)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 30)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 228)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 31)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 229)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 32)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 230)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 33)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 231)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 34)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 232)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 233)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 54)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 234)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 55)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 235)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 236)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 57)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 237)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 58)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 238)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 59)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 239)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 60)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 240)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 61)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 241)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 62)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 242)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 81)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 243)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 244)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 245)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 246)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 247)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 248)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 249)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 88)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 250)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 89)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 251)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 288)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 289)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 290)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 291)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 292)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 293)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 294)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 295)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 8)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 296)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 27)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 297)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 298)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 29)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 299)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 30)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 300)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 31)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 301)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 32)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 302)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 33)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 303)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 34)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 304)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 305)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 54)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 306)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 55)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 307)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 308)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 57)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 309)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 58)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 310)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 59)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 311)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 60)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 312)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 61)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 313)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 62)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 314)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 81)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 315)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 316)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 317)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 318)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 319)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 320)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 321)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 88)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 322)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 89)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 323)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 360)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 361)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 362)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 363)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 364)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 365)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 366)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 367)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 8)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 368)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 27)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 369)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 370)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 29)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 371)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 30)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 372)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 31)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 373)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 32)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 374)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 33)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 375)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 34)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 376)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 377)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 54)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 378)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 55)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 379)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 380)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 57)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 381)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 58)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 382)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 59)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 383)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 60)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 384)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 61)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 385)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 62)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 386)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 81)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 387)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 388)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 389)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 390)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 391)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 392)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 393)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 88)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 394)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 89)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 395)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 432)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 433)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 434)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 435)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 436)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 437)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 438)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 439)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 8)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 440)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 27)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 441)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 442)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 29)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 443)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 30)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 444)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 31)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 445)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 32)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 446)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 33)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 447)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 34)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 448)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 449)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 54)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 450)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 55)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 451)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 452)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 57)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 453)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 58)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 454)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 59)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 455)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 60)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 456)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 61)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 457)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 62)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 458)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 81)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 459)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 460)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 461)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 462)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 463)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 464)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 465)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 88)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 466)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 89)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 467)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 504)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 505)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 506)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 507)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 508)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 509)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 510)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 511)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 8)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 512)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 27)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 513)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 514)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 29)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 515)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 30)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 516)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 31)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 517)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 32)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 518)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 33)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 519)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 34)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 520)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 521)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 54)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 522)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 55)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 523)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 524)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 57)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 525)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 58)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 526)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 59)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 527)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 60)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 528)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 61)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 529)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 62)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 530)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 81)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 531)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 532)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 533)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 534)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 535)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 536)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 537)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 88)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 538)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 89)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 539)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 108)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 36)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 109)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 37)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 110)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 38)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 111)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 39)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 112)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 40)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 113)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 41)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 114)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 42)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 115)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 43)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 116)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 44)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 135)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 45)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 136)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 46)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 137)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 47)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 138)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 48)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 139)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 49)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 50)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 141)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 51)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 142)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 52)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 143)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 53)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 162)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 54)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 163)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 55)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 164)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 56)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 165)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 57)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 166)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 58)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 167)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 59)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 60)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 169)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 61)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 170)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 62)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 63)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 190)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 64)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 191)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 65)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 192)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 66)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 193)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 67)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 194)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 68)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 195)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 69)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 196)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 70)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 197)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 71)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 108)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 108)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 109)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 109)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 110)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 110)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 111)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 111)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 112)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 112)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 113)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 113)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 114)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 114)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 115)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 115)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 116)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 116)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 135)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 117)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 136)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 118)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 137)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 119)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 138)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 120)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 139)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 121)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 122)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 141)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 123)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 142)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 124)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 143)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 125)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 162)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 126)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 163)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 127)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 164)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 128)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 165)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 129)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 166)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 130)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 167)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 131)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 132)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 169)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 133)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 170)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 134)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 135)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 190)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 136)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 191)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 137)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 192)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 138)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 193)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 139)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 194)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 140)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 195)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 141)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 196)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 142)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 197)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 143)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 108)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 180)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 109)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 181)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 110)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 182)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 111)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 183)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 112)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 184)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 113)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 185)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 114)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 186)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 115)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 187)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 116)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 188)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 135)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 189)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 136)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 190)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 137)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 191)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 138)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 192)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 139)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 193)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 194)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 141)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 195)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 142)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 196)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 143)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 197)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 162)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 198)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 163)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 199)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 164)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 200)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 165)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 201)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 166)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 202)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 167)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 203)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 204)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 169)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 205)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 170)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 206)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 207)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 190)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 208)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 191)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 209)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 192)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 210)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 193)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 211)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 194)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 212)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 195)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 213)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 196)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 214)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 197)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 215)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 108)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 252)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 109)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 253)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 110)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 254)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 111)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 255)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 112)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 256)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 113)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 257)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 114)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 258)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 115)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 259)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 116)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 260)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 135)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 261)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 136)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 262)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 137)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 263)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 138)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 264)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 139)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 265)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 266)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 141)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 267)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 142)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 268)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 143)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 269)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 162)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 270)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 163)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 271)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 164)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 272)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 165)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 273)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 166)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 274)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 167)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 275)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 276)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 169)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 277)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 170)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 278)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 279)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 190)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 280)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 191)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 281)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 192)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 282)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 193)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 283)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 194)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 284)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 195)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 285)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 196)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 286)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 197)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 287)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 108)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 324)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 109)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 325)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 110)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 326)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 111)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 327)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 112)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 328)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 113)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 329)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 114)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 330)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 115)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 331)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 116)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 332)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 135)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 333)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 136)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 334)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 137)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 335)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 138)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 336)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 139)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 337)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 338)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 141)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 339)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 142)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 340)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 143)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 341)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 162)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 342)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 163)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 343)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 164)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 344)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 165)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 345)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 166)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 346)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 167)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 347)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 348)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 169)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 349)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 170)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 350)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 351)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 190)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 352)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 191)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 353)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 192)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 354)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 193)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 355)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 194)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 356)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 195)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 357)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 196)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 358)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 197)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 359)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 108)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 396)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 109)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 397)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 110)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 398)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 111)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 399)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 112)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 400)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 113)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 401)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 114)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 402)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 115)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 403)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 116)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 404)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 135)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 405)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 136)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 406)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 137)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 407)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 138)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 408)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 139)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 409)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 410)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 141)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 411)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 142)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 412)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 143)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 413)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 162)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 414)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 163)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 415)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 164)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 416)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 165)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 417)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 166)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 418)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 167)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 419)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 420)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 169)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 421)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 170)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 422)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 423)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 190)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 424)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 191)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 425)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 192)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 426)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 193)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 427)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 194)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 428)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 195)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 429)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 196)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 430)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 197)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 431)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 108)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 468)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 109)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 469)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 110)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 470)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 111)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 471)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 112)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 472)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 113)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 473)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 114)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 474)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 115)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 475)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 116)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 476)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 135)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 477)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 136)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 478)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 137)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 479)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 138)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 480)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 139)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 481)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 482)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 141)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 483)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 142)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 484)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 143)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 485)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 162)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 486)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 163)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 487)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 164)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 488)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 165)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 489)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 166)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 490)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 167)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 491)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 492)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 169)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 493)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 170)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 494)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 495)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 190)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 496)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 191)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 497)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 192)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 498)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 193)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 499)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 194)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 500)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 195)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 501)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 196)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 502)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 197)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 503)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 108)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 540)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 109)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 541)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 110)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 542)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 111)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 543)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 112)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 544)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 113)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 545)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 114)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 546)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 115)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 547)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 116)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 548)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 135)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 549)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 136)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 550)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 137)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 551)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 138)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 552)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 139)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 553)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 554)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 141)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 555)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 142)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 556)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 143)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 557)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 162)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 558)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 163)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 559)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 164)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 560)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 165)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 561)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 166)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 562)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 167)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 563)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 564)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 169)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 565)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 170)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 566)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 567)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 190)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 568)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 191)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 569)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 192)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 570)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 193)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 571)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 194)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 572)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 195)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 573)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 196)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 574)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 197)] * kernel_shared[(((((int)threadIdx.x) / 7) * 576) + 575)]));
      }
      for (int i1_inner = 0; i1_inner < 8; ++i1_inner) {
        compute[((((((((int)blockIdx.x) / 7) * 784) + ((((int)threadIdx.x) / 7) * 392)) + (i1_inner * 49)) + ((((int)threadIdx.x) % 7) * 7)) + (((int)blockIdx.x) % 7))] = max((conv2d_nchw[i1_inner] + bias[((((((int)blockIdx.x) / 7) * 16) + ((((int)threadIdx.x) / 7) * 8)) + i1_inner)]), 0.000000e+00f);
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 190-194

A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.

.. GENERATED FROM PYTHON SOURCE LINES 194-216

.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Resume search:
    /venv/apache-tvm-py3.7/lib/python3.7/site-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 5 minutes  43.618 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
