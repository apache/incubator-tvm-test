
.. DO NOT EDIT. THIS FILE WAS AUTOMATICALLY GENERATED BY
.. TVM'S MONKEY-PATCHED VERSION OF SPHINX-GALLERY. TO MAKE
.. CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.py"

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        This tutorial can be used interactively with Google Colab! You can also click
        :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>` to run the Jupyter notebook locally.

        .. image:: https://raw.githubusercontent.com/tlc-pack/web-data/main/images/utilities/colab_button.svg
            :align: center
            :target: https://colab.research.google.com/github/apache/tvm-site/blob/asf-site/docs/_downloads/5f1f7bd7d90710fd404f7bcdc4965622/tune_conv2d_layer_cuda.ipynb
            :width: 300px

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.

.. GENERATED FROM PYTHON SOURCE LINES 39-47

.. code-block:: default


    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python








.. GENERATED FROM PYTHON SOURCE LINES 51-56

Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.

.. GENERATED FROM PYTHON SOURCE LINES 56-68

.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]









.. GENERATED FROM PYTHON SOURCE LINES 69-72

Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.

.. GENERATED FROM PYTHON SOURCE LINES 72-85

.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)





.. GENERATED FROM PYTHON SOURCE LINES 86-103

Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.

.. GENERATED FROM PYTHON SOURCE LINES 103-113

.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Get devices for measurement successfully!




.. GENERATED FROM PYTHON SOURCE LINES 114-120

Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.

.. GENERATED FROM PYTHON SOURCE LINES 120-129

.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx








.. GENERATED FROM PYTHON SOURCE LINES 130-133

We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.

.. GENERATED FROM PYTHON SOURCE LINES 133-137

.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Lowered TIR:
    # from tvm.script import ir as I
    # from tvm.script import tir as T

    @I.ir_module
    class Module:
        @T.prim_func
        def main(data: T.Buffer((1, 512, 7, 7), "float32"), kernel: T.Buffer((512, 512, 3, 3), "float32"), bias: T.Buffer((1, 512, 1, 1), "float32"), compute: T.Buffer((1, 512, 7, 7), "float32")):
            T.func_attr({"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True})
            blockIdx_x = T.env_thread("blockIdx.x")
            T.launch_thread(blockIdx_x, 32)
            conv2d_nchw = T.allocate([16], "float32", "local")
            pad_temp_shared = T.allocate([4032], "float32", "shared")
            kernel_shared = T.allocate([3072], "float32", "shared")
            threadIdx_x = T.env_thread("threadIdx.x")
            T.launch_thread(threadIdx_x, 49)
            conv2d_nchw_1 = T.Buffer((16,), data=conv2d_nchw, scope="local")
            conv2d_nchw_1[0] = T.float32(0)
            conv2d_nchw_1[1] = T.float32(0)
            conv2d_nchw_1[2] = T.float32(0)
            conv2d_nchw_1[3] = T.float32(0)
            conv2d_nchw_1[4] = T.float32(0)
            conv2d_nchw_1[5] = T.float32(0)
            conv2d_nchw_1[6] = T.float32(0)
            conv2d_nchw_1[7] = T.float32(0)
            conv2d_nchw_1[8] = T.float32(0)
            conv2d_nchw_1[9] = T.float32(0)
            conv2d_nchw_1[10] = T.float32(0)
            conv2d_nchw_1[11] = T.float32(0)
            conv2d_nchw_1[12] = T.float32(0)
            conv2d_nchw_1[13] = T.float32(0)
            conv2d_nchw_1[14] = T.float32(0)
            conv2d_nchw_1[15] = T.float32(0)
            for rc_outer_outer, rx_outer_outer in T.grid(8, 3):
                cse_var_2: T.int32 = rc_outer_outer * 3136
                cse_var_1: T.int32 = rc_outer_outer * 576
                threadIdx_x_1 = T.env_thread("threadIdx.x")
                pad_temp_shared_1 = T.Buffer((4032,), data=pad_temp_shared, scope="shared")
                data_1 = T.Buffer((25088,), data=data.data)
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1] = T.if_then_else(7 <= threadIdx_x_1 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + threadIdx_x_1 + rx_outer_outer - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 49] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 7) % 9 and (threadIdx_x_1 // 7 + 7) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 49) // 63 * 49 + (threadIdx_x_1 // 7 + 7) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 98] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 5) % 9 and (threadIdx_x_1 // 7 + 5) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 98) // 63 * 49 + (threadIdx_x_1 // 7 + 5) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 147] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 3) % 9 and (threadIdx_x_1 // 7 + 3) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 147) // 63 * 49 + (threadIdx_x_1 // 7 + 3) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 196] = T.if_then_else(1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 196) // 63 * 49 + threadIdx_x_1 + rx_outer_outer - 1], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 245] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 8) % 9 and (threadIdx_x_1 // 7 + 8) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 245) // 63 * 49 + (threadIdx_x_1 // 7 + 8) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 294] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 6) % 9 and (threadIdx_x_1 // 7 + 6) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 294) // 63 * 49 + (threadIdx_x_1 // 7 + 6) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 343] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 4) % 9 and (threadIdx_x_1 // 7 + 4) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 343) // 63 * 49 + (threadIdx_x_1 // 7 + 4) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 392] = T.if_then_else(threadIdx_x_1 < 42 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 392) // 63 * 49 + threadIdx_x_1 + rx_outer_outer + 6], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 441] = T.if_then_else(7 <= threadIdx_x_1 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + threadIdx_x_1 + rx_outer_outer + 335], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 490] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 7) % 9 and (threadIdx_x_1 // 7 + 7) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 490) // 63 * 49 + (threadIdx_x_1 // 7 + 7) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 539] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 5) % 9 and (threadIdx_x_1 // 7 + 5) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 539) // 63 * 49 + (threadIdx_x_1 // 7 + 5) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 588] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 3) % 9 and (threadIdx_x_1 // 7 + 3) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 588) // 63 * 49 + (threadIdx_x_1 // 7 + 3) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 637] = T.if_then_else(1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 637) // 63 * 49 + threadIdx_x_1 + rx_outer_outer - 1], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 686] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 8) % 9 and (threadIdx_x_1 // 7 + 8) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 686) // 63 * 49 + (threadIdx_x_1 // 7 + 8) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 735] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 6) % 9 and (threadIdx_x_1 // 7 + 6) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 735) // 63 * 49 + (threadIdx_x_1 // 7 + 6) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 784] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 4) % 9 and (threadIdx_x_1 // 7 + 4) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 784) // 63 * 49 + (threadIdx_x_1 // 7 + 4) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 833] = T.if_then_else(threadIdx_x_1 < 42 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 833) // 63 * 49 + threadIdx_x_1 + rx_outer_outer + 6], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 882] = T.if_then_else(7 <= threadIdx_x_1 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + threadIdx_x_1 + rx_outer_outer + 678], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 931] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 7) % 9 and (threadIdx_x_1 // 7 + 7) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 931) // 63 * 49 + (threadIdx_x_1 // 7 + 7) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 980] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 5) % 9 and (threadIdx_x_1 // 7 + 5) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 980) // 63 * 49 + (threadIdx_x_1 // 7 + 5) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1029] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 3) % 9 and (threadIdx_x_1 // 7 + 3) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1029) // 63 * 49 + (threadIdx_x_1 // 7 + 3) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1078] = T.if_then_else(1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1078) // 63 * 49 + threadIdx_x_1 + rx_outer_outer - 1], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1127] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 8) % 9 and (threadIdx_x_1 // 7 + 8) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1127) // 63 * 49 + (threadIdx_x_1 // 7 + 8) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1176] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 6) % 9 and (threadIdx_x_1 // 7 + 6) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1176) // 63 * 49 + (threadIdx_x_1 // 7 + 6) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1225] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 4) % 9 and (threadIdx_x_1 // 7 + 4) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1225) // 63 * 49 + (threadIdx_x_1 // 7 + 4) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1274] = T.if_then_else(threadIdx_x_1 < 42 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1274) // 63 * 49 + threadIdx_x_1 + rx_outer_outer + 6], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1323] = T.if_then_else(7 <= threadIdx_x_1 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + threadIdx_x_1 + rx_outer_outer + 1021], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1372] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 7) % 9 and (threadIdx_x_1 // 7 + 7) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1372) // 63 * 49 + (threadIdx_x_1 // 7 + 7) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1421] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 5) % 9 and (threadIdx_x_1 // 7 + 5) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1421) // 63 * 49 + (threadIdx_x_1 // 7 + 5) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1470] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 3) % 9 and (threadIdx_x_1 // 7 + 3) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1470) // 63 * 49 + (threadIdx_x_1 // 7 + 3) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1519] = T.if_then_else(1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1519) // 63 * 49 + threadIdx_x_1 + rx_outer_outer - 1], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1568] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 8) % 9 and (threadIdx_x_1 // 7 + 8) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1568) // 63 * 49 + (threadIdx_x_1 // 7 + 8) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1617] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 6) % 9 and (threadIdx_x_1 // 7 + 6) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1617) // 63 * 49 + (threadIdx_x_1 // 7 + 6) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1666] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 4) % 9 and (threadIdx_x_1 // 7 + 4) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1666) // 63 * 49 + (threadIdx_x_1 // 7 + 4) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1715] = T.if_then_else(threadIdx_x_1 < 42 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1715) // 63 * 49 + threadIdx_x_1 + rx_outer_outer + 6], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1764] = T.if_then_else(7 <= threadIdx_x_1 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + threadIdx_x_1 + rx_outer_outer + 1364], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1813] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 7) % 9 and (threadIdx_x_1 // 7 + 7) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1813) // 63 * 49 + (threadIdx_x_1 // 7 + 7) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1862] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 5) % 9 and (threadIdx_x_1 // 7 + 5) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1862) // 63 * 49 + (threadIdx_x_1 // 7 + 5) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1911] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 3) % 9 and (threadIdx_x_1 // 7 + 3) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1911) // 63 * 49 + (threadIdx_x_1 // 7 + 3) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1960] = T.if_then_else(1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1960) // 63 * 49 + threadIdx_x_1 + rx_outer_outer - 1], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 2009] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 8) % 9 and (threadIdx_x_1 // 7 + 8) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2009) // 63 * 49 + (threadIdx_x_1 // 7 + 8) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 2058] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 6) % 9 and (threadIdx_x_1 // 7 + 6) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2058) // 63 * 49 + (threadIdx_x_1 // 7 + 6) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 2107] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 4) % 9 and (threadIdx_x_1 // 7 + 4) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2107) // 63 * 49 + (threadIdx_x_1 // 7 + 4) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 2156] = T.if_then_else(threadIdx_x_1 < 42 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2156) // 63 * 49 + threadIdx_x_1 + rx_outer_outer + 6], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 2205] = T.if_then_else(7 <= threadIdx_x_1 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + threadIdx_x_1 + rx_outer_outer + 1707], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 2254] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 7) % 9 and (threadIdx_x_1 // 7 + 7) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2254) // 63 * 49 + (threadIdx_x_1 // 7 + 7) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 2303] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 5) % 9 and (threadIdx_x_1 // 7 + 5) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2303) // 63 * 49 + (threadIdx_x_1 // 7 + 5) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 2352] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 3) % 9 and (threadIdx_x_1 // 7 + 3) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2352) // 63 * 49 + (threadIdx_x_1 // 7 + 3) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 2401] = T.if_then_else(1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2401) // 63 * 49 + threadIdx_x_1 + rx_outer_outer - 1], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 2450] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 8) % 9 and (threadIdx_x_1 // 7 + 8) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2450) // 63 * 49 + (threadIdx_x_1 // 7 + 8) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 2499] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 6) % 9 and (threadIdx_x_1 // 7 + 6) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2499) // 63 * 49 + (threadIdx_x_1 // 7 + 6) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 2548] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 4) % 9 and (threadIdx_x_1 // 7 + 4) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2548) // 63 * 49 + (threadIdx_x_1 // 7 + 4) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 2597] = T.if_then_else(threadIdx_x_1 < 42 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2597) // 63 * 49 + threadIdx_x_1 + rx_outer_outer + 6], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 2646] = T.if_then_else(7 <= threadIdx_x_1 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + threadIdx_x_1 + rx_outer_outer + 2050], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 2695] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 7) % 9 and (threadIdx_x_1 // 7 + 7) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2695) // 63 * 49 + (threadIdx_x_1 // 7 + 7) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 2744] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 5) % 9 and (threadIdx_x_1 // 7 + 5) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2744) // 63 * 49 + (threadIdx_x_1 // 7 + 5) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 2793] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 3) % 9 and (threadIdx_x_1 // 7 + 3) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2793) // 63 * 49 + (threadIdx_x_1 // 7 + 3) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 2842] = T.if_then_else(1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2842) // 63 * 49 + threadIdx_x_1 + rx_outer_outer - 1], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 2891] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 8) % 9 and (threadIdx_x_1 // 7 + 8) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2891) // 63 * 49 + (threadIdx_x_1 // 7 + 8) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 2940] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 6) % 9 and (threadIdx_x_1 // 7 + 6) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2940) // 63 * 49 + (threadIdx_x_1 // 7 + 6) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 2989] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 4) % 9 and (threadIdx_x_1 // 7 + 4) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 2989) // 63 * 49 + (threadIdx_x_1 // 7 + 4) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 3038] = T.if_then_else(threadIdx_x_1 < 42 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 3038) // 63 * 49 + threadIdx_x_1 + rx_outer_outer + 6], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 3087] = T.if_then_else(7 <= threadIdx_x_1 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + threadIdx_x_1 + rx_outer_outer + 2393], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 3136] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 7) % 9 and (threadIdx_x_1 // 7 + 7) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 3136) // 63 * 49 + (threadIdx_x_1 // 7 + 7) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 3185] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 5) % 9 and (threadIdx_x_1 // 7 + 5) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 3185) // 63 * 49 + (threadIdx_x_1 // 7 + 5) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 3234] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 3) % 9 and (threadIdx_x_1 // 7 + 3) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 3234) // 63 * 49 + (threadIdx_x_1 // 7 + 3) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 3283] = T.if_then_else(1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 3283) // 63 * 49 + threadIdx_x_1 + rx_outer_outer - 1], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 3332] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 8) % 9 and (threadIdx_x_1 // 7 + 8) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 3332) // 63 * 49 + (threadIdx_x_1 // 7 + 8) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 3381] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 6) % 9 and (threadIdx_x_1 // 7 + 6) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 3381) // 63 * 49 + (threadIdx_x_1 // 7 + 6) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 3430] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 4) % 9 and (threadIdx_x_1 // 7 + 4) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 3430) // 63 * 49 + (threadIdx_x_1 // 7 + 4) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 3479] = T.if_then_else(threadIdx_x_1 < 42 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 3479) // 63 * 49 + threadIdx_x_1 + rx_outer_outer + 6], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 3528] = T.if_then_else(7 <= threadIdx_x_1 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + threadIdx_x_1 + rx_outer_outer + 2736], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 3577] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 7) % 9 and (threadIdx_x_1 // 7 + 7) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 3577) // 63 * 49 + (threadIdx_x_1 // 7 + 7) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 3626] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 5) % 9 and (threadIdx_x_1 // 7 + 5) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 3626) // 63 * 49 + (threadIdx_x_1 // 7 + 5) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 3675] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 3) % 9 and (threadIdx_x_1 // 7 + 3) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 3675) // 63 * 49 + (threadIdx_x_1 // 7 + 3) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 3724] = T.if_then_else(1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 3724) // 63 * 49 + threadIdx_x_1 + rx_outer_outer - 1], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 3773] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 8) % 9 and (threadIdx_x_1 // 7 + 8) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 3773) // 63 * 49 + (threadIdx_x_1 // 7 + 8) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 3822] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 6) % 9 and (threadIdx_x_1 // 7 + 6) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 3822) // 63 * 49 + (threadIdx_x_1 // 7 + 6) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 3871] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 4) % 9 and (threadIdx_x_1 // 7 + 4) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 3871) // 63 * 49 + (threadIdx_x_1 // 7 + 4) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 3920] = T.if_then_else(threadIdx_x_1 < 42 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 3920) // 63 * 49 + threadIdx_x_1 + rx_outer_outer + 6], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 3969] = T.if_then_else(7 <= threadIdx_x_1 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + threadIdx_x_1 + rx_outer_outer + 3079], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    if T.likely(threadIdx_x_1 < 14):
                        pad_temp_shared_1[threadIdx_x_1 + 4018] = T.if_then_else(threadIdx_x_1 < 7 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 4018) // 63 * 49 + rx_outer_outer + threadIdx_x_1 + 41], T.float32(0))
                threadIdx_x_2 = T.env_thread("threadIdx.x")
                kernel_shared_1 = T.Buffer((3072,), data=kernel_shared, scope="shared")
                kernel_1 = T.Buffer((2359296,), data=kernel.data)
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2] = kernel_1[blockIdx_x * 73728 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 49] = kernel_1[blockIdx_x * 73728 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 147]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 98] = kernel_1[blockIdx_x * 73728 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 294]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 147] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 147) // 192 * 4608 + cse_var_1 + (threadIdx_x_2 + 147) % 192 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 196] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 196) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 12]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 245] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 245) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 159]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 294] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 294) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 306]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 343] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 343) // 192 * 4608 + cse_var_1 + (threadIdx_x_2 + 151) % 192 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 392] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 392) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 24]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 441] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 441) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 171]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 490] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 490) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 318]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 539] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 539) // 192 * 4608 + cse_var_1 + (threadIdx_x_2 + 155) % 192 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 588] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 588) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 36]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 637] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 637) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 183]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 686] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 686) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 330]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 735] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 735) // 192 * 4608 + cse_var_1 + (threadIdx_x_2 + 159) % 192 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 784] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 784) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 48]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 833] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 833) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 195]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 882] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 882) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 342]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 931] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 931) // 192 * 4608 + cse_var_1 + (threadIdx_x_2 + 163) % 192 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 980] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 980) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 60]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 1029] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1029) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 207]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 1078] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1078) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 354]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 1127] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1127) // 192 * 4608 + cse_var_1 + (threadIdx_x_2 + 167) % 192 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 1176] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1176) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 72]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 1225] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1225) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 219]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 1274] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1274) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 366]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 1323] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1323) // 192 * 4608 + cse_var_1 + (threadIdx_x_2 + 171) % 192 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 1372] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1372) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 84]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 1421] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1421) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 231]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 1470] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1470) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 378]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 1519] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1519) // 192 * 4608 + cse_var_1 + (threadIdx_x_2 + 175) % 192 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 1568] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1568) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 96]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 1617] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1617) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 243]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 1666] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1666) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 390]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 1715] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1715) // 192 * 4608 + cse_var_1 + (threadIdx_x_2 + 179) % 192 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 1764] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1764) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 108]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 1813] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1813) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 255]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 1862] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1862) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 402]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 1911] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1911) // 192 * 4608 + cse_var_1 + (threadIdx_x_2 + 183) % 192 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 1960] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1960) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 120]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 2009] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 2009) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 267]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 2058] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 2058) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 414]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 2107] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 2107) // 192 * 4608 + cse_var_1 + (threadIdx_x_2 + 187) % 192 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 2156] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 2156) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 132]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 2205] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 2205) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 279]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 2254] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 2254) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 426]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 2303] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 2303) // 192 * 4608 + cse_var_1 + (threadIdx_x_2 + 191) % 192 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 2352] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 2352) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 144]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 2401] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 2401) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 291]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 2450] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 2450) // 192 * 4608 + cse_var_1 + (threadIdx_x_2 + 146) % 192 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 2499] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 2499) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 9]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 2548] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 2548) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 156]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 2597] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 2597) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 303]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 2646] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 2646) // 192 * 4608 + cse_var_1 + (threadIdx_x_2 + 150) % 192 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 2695] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 2695) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 21]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 2744] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 2744) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 168]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 2793] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 2793) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 315]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 2842] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 2842) // 192 * 4608 + cse_var_1 + (threadIdx_x_2 + 154) % 192 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 2891] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 2891) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 33]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 2940] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 2940) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 180]
                with T.launch_thread(threadIdx_x_2, 49):
                    kernel_shared_1[threadIdx_x_2 + 2989] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 2989) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 327]
                with T.launch_thread(threadIdx_x_2, 49):
                    if T.likely(threadIdx_x_2 < 34):
                        kernel_shared_1[threadIdx_x_2 + 3038] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 3038) // 192 * 4608 + cse_var_1 + threadIdx_x_2 * 3 + rx_outer_outer + 474]
                for rc_outer_inner in range(16):
                    cse_var_3: T.int32 = rc_outer_inner * 12
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x] * kernel_shared_1[cse_var_3]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x] * kernel_shared_1[cse_var_3 + 192]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x] * kernel_shared_1[cse_var_3 + 384]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x] * kernel_shared_1[cse_var_3 + 576]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x] * kernel_shared_1[cse_var_3 + 768]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x] * kernel_shared_1[cse_var_3 + 960]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x] * kernel_shared_1[cse_var_3 + 1152]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x] * kernel_shared_1[cse_var_3 + 1344]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x] * kernel_shared_1[cse_var_3 + 1536]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x] * kernel_shared_1[cse_var_3 + 1728]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x] * kernel_shared_1[cse_var_3 + 1920]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x] * kernel_shared_1[cse_var_3 + 2112]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x] * kernel_shared_1[cse_var_3 + 2304]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x] * kernel_shared_1[cse_var_3 + 2496]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x] * kernel_shared_1[cse_var_3 + 2688]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x] * kernel_shared_1[cse_var_3 + 2880]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 7] * kernel_shared_1[cse_var_3 + 1]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 7] * kernel_shared_1[cse_var_3 + 193]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 7] * kernel_shared_1[cse_var_3 + 385]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 7] * kernel_shared_1[cse_var_3 + 577]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 7] * kernel_shared_1[cse_var_3 + 769]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 7] * kernel_shared_1[cse_var_3 + 961]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 7] * kernel_shared_1[cse_var_3 + 1153]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 7] * kernel_shared_1[cse_var_3 + 1345]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 7] * kernel_shared_1[cse_var_3 + 1537]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 7] * kernel_shared_1[cse_var_3 + 1729]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 7] * kernel_shared_1[cse_var_3 + 1921]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 7] * kernel_shared_1[cse_var_3 + 2113]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 7] * kernel_shared_1[cse_var_3 + 2305]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 7] * kernel_shared_1[cse_var_3 + 2497]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 7] * kernel_shared_1[cse_var_3 + 2689]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 7] * kernel_shared_1[cse_var_3 + 2881]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 14] * kernel_shared_1[cse_var_3 + 2]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 14] * kernel_shared_1[cse_var_3 + 194]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 14] * kernel_shared_1[cse_var_3 + 386]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 14] * kernel_shared_1[cse_var_3 + 578]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 14] * kernel_shared_1[cse_var_3 + 770]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 14] * kernel_shared_1[cse_var_3 + 962]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 14] * kernel_shared_1[cse_var_3 + 1154]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 14] * kernel_shared_1[cse_var_3 + 1346]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 14] * kernel_shared_1[cse_var_3 + 1538]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 14] * kernel_shared_1[cse_var_3 + 1730]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 14] * kernel_shared_1[cse_var_3 + 1922]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 14] * kernel_shared_1[cse_var_3 + 2114]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 14] * kernel_shared_1[cse_var_3 + 2306]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 14] * kernel_shared_1[cse_var_3 + 2498]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 14] * kernel_shared_1[cse_var_3 + 2690]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 14] * kernel_shared_1[cse_var_3 + 2882]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 63] * kernel_shared_1[cse_var_3 + 3]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 63] * kernel_shared_1[cse_var_3 + 195]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 63] * kernel_shared_1[cse_var_3 + 387]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 63] * kernel_shared_1[cse_var_3 + 579]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 63] * kernel_shared_1[cse_var_3 + 771]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 63] * kernel_shared_1[cse_var_3 + 963]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 63] * kernel_shared_1[cse_var_3 + 1155]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 63] * kernel_shared_1[cse_var_3 + 1347]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 63] * kernel_shared_1[cse_var_3 + 1539]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 63] * kernel_shared_1[cse_var_3 + 1731]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 63] * kernel_shared_1[cse_var_3 + 1923]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 63] * kernel_shared_1[cse_var_3 + 2115]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 63] * kernel_shared_1[cse_var_3 + 2307]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 63] * kernel_shared_1[cse_var_3 + 2499]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 63] * kernel_shared_1[cse_var_3 + 2691]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 63] * kernel_shared_1[cse_var_3 + 2883]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 70] * kernel_shared_1[cse_var_3 + 4]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 70] * kernel_shared_1[cse_var_3 + 196]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 70] * kernel_shared_1[cse_var_3 + 388]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 70] * kernel_shared_1[cse_var_3 + 580]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 70] * kernel_shared_1[cse_var_3 + 772]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 70] * kernel_shared_1[cse_var_3 + 964]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 70] * kernel_shared_1[cse_var_3 + 1156]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 70] * kernel_shared_1[cse_var_3 + 1348]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 70] * kernel_shared_1[cse_var_3 + 1540]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 70] * kernel_shared_1[cse_var_3 + 1732]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 70] * kernel_shared_1[cse_var_3 + 1924]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 70] * kernel_shared_1[cse_var_3 + 2116]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 70] * kernel_shared_1[cse_var_3 + 2308]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 70] * kernel_shared_1[cse_var_3 + 2500]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 70] * kernel_shared_1[cse_var_3 + 2692]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 70] * kernel_shared_1[cse_var_3 + 2884]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 77] * kernel_shared_1[cse_var_3 + 5]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 77] * kernel_shared_1[cse_var_3 + 197]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 77] * kernel_shared_1[cse_var_3 + 389]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 77] * kernel_shared_1[cse_var_3 + 581]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 77] * kernel_shared_1[cse_var_3 + 773]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 77] * kernel_shared_1[cse_var_3 + 965]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 77] * kernel_shared_1[cse_var_3 + 1157]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 77] * kernel_shared_1[cse_var_3 + 1349]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 77] * kernel_shared_1[cse_var_3 + 1541]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 77] * kernel_shared_1[cse_var_3 + 1733]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 77] * kernel_shared_1[cse_var_3 + 1925]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 77] * kernel_shared_1[cse_var_3 + 2117]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 77] * kernel_shared_1[cse_var_3 + 2309]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 77] * kernel_shared_1[cse_var_3 + 2501]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 77] * kernel_shared_1[cse_var_3 + 2693]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 77] * kernel_shared_1[cse_var_3 + 2885]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 126] * kernel_shared_1[cse_var_3 + 6]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 126] * kernel_shared_1[cse_var_3 + 198]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 126] * kernel_shared_1[cse_var_3 + 390]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 126] * kernel_shared_1[cse_var_3 + 582]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 126] * kernel_shared_1[cse_var_3 + 774]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 126] * kernel_shared_1[cse_var_3 + 966]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 126] * kernel_shared_1[cse_var_3 + 1158]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 126] * kernel_shared_1[cse_var_3 + 1350]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 126] * kernel_shared_1[cse_var_3 + 1542]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 126] * kernel_shared_1[cse_var_3 + 1734]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 126] * kernel_shared_1[cse_var_3 + 1926]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 126] * kernel_shared_1[cse_var_3 + 2118]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 126] * kernel_shared_1[cse_var_3 + 2310]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 126] * kernel_shared_1[cse_var_3 + 2502]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 126] * kernel_shared_1[cse_var_3 + 2694]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 126] * kernel_shared_1[cse_var_3 + 2886]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 133] * kernel_shared_1[cse_var_3 + 7]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 133] * kernel_shared_1[cse_var_3 + 199]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 133] * kernel_shared_1[cse_var_3 + 391]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 133] * kernel_shared_1[cse_var_3 + 583]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 133] * kernel_shared_1[cse_var_3 + 775]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 133] * kernel_shared_1[cse_var_3 + 967]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 133] * kernel_shared_1[cse_var_3 + 1159]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 133] * kernel_shared_1[cse_var_3 + 1351]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 133] * kernel_shared_1[cse_var_3 + 1543]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 133] * kernel_shared_1[cse_var_3 + 1735]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 133] * kernel_shared_1[cse_var_3 + 1927]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 133] * kernel_shared_1[cse_var_3 + 2119]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 133] * kernel_shared_1[cse_var_3 + 2311]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 133] * kernel_shared_1[cse_var_3 + 2503]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 133] * kernel_shared_1[cse_var_3 + 2695]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 133] * kernel_shared_1[cse_var_3 + 2887]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 140] * kernel_shared_1[cse_var_3 + 8]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 140] * kernel_shared_1[cse_var_3 + 200]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 140] * kernel_shared_1[cse_var_3 + 392]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 140] * kernel_shared_1[cse_var_3 + 584]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 140] * kernel_shared_1[cse_var_3 + 776]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 140] * kernel_shared_1[cse_var_3 + 968]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 140] * kernel_shared_1[cse_var_3 + 1160]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 140] * kernel_shared_1[cse_var_3 + 1352]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 140] * kernel_shared_1[cse_var_3 + 1544]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 140] * kernel_shared_1[cse_var_3 + 1736]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 140] * kernel_shared_1[cse_var_3 + 1928]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 140] * kernel_shared_1[cse_var_3 + 2120]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 140] * kernel_shared_1[cse_var_3 + 2312]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 140] * kernel_shared_1[cse_var_3 + 2504]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 140] * kernel_shared_1[cse_var_3 + 2696]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 140] * kernel_shared_1[cse_var_3 + 2888]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 189] * kernel_shared_1[cse_var_3 + 9]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 189] * kernel_shared_1[cse_var_3 + 201]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 189] * kernel_shared_1[cse_var_3 + 393]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 189] * kernel_shared_1[cse_var_3 + 585]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 189] * kernel_shared_1[cse_var_3 + 777]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 189] * kernel_shared_1[cse_var_3 + 969]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 189] * kernel_shared_1[cse_var_3 + 1161]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 189] * kernel_shared_1[cse_var_3 + 1353]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 189] * kernel_shared_1[cse_var_3 + 1545]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 189] * kernel_shared_1[cse_var_3 + 1737]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 189] * kernel_shared_1[cse_var_3 + 1929]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 189] * kernel_shared_1[cse_var_3 + 2121]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 189] * kernel_shared_1[cse_var_3 + 2313]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 189] * kernel_shared_1[cse_var_3 + 2505]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 189] * kernel_shared_1[cse_var_3 + 2697]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 189] * kernel_shared_1[cse_var_3 + 2889]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 196] * kernel_shared_1[cse_var_3 + 10]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 196] * kernel_shared_1[cse_var_3 + 202]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 196] * kernel_shared_1[cse_var_3 + 394]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 196] * kernel_shared_1[cse_var_3 + 586]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 196] * kernel_shared_1[cse_var_3 + 778]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 196] * kernel_shared_1[cse_var_3 + 970]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 196] * kernel_shared_1[cse_var_3 + 1162]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 196] * kernel_shared_1[cse_var_3 + 1354]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 196] * kernel_shared_1[cse_var_3 + 1546]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 196] * kernel_shared_1[cse_var_3 + 1738]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 196] * kernel_shared_1[cse_var_3 + 1930]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 196] * kernel_shared_1[cse_var_3 + 2122]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 196] * kernel_shared_1[cse_var_3 + 2314]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 196] * kernel_shared_1[cse_var_3 + 2506]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 196] * kernel_shared_1[cse_var_3 + 2698]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 196] * kernel_shared_1[cse_var_3 + 2890]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 203] * kernel_shared_1[cse_var_3 + 11]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 203] * kernel_shared_1[cse_var_3 + 203]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 203] * kernel_shared_1[cse_var_3 + 395]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 203] * kernel_shared_1[cse_var_3 + 587]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 203] * kernel_shared_1[cse_var_3 + 779]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 203] * kernel_shared_1[cse_var_3 + 971]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 203] * kernel_shared_1[cse_var_3 + 1163]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 203] * kernel_shared_1[cse_var_3 + 1355]
                    conv2d_nchw_1[8] = conv2d_nchw_1[8] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 203] * kernel_shared_1[cse_var_3 + 1547]
                    conv2d_nchw_1[9] = conv2d_nchw_1[9] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 203] * kernel_shared_1[cse_var_3 + 1739]
                    conv2d_nchw_1[10] = conv2d_nchw_1[10] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 203] * kernel_shared_1[cse_var_3 + 1931]
                    conv2d_nchw_1[11] = conv2d_nchw_1[11] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 203] * kernel_shared_1[cse_var_3 + 2123]
                    conv2d_nchw_1[12] = conv2d_nchw_1[12] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 203] * kernel_shared_1[cse_var_3 + 2315]
                    conv2d_nchw_1[13] = conv2d_nchw_1[13] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 203] * kernel_shared_1[cse_var_3 + 2507]
                    conv2d_nchw_1[14] = conv2d_nchw_1[14] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 203] * kernel_shared_1[cse_var_3 + 2699]
                    conv2d_nchw_1[15] = conv2d_nchw_1[15] + pad_temp_shared_1[rc_outer_inner * 252 + threadIdx_x + 203] * kernel_shared_1[cse_var_3 + 2891]
            for i1_inner in range(16):
                compute_1 = T.Buffer((25088,), data=compute.data)
                bias_1 = T.Buffer((512,), data=bias.data)
                compute_1[blockIdx_x * 784 + i1_inner * 49 + threadIdx_x] = T.max(conv2d_nchw_1[i1_inner] + bias_1[blockIdx_x * 16 + i1_inner], T.float32(0))




.. GENERATED FROM PYTHON SOURCE LINES 138-141

Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.

.. GENERATED FROM PYTHON SOURCE LINES 141-168

.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Execution time of this operator: 0.363 ms




.. GENERATED FROM PYTHON SOURCE LINES 169-174

Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

.. GENERATED FROM PYTHON SOURCE LINES 176-179

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.

.. GENERATED FROM PYTHON SOURCE LINES 179-186

.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=16)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=1)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=7)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=7)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=4)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=16)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=3)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=1)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=1)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=1)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=16)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=1)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=1)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=7)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=7)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=49)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=49)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 512)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(49) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[16];
      __shared__ float pad_temp_shared[4032];
      __shared__ float kernel_shared[3072];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      conv2d_nchw[7] = 0.000000e+00f;
      conv2d_nchw[8] = 0.000000e+00f;
      conv2d_nchw[9] = 0.000000e+00f;
      conv2d_nchw[10] = 0.000000e+00f;
      conv2d_nchw[11] = 0.000000e+00f;
      conv2d_nchw[12] = 0.000000e+00f;
      conv2d_nchw[13] = 0.000000e+00f;
      conv2d_nchw[14] = 0.000000e+00f;
      conv2d_nchw[15] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 8; ++rc_outer_outer) {
        for (int rx_outer_outer = 0; rx_outer_outer < 3; ++rx_outer_outer) {
          __syncthreads();
          pad_temp_shared[((int)threadIdx.x)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 3136) + ((int)threadIdx.x)) + rx_outer_outer) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 49)] = (((((1 <= (((((int)threadIdx.x) / 7) + 7) % 9)) && ((((((int)threadIdx.x) / 7) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 49) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 7) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 98)] = (((((1 <= (((((int)threadIdx.x) / 7) + 5) % 9)) && ((((((int)threadIdx.x) / 7) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 98) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 147)] = (((((1 <= (((((int)threadIdx.x) / 7) + 3) % 9)) && ((((((int)threadIdx.x) / 7) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 147) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 196)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 196) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) - 1)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 245)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 245) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 294)] = (((((1 <= (((((int)threadIdx.x) / 7) + 6) % 9)) && ((((((int)threadIdx.x) / 7) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 294) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 343)] = (((((1 <= (((((int)threadIdx.x) / 7) + 4) % 9)) && ((((((int)threadIdx.x) / 7) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 343) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 392)] = ((((((int)threadIdx.x) < 42) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 392) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) + 6)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 441)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 3136) + ((int)threadIdx.x)) + rx_outer_outer) + 335)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 490)] = (((((1 <= (((((int)threadIdx.x) / 7) + 7) % 9)) && ((((((int)threadIdx.x) / 7) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 490) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 7) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 539)] = (((((1 <= (((((int)threadIdx.x) / 7) + 5) % 9)) && ((((((int)threadIdx.x) / 7) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 539) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 588)] = (((((1 <= (((((int)threadIdx.x) / 7) + 3) % 9)) && ((((((int)threadIdx.x) / 7) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 588) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 637)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 637) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) - 1)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 686)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 686) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 735)] = (((((1 <= (((((int)threadIdx.x) / 7) + 6) % 9)) && ((((((int)threadIdx.x) / 7) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 735) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 784)] = (((((1 <= (((((int)threadIdx.x) / 7) + 4) % 9)) && ((((((int)threadIdx.x) / 7) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 784) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 833)] = ((((((int)threadIdx.x) < 42) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 833) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) + 6)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 882)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 3136) + ((int)threadIdx.x)) + rx_outer_outer) + 678)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 931)] = (((((1 <= (((((int)threadIdx.x) / 7) + 7) % 9)) && ((((((int)threadIdx.x) / 7) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 931) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 7) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 980)] = (((((1 <= (((((int)threadIdx.x) / 7) + 5) % 9)) && ((((((int)threadIdx.x) / 7) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 980) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1029)] = (((((1 <= (((((int)threadIdx.x) / 7) + 3) % 9)) && ((((((int)threadIdx.x) / 7) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1029) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1078)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1078) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) - 1)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1127)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1127) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1176)] = (((((1 <= (((((int)threadIdx.x) / 7) + 6) % 9)) && ((((((int)threadIdx.x) / 7) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1176) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1225)] = (((((1 <= (((((int)threadIdx.x) / 7) + 4) % 9)) && ((((((int)threadIdx.x) / 7) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1225) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1274)] = ((((((int)threadIdx.x) < 42) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1274) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) + 6)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1323)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 3136) + ((int)threadIdx.x)) + rx_outer_outer) + 1021)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1372)] = (((((1 <= (((((int)threadIdx.x) / 7) + 7) % 9)) && ((((((int)threadIdx.x) / 7) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1372) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 7) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1421)] = (((((1 <= (((((int)threadIdx.x) / 7) + 5) % 9)) && ((((((int)threadIdx.x) / 7) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1421) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1470)] = (((((1 <= (((((int)threadIdx.x) / 7) + 3) % 9)) && ((((((int)threadIdx.x) / 7) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1470) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1519)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1519) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) - 1)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1568)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1568) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1617)] = (((((1 <= (((((int)threadIdx.x) / 7) + 6) % 9)) && ((((((int)threadIdx.x) / 7) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1617) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1666)] = (((((1 <= (((((int)threadIdx.x) / 7) + 4) % 9)) && ((((((int)threadIdx.x) / 7) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1666) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1715)] = ((((((int)threadIdx.x) < 42) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1715) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) + 6)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1764)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 3136) + ((int)threadIdx.x)) + rx_outer_outer) + 1364)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1813)] = (((((1 <= (((((int)threadIdx.x) / 7) + 7) % 9)) && ((((((int)threadIdx.x) / 7) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1813) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 7) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1862)] = (((((1 <= (((((int)threadIdx.x) / 7) + 5) % 9)) && ((((((int)threadIdx.x) / 7) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1862) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1911)] = (((((1 <= (((((int)threadIdx.x) / 7) + 3) % 9)) && ((((((int)threadIdx.x) / 7) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1911) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1960)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1960) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) - 1)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2009)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2009) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2058)] = (((((1 <= (((((int)threadIdx.x) / 7) + 6) % 9)) && ((((((int)threadIdx.x) / 7) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2058) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2107)] = (((((1 <= (((((int)threadIdx.x) / 7) + 4) % 9)) && ((((((int)threadIdx.x) / 7) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2107) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2156)] = ((((((int)threadIdx.x) < 42) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2156) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) + 6)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2205)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 3136) + ((int)threadIdx.x)) + rx_outer_outer) + 1707)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2254)] = (((((1 <= (((((int)threadIdx.x) / 7) + 7) % 9)) && ((((((int)threadIdx.x) / 7) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2254) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 7) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2303)] = (((((1 <= (((((int)threadIdx.x) / 7) + 5) % 9)) && ((((((int)threadIdx.x) / 7) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2303) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2352)] = (((((1 <= (((((int)threadIdx.x) / 7) + 3) % 9)) && ((((((int)threadIdx.x) / 7) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2352) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2401)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2401) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) - 1)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2450)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2450) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2499)] = (((((1 <= (((((int)threadIdx.x) / 7) + 6) % 9)) && ((((((int)threadIdx.x) / 7) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2499) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2548)] = (((((1 <= (((((int)threadIdx.x) / 7) + 4) % 9)) && ((((((int)threadIdx.x) / 7) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2548) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2597)] = ((((((int)threadIdx.x) < 42) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2597) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) + 6)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2646)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 3136) + ((int)threadIdx.x)) + rx_outer_outer) + 2050)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2695)] = (((((1 <= (((((int)threadIdx.x) / 7) + 7) % 9)) && ((((((int)threadIdx.x) / 7) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2695) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 7) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2744)] = (((((1 <= (((((int)threadIdx.x) / 7) + 5) % 9)) && ((((((int)threadIdx.x) / 7) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2744) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2793)] = (((((1 <= (((((int)threadIdx.x) / 7) + 3) % 9)) && ((((((int)threadIdx.x) / 7) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2793) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2842)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2842) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) - 1)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2891)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2891) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2940)] = (((((1 <= (((((int)threadIdx.x) / 7) + 6) % 9)) && ((((((int)threadIdx.x) / 7) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2940) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2989)] = (((((1 <= (((((int)threadIdx.x) / 7) + 4) % 9)) && ((((((int)threadIdx.x) / 7) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2989) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3038)] = ((((((int)threadIdx.x) < 42) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3038) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) + 6)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3087)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 3136) + ((int)threadIdx.x)) + rx_outer_outer) + 2393)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3136)] = (((((1 <= (((((int)threadIdx.x) / 7) + 7) % 9)) && ((((((int)threadIdx.x) / 7) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3136) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 7) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3185)] = (((((1 <= (((((int)threadIdx.x) / 7) + 5) % 9)) && ((((((int)threadIdx.x) / 7) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3185) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3234)] = (((((1 <= (((((int)threadIdx.x) / 7) + 3) % 9)) && ((((((int)threadIdx.x) / 7) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3234) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3283)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3283) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) - 1)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3332)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3332) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3381)] = (((((1 <= (((((int)threadIdx.x) / 7) + 6) % 9)) && ((((((int)threadIdx.x) / 7) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3381) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3430)] = (((((1 <= (((((int)threadIdx.x) / 7) + 4) % 9)) && ((((((int)threadIdx.x) / 7) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3430) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3479)] = ((((((int)threadIdx.x) < 42) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3479) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) + 6)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3528)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 3136) + ((int)threadIdx.x)) + rx_outer_outer) + 2736)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3577)] = (((((1 <= (((((int)threadIdx.x) / 7) + 7) % 9)) && ((((((int)threadIdx.x) / 7) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3577) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 7) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3626)] = (((((1 <= (((((int)threadIdx.x) / 7) + 5) % 9)) && ((((((int)threadIdx.x) / 7) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3626) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3675)] = (((((1 <= (((((int)threadIdx.x) / 7) + 3) % 9)) && ((((((int)threadIdx.x) / 7) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3675) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3724)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3724) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) - 1)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3773)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3773) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3822)] = (((((1 <= (((((int)threadIdx.x) / 7) + 6) % 9)) && ((((((int)threadIdx.x) / 7) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3822) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3871)] = (((((1 <= (((((int)threadIdx.x) / 7) + 4) % 9)) && ((((((int)threadIdx.x) / 7) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3871) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3920)] = ((((((int)threadIdx.x) < 42) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3920) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) + 6)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3969)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 3136) + ((int)threadIdx.x)) + rx_outer_outer) + 3079)] : 0.000000e+00f);
          if (((int)threadIdx.x) < 14) {
            pad_temp_shared[(((int)threadIdx.x) + 4018)] = ((((((int)threadIdx.x) < 7) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 4018) / 63) * 49)) + rx_outer_outer) + ((int)threadIdx.x)) + 41)] : 0.000000e+00f);
          }
          kernel_shared[((int)threadIdx.x)] = kernel[((((((int)blockIdx.x) * 73728) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 49)] = kernel[(((((((int)blockIdx.x) * 73728) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 147)];
          kernel_shared[(((int)threadIdx.x) + 98)] = kernel[(((((((int)blockIdx.x) * 73728) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 294)];
          kernel_shared[(((int)threadIdx.x) + 147)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 147) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 147) % 192) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 196)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 196) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 12)];
          kernel_shared[(((int)threadIdx.x) + 245)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 245) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 159)];
          kernel_shared[(((int)threadIdx.x) + 294)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 294) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 306)];
          kernel_shared[(((int)threadIdx.x) + 343)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 343) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 151) % 192) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 392)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 392) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 24)];
          kernel_shared[(((int)threadIdx.x) + 441)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 441) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 171)];
          kernel_shared[(((int)threadIdx.x) + 490)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 490) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 318)];
          kernel_shared[(((int)threadIdx.x) + 539)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 539) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 155) % 192) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 588)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 588) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 36)];
          kernel_shared[(((int)threadIdx.x) + 637)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 637) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 183)];
          kernel_shared[(((int)threadIdx.x) + 686)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 686) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 330)];
          kernel_shared[(((int)threadIdx.x) + 735)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 735) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 159) % 192) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 784)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 784) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 48)];
          kernel_shared[(((int)threadIdx.x) + 833)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 833) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 195)];
          kernel_shared[(((int)threadIdx.x) + 882)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 882) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 342)];
          kernel_shared[(((int)threadIdx.x) + 931)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 931) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 163) % 192) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 980)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 980) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 60)];
          kernel_shared[(((int)threadIdx.x) + 1029)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1029) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 207)];
          kernel_shared[(((int)threadIdx.x) + 1078)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1078) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 354)];
          kernel_shared[(((int)threadIdx.x) + 1127)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1127) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 167) % 192) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1176)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1176) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 72)];
          kernel_shared[(((int)threadIdx.x) + 1225)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1225) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 219)];
          kernel_shared[(((int)threadIdx.x) + 1274)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1274) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 366)];
          kernel_shared[(((int)threadIdx.x) + 1323)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1323) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 171) % 192) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1372)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1372) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 84)];
          kernel_shared[(((int)threadIdx.x) + 1421)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1421) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 231)];
          kernel_shared[(((int)threadIdx.x) + 1470)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1470) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 378)];
          kernel_shared[(((int)threadIdx.x) + 1519)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1519) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 175) % 192) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1568)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1568) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 96)];
          kernel_shared[(((int)threadIdx.x) + 1617)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1617) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 243)];
          kernel_shared[(((int)threadIdx.x) + 1666)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1666) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 390)];
          kernel_shared[(((int)threadIdx.x) + 1715)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1715) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 179) % 192) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1764)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1764) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 108)];
          kernel_shared[(((int)threadIdx.x) + 1813)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1813) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 255)];
          kernel_shared[(((int)threadIdx.x) + 1862)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1862) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 402)];
          kernel_shared[(((int)threadIdx.x) + 1911)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1911) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 183) % 192) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1960)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1960) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 120)];
          kernel_shared[(((int)threadIdx.x) + 2009)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2009) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 267)];
          kernel_shared[(((int)threadIdx.x) + 2058)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2058) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 414)];
          kernel_shared[(((int)threadIdx.x) + 2107)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2107) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 187) % 192) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 2156)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2156) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 132)];
          kernel_shared[(((int)threadIdx.x) + 2205)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2205) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 279)];
          kernel_shared[(((int)threadIdx.x) + 2254)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2254) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 426)];
          kernel_shared[(((int)threadIdx.x) + 2303)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2303) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 191) % 192) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 2352)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2352) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 144)];
          kernel_shared[(((int)threadIdx.x) + 2401)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2401) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 291)];
          kernel_shared[(((int)threadIdx.x) + 2450)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2450) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 146) % 192) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 2499)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2499) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 9)];
          kernel_shared[(((int)threadIdx.x) + 2548)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2548) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 156)];
          kernel_shared[(((int)threadIdx.x) + 2597)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2597) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 303)];
          kernel_shared[(((int)threadIdx.x) + 2646)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2646) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 150) % 192) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 2695)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2695) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 21)];
          kernel_shared[(((int)threadIdx.x) + 2744)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2744) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 168)];
          kernel_shared[(((int)threadIdx.x) + 2793)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2793) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 315)];
          kernel_shared[(((int)threadIdx.x) + 2842)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2842) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 154) % 192) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 2891)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2891) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 33)];
          kernel_shared[(((int)threadIdx.x) + 2940)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2940) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 180)];
          kernel_shared[(((int)threadIdx.x) + 2989)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2989) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 327)];
          if (((int)threadIdx.x) < 34) {
            kernel_shared[(((int)threadIdx.x) + 3038)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 3038) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 474)];
          }
          __syncthreads();
          for (int rc_outer_inner = 0; rc_outer_inner < 16; ++rc_outer_inner) {
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 252) + ((int)threadIdx.x))] * kernel_shared[(rc_outer_inner * 12)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 252) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 12) + 192)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 252) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 12) + 384)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 252) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 12) + 576)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 252) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 12) + 768)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 252) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 12) + 960)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 252) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 12) + 1152)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 252) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 12) + 1344)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 252) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 12) + 1536)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 252) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 12) + 1728)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 252) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 12) + 1920)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 252) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 12) + 2112)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 252) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 12) + 2304)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 252) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 12) + 2496)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((rc_outer_inner * 252) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 12) + 2688)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((rc_outer_inner * 252) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 12) + 2880)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 12) + 1)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 12) + 193)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 12) + 385)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 12) + 577)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 12) + 769)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 12) + 961)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 12) + 1153)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 12) + 1345)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 12) + 1537)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 12) + 1729)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 12) + 1921)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 12) + 2113)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 12) + 2305)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 12) + 2497)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 12) + 2689)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 12) + 2881)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 12) + 2)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 12) + 194)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 12) + 386)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 12) + 578)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 12) + 770)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 12) + 962)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 12) + 1154)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 12) + 1346)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 12) + 1538)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 12) + 1730)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 12) + 1922)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 12) + 2114)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 12) + 2306)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 12) + 2498)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 12) + 2690)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 12) + 2882)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 12) + 3)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 12) + 195)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 12) + 387)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 12) + 579)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 12) + 771)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 12) + 963)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 12) + 1155)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 12) + 1347)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 12) + 1539)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 12) + 1731)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 12) + 1923)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 12) + 2115)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 12) + 2307)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 12) + 2499)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 12) + 2691)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 12) + 2883)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 12) + 4)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 12) + 196)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 12) + 388)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 12) + 580)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 12) + 772)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 12) + 964)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 12) + 1156)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 12) + 1348)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 12) + 1540)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 12) + 1732)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 12) + 1924)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 12) + 2116)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 12) + 2308)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 12) + 2500)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 12) + 2692)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 12) + 2884)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 12) + 5)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 12) + 197)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 12) + 389)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 12) + 581)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 12) + 773)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 12) + 965)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 12) + 1157)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 12) + 1349)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 12) + 1541)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 12) + 1733)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 12) + 1925)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 12) + 2117)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 12) + 2309)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 12) + 2501)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 12) + 2693)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 12) + 2885)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 12) + 6)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 12) + 198)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 12) + 390)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 12) + 582)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 12) + 774)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 12) + 966)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 12) + 1158)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 12) + 1350)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 12) + 1542)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 12) + 1734)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 12) + 1926)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 12) + 2118)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 12) + 2310)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 12) + 2502)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 12) + 2694)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 12) + 2886)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 12) + 7)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 12) + 199)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 12) + 391)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 12) + 583)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 12) + 775)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 12) + 967)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 12) + 1159)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 12) + 1351)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 12) + 1543)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 12) + 1735)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 12) + 1927)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 12) + 2119)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 12) + 2311)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 12) + 2503)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 12) + 2695)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 12) + 2887)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 12) + 8)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 12) + 200)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 12) + 392)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 12) + 584)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 12) + 776)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 12) + 968)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 12) + 1160)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 12) + 1352)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 12) + 1544)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 12) + 1736)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 12) + 1928)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 12) + 2120)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 12) + 2312)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 12) + 2504)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 12) + 2696)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 12) + 2888)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 12) + 9)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 12) + 201)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 12) + 393)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 12) + 585)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 12) + 777)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 12) + 969)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 12) + 1161)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 12) + 1353)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 12) + 1545)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 12) + 1737)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 12) + 1929)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 12) + 2121)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 12) + 2313)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 12) + 2505)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 12) + 2697)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 12) + 2889)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 12) + 10)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 12) + 202)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 12) + 394)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 12) + 586)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 12) + 778)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 12) + 970)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 12) + 1162)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 12) + 1354)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 12) + 1546)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 12) + 1738)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 12) + 1930)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 12) + 2122)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 12) + 2314)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 12) + 2506)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 12) + 2698)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 12) + 2890)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 12) + 11)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 12) + 203)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 12) + 395)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 12) + 587)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 12) + 779)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 12) + 971)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 12) + 1163)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 12) + 1355)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 12) + 1547)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 12) + 1739)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 12) + 1931)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 12) + 2123)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 12) + 2315)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 12) + 2507)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 12) + 2699)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 252) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 12) + 2891)]));
          }
        }
      }
      for (int i1_inner = 0; i1_inner < 16; ++i1_inner) {
        compute[(((((int)blockIdx.x) * 784) + (i1_inner * 49)) + ((int)threadIdx.x))] = max((conv2d_nchw[i1_inner] + bias[((((int)blockIdx.x) * 16) + i1_inner)]), 0.000000e+00f);
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 187-191

A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.

.. GENERATED FROM PYTHON SOURCE LINES 191-213

.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Resume search:
    Get devices for measurement successfully!






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 6 minutes  20.417 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
