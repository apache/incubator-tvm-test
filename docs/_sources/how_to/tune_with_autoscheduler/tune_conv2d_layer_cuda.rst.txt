
.. DO NOT EDIT. THIS FILE WAS AUTOMATICALLY GENERATED BY
.. TVM'S MONKEY-PATCHED VERSION OF SPHINX-GALLERY. TO MAKE
.. CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.py"

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        This tutorial can be used interactively with Google Colab! You can also click
        :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>` to run the Jupyter notebook locally.

        .. image:: https://raw.githubusercontent.com/tlc-pack/web-data/main/images/utilities/colab_button.svg
            :align: center
            :target: https://colab.research.google.com/github/apache/tvm-site/blob/asf-site/docs/_downloads/5f1f7bd7d90710fd404f7bcdc4965622/tune_conv2d_layer_cuda.ipynb
            :width: 300px

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.

.. GENERATED FROM PYTHON SOURCE LINES 39-47

.. code-block:: default


    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python








.. GENERATED FROM PYTHON SOURCE LINES 51-56

Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.

.. GENERATED FROM PYTHON SOURCE LINES 56-68

.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]









.. GENERATED FROM PYTHON SOURCE LINES 69-72

Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.

.. GENERATED FROM PYTHON SOURCE LINES 72-85

.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)





.. GENERATED FROM PYTHON SOURCE LINES 86-103

Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.

.. GENERATED FROM PYTHON SOURCE LINES 103-113

.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Get devices for measurement successfully!




.. GENERATED FROM PYTHON SOURCE LINES 114-120

Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.

.. GENERATED FROM PYTHON SOURCE LINES 120-129

.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx








.. GENERATED FROM PYTHON SOURCE LINES 130-133

We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.

.. GENERATED FROM PYTHON SOURCE LINES 133-137

.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Lowered TIR:
    # from tvm.script import ir as I
    # from tvm.script import tir as T

    @I.ir_module
    class Module:
        @T.prim_func
        def main(data: T.Buffer((1, 512, 7, 7), "float32"), kernel: T.Buffer((512, 512, 3, 3), "float32"), bias: T.Buffer((1, 512, 1, 1), "float32"), compute: T.Buffer((1, 512, 7, 7), "float32")):
            T.func_attr({"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True})
            blockIdx_x = T.env_thread("blockIdx.x")
            T.launch_thread(blockIdx_x, 32)
            conv2d_nchw = T.allocate([8], "float32", "local")
            pad_temp_shared = T.allocate([1296], "float32", "shared")
            kernel_shared = T.allocate([2304], "float32", "shared")
            threadIdx_x = T.env_thread("threadIdx.x")
            T.launch_thread(threadIdx_x, 98)
            conv2d_nchw_1 = T.Buffer((4,), data=conv2d_nchw, scope="local", align=8)
            conv2d_nchw_1[0] = T.float32(0)
            conv2d_nchw_1[2] = T.float32(0)
            conv2d_nchw_1[4] = T.float32(0)
            conv2d_nchw_1[6] = T.float32(0)
            conv2d_nchw_1[1] = T.float32(0)
            conv2d_nchw_1[3] = T.float32(0)
            conv2d_nchw_1[5] = T.float32(0)
            conv2d_nchw_1[7] = T.float32(0)
            for rc_outer_outer in range(32):
                cse_var_1: T.int32 = rc_outer_outer * 144
                threadIdx_x_1 = T.env_thread("threadIdx.x")
                pad_temp_shared_1 = T.Buffer((1296,), data=pad_temp_shared, scope="shared")
                with T.launch_thread(threadIdx_x_1, 98):
                    if T.likely(threadIdx_x_1 < 72):
                        pad_temp_shared_1[threadIdx_x_1 * 18] = T.float32(0)
                    data_1 = T.Buffer((25088,), data=data.data)
                    if T.likely(threadIdx_x_1 < 72):
                        pad_temp_shared_1[threadIdx_x_1 * 18 + 1] = T.if_then_else(1 <= threadIdx_x_1 * 2 % 9 and threadIdx_x_1 * 2 % 9 < 8, data_1[rc_outer_outer * 784 + threadIdx_x_1 * 2 // 9 * 49 + threadIdx_x_1 * 2 % 9 * 7 - 7], T.float32(0))
                    if T.likely(threadIdx_x_1 < 72):
                        pad_temp_shared_1[threadIdx_x_1 * 18 + 2] = T.if_then_else(1 <= threadIdx_x_1 * 2 % 9 and threadIdx_x_1 * 2 % 9 < 8, data_1[rc_outer_outer * 784 + threadIdx_x_1 * 2 // 9 * 49 + threadIdx_x_1 * 2 % 9 * 7 - 6], T.float32(0))
                    if T.likely(threadIdx_x_1 < 72):
                        pad_temp_shared_1[threadIdx_x_1 * 18 + 3] = T.if_then_else(1 <= threadIdx_x_1 * 2 % 9 and threadIdx_x_1 * 2 % 9 < 8, data_1[rc_outer_outer * 784 + threadIdx_x_1 * 2 // 9 * 49 + threadIdx_x_1 * 2 % 9 * 7 - 5], T.float32(0))
                    if T.likely(threadIdx_x_1 < 72):
                        pad_temp_shared_1[threadIdx_x_1 * 18 + 4] = T.if_then_else(1 <= threadIdx_x_1 * 2 % 9 and threadIdx_x_1 * 2 % 9 < 8, data_1[rc_outer_outer * 784 + threadIdx_x_1 * 2 // 9 * 49 + threadIdx_x_1 * 2 % 9 * 7 - 4], T.float32(0))
                    if T.likely(threadIdx_x_1 < 72):
                        pad_temp_shared_1[threadIdx_x_1 * 18 + 5] = T.if_then_else(1 <= threadIdx_x_1 * 2 % 9 and threadIdx_x_1 * 2 % 9 < 8, data_1[rc_outer_outer * 784 + threadIdx_x_1 * 2 // 9 * 49 + threadIdx_x_1 * 2 % 9 * 7 - 3], T.float32(0))
                    if T.likely(threadIdx_x_1 < 72):
                        pad_temp_shared_1[threadIdx_x_1 * 18 + 6] = T.if_then_else(1 <= threadIdx_x_1 * 2 % 9 and threadIdx_x_1 * 2 % 9 < 8, data_1[rc_outer_outer * 784 + threadIdx_x_1 * 2 // 9 * 49 + threadIdx_x_1 * 2 % 9 * 7 - 2], T.float32(0))
                    if T.likely(threadIdx_x_1 < 72):
                        pad_temp_shared_1[threadIdx_x_1 * 18 + 7] = T.if_then_else(1 <= threadIdx_x_1 * 2 % 9 and threadIdx_x_1 * 2 % 9 < 8, data_1[rc_outer_outer * 784 + threadIdx_x_1 * 2 // 9 * 49 + threadIdx_x_1 * 2 % 9 * 7 - 1], T.float32(0))
                    if T.likely(threadIdx_x_1 < 72):
                        pad_temp_shared_1[threadIdx_x_1 * 18 + 8] = T.float32(0)
                    if T.likely(threadIdx_x_1 < 72):
                        pad_temp_shared_1[threadIdx_x_1 * 18 + 9] = T.float32(0)
                    if T.likely(threadIdx_x_1 < 72):
                        pad_temp_shared_1[threadIdx_x_1 * 18 + 10] = T.if_then_else(1 <= (threadIdx_x_1 * 2 + 1) % 9 and (threadIdx_x_1 * 2 + 1) % 9 < 8, data_1[rc_outer_outer * 784 + (threadIdx_x_1 * 2 + 1) // 9 * 49 + (threadIdx_x_1 * 2 + 1) % 9 * 7 - 7], T.float32(0))
                    if T.likely(threadIdx_x_1 < 72):
                        pad_temp_shared_1[threadIdx_x_1 * 18 + 11] = T.if_then_else(1 <= (threadIdx_x_1 * 2 + 1) % 9 and (threadIdx_x_1 * 2 + 1) % 9 < 8, data_1[rc_outer_outer * 784 + (threadIdx_x_1 * 2 + 1) // 9 * 49 + (threadIdx_x_1 * 2 + 1) % 9 * 7 - 6], T.float32(0))
                    if T.likely(threadIdx_x_1 < 72):
                        pad_temp_shared_1[threadIdx_x_1 * 18 + 12] = T.if_then_else(1 <= (threadIdx_x_1 * 2 + 1) % 9 and (threadIdx_x_1 * 2 + 1) % 9 < 8, data_1[rc_outer_outer * 784 + (threadIdx_x_1 * 2 + 1) // 9 * 49 + (threadIdx_x_1 * 2 + 1) % 9 * 7 - 5], T.float32(0))
                    if T.likely(threadIdx_x_1 < 72):
                        pad_temp_shared_1[threadIdx_x_1 * 18 + 13] = T.if_then_else(1 <= (threadIdx_x_1 * 2 + 1) % 9 and (threadIdx_x_1 * 2 + 1) % 9 < 8, data_1[rc_outer_outer * 784 + (threadIdx_x_1 * 2 + 1) // 9 * 49 + (threadIdx_x_1 * 2 + 1) % 9 * 7 - 4], T.float32(0))
                    if T.likely(threadIdx_x_1 < 72):
                        pad_temp_shared_1[threadIdx_x_1 * 18 + 14] = T.if_then_else(1 <= (threadIdx_x_1 * 2 + 1) % 9 and (threadIdx_x_1 * 2 + 1) % 9 < 8, data_1[rc_outer_outer * 784 + (threadIdx_x_1 * 2 + 1) // 9 * 49 + (threadIdx_x_1 * 2 + 1) % 9 * 7 - 3], T.float32(0))
                    if T.likely(threadIdx_x_1 < 72):
                        pad_temp_shared_1[threadIdx_x_1 * 18 + 15] = T.if_then_else(1 <= (threadIdx_x_1 * 2 + 1) % 9 and (threadIdx_x_1 * 2 + 1) % 9 < 8, data_1[rc_outer_outer * 784 + (threadIdx_x_1 * 2 + 1) // 9 * 49 + (threadIdx_x_1 * 2 + 1) % 9 * 7 - 2], T.float32(0))
                    if T.likely(threadIdx_x_1 < 72):
                        pad_temp_shared_1[threadIdx_x_1 * 18 + 16] = T.if_then_else(1 <= (threadIdx_x_1 * 2 + 1) % 9 and (threadIdx_x_1 * 2 + 1) % 9 < 8, data_1[rc_outer_outer * 784 + (threadIdx_x_1 * 2 + 1) // 9 * 49 + (threadIdx_x_1 * 2 + 1) % 9 * 7 - 1], T.float32(0))
                    if T.likely(threadIdx_x_1 < 72):
                        pad_temp_shared_1[threadIdx_x_1 * 18 + 17] = T.float32(0)
                threadIdx_x_2 = T.env_thread("threadIdx.x")
                kernel_shared_1 = T.Buffer((2304,), data=kernel_shared, scope="shared")
                kernel_1 = T.Buffer((2359296,), data=kernel.data)
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2] = kernel_1[blockIdx_x * 73728 + cse_var_1 + threadIdx_x_2]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 98] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 98) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 98) % 144]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 196] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 196) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 52) % 144]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 294] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 294) // 144 * 4608 + cse_var_1 + threadIdx_x_2 + 6]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 392] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 392) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 104) % 144]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 490] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 490) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 58) % 144]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 588] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 588) // 144 * 4608 + cse_var_1 + threadIdx_x_2 + 12]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 686] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 686) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 110) % 144]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 784] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 784) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 64) % 144]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 882] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 882) // 144 * 4608 + cse_var_1 + threadIdx_x_2 + 18]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 980] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 980) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 116) % 144]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 1078] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1078) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 70) % 144]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 1176] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1176) // 144 * 4608 + cse_var_1 + threadIdx_x_2 + 24]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 1274] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1274) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 122) % 144]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 1372] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1372) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 76) % 144]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 1470] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1470) // 144 * 4608 + cse_var_1 + threadIdx_x_2 + 30]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 1568] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1568) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 128) % 144]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 1666] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1666) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 82) % 144]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 1764] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1764) // 144 * 4608 + cse_var_1 + threadIdx_x_2 + 36]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 1862] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1862) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 134) % 144]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 1960] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1960) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 88) % 144]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 2058] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 2058) // 144 * 4608 + cse_var_1 + threadIdx_x_2 + 42]
                with T.launch_thread(threadIdx_x_2, 98):
                    kernel_shared_1[threadIdx_x_2 + 2156] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 2156) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 140) % 144]
                with T.launch_thread(threadIdx_x_2, 98):
                    if T.likely(threadIdx_x_2 < 50):
                        kernel_shared_1[threadIdx_x_2 + 2254] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 2254) // 144 * 4608 + cse_var_1 + threadIdx_x_2 + 94]
                for rc_outer_inner in range(4):
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 576]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1152]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1728]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 144]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 720]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1296]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1872]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 3]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 579]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1155]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1731]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 147]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 723]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1299]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1875]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 6]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 582]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1158]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1734]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 150]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 726]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1302]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1878]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 9]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 585]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1161]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1737]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 153]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 729]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1305]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1881]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 12]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 588]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1164]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1740]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 156]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 732]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1308]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1884]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 15]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 591]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1167]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1743]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 159]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 735]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1311]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1887]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 162] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 18]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 162] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 594]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 162] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1170]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 162] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1746]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 162] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 162]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 162] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 738]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 162] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1314]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 162] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1890]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 171] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 21]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 171] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 597]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 171] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1173]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 171] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1749]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 171] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 165]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 171] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 741]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 171] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1317]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 171] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1893]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 180] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 24]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 180] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 600]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 180] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1176]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 180] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1752]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 180] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 168]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 180] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 744]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 180] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1320]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 180] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1896]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 243] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 27]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 243] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 603]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 243] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1179]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 243] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1755]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 243] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 171]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 243] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 747]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 243] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1323]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 243] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1899]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 252] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 30]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 252] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 606]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 252] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1182]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 252] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1758]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 252] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 174]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 252] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 750]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 252] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1326]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 252] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1902]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 261] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 33]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 261] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 609]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 261] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1185]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 261] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1761]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 261] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 177]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 261] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 753]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 261] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1329]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 261] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1905]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 577]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1153]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1729]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 145]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 721]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1297]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1873]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 4]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 580]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1156]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1732]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 148]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 724]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1300]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1876]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 7]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 583]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1159]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1735]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 151]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 727]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1303]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1879]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 10]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 586]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1162]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1738]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 154]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 730]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1306]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1882]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 13]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 589]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1165]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1741]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 157]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 733]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1309]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1885]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 16]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 592]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1168]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1744]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 160]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 736]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1312]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1888]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 163] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 19]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 163] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 595]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 163] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1171]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 163] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1747]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 163] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 163]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 163] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 739]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 163] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1315]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 163] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1891]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 172] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 22]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 172] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 598]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 172] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1174]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 172] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1750]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 172] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 166]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 172] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 742]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 172] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1318]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 172] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1894]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 181] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 25]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 181] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 601]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 181] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1177]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 181] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1753]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 181] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 169]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 181] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 745]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 181] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1321]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 181] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1897]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 244] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 28]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 244] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 604]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 244] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1180]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 244] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1756]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 244] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 172]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 244] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 748]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 244] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1324]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 244] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1900]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 253] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 31]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 253] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 607]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 253] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1183]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 253] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1759]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 253] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 175]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 253] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 751]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 253] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1327]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 253] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1903]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 262] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 34]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 262] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 610]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 262] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1186]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 262] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1762]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 262] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 178]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 262] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 754]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 262] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1330]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 262] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1906]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 2]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 578]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1154]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1730]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 146]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 722]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1298]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1874]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 5]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 581]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1157]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1733]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 149]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 725]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1301]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1877]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 8]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 584]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1160]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1736]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 152]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 728]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1304]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1880]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 11]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 587]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1163]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1739]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 155]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 731]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1307]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1883]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 14]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 590]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1166]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1742]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 158]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 734]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1310]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1886]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 17]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 593]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1169]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1745]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 161]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 737]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1313]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1889]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 164] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 20]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 164] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 596]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 164] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1172]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 164] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1748]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 164] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 164]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 164] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 740]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 164] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1316]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 164] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1892]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 173] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 23]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 173] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 599]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 173] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1175]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 173] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1751]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 173] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 167]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 173] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 743]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 173] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1319]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 173] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1895]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 182] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 26]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 182] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 602]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 182] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1178]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 182] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1754]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 182] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 170]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 182] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 746]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 182] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1322]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 182] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1898]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 245] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 29]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 245] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 605]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 245] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1181]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 245] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1757]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 245] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 173]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 245] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 749]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 245] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1325]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 245] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1901]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 254] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 32]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 254] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 608]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 254] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1184]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 254] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1760]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 254] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 176]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 254] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 752]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 254] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1328]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 254] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1904]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 263] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 35]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 263] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 611]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 263] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1187]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 263] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1763]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 263] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 179]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 263] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 755]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 263] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1331]
                    conv2d_nchw_1[7] = conv2d_nchw_1[7] + pad_temp_shared_1[rc_outer_inner * 324 + threadIdx_x % 49 // 7 * 9 + threadIdx_x % 7 + 263] * kernel_shared_1[threadIdx_x // 49 * 288 + rc_outer_inner * 36 + 1907]
            for i1_inner in range(2):
                compute_1 = T.Buffer((25088,), data=compute.data)
                bias_1 = T.Buffer((512,), data=bias.data)
                compute_1[blockIdx_x * 784 + threadIdx_x // 49 * 98 + i1_inner * 49 + threadIdx_x % 49] = T.max(conv2d_nchw_1[i1_inner] + bias_1[blockIdx_x * 16 + threadIdx_x // 49 * 2 + i1_inner], T.float32(0))
                compute_1[blockIdx_x * 784 + threadIdx_x // 49 * 98 + i1_inner * 49 + threadIdx_x % 49 + 196] = T.max(conv2d_nchw_1[i1_inner + 2] + bias_1[blockIdx_x * 16 + threadIdx_x // 49 * 2 + i1_inner + 4], T.float32(0))
                compute_1[blockIdx_x * 784 + threadIdx_x // 49 * 98 + i1_inner * 49 + threadIdx_x % 49 + 392] = T.max(conv2d_nchw_1[i1_inner + 4] + bias_1[blockIdx_x * 16 + threadIdx_x // 49 * 2 + i1_inner + 8], T.float32(0))
                compute_1[blockIdx_x * 784 + threadIdx_x // 49 * 98 + i1_inner * 49 + threadIdx_x % 49 + 588] = T.max(conv2d_nchw_1[i1_inner + 6] + bias_1[blockIdx_x * 16 + threadIdx_x // 49 * 2 + i1_inner + 12], T.float32(0))




.. GENERATED FROM PYTHON SOURCE LINES 138-141

Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.

.. GENERATED FROM PYTHON SOURCE LINES 141-168

.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Execution time of this operator: 0.226 ms




.. GENERATED FROM PYTHON SOURCE LINES 169-174

Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

.. GENERATED FROM PYTHON SOURCE LINES 176-179

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.

.. GENERATED FROM PYTHON SOURCE LINES 179-186

.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=2)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=2)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=4)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=7)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=7)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=4)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=4)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=3)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=1)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=1)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=3)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=2)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=2)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=4)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=7)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=7)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=98)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=18)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=98)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 512)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(98) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[8];
      __shared__ float pad_temp_shared[1296];
      __shared__ float kernel_shared[2304];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[7] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 32; ++rc_outer_outer) {
        __syncthreads();
        if (((int)threadIdx.x) < 72) {
          pad_temp_shared[(((int)threadIdx.x) * 18)] = 0.000000e+00f;
        }
        if (((int)threadIdx.x) < 72) {
          pad_temp_shared[((((int)threadIdx.x) * 18) + 1)] = (((1 <= ((((int)threadIdx.x) * 2) % 9)) && (((((int)threadIdx.x) * 2) % 9) < 8)) ? data[((((rc_outer_outer * 784) + (((((int)threadIdx.x) * 2) / 9) * 49)) + (((((int)threadIdx.x) * 2) % 9) * 7)) - 7)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 72) {
          pad_temp_shared[((((int)threadIdx.x) * 18) + 2)] = (((1 <= ((((int)threadIdx.x) * 2) % 9)) && (((((int)threadIdx.x) * 2) % 9) < 8)) ? data[((((rc_outer_outer * 784) + (((((int)threadIdx.x) * 2) / 9) * 49)) + (((((int)threadIdx.x) * 2) % 9) * 7)) - 6)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 72) {
          pad_temp_shared[((((int)threadIdx.x) * 18) + 3)] = (((1 <= ((((int)threadIdx.x) * 2) % 9)) && (((((int)threadIdx.x) * 2) % 9) < 8)) ? data[((((rc_outer_outer * 784) + (((((int)threadIdx.x) * 2) / 9) * 49)) + (((((int)threadIdx.x) * 2) % 9) * 7)) - 5)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 72) {
          pad_temp_shared[((((int)threadIdx.x) * 18) + 4)] = (((1 <= ((((int)threadIdx.x) * 2) % 9)) && (((((int)threadIdx.x) * 2) % 9) < 8)) ? data[((((rc_outer_outer * 784) + (((((int)threadIdx.x) * 2) / 9) * 49)) + (((((int)threadIdx.x) * 2) % 9) * 7)) - 4)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 72) {
          pad_temp_shared[((((int)threadIdx.x) * 18) + 5)] = (((1 <= ((((int)threadIdx.x) * 2) % 9)) && (((((int)threadIdx.x) * 2) % 9) < 8)) ? data[((((rc_outer_outer * 784) + (((((int)threadIdx.x) * 2) / 9) * 49)) + (((((int)threadIdx.x) * 2) % 9) * 7)) - 3)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 72) {
          pad_temp_shared[((((int)threadIdx.x) * 18) + 6)] = (((1 <= ((((int)threadIdx.x) * 2) % 9)) && (((((int)threadIdx.x) * 2) % 9) < 8)) ? data[((((rc_outer_outer * 784) + (((((int)threadIdx.x) * 2) / 9) * 49)) + (((((int)threadIdx.x) * 2) % 9) * 7)) - 2)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 72) {
          pad_temp_shared[((((int)threadIdx.x) * 18) + 7)] = (((1 <= ((((int)threadIdx.x) * 2) % 9)) && (((((int)threadIdx.x) * 2) % 9) < 8)) ? data[((((rc_outer_outer * 784) + (((((int)threadIdx.x) * 2) / 9) * 49)) + (((((int)threadIdx.x) * 2) % 9) * 7)) - 1)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 72) {
          pad_temp_shared[((((int)threadIdx.x) * 18) + 8)] = 0.000000e+00f;
        }
        if (((int)threadIdx.x) < 72) {
          pad_temp_shared[((((int)threadIdx.x) * 18) + 9)] = 0.000000e+00f;
        }
        if (((int)threadIdx.x) < 72) {
          pad_temp_shared[((((int)threadIdx.x) * 18) + 10)] = (((1 <= (((((int)threadIdx.x) * 2) + 1) % 9)) && ((((((int)threadIdx.x) * 2) + 1) % 9) < 8)) ? data[((((rc_outer_outer * 784) + ((((((int)threadIdx.x) * 2) + 1) / 9) * 49)) + ((((((int)threadIdx.x) * 2) + 1) % 9) * 7)) - 7)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 72) {
          pad_temp_shared[((((int)threadIdx.x) * 18) + 11)] = (((1 <= (((((int)threadIdx.x) * 2) + 1) % 9)) && ((((((int)threadIdx.x) * 2) + 1) % 9) < 8)) ? data[((((rc_outer_outer * 784) + ((((((int)threadIdx.x) * 2) + 1) / 9) * 49)) + ((((((int)threadIdx.x) * 2) + 1) % 9) * 7)) - 6)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 72) {
          pad_temp_shared[((((int)threadIdx.x) * 18) + 12)] = (((1 <= (((((int)threadIdx.x) * 2) + 1) % 9)) && ((((((int)threadIdx.x) * 2) + 1) % 9) < 8)) ? data[((((rc_outer_outer * 784) + ((((((int)threadIdx.x) * 2) + 1) / 9) * 49)) + ((((((int)threadIdx.x) * 2) + 1) % 9) * 7)) - 5)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 72) {
          pad_temp_shared[((((int)threadIdx.x) * 18) + 13)] = (((1 <= (((((int)threadIdx.x) * 2) + 1) % 9)) && ((((((int)threadIdx.x) * 2) + 1) % 9) < 8)) ? data[((((rc_outer_outer * 784) + ((((((int)threadIdx.x) * 2) + 1) / 9) * 49)) + ((((((int)threadIdx.x) * 2) + 1) % 9) * 7)) - 4)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 72) {
          pad_temp_shared[((((int)threadIdx.x) * 18) + 14)] = (((1 <= (((((int)threadIdx.x) * 2) + 1) % 9)) && ((((((int)threadIdx.x) * 2) + 1) % 9) < 8)) ? data[((((rc_outer_outer * 784) + ((((((int)threadIdx.x) * 2) + 1) / 9) * 49)) + ((((((int)threadIdx.x) * 2) + 1) % 9) * 7)) - 3)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 72) {
          pad_temp_shared[((((int)threadIdx.x) * 18) + 15)] = (((1 <= (((((int)threadIdx.x) * 2) + 1) % 9)) && ((((((int)threadIdx.x) * 2) + 1) % 9) < 8)) ? data[((((rc_outer_outer * 784) + ((((((int)threadIdx.x) * 2) + 1) / 9) * 49)) + ((((((int)threadIdx.x) * 2) + 1) % 9) * 7)) - 2)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 72) {
          pad_temp_shared[((((int)threadIdx.x) * 18) + 16)] = (((1 <= (((((int)threadIdx.x) * 2) + 1) % 9)) && ((((((int)threadIdx.x) * 2) + 1) % 9) < 8)) ? data[((((rc_outer_outer * 784) + ((((((int)threadIdx.x) * 2) + 1) / 9) * 49)) + ((((((int)threadIdx.x) * 2) + 1) % 9) * 7)) - 1)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 72) {
          pad_temp_shared[((((int)threadIdx.x) * 18) + 17)] = 0.000000e+00f;
        }
        kernel_shared[((int)threadIdx.x)] = kernel[(((((int)blockIdx.x) * 73728) + (rc_outer_outer * 144)) + ((int)threadIdx.x))];
        kernel_shared[(((int)threadIdx.x) + 98)] = kernel[((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 98) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 98) % 144))];
        kernel_shared[(((int)threadIdx.x) + 196)] = kernel[((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 196) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 52) % 144))];
        kernel_shared[(((int)threadIdx.x) + 294)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 294) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 6)];
        kernel_shared[(((int)threadIdx.x) + 392)] = kernel[((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 392) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 104) % 144))];
        kernel_shared[(((int)threadIdx.x) + 490)] = kernel[((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 490) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 58) % 144))];
        kernel_shared[(((int)threadIdx.x) + 588)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 588) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 12)];
        kernel_shared[(((int)threadIdx.x) + 686)] = kernel[((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 686) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 110) % 144))];
        kernel_shared[(((int)threadIdx.x) + 784)] = kernel[((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 784) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 64) % 144))];
        kernel_shared[(((int)threadIdx.x) + 882)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 882) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 18)];
        kernel_shared[(((int)threadIdx.x) + 980)] = kernel[((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 980) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 116) % 144))];
        kernel_shared[(((int)threadIdx.x) + 1078)] = kernel[((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1078) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 70) % 144))];
        kernel_shared[(((int)threadIdx.x) + 1176)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1176) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 24)];
        kernel_shared[(((int)threadIdx.x) + 1274)] = kernel[((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1274) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 122) % 144))];
        kernel_shared[(((int)threadIdx.x) + 1372)] = kernel[((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1372) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 76) % 144))];
        kernel_shared[(((int)threadIdx.x) + 1470)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1470) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 30)];
        kernel_shared[(((int)threadIdx.x) + 1568)] = kernel[((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1568) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 128) % 144))];
        kernel_shared[(((int)threadIdx.x) + 1666)] = kernel[((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1666) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 82) % 144))];
        kernel_shared[(((int)threadIdx.x) + 1764)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1764) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 36)];
        kernel_shared[(((int)threadIdx.x) + 1862)] = kernel[((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1862) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 134) % 144))];
        kernel_shared[(((int)threadIdx.x) + 1960)] = kernel[((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1960) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 88) % 144))];
        kernel_shared[(((int)threadIdx.x) + 2058)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2058) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 42)];
        kernel_shared[(((int)threadIdx.x) + 2156)] = kernel[((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2156) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 140) % 144))];
        if (((int)threadIdx.x) < 50) {
          kernel_shared[(((int)threadIdx.x) + 2254)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2254) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 94)];
        }
        __syncthreads();
        for (int rc_outer_inner = 0; rc_outer_inner < 4; ++rc_outer_inner) {
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[(((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36))]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 576)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1152)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1728)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 144)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 720)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1296)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1872)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 3)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 579)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1155)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1731)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 147)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 723)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1299)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1875)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 6)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 582)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1158)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1734)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 150)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 726)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1302)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1878)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 9)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 585)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1161)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1737)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 153)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 729)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1305)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1881)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 12)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 588)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1164)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1740)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 156)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 732)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1308)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1884)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 15)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 591)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1167)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1743)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 159)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 735)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1311)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1887)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 18)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 594)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1170)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1746)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 162)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 738)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1314)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1890)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 21)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 597)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1173)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1749)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 165)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 741)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1317)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1893)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 24)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 600)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1176)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1752)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 168)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 744)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1320)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1896)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 27)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 603)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1179)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1755)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 171)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 747)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1323)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1899)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 30)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 606)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1182)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1758)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 174)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 750)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1326)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1902)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 33)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 609)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1185)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1761)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 177)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 753)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1329)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1905)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 577)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1153)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1729)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 145)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 721)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1297)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1873)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 4)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 580)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1156)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1732)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 148)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 724)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1300)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1876)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 7)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 583)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1159)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1735)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 151)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 727)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1303)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1879)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 10)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 586)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1162)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1738)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 154)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 730)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1306)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1882)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 13)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 589)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1165)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1741)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 157)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 733)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1309)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1885)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 16)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 592)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1168)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1744)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 160)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 736)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1312)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1888)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 163)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 19)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 163)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 595)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 163)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1171)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 163)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1747)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 163)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 163)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 163)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 739)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 163)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1315)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 163)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1891)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 172)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 22)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 172)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 598)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 172)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1174)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 172)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1750)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 172)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 166)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 172)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 742)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 172)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1318)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 172)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1894)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 181)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 25)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 181)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 601)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 181)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1177)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 181)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1753)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 181)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 169)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 181)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 745)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 181)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1321)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 181)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1897)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 244)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 28)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 244)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 604)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 244)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1180)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 244)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1756)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 244)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 172)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 244)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 748)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 244)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1324)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 244)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1900)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 31)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 607)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1183)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1759)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 175)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 751)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1327)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1903)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 262)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 34)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 262)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 610)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 262)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1186)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 262)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1762)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 262)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 178)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 262)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 754)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 262)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1330)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 262)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1906)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 2)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 578)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1154)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1730)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 146)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 722)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1298)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1874)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 5)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 581)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1157)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1733)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 149)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 725)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1301)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1877)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 8)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 584)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1160)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1736)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 152)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 728)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1304)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1880)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 11)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 587)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1163)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1739)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 155)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 731)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1307)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1883)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 14)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 590)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1166)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1742)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 158)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 734)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1310)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1886)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 17)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 593)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1169)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1745)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 161)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 737)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1313)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1889)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 164)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 20)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 164)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 596)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 164)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1172)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 164)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1748)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 164)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 164)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 164)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 740)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 164)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1316)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 164)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1892)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 173)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 23)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 173)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 599)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 173)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1175)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 173)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1751)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 173)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 167)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 173)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 743)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 173)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1319)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 173)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1895)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 182)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 26)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 182)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 602)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 182)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1178)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 182)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1754)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 182)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 170)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 182)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 746)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 182)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1322)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 182)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1898)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 245)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 29)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 245)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 605)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 245)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1181)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 245)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1757)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 245)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 173)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 245)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 749)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 245)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1325)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 245)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1901)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 32)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 608)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1184)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1760)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 176)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 752)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1328)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1904)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 263)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 35)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 263)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 611)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 263)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1187)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 263)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1763)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 263)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 179)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 263)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 755)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 263)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1331)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 324) + (((((int)threadIdx.x) % 49) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 263)] * kernel_shared[((((((int)threadIdx.x) / 49) * 288) + (rc_outer_inner * 36)) + 1907)]));
        }
      }
      for (int i1_inner = 0; i1_inner < 2; ++i1_inner) {
        compute[((((((int)blockIdx.x) * 784) + ((((int)threadIdx.x) / 49) * 98)) + (i1_inner * 49)) + (((int)threadIdx.x) % 49))] = max((conv2d_nchw[i1_inner] + bias[(((((int)blockIdx.x) * 16) + ((((int)threadIdx.x) / 49) * 2)) + i1_inner)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 784) + ((((int)threadIdx.x) / 49) * 98)) + (i1_inner * 49)) + (((int)threadIdx.x) % 49)) + 196)] = max((conv2d_nchw[(i1_inner + 2)] + bias[((((((int)blockIdx.x) * 16) + ((((int)threadIdx.x) / 49) * 2)) + i1_inner) + 4)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 784) + ((((int)threadIdx.x) / 49) * 98)) + (i1_inner * 49)) + (((int)threadIdx.x) % 49)) + 392)] = max((conv2d_nchw[(i1_inner + 4)] + bias[((((((int)blockIdx.x) * 16) + ((((int)threadIdx.x) / 49) * 2)) + i1_inner) + 8)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 784) + ((((int)threadIdx.x) / 49) * 98)) + (i1_inner * 49)) + (((int)threadIdx.x) % 49)) + 588)] = max((conv2d_nchw[(i1_inner + 6)] + bias[((((((int)blockIdx.x) * 16) + ((((int)threadIdx.x) / 49) * 2)) + i1_inner) + 12)]), 0.000000e+00f);
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 187-191

A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.

.. GENERATED FROM PYTHON SOURCE LINES 191-213

.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Resume search:
    /venv/apache-tvm-py3.7/lib/python3.7/site-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 5 minutes  59.738 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
