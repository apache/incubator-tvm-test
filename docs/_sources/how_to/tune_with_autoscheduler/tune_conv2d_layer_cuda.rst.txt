
.. DO NOT EDIT. THIS FILE WAS AUTOMATICALLY GENERATED BY
.. TVM'S MONKEY-PATCHED VERSION OF SPHINX-GALLERY. TO MAKE
.. CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.py"

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        This tutorial can be used interactively with Google Colab! You can also click
        :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>` to run the Jupyter notebook locally.

        .. image:: https://raw.githubusercontent.com/tlc-pack/web-data/main/images/utilities/colab_button.svg
            :align: center
            :target: https://colab.research.google.com/github/apache/tvm-site/blob/asf-site/docs/_downloads/5f1f7bd7d90710fd404f7bcdc4965622/tune_conv2d_layer_cuda.ipynb
            :width: 300px

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.

.. GENERATED FROM PYTHON SOURCE LINES 39-47

.. code-block:: default


    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python








.. GENERATED FROM PYTHON SOURCE LINES 51-56

Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.

.. GENERATED FROM PYTHON SOURCE LINES 56-68

.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]









.. GENERATED FROM PYTHON SOURCE LINES 69-72

Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.

.. GENERATED FROM PYTHON SOURCE LINES 72-85

.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)





.. GENERATED FROM PYTHON SOURCE LINES 86-103

Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.

.. GENERATED FROM PYTHON SOURCE LINES 103-113

.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Get devices for measurement successfully!




.. GENERATED FROM PYTHON SOURCE LINES 114-120

Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.

.. GENERATED FROM PYTHON SOURCE LINES 120-129

.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx








.. GENERATED FROM PYTHON SOURCE LINES 130-133

We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.

.. GENERATED FROM PYTHON SOURCE LINES 133-137

.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Lowered TIR:
    # from tvm.script import ir as I
    # from tvm.script import tir as T

    @I.ir_module
    class Module:
        @T.prim_func
        def main(data: T.Buffer((1, 512, 7, 7), "float32"), kernel: T.Buffer((512, 512, 3, 3), "float32"), bias: T.Buffer((1, 512, 1, 1), "float32"), compute: T.Buffer((1, 512, 7, 7), "float32")):
            T.func_attr({"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True})
            blockIdx_x = T.env_thread("blockIdx.x")
            T.launch_thread(blockIdx_x, 112)
            conv2d_nchw = T.allocate([7], "float32", "local")
            pad_temp_shared = T.allocate([432], "float32", "shared")
            kernel_shared = T.allocate([4608], "float32", "shared")
            threadIdx_x = T.env_thread("threadIdx.x")
            T.launch_thread(threadIdx_x, 32)
            conv2d_nchw_1 = T.Buffer((7,), data=conv2d_nchw, scope="local", align=16)
            conv2d_nchw_1[0] = T.float32(0)
            conv2d_nchw_1[1] = T.float32(0)
            conv2d_nchw_1[2] = T.float32(0)
            conv2d_nchw_1[3] = T.float32(0)
            conv2d_nchw_1[4] = T.float32(0)
            conv2d_nchw_1[5] = T.float32(0)
            conv2d_nchw_1[6] = T.float32(0)
            for rc_outer_outer in range(32):
                cse_var_2: T.int32 = rc_outer_outer * 784
                cse_var_1: T.int32 = rc_outer_outer * 144
                threadIdx_x_1 = T.env_thread("threadIdx.x")
                pad_temp_shared_1 = T.Buffer((432,), data=pad_temp_shared, scope="shared")
                data_1 = T.Buffer((25088,), data=data.data)
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1] = T.if_then_else(1 <= threadIdx_x_1 % 27 // 9 + blockIdx_x % 7 and threadIdx_x_1 % 27 // 9 + blockIdx_x % 7 < 8 and 1 <= threadIdx_x_1 % 9 and threadIdx_x_1 % 9 < 8, data_1[cse_var_2 + threadIdx_x_1 // 27 * 49 + threadIdx_x_1 % 27 // 9 * 7 + blockIdx_x % 7 * 7 + threadIdx_x_1 % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 32] = T.if_then_else(1 <= (threadIdx_x_1 + 5) % 27 // 9 + blockIdx_x % 7 and (threadIdx_x_1 + 5) % 27 // 9 + blockIdx_x % 7 < 8 and 1 <= (threadIdx_x_1 + 5) % 9 and (threadIdx_x_1 + 5) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 32) // 27 * 49 + (threadIdx_x_1 + 5) % 27 // 9 * 7 + blockIdx_x % 7 * 7 + (threadIdx_x_1 + 5) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 64] = T.if_then_else(1 <= (threadIdx_x_1 + 10) % 27 // 9 + blockIdx_x % 7 and (threadIdx_x_1 + 10) % 27 // 9 + blockIdx_x % 7 < 8 and 1 <= (threadIdx_x_1 + 1) % 9 and (threadIdx_x_1 + 1) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 64) // 27 * 49 + (threadIdx_x_1 + 10) % 27 // 9 * 7 + blockIdx_x % 7 * 7 + (threadIdx_x_1 + 1) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 96] = T.if_then_else(1 <= (threadIdx_x_1 + 15) % 27 // 9 + blockIdx_x % 7 and (threadIdx_x_1 + 15) % 27 // 9 + blockIdx_x % 7 < 8 and 1 <= (threadIdx_x_1 + 6) % 9 and (threadIdx_x_1 + 6) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 96) // 27 * 49 + (threadIdx_x_1 + 15) % 27 // 9 * 7 + blockIdx_x % 7 * 7 + (threadIdx_x_1 + 6) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 128] = T.if_then_else(1 <= (threadIdx_x_1 + 20) % 27 // 9 + blockIdx_x % 7 and (threadIdx_x_1 + 20) % 27 // 9 + blockIdx_x % 7 < 8 and 1 <= (threadIdx_x_1 + 2) % 9 and (threadIdx_x_1 + 2) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 128) // 27 * 49 + (threadIdx_x_1 + 20) % 27 // 9 * 7 + blockIdx_x % 7 * 7 + (threadIdx_x_1 + 2) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 160] = T.if_then_else(1 <= (threadIdx_x_1 + 25) % 27 // 9 + blockIdx_x % 7 and (threadIdx_x_1 + 25) % 27 // 9 + blockIdx_x % 7 < 8 and 1 <= (threadIdx_x_1 + 7) % 9 and (threadIdx_x_1 + 7) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 160) // 27 * 49 + (threadIdx_x_1 + 25) % 27 // 9 * 7 + blockIdx_x % 7 * 7 + (threadIdx_x_1 + 7) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 192] = T.if_then_else(1 <= (threadIdx_x_1 + 3) % 27 // 9 + blockIdx_x % 7 and (threadIdx_x_1 + 3) % 27 // 9 + blockIdx_x % 7 < 8 and 1 <= (threadIdx_x_1 + 3) % 9 and (threadIdx_x_1 + 3) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 192) // 27 * 49 + (threadIdx_x_1 + 3) % 27 // 9 * 7 + blockIdx_x % 7 * 7 + (threadIdx_x_1 + 3) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 224] = T.if_then_else(1 <= (threadIdx_x_1 + 8) % 27 // 9 + blockIdx_x % 7 and (threadIdx_x_1 + 8) % 27 // 9 + blockIdx_x % 7 < 8 and 1 <= (threadIdx_x_1 + 8) % 9 and (threadIdx_x_1 + 8) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 224) // 27 * 49 + (threadIdx_x_1 + 8) % 27 // 9 * 7 + blockIdx_x % 7 * 7 + (threadIdx_x_1 + 8) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 256] = T.if_then_else(1 <= (threadIdx_x_1 + 13) % 27 // 9 + blockIdx_x % 7 and (threadIdx_x_1 + 13) % 27 // 9 + blockIdx_x % 7 < 8 and 1 <= (threadIdx_x_1 + 4) % 9 and (threadIdx_x_1 + 4) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 256) // 27 * 49 + (threadIdx_x_1 + 13) % 27 // 9 * 7 + blockIdx_x % 7 * 7 + (threadIdx_x_1 + 4) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 288] = T.if_then_else(1 <= blockIdx_x % 7 + (threadIdx_x_1 // 9 + 2) % 3 and blockIdx_x % 7 + (threadIdx_x_1 // 9 + 2) % 3 < 8 and 1 <= threadIdx_x_1 % 9 and threadIdx_x_1 % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 288) // 27 * 49 + blockIdx_x % 7 * 7 + (threadIdx_x_1 // 9 + 2) % 3 * 7 + threadIdx_x_1 % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 320] = T.if_then_else(1 <= (threadIdx_x_1 + 23) % 27 // 9 + blockIdx_x % 7 and (threadIdx_x_1 + 23) % 27 // 9 + blockIdx_x % 7 < 8 and 1 <= (threadIdx_x_1 + 5) % 9 and (threadIdx_x_1 + 5) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 320) // 27 * 49 + (threadIdx_x_1 + 23) % 27 // 9 * 7 + blockIdx_x % 7 * 7 + (threadIdx_x_1 + 5) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 352] = T.if_then_else(1 <= (threadIdx_x_1 + 1) % 27 // 9 + blockIdx_x % 7 and (threadIdx_x_1 + 1) % 27 // 9 + blockIdx_x % 7 < 8 and 1 <= (threadIdx_x_1 + 1) % 9 and (threadIdx_x_1 + 1) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 352) // 27 * 49 + (threadIdx_x_1 + 1) % 27 // 9 * 7 + blockIdx_x % 7 * 7 + (threadIdx_x_1 + 1) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 384] = T.if_then_else(1 <= (threadIdx_x_1 + 6) % 27 // 9 + blockIdx_x % 7 and (threadIdx_x_1 + 6) % 27 // 9 + blockIdx_x % 7 < 8 and 1 <= (threadIdx_x_1 + 6) % 9 and (threadIdx_x_1 + 6) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 384) // 27 * 49 + (threadIdx_x_1 + 6) % 27 // 9 * 7 + blockIdx_x % 7 * 7 + (threadIdx_x_1 + 6) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    if T.likely(threadIdx_x_1 < 16):
                        pad_temp_shared_1[threadIdx_x_1 + 416] = T.if_then_else((threadIdx_x_1 + 11) % 27 // 9 + blockIdx_x % 7 < 8 and 1 <= (threadIdx_x_1 + 2) % 9 and (threadIdx_x_1 + 2) % 9 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 416) // 27 * 49 + (threadIdx_x_1 + 11) % 27 // 9 * 7 + blockIdx_x % 7 * 7 + (threadIdx_x_1 + 2) % 9 - 8], T.float32(0))
                threadIdx_x_2 = T.env_thread("threadIdx.x")
                kernel_shared_1 = T.Buffer((4608,), data=kernel_shared, scope="shared")
                kernel_1 = T.Buffer((2359296,), data=kernel.data)
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2] = kernel_1[blockIdx_x // 7 * 147456 + cse_var_1 + threadIdx_x_2]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 32] = kernel_1[blockIdx_x // 7 * 147456 + cse_var_1 + (threadIdx_x_2 + 32) // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 64] = kernel_1[blockIdx_x // 7 * 147456 + cse_var_1 + (threadIdx_x_2 + 64) // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 96] = kernel_1[blockIdx_x // 7 * 147456 + cse_var_1 + threadIdx_x_2 + 96]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 128] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 128) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 128) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 160] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 160) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 16) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 192] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 192) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 16) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 224] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 224) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 80) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 256] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 256) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 112) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 288] = kernel_1[blockIdx_x // 7 * 147456 + cse_var_1 + threadIdx_x_2 + 9216]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 320] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 320) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 32) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 352] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 352) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 64) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 384] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 384) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 32) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 416] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 416) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 128) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 448] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 448) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 16) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 480] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 480) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 16) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 512] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 512) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 80) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 544] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 544) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 112) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 576] = kernel_1[blockIdx_x // 7 * 147456 + cse_var_1 + threadIdx_x_2 + 18432]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 608] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 608) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 32) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 640] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 640) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 64) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 672] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 672) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 32) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 704] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 704) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 128) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 736] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 736) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 16) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 768] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 768) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 16) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 800] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 800) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 80) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 832] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 832) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 112) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 864] = kernel_1[blockIdx_x // 7 * 147456 + cse_var_1 + threadIdx_x_2 + 27648]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 896] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 896) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 32) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 928] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 928) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 64) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 960] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 960) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 32) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 992] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 992) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 128) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1024] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1024) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 16) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1056] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1056) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 16) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1088] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1088) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 80) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1120] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1120) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 112) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1152] = kernel_1[blockIdx_x // 7 * 147456 + cse_var_1 + threadIdx_x_2 + 36864]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1184] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1184) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 32) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1216] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1216) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 64) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1248] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1248) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 32) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1280] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1280) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 128) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1312] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1312) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 16) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1344] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1344) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 16) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1376] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1376) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 80) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1408] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1408) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 112) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1440] = kernel_1[blockIdx_x // 7 * 147456 + cse_var_1 + threadIdx_x_2 + 46080]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1472] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1472) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 32) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1504] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1504) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 64) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1536] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1536) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 32) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1568] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1568) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 128) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1600] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1600) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 16) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1632] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1632) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 16) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1664] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1664) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 80) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1696] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1696) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 112) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1728] = kernel_1[blockIdx_x // 7 * 147456 + cse_var_1 + threadIdx_x_2 + 55296]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1760] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1760) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 32) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1792] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1792) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 64) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1824] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1824) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 32) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1856] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1856) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 128) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1888] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1888) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 16) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1920] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1920) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 16) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1952] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1952) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 80) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1984] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 1984) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 112) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2016] = kernel_1[blockIdx_x // 7 * 147456 + cse_var_1 + threadIdx_x_2 + 64512]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2048] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2048) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 32) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2080] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2080) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 64) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2112] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2112) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 32) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2144] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2144) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 128) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2176] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2176) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 16) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2208] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2208) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 16) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2240] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2240) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 80) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2272] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2272) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 112) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2304] = kernel_1[blockIdx_x // 7 * 147456 + cse_var_1 + threadIdx_x_2 + 73728]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2336] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2336) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 32) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2368] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2368) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 64) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2400] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2400) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 32) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2432] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2432) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 128) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2464] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2464) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 16) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2496] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2496) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 16) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2528] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2528) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 80) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2560] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2560) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 112) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2592] = kernel_1[blockIdx_x // 7 * 147456 + cse_var_1 + threadIdx_x_2 + 82944]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2624] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2624) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 32) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2656] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2656) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 64) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2688] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2688) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 32) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2720] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2720) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 128) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2752] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2752) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 16) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2784] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2784) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 16) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2816] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2816) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 80) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2848] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2848) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 112) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2880] = kernel_1[blockIdx_x // 7 * 147456 + cse_var_1 + threadIdx_x_2 + 92160]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2912] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2912) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 32) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2944] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2944) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 64) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2976] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 2976) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 32) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3008] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3008) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 128) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3040] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3040) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 16) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3072] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3072) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 16) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3104] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3104) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 80) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3136] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3136) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 112) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3168] = kernel_1[blockIdx_x // 7 * 147456 + cse_var_1 + threadIdx_x_2 + 101376]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3200] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3200) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 32) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3232] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3232) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 64) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3264] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3264) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 32) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3296] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3296) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 128) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3328] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3328) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 16) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3360] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3360) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 16) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3392] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3392) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 80) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3424] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3424) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 112) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3456] = kernel_1[blockIdx_x // 7 * 147456 + cse_var_1 + threadIdx_x_2 + 110592]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3488] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3488) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 32) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3520] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3520) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 64) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3552] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3552) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 32) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3584] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3584) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 128) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3616] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3616) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 16) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3648] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3648) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 16) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3680] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3680) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 80) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3712] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3712) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 112) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3744] = kernel_1[blockIdx_x // 7 * 147456 + cse_var_1 + threadIdx_x_2 + 119808]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3776] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3776) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 32) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3808] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3808) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 64) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3840] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3840) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 32) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3872] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3872) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 128) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3904] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3904) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 16) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3936] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3936) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 16) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3968] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 3968) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 80) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4000] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 4000) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 112) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4032] = kernel_1[blockIdx_x // 7 * 147456 + cse_var_1 + threadIdx_x_2 + 129024]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4064] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 4064) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 32) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4096] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 4096) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 64) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4128] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 4128) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 32) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4160] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 4160) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 128) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4192] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 4192) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 16) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4224] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 4224) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 16) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4256] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 4256) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 80) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4288] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 4288) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 112) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4320] = kernel_1[blockIdx_x // 7 * 147456 + cse_var_1 + threadIdx_x_2 + 138240]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4352] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 4352) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 32) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4384] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 4384) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 64) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4416] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 4416) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 32) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4448] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 4448) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 128) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4480] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 4480) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 16) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4512] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 4512) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 16) * 3 + threadIdx_x_2 % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4544] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 4544) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 80) % 144 // 3 * 3 + (threadIdx_x_2 + 2) % 3]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4576] = kernel_1[blockIdx_x // 7 * 147456 + (threadIdx_x_2 + 4576) // 144 * 4608 + cse_var_1 + (threadIdx_x_2 + 112) % 144 // 3 * 3 + (threadIdx_x_2 + 1) % 3]
                for ry_outer_inner in range(3):
                    cse_var_115: T.int32 = ry_outer_inner * 9
                    cse_var_114: T.int32 = cse_var_115 + 88
                    cse_var_113: T.int32 = cse_var_115 + 87
                    cse_var_112: T.int32 = cse_var_115 + 86
                    cse_var_111: T.int32 = cse_var_115 + 85
                    cse_var_110: T.int32 = cse_var_115 + 84
                    cse_var_109: T.int32 = cse_var_115 + 83
                    cse_var_108: T.int32 = cse_var_115 + 82
                    cse_var_107: T.int32 = cse_var_115 + 7
                    cse_var_106: T.int32 = cse_var_115 + 61
                    cse_var_105: T.int32 = cse_var_115 + 60
                    cse_var_104: T.int32 = cse_var_115 + 6
                    cse_var_103: T.int32 = cse_var_115 + 59
                    cse_var_102: T.int32 = cse_var_115 + 58
                    cse_var_101: T.int32 = cse_var_115 + 57
                    cse_var_100: T.int32 = cse_var_115 + 56
                    cse_var_99: T.int32 = cse_var_115 + 55
                    cse_var_98: T.int32 = cse_var_115 + 5
                    cse_var_97: T.int32 = cse_var_115 + 412
                    cse_var_96: T.int32 = cse_var_115 + 411
                    cse_var_95: T.int32 = cse_var_115 + 410
                    cse_var_94: T.int32 = cse_var_115 + 409
                    cse_var_93: T.int32 = cse_var_115 + 408
                    cse_var_92: T.int32 = cse_var_115 + 407
                    cse_var_91: T.int32 = cse_var_115 + 406
                    cse_var_90: T.int32 = cse_var_115 + 4
                    cse_var_89: T.int32 = cse_var_115 + 385
                    cse_var_88: T.int32 = cse_var_115 + 384
                    cse_var_87: T.int32 = cse_var_115 + 383
                    cse_var_86: T.int32 = cse_var_115 + 382
                    cse_var_85: T.int32 = cse_var_115 + 381
                    cse_var_84: T.int32 = cse_var_115 + 380
                    cse_var_83: T.int32 = cse_var_115 + 379
                    cse_var_82: T.int32 = cse_var_115 + 358
                    cse_var_81: T.int32 = cse_var_115 + 357
                    cse_var_80: T.int32 = cse_var_115 + 356
                    cse_var_79: T.int32 = cse_var_115 + 355
                    cse_var_78: T.int32 = cse_var_115 + 354
                    cse_var_77: T.int32 = cse_var_115 + 353
                    cse_var_76: T.int32 = cse_var_115 + 352
                    cse_var_75: T.int32 = cse_var_115 + 34
                    cse_var_74: T.int32 = cse_var_115 + 331
                    cse_var_73: T.int32 = cse_var_115 + 330
                    cse_var_72: T.int32 = cse_var_115 + 33
                    cse_var_71: T.int32 = cse_var_115 + 329
                    cse_var_70: T.int32 = cse_var_115 + 328
                    cse_var_69: T.int32 = cse_var_115 + 327
                    cse_var_68: T.int32 = cse_var_115 + 326
                    cse_var_67: T.int32 = cse_var_115 + 325
                    cse_var_66: T.int32 = cse_var_115 + 32
                    cse_var_65: T.int32 = cse_var_115 + 31
                    cse_var_64: T.int32 = cse_var_115 + 304
                    cse_var_63: T.int32 = cse_var_115 + 303
                    cse_var_62: T.int32 = cse_var_115 + 302
                    cse_var_61: T.int32 = cse_var_115 + 301
                    cse_var_60: T.int32 = cse_var_115 + 300
                    cse_var_59: T.int32 = cse_var_115 + 30
                    cse_var_58: T.int32 = cse_var_115 + 3
                    cse_var_57: T.int32 = cse_var_115 + 299
                    cse_var_56: T.int32 = cse_var_115 + 298
                    cse_var_55: T.int32 = cse_var_115 + 29
                    cse_var_54: T.int32 = cse_var_115 + 28
                    cse_var_53: T.int32 = cse_var_115 + 277
                    cse_var_52: T.int32 = cse_var_115 + 276
                    cse_var_51: T.int32 = cse_var_115 + 275
                    cse_var_50: T.int32 = cse_var_115 + 274
                    cse_var_49: T.int32 = cse_var_115 + 273
                    cse_var_48: T.int32 = cse_var_115 + 272
                    cse_var_47: T.int32 = cse_var_115 + 271
                    cse_var_46: T.int32 = cse_var_115 + 250
                    cse_var_45: T.int32 = cse_var_115 + 249
                    cse_var_44: T.int32 = cse_var_115 + 248
                    cse_var_43: T.int32 = cse_var_115 + 247
                    cse_var_42: T.int32 = cse_var_115 + 246
                    cse_var_41: T.int32 = cse_var_115 + 245
                    cse_var_40: T.int32 = cse_var_115 + 244
                    cse_var_39: T.int32 = cse_var_115 + 223
                    cse_var_38: T.int32 = cse_var_115 + 222
                    cse_var_37: T.int32 = cse_var_115 + 221
                    cse_var_36: T.int32 = cse_var_115 + 220
                    cse_var_35: T.int32 = cse_var_115 + 219
                    cse_var_34: T.int32 = cse_var_115 + 218
                    cse_var_33: T.int32 = cse_var_115 + 217
                    cse_var_32: T.int32 = cse_var_115 + 2
                    cse_var_31: T.int32 = cse_var_115 + 196
                    cse_var_30: T.int32 = cse_var_115 + 195
                    cse_var_29: T.int32 = cse_var_115 + 194
                    cse_var_28: T.int32 = cse_var_115 + 193
                    cse_var_27: T.int32 = cse_var_115 + 192
                    cse_var_26: T.int32 = cse_var_115 + 191
                    cse_var_25: T.int32 = cse_var_115 + 190
                    cse_var_24: T.int32 = cse_var_115 + 169
                    cse_var_23: T.int32 = cse_var_115 + 168
                    cse_var_22: T.int32 = cse_var_115 + 167
                    cse_var_21: T.int32 = cse_var_115 + 166
                    cse_var_20: T.int32 = cse_var_115 + 165
                    cse_var_19: T.int32 = cse_var_115 + 164
                    cse_var_18: T.int32 = cse_var_115 + 163
                    cse_var_17: T.int32 = cse_var_115 + 142
                    cse_var_16: T.int32 = cse_var_115 + 141
                    cse_var_15: T.int32 = cse_var_115 + 140
                    cse_var_14: T.int32 = cse_var_115 + 139
                    cse_var_13: T.int32 = cse_var_115 + 138
                    cse_var_12: T.int32 = cse_var_115 + 137
                    cse_var_11: T.int32 = cse_var_115 + 136
                    cse_var_10: T.int32 = cse_var_115 + 115
                    cse_var_9: T.int32 = cse_var_115 + 114
                    cse_var_8: T.int32 = cse_var_115 + 113
                    cse_var_7: T.int32 = cse_var_115 + 112
                    cse_var_6: T.int32 = cse_var_115 + 111
                    cse_var_5: T.int32 = cse_var_115 + 110
                    cse_var_4: T.int32 = cse_var_115 + 109
                    cse_var_3: T.int32 = cse_var_115 + 1
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_115] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_3] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 1]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_32] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 2]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_115 + 27] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 9]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_54] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 10]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_55] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 11]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_115 + 54] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 18]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_99] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 19]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_100] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 20]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_115 + 81] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 27]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_108] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 28]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_109] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 29]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_115 + 108] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 36]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_4] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 37]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_5] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 38]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_115 + 135] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 45]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_11] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 46]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_12] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 47]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_115 + 162] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 54]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_18] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 55]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_19] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 56]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_115 + 189] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 63]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_25] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 64]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_26] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 65]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_115 + 216] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 72]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_33] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 73]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_34] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 74]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_115 + 243] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 81]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_40] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 82]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_41] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 83]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_115 + 270] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 90]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_47] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 91]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_48] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 92]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_115 + 297] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 99]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_56] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 100]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_57] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 101]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_115 + 324] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 108]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_67] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 109]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_68] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 110]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_115 + 351] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 117]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_76] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 118]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_77] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 119]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_115 + 378] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 126]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_83] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 127]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_84] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 128]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_115 + 405] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 135]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_91] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 136]
                    conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[cse_var_92] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 137]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_3] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_32] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 1]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_58] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 2]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_54] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 9]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_55] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 10]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_59] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 11]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_99] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 18]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_100] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 19]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_101] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 20]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_108] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 27]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_109] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 28]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_110] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 29]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_4] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 36]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_5] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 37]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_6] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 38]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_11] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 45]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_12] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 46]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_13] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 47]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_18] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 54]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_19] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 55]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_20] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 56]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_25] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 63]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_26] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 64]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_27] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 65]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_33] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 72]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_34] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 73]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_35] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 74]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_40] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 81]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_41] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 82]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_42] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 83]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_47] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 90]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_48] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 91]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_49] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 92]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_56] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 99]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_57] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 100]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_60] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 101]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_67] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 108]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_68] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 109]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_69] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 110]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_76] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 117]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_77] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 118]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_78] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 119]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_83] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 126]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_84] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 127]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_85] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 128]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_91] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 135]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_92] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 136]
                    conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[cse_var_93] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 137]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_32] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_58] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 1]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_90] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 2]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_55] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 9]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_59] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 10]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_65] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 11]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_100] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 18]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_101] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 19]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_102] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 20]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_109] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 27]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_110] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 28]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_111] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 29]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_5] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 36]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_6] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 37]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_7] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 38]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_12] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 45]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_13] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 46]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_14] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 47]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_19] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 54]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_20] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 55]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_21] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 56]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_26] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 63]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_27] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 64]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_28] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 65]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_34] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 72]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_35] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 73]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_36] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 74]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_41] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 81]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_42] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 82]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_43] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 83]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_48] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 90]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_49] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 91]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_50] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 92]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_57] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 99]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_60] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 100]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_61] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 101]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_68] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 108]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_69] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 109]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_70] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 110]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_77] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 117]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_78] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 118]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_79] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 119]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_84] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 126]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_85] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 127]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_86] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 128]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_92] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 135]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_93] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 136]
                    conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[cse_var_94] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 137]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_58] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_90] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 1]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_98] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 2]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_59] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 9]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_65] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 10]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_66] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 11]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_101] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 18]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_102] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 19]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_103] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 20]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_110] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 27]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_111] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 28]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_112] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 29]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_6] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 36]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_7] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 37]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_8] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 38]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_13] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 45]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_14] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 46]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_15] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 47]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_20] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 54]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_21] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 55]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_22] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 56]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_27] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 63]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_28] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 64]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_29] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 65]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_35] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 72]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_36] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 73]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_37] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 74]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_42] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 81]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_43] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 82]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_44] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 83]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_49] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 90]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_50] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 91]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_51] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 92]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_60] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 99]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_61] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 100]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_62] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 101]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_69] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 108]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_70] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 109]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_71] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 110]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_78] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 117]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_79] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 118]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_80] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 119]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_85] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 126]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_86] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 127]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_87] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 128]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_93] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 135]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_94] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 136]
                    conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[cse_var_95] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 137]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_90] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_98] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 1]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_104] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 2]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_65] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 9]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_66] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 10]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_72] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 11]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_102] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 18]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_103] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 19]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_105] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 20]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_111] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 27]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_112] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 28]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_113] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 29]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_7] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 36]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_8] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 37]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_9] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 38]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_14] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 45]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_15] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 46]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_16] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 47]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_21] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 54]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_22] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 55]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_23] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 56]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_28] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 63]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_29] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 64]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_30] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 65]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_36] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 72]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_37] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 73]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_38] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 74]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_43] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 81]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_44] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 82]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_45] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 83]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_50] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 90]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_51] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 91]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_52] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 92]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_61] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 99]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_62] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 100]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_63] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 101]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_70] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 108]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_71] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 109]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_73] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 110]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_79] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 117]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_80] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 118]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_81] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 119]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_86] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 126]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_87] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 127]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_88] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 128]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_94] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 135]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_95] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 136]
                    conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[cse_var_96] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 137]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_98] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_104] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 1]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_107] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 2]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_66] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 9]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_72] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 10]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_75] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 11]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_103] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 18]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_105] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 19]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_106] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 20]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_112] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 27]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_113] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 28]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_114] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 29]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_8] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 36]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_9] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 37]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_10] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 38]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_15] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 45]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_16] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 46]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_17] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 47]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_22] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 54]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_23] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 55]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_24] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 56]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_29] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 63]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_30] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 64]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_31] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 65]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_37] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 72]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_38] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 73]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_39] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 74]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_44] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 81]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_45] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 82]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_46] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 83]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_51] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 90]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_52] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 91]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_53] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 92]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_62] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 99]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_63] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 100]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_64] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 101]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_71] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 108]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_73] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 109]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_74] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 110]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_80] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 117]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_81] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 118]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_82] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 119]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_87] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 126]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_88] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 127]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_89] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 128]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_95] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 135]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_96] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 136]
                    conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[cse_var_97] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 137]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_104] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_107] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 1]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_115 + 8] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 2]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_72] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 9]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_75] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 10]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_115 + 35] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 11]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_105] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 18]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_106] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 19]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_115 + 62] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 20]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_113] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 27]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_114] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 28]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_115 + 89] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 29]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_9] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 36]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_10] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 37]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_115 + 116] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 38]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_16] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 45]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_17] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 46]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_115 + 143] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 47]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_23] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 54]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_24] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 55]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_115 + 170] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 56]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_30] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 63]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_31] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 64]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_115 + 197] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 65]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_38] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 72]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_39] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 73]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_115 + 224] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 74]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_45] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 81]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_46] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 82]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_115 + 251] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 83]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_52] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 90]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_53] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 91]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_115 + 278] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 92]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_63] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 99]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_64] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 100]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_115 + 305] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 101]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_73] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 108]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_74] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 109]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_115 + 332] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 110]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_81] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 117]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_82] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 118]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_115 + 359] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 119]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_88] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 126]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_89] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 127]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_115 + 386] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 128]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_96] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 135]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_97] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 136]
                    conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[cse_var_115 + 413] * kernel_shared_1[threadIdx_x * 144 + ry_outer_inner * 3 + 137]
            for i3_inner in range(7):
                compute_1 = T.Buffer((25088,), data=compute.data)
                bias_1 = T.Buffer((512,), data=bias.data)
                compute_1[blockIdx_x // 7 * 1568 + threadIdx_x * 49 + blockIdx_x % 7 * 7 + i3_inner] = T.max(conv2d_nchw_1[i3_inner] + bias_1[blockIdx_x // 7 * 32 + threadIdx_x], T.float32(0))




.. GENERATED FROM PYTHON SOURCE LINES 138-141

Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.

.. GENERATED FROM PYTHON SOURCE LINES 141-168

.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Execution time of this operator: 0.251 ms




.. GENERATED FROM PYTHON SOURCE LINES 169-174

Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

.. GENERATED FROM PYTHON SOURCE LINES 176-179

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.

.. GENERATED FROM PYTHON SOURCE LINES 179-186

.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=1)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=32)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=1)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=7)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=16)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=1)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=1)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=3)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=3)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=1)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=1)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=32)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=1)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=1)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=7)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=1)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=32)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=32)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 512)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(32) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[7];
      __shared__ float pad_temp_shared[432];
      __shared__ float kernel_shared[4608];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 32; ++rc_outer_outer) {
        __syncthreads();
        pad_temp_shared[((int)threadIdx.x)] = (((((1 <= (((((int)threadIdx.x) % 27) / 9) + (((int)blockIdx.x) % 7))) && ((((((int)threadIdx.x) % 27) / 9) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + ((((int)threadIdx.x) / 27) * 49)) + (((((int)threadIdx.x) % 27) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + (((int)threadIdx.x) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 32)] = (((((1 <= ((((((int)threadIdx.x) + 5) % 27) / 9) + (((int)blockIdx.x) % 7))) && (((((((int)threadIdx.x) + 5) % 27) / 9) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 32) / 27) * 49)) + ((((((int)threadIdx.x) + 5) % 27) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 64)] = (((((1 <= ((((((int)threadIdx.x) + 10) % 27) / 9) + (((int)blockIdx.x) % 7))) && (((((((int)threadIdx.x) + 10) % 27) / 9) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 64) / 27) * 49)) + ((((((int)threadIdx.x) + 10) % 27) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 96)] = (((((1 <= ((((((int)threadIdx.x) + 15) % 27) / 9) + (((int)blockIdx.x) % 7))) && (((((((int)threadIdx.x) + 15) % 27) / 9) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 96) / 27) * 49)) + ((((((int)threadIdx.x) + 15) % 27) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 128)] = (((((1 <= ((((((int)threadIdx.x) + 20) % 27) / 9) + (((int)blockIdx.x) % 7))) && (((((((int)threadIdx.x) + 20) % 27) / 9) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 128) / 27) * 49)) + ((((((int)threadIdx.x) + 20) % 27) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 160)] = (((((1 <= ((((((int)threadIdx.x) + 25) % 27) / 9) + (((int)blockIdx.x) % 7))) && (((((((int)threadIdx.x) + 25) % 27) / 9) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 160) / 27) * 49)) + ((((((int)threadIdx.x) + 25) % 27) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 192)] = (((((1 <= ((((((int)threadIdx.x) + 3) % 27) / 9) + (((int)blockIdx.x) % 7))) && (((((((int)threadIdx.x) + 3) % 27) / 9) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 192) / 27) * 49)) + ((((((int)threadIdx.x) + 3) % 27) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 224)] = (((((1 <= ((((((int)threadIdx.x) + 8) % 27) / 9) + (((int)blockIdx.x) % 7))) && (((((((int)threadIdx.x) + 8) % 27) / 9) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 224) / 27) * 49)) + ((((((int)threadIdx.x) + 8) % 27) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 256)] = (((((1 <= ((((((int)threadIdx.x) + 13) % 27) / 9) + (((int)blockIdx.x) % 7))) && (((((((int)threadIdx.x) + 13) % 27) / 9) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 256) / 27) * 49)) + ((((((int)threadIdx.x) + 13) % 27) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 288)] = (((((1 <= ((((int)blockIdx.x) % 7) + (((((int)threadIdx.x) / 9) + 2) % 3))) && (((((int)blockIdx.x) % 7) + (((((int)threadIdx.x) / 9) + 2) % 3)) < 8)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 288) / 27) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + ((((((int)threadIdx.x) / 9) + 2) % 3) * 7)) + (((int)threadIdx.x) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 320)] = (((((1 <= ((((((int)threadIdx.x) + 23) % 27) / 9) + (((int)blockIdx.x) % 7))) && (((((((int)threadIdx.x) + 23) % 27) / 9) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 320) / 27) * 49)) + ((((((int)threadIdx.x) + 23) % 27) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 352)] = (((((1 <= ((((((int)threadIdx.x) + 1) % 27) / 9) + (((int)blockIdx.x) % 7))) && (((((((int)threadIdx.x) + 1) % 27) / 9) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 352) / 27) * 49)) + ((((((int)threadIdx.x) + 1) % 27) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 384)] = (((((1 <= ((((((int)threadIdx.x) + 6) % 27) / 9) + (((int)blockIdx.x) % 7))) && (((((((int)threadIdx.x) + 6) % 27) / 9) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 384) / 27) * 49)) + ((((((int)threadIdx.x) + 6) % 27) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
        if (((int)threadIdx.x) < 16) {
          pad_temp_shared[(((int)threadIdx.x) + 416)] = (((((((((int)threadIdx.x) + 11) / 9) + (((int)blockIdx.x) % 7)) < 8) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 416) / 27) * 49)) + (((((int)threadIdx.x) + 11) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
        }
        kernel_shared[((int)threadIdx.x)] = kernel[((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x))];
        kernel_shared[(((int)threadIdx.x) + 32)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 64)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 96)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 128)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 128) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 160)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 160) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 192)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 192) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 224)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 224) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 256)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 256) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 288)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 9216)];
        kernel_shared[(((int)threadIdx.x) + 320)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 320) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 352)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 352) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 384)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 384) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 416)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 416) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 448)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 448) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 480)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 480) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 512)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 512) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 544)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 544) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 576)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 18432)];
        kernel_shared[(((int)threadIdx.x) + 608)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 608) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 640)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 640) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 672)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 672) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 704)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 704) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 736)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 736) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 768)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 768) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 800)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 800) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 832)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 832) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 864)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 27648)];
        kernel_shared[(((int)threadIdx.x) + 896)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 896) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 928)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 928) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 960)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 960) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 992)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 992) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1024)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1024) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1056)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1056) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 1088)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1088) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1120)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1120) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1152)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 36864)];
        kernel_shared[(((int)threadIdx.x) + 1184)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1184) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1216)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1216) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1248)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1248) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 1280)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1280) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1312)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1312) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1344)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1344) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 1376)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1376) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1408)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1408) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1440)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 46080)];
        kernel_shared[(((int)threadIdx.x) + 1472)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1472) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1504)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1504) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1536)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1536) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 1568)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1568) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1600)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1600) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1632)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1632) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 1664)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1664) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1696)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1696) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1728)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 55296)];
        kernel_shared[(((int)threadIdx.x) + 1760)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1760) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1792)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1792) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1824)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1824) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 1856)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1856) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1888)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1888) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1920)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1920) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 1952)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1952) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1984)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 1984) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2016)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 64512)];
        kernel_shared[(((int)threadIdx.x) + 2048)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2048) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2080)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2080) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2112)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2112) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 2144)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2144) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2176)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2176) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2208)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2208) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 2240)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2240) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2272)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2272) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2304)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 73728)];
        kernel_shared[(((int)threadIdx.x) + 2336)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2336) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2368)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2368) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2400)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2400) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 2432)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2432) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2464)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2464) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2496)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2496) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 2528)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2528) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2560)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2560) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2592)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 82944)];
        kernel_shared[(((int)threadIdx.x) + 2624)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2624) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2656)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2656) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2688)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2688) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 2720)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2720) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2752)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2752) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2784)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2784) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 2816)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2816) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2848)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2848) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2880)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 92160)];
        kernel_shared[(((int)threadIdx.x) + 2912)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2912) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2944)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2944) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2976)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 2976) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 3008)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3008) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3040)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3040) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3072)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3072) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 3104)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3104) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3136)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3136) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3168)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 101376)];
        kernel_shared[(((int)threadIdx.x) + 3200)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3200) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3232)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3232) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3264)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3264) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 3296)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3296) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3328)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3328) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3360)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3360) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 3392)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3392) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3424)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3424) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3456)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 110592)];
        kernel_shared[(((int)threadIdx.x) + 3488)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3488) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3520)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3520) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3552)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3552) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 3584)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3584) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3616)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3616) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3648)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3648) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 3680)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3680) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3712)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3712) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3744)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 119808)];
        kernel_shared[(((int)threadIdx.x) + 3776)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3776) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3808)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3808) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3840)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3840) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 3872)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3872) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3904)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3904) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3936)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3936) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 3968)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 3968) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4000)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4000) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4032)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 129024)];
        kernel_shared[(((int)threadIdx.x) + 4064)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4064) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4096)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4096) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4128)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4128) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 4160)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4160) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4192)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4192) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4224)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4224) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 4256)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4256) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4288)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4288) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4320)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 138240)];
        kernel_shared[(((int)threadIdx.x) + 4352)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4352) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4384)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4384) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4416)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4416) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 96)];
        kernel_shared[(((int)threadIdx.x) + 4448)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4448) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4480)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4480) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4512)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4512) / 144) * 4608)) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 4544)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4544) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4576)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (((((int)threadIdx.x) + 4576) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 112) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        __syncthreads();
        for (int ry_outer_inner = 0; ry_outer_inner < 3; ++ry_outer_inner) {
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(ry_outer_inner * 9)] * kernel_shared[((((int)threadIdx.x) * 144) + (ry_outer_inner * 3))]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 1)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 1)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 2)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 2)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 27)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 9)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 28)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 10)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 29)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 11)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 54)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 18)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 55)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 19)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 56)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 20)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 81)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 27)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 82)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 28)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 83)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 29)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 108)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 36)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 109)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 37)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 110)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 38)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 135)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 45)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 136)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 46)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 137)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 47)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 162)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 54)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 163)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 55)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 164)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 56)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 189)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 63)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 190)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 64)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 191)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 65)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 216)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 72)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 217)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 73)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 218)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 74)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 243)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 81)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 244)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 82)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 245)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 83)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 270)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 90)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 271)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 91)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 272)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 92)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 297)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 99)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 298)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 100)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 299)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 101)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 324)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 108)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 325)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 109)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 326)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 110)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 351)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 117)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 352)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 118)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 353)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 119)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 378)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 126)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 379)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 127)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 380)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 128)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 405)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 135)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 406)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 136)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((ry_outer_inner * 9) + 407)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 137)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 1)] * kernel_shared[((((int)threadIdx.x) * 144) + (ry_outer_inner * 3))]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 2)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 1)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 3)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 2)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 28)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 9)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 29)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 10)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 30)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 11)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 55)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 18)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 56)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 19)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 57)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 20)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 82)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 27)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 83)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 28)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 84)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 29)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 109)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 36)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 110)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 37)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 111)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 38)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 136)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 45)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 137)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 46)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 138)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 47)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 163)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 54)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 164)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 55)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 165)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 56)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 190)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 63)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 191)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 64)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 192)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 65)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 217)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 72)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 218)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 73)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 219)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 74)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 244)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 81)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 245)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 82)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 246)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 83)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 271)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 90)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 272)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 91)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 273)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 92)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 298)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 99)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 299)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 100)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 300)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 101)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 325)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 108)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 326)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 109)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 327)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 110)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 352)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 117)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 353)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 118)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 354)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 119)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 379)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 126)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 380)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 127)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 381)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 128)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 406)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 135)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 407)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 136)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((ry_outer_inner * 9) + 408)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 137)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 2)] * kernel_shared[((((int)threadIdx.x) * 144) + (ry_outer_inner * 3))]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 3)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 1)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 4)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 2)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 29)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 9)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 30)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 10)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 31)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 11)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 56)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 18)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 57)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 19)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 58)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 20)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 83)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 27)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 84)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 28)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 85)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 29)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 110)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 36)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 111)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 37)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 112)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 38)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 137)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 45)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 138)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 46)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 139)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 47)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 164)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 54)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 165)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 55)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 166)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 56)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 191)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 63)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 192)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 64)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 193)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 65)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 218)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 72)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 219)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 73)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 220)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 74)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 245)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 81)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 246)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 82)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 247)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 83)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 272)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 90)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 273)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 91)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 274)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 92)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 299)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 99)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 300)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 100)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 301)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 101)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 326)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 108)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 327)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 109)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 328)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 110)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 353)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 117)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 354)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 118)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 355)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 119)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 380)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 126)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 381)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 127)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 382)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 128)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 407)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 135)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 408)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 136)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((ry_outer_inner * 9) + 409)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 137)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 3)] * kernel_shared[((((int)threadIdx.x) * 144) + (ry_outer_inner * 3))]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 4)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 1)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 5)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 2)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 30)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 9)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 31)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 10)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 32)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 11)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 57)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 18)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 58)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 19)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 59)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 20)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 84)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 27)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 85)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 28)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 86)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 29)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 111)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 36)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 112)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 37)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 113)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 38)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 138)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 45)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 139)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 46)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 140)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 47)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 165)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 54)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 166)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 55)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 167)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 56)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 192)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 63)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 193)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 64)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 194)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 65)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 219)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 72)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 220)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 73)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 221)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 74)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 246)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 81)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 247)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 82)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 248)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 83)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 273)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 90)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 274)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 91)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 275)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 92)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 300)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 99)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 301)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 100)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 302)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 101)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 327)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 108)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 328)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 109)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 329)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 110)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 354)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 117)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 355)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 118)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 356)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 119)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 381)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 126)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 382)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 127)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 383)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 128)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 408)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 135)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 409)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 136)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((ry_outer_inner * 9) + 410)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 137)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 4)] * kernel_shared[((((int)threadIdx.x) * 144) + (ry_outer_inner * 3))]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 5)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 1)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 6)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 2)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 31)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 9)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 32)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 10)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 33)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 11)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 58)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 18)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 59)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 19)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 60)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 20)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 85)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 27)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 86)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 28)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 87)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 29)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 112)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 36)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 113)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 37)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 114)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 38)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 139)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 45)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 140)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 46)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 141)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 47)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 166)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 54)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 167)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 55)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 168)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 56)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 193)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 63)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 194)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 64)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 195)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 65)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 220)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 72)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 221)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 73)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 222)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 74)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 247)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 81)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 248)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 82)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 249)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 83)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 274)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 90)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 275)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 91)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 276)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 92)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 301)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 99)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 302)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 100)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 303)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 101)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 328)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 108)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 329)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 109)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 330)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 110)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 355)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 117)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 356)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 118)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 357)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 119)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 382)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 126)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 383)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 127)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 384)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 128)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 409)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 135)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 410)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 136)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((ry_outer_inner * 9) + 411)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 137)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 5)] * kernel_shared[((((int)threadIdx.x) * 144) + (ry_outer_inner * 3))]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 6)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 1)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 7)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 2)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 32)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 9)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 33)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 10)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 34)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 11)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 59)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 18)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 60)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 19)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 61)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 20)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 86)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 27)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 87)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 28)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 88)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 29)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 113)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 36)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 114)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 37)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 115)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 38)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 140)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 45)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 141)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 46)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 142)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 47)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 167)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 54)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 168)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 55)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 169)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 56)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 194)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 63)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 195)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 64)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 196)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 65)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 221)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 72)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 222)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 73)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 223)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 74)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 248)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 81)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 249)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 82)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 250)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 83)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 275)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 90)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 276)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 91)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 277)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 92)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 302)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 99)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 303)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 100)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 304)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 101)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 329)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 108)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 330)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 109)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 331)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 110)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 356)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 117)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 357)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 118)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 358)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 119)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 383)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 126)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 384)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 127)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 385)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 128)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 410)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 135)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 411)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 136)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((ry_outer_inner * 9) + 412)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 137)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 6)] * kernel_shared[((((int)threadIdx.x) * 144) + (ry_outer_inner * 3))]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 7)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 1)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 8)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 2)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 33)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 9)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 34)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 10)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 35)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 11)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 60)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 18)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 61)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 19)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 62)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 20)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 87)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 27)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 88)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 28)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 89)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 29)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 114)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 36)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 115)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 37)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 116)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 38)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 141)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 45)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 142)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 46)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 143)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 47)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 168)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 54)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 169)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 55)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 170)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 56)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 195)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 63)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 196)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 64)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 197)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 65)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 222)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 72)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 223)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 73)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 224)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 74)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 249)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 81)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 250)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 82)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 251)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 83)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 276)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 90)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 277)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 91)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 278)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 92)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 303)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 99)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 304)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 100)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 305)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 101)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 330)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 108)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 331)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 109)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 332)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 110)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 357)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 117)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 358)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 118)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 359)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 119)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 384)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 126)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 385)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 127)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 386)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 128)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 411)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 135)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 412)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 136)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((ry_outer_inner * 9) + 413)] * kernel_shared[(((((int)threadIdx.x) * 144) + (ry_outer_inner * 3)) + 137)]));
        }
      }
      for (int i3_inner = 0; i3_inner < 7; ++i3_inner) {
        compute[(((((((int)blockIdx.x) / 7) * 1568) + (((int)threadIdx.x) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + i3_inner)] = max((conv2d_nchw[i3_inner] + bias[(((((int)blockIdx.x) / 7) * 32) + ((int)threadIdx.x))]), 0.000000e+00f);
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 187-191

A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.

.. GENERATED FROM PYTHON SOURCE LINES 191-213

.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Resume search:
    /venv/apache-tvm-py3.7/lib/python3.7/site-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 5 minutes  42.565 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
