
.. DO NOT EDIT. THIS FILE WAS AUTOMATICALLY GENERATED BY
.. TVM'S MONKEY-PATCHED VERSION OF SPHINX-GALLERY. TO MAKE
.. CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.py"

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        This tutorial can be used interactively with Google Colab! You can also click
        :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>` to run the Jupyter notebook locally.

        .. image:: https://raw.githubusercontent.com/tlc-pack/web-data/main/images/utilities/colab_button.svg
            :align: center
            :target: https://colab.research.google.com/github/apache/tvm-site/blob/asf-site/docs/_downloads/5f1f7bd7d90710fd404f7bcdc4965622/tune_conv2d_layer_cuda.ipynb
            :width: 300px

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.

.. GENERATED FROM PYTHON SOURCE LINES 39-47

.. code-block:: default


    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python








.. GENERATED FROM PYTHON SOURCE LINES 51-56

Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.

.. GENERATED FROM PYTHON SOURCE LINES 56-68

.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]









.. GENERATED FROM PYTHON SOURCE LINES 69-72

Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.

.. GENERATED FROM PYTHON SOURCE LINES 72-85

.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)





.. GENERATED FROM PYTHON SOURCE LINES 86-103

Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.

.. GENERATED FROM PYTHON SOURCE LINES 103-113

.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Get devices for measurement successfully!




.. GENERATED FROM PYTHON SOURCE LINES 114-120

Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.

.. GENERATED FROM PYTHON SOURCE LINES 120-129

.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx








.. GENERATED FROM PYTHON SOURCE LINES 130-133

We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.

.. GENERATED FROM PYTHON SOURCE LINES 133-137

.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Lowered TIR:
    # from tvm.script import ir as I
    # from tvm.script import tir as T

    @I.ir_module
    class Module:
        @T.prim_func
        def main(data: T.Buffer((1, 512, 7, 7), "float32"), kernel: T.Buffer((512, 512, 3, 3), "float32"), bias: T.Buffer((1, 512, 1, 1), "float32"), compute: T.Buffer((1, 512, 7, 7), "float32")):
            T.func_attr({"from_legacy_te_schedule": T.bool(True), "global_symbol": "main", "tir.noalias": T.bool(True)})
            blockIdx_x = T.launch_thread("blockIdx.x", 128)
            conv2d_nchw = T.allocate([4], "float32", "local")
            pad_temp_shared = T.allocate([1296], "float32", "shared")
            kernel_shared = T.allocate([576], "float32", "shared")
            threadIdx_x = T.launch_thread("threadIdx.x", 49)
            conv2d_nchw_1 = T.Buffer((4,), data=conv2d_nchw, scope="local", align=8)
            conv2d_nchw_1[0] = T.float32(0)
            conv2d_nchw_1[2] = T.float32(0)
            conv2d_nchw_1[1] = T.float32(0)
            conv2d_nchw_1[3] = T.float32(0)
            for rc_outer_outer in range(32):
                cse_var_1: T.int32 = rc_outer_outer * 784
                threadIdx_x_1 = T.env_thread("threadIdx.x")
                pad_temp_shared_1 = T.Buffer((1296,), data=pad_temp_shared, scope="shared")
                data_1 = T.Buffer((25088,), data=data.data)
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1] = T.if_then_else(9 <= threadIdx_x_1 and 1 <= threadIdx_x_1 % 9 and threadIdx_x_1 % 9 < 8, data_1[cse_var_1 + threadIdx_x_1 // 9 * 7 + threadIdx_x_1 % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 49] = T.if_then_else(9 <= (threadIdx_x_1 + 49) % 81 and (threadIdx_x_1 + 49) % 81 < 72 and 1 <= (threadIdx_x_1 + 4) % 9 and (threadIdx_x_1 + 4) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 49) // 81 * 49 + (threadIdx_x_1 + 49) % 81 // 9 * 7 + (threadIdx_x_1 + 4) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 98] = T.if_then_else(1 <= (threadIdx_x_1 + 8) % 9 and (threadIdx_x_1 + 8) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 98) // 81 * 49 + (threadIdx_x_1 + 17) // 9 * 7 + (threadIdx_x_1 + 8) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 147] = T.if_then_else(9 <= (threadIdx_x_1 + 66) % 81 and (threadIdx_x_1 + 66) % 81 < 72 and 1 <= (threadIdx_x_1 + 3) % 9 and (threadIdx_x_1 + 3) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 147) // 81 * 49 + (threadIdx_x_1 + 66) % 81 // 9 * 7 + (threadIdx_x_1 + 3) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 196] = T.if_then_else(9 <= (threadIdx_x_1 + 34) % 81 and (threadIdx_x_1 + 34) % 81 < 72 and 1 <= (threadIdx_x_1 + 7) % 9 and (threadIdx_x_1 + 7) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 196) // 81 * 49 + (threadIdx_x_1 + 34) % 81 // 9 * 7 + (threadIdx_x_1 + 7) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 245] = T.if_then_else(7 <= threadIdx_x_1 and 1 <= (threadIdx_x_1 + 2) % 9 and (threadIdx_x_1 + 2) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 245) // 81 * 49 + (threadIdx_x_1 + 2) // 9 * 7 + (threadIdx_x_1 + 2) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 294] = T.if_then_else(9 <= (threadIdx_x_1 + 51) % 81 and (threadIdx_x_1 + 51) % 81 < 72 and 1 <= (threadIdx_x_1 + 6) % 9 and (threadIdx_x_1 + 6) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 294) // 81 * 49 + (threadIdx_x_1 + 51) % 81 // 9 * 7 + (threadIdx_x_1 + 6) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 343] = T.if_then_else(1 <= (threadIdx_x_1 + 1) % 9 and (threadIdx_x_1 + 1) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 343) // 81 * 49 + (threadIdx_x_1 + 19) // 9 * 7 + (threadIdx_x_1 + 1) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 392] = T.if_then_else(9 <= (threadIdx_x_1 + 68) % 81 and (threadIdx_x_1 + 68) % 81 < 72 and 1 <= (threadIdx_x_1 + 5) % 9 and (threadIdx_x_1 + 5) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 392) // 81 * 49 + (threadIdx_x_1 + 68) % 81 // 9 * 7 + (threadIdx_x_1 + 5) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 441] = T.if_then_else(1 <= (threadIdx_x_1 // 9 + 4) % 9 and (threadIdx_x_1 + 36) % 81 < 72 and 1 <= threadIdx_x_1 % 9 and threadIdx_x_1 % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 441) // 81 * 49 + (threadIdx_x_1 // 9 + 4) % 9 * 7 + threadIdx_x_1 % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 490] = T.if_then_else(5 <= threadIdx_x_1 and 1 <= (threadIdx_x_1 + 4) % 9 and (threadIdx_x_1 + 4) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 490) // 81 * 49 + (threadIdx_x_1 + 4) // 9 * 7 + (threadIdx_x_1 + 4) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 539] = T.if_then_else(9 <= (threadIdx_x_1 + 53) % 81 and (threadIdx_x_1 + 53) % 81 < 72 and 1 <= (threadIdx_x_1 + 8) % 9 and (threadIdx_x_1 + 8) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 539) // 81 * 49 + (threadIdx_x_1 + 53) % 81 // 9 * 7 + (threadIdx_x_1 + 8) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 588] = T.if_then_else(1 <= (threadIdx_x_1 + 3) % 9 and (threadIdx_x_1 + 3) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 588) // 81 * 49 + (threadIdx_x_1 + 21) // 9 * 7 + (threadIdx_x_1 + 3) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 637] = T.if_then_else(9 <= (threadIdx_x_1 + 70) % 81 and (threadIdx_x_1 + 70) % 81 < 72 and 1 <= (threadIdx_x_1 + 7) % 9 and (threadIdx_x_1 + 7) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 637) // 81 * 49 + (threadIdx_x_1 + 70) % 81 // 9 * 7 + (threadIdx_x_1 + 7) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 686] = T.if_then_else(9 <= (threadIdx_x_1 + 38) % 81 and (threadIdx_x_1 + 38) % 81 < 72 and 1 <= (threadIdx_x_1 + 2) % 9 and (threadIdx_x_1 + 2) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 686) // 81 * 49 + (threadIdx_x_1 + 38) % 81 // 9 * 7 + (threadIdx_x_1 + 2) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 735] = T.if_then_else(3 <= threadIdx_x_1 and 1 <= (threadIdx_x_1 + 6) % 9 and (threadIdx_x_1 + 6) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 735) // 81 * 49 + (threadIdx_x_1 + 6) // 9 * 7 + (threadIdx_x_1 + 6) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 784] = T.if_then_else(9 <= (threadIdx_x_1 + 55) % 81 and (threadIdx_x_1 + 55) % 81 < 72 and 1 <= (threadIdx_x_1 + 1) % 9 and (threadIdx_x_1 + 1) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 784) // 81 * 49 + (threadIdx_x_1 + 55) % 81 // 9 * 7 + (threadIdx_x_1 + 1) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 833] = T.if_then_else(1 <= (threadIdx_x_1 + 5) % 9 and (threadIdx_x_1 + 5) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 833) // 81 * 49 + (threadIdx_x_1 + 23) // 9 * 7 + (threadIdx_x_1 + 5) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 882] = T.if_then_else(1 <= (threadIdx_x_1 // 9 + 8) % 9 and (threadIdx_x_1 + 72) % 81 < 72 and 1 <= threadIdx_x_1 % 9 and threadIdx_x_1 % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 882) // 81 * 49 + (threadIdx_x_1 // 9 + 8) % 9 * 7 + threadIdx_x_1 % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 931] = T.if_then_else(9 <= (threadIdx_x_1 + 40) % 81 and (threadIdx_x_1 + 40) % 81 < 72 and 1 <= (threadIdx_x_1 + 4) % 9 and (threadIdx_x_1 + 4) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 931) // 81 * 49 + (threadIdx_x_1 + 40) % 81 // 9 * 7 + (threadIdx_x_1 + 4) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 980] = T.if_then_else(1 <= threadIdx_x_1 and 1 <= (threadIdx_x_1 + 8) % 9 and (threadIdx_x_1 + 8) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 980) // 81 * 49 + (threadIdx_x_1 + 8) // 9 * 7 + (threadIdx_x_1 + 8) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1029] = T.if_then_else(9 <= (threadIdx_x_1 + 57) % 81 and (threadIdx_x_1 + 57) % 81 < 72 and 1 <= (threadIdx_x_1 + 3) % 9 and (threadIdx_x_1 + 3) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 1029) // 81 * 49 + (threadIdx_x_1 + 57) % 81 // 9 * 7 + (threadIdx_x_1 + 3) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1078] = T.if_then_else(threadIdx_x_1 < 47 and 1 <= (threadIdx_x_1 + 7) % 9 and (threadIdx_x_1 + 7) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 1078) // 81 * 49 + (threadIdx_x_1 + 25) // 9 * 7 + (threadIdx_x_1 + 7) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1127] = T.if_then_else(9 <= (threadIdx_x_1 + 74) % 81 and (threadIdx_x_1 + 74) % 81 < 72 and 1 <= (threadIdx_x_1 + 2) % 9 and (threadIdx_x_1 + 2) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 1127) // 81 * 49 + (threadIdx_x_1 + 74) % 81 // 9 * 7 + (threadIdx_x_1 + 2) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1176] = T.if_then_else(9 <= (threadIdx_x_1 + 42) % 81 and (threadIdx_x_1 + 42) % 81 < 72 and 1 <= (threadIdx_x_1 + 6) % 9 and (threadIdx_x_1 + 6) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 1176) // 81 * 49 + (threadIdx_x_1 + 42) % 81 // 9 * 7 + (threadIdx_x_1 + 6) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    pad_temp_shared_1[threadIdx_x_1 + 1225] = T.if_then_else(1 <= (threadIdx_x_1 + 1) % 9 and (threadIdx_x_1 + 1) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 1225) // 81 * 49 + (threadIdx_x_1 + 10) // 9 * 7 + (threadIdx_x_1 + 1) % 9 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 49):
                    if T.likely(threadIdx_x_1 < 22):
                        pad_temp_shared_1[threadIdx_x_1 + 1274] = T.if_then_else(threadIdx_x_1 < 13 and 1 <= (threadIdx_x_1 + 5) % 9 and (threadIdx_x_1 + 5) % 9 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 1274) // 81 * 49 + (threadIdx_x_1 + 59) // 9 * 7 + (threadIdx_x_1 + 5) % 9 - 8], T.float32(0))
                kernel_shared_1 = T.Buffer((576,), data=kernel_shared, scope="shared")
                with T.launch_thread("threadIdx.x", 49) as threadIdx_x_2:
                    kernel_1 = T.Buffer((2359296,), data=kernel.data)
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 1] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 1]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 2] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 2]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 3] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 3]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 4] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 4]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 5] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 5]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 6] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 6]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 7] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 7]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 8] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 8]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 9] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 9]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 10] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 10]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 11] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 11]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 12] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 12]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 13] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 13]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 14] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 14]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 15] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 15]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 16] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 16]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 17] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 17]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 18] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 18]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 19] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 19]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 20] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 20]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 21] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 21]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 22] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 22]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 23] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 23]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 24] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 24]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 25] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 25]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 26] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 26]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 27] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 27]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 28] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 28]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 29] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 29]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 30] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 30]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 31] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 31]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 32] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 32]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 33] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 33]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 34] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 34]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 35] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 35]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 36] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 36]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 37] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 37]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 38] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 38]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 39] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 39]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 40] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 40]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 41] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 41]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 42] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 42]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 43] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 43]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 44] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 44]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 45] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 45]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 46] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 46]
                    if T.likely(threadIdx_x_2 < 12):
                        kernel_shared_1[threadIdx_x_2 * 48 + 47] = kernel_1[blockIdx_x * 18432 + threadIdx_x_2 // 3 * 4608 + rc_outer_outer * 144 + threadIdx_x_2 % 3 * 48 + 47]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[0]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[288]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[1]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[289]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[2]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[290]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[3]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[291]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[4]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[292]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[5]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[293]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[6]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[294]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[7]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[295]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[8]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[296]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[9]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[297]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[10]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[298]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[11]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[299]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[12]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[300]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[13]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[301]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[14]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[302]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[15]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[303]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[16]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[304]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[17]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[305]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 162] * kernel_shared_1[18]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 162] * kernel_shared_1[306]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 163] * kernel_shared_1[19]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 163] * kernel_shared_1[307]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 164] * kernel_shared_1[20]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 164] * kernel_shared_1[308]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 171] * kernel_shared_1[21]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 171] * kernel_shared_1[309]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 172] * kernel_shared_1[22]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 172] * kernel_shared_1[310]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 173] * kernel_shared_1[23]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 173] * kernel_shared_1[311]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 180] * kernel_shared_1[24]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 180] * kernel_shared_1[312]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 181] * kernel_shared_1[25]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 181] * kernel_shared_1[313]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 182] * kernel_shared_1[26]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 182] * kernel_shared_1[314]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 243] * kernel_shared_1[27]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 243] * kernel_shared_1[315]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 244] * kernel_shared_1[28]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 244] * kernel_shared_1[316]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 245] * kernel_shared_1[29]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 245] * kernel_shared_1[317]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 252] * kernel_shared_1[30]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 252] * kernel_shared_1[318]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 253] * kernel_shared_1[31]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 253] * kernel_shared_1[319]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 254] * kernel_shared_1[32]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 254] * kernel_shared_1[320]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 261] * kernel_shared_1[33]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 261] * kernel_shared_1[321]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 262] * kernel_shared_1[34]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 262] * kernel_shared_1[322]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 263] * kernel_shared_1[35]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 263] * kernel_shared_1[323]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[144]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7] * kernel_shared_1[432]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[145]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1] * kernel_shared_1[433]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[146]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 2] * kernel_shared_1[434]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[147]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 9] * kernel_shared_1[435]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[148]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 10] * kernel_shared_1[436]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[149]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 11] * kernel_shared_1[437]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[150]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 18] * kernel_shared_1[438]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[151]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 19] * kernel_shared_1[439]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[152]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 20] * kernel_shared_1[440]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[153]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 81] * kernel_shared_1[441]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[154]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 82] * kernel_shared_1[442]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[155]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 83] * kernel_shared_1[443]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[156]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 90] * kernel_shared_1[444]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[157]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 91] * kernel_shared_1[445]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[158]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 92] * kernel_shared_1[446]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[159]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 99] * kernel_shared_1[447]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[160]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 100] * kernel_shared_1[448]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[161]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 101] * kernel_shared_1[449]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 162] * kernel_shared_1[162]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 162] * kernel_shared_1[450]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 163] * kernel_shared_1[163]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 163] * kernel_shared_1[451]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 164] * kernel_shared_1[164]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 164] * kernel_shared_1[452]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 171] * kernel_shared_1[165]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 171] * kernel_shared_1[453]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 172] * kernel_shared_1[166]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 172] * kernel_shared_1[454]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 173] * kernel_shared_1[167]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 173] * kernel_shared_1[455]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 180] * kernel_shared_1[168]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 180] * kernel_shared_1[456]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 181] * kernel_shared_1[169]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 181] * kernel_shared_1[457]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 182] * kernel_shared_1[170]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 182] * kernel_shared_1[458]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 243] * kernel_shared_1[171]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 243] * kernel_shared_1[459]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 244] * kernel_shared_1[172]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 244] * kernel_shared_1[460]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 245] * kernel_shared_1[173]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 245] * kernel_shared_1[461]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 252] * kernel_shared_1[174]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 252] * kernel_shared_1[462]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 253] * kernel_shared_1[175]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 253] * kernel_shared_1[463]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 254] * kernel_shared_1[176]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 254] * kernel_shared_1[464]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 261] * kernel_shared_1[177]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 261] * kernel_shared_1[465]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 262] * kernel_shared_1[178]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 262] * kernel_shared_1[466]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 263] * kernel_shared_1[179]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 263] * kernel_shared_1[467]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 324] * kernel_shared_1[36]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 324] * kernel_shared_1[324]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 325] * kernel_shared_1[37]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 325] * kernel_shared_1[325]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 326] * kernel_shared_1[38]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 326] * kernel_shared_1[326]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 333] * kernel_shared_1[39]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 333] * kernel_shared_1[327]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 334] * kernel_shared_1[40]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 334] * kernel_shared_1[328]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 335] * kernel_shared_1[41]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 335] * kernel_shared_1[329]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 342] * kernel_shared_1[42]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 342] * kernel_shared_1[330]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 343] * kernel_shared_1[43]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 343] * kernel_shared_1[331]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 344] * kernel_shared_1[44]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 344] * kernel_shared_1[332]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 405] * kernel_shared_1[45]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 405] * kernel_shared_1[333]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 406] * kernel_shared_1[46]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 406] * kernel_shared_1[334]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 407] * kernel_shared_1[47]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 407] * kernel_shared_1[335]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 414] * kernel_shared_1[48]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 414] * kernel_shared_1[336]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 415] * kernel_shared_1[49]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 415] * kernel_shared_1[337]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 416] * kernel_shared_1[50]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 416] * kernel_shared_1[338]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 423] * kernel_shared_1[51]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 423] * kernel_shared_1[339]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 424] * kernel_shared_1[52]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 424] * kernel_shared_1[340]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 425] * kernel_shared_1[53]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 425] * kernel_shared_1[341]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 486] * kernel_shared_1[54]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 486] * kernel_shared_1[342]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 487] * kernel_shared_1[55]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 487] * kernel_shared_1[343]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 488] * kernel_shared_1[56]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 488] * kernel_shared_1[344]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 495] * kernel_shared_1[57]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 495] * kernel_shared_1[345]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 496] * kernel_shared_1[58]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 496] * kernel_shared_1[346]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 497] * kernel_shared_1[59]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 497] * kernel_shared_1[347]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 504] * kernel_shared_1[60]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 504] * kernel_shared_1[348]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 505] * kernel_shared_1[61]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 505] * kernel_shared_1[349]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 506] * kernel_shared_1[62]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 506] * kernel_shared_1[350]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 567] * kernel_shared_1[63]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 567] * kernel_shared_1[351]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 568] * kernel_shared_1[64]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 568] * kernel_shared_1[352]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 569] * kernel_shared_1[65]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 569] * kernel_shared_1[353]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 576] * kernel_shared_1[66]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 576] * kernel_shared_1[354]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 577] * kernel_shared_1[67]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 577] * kernel_shared_1[355]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 578] * kernel_shared_1[68]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 578] * kernel_shared_1[356]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 585] * kernel_shared_1[69]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 585] * kernel_shared_1[357]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 586] * kernel_shared_1[70]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 586] * kernel_shared_1[358]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 587] * kernel_shared_1[71]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 587] * kernel_shared_1[359]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 324] * kernel_shared_1[180]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 324] * kernel_shared_1[468]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 325] * kernel_shared_1[181]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 325] * kernel_shared_1[469]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 326] * kernel_shared_1[182]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 326] * kernel_shared_1[470]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 333] * kernel_shared_1[183]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 333] * kernel_shared_1[471]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 334] * kernel_shared_1[184]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 334] * kernel_shared_1[472]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 335] * kernel_shared_1[185]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 335] * kernel_shared_1[473]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 342] * kernel_shared_1[186]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 342] * kernel_shared_1[474]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 343] * kernel_shared_1[187]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 343] * kernel_shared_1[475]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 344] * kernel_shared_1[188]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 344] * kernel_shared_1[476]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 405] * kernel_shared_1[189]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 405] * kernel_shared_1[477]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 406] * kernel_shared_1[190]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 406] * kernel_shared_1[478]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 407] * kernel_shared_1[191]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 407] * kernel_shared_1[479]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 414] * kernel_shared_1[192]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 414] * kernel_shared_1[480]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 415] * kernel_shared_1[193]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 415] * kernel_shared_1[481]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 416] * kernel_shared_1[194]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 416] * kernel_shared_1[482]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 423] * kernel_shared_1[195]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 423] * kernel_shared_1[483]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 424] * kernel_shared_1[196]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 424] * kernel_shared_1[484]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 425] * kernel_shared_1[197]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 425] * kernel_shared_1[485]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 486] * kernel_shared_1[198]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 486] * kernel_shared_1[486]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 487] * kernel_shared_1[199]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 487] * kernel_shared_1[487]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 488] * kernel_shared_1[200]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 488] * kernel_shared_1[488]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 495] * kernel_shared_1[201]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 495] * kernel_shared_1[489]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 496] * kernel_shared_1[202]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 496] * kernel_shared_1[490]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 497] * kernel_shared_1[203]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 497] * kernel_shared_1[491]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 504] * kernel_shared_1[204]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 504] * kernel_shared_1[492]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 505] * kernel_shared_1[205]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 505] * kernel_shared_1[493]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 506] * kernel_shared_1[206]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 506] * kernel_shared_1[494]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 567] * kernel_shared_1[207]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 567] * kernel_shared_1[495]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 568] * kernel_shared_1[208]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 568] * kernel_shared_1[496]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 569] * kernel_shared_1[209]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 569] * kernel_shared_1[497]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 576] * kernel_shared_1[210]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 576] * kernel_shared_1[498]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 577] * kernel_shared_1[211]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 577] * kernel_shared_1[499]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 578] * kernel_shared_1[212]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 578] * kernel_shared_1[500]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 585] * kernel_shared_1[213]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 585] * kernel_shared_1[501]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 586] * kernel_shared_1[214]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 586] * kernel_shared_1[502]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 587] * kernel_shared_1[215]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 587] * kernel_shared_1[503]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 648] * kernel_shared_1[72]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 648] * kernel_shared_1[360]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 649] * kernel_shared_1[73]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 649] * kernel_shared_1[361]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 650] * kernel_shared_1[74]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 650] * kernel_shared_1[362]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 657] * kernel_shared_1[75]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 657] * kernel_shared_1[363]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 658] * kernel_shared_1[76]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 658] * kernel_shared_1[364]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 659] * kernel_shared_1[77]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 659] * kernel_shared_1[365]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 666] * kernel_shared_1[78]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 666] * kernel_shared_1[366]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 667] * kernel_shared_1[79]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 667] * kernel_shared_1[367]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 668] * kernel_shared_1[80]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 668] * kernel_shared_1[368]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 729] * kernel_shared_1[81]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 729] * kernel_shared_1[369]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 730] * kernel_shared_1[82]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 730] * kernel_shared_1[370]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 731] * kernel_shared_1[83]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 731] * kernel_shared_1[371]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 738] * kernel_shared_1[84]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 738] * kernel_shared_1[372]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 739] * kernel_shared_1[85]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 739] * kernel_shared_1[373]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 740] * kernel_shared_1[86]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 740] * kernel_shared_1[374]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 747] * kernel_shared_1[87]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 747] * kernel_shared_1[375]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 748] * kernel_shared_1[88]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 748] * kernel_shared_1[376]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 749] * kernel_shared_1[89]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 749] * kernel_shared_1[377]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 810] * kernel_shared_1[90]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 810] * kernel_shared_1[378]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 811] * kernel_shared_1[91]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 811] * kernel_shared_1[379]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 812] * kernel_shared_1[92]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 812] * kernel_shared_1[380]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 819] * kernel_shared_1[93]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 819] * kernel_shared_1[381]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 820] * kernel_shared_1[94]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 820] * kernel_shared_1[382]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 821] * kernel_shared_1[95]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 821] * kernel_shared_1[383]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 828] * kernel_shared_1[96]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 828] * kernel_shared_1[384]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 829] * kernel_shared_1[97]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 829] * kernel_shared_1[385]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 830] * kernel_shared_1[98]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 830] * kernel_shared_1[386]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 891] * kernel_shared_1[99]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 891] * kernel_shared_1[387]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 892] * kernel_shared_1[100]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 892] * kernel_shared_1[388]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 893] * kernel_shared_1[101]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 893] * kernel_shared_1[389]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 900] * kernel_shared_1[102]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 900] * kernel_shared_1[390]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 901] * kernel_shared_1[103]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 901] * kernel_shared_1[391]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 902] * kernel_shared_1[104]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 902] * kernel_shared_1[392]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 909] * kernel_shared_1[105]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 909] * kernel_shared_1[393]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 910] * kernel_shared_1[106]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 910] * kernel_shared_1[394]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 911] * kernel_shared_1[107]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 911] * kernel_shared_1[395]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 648] * kernel_shared_1[216]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 648] * kernel_shared_1[504]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 649] * kernel_shared_1[217]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 649] * kernel_shared_1[505]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 650] * kernel_shared_1[218]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 650] * kernel_shared_1[506]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 657] * kernel_shared_1[219]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 657] * kernel_shared_1[507]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 658] * kernel_shared_1[220]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 658] * kernel_shared_1[508]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 659] * kernel_shared_1[221]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 659] * kernel_shared_1[509]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 666] * kernel_shared_1[222]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 666] * kernel_shared_1[510]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 667] * kernel_shared_1[223]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 667] * kernel_shared_1[511]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 668] * kernel_shared_1[224]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 668] * kernel_shared_1[512]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 729] * kernel_shared_1[225]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 729] * kernel_shared_1[513]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 730] * kernel_shared_1[226]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 730] * kernel_shared_1[514]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 731] * kernel_shared_1[227]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 731] * kernel_shared_1[515]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 738] * kernel_shared_1[228]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 738] * kernel_shared_1[516]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 739] * kernel_shared_1[229]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 739] * kernel_shared_1[517]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 740] * kernel_shared_1[230]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 740] * kernel_shared_1[518]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 747] * kernel_shared_1[231]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 747] * kernel_shared_1[519]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 748] * kernel_shared_1[232]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 748] * kernel_shared_1[520]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 749] * kernel_shared_1[233]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 749] * kernel_shared_1[521]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 810] * kernel_shared_1[234]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 810] * kernel_shared_1[522]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 811] * kernel_shared_1[235]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 811] * kernel_shared_1[523]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 812] * kernel_shared_1[236]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 812] * kernel_shared_1[524]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 819] * kernel_shared_1[237]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 819] * kernel_shared_1[525]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 820] * kernel_shared_1[238]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 820] * kernel_shared_1[526]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 821] * kernel_shared_1[239]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 821] * kernel_shared_1[527]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 828] * kernel_shared_1[240]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 828] * kernel_shared_1[528]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 829] * kernel_shared_1[241]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 829] * kernel_shared_1[529]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 830] * kernel_shared_1[242]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 830] * kernel_shared_1[530]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 891] * kernel_shared_1[243]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 891] * kernel_shared_1[531]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 892] * kernel_shared_1[244]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 892] * kernel_shared_1[532]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 893] * kernel_shared_1[245]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 893] * kernel_shared_1[533]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 900] * kernel_shared_1[246]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 900] * kernel_shared_1[534]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 901] * kernel_shared_1[247]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 901] * kernel_shared_1[535]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 902] * kernel_shared_1[248]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 902] * kernel_shared_1[536]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 909] * kernel_shared_1[249]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 909] * kernel_shared_1[537]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 910] * kernel_shared_1[250]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 910] * kernel_shared_1[538]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 911] * kernel_shared_1[251]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 911] * kernel_shared_1[539]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 972] * kernel_shared_1[108]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 972] * kernel_shared_1[396]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 973] * kernel_shared_1[109]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 973] * kernel_shared_1[397]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 974] * kernel_shared_1[110]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 974] * kernel_shared_1[398]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 981] * kernel_shared_1[111]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 981] * kernel_shared_1[399]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 982] * kernel_shared_1[112]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 982] * kernel_shared_1[400]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 983] * kernel_shared_1[113]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 983] * kernel_shared_1[401]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 990] * kernel_shared_1[114]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 990] * kernel_shared_1[402]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 991] * kernel_shared_1[115]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 991] * kernel_shared_1[403]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 992] * kernel_shared_1[116]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 992] * kernel_shared_1[404]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1053] * kernel_shared_1[117]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1053] * kernel_shared_1[405]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1054] * kernel_shared_1[118]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1054] * kernel_shared_1[406]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1055] * kernel_shared_1[119]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1055] * kernel_shared_1[407]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1062] * kernel_shared_1[120]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1062] * kernel_shared_1[408]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1063] * kernel_shared_1[121]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1063] * kernel_shared_1[409]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1064] * kernel_shared_1[122]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1064] * kernel_shared_1[410]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1071] * kernel_shared_1[123]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1071] * kernel_shared_1[411]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1072] * kernel_shared_1[124]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1072] * kernel_shared_1[412]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1073] * kernel_shared_1[125]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1073] * kernel_shared_1[413]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1134] * kernel_shared_1[126]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1134] * kernel_shared_1[414]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1135] * kernel_shared_1[127]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1135] * kernel_shared_1[415]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1136] * kernel_shared_1[128]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1136] * kernel_shared_1[416]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1143] * kernel_shared_1[129]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1143] * kernel_shared_1[417]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1144] * kernel_shared_1[130]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1144] * kernel_shared_1[418]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1145] * kernel_shared_1[131]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1145] * kernel_shared_1[419]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1152] * kernel_shared_1[132]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1152] * kernel_shared_1[420]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1153] * kernel_shared_1[133]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1153] * kernel_shared_1[421]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1154] * kernel_shared_1[134]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1154] * kernel_shared_1[422]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1215] * kernel_shared_1[135]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1215] * kernel_shared_1[423]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1216] * kernel_shared_1[136]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1216] * kernel_shared_1[424]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1217] * kernel_shared_1[137]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1217] * kernel_shared_1[425]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1224] * kernel_shared_1[138]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1224] * kernel_shared_1[426]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1225] * kernel_shared_1[139]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1225] * kernel_shared_1[427]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1226] * kernel_shared_1[140]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1226] * kernel_shared_1[428]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1233] * kernel_shared_1[141]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1233] * kernel_shared_1[429]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1234] * kernel_shared_1[142]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1234] * kernel_shared_1[430]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1235] * kernel_shared_1[143]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1235] * kernel_shared_1[431]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 972] * kernel_shared_1[252]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 972] * kernel_shared_1[540]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 973] * kernel_shared_1[253]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 973] * kernel_shared_1[541]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 974] * kernel_shared_1[254]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 974] * kernel_shared_1[542]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 981] * kernel_shared_1[255]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 981] * kernel_shared_1[543]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 982] * kernel_shared_1[256]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 982] * kernel_shared_1[544]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 983] * kernel_shared_1[257]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 983] * kernel_shared_1[545]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 990] * kernel_shared_1[258]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 990] * kernel_shared_1[546]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 991] * kernel_shared_1[259]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 991] * kernel_shared_1[547]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 992] * kernel_shared_1[260]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 992] * kernel_shared_1[548]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1053] * kernel_shared_1[261]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1053] * kernel_shared_1[549]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1054] * kernel_shared_1[262]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1054] * kernel_shared_1[550]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1055] * kernel_shared_1[263]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1055] * kernel_shared_1[551]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1062] * kernel_shared_1[264]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1062] * kernel_shared_1[552]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1063] * kernel_shared_1[265]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1063] * kernel_shared_1[553]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1064] * kernel_shared_1[266]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1064] * kernel_shared_1[554]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1071] * kernel_shared_1[267]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1071] * kernel_shared_1[555]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1072] * kernel_shared_1[268]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1072] * kernel_shared_1[556]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1073] * kernel_shared_1[269]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1073] * kernel_shared_1[557]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1134] * kernel_shared_1[270]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1134] * kernel_shared_1[558]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1135] * kernel_shared_1[271]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1135] * kernel_shared_1[559]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1136] * kernel_shared_1[272]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1136] * kernel_shared_1[560]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1143] * kernel_shared_1[273]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1143] * kernel_shared_1[561]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1144] * kernel_shared_1[274]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1144] * kernel_shared_1[562]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1145] * kernel_shared_1[275]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1145] * kernel_shared_1[563]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1152] * kernel_shared_1[276]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1152] * kernel_shared_1[564]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1153] * kernel_shared_1[277]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1153] * kernel_shared_1[565]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1154] * kernel_shared_1[278]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1154] * kernel_shared_1[566]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1215] * kernel_shared_1[279]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1215] * kernel_shared_1[567]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1216] * kernel_shared_1[280]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1216] * kernel_shared_1[568]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1217] * kernel_shared_1[281]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1217] * kernel_shared_1[569]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1224] * kernel_shared_1[282]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1224] * kernel_shared_1[570]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1225] * kernel_shared_1[283]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1225] * kernel_shared_1[571]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1226] * kernel_shared_1[284]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1226] * kernel_shared_1[572]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1233] * kernel_shared_1[285]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1233] * kernel_shared_1[573]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1234] * kernel_shared_1[286]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1234] * kernel_shared_1[574]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1235] * kernel_shared_1[287]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x // 7 * 9 + threadIdx_x % 7 + 1235] * kernel_shared_1[575]
            for i1_inner in range(2):
                compute_1 = T.Buffer((25088,), data=compute.data)
                bias_1 = T.Buffer((512,), data=bias.data)
                compute_1[blockIdx_x * 196 + i1_inner * 49 + threadIdx_x] = T.max(conv2d_nchw_1[i1_inner] + bias_1[blockIdx_x * 4 + i1_inner], T.float32(0))
                compute_1[blockIdx_x * 196 + i1_inner * 49 + threadIdx_x + 98] = T.max(conv2d_nchw_1[i1_inner + 2] + bias_1[blockIdx_x * 4 + i1_inner + 2], T.float32(0))




.. GENERATED FROM PYTHON SOURCE LINES 138-141

Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.

.. GENERATED FROM PYTHON SOURCE LINES 141-168

.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Execution time of this operator: 0.270 ms




.. GENERATED FROM PYTHON SOURCE LINES 169-174

Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

.. GENERATED FROM PYTHON SOURCE LINES 176-179

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.

.. GENERATED FROM PYTHON SOURCE LINES 179-186

.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=1)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=2)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=2)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=7)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=7)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=4)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=4)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=3)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=1)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=3)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=1)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=2)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=1)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=2)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=7)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=7)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=48)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=49)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=49)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 1024)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(49) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[4];
      __shared__ float pad_temp_shared[1296];
      __shared__ float kernel_shared[576];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 32; ++rc_outer_outer) {
        __syncthreads();
        pad_temp_shared[((int)threadIdx.x)] = ((((9 <= ((int)threadIdx.x)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[((((rc_outer_outer * 784) + ((((int)threadIdx.x) / 9) * 7)) + (((int)threadIdx.x) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 49)] = (((((9 <= ((((int)threadIdx.x) + 49) % 81)) && (((((int)threadIdx.x) + 49) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 49) / 81) * 49)) + ((((((int)threadIdx.x) + 49) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 98)] = (((1 <= ((((int)threadIdx.x) + 8) % 9)) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 98) / 81) * 49)) + (((((int)threadIdx.x) + 17) / 9) * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 147)] = (((((9 <= ((((int)threadIdx.x) + 66) % 81)) && (((((int)threadIdx.x) + 66) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 147) / 81) * 49)) + ((((((int)threadIdx.x) + 66) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 196)] = (((((9 <= ((((int)threadIdx.x) + 34) % 81)) && (((((int)threadIdx.x) + 34) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 196) / 81) * 49)) + ((((((int)threadIdx.x) + 34) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 245)] = ((((7 <= ((int)threadIdx.x)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 245) / 81) * 49)) + (((((int)threadIdx.x) + 2) / 9) * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 294)] = (((((9 <= ((((int)threadIdx.x) + 51) % 81)) && (((((int)threadIdx.x) + 51) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 294) / 81) * 49)) + ((((((int)threadIdx.x) + 51) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 343)] = (((1 <= ((((int)threadIdx.x) + 1) % 9)) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 343) / 81) * 49)) + (((((int)threadIdx.x) + 19) / 9) * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 392)] = (((((9 <= ((((int)threadIdx.x) + 68) % 81)) && (((((int)threadIdx.x) + 68) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 392) / 81) * 49)) + ((((((int)threadIdx.x) + 68) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 441)] = (((((1 <= (((((int)threadIdx.x) / 9) + 4) % 9)) && (((((int)threadIdx.x) + 36) % 81) < 72)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 441) / 81) * 49)) + ((((((int)threadIdx.x) / 9) + 4) % 9) * 7)) + (((int)threadIdx.x) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 490)] = ((((5 <= ((int)threadIdx.x)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 490) / 81) * 49)) + (((((int)threadIdx.x) + 4) / 9) * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 539)] = (((((9 <= ((((int)threadIdx.x) + 53) % 81)) && (((((int)threadIdx.x) + 53) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 539) / 81) * 49)) + ((((((int)threadIdx.x) + 53) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 588)] = (((1 <= ((((int)threadIdx.x) + 3) % 9)) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 588) / 81) * 49)) + (((((int)threadIdx.x) + 21) / 9) * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 637)] = (((((9 <= ((((int)threadIdx.x) + 70) % 81)) && (((((int)threadIdx.x) + 70) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 637) / 81) * 49)) + ((((((int)threadIdx.x) + 70) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 686)] = (((((9 <= ((((int)threadIdx.x) + 38) % 81)) && (((((int)threadIdx.x) + 38) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 686) / 81) * 49)) + ((((((int)threadIdx.x) + 38) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 735)] = ((((3 <= ((int)threadIdx.x)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 735) / 81) * 49)) + (((((int)threadIdx.x) + 6) / 9) * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 784)] = (((((9 <= ((((int)threadIdx.x) + 55) % 81)) && (((((int)threadIdx.x) + 55) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 784) / 81) * 49)) + ((((((int)threadIdx.x) + 55) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 833)] = (((1 <= ((((int)threadIdx.x) + 5) % 9)) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 833) / 81) * 49)) + (((((int)threadIdx.x) + 23) / 9) * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 882)] = (((((1 <= (((((int)threadIdx.x) / 9) + 8) % 9)) && (((((int)threadIdx.x) + 72) % 81) < 72)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 882) / 81) * 49)) + ((((((int)threadIdx.x) / 9) + 8) % 9) * 7)) + (((int)threadIdx.x) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 931)] = (((((9 <= ((((int)threadIdx.x) + 40) % 81)) && (((((int)threadIdx.x) + 40) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 931) / 81) * 49)) + ((((((int)threadIdx.x) + 40) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 980)] = ((((1 <= ((int)threadIdx.x)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 980) / 81) * 49)) + (((((int)threadIdx.x) + 8) / 9) * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1029)] = (((((9 <= ((((int)threadIdx.x) + 57) % 81)) && (((((int)threadIdx.x) + 57) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 1029) / 81) * 49)) + ((((((int)threadIdx.x) + 57) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1078)] = ((((((int)threadIdx.x) < 47) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 1078) / 81) * 49)) + (((((int)threadIdx.x) + 25) / 9) * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1127)] = (((((9 <= ((((int)threadIdx.x) + 74) % 81)) && (((((int)threadIdx.x) + 74) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 1127) / 81) * 49)) + ((((((int)threadIdx.x) + 74) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1176)] = (((((9 <= ((((int)threadIdx.x) + 42) % 81)) && (((((int)threadIdx.x) + 42) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 1176) / 81) * 49)) + ((((((int)threadIdx.x) + 42) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1225)] = (((1 <= ((((int)threadIdx.x) + 1) % 9)) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 1225) / 81) * 49)) + (((((int)threadIdx.x) + 10) / 9) * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
        if (((int)threadIdx.x) < 22) {
          pad_temp_shared[(((int)threadIdx.x) + 1274)] = ((((((int)threadIdx.x) < 13) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 1274) / 81) * 49)) + (((((int)threadIdx.x) + 59) / 9) * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[(((int)threadIdx.x) * 48)] = kernel[((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48))];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 1)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 1)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 2)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 2)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 3)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 3)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 4)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 4)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 5)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 5)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 6)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 6)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 7)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 7)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 8)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 8)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 9)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 9)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 10)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 10)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 11)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 11)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 12)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 12)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 13)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 13)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 14)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 14)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 15)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 15)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 16)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 16)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 17)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 17)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 18)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 18)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 19)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 19)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 20)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 20)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 21)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 21)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 22)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 22)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 23)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 23)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 24)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 24)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 25)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 25)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 26)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 26)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 27)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 27)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 28)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 28)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 29)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 29)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 30)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 30)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 31)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 31)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 32)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 32)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 33)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 33)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 34)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 34)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 35)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 35)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 36)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 36)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 37)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 37)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 38)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 38)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 39)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 39)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 40)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 40)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 41)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 41)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 42)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 42)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 43)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 43)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 44)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 44)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 45)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 45)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 46)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 46)];
        }
        if (((int)threadIdx.x) < 12) {
          kernel_shared[((((int)threadIdx.x) * 48) + 47)] = kernel[(((((((int)blockIdx.x) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 3) * 48)) + 47)];
        }
        __syncthreads();
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7))] * kernel_shared[0]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7))] * kernel_shared[288]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[1]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[289]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[2]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[290]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[3]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[291]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[4]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[292]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[5]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[293]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[6]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[294]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[7]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[295]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[8]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[296]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[9]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[297]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[10]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[298]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[11]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[299]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[12]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[300]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[13]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[301]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[14]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[302]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[15]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[303]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[16]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[304]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[17]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[305]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[18]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[306]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 163)] * kernel_shared[19]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 163)] * kernel_shared[307]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 164)] * kernel_shared[20]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 164)] * kernel_shared[308]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[21]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[309]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 172)] * kernel_shared[22]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 172)] * kernel_shared[310]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 173)] * kernel_shared[23]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 173)] * kernel_shared[311]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[24]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[312]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 181)] * kernel_shared[25]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 181)] * kernel_shared[313]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 182)] * kernel_shared[26]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 182)] * kernel_shared[314]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[27]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[315]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 244)] * kernel_shared[28]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 244)] * kernel_shared[316]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 245)] * kernel_shared[29]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 245)] * kernel_shared[317]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[30]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[318]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[31]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[319]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[32]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[320]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[33]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[321]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 262)] * kernel_shared[34]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 262)] * kernel_shared[322]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 263)] * kernel_shared[35]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 263)] * kernel_shared[323]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7))] * kernel_shared[144]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7))] * kernel_shared[432]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[145]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[433]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[146]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[434]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[147]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[435]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[148]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[436]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[149]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[437]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[150]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[438]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[151]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[439]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[152]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[440]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[153]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[441]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[154]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[442]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[155]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[443]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[156]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[444]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[157]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[445]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[158]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[446]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[159]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[447]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[160]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[448]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[161]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[449]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[162]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[450]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 163)] * kernel_shared[163]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 163)] * kernel_shared[451]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 164)] * kernel_shared[164]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 164)] * kernel_shared[452]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[165]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[453]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 172)] * kernel_shared[166]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 172)] * kernel_shared[454]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 173)] * kernel_shared[167]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 173)] * kernel_shared[455]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[168]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[456]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 181)] * kernel_shared[169]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 181)] * kernel_shared[457]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 182)] * kernel_shared[170]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 182)] * kernel_shared[458]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[171]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[459]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 244)] * kernel_shared[172]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 244)] * kernel_shared[460]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 245)] * kernel_shared[173]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 245)] * kernel_shared[461]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[174]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[462]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[175]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[463]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[176]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[464]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[177]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[465]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 262)] * kernel_shared[178]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 262)] * kernel_shared[466]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 263)] * kernel_shared[179]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 263)] * kernel_shared[467]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[36]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[324]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 325)] * kernel_shared[37]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 325)] * kernel_shared[325]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 326)] * kernel_shared[38]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 326)] * kernel_shared[326]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[39]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[327]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 334)] * kernel_shared[40]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 334)] * kernel_shared[328]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 335)] * kernel_shared[41]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 335)] * kernel_shared[329]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[42]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[330]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 343)] * kernel_shared[43]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 343)] * kernel_shared[331]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 344)] * kernel_shared[44]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 344)] * kernel_shared[332]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[45]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[333]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 406)] * kernel_shared[46]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 406)] * kernel_shared[334]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 407)] * kernel_shared[47]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 407)] * kernel_shared[335]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[48]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[336]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 415)] * kernel_shared[49]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 415)] * kernel_shared[337]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 416)] * kernel_shared[50]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 416)] * kernel_shared[338]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[51]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[339]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 424)] * kernel_shared[52]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 424)] * kernel_shared[340]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 425)] * kernel_shared[53]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 425)] * kernel_shared[341]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[54]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[342]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 487)] * kernel_shared[55]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 487)] * kernel_shared[343]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 488)] * kernel_shared[56]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 488)] * kernel_shared[344]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[57]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[345]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 496)] * kernel_shared[58]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 496)] * kernel_shared[346]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 497)] * kernel_shared[59]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 497)] * kernel_shared[347]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[60]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[348]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 505)] * kernel_shared[61]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 505)] * kernel_shared[349]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 506)] * kernel_shared[62]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 506)] * kernel_shared[350]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[63]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[351]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 568)] * kernel_shared[64]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 568)] * kernel_shared[352]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 569)] * kernel_shared[65]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 569)] * kernel_shared[353]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 576)] * kernel_shared[66]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 576)] * kernel_shared[354]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 577)] * kernel_shared[67]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 577)] * kernel_shared[355]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 578)] * kernel_shared[68]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 578)] * kernel_shared[356]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[69]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[357]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 586)] * kernel_shared[70]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 586)] * kernel_shared[358]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 587)] * kernel_shared[71]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 587)] * kernel_shared[359]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[180]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[468]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 325)] * kernel_shared[181]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 325)] * kernel_shared[469]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 326)] * kernel_shared[182]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 326)] * kernel_shared[470]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[183]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[471]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 334)] * kernel_shared[184]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 334)] * kernel_shared[472]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 335)] * kernel_shared[185]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 335)] * kernel_shared[473]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[186]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[474]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 343)] * kernel_shared[187]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 343)] * kernel_shared[475]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 344)] * kernel_shared[188]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 344)] * kernel_shared[476]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[189]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[477]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 406)] * kernel_shared[190]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 406)] * kernel_shared[478]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 407)] * kernel_shared[191]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 407)] * kernel_shared[479]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[192]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[480]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 415)] * kernel_shared[193]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 415)] * kernel_shared[481]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 416)] * kernel_shared[194]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 416)] * kernel_shared[482]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[195]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[483]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 424)] * kernel_shared[196]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 424)] * kernel_shared[484]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 425)] * kernel_shared[197]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 425)] * kernel_shared[485]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[198]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[486]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 487)] * kernel_shared[199]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 487)] * kernel_shared[487]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 488)] * kernel_shared[200]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 488)] * kernel_shared[488]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[201]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[489]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 496)] * kernel_shared[202]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 496)] * kernel_shared[490]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 497)] * kernel_shared[203]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 497)] * kernel_shared[491]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[204]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[492]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 505)] * kernel_shared[205]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 505)] * kernel_shared[493]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 506)] * kernel_shared[206]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 506)] * kernel_shared[494]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[207]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[495]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 568)] * kernel_shared[208]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 568)] * kernel_shared[496]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 569)] * kernel_shared[209]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 569)] * kernel_shared[497]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 576)] * kernel_shared[210]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 576)] * kernel_shared[498]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 577)] * kernel_shared[211]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 577)] * kernel_shared[499]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 578)] * kernel_shared[212]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 578)] * kernel_shared[500]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[213]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[501]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 586)] * kernel_shared[214]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 586)] * kernel_shared[502]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 587)] * kernel_shared[215]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 587)] * kernel_shared[503]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 648)] * kernel_shared[72]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 648)] * kernel_shared[360]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 649)] * kernel_shared[73]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 649)] * kernel_shared[361]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 650)] * kernel_shared[74]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 650)] * kernel_shared[362]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 657)] * kernel_shared[75]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 657)] * kernel_shared[363]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 658)] * kernel_shared[76]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 658)] * kernel_shared[364]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 659)] * kernel_shared[77]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 659)] * kernel_shared[365]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 666)] * kernel_shared[78]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 666)] * kernel_shared[366]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 667)] * kernel_shared[79]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 667)] * kernel_shared[367]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 668)] * kernel_shared[80]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 668)] * kernel_shared[368]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 729)] * kernel_shared[81]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 729)] * kernel_shared[369]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 730)] * kernel_shared[82]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 730)] * kernel_shared[370]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 731)] * kernel_shared[83]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 731)] * kernel_shared[371]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 738)] * kernel_shared[84]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 738)] * kernel_shared[372]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 739)] * kernel_shared[85]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 739)] * kernel_shared[373]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 740)] * kernel_shared[86]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 740)] * kernel_shared[374]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 747)] * kernel_shared[87]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 747)] * kernel_shared[375]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 748)] * kernel_shared[88]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 748)] * kernel_shared[376]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 749)] * kernel_shared[89]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 749)] * kernel_shared[377]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 810)] * kernel_shared[90]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 810)] * kernel_shared[378]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 811)] * kernel_shared[91]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 811)] * kernel_shared[379]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 812)] * kernel_shared[92]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 812)] * kernel_shared[380]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[93]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[381]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 820)] * kernel_shared[94]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 820)] * kernel_shared[382]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 821)] * kernel_shared[95]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 821)] * kernel_shared[383]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 828)] * kernel_shared[96]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 828)] * kernel_shared[384]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 829)] * kernel_shared[97]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 829)] * kernel_shared[385]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 830)] * kernel_shared[98]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 830)] * kernel_shared[386]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 891)] * kernel_shared[99]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 891)] * kernel_shared[387]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 892)] * kernel_shared[100]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 892)] * kernel_shared[388]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 893)] * kernel_shared[101]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 893)] * kernel_shared[389]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 900)] * kernel_shared[102]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 900)] * kernel_shared[390]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 901)] * kernel_shared[103]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 901)] * kernel_shared[391]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 902)] * kernel_shared[104]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 902)] * kernel_shared[392]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 909)] * kernel_shared[105]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 909)] * kernel_shared[393]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 910)] * kernel_shared[106]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 910)] * kernel_shared[394]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 911)] * kernel_shared[107]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 911)] * kernel_shared[395]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 648)] * kernel_shared[216]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 648)] * kernel_shared[504]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 649)] * kernel_shared[217]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 649)] * kernel_shared[505]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 650)] * kernel_shared[218]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 650)] * kernel_shared[506]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 657)] * kernel_shared[219]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 657)] * kernel_shared[507]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 658)] * kernel_shared[220]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 658)] * kernel_shared[508]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 659)] * kernel_shared[221]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 659)] * kernel_shared[509]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 666)] * kernel_shared[222]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 666)] * kernel_shared[510]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 667)] * kernel_shared[223]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 667)] * kernel_shared[511]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 668)] * kernel_shared[224]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 668)] * kernel_shared[512]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 729)] * kernel_shared[225]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 729)] * kernel_shared[513]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 730)] * kernel_shared[226]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 730)] * kernel_shared[514]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 731)] * kernel_shared[227]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 731)] * kernel_shared[515]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 738)] * kernel_shared[228]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 738)] * kernel_shared[516]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 739)] * kernel_shared[229]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 739)] * kernel_shared[517]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 740)] * kernel_shared[230]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 740)] * kernel_shared[518]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 747)] * kernel_shared[231]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 747)] * kernel_shared[519]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 748)] * kernel_shared[232]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 748)] * kernel_shared[520]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 749)] * kernel_shared[233]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 749)] * kernel_shared[521]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 810)] * kernel_shared[234]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 810)] * kernel_shared[522]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 811)] * kernel_shared[235]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 811)] * kernel_shared[523]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 812)] * kernel_shared[236]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 812)] * kernel_shared[524]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[237]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[525]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 820)] * kernel_shared[238]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 820)] * kernel_shared[526]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 821)] * kernel_shared[239]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 821)] * kernel_shared[527]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 828)] * kernel_shared[240]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 828)] * kernel_shared[528]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 829)] * kernel_shared[241]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 829)] * kernel_shared[529]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 830)] * kernel_shared[242]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 830)] * kernel_shared[530]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 891)] * kernel_shared[243]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 891)] * kernel_shared[531]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 892)] * kernel_shared[244]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 892)] * kernel_shared[532]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 893)] * kernel_shared[245]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 893)] * kernel_shared[533]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 900)] * kernel_shared[246]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 900)] * kernel_shared[534]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 901)] * kernel_shared[247]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 901)] * kernel_shared[535]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 902)] * kernel_shared[248]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 902)] * kernel_shared[536]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 909)] * kernel_shared[249]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 909)] * kernel_shared[537]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 910)] * kernel_shared[250]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 910)] * kernel_shared[538]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 911)] * kernel_shared[251]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 911)] * kernel_shared[539]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 972)] * kernel_shared[108]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 972)] * kernel_shared[396]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 973)] * kernel_shared[109]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 973)] * kernel_shared[397]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 974)] * kernel_shared[110]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 974)] * kernel_shared[398]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 981)] * kernel_shared[111]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 981)] * kernel_shared[399]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 982)] * kernel_shared[112]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 982)] * kernel_shared[400]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 983)] * kernel_shared[113]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 983)] * kernel_shared[401]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 990)] * kernel_shared[114]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 990)] * kernel_shared[402]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 991)] * kernel_shared[115]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 991)] * kernel_shared[403]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 992)] * kernel_shared[116]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 992)] * kernel_shared[404]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1053)] * kernel_shared[117]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1053)] * kernel_shared[405]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1054)] * kernel_shared[118]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1054)] * kernel_shared[406]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1055)] * kernel_shared[119]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1055)] * kernel_shared[407]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1062)] * kernel_shared[120]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1062)] * kernel_shared[408]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1063)] * kernel_shared[121]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1063)] * kernel_shared[409]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1064)] * kernel_shared[122]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1064)] * kernel_shared[410]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1071)] * kernel_shared[123]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1071)] * kernel_shared[411]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1072)] * kernel_shared[124]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1072)] * kernel_shared[412]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1073)] * kernel_shared[125]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1073)] * kernel_shared[413]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1134)] * kernel_shared[126]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1134)] * kernel_shared[414]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1135)] * kernel_shared[127]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1135)] * kernel_shared[415]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1136)] * kernel_shared[128]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1136)] * kernel_shared[416]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1143)] * kernel_shared[129]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1143)] * kernel_shared[417]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1144)] * kernel_shared[130]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1144)] * kernel_shared[418]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1145)] * kernel_shared[131]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1145)] * kernel_shared[419]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1152)] * kernel_shared[132]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1152)] * kernel_shared[420]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1153)] * kernel_shared[133]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1153)] * kernel_shared[421]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1154)] * kernel_shared[134]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1154)] * kernel_shared[422]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1215)] * kernel_shared[135]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1215)] * kernel_shared[423]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1216)] * kernel_shared[136]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1216)] * kernel_shared[424]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1217)] * kernel_shared[137]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1217)] * kernel_shared[425]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1224)] * kernel_shared[138]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1224)] * kernel_shared[426]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1225)] * kernel_shared[139]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1225)] * kernel_shared[427]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1226)] * kernel_shared[140]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1226)] * kernel_shared[428]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1233)] * kernel_shared[141]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1233)] * kernel_shared[429]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1234)] * kernel_shared[142]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1234)] * kernel_shared[430]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1235)] * kernel_shared[143]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1235)] * kernel_shared[431]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 972)] * kernel_shared[252]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 972)] * kernel_shared[540]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 973)] * kernel_shared[253]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 973)] * kernel_shared[541]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 974)] * kernel_shared[254]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 974)] * kernel_shared[542]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 981)] * kernel_shared[255]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 981)] * kernel_shared[543]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 982)] * kernel_shared[256]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 982)] * kernel_shared[544]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 983)] * kernel_shared[257]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 983)] * kernel_shared[545]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 990)] * kernel_shared[258]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 990)] * kernel_shared[546]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 991)] * kernel_shared[259]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 991)] * kernel_shared[547]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 992)] * kernel_shared[260]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 992)] * kernel_shared[548]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1053)] * kernel_shared[261]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1053)] * kernel_shared[549]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1054)] * kernel_shared[262]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1054)] * kernel_shared[550]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1055)] * kernel_shared[263]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1055)] * kernel_shared[551]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1062)] * kernel_shared[264]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1062)] * kernel_shared[552]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1063)] * kernel_shared[265]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1063)] * kernel_shared[553]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1064)] * kernel_shared[266]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1064)] * kernel_shared[554]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1071)] * kernel_shared[267]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1071)] * kernel_shared[555]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1072)] * kernel_shared[268]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1072)] * kernel_shared[556]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1073)] * kernel_shared[269]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1073)] * kernel_shared[557]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1134)] * kernel_shared[270]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1134)] * kernel_shared[558]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1135)] * kernel_shared[271]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1135)] * kernel_shared[559]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1136)] * kernel_shared[272]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1136)] * kernel_shared[560]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1143)] * kernel_shared[273]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1143)] * kernel_shared[561]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1144)] * kernel_shared[274]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1144)] * kernel_shared[562]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1145)] * kernel_shared[275]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1145)] * kernel_shared[563]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1152)] * kernel_shared[276]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1152)] * kernel_shared[564]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1153)] * kernel_shared[277]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1153)] * kernel_shared[565]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1154)] * kernel_shared[278]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1154)] * kernel_shared[566]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1215)] * kernel_shared[279]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1215)] * kernel_shared[567]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1216)] * kernel_shared[280]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1216)] * kernel_shared[568]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1217)] * kernel_shared[281]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1217)] * kernel_shared[569]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1224)] * kernel_shared[282]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1224)] * kernel_shared[570]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1225)] * kernel_shared[283]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1225)] * kernel_shared[571]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1226)] * kernel_shared[284]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1226)] * kernel_shared[572]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1233)] * kernel_shared[285]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1233)] * kernel_shared[573]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1234)] * kernel_shared[286]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1234)] * kernel_shared[574]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1235)] * kernel_shared[287]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1235)] * kernel_shared[575]));
      }
      for (int i1_inner = 0; i1_inner < 2; ++i1_inner) {
        compute[(((((int)blockIdx.x) * 196) + (i1_inner * 49)) + ((int)threadIdx.x))] = max((conv2d_nchw[i1_inner] + bias[((((int)blockIdx.x) * 4) + i1_inner)]), 0.000000e+00f);
        compute[((((((int)blockIdx.x) * 196) + (i1_inner * 49)) + ((int)threadIdx.x)) + 98)] = max((conv2d_nchw[(i1_inner + 2)] + bias[(((((int)blockIdx.x) * 4) + i1_inner) + 2)]), 0.000000e+00f);
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 187-191

A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.

.. GENERATED FROM PYTHON SOURCE LINES 191-213

.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Resume search:
    Get devices for measurement successfully!






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 6 minutes  6.215 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
