
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.

.. GENERATED FROM PYTHON SOURCE LINES 39-48

.. code-block:: default



    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python








.. GENERATED FROM PYTHON SOURCE LINES 54-59

Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.

.. GENERATED FROM PYTHON SOURCE LINES 59-71

.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]









.. GENERATED FROM PYTHON SOURCE LINES 72-75

Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.

.. GENERATED FROM PYTHON SOURCE LINES 75-88

.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)





.. GENERATED FROM PYTHON SOURCE LINES 89-106

Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.

.. GENERATED FROM PYTHON SOURCE LINES 106-116

.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Get devices for measurement successfully!




.. GENERATED FROM PYTHON SOURCE LINES 117-123

Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.

.. GENERATED FROM PYTHON SOURCE LINES 123-132

.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx








.. GENERATED FROM PYTHON SOURCE LINES 133-136

We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.

.. GENERATED FROM PYTHON SOURCE LINES 136-140

.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Lowered TIR:
    @main = primfn(data_1: handle, kernel_1: handle, bias_1: handle, compute_1: handle) -> ()
      attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
      buffers = {data: Buffer(data_2: Pointer(float32), float32, [25088], []),
                 kernel: Buffer(kernel_2: Pointer(float32), float32, [2359296], []),
                 bias: Buffer(bias_2: Pointer(float32), float32, [512], []),
                 compute: Buffer(compute_2: Pointer(float32), float32, [25088], [])}
      buffer_map = {data_1: data, kernel_1: kernel, bias_1: bias, compute_1: compute}
      preflattened_buffer_map = {data_1: data_3: Buffer(data_2, float32, [1, 512, 7, 7], []), kernel_1: kernel_3: Buffer(kernel_2, float32, [512, 512, 3, 3], []), bias_1: bias_3: Buffer(bias_2, float32, [1, 512, 1, 1], []), compute_1: compute_3: Buffer(compute_2, float32, [1, 512, 7, 7], [])} {
      attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = 56;
      allocate(conv2d_nchw: Pointer(local float32), float32, [14]), storage_scope = local;
      allocate(pad_temp.shared: Pointer(shared float32), float32, [216]), storage_scope = shared;
      allocate(kernel.shared: Pointer(shared float32), float32, [4608]), storage_scope = shared;
      attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32 {
        conv2d_nchw_1: Buffer(conv2d_nchw, float32, [4], [], scope="local", align=8)[0] = 0f32
        conv2d_nchw_1[2] = 0f32
        conv2d_nchw_1[4] = 0f32
        conv2d_nchw_1[6] = 0f32
        conv2d_nchw_1[8] = 0f32
        conv2d_nchw_1[10] = 0f32
        conv2d_nchw_1[12] = 0f32
        conv2d_nchw_1[1] = 0f32
        conv2d_nchw_1[3] = 0f32
        conv2d_nchw_1[5] = 0f32
        conv2d_nchw_1[7] = 0f32
        conv2d_nchw_1[9] = 0f32
        conv2d_nchw_1[11] = 0f32
        conv2d_nchw_1[13] = 0f32
        for (rc.outer.outer: int32, 0, 64) {
          let cse_var_2: int32 = (rc.outer.outer*392)
          let cse_var_1: int32 = (rc.outer.outer*72)
           {
            attr [IterVar(threadIdx.x_1: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            pad_temp.shared_1: Buffer(pad_temp.shared, float32, [216], [], scope="shared")[threadIdx.x_1] = @tir.if_then_else(((((1 <= (floordiv(floormod(threadIdx.x_1, 27), 9) + floormod(blockIdx.x, 7))) && ((floordiv(floormod(threadIdx.x_1, 27), 9) + floormod(blockIdx.x, 7)) < 8)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[(((((cse_var_2 + (floordiv(threadIdx.x_1, 27)*49)) + (floordiv(floormod(threadIdx.x_1, 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod(threadIdx.x_1, 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            pad_temp.shared_1[(threadIdx.x_1 + 32)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 5), 27), 9) + floormod(blockIdx.x, 7))) && ((floordiv(floormod((threadIdx.x_1 + 5), 27), 9) + floormod(blockIdx.x, 7)) < 8)) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 32), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 5), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            pad_temp.shared_1[(threadIdx.x_1 + 64)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 10), 27), 9) + floormod(blockIdx.x, 7))) && ((floordiv(floormod((threadIdx.x_1 + 10), 27), 9) + floormod(blockIdx.x, 7)) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 64), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 10), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            pad_temp.shared_1[(threadIdx.x_1 + 96)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 15), 27), 9) + floormod(blockIdx.x, 7))) && ((floordiv(floormod((threadIdx.x_1 + 15), 27), 9) + floormod(blockIdx.x, 7)) < 8)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 96), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 15), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            pad_temp.shared_1[(threadIdx.x_1 + 128)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 20), 27), 9) + floormod(blockIdx.x, 7))) && ((floordiv(floormod((threadIdx.x_1 + 20), 27), 9) + floormod(blockIdx.x, 7)) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 128), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 20), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            pad_temp.shared_1[(threadIdx.x_1 + 160)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 25), 27), 9) + floormod(blockIdx.x, 7))) && ((floordiv(floormod((threadIdx.x_1 + 25), 27), 9) + floormod(blockIdx.x, 7)) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 160), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 25), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            if @tir.likely((threadIdx.x_1 < 24), dtype=bool) {
              pad_temp.shared_1[(threadIdx.x_1 + 192)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3), 27), 9) + floormod(blockIdx.x, 7))) && ((floordiv(floormod((threadIdx.x_1 + 3), 27), 9) + floormod(blockIdx.x, 7)) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 192), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 3), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_2: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1: Buffer(kernel.shared, float32, [4608], [], scope="shared")[threadIdx.x_2] = kernel[(((floordiv(blockIdx.x, 7)*294912) + cse_var_1) + threadIdx.x_2)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 32)] = kernel[((((floordiv(blockIdx.x, 7)*294912) + cse_var_1) + (floordiv((threadIdx.x_2 + 32), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 64)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 64), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 96)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 96), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 8)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 128)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 128), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 56), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 160)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 160), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 192)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 192), 72)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 16), 24)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 224)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 224), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 256)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 256), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 40), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 288)] = kernel[((((floordiv(blockIdx.x, 7)*294912) + cse_var_1) + threadIdx.x_2) + 18432)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 320)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 320), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 352)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 352), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 384)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 384), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 8)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 416)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 416), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 56), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 448)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 448), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 480)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 480), 72)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 16), 24)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 512)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 512), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 544)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 544), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 40), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 576)] = kernel[((((floordiv(blockIdx.x, 7)*294912) + cse_var_1) + threadIdx.x_2) + 36864)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 608)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 608), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 640)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 640), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 672)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 672), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 8)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 704)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 704), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 56), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 736)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 736), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 768)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 768), 72)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 16), 24)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 800)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 800), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 832)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 832), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 40), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 864)] = kernel[((((floordiv(blockIdx.x, 7)*294912) + cse_var_1) + threadIdx.x_2) + 55296)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 896)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 896), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 928)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 928), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 960)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 960), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 8)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 992)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 992), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 56), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1024)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1024), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1056)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1056), 72)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 16), 24)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1088)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1088), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1120)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1120), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 40), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1152)] = kernel[((((floordiv(blockIdx.x, 7)*294912) + cse_var_1) + threadIdx.x_2) + 73728)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1184)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1184), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1216)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1216), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1248)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1248), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 8)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1280)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1280), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 56), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1312)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1312), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1344)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1344), 72)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 16), 24)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1376)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1376), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1408)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1408), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 40), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1440)] = kernel[((((floordiv(blockIdx.x, 7)*294912) + cse_var_1) + threadIdx.x_2) + 92160)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1472)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1472), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1504)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1504), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1536)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1536), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 8)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1568)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1568), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 56), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1600)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1600), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1632)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1632), 72)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 16), 24)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1664)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1664), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1696)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1696), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 40), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1728)] = kernel[((((floordiv(blockIdx.x, 7)*294912) + cse_var_1) + threadIdx.x_2) + 110592)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1760)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1760), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1792)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1792), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1824)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1824), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 8)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1856)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1856), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 56), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1888)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1888), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1920)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1920), 72)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 16), 24)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1952)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1952), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 1984)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1984), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 40), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2016)] = kernel[((((floordiv(blockIdx.x, 7)*294912) + cse_var_1) + threadIdx.x_2) + 129024)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2048)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2048), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2080)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2080), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2112)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2112), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 8)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2144)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2144), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 56), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2176)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2176), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2208)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2208), 72)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 16), 24)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2240)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2240), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2272)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2272), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 40), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2304)] = kernel[((((floordiv(blockIdx.x, 7)*294912) + cse_var_1) + threadIdx.x_2) + 147456)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2336)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2336), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2368)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2368), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2400)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2400), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 8)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2432)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2432), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 56), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2464)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2464), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2496)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2496), 72)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 16), 24)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2528)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2528), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2560)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2560), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 40), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2592)] = kernel[((((floordiv(blockIdx.x, 7)*294912) + cse_var_1) + threadIdx.x_2) + 165888)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2624)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2624), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2656)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2656), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2688)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2688), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 8)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2720)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2720), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 56), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2752)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2752), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2784)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2784), 72)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 16), 24)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2816)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2816), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2848)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2848), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 40), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2880)] = kernel[((((floordiv(blockIdx.x, 7)*294912) + cse_var_1) + threadIdx.x_2) + 184320)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2912)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2912), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2944)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2944), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 2976)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2976), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 8)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3008)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3008), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 56), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3040)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3040), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3072)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3072), 72)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 16), 24)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3104)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3104), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3136)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3136), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 40), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3168)] = kernel[((((floordiv(blockIdx.x, 7)*294912) + cse_var_1) + threadIdx.x_2) + 202752)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3200)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3200), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3232)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3232), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3264)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3264), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 8)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3296)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3296), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 56), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3328)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3328), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3360)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3360), 72)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 16), 24)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3392)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3392), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3424)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3424), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 40), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3456)] = kernel[((((floordiv(blockIdx.x, 7)*294912) + cse_var_1) + threadIdx.x_2) + 221184)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3488)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3488), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3520)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3520), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3552)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3552), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 8)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3584)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3584), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 56), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3616)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3616), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3648)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3648), 72)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 16), 24)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3680)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3680), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3712)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3712), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 40), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3744)] = kernel[((((floordiv(blockIdx.x, 7)*294912) + cse_var_1) + threadIdx.x_2) + 239616)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3776)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3776), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3808)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3808), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3840)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3840), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 8)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3872)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3872), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 56), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3904)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3904), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3936)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3936), 72)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 16), 24)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 3968)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 3968), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4000)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 4000), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 40), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4032)] = kernel[((((floordiv(blockIdx.x, 7)*294912) + cse_var_1) + threadIdx.x_2) + 258048)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4064)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 4064), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4096)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 4096), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4128)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 4128), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 8)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4160)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 4160), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 56), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4192)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 4192), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4224)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 4224), 72)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 16), 24)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4256)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 4256), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4288)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 4288), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 40), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4320)] = kernel[((((floordiv(blockIdx.x, 7)*294912) + cse_var_1) + threadIdx.x_2) + 276480)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4352)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 4352), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4384)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 4384), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4416)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 4416), 72)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 8)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4448)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 4448), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 56), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4480)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 4480), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4512)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 4512), 72)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 16), 24)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4544)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 4544), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 72), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 32;
            kernel.shared_1[(threadIdx.x_2 + 4576)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 4576), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 40), 72), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            for (rc.outer.inner: int32, 0, 2) {
              let cse_var_110: int32 = (rc.outer.inner*108)
              let cse_var_109: int32 = (cse_var_110 + 99)
              let cse_var_108: int32 = (cse_var_110 + 98)
              let cse_var_107: int32 = (cse_var_110 + 97)
              let cse_var_106: int32 = (cse_var_110 + 96)
              let cse_var_105: int32 = (cse_var_110 + 95)
              let cse_var_104: int32 = (cse_var_110 + 94)
              let cse_var_103: int32 = (cse_var_110 + 93)
              let cse_var_102: int32 = (cse_var_110 + 92)
              let cse_var_101: int32 = (cse_var_110 + 91)
              let cse_var_100: int32 = (cse_var_110 + 90)
              let cse_var_99: int32 = (cse_var_110 + 9)
              let cse_var_98: int32 = (cse_var_110 + 89)
              let cse_var_97: int32 = (cse_var_110 + 88)
              let cse_var_96: int32 = (cse_var_110 + 87)
              let cse_var_95: int32 = (cse_var_110 + 86)
              let cse_var_94: int32 = (cse_var_110 + 85)
              let cse_var_93: int32 = (cse_var_110 + 84)
              let cse_var_92: int32 = (cse_var_110 + 83)
              let cse_var_91: int32 = (cse_var_110 + 82)
              let cse_var_90: int32 = (cse_var_110 + 81)
              let cse_var_89: int32 = (cse_var_110 + 80)
              let cse_var_88: int32 = (cse_var_110 + 8)
              let cse_var_87: int32 = (cse_var_110 + 79)
              let cse_var_86: int32 = (cse_var_110 + 78)
              let cse_var_85: int32 = (cse_var_110 + 77)
              let cse_var_84: int32 = (cse_var_110 + 76)
              let cse_var_83: int32 = (cse_var_110 + 75)
              let cse_var_82: int32 = (cse_var_110 + 74)
              let cse_var_81: int32 = (cse_var_110 + 73)
              let cse_var_80: int32 = (cse_var_110 + 72)
              let cse_var_79: int32 = (cse_var_110 + 71)
              let cse_var_78: int32 = (cse_var_110 + 70)
              let cse_var_77: int32 = (cse_var_110 + 7)
              let cse_var_76: int32 = (cse_var_110 + 69)
              let cse_var_75: int32 = (cse_var_110 + 68)
              let cse_var_74: int32 = (cse_var_110 + 67)
              let cse_var_73: int32 = (cse_var_110 + 66)
              let cse_var_72: int32 = (cse_var_110 + 65)
              let cse_var_71: int32 = (cse_var_110 + 64)
              let cse_var_70: int32 = (cse_var_110 + 63)
              let cse_var_69: int32 = (cse_var_110 + 62)
              let cse_var_68: int32 = (cse_var_110 + 61)
              let cse_var_67: int32 = (cse_var_110 + 60)
              let cse_var_66: int32 = (cse_var_110 + 6)
              let cse_var_65: int32 = (cse_var_110 + 59)
              let cse_var_64: int32 = (cse_var_110 + 58)
              let cse_var_63: int32 = (cse_var_110 + 57)
              let cse_var_62: int32 = (cse_var_110 + 56)
              let cse_var_61: int32 = (cse_var_110 + 55)
              let cse_var_60: int32 = (cse_var_110 + 54)
              let cse_var_59: int32 = (cse_var_110 + 53)
              let cse_var_58: int32 = (cse_var_110 + 52)
              let cse_var_57: int32 = (cse_var_110 + 51)
              let cse_var_56: int32 = (cse_var_110 + 50)
              let cse_var_55: int32 = (cse_var_110 + 5)
              let cse_var_54: int32 = (cse_var_110 + 49)
              let cse_var_53: int32 = (cse_var_110 + 48)
              let cse_var_52: int32 = (cse_var_110 + 47)
              let cse_var_51: int32 = (cse_var_110 + 46)
              let cse_var_50: int32 = (cse_var_110 + 45)
              let cse_var_49: int32 = (cse_var_110 + 44)
              let cse_var_48: int32 = (cse_var_110 + 43)
              let cse_var_47: int32 = (cse_var_110 + 42)
              let cse_var_46: int32 = (cse_var_110 + 41)
              let cse_var_45: int32 = (cse_var_110 + 40)
              let cse_var_44: int32 = (cse_var_110 + 4)
              let cse_var_43: int32 = (cse_var_110 + 39)
              let cse_var_42: int32 = (cse_var_110 + 38)
              let cse_var_41: int32 = (cse_var_110 + 37)
              let cse_var_40: int32 = (cse_var_110 + 36)
              let cse_var_39: int32 = (cse_var_110 + 35)
              let cse_var_38: int32 = (cse_var_110 + 34)
              let cse_var_37: int32 = (cse_var_110 + 33)
              let cse_var_36: int32 = (cse_var_110 + 32)
              let cse_var_35: int32 = (cse_var_110 + 31)
              let cse_var_34: int32 = (cse_var_110 + 30)
              let cse_var_33: int32 = (cse_var_110 + 3)
              let cse_var_32: int32 = (cse_var_110 + 29)
              let cse_var_31: int32 = (cse_var_110 + 28)
              let cse_var_30: int32 = (cse_var_110 + 27)
              let cse_var_29: int32 = (cse_var_110 + 26)
              let cse_var_28: int32 = (cse_var_110 + 25)
              let cse_var_27: int32 = (cse_var_110 + 24)
              let cse_var_26: int32 = (cse_var_110 + 23)
              let cse_var_25: int32 = (cse_var_110 + 22)
              let cse_var_24: int32 = (cse_var_110 + 21)
              let cse_var_23: int32 = (cse_var_110 + 20)
              let cse_var_22: int32 = (cse_var_110 + 2)
              let cse_var_21: int32 = (cse_var_110 + 19)
              let cse_var_20: int32 = (cse_var_110 + 18)
              let cse_var_19: int32 = (cse_var_110 + 17)
              let cse_var_18: int32 = (cse_var_110 + 16)
              let cse_var_17: int32 = (cse_var_110 + 15)
              let cse_var_16: int32 = (cse_var_110 + 14)
              let cse_var_15: int32 = (cse_var_110 + 13)
              let cse_var_14: int32 = (cse_var_110 + 12)
              let cse_var_13: int32 = (cse_var_110 + 11)
              let cse_var_12: int32 = (cse_var_110 + 107)
              let cse_var_11: int32 = (cse_var_110 + 106)
              let cse_var_10: int32 = (cse_var_110 + 105)
              let cse_var_9: int32 = (cse_var_110 + 104)
              let cse_var_8: int32 = (cse_var_110 + 103)
              let cse_var_7: int32 = (cse_var_110 + 102)
              let cse_var_6: int32 = (cse_var_110 + 101)
              let cse_var_5: int32 = (cse_var_110 + 100)
              let cse_var_4: int32 = (cse_var_110 + 10)
              let cse_var_3: int32 = (cse_var_110 + 1)
               {
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_110]*kernel.shared_1[((threadIdx.x*144) + (rc.outer.inner*36))]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_3]*kernel.shared_1[((threadIdx.x*144) + (rc.outer.inner*36))]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_22]*kernel.shared_1[((threadIdx.x*144) + (rc.outer.inner*36))]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_33]*kernel.shared_1[((threadIdx.x*144) + (rc.outer.inner*36))]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_44]*kernel.shared_1[((threadIdx.x*144) + (rc.outer.inner*36))]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_55]*kernel.shared_1[((threadIdx.x*144) + (rc.outer.inner*36))]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_66]*kernel.shared_1[((threadIdx.x*144) + (rc.outer.inner*36))]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_3]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 1)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_22]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 1)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_33]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 1)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_44]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 1)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_55]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 1)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_66]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 1)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_77]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 1)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_22]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 2)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_33]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 2)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_44]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 2)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_55]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 2)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_66]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 2)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_77]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 2)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_88]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 2)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_99]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 3)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_4]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 3)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_13]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 3)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_14]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 3)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_15]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 3)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_16]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 3)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_17]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 3)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_4]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 4)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_13]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 4)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_14]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 4)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_15]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 4)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_16]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 4)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_17]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 4)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_18]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 4)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_13]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 5)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_14]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 5)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_15]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 5)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_16]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 5)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_17]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 5)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_18]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 5)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_19]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 5)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_20]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 6)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_21]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 6)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_23]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 6)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_24]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 6)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_25]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 6)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_26]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 6)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_27]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 6)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_21]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 7)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_23]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 7)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_24]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 7)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_25]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 7)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_26]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 7)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_27]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 7)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_28]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 7)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_23]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 8)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_24]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 8)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_25]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 8)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_26]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 8)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_27]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 8)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_28]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 8)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_29]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 8)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_30]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 9)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_31]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 9)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_32]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 9)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_34]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 9)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_35]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 9)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_36]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 9)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_37]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 9)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_31]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 10)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_32]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 10)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_34]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 10)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_35]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 10)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_36]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 10)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_37]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 10)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_38]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 10)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_32]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 11)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_34]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 11)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_35]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 11)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_36]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 11)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_37]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 11)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_38]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 11)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_39]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 11)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_40]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 12)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_41]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 12)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_42]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 12)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_43]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 12)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_45]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 12)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_46]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 12)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_47]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 12)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_41]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 13)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_42]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 13)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_43]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 13)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_45]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 13)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_46]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 13)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_47]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 13)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_48]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 13)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_42]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 14)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_43]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 14)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_45]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 14)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_46]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 14)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_47]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 14)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_48]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 14)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_49]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 14)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_50]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 15)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_51]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 15)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_52]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 15)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_53]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 15)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_54]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 15)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_56]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 15)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_57]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 15)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_51]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 16)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_52]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 16)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_53]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 16)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_54]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 16)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_56]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 16)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_57]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 16)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_58]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 16)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_52]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 17)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_53]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 17)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_54]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 17)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_56]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 17)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_57]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 17)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_58]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 17)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_59]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 17)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_60]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 18)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_61]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 18)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_62]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 18)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_63]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 18)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_64]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 18)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_65]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 18)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_67]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 18)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_61]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 19)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_62]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 19)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_63]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 19)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_64]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 19)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_65]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 19)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_67]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 19)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_68]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 19)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_62]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 20)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_63]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 20)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_64]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 20)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_65]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 20)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_67]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 20)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_68]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 20)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_69]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 20)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_70]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 21)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_71]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 21)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_72]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 21)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_73]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 21)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_74]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 21)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_75]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 21)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_76]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 21)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_71]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 22)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_72]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 22)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_73]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 22)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_74]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 22)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_75]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 22)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_76]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 22)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_78]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 22)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_72]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 23)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_73]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 23)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_74]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 23)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_75]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 23)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_76]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 23)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_78]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 23)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_79]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 23)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_80]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 24)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_81]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 24)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_82]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 24)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_83]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 24)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_84]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 24)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_85]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 24)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_86]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 24)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_81]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 25)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_82]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 25)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_83]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 25)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_84]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 25)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_85]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 25)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_86]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 25)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_87]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 25)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_82]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 26)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_83]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 26)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_84]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 26)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_85]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 26)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_86]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 26)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_87]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 26)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_89]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 26)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_90]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 27)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_91]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 27)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_92]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 27)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_93]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 27)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_94]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 27)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_95]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 27)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_96]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 27)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_91]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 28)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_92]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 28)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_93]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 28)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_94]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 28)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_95]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 28)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_96]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 28)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_97]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 28)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_92]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 29)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_93]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 29)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_94]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 29)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_95]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 29)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_96]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 29)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_97]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 29)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_98]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 29)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_100]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 30)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_101]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 30)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_102]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 30)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_103]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 30)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_104]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 30)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_105]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 30)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_106]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 30)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_101]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 31)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_102]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 31)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_103]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 31)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_104]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 31)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_105]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 31)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_106]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 31)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_107]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 31)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_102]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 32)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_103]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 32)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_104]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 32)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_105]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 32)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_106]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 32)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_107]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 32)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_108]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 32)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_109]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 33)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_5]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 33)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_6]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 33)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_7]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 33)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_8]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 33)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_9]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 33)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_10]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 33)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_5]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 34)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_6]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 34)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_7]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 34)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_8]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 34)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_9]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 34)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_10]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 34)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_11]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 34)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[cse_var_6]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 35)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[cse_var_7]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 35)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[cse_var_8]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 35)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[cse_var_9]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 35)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[cse_var_10]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 35)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[cse_var_11]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 35)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[cse_var_12]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 35)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_110]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 72)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_3]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 72)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_22]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 72)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_33]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 72)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_44]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 72)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_55]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 72)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_66]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 72)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_3]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 73)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_22]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 73)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_33]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 73)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_44]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 73)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_55]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 73)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_66]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 73)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_77]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 73)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_22]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 74)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_33]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 74)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_44]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 74)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_55]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 74)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_66]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 74)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_77]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 74)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_88]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 74)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_99]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 75)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_4]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 75)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_13]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 75)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_14]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 75)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_15]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 75)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_16]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 75)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_17]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 75)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_4]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 76)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_13]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 76)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_14]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 76)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_15]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 76)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_16]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 76)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_17]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 76)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_18]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 76)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_13]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 77)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_14]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 77)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_15]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 77)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_16]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 77)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_17]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 77)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_18]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 77)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_19]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 77)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_20]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 78)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_21]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 78)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_23]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 78)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_24]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 78)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_25]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 78)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_26]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 78)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_27]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 78)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_21]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 79)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_23]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 79)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_24]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 79)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_25]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 79)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_26]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 79)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_27]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 79)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_28]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 79)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_23]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 80)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_24]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 80)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_25]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 80)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_26]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 80)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_27]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 80)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_28]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 80)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_29]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 80)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_30]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 81)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_31]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 81)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_32]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 81)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_34]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 81)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_35]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 81)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_36]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 81)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_37]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 81)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_31]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 82)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_32]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 82)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_34]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 82)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_35]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 82)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_36]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 82)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_37]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 82)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_38]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 82)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_32]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 83)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_34]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 83)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_35]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 83)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_36]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 83)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_37]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 83)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_38]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 83)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_39]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 83)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_40]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 84)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_41]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 84)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_42]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 84)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_43]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 84)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_45]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 84)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_46]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 84)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_47]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 84)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_41]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 85)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_42]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 85)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_43]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 85)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_45]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 85)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_46]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 85)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_47]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 85)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_48]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 85)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_42]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 86)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_43]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 86)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_45]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 86)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_46]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 86)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_47]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 86)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_48]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 86)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_49]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 86)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_50]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 87)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_51]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 87)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_52]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 87)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_53]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 87)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_54]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 87)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_56]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 87)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_57]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 87)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_51]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 88)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_52]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 88)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_53]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 88)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_54]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 88)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_56]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 88)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_57]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 88)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_58]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 88)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_52]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 89)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_53]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 89)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_54]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 89)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_56]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 89)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_57]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 89)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_58]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 89)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_59]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 89)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_60]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 90)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_61]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 90)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_62]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 90)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_63]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 90)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_64]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 90)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_65]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 90)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_67]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 90)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_61]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 91)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_62]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 91)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_63]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 91)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_64]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 91)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_65]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 91)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_67]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 91)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_68]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 91)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_62]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 92)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_63]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 92)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_64]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 92)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_65]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 92)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_67]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 92)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_68]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 92)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_69]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 92)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_70]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 93)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_71]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 93)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_72]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 93)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_73]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 93)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_74]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 93)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_75]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 93)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_76]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 93)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_71]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 94)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_72]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 94)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_73]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 94)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_74]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 94)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_75]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 94)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_76]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 94)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_78]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 94)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_72]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 95)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_73]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 95)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_74]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 95)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_75]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 95)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_76]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 95)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_78]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 95)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_79]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 95)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_80]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 96)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_81]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 96)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_82]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 96)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_83]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 96)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_84]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 96)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_85]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 96)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_86]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 96)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_81]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 97)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_82]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 97)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_83]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 97)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_84]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 97)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_85]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 97)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_86]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 97)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_87]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 97)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_82]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 98)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_83]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 98)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_84]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 98)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_85]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 98)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_86]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 98)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_87]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 98)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_89]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 98)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_90]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 99)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_91]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 99)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_92]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 99)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_93]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 99)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_94]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 99)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_95]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 99)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_96]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 99)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_91]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 100)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_92]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 100)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_93]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 100)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_94]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 100)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_95]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 100)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_96]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 100)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_97]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 100)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_92]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 101)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_93]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 101)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_94]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 101)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_95]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 101)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_96]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 101)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_97]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 101)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_98]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 101)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_100]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 102)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_101]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 102)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_102]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 102)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_103]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 102)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_104]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 102)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_105]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 102)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_106]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 102)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_101]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 103)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_102]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 103)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_103]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 103)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_104]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 103)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_105]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 103)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_106]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 103)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_107]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 103)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_102]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 104)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_103]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 104)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_104]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 104)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_105]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 104)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_106]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 104)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_107]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 104)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_108]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 104)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_109]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 105)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_5]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 105)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_6]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 105)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_7]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 105)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_8]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 105)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_9]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 105)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_10]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 105)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_5]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 106)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_6]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 106)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_7]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 106)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_8]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 106)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_9]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 106)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_10]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 106)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_11]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 106)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[cse_var_6]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 107)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[cse_var_7]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 107)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[cse_var_8]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 107)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[cse_var_9]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 107)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[cse_var_10]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 107)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[cse_var_11]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 107)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[cse_var_12]*kernel.shared_1[(((threadIdx.x*144) + (rc.outer.inner*36)) + 107)]))
              }
            }
          }
        }
        for (i1.inner: int32, 0, 2) {
          compute[((((floordiv(blockIdx.x, 7)*3136) + (threadIdx.x*98)) + (i1.inner*49)) + (floormod(blockIdx.x, 7)*7))] = max((conv2d_nchw_1[i1.inner] + bias[(((floordiv(blockIdx.x, 7)*64) + (threadIdx.x*2)) + i1.inner)]), 0f32)
          compute[(((((floordiv(blockIdx.x, 7)*3136) + (threadIdx.x*98)) + (i1.inner*49)) + (floormod(blockIdx.x, 7)*7)) + 1)] = max((conv2d_nchw_1[(i1.inner + 2)] + bias[(((floordiv(blockIdx.x, 7)*64) + (threadIdx.x*2)) + i1.inner)]), 0f32)
          compute[(((((floordiv(blockIdx.x, 7)*3136) + (threadIdx.x*98)) + (i1.inner*49)) + (floormod(blockIdx.x, 7)*7)) + 2)] = max((conv2d_nchw_1[(i1.inner + 4)] + bias[(((floordiv(blockIdx.x, 7)*64) + (threadIdx.x*2)) + i1.inner)]), 0f32)
          compute[(((((floordiv(blockIdx.x, 7)*3136) + (threadIdx.x*98)) + (i1.inner*49)) + (floormod(blockIdx.x, 7)*7)) + 3)] = max((conv2d_nchw_1[(i1.inner + 6)] + bias[(((floordiv(blockIdx.x, 7)*64) + (threadIdx.x*2)) + i1.inner)]), 0f32)
          compute[(((((floordiv(blockIdx.x, 7)*3136) + (threadIdx.x*98)) + (i1.inner*49)) + (floormod(blockIdx.x, 7)*7)) + 4)] = max((conv2d_nchw_1[(i1.inner + 8)] + bias[(((floordiv(blockIdx.x, 7)*64) + (threadIdx.x*2)) + i1.inner)]), 0f32)
          compute[(((((floordiv(blockIdx.x, 7)*3136) + (threadIdx.x*98)) + (i1.inner*49)) + (floormod(blockIdx.x, 7)*7)) + 5)] = max((conv2d_nchw_1[(i1.inner + 10)] + bias[(((floordiv(blockIdx.x, 7)*64) + (threadIdx.x*2)) + i1.inner)]), 0f32)
          compute[(((((floordiv(blockIdx.x, 7)*3136) + (threadIdx.x*98)) + (i1.inner*49)) + (floormod(blockIdx.x, 7)*7)) + 6)] = max((conv2d_nchw_1[(i1.inner + 12)] + bias[(((floordiv(blockIdx.x, 7)*64) + (threadIdx.x*2)) + i1.inner)]), 0f32)
        }
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 141-144

Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.

.. GENERATED FROM PYTHON SOURCE LINES 144-171

.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Execution time of this operator: 0.281 ms




.. GENERATED FROM PYTHON SOURCE LINES 172-177

Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

.. GENERATED FROM PYTHON SOURCE LINES 179-182

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.

.. GENERATED FROM PYTHON SOURCE LINES 182-189

.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=1)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=2)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=32)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=1)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=7)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=4)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=2)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=3)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=1)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=3)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=1)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=2)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=32)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=1)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=1)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=1)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=7)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=32)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=32)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 512)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(32) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[14];
      __shared__ float pad_temp_shared[216];
      __shared__ float kernel_shared[4608];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      conv2d_nchw[8] = 0.000000e+00f;
      conv2d_nchw[10] = 0.000000e+00f;
      conv2d_nchw[12] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[7] = 0.000000e+00f;
      conv2d_nchw[9] = 0.000000e+00f;
      conv2d_nchw[11] = 0.000000e+00f;
      conv2d_nchw[13] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 64; ++rc_outer_outer) {
        __syncthreads();
        pad_temp_shared[((int)threadIdx.x)] = (((((1 <= (((((int)threadIdx.x) % 27) / 9) + (((int)blockIdx.x) % 7))) && ((((((int)threadIdx.x) % 27) / 9) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[((((((rc_outer_outer * 392) + ((((int)threadIdx.x) / 27) * 49)) + (((((int)threadIdx.x) % 27) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + (((int)threadIdx.x) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 32)] = (((((1 <= ((((((int)threadIdx.x) + 5) % 27) / 9) + (((int)blockIdx.x) % 7))) && (((((((int)threadIdx.x) + 5) % 27) / 9) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 32) / 27) * 49)) + ((((((int)threadIdx.x) + 5) % 27) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 64)] = (((((1 <= ((((((int)threadIdx.x) + 10) % 27) / 9) + (((int)blockIdx.x) % 7))) && (((((((int)threadIdx.x) + 10) % 27) / 9) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 64) / 27) * 49)) + ((((((int)threadIdx.x) + 10) % 27) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 96)] = (((((1 <= ((((((int)threadIdx.x) + 15) % 27) / 9) + (((int)blockIdx.x) % 7))) && (((((((int)threadIdx.x) + 15) % 27) / 9) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 96) / 27) * 49)) + ((((((int)threadIdx.x) + 15) % 27) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 128)] = (((((1 <= ((((((int)threadIdx.x) + 20) % 27) / 9) + (((int)blockIdx.x) % 7))) && (((((((int)threadIdx.x) + 20) % 27) / 9) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 128) / 27) * 49)) + ((((((int)threadIdx.x) + 20) % 27) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 160)] = (((((1 <= ((((((int)threadIdx.x) + 25) % 27) / 9) + (((int)blockIdx.x) % 7))) && (((((((int)threadIdx.x) + 25) % 27) / 9) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 160) / 27) * 49)) + ((((((int)threadIdx.x) + 25) % 27) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
        if (((int)threadIdx.x) < 24) {
          pad_temp_shared[(((int)threadIdx.x) + 192)] = (((((1 <= (((((int)threadIdx.x) + 3) / 9) + (((int)blockIdx.x) % 7))) && ((((((int)threadIdx.x) + 3) / 9) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 192) / 27) * 49)) + (((((int)threadIdx.x) + 3) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
        }
        kernel_shared[((int)threadIdx.x)] = kernel[((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 72)) + ((int)threadIdx.x))];
        kernel_shared[(((int)threadIdx.x) + 32)] = kernel[(((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 64)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 64) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 64) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 96)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 96) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 24)];
        kernel_shared[(((int)threadIdx.x) + 128)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 128) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 56) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 160)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 160) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 192)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 192) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) / 3) + 16) % 24) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 224)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 224) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 256)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 256) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 288)] = kernel[(((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 18432)];
        kernel_shared[(((int)threadIdx.x) + 320)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 320) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 352)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 352) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 64) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 384)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 384) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 24)];
        kernel_shared[(((int)threadIdx.x) + 416)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 416) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 56) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 448)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 448) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 480)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 480) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) / 3) + 16) % 24) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 512)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 512) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 544)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 544) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 576)] = kernel[(((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 36864)];
        kernel_shared[(((int)threadIdx.x) + 608)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 608) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 640)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 640) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 64) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 672)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 672) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 24)];
        kernel_shared[(((int)threadIdx.x) + 704)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 704) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 56) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 736)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 736) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 768)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 768) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) / 3) + 16) % 24) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 800)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 800) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 832)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 832) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 864)] = kernel[(((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 55296)];
        kernel_shared[(((int)threadIdx.x) + 896)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 896) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 928)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 928) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 64) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 960)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 960) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 24)];
        kernel_shared[(((int)threadIdx.x) + 992)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 992) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 56) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1024)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1024) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1056)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1056) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) / 3) + 16) % 24) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1088)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1088) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1120)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1120) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1152)] = kernel[(((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 73728)];
        kernel_shared[(((int)threadIdx.x) + 1184)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1184) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1216)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1216) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 64) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1248)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1248) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 24)];
        kernel_shared[(((int)threadIdx.x) + 1280)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1280) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 56) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1312)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1312) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1344)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1344) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) / 3) + 16) % 24) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1376)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1376) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1408)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1408) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1440)] = kernel[(((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 92160)];
        kernel_shared[(((int)threadIdx.x) + 1472)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1472) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1504)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1504) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 64) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1536)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1536) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 24)];
        kernel_shared[(((int)threadIdx.x) + 1568)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1568) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 56) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1600)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1600) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1632)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1632) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) / 3) + 16) % 24) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1664)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1664) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1696)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1696) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1728)] = kernel[(((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 110592)];
        kernel_shared[(((int)threadIdx.x) + 1760)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1760) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1792)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1792) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 64) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1824)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1824) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 24)];
        kernel_shared[(((int)threadIdx.x) + 1856)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1856) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 56) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1888)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1888) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1920)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1920) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) / 3) + 16) % 24) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1952)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1952) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1984)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1984) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2016)] = kernel[(((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 129024)];
        kernel_shared[(((int)threadIdx.x) + 2048)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2048) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2080)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2080) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 64) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2112)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2112) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 24)];
        kernel_shared[(((int)threadIdx.x) + 2144)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2144) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 56) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2176)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2176) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2208)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2208) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) / 3) + 16) % 24) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2240)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2240) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2272)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2272) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2304)] = kernel[(((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 147456)];
        kernel_shared[(((int)threadIdx.x) + 2336)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2336) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2368)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2368) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 64) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2400)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2400) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 24)];
        kernel_shared[(((int)threadIdx.x) + 2432)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2432) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 56) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2464)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2464) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2496)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2496) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) / 3) + 16) % 24) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2528)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2528) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2560)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2560) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2592)] = kernel[(((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 165888)];
        kernel_shared[(((int)threadIdx.x) + 2624)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2624) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2656)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2656) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 64) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2688)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2688) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 24)];
        kernel_shared[(((int)threadIdx.x) + 2720)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2720) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 56) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2752)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2752) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2784)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2784) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) / 3) + 16) % 24) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2816)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2816) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2848)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2848) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2880)] = kernel[(((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 184320)];
        kernel_shared[(((int)threadIdx.x) + 2912)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2912) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2944)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2944) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 64) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2976)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2976) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 24)];
        kernel_shared[(((int)threadIdx.x) + 3008)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3008) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 56) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3040)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3040) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3072)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3072) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) / 3) + 16) % 24) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3104)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3104) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3136)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3136) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3168)] = kernel[(((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 202752)];
        kernel_shared[(((int)threadIdx.x) + 3200)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3200) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3232)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3232) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 64) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3264)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3264) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 24)];
        kernel_shared[(((int)threadIdx.x) + 3296)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3296) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 56) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3328)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3328) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3360)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3360) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) / 3) + 16) % 24) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3392)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3392) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3424)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3424) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3456)] = kernel[(((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 221184)];
        kernel_shared[(((int)threadIdx.x) + 3488)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3488) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3520)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3520) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 64) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3552)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3552) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 24)];
        kernel_shared[(((int)threadIdx.x) + 3584)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3584) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 56) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3616)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3616) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3648)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3648) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) / 3) + 16) % 24) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3680)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3680) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3712)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3712) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3744)] = kernel[(((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 239616)];
        kernel_shared[(((int)threadIdx.x) + 3776)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3776) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3808)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3808) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 64) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3840)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3840) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 24)];
        kernel_shared[(((int)threadIdx.x) + 3872)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3872) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 56) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3904)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3904) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3936)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3936) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) / 3) + 16) % 24) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3968)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3968) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4000)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4000) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4032)] = kernel[(((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 258048)];
        kernel_shared[(((int)threadIdx.x) + 4064)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4064) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4096)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4096) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 64) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4128)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4128) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 24)];
        kernel_shared[(((int)threadIdx.x) + 4160)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4160) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 56) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4192)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4192) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4224)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4224) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) / 3) + 16) % 24) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4256)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4256) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4288)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4288) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4320)] = kernel[(((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 276480)];
        kernel_shared[(((int)threadIdx.x) + 4352)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4352) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4384)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4384) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 64) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4416)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4416) / 72) * 4608)) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 24)];
        kernel_shared[(((int)threadIdx.x) + 4448)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4448) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 56) % 72) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4480)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4480) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4512)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4512) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) / 3) + 16) % 24) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4544)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4544) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4576)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4576) / 72) * 4608)) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        __syncthreads();
        for (int rc_outer_inner = 0; rc_outer_inner < 2; ++rc_outer_inner) {
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(rc_outer_inner * 108)] * kernel_shared[((((int)threadIdx.x) * 144) + (rc_outer_inner * 36))]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 1)] * kernel_shared[((((int)threadIdx.x) * 144) + (rc_outer_inner * 36))]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 2)] * kernel_shared[((((int)threadIdx.x) * 144) + (rc_outer_inner * 36))]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 3)] * kernel_shared[((((int)threadIdx.x) * 144) + (rc_outer_inner * 36))]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 4)] * kernel_shared[((((int)threadIdx.x) * 144) + (rc_outer_inner * 36))]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 5)] * kernel_shared[((((int)threadIdx.x) * 144) + (rc_outer_inner * 36))]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 6)] * kernel_shared[((((int)threadIdx.x) * 144) + (rc_outer_inner * 36))]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 1)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 1)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 2)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 1)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 3)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 1)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 4)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 1)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 5)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 1)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 6)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 1)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 7)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 1)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 2)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 2)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 3)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 2)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 4)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 2)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 5)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 2)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 6)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 2)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 7)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 2)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 8)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 2)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 9)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 3)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 10)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 3)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 11)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 3)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 12)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 3)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 13)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 3)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 14)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 3)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 15)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 3)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 10)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 4)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 11)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 4)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 12)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 4)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 13)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 4)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 14)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 4)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 15)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 4)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 16)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 4)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 11)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 5)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 12)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 5)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 13)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 5)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 14)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 5)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 15)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 5)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 16)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 5)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 17)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 5)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 18)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 6)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 19)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 6)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 20)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 6)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 21)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 6)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 22)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 6)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 23)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 6)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 24)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 6)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 19)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 7)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 20)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 7)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 21)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 7)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 22)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 7)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 23)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 7)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 24)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 7)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 25)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 7)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 20)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 8)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 21)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 8)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 22)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 8)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 23)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 8)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 24)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 8)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 25)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 8)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 26)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 8)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 27)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 9)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 28)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 9)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 29)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 9)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 30)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 9)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 31)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 9)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 32)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 9)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 33)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 9)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 28)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 10)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 29)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 10)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 30)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 10)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 31)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 10)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 32)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 10)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 33)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 10)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 34)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 10)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 29)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 11)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 30)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 11)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 31)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 11)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 32)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 11)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 33)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 11)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 34)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 11)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 35)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 11)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 36)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 12)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 37)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 12)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 38)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 12)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 39)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 12)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 40)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 12)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 41)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 12)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 42)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 12)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 37)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 13)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 38)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 13)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 39)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 13)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 40)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 13)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 41)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 13)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 42)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 13)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 43)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 13)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 38)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 14)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 39)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 14)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 40)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 14)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 41)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 14)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 42)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 14)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 43)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 14)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 44)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 14)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 45)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 15)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 46)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 15)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 47)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 15)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 48)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 15)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 49)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 15)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 50)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 15)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 51)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 15)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 46)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 16)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 47)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 16)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 48)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 16)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 49)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 16)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 50)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 16)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 51)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 16)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 52)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 16)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 47)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 17)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 48)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 17)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 49)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 17)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 50)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 17)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 51)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 17)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 52)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 17)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 53)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 17)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 54)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 18)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 55)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 18)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 56)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 18)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 57)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 18)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 58)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 18)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 59)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 18)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 60)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 18)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 55)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 19)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 56)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 19)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 57)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 19)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 58)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 19)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 59)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 19)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 60)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 19)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 61)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 19)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 56)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 20)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 57)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 20)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 58)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 20)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 59)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 20)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 60)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 20)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 61)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 20)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 62)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 20)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 63)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 21)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 64)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 21)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 65)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 21)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 66)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 21)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 67)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 21)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 68)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 21)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 69)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 21)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 64)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 22)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 65)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 22)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 66)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 22)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 67)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 22)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 68)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 22)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 69)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 22)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 70)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 22)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 65)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 23)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 66)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 23)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 67)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 23)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 68)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 23)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 69)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 23)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 70)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 23)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 71)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 23)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 72)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 24)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 73)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 24)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 74)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 24)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 75)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 24)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 76)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 24)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 77)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 24)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 78)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 24)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 73)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 25)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 74)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 25)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 75)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 25)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 76)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 25)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 77)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 25)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 78)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 25)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 79)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 25)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 74)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 26)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 75)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 26)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 76)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 26)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 77)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 26)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 78)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 26)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 79)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 26)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 80)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 26)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 81)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 27)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 82)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 27)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 83)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 27)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 84)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 27)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 85)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 27)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 86)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 27)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 87)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 27)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 82)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 28)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 83)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 28)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 84)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 28)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 85)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 28)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 86)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 28)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 87)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 28)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 88)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 28)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 83)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 29)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 84)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 29)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 85)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 29)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 86)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 29)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 87)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 29)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 88)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 29)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 89)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 29)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 90)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 30)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 91)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 30)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 92)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 30)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 93)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 30)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 94)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 30)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 95)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 30)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 96)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 30)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 91)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 31)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 92)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 31)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 93)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 31)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 94)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 31)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 95)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 31)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 96)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 31)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 97)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 31)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 92)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 32)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 93)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 32)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 94)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 32)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 95)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 32)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 96)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 32)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 97)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 32)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 98)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 32)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 99)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 33)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 100)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 33)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 101)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 33)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 102)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 33)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 103)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 33)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 104)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 33)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 105)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 33)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 100)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 34)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 101)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 34)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 102)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 34)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 103)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 34)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 104)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 34)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 105)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 34)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 106)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 34)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 108) + 101)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 35)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 108) + 102)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 35)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 108) + 103)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 35)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 108) + 104)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 35)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 108) + 105)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 35)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 108) + 106)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 35)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 108) + 107)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 35)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(rc_outer_inner * 108)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 72)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 1)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 72)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 2)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 72)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 3)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 72)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 4)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 72)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 5)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 72)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 6)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 72)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 1)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 73)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 2)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 73)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 3)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 73)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 4)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 73)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 5)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 73)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 6)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 73)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 7)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 73)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 2)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 74)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 3)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 74)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 4)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 74)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 5)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 74)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 6)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 74)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 7)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 74)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 8)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 74)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 9)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 75)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 10)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 75)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 11)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 75)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 12)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 75)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 13)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 75)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 14)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 75)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 15)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 75)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 10)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 76)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 11)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 76)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 12)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 76)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 13)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 76)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 14)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 76)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 15)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 76)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 16)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 76)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 11)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 77)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 12)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 77)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 13)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 77)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 14)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 77)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 15)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 77)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 16)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 77)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 17)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 77)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 18)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 78)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 19)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 78)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 20)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 78)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 21)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 78)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 22)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 78)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 23)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 78)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 24)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 78)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 19)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 79)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 20)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 79)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 21)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 79)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 22)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 79)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 23)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 79)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 24)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 79)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 25)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 79)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 20)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 80)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 21)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 80)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 22)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 80)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 23)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 80)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 24)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 80)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 25)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 80)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 26)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 80)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 27)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 81)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 28)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 81)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 29)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 81)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 30)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 81)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 31)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 81)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 32)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 81)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 33)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 81)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 28)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 82)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 29)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 82)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 30)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 82)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 31)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 82)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 32)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 82)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 33)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 82)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 34)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 82)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 29)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 83)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 30)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 83)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 31)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 83)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 32)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 83)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 33)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 83)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 34)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 83)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 35)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 83)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 36)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 84)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 37)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 84)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 38)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 84)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 39)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 84)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 40)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 84)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 41)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 84)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 42)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 84)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 37)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 85)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 38)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 85)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 39)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 85)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 40)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 85)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 41)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 85)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 42)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 85)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 43)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 85)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 38)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 86)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 39)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 86)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 40)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 86)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 41)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 86)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 42)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 86)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 43)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 86)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 44)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 86)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 45)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 87)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 46)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 87)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 47)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 87)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 48)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 87)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 49)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 87)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 50)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 87)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 51)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 87)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 46)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 88)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 47)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 88)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 48)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 88)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 49)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 88)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 50)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 88)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 51)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 88)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 52)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 88)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 47)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 89)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 48)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 89)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 49)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 89)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 50)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 89)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 51)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 89)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 52)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 89)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 53)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 89)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 54)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 90)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 55)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 90)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 56)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 90)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 57)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 90)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 58)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 90)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 59)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 90)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 60)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 90)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 55)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 91)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 56)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 91)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 57)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 91)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 58)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 91)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 59)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 91)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 60)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 91)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 61)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 91)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 56)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 92)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 57)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 92)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 58)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 92)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 59)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 92)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 60)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 92)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 61)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 92)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 62)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 92)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 63)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 93)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 64)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 93)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 65)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 93)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 66)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 93)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 67)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 93)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 68)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 93)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 69)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 93)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 64)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 94)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 65)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 94)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 66)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 94)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 67)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 94)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 68)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 94)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 69)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 94)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 70)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 94)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 65)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 95)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 66)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 95)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 67)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 95)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 68)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 95)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 69)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 95)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 70)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 95)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 71)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 95)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 72)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 96)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 73)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 96)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 74)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 96)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 75)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 96)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 76)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 96)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 77)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 96)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 78)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 96)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 73)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 97)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 74)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 97)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 75)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 97)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 76)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 97)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 77)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 97)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 78)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 97)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 79)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 97)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 74)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 98)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 75)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 98)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 76)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 98)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 77)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 98)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 78)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 98)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 79)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 98)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 80)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 98)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 81)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 99)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 82)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 99)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 83)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 99)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 84)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 99)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 85)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 99)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 86)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 99)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 87)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 99)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 82)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 100)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 83)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 100)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 84)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 100)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 85)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 100)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 86)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 100)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 87)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 100)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 88)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 100)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 83)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 101)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 84)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 101)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 85)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 101)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 86)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 101)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 87)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 101)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 88)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 101)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 89)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 101)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 90)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 102)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 91)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 102)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 92)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 102)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 93)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 102)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 94)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 102)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 95)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 102)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 96)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 102)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 91)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 103)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 92)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 103)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 93)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 103)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 94)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 103)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 95)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 103)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 96)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 103)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 97)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 103)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 92)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 104)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 93)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 104)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 94)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 104)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 95)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 104)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 96)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 104)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 97)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 104)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 98)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 104)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 99)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 105)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 100)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 105)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 101)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 105)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 102)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 105)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 103)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 105)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 104)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 105)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 105)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 105)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 100)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 106)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 101)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 106)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 102)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 106)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 103)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 106)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 104)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 106)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 105)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 106)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 106)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 106)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 108) + 101)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 107)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 108) + 102)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 107)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 108) + 103)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 107)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 108) + 104)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 107)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 108) + 105)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 107)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 108) + 106)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 107)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 108) + 107)] * kernel_shared[(((((int)threadIdx.x) * 144) + (rc_outer_inner * 36)) + 107)]));
        }
      }
      for (int i1_inner = 0; i1_inner < 2; ++i1_inner) {
        compute[(((((((int)blockIdx.x) / 7) * 3136) + (((int)threadIdx.x) * 98)) + (i1_inner * 49)) + ((((int)blockIdx.x) % 7) * 7))] = max((conv2d_nchw[i1_inner] + bias[((((((int)blockIdx.x) / 7) * 64) + (((int)threadIdx.x) * 2)) + i1_inner)]), 0.000000e+00f);
        compute[((((((((int)blockIdx.x) / 7) * 3136) + (((int)threadIdx.x) * 98)) + (i1_inner * 49)) + ((((int)blockIdx.x) % 7) * 7)) + 1)] = max((conv2d_nchw[(i1_inner + 2)] + bias[((((((int)blockIdx.x) / 7) * 64) + (((int)threadIdx.x) * 2)) + i1_inner)]), 0.000000e+00f);
        compute[((((((((int)blockIdx.x) / 7) * 3136) + (((int)threadIdx.x) * 98)) + (i1_inner * 49)) + ((((int)blockIdx.x) % 7) * 7)) + 2)] = max((conv2d_nchw[(i1_inner + 4)] + bias[((((((int)blockIdx.x) / 7) * 64) + (((int)threadIdx.x) * 2)) + i1_inner)]), 0.000000e+00f);
        compute[((((((((int)blockIdx.x) / 7) * 3136) + (((int)threadIdx.x) * 98)) + (i1_inner * 49)) + ((((int)blockIdx.x) % 7) * 7)) + 3)] = max((conv2d_nchw[(i1_inner + 6)] + bias[((((((int)blockIdx.x) / 7) * 64) + (((int)threadIdx.x) * 2)) + i1_inner)]), 0.000000e+00f);
        compute[((((((((int)blockIdx.x) / 7) * 3136) + (((int)threadIdx.x) * 98)) + (i1_inner * 49)) + ((((int)blockIdx.x) % 7) * 7)) + 4)] = max((conv2d_nchw[(i1_inner + 8)] + bias[((((((int)blockIdx.x) / 7) * 64) + (((int)threadIdx.x) * 2)) + i1_inner)]), 0.000000e+00f);
        compute[((((((((int)blockIdx.x) / 7) * 3136) + (((int)threadIdx.x) * 98)) + (i1_inner * 49)) + ((((int)blockIdx.x) % 7) * 7)) + 5)] = max((conv2d_nchw[(i1_inner + 10)] + bias[((((((int)blockIdx.x) / 7) * 64) + (((int)threadIdx.x) * 2)) + i1_inner)]), 0.000000e+00f);
        compute[((((((((int)blockIdx.x) / 7) * 3136) + (((int)threadIdx.x) * 98)) + (i1_inner * 49)) + ((((int)blockIdx.x) % 7) * 7)) + 6)] = max((conv2d_nchw[(i1_inner + 12)] + bias[((((((int)blockIdx.x) / 7) * 64) + (((int)threadIdx.x) * 2)) + i1_inner)]), 0.000000e+00f);
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 190-194

A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.

.. GENERATED FROM PYTHON SOURCE LINES 194-216

.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Resume search:
    /venv/apache-tvm-py3.7/lib/python3.7/site-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 5 minutes  45.403 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
