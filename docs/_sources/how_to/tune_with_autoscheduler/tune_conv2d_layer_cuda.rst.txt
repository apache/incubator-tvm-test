
.. DO NOT EDIT. THIS FILE WAS AUTOMATICALLY GENERATED BY
.. TVM'S MONKEY-PATCHED VERSION OF SPHINX-GALLERY. TO MAKE
.. CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.py"

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        This tutorial can be used interactively with Google Colab! You can also click
        :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>` to run the Jupyter notebook locally.

        .. image:: https://raw.githubusercontent.com/apache/web-data/main/images/utilities/colab_button.svg
            :align: center
            :target: https://colab.research.google.com/github/apache/tvm-site/blob/asf-site/docs/_downloads/5f1f7bd7d90710fd404f7bcdc4965622/tune_conv2d_layer_cuda.ipynb
            :width: 300px

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.

.. GENERATED FROM PYTHON SOURCE LINES 39-48

.. code-block:: default



    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python








.. GENERATED FROM PYTHON SOURCE LINES 55-60

Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.

.. GENERATED FROM PYTHON SOURCE LINES 60-72

.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]









.. GENERATED FROM PYTHON SOURCE LINES 73-76

Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.

.. GENERATED FROM PYTHON SOURCE LINES 76-89

.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)





.. GENERATED FROM PYTHON SOURCE LINES 90-107

Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.

.. GENERATED FROM PYTHON SOURCE LINES 107-117

.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Get devices for measurement successfully!




.. GENERATED FROM PYTHON SOURCE LINES 118-124

Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.

.. GENERATED FROM PYTHON SOURCE LINES 124-133

.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx








.. GENERATED FROM PYTHON SOURCE LINES 134-137

We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.

.. GENERATED FROM PYTHON SOURCE LINES 137-141

.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Lowered TIR:
    @main = primfn(data_1: handle, kernel_1: handle, bias_1: handle, compute_1: handle) -> ()
      attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
      buffers = {data: Buffer(data_2: Pointer(float32), float32, [1, 512, 7, 7], []),
                 kernel: Buffer(kernel_2: Pointer(float32), float32, [512, 512, 3, 3], []),
                 bias: Buffer(bias_2: Pointer(float32), float32, [1, 512, 1, 1], []),
                 compute: Buffer(compute_2: Pointer(float32), float32, [1, 512, 7, 7], [])}
      buffer_map = {data_1: data, kernel_1: kernel, bias_1: bias, compute_1: compute} {
      attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = 8;
      allocate(conv2d_nchw: Pointer(local float32), float32, [28]), storage_scope = local;
      allocate(pad_temp.shared: Pointer(shared float32), float32, [1008]), storage_scope = shared;
      allocate(kernel.shared: Pointer(shared float32), float32, [3072]), storage_scope = shared;
      attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112 {
        conv2d_nchw_1: Buffer(conv2d_nchw, float32, [49], [], scope="local", align=16)[0] = 0f32
        conv2d_nchw_1[7] = 0f32
        conv2d_nchw_1[14] = 0f32
        conv2d_nchw_1[21] = 0f32
        conv2d_nchw_1[1] = 0f32
        conv2d_nchw_1[8] = 0f32
        conv2d_nchw_1[15] = 0f32
        conv2d_nchw_1[22] = 0f32
        conv2d_nchw_1[2] = 0f32
        conv2d_nchw_1[9] = 0f32
        conv2d_nchw_1[16] = 0f32
        conv2d_nchw_1[23] = 0f32
        conv2d_nchw_1[3] = 0f32
        conv2d_nchw_1[10] = 0f32
        conv2d_nchw_1[17] = 0f32
        conv2d_nchw_1[24] = 0f32
        conv2d_nchw_1[4] = 0f32
        conv2d_nchw_1[11] = 0f32
        conv2d_nchw_1[18] = 0f32
        conv2d_nchw_1[25] = 0f32
        conv2d_nchw_1[5] = 0f32
        conv2d_nchw_1[12] = 0f32
        conv2d_nchw_1[19] = 0f32
        conv2d_nchw_1[26] = 0f32
        conv2d_nchw_1[6] = 0f32
        conv2d_nchw_1[13] = 0f32
        conv2d_nchw_1[20] = 0f32
        conv2d_nchw_1[27] = 0f32
        for (rc.outer.outer: int32, 0, 32) {
          for (ry.outer.outer: int32, 0, 3) {
            let cse_var_4: int32 = (rc.outer.outer*784)
            let cse_var_3: int32 = (ry.outer.outer*7)
            let cse_var_2: int32 = (rc.outer.outer*144)
            let cse_var_1: int32 = (ry.outer.outer*3)
             {
              attr [IterVar(threadIdx.x_1: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              pad_temp.shared_1: Buffer(pad_temp.shared, float32, [1008], [], scope="shared")[threadIdx.x_1] = @tir.if_then_else(((((1 <= (floordiv(floormod(threadIdx.x_1, 63), 9) + ry.outer.outer)) && ((floordiv(floormod(threadIdx.x_1, 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data_3: Buffer(data_2, float32, [25088], [])[((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*7)) + cse_var_3) + floormod(threadIdx.x_1, 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              pad_temp.shared_1[(threadIdx.x_1 + 112)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 49), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 49), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data_3[((((cse_var_4 + (floordiv((threadIdx.x_1 + 112), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              pad_temp.shared_1[(threadIdx.x_1 + 224)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 35), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 35), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data_3[((((cse_var_4 + (floordiv((threadIdx.x_1 + 224), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              pad_temp.shared_1[(threadIdx.x_1 + 336)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 21), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 21), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data_3[((((cse_var_4 + (floordiv((threadIdx.x_1 + 336), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              pad_temp.shared_1[(threadIdx.x_1 + 448)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 7), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 7), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data_3[((((cse_var_4 + (floordiv((threadIdx.x_1 + 448), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              pad_temp.shared_1[(threadIdx.x_1 + 560)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 56), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 56), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data_3[((((cse_var_4 + (floordiv((threadIdx.x_1 + 560), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              pad_temp.shared_1[(threadIdx.x_1 + 672)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 42), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 42), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data_3[((((cse_var_4 + (floordiv((threadIdx.x_1 + 672), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              pad_temp.shared_1[(threadIdx.x_1 + 784)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 28), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 28), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data_3[((((cse_var_4 + (floordiv((threadIdx.x_1 + 784), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              pad_temp.shared_1[(threadIdx.x_1 + 896)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 14), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 14), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data_3[((((cse_var_4 + (floordiv((threadIdx.x_1 + 896), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_2: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1: Buffer(kernel.shared, float32, [3072], [], scope="shared")[threadIdx.x_2] = kernel_3: Buffer(kernel_2, float32, [2359296], [])[((((((blockIdx.x*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_2) + (floordiv(floormod(threadIdx.x_2, 48), 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 112)] = kernel_3[((((((blockIdx.x*294912) + (floordiv((threadIdx.x_2 + 112), 48)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 224)] = kernel_3[((((((blockIdx.x*294912) + (floordiv((threadIdx.x_2 + 224), 48)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 336)] = kernel_3[(((((((blockIdx.x*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_2) + (floordiv(floormod(threadIdx.x_2, 48), 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 32256)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 448)] = kernel_3[((((((blockIdx.x*294912) + (floordiv((threadIdx.x_2 + 448), 48)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 560)] = kernel_3[((((((blockIdx.x*294912) + (floordiv((threadIdx.x_2 + 560), 48)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 672)] = kernel_3[(((((((blockIdx.x*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_2) + (floordiv(floormod(threadIdx.x_2, 48), 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 64512)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 784)] = kernel_3[((((((blockIdx.x*294912) + (floordiv((threadIdx.x_2 + 784), 48)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 896)] = kernel_3[((((((blockIdx.x*294912) + (floordiv((threadIdx.x_2 + 896), 48)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 1008)] = kernel_3[(((((((blockIdx.x*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_2) + (floordiv(floormod(threadIdx.x_2, 48), 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 96768)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 1120)] = kernel_3[((((((blockIdx.x*294912) + (floordiv((threadIdx.x_2 + 1120), 48)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 1232)] = kernel_3[((((((blockIdx.x*294912) + (floordiv((threadIdx.x_2 + 1232), 48)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 1344)] = kernel_3[(((((((blockIdx.x*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_2) + (floordiv(floormod(threadIdx.x_2, 48), 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 129024)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 1456)] = kernel_3[((((((blockIdx.x*294912) + (floordiv((threadIdx.x_2 + 1456), 48)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 1568)] = kernel_3[((((((blockIdx.x*294912) + (floordiv((threadIdx.x_2 + 1568), 48)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 1680)] = kernel_3[(((((((blockIdx.x*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_2) + (floordiv(floormod(threadIdx.x_2, 48), 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 161280)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 1792)] = kernel_3[((((((blockIdx.x*294912) + (floordiv((threadIdx.x_2 + 1792), 48)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 1904)] = kernel_3[((((((blockIdx.x*294912) + (floordiv((threadIdx.x_2 + 1904), 48)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 2016)] = kernel_3[(((((((blockIdx.x*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_2) + (floordiv(floormod(threadIdx.x_2, 48), 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 193536)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 2128)] = kernel_3[((((((blockIdx.x*294912) + (floordiv((threadIdx.x_2 + 2128), 48)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 2240)] = kernel_3[((((((blockIdx.x*294912) + (floordiv((threadIdx.x_2 + 2240), 48)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 2352)] = kernel_3[(((((((blockIdx.x*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_2) + (floordiv(floormod(threadIdx.x_2, 48), 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 225792)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 2464)] = kernel_3[((((((blockIdx.x*294912) + (floordiv((threadIdx.x_2 + 2464), 48)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 2576)] = kernel_3[((((((blockIdx.x*294912) + (floordiv((threadIdx.x_2 + 2576), 48)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 2688)] = kernel_3[(((((((blockIdx.x*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_2) + (floordiv(floormod(threadIdx.x_2, 48), 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 258048)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 2800)] = kernel_3[((((((blockIdx.x*294912) + (floordiv((threadIdx.x_2 + 2800), 48)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              kernel.shared_1[(threadIdx.x_2 + 2912)] = kernel_3[((((((blockIdx.x*294912) + (floordiv((threadIdx.x_2 + 2912), 48)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
              if @tir.likely((threadIdx.x_2 < 48), dtype=bool) {
                kernel.shared_1[(threadIdx.x_2 + 3024)] = kernel_3[((((((blockIdx.x*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 290304)]
              }
              for (rx.outer.inner: int32, 0, 3) {
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(rx.outer.inner + floormod(threadIdx.x, 7))]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + rx.outer.inner)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(rx.outer.inner + floormod(threadIdx.x, 7))]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 768)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(rx.outer.inner + floormod(threadIdx.x, 7))]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1536)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(rx.outer.inner + floormod(threadIdx.x, 7))]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2304)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 3)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 771)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1539)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2307)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 6)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 774)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1542)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2310)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 9)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 777)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1545)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2313)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 12)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 780)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1548)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2316)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 315)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 15)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 315)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 783)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 315)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1551)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 315)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2319)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 378)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 18)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 378)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 786)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 378)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1554)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 378)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2322)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 441)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 21)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 441)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 789)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 441)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1557)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 441)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2325)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 504)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 24)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 504)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 792)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 504)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1560)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 504)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2328)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 567)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 27)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 567)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 795)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 567)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1563)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 567)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2331)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 630)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 30)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 630)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 798)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 630)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1566)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 630)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2334)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 693)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 33)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 693)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 801)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 693)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1569)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 693)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2337)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 756)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 36)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 756)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 804)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 756)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1572)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 756)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2340)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 819)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 39)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 819)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 807)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 819)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1575)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 819)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2343)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 882)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 42)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 882)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 810)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 882)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1578)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 882)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2346)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 945)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 45)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 945)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 813)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 945)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1581)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 945)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2349)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 9)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + rx.outer.inner)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 9)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 768)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 9)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1536)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 9)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2304)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 72)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 3)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 72)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 771)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 72)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1539)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 72)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2307)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 135)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 6)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 135)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 774)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 135)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1542)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 135)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2310)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 198)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 9)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 198)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 777)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 198)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1545)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 198)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2313)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 261)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 12)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 261)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 780)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 261)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1548)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 261)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2316)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 324)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 15)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 324)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 783)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 324)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1551)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 324)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2319)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 387)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 18)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 387)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 786)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 387)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1554)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 387)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2322)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 450)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 21)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 450)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 789)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 450)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1557)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 450)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2325)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 513)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 24)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 513)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 792)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 513)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1560)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 513)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2328)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 576)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 27)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 576)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 795)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 576)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1563)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 576)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2331)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 639)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 30)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 639)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 798)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 639)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1566)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 639)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2334)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 702)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 33)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 702)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 801)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 702)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1569)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 702)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2337)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 765)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 36)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 765)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 804)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 765)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1572)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 765)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2340)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 828)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 39)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 828)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 807)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 828)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1575)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 828)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2343)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 891)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 42)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 891)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 810)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 891)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1578)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 891)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2346)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 954)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 45)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 954)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 813)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 954)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1581)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 954)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2349)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 18)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + rx.outer.inner)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 18)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 768)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 18)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1536)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 18)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2304)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 81)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 3)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 81)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 771)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 81)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1539)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 81)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2307)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 144)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 6)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 144)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 774)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 144)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1542)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 144)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2310)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 207)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 9)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 207)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 777)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 207)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1545)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 207)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2313)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 270)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 12)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 270)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 780)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 270)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1548)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 270)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2316)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 333)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 15)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 333)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 783)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 333)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1551)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 333)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2319)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 396)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 18)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 396)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 786)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 396)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1554)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 396)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2322)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 459)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 21)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 459)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 789)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 459)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1557)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 459)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2325)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 522)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 24)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 522)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 792)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 522)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1560)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 522)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2328)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 585)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 27)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 585)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 795)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 585)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1563)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 585)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2331)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 648)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 30)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 648)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 798)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 648)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1566)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 648)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2334)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 711)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 33)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 711)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 801)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 711)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1569)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 711)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2337)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 774)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 36)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 774)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 804)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 774)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1572)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 774)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2340)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 837)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 39)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 837)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 807)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 837)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1575)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 837)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2343)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 900)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 42)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 900)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 810)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 900)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1578)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 900)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2346)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 963)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 45)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 963)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 813)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 963)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1581)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 963)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2349)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 27)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + rx.outer.inner)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 27)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 768)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 27)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1536)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 27)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2304)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 90)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 3)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 90)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 771)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 90)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1539)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 90)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2307)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 153)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 6)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 153)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 774)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 153)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1542)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 153)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2310)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 216)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 9)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 216)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 777)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 216)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1545)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 216)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2313)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 279)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 12)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 279)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 780)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 279)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1548)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 279)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2316)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 342)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 15)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 342)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 783)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 342)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1551)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 342)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2319)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 405)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 18)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 405)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 786)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 405)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1554)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 405)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2322)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 468)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 21)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 468)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 789)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 468)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1557)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 468)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2325)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 531)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 24)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 531)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 792)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 531)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1560)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 531)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2328)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 594)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 27)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 594)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 795)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 594)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1563)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 594)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2331)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 657)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 30)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 657)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 798)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 657)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1566)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 657)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2334)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 720)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 33)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 720)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 801)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 720)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1569)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 720)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2337)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 783)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 36)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 783)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 804)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 783)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1572)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 783)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2340)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 846)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 39)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 846)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 807)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 846)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1575)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 846)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2343)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 909)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 42)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 909)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 810)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 909)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1578)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 909)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2346)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 972)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 45)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 972)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 813)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 972)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1581)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 972)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2349)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 36)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + rx.outer.inner)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 36)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 768)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 36)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1536)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 36)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2304)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 99)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 3)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 99)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 771)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 99)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1539)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 99)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2307)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 162)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 6)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 162)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 774)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 162)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1542)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 162)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2310)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 225)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 9)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 225)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 777)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 225)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1545)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 225)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2313)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 288)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 12)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 288)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 780)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 288)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1548)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 288)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2316)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 351)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 15)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 351)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 783)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 351)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1551)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 351)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2319)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 414)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 18)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 414)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 786)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 414)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1554)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 414)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2322)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 477)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 21)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 477)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 789)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 477)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1557)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 477)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2325)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 540)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 24)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 540)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 792)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 540)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1560)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 540)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2328)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 603)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 27)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 603)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 795)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 603)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1563)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 603)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2331)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 666)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 30)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 666)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 798)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 666)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1566)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 666)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2334)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 729)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 33)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 729)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 801)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 729)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1569)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 729)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2337)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 792)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 36)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 792)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 804)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 792)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1572)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 792)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2340)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 855)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 39)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 855)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 807)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 855)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1575)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 855)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2343)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 918)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 42)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 918)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 810)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 918)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1578)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 918)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2346)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 981)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 45)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 981)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 813)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 981)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1581)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 981)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2349)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 45)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + rx.outer.inner)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 45)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 768)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 45)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1536)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 45)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2304)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 108)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 3)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 108)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 771)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 108)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1539)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 108)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2307)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 171)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 6)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 171)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 774)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 171)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1542)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 171)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2310)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 234)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 9)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 234)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 777)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 234)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1545)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 234)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2313)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 297)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 12)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 297)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 780)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 297)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1548)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 297)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2316)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 360)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 15)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 360)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 783)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 360)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1551)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 360)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2319)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 423)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 18)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 423)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 786)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 423)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1554)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 423)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2322)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 486)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 21)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 486)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 789)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 486)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1557)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 486)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2325)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 549)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 24)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 549)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 792)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 549)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1560)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 549)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2328)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 612)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 27)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 612)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 795)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 612)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1563)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 612)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2331)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 675)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 30)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 675)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 798)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 675)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1566)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 675)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2334)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 738)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 33)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 738)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 801)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 738)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1569)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 738)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2337)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 801)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 36)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 801)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 804)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 801)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1572)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 801)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2340)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 864)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 39)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 864)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 807)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 864)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1575)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 864)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2343)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 927)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 42)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 927)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 810)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 927)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1578)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 927)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2346)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 990)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 45)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 990)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 813)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 990)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1581)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 990)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2349)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 54)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + rx.outer.inner)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 54)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 768)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 54)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1536)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 54)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2304)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 117)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 3)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 117)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 771)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 117)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1539)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 117)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2307)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 180)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 6)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 180)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 774)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 180)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1542)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 180)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2310)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 243)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 9)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 243)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 777)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 243)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1545)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 243)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2313)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 306)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 12)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 306)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 780)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 306)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1548)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 306)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2316)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 369)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 15)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 369)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 783)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 369)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1551)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 369)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2319)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 432)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 18)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 432)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 786)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 432)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1554)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 432)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2322)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 495)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 21)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 495)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 789)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 495)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1557)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 495)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2325)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 558)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 24)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 558)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 792)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 558)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1560)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 558)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2328)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 621)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 27)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 621)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 795)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 621)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1563)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 621)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2331)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 684)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 30)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 684)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 798)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 684)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1566)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 684)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2334)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 747)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 33)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 747)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 801)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 747)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1569)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 747)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2337)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 810)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 36)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 810)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 804)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 810)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1572)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 810)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2340)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 873)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 39)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 873)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 807)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 873)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1575)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 873)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2343)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 936)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 42)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 936)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 810)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 936)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1578)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 936)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2346)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 999)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 45)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 999)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 813)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 999)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 1581)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[((rx.outer.inner + floormod(threadIdx.x, 7)) + 999)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*48) + rx.outer.inner) + 2349)]))
              }
            }
          }
        }
        for (i2.inner: int32, 0, 7) {
          compute_3: Buffer(compute_2, float32, [25088], [])[((((blockIdx.x*3136) + (floordiv(threadIdx.x, 7)*49)) + (i2.inner*7)) + floormod(threadIdx.x, 7))] = max((conv2d_nchw_1[i2.inner] + bias_3: Buffer(bias_2, float32, [512], [])[((blockIdx.x*64) + floordiv(threadIdx.x, 7))]), 0f32)
          compute_3[(((((blockIdx.x*3136) + (floordiv(threadIdx.x, 7)*49)) + (i2.inner*7)) + floormod(threadIdx.x, 7)) + 784)] = max((conv2d_nchw_1[(i2.inner + 7)] + bias_3[(((blockIdx.x*64) + floordiv(threadIdx.x, 7)) + 16)]), 0f32)
          compute_3[(((((blockIdx.x*3136) + (floordiv(threadIdx.x, 7)*49)) + (i2.inner*7)) + floormod(threadIdx.x, 7)) + 1568)] = max((conv2d_nchw_1[(i2.inner + 14)] + bias_3[(((blockIdx.x*64) + floordiv(threadIdx.x, 7)) + 32)]), 0f32)
          compute_3[(((((blockIdx.x*3136) + (floordiv(threadIdx.x, 7)*49)) + (i2.inner*7)) + floormod(threadIdx.x, 7)) + 2352)] = max((conv2d_nchw_1[(i2.inner + 21)] + bias_3[(((blockIdx.x*64) + floordiv(threadIdx.x, 7)) + 48)]), 0f32)
        }
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 142-145

Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.

.. GENERATED FROM PYTHON SOURCE LINES 145-172

.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Execution time of this operator: 0.415 ms




.. GENERATED FROM PYTHON SOURCE LINES 173-178

Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

.. GENERATED FROM PYTHON SOURCE LINES 180-183

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.

.. GENERATED FROM PYTHON SOURCE LINES 183-190

.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=1)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=16)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=4)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=7)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=7)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=16)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=1)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=1)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=1)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=1)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=3)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=1)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=16)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=4)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=7)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=1)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=7)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=112)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=112)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 1024)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(112) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[28];
      __shared__ float pad_temp_shared[1008];
      __shared__ float kernel_shared[3072];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[7] = 0.000000e+00f;
      conv2d_nchw[14] = 0.000000e+00f;
      conv2d_nchw[21] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[8] = 0.000000e+00f;
      conv2d_nchw[15] = 0.000000e+00f;
      conv2d_nchw[22] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[9] = 0.000000e+00f;
      conv2d_nchw[16] = 0.000000e+00f;
      conv2d_nchw[23] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[10] = 0.000000e+00f;
      conv2d_nchw[17] = 0.000000e+00f;
      conv2d_nchw[24] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[11] = 0.000000e+00f;
      conv2d_nchw[18] = 0.000000e+00f;
      conv2d_nchw[25] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[12] = 0.000000e+00f;
      conv2d_nchw[19] = 0.000000e+00f;
      conv2d_nchw[26] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      conv2d_nchw[13] = 0.000000e+00f;
      conv2d_nchw[20] = 0.000000e+00f;
      conv2d_nchw[27] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 32; ++rc_outer_outer) {
        for (int ry_outer_outer = 0; ry_outer_outer < 3; ++ry_outer_outer) {
          __syncthreads();
          pad_temp_shared[((int)threadIdx.x)] = (((((1 <= (((((int)threadIdx.x) % 63) / 9) + ry_outer_outer)) && ((((((int)threadIdx.x) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + ((((int)threadIdx.x) / 9) * 7)) + (ry_outer_outer * 7)) + (((int)threadIdx.x) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 112)] = (((((1 <= ((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 112) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 224)] = (((((1 <= ((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 224) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 336)] = (((((1 <= ((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 336) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 448)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 448) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 560)] = (((((1 <= ((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 560) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 672)] = (((((1 <= ((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 672) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 784)] = (((((1 <= ((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 784) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 896)] = (((((1 <= ((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 896) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
          kernel_shared[((int)threadIdx.x)] = kernel[((((((((int)blockIdx.x) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3))];
          kernel_shared[(((int)threadIdx.x) + 112)] = kernel[((((((((int)blockIdx.x) * 294912) + (((((int)threadIdx.x) + 112) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 224)] = kernel[((((((((int)blockIdx.x) * 294912) + (((((int)threadIdx.x) + 224) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 336)] = kernel[(((((((((int)blockIdx.x) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 32256)];
          kernel_shared[(((int)threadIdx.x) + 448)] = kernel[((((((((int)blockIdx.x) * 294912) + (((((int)threadIdx.x) + 448) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 560)] = kernel[((((((((int)blockIdx.x) * 294912) + (((((int)threadIdx.x) + 560) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 672)] = kernel[(((((((((int)blockIdx.x) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 64512)];
          kernel_shared[(((int)threadIdx.x) + 784)] = kernel[((((((((int)blockIdx.x) * 294912) + (((((int)threadIdx.x) + 784) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 896)] = kernel[((((((((int)blockIdx.x) * 294912) + (((((int)threadIdx.x) + 896) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1008)] = kernel[(((((((((int)blockIdx.x) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 96768)];
          kernel_shared[(((int)threadIdx.x) + 1120)] = kernel[((((((((int)blockIdx.x) * 294912) + (((((int)threadIdx.x) + 1120) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1232)] = kernel[((((((((int)blockIdx.x) * 294912) + (((((int)threadIdx.x) + 1232) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1344)] = kernel[(((((((((int)blockIdx.x) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 129024)];
          kernel_shared[(((int)threadIdx.x) + 1456)] = kernel[((((((((int)blockIdx.x) * 294912) + (((((int)threadIdx.x) + 1456) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1568)] = kernel[((((((((int)blockIdx.x) * 294912) + (((((int)threadIdx.x) + 1568) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1680)] = kernel[(((((((((int)blockIdx.x) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 161280)];
          kernel_shared[(((int)threadIdx.x) + 1792)] = kernel[((((((((int)blockIdx.x) * 294912) + (((((int)threadIdx.x) + 1792) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1904)] = kernel[((((((((int)blockIdx.x) * 294912) + (((((int)threadIdx.x) + 1904) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2016)] = kernel[(((((((((int)blockIdx.x) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 193536)];
          kernel_shared[(((int)threadIdx.x) + 2128)] = kernel[((((((((int)blockIdx.x) * 294912) + (((((int)threadIdx.x) + 2128) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2240)] = kernel[((((((((int)blockIdx.x) * 294912) + (((((int)threadIdx.x) + 2240) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2352)] = kernel[(((((((((int)blockIdx.x) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 225792)];
          kernel_shared[(((int)threadIdx.x) + 2464)] = kernel[((((((((int)blockIdx.x) * 294912) + (((((int)threadIdx.x) + 2464) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2576)] = kernel[((((((((int)blockIdx.x) * 294912) + (((((int)threadIdx.x) + 2576) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2688)] = kernel[(((((((((int)blockIdx.x) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 258048)];
          kernel_shared[(((int)threadIdx.x) + 2800)] = kernel[((((((((int)blockIdx.x) * 294912) + (((((int)threadIdx.x) + 2800) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2912)] = kernel[((((((((int)blockIdx.x) * 294912) + (((((int)threadIdx.x) + 2912) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          if (((int)threadIdx.x) < 48) {
            kernel_shared[(((int)threadIdx.x) + 3024)] = kernel[((((((((int)blockIdx.x) * 294912) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 290304)];
          }
          __syncthreads();
          for (int rx_outer_inner = 0; rx_outer_inner < 3; ++rx_outer_inner) {
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(rx_outer_inner + (((int)threadIdx.x) % 7))] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + rx_outer_inner)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(rx_outer_inner + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 768)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(rx_outer_inner + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1536)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[(rx_outer_inner + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2304)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 63)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 3)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 63)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 771)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 63)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1539)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 63)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2307)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 126)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 6)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 126)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 774)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 126)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1542)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 126)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2310)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 189)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 9)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 189)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 777)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 189)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1545)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 189)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2313)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 12)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 780)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1548)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2316)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 315)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 15)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 315)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 783)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 315)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1551)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 315)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2319)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 378)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 18)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 378)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 786)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 378)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1554)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 378)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2322)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 441)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 21)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 441)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 789)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 441)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1557)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 441)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2325)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 24)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 792)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1560)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2328)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 27)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 795)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1563)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2331)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 630)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 30)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 630)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 798)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 630)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1566)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 630)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2334)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 693)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 33)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 693)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 801)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 693)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1569)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 693)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2337)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 756)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 36)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 756)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 804)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 756)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1572)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 756)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2340)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 39)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 807)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1575)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2343)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 882)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 42)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 882)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 810)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 882)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1578)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 882)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2346)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 945)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 45)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 945)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 813)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 945)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1581)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 945)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2349)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + rx_outer_inner)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 768)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1536)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2304)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 72)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 3)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 72)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 771)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 72)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1539)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 72)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2307)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 135)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 6)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 135)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 774)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 135)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1542)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 135)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2310)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 198)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 9)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 198)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 777)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 198)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1545)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 198)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2313)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 12)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 780)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1548)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2316)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 15)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 783)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1551)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2319)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 387)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 18)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 387)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 786)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 387)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1554)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 387)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2322)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 450)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 21)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 450)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 789)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 450)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1557)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 450)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2325)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 513)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 24)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 513)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 792)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 513)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1560)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 513)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2328)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 576)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 27)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 576)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 795)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 576)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1563)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 576)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2331)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 639)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 30)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 639)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 798)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 639)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1566)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 639)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2334)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 702)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 33)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 702)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 801)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 702)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1569)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 702)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2337)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 765)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 36)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 765)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 804)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 765)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1572)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 765)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2340)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 828)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 39)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 828)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 807)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 828)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1575)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 828)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2343)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 891)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 42)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 891)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 810)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 891)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1578)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 891)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2346)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 954)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 45)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 954)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 813)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 954)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1581)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 954)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2349)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + rx_outer_inner)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 768)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1536)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2304)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 3)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 771)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1539)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2307)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 144)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 6)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 144)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 774)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 144)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1542)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 144)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2310)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 207)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 9)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 207)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 777)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 207)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1545)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 207)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2313)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 270)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 12)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 270)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 780)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 270)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1548)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 270)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2316)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 15)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 783)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1551)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2319)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 396)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 18)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 396)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 786)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 396)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1554)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 396)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2322)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 459)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 21)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 459)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 789)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 459)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1557)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 459)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2325)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 522)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 24)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 522)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 792)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 522)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1560)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 522)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2328)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 27)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 795)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1563)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2331)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 648)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 30)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 648)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 798)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 648)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1566)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 648)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2334)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 711)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 33)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 711)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 801)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 711)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1569)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 711)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2337)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 774)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 36)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 774)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 804)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 774)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1572)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 774)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2340)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 837)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 39)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 837)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 807)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 837)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1575)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 837)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2343)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 900)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 42)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 900)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 810)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 900)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1578)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 900)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2346)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 963)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 45)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 963)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 813)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 963)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1581)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 963)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2349)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 27)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + rx_outer_inner)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 27)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 768)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 27)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1536)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 27)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2304)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 3)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 771)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1539)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2307)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 153)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 6)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 153)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 774)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 153)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1542)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 153)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2310)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 216)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 9)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 216)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 777)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 216)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1545)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 216)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2313)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 279)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 12)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 279)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 780)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 279)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1548)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 279)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2316)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 15)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 783)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1551)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2319)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 18)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 786)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1554)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2322)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 468)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 21)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 468)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 789)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 468)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1557)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 468)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2325)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 531)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 24)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 531)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 792)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 531)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1560)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 531)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2328)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 594)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 27)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 594)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 795)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 594)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1563)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 594)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2331)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 657)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 30)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 657)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 798)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 657)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1566)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 657)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2334)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 720)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 33)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 720)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 801)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 720)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1569)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 720)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2337)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 783)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 36)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 783)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 804)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 783)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1572)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 783)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2340)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 846)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 39)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 846)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 807)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 846)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1575)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 846)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2343)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 909)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 42)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 909)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 810)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 909)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1578)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 909)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2346)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 972)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 45)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 972)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 813)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 972)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1581)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 972)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2349)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 36)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + rx_outer_inner)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 36)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 768)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 36)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1536)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 36)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2304)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 3)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 771)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1539)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2307)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 6)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 774)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1542)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2310)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 225)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 9)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 225)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 777)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 225)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1545)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 225)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2313)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 288)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 12)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 288)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 780)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 288)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1548)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 288)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2316)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 351)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 15)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 351)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 783)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 351)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1551)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 351)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2319)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 18)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 786)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1554)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2322)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 477)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 21)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 477)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 789)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 477)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1557)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 477)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2325)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 540)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 24)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 540)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 792)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 540)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1560)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 540)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2328)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 603)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 27)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 603)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 795)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 603)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1563)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 603)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2331)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 666)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 30)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 666)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 798)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 666)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1566)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 666)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2334)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 729)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 33)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 729)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 801)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 729)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1569)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 729)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2337)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 792)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 36)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 792)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 804)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 792)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1572)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 792)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2340)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 855)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 39)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 855)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 807)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 855)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1575)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 855)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2343)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 918)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 42)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 918)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 810)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 918)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1578)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 918)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2346)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 981)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 45)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 981)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 813)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 981)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1581)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 981)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2349)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 45)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + rx_outer_inner)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 45)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 768)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 45)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1536)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 45)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2304)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 108)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 3)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 108)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 771)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 108)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1539)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 108)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2307)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 6)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 774)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1542)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2310)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 234)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 9)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 234)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 777)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 234)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1545)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 234)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2313)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 297)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 12)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 297)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 780)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 297)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1548)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 297)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2316)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 360)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 15)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 360)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 783)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 360)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1551)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 360)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2319)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 18)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 786)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1554)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2322)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 21)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 789)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1557)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2325)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 549)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 24)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 549)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 792)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 549)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1560)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 549)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2328)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 612)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 27)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 612)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 795)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 612)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1563)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 612)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2331)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 675)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 30)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 675)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 798)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 675)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1566)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 675)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2334)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 738)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 33)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 738)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 801)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 738)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1569)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 738)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2337)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 801)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 36)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 801)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 804)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 801)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1572)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 801)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2340)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 864)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 39)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 864)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 807)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 864)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1575)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 864)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2343)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 927)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 42)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 927)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 810)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 927)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1578)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 927)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2346)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 990)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 45)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 990)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 813)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 990)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1581)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 990)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2349)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 54)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + rx_outer_inner)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 54)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 768)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 54)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1536)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 54)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2304)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 117)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 3)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 117)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 771)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 117)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1539)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 117)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2307)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 6)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 774)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1542)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2310)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 9)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 777)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1545)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2313)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 306)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 12)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 306)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 780)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 306)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1548)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 306)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2316)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 369)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 15)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 369)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 783)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 369)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1551)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 369)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2319)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 432)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 18)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 432)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 786)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 432)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1554)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 432)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2322)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 21)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 789)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1557)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2325)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 558)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 24)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 558)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 792)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 558)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1560)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 558)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2328)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 621)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 27)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 621)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 795)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 621)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1563)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 621)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2331)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 684)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 30)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 684)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 798)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 684)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1566)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 684)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2334)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 747)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 33)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 747)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 801)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 747)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1569)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 747)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2337)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 810)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 36)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 810)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 804)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 810)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1572)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 810)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2340)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 873)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 39)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 873)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 807)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 873)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1575)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 873)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2343)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 936)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 42)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 936)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 810)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 936)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1578)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 936)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2346)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 999)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 45)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 999)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 813)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 999)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 1581)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((rx_outer_inner + (((int)threadIdx.x) % 7)) + 999)] * kernel_shared[((((((int)threadIdx.x) / 7) * 48) + rx_outer_inner) + 2349)]));
          }
        }
      }
      for (int i2_inner = 0; i2_inner < 7; ++i2_inner) {
        compute[((((((int)blockIdx.x) * 3136) + ((((int)threadIdx.x) / 7) * 49)) + (i2_inner * 7)) + (((int)threadIdx.x) % 7))] = max((conv2d_nchw[i2_inner] + bias[((((int)blockIdx.x) * 64) + (((int)threadIdx.x) / 7))]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 3136) + ((((int)threadIdx.x) / 7) * 49)) + (i2_inner * 7)) + (((int)threadIdx.x) % 7)) + 784)] = max((conv2d_nchw[(i2_inner + 7)] + bias[(((((int)blockIdx.x) * 64) + (((int)threadIdx.x) / 7)) + 16)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 3136) + ((((int)threadIdx.x) / 7) * 49)) + (i2_inner * 7)) + (((int)threadIdx.x) % 7)) + 1568)] = max((conv2d_nchw[(i2_inner + 14)] + bias[(((((int)blockIdx.x) * 64) + (((int)threadIdx.x) / 7)) + 32)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 3136) + ((((int)threadIdx.x) / 7) * 49)) + (i2_inner * 7)) + (((int)threadIdx.x) % 7)) + 2352)] = max((conv2d_nchw[(i2_inner + 21)] + bias[(((((int)blockIdx.x) * 64) + (((int)threadIdx.x) / 7)) + 48)]), 0.000000e+00f);
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 191-195

A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.

.. GENERATED FROM PYTHON SOURCE LINES 195-217

.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Resume search:
    /venv/apache-tvm-py3.7/lib/python3.7/site-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 5 minutes  32.273 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
