
.. DO NOT EDIT. THIS FILE WAS AUTOMATICALLY GENERATED BY
.. TVM'S MONKEY-PATCHED VERSION OF SPHINX-GALLERY. TO MAKE
.. CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.py"

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        This tutorial can be used interactively with Google Colab! You can also click
        :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>` to run the Jupyter notebook locally.

        .. image:: https://raw.githubusercontent.com/tlc-pack/web-data/main/images/utilities/colab_button.svg
            :align: center
            :target: https://colab.research.google.com/github/apache/tvm-site/blob/asf-site/docs/_downloads/5f1f7bd7d90710fd404f7bcdc4965622/tune_conv2d_layer_cuda.ipynb
            :width: 300px

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.

.. GENERATED FROM PYTHON SOURCE LINES 39-47

.. code-block:: default


    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python








.. GENERATED FROM PYTHON SOURCE LINES 51-56

Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.

.. GENERATED FROM PYTHON SOURCE LINES 56-68

.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]









.. GENERATED FROM PYTHON SOURCE LINES 69-72

Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.

.. GENERATED FROM PYTHON SOURCE LINES 72-85

.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)





.. GENERATED FROM PYTHON SOURCE LINES 86-103

Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.

.. GENERATED FROM PYTHON SOURCE LINES 103-113

.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Get devices for measurement successfully!




.. GENERATED FROM PYTHON SOURCE LINES 114-120

Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.

.. GENERATED FROM PYTHON SOURCE LINES 120-129

.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx








.. GENERATED FROM PYTHON SOURCE LINES 130-133

We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.

.. GENERATED FROM PYTHON SOURCE LINES 133-137

.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Lowered TIR:
    @main = primfn(data_1: handle, kernel_1: handle, bias_1: handle, compute_1: handle) -> ()
      attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
      buffers = {data: Buffer(data_2: Pointer(float32), float32, [1, 512, 7, 7], []),
                 kernel: Buffer(kernel_2: Pointer(float32), float32, [512, 512, 3, 3], []),
                 bias: Buffer(bias_2: Pointer(float32), float32, [1, 512, 1, 1], []),
                 compute: Buffer(compute_2: Pointer(float32), float32, [1, 512, 7, 7], [])}
      buffer_map = {data_1: data, kernel_1: kernel, bias_1: bias, compute_1: compute} {
      attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = 16;
      allocate(conv2d_nchw: Pointer(local float32), float32, [7]), storage_scope = local;
      allocate(pad_temp.shared: Pointer(shared float32), float32, [1296]), storage_scope = shared;
      allocate(kernel.shared: Pointer(shared float32), float32, [4608]), storage_scope = shared;
      attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224 {
        conv2d_nchw_1: Buffer(conv2d_nchw, float32, [1], [], scope="local", align=4)[0] = 0f32
        conv2d_nchw_1[1] = 0f32
        conv2d_nchw_1[2] = 0f32
        conv2d_nchw_1[3] = 0f32
        conv2d_nchw_1[4] = 0f32
        conv2d_nchw_1[5] = 0f32
        conv2d_nchw_1[6] = 0f32
        for (rc.outer.outer: int32, 0, 32) {
          let cse_var_2: int32 = (rc.outer.outer*784)
          let cse_var_1: int32 = (rc.outer.outer*144)
           {
            attr [IterVar(threadIdx.x_1: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            pad_temp.shared_1: Buffer(pad_temp.shared, float32, [1296], [], scope="shared")[threadIdx.x_1] = @tir.if_then_else(((((9 <= floormod(threadIdx.x_1, 81)) && (floormod(threadIdx.x_1, 81) < 72)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data_3: Buffer(data_2, float32, [25088], [])[((((cse_var_2 + (floordiv(threadIdx.x_1, 81)*49)) + (floordiv(floormod(threadIdx.x_1, 81), 9)*7)) + floormod(threadIdx.x_1, 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            pad_temp.shared_1[(threadIdx.x_1 + 224)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 62), 81)) && (floormod((threadIdx.x_1 + 62), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data_3[((((cse_var_2 + (floordiv((threadIdx.x_1 + 224), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 62), 81), 9)*7)) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            pad_temp.shared_1[(threadIdx.x_1 + 448)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 43), 81)) && (floormod((threadIdx.x_1 + 43), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data_3[((((cse_var_2 + (floordiv((threadIdx.x_1 + 448), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 43), 81), 9)*7)) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            pad_temp.shared_1[(threadIdx.x_1 + 672)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 24), 81)) && (floormod((threadIdx.x_1 + 24), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data_3[((((cse_var_2 + (floordiv((threadIdx.x_1 + 672), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 24), 81), 9)*7)) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            pad_temp.shared_1[(threadIdx.x_1 + 896)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 5), 81)) && (floormod((threadIdx.x_1 + 5), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data_3[((((cse_var_2 + (floordiv((threadIdx.x_1 + 896), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 5), 81), 9)*7)) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            if @tir.likely((threadIdx.x_1 < 176), dtype=bool) {
              pad_temp.shared_1[(threadIdx.x_1 + 1120)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 67), 81)) && (floormod((threadIdx.x_1 + 67), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data_3[((((cse_var_2 + (floordiv((threadIdx.x_1 + 1120), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 67), 81), 9)*7)) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_2: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            kernel.shared_1: Buffer(kernel.shared, float32, [4608], [], scope="shared")[threadIdx.x_2] = kernel_3: Buffer(kernel_2, float32, [2359296], [])[((((blockIdx.x*147456) + (floordiv(threadIdx.x_2, 144)*4608)) + cse_var_1) + floormod(threadIdx.x_2, 144))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            kernel.shared_1[(threadIdx.x_2 + 224)] = kernel_3[((((((blockIdx.x*147456) + (floordiv((threadIdx.x_2 + 224), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 80), 144), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 8), 9), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            kernel.shared_1[(threadIdx.x_2 + 448)] = kernel_3[((((((blockIdx.x*147456) + (floordiv((threadIdx.x_2 + 448), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 144), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 7), 9), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            kernel.shared_1[(threadIdx.x_2 + 672)] = kernel_3[((((((blockIdx.x*147456) + (floordiv((threadIdx.x_2 + 672), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 96), 144), 9)*9)) + (floormod((floordiv(threadIdx.x_2, 3) + 2), 3)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            kernel.shared_1[(threadIdx.x_2 + 896)] = kernel_3[((((((blockIdx.x*147456) + (floordiv((threadIdx.x_2 + 896), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 144), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 5), 9), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            kernel.shared_1[(threadIdx.x_2 + 1120)] = kernel_3[((((((blockIdx.x*147456) + (floordiv((threadIdx.x_2 + 1120), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 112), 144), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 4), 9), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            kernel.shared_1[(threadIdx.x_2 + 1344)] = kernel_3[((((((blockIdx.x*147456) + (floordiv((threadIdx.x_2 + 1344), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 48), 144), 9)*9)) + (floormod((floordiv(threadIdx.x_2, 3) + 1), 3)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            kernel.shared_1[(threadIdx.x_2 + 1568)] = kernel_3[(((((blockIdx.x*147456) + (floordiv((threadIdx.x_2 + 1568), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 128), 144), 9)*9)) + floormod((threadIdx.x_2 + 2), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            kernel.shared_1[(threadIdx.x_2 + 1792)] = kernel_3[(((((blockIdx.x*147456) + (floordiv((threadIdx.x_2 + 1792), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 144), 9)*9)) + floormod((threadIdx.x_2 + 1), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            kernel.shared_1[(threadIdx.x_2 + 2016)] = kernel_3[(((((blockIdx.x*147456) + (floordiv(threadIdx.x_2, 144)*4608)) + cse_var_1) + floormod(threadIdx.x_2, 144)) + 64512)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            kernel.shared_1[(threadIdx.x_2 + 2240)] = kernel_3[((((((blockIdx.x*147456) + (floordiv((threadIdx.x_2 + 2240), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 80), 144), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 8), 9), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            kernel.shared_1[(threadIdx.x_2 + 2464)] = kernel_3[((((((blockIdx.x*147456) + (floordiv((threadIdx.x_2 + 2464), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 144), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 7), 9), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            kernel.shared_1[(threadIdx.x_2 + 2688)] = kernel_3[((((((blockIdx.x*147456) + (floordiv((threadIdx.x_2 + 2688), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 96), 144), 9)*9)) + (floormod((floordiv(threadIdx.x_2, 3) + 2), 3)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            kernel.shared_1[(threadIdx.x_2 + 2912)] = kernel_3[((((((blockIdx.x*147456) + (floordiv((threadIdx.x_2 + 2912), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 144), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 5), 9), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            kernel.shared_1[(threadIdx.x_2 + 3136)] = kernel_3[((((((blockIdx.x*147456) + (floordiv((threadIdx.x_2 + 3136), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 112), 144), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 4), 9), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            kernel.shared_1[(threadIdx.x_2 + 3360)] = kernel_3[((((((blockIdx.x*147456) + (floordiv((threadIdx.x_2 + 3360), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 48), 144), 9)*9)) + (floormod((floordiv(threadIdx.x_2, 3) + 1), 3)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            kernel.shared_1[(threadIdx.x_2 + 3584)] = kernel_3[(((((blockIdx.x*147456) + (floordiv((threadIdx.x_2 + 3584), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 128), 144), 9)*9)) + floormod((threadIdx.x_2 + 2), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            kernel.shared_1[(threadIdx.x_2 + 3808)] = kernel_3[(((((blockIdx.x*147456) + (floordiv((threadIdx.x_2 + 3808), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 144), 9)*9)) + floormod((threadIdx.x_2 + 1), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            kernel.shared_1[(threadIdx.x_2 + 4032)] = kernel_3[(((((blockIdx.x*147456) + (floordiv(threadIdx.x_2, 144)*4608)) + cse_var_1) + floormod(threadIdx.x_2, 144)) + 129024)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            kernel.shared_1[(threadIdx.x_2 + 4256)] = kernel_3[((((((blockIdx.x*147456) + (floordiv((threadIdx.x_2 + 4256), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 80), 144), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 8), 9), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 224;
            if @tir.likely((threadIdx.x_2 < 128), dtype=bool) {
              kernel.shared_1[(threadIdx.x_2 + 4480)] = kernel_3[((((((blockIdx.x*147456) + (floordiv((threadIdx.x_2 + 4480), 144)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 144), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 7), 9), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            }
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7)*9)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*144)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*144)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 2)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*144)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 3)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*144)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 4)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*144)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 5)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*144)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 6)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*144)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 9)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 9)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 9)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 9)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 9)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 9)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 9)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 162)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 18)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 163)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 18)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 164)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 18)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 165)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 18)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 166)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 18)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 167)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 18)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 168)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 18)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 243)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 27)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 244)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 27)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 245)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 27)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 246)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 27)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 247)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 27)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 248)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 27)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 249)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 27)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 324)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 36)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 325)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 36)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 326)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 36)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 327)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 36)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 328)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 36)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 329)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 36)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 330)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 36)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 405)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 45)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 406)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 45)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 407)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 45)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 408)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 45)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 409)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 45)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 410)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 45)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 411)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 45)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 486)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 54)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 487)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 54)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 488)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 54)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 489)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 54)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 490)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 54)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 491)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 54)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 492)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 54)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 567)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 63)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 568)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 63)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 569)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 63)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 570)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 63)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 571)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 63)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 572)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 63)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 573)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 63)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 648)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 72)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 649)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 72)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 650)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 72)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 651)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 72)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 652)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 72)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 653)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 72)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 654)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 72)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 729)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 81)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 730)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 81)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 731)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 81)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 732)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 81)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 733)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 81)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 734)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 81)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 735)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 81)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 810)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 90)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 811)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 90)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 812)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 90)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 813)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 90)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 814)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 90)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 815)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 90)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 816)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 90)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 891)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 99)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 892)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 99)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 893)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 99)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 894)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 99)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 895)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 99)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 896)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 99)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 897)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 99)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 972)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 108)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 973)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 108)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 974)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 108)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 975)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 108)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 976)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 108)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 977)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 108)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 978)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 108)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1053)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 117)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1054)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 117)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1055)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 117)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1056)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 117)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1057)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 117)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1058)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 117)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1059)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 117)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1134)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 126)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1135)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 126)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1136)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 126)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1137)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 126)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1138)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 126)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1139)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 126)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1140)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 126)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1215)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 135)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1216)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 135)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1217)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 135)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1218)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 135)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1219)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 135)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1220)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 135)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1221)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 135)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 10)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 10)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 10)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 10)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 10)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 10)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 88)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 10)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 163)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 19)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 164)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 19)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 165)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 19)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 166)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 19)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 167)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 19)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 168)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 19)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 169)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 19)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 244)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 28)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 245)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 28)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 246)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 28)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 247)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 28)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 248)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 28)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 249)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 28)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 250)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 28)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 325)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 37)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 326)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 37)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 327)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 37)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 328)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 37)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 329)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 37)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 330)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 37)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 331)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 37)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 406)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 46)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 407)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 46)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 408)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 46)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 409)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 46)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 410)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 46)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 411)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 46)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 412)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 46)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 487)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 55)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 488)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 55)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 489)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 55)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 490)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 55)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 491)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 55)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 492)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 55)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 493)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 55)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 568)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 64)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 569)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 64)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 570)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 64)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 571)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 64)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 572)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 64)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 573)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 64)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 574)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 64)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 649)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 73)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 650)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 73)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 651)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 73)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 652)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 73)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 653)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 73)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 654)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 73)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 655)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 73)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 730)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 82)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 731)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 82)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 732)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 82)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 733)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 82)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 734)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 82)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 735)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 82)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 736)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 82)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 811)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 91)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 812)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 91)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 813)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 91)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 814)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 91)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 815)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 91)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 816)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 91)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 817)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 91)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 892)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 100)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 893)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 100)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 894)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 100)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 895)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 100)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 896)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 100)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 897)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 100)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 898)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 100)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 973)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 109)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 974)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 109)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 975)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 109)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 976)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 109)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 977)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 109)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 978)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 109)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 979)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 109)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1054)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 118)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1055)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 118)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1056)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 118)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1057)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 118)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1058)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 118)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1059)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 118)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1060)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 118)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1135)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 127)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1136)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 127)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1137)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 127)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1138)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 127)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1139)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 127)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1140)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 127)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1141)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 127)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1216)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 136)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1217)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 136)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1218)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 136)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1219)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 136)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1220)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 136)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1221)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 136)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1222)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 136)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 8)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 11)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 11)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 11)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 11)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 11)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 88)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 11)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 89)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 11)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 164)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 20)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 165)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 20)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 166)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 20)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 167)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 20)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 168)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 20)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 169)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 20)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 170)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 20)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 245)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 29)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 246)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 29)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 247)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 29)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 248)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 29)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 249)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 29)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 250)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 29)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 251)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 29)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 326)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 38)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 327)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 38)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 328)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 38)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 329)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 38)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 330)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 38)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 331)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 38)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 332)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 38)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 407)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 47)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 408)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 47)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 409)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 47)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 410)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 47)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 411)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 47)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 412)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 47)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 413)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 47)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 488)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 56)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 489)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 56)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 490)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 56)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 491)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 56)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 492)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 56)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 493)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 56)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 494)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 56)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 569)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 65)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 570)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 65)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 571)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 65)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 572)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 65)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 573)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 65)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 574)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 65)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 575)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 65)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 650)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 74)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 651)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 74)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 652)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 74)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 653)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 74)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 654)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 74)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 655)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 74)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 656)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 74)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 731)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 83)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 732)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 83)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 733)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 83)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 734)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 83)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 735)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 83)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 736)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 83)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 737)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 83)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 812)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 92)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 813)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 92)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 814)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 92)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 815)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 92)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 816)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 92)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 817)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 92)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 818)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 92)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 893)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 101)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 894)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 101)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 895)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 101)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 896)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 101)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 897)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 101)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 898)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 101)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 899)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 101)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 974)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 110)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 975)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 110)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 976)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 110)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 977)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 110)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 978)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 110)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 979)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 110)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 980)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 110)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1055)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 119)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1056)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 119)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1057)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 119)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1058)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 119)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1059)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 119)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1060)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 119)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1061)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 119)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1136)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 128)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1137)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 128)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1138)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 128)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1139)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 128)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1140)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 128)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1141)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 128)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1142)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 128)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1217)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 137)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1218)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 137)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1219)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 137)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1220)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 137)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1221)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 137)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1222)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 137)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1223)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 137)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 9)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 10)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 11)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 12)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 13)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 14)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 15)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 90)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 12)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 91)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 12)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 92)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 12)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 93)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 12)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 94)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 12)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 95)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 12)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 96)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 12)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 171)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 21)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 172)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 21)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 173)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 21)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 174)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 21)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 175)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 21)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 176)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 21)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 177)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 21)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 252)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 30)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 253)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 30)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 254)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 30)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 255)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 30)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 256)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 30)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 257)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 30)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 258)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 30)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 333)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 39)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 334)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 39)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 335)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 39)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 336)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 39)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 337)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 39)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 338)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 39)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 339)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 39)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 414)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 48)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 415)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 48)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 416)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 48)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 417)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 48)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 418)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 48)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 419)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 48)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 420)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 48)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 495)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 57)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 496)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 57)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 497)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 57)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 498)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 57)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 499)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 57)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 500)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 57)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 501)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 57)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 576)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 66)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 577)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 66)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 578)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 66)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 579)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 66)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 580)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 66)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 581)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 66)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 582)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 66)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 657)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 75)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 658)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 75)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 659)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 75)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 660)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 75)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 661)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 75)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 662)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 75)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 663)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 75)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 738)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 84)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 739)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 84)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 740)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 84)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 741)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 84)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 742)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 84)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 743)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 84)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 744)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 84)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 819)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 93)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 820)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 93)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 821)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 93)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 822)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 93)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 823)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 93)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 824)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 93)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 825)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 93)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 900)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 102)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 901)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 102)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 902)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 102)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 903)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 102)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 904)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 102)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 905)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 102)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 906)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 102)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 981)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 111)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 982)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 111)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 983)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 111)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 984)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 111)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 985)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 111)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 986)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 111)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 987)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 111)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1062)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 120)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1063)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 120)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1064)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 120)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1065)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 120)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1066)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 120)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1067)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 120)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1068)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 120)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1143)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 129)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1144)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 129)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1145)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 129)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1146)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 129)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1147)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 129)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1148)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 129)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1149)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 129)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1224)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 138)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1225)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 138)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1226)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 138)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1227)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 138)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1228)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 138)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1229)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 138)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1230)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 138)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 10)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 4)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 11)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 4)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 12)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 4)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 13)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 4)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 14)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 4)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 15)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 4)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 16)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 4)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 91)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 13)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 92)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 13)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 93)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 13)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 94)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 13)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 95)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 13)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 96)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 13)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 97)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 13)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 172)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 22)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 173)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 22)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 174)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 22)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 175)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 22)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 176)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 22)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 177)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 22)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 178)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 22)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 253)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 31)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 254)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 31)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 255)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 31)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 256)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 31)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 257)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 31)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 258)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 31)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 259)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 31)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 334)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 40)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 335)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 40)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 336)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 40)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 337)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 40)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 338)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 40)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 339)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 40)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 340)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 40)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 415)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 49)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 416)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 49)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 417)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 49)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 418)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 49)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 419)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 49)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 420)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 49)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 421)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 49)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 496)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 58)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 497)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 58)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 498)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 58)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 499)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 58)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 500)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 58)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 501)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 58)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 502)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 58)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 577)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 67)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 578)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 67)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 579)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 67)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 580)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 67)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 581)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 67)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 582)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 67)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 583)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 67)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 658)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 76)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 659)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 76)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 660)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 76)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 661)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 76)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 662)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 76)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 663)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 76)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 664)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 76)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 739)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 85)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 740)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 85)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 741)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 85)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 742)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 85)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 743)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 85)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 744)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 85)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 745)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 85)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 820)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 94)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 821)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 94)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 822)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 94)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 823)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 94)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 824)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 94)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 825)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 94)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 826)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 94)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 901)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 103)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 902)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 103)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 903)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 103)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 904)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 103)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 905)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 103)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 906)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 103)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 907)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 103)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 982)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 112)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 983)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 112)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 984)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 112)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 985)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 112)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 986)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 112)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 987)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 112)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 988)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 112)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1063)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 121)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1064)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 121)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1065)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 121)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1066)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 121)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1067)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 121)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1068)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 121)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1069)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 121)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1144)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 130)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1145)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 130)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1146)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 130)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1147)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 130)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1148)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 130)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1149)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 130)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1150)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 130)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1225)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 139)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1226)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 139)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1227)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 139)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1228)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 139)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1229)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 139)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1230)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 139)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1231)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 139)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 11)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 5)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 12)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 5)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 13)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 5)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 14)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 5)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 15)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 5)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 16)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 5)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 17)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 5)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 92)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 14)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 93)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 14)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 94)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 14)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 95)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 14)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 96)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 14)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 97)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 14)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 98)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 14)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 173)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 23)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 174)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 23)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 175)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 23)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 176)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 23)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 177)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 23)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 178)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 23)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 179)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 23)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 254)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 32)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 255)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 32)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 256)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 32)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 257)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 32)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 258)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 32)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 259)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 32)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 260)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 32)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 335)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 41)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 336)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 41)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 337)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 41)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 338)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 41)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 339)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 41)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 340)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 41)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 341)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 41)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 416)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 50)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 417)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 50)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 418)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 50)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 419)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 50)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 420)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 50)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 421)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 50)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 422)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 50)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 497)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 59)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 498)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 59)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 499)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 59)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 500)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 59)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 501)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 59)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 502)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 59)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 503)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 59)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 578)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 68)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 579)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 68)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 580)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 68)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 581)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 68)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 582)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 68)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 583)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 68)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 584)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 68)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 659)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 77)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 660)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 77)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 661)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 77)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 662)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 77)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 663)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 77)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 664)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 77)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 665)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 77)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 740)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 86)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 741)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 86)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 742)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 86)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 743)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 86)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 744)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 86)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 745)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 86)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 746)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 86)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 821)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 95)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 822)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 95)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 823)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 95)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 824)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 95)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 825)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 95)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 826)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 95)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 827)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 95)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 902)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 104)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 903)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 104)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 904)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 104)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 905)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 104)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 906)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 104)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 907)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 104)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 908)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 104)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 983)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 113)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 984)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 113)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 985)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 113)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 986)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 113)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 987)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 113)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 988)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 113)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 989)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 113)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1064)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 122)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1065)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 122)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1066)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 122)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1067)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 122)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1068)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 122)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1069)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 122)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1070)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 122)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1145)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 131)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1146)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 131)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1147)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 131)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1148)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 131)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1149)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 131)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1150)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 131)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1151)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 131)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1226)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 140)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1227)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 140)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1228)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 140)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1229)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 140)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1230)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 140)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1231)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 140)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1232)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 140)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 18)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 6)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 19)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 6)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 20)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 6)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 21)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 6)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 22)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 6)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 23)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 6)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 24)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 6)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 99)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 15)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 100)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 15)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 101)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 15)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 102)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 15)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 103)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 15)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 104)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 15)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 105)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 15)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 180)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 24)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 181)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 24)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 182)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 24)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 183)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 24)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 184)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 24)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 185)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 24)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 186)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 24)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 261)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 33)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 262)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 33)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 263)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 33)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 264)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 33)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 265)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 33)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 266)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 33)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 267)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 33)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 342)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 42)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 343)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 42)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 344)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 42)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 345)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 42)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 346)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 42)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 347)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 42)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 348)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 42)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 423)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 51)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 424)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 51)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 425)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 51)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 426)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 51)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 427)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 51)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 428)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 51)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 429)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 51)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 504)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 60)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 505)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 60)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 506)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 60)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 507)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 60)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 508)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 60)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 509)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 60)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 510)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 60)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 585)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 69)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 586)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 69)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 587)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 69)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 588)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 69)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 589)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 69)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 590)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 69)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 591)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 69)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 666)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 78)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 667)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 78)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 668)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 78)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 669)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 78)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 670)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 78)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 671)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 78)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 672)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 78)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 747)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 87)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 748)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 87)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 749)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 87)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 750)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 87)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 751)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 87)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 752)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 87)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 753)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 87)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 828)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 96)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 829)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 96)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 830)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 96)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 831)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 96)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 832)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 96)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 833)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 96)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 834)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 96)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 909)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 105)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 910)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 105)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 911)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 105)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 912)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 105)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 913)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 105)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 914)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 105)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 915)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 105)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 990)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 114)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 991)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 114)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 992)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 114)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 993)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 114)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 994)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 114)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 995)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 114)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 996)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 114)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1071)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 123)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1072)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 123)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1073)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 123)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1074)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 123)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1075)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 123)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1076)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 123)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1077)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 123)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1152)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 132)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1153)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 132)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1154)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 132)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1155)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 132)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1156)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 132)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1157)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 132)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1158)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 132)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1233)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 141)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1234)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 141)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1235)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 141)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1236)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 141)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1237)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 141)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1238)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 141)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1239)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 141)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 19)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 7)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 20)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 7)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 21)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 7)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 22)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 7)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 23)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 7)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 24)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 7)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 25)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 7)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 100)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 16)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 101)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 16)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 102)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 16)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 103)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 16)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 104)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 16)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 105)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 16)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 106)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 16)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 181)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 25)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 182)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 25)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 183)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 25)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 184)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 25)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 185)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 25)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 186)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 25)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 187)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 25)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 262)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 34)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 263)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 34)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 264)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 34)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 265)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 34)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 266)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 34)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 267)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 34)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 268)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 34)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 343)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 43)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 344)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 43)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 345)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 43)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 346)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 43)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 347)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 43)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 348)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 43)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 349)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 43)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 424)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 52)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 425)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 52)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 426)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 52)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 427)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 52)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 428)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 52)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 429)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 52)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 430)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 52)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 505)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 61)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 506)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 61)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 507)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 61)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 508)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 61)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 509)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 61)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 510)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 61)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 511)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 61)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 586)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 70)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 587)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 70)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 588)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 70)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 589)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 70)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 590)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 70)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 591)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 70)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 592)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 70)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 667)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 79)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 668)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 79)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 669)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 79)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 670)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 79)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 671)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 79)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 672)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 79)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 673)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 79)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 748)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 88)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 749)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 88)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 750)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 88)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 751)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 88)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 752)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 88)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 753)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 88)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 754)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 88)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 829)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 97)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 830)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 97)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 831)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 97)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 832)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 97)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 833)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 97)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 834)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 97)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 835)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 97)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 910)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 106)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 911)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 106)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 912)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 106)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 913)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 106)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 914)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 106)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 915)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 106)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 916)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 106)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 991)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 115)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 992)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 115)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 993)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 115)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 994)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 115)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 995)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 115)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 996)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 115)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 997)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 115)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1072)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 124)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1073)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 124)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1074)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 124)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1075)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 124)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1076)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 124)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1077)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 124)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1078)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 124)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1153)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 133)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1154)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 133)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1155)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 133)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1156)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 133)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1157)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 133)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1158)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 133)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1159)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 133)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1234)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 142)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1235)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 142)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1236)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 142)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1237)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 142)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1238)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 142)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1239)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 142)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1240)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 142)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 20)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 8)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 21)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 8)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 22)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 8)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 23)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 8)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 24)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 8)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 25)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 8)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 26)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 8)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 101)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 17)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 102)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 17)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 103)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 17)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 104)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 17)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 105)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 17)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 106)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 17)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 107)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 17)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 182)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 26)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 183)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 26)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 184)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 26)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 185)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 26)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 186)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 26)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 187)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 26)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 188)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 26)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 263)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 35)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 264)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 35)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 265)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 35)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 266)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 35)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 267)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 35)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 268)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 35)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 269)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 35)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 344)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 44)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 345)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 44)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 346)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 44)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 347)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 44)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 348)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 44)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 349)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 44)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 350)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 44)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 425)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 53)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 426)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 53)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 427)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 53)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 428)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 53)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 429)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 53)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 430)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 53)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 431)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 53)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 506)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 62)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 507)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 62)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 508)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 62)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 509)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 62)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 510)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 62)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 511)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 62)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 512)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 62)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 587)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 71)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 588)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 71)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 589)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 71)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 590)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 71)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 591)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 71)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 592)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 71)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 593)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 71)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 668)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 80)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 669)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 80)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 670)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 80)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 671)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 80)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 672)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 80)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 673)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 80)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 674)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 80)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 749)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 89)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 750)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 89)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 751)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 89)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 752)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 89)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 753)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 89)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 754)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 89)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 755)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 89)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 830)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 98)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 831)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 98)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 832)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 98)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 833)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 98)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 834)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 98)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 835)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 98)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 836)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 98)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 911)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 107)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 912)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 107)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 913)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 107)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 914)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 107)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 915)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 107)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 916)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 107)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 917)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 107)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 992)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 116)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 993)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 116)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 994)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 116)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 995)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 116)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 996)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 116)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 997)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 116)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 998)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 116)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1073)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 125)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1074)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 125)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1075)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 125)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1076)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 125)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1077)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 125)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1078)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 125)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1079)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 125)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1154)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 134)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1155)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 134)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1156)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 134)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1157)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 134)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1158)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 134)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1159)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 134)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1160)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 134)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1235)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 143)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1236)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 143)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1237)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 143)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1238)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 143)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1239)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 143)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1240)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 143)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + 1241)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 143)]))
          }
        }
        compute_3: Buffer(compute_2, float32, [25088], [])[((blockIdx.x*1568) + (threadIdx.x*7))] = max((conv2d_nchw_1[0] + bias_3: Buffer(bias_2, float32, [512], [])[((blockIdx.x*32) + floordiv(threadIdx.x, 7))]), 0f32)
        compute_3[(((blockIdx.x*1568) + (threadIdx.x*7)) + 1)] = max((conv2d_nchw_1[1] + bias_3[((blockIdx.x*32) + floordiv(threadIdx.x, 7))]), 0f32)
        compute_3[(((blockIdx.x*1568) + (threadIdx.x*7)) + 2)] = max((conv2d_nchw_1[2] + bias_3[((blockIdx.x*32) + floordiv(threadIdx.x, 7))]), 0f32)
        compute_3[(((blockIdx.x*1568) + (threadIdx.x*7)) + 3)] = max((conv2d_nchw_1[3] + bias_3[((blockIdx.x*32) + floordiv(threadIdx.x, 7))]), 0f32)
        compute_3[(((blockIdx.x*1568) + (threadIdx.x*7)) + 4)] = max((conv2d_nchw_1[4] + bias_3[((blockIdx.x*32) + floordiv(threadIdx.x, 7))]), 0f32)
        compute_3[(((blockIdx.x*1568) + (threadIdx.x*7)) + 5)] = max((conv2d_nchw_1[5] + bias_3[((blockIdx.x*32) + floordiv(threadIdx.x, 7))]), 0f32)
        compute_3[(((blockIdx.x*1568) + (threadIdx.x*7)) + 6)] = max((conv2d_nchw_1[6] + bias_3[((blockIdx.x*32) + floordiv(threadIdx.x, 7))]), 0f32)
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 138-141

Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.

.. GENERATED FROM PYTHON SOURCE LINES 141-168

.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Execution time of this operator: 0.225 ms




.. GENERATED FROM PYTHON SOURCE LINES 169-174

Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

.. GENERATED FROM PYTHON SOURCE LINES 176-179

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.

.. GENERATED FROM PYTHON SOURCE LINES 179-186

.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=1)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=32)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=1)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=7)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=7)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=16)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=1)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=1)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=3)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=1)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=3)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=1)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=32)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=1)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=7)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=1)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=7)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=224)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=224)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 1024)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(224) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[7];
      __shared__ float pad_temp_shared[1296];
      __shared__ float kernel_shared[4608];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 32; ++rc_outer_outer) {
        __syncthreads();
        pad_temp_shared[((int)threadIdx.x)] = (((((9 <= (((int)threadIdx.x) % 81)) && ((((int)threadIdx.x) % 81) < 72)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + ((((int)threadIdx.x) / 81) * 49)) + (((((int)threadIdx.x) % 81) / 9) * 7)) + (((int)threadIdx.x) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 224)] = (((((9 <= ((((int)threadIdx.x) + 62) % 81)) && (((((int)threadIdx.x) + 62) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 224) / 81) * 49)) + ((((((int)threadIdx.x) + 62) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 448)] = (((((9 <= ((((int)threadIdx.x) + 43) % 81)) && (((((int)threadIdx.x) + 43) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 448) / 81) * 49)) + ((((((int)threadIdx.x) + 43) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 672)] = (((((9 <= ((((int)threadIdx.x) + 24) % 81)) && (((((int)threadIdx.x) + 24) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 672) / 81) * 49)) + ((((((int)threadIdx.x) + 24) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 896)] = (((((9 <= ((((int)threadIdx.x) + 5) % 81)) && (((((int)threadIdx.x) + 5) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 896) / 81) * 49)) + ((((((int)threadIdx.x) + 5) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
        if (((int)threadIdx.x) < 176) {
          pad_temp_shared[(((int)threadIdx.x) + 1120)] = (((((9 <= ((((int)threadIdx.x) + 67) % 81)) && (((((int)threadIdx.x) + 67) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 1120) / 81) * 49)) + ((((((int)threadIdx.x) + 67) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
        }
        kernel_shared[((int)threadIdx.x)] = kernel[((((((int)blockIdx.x) * 147456) + ((((int)threadIdx.x) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) % 144))];
        kernel_shared[(((int)threadIdx.x) + 224)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 224) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 80) % 144) / 9) * 9)) + ((((((int)threadIdx.x) + 8) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 448)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 448) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 144) / 9) * 9)) + ((((((int)threadIdx.x) + 7) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 672)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 672) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 96) % 144) / 9) * 9)) + ((((((int)threadIdx.x) / 3) + 2) % 3) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 896)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 896) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 144) / 9) * 9)) + ((((((int)threadIdx.x) + 5) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1120)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1120) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 112) % 144) / 9) * 9)) + ((((((int)threadIdx.x) + 4) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1344)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1344) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 48) % 144) / 9) * 9)) + ((((((int)threadIdx.x) / 3) + 1) % 3) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1568)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1568) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 9) * 9)) + ((((int)threadIdx.x) + 2) % 9))];
        kernel_shared[(((int)threadIdx.x) + 1792)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1792) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 64) % 144) / 9) * 9)) + ((((int)threadIdx.x) + 1) % 9))];
        kernel_shared[(((int)threadIdx.x) + 2016)] = kernel[(((((((int)blockIdx.x) * 147456) + ((((int)threadIdx.x) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) % 144)) + 64512)];
        kernel_shared[(((int)threadIdx.x) + 2240)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 2240) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 80) % 144) / 9) * 9)) + ((((((int)threadIdx.x) + 8) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2464)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 2464) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 144) / 9) * 9)) + ((((((int)threadIdx.x) + 7) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2688)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 2688) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 96) % 144) / 9) * 9)) + ((((((int)threadIdx.x) / 3) + 2) % 3) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2912)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 2912) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 144) / 9) * 9)) + ((((((int)threadIdx.x) + 5) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3136)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 3136) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 112) % 144) / 9) * 9)) + ((((((int)threadIdx.x) + 4) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3360)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 3360) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 48) % 144) / 9) * 9)) + ((((((int)threadIdx.x) / 3) + 1) % 3) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3584)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 3584) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 9) * 9)) + ((((int)threadIdx.x) + 2) % 9))];
        kernel_shared[(((int)threadIdx.x) + 3808)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 3808) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 64) % 144) / 9) * 9)) + ((((int)threadIdx.x) + 1) % 9))];
        kernel_shared[(((int)threadIdx.x) + 4032)] = kernel[(((((((int)blockIdx.x) * 147456) + ((((int)threadIdx.x) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) % 144)) + 129024)];
        kernel_shared[(((int)threadIdx.x) + 4256)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 4256) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 80) % 144) / 9) * 9)) + ((((((int)threadIdx.x) + 8) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        if (((int)threadIdx.x) < 128) {
          kernel_shared[(((int)threadIdx.x) + 4480)] = kernel[((((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 4480) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 9) * 9)) + ((((((int)threadIdx.x) + 7) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        }
        __syncthreads();
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 9)] * kernel_shared[((((int)threadIdx.x) / 7) * 144)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1)] * kernel_shared[((((int)threadIdx.x) / 7) * 144)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 2)] * kernel_shared[((((int)threadIdx.x) / 7) * 144)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 3)] * kernel_shared[((((int)threadIdx.x) / 7) * 144)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 4)] * kernel_shared[((((int)threadIdx.x) / 7) * 144)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 5)] * kernel_shared[((((int)threadIdx.x) / 7) * 144)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 6)] * kernel_shared[((((int)threadIdx.x) / 7) * 144)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 81)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 9)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 9)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 9)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 9)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 9)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 9)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 9)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 162)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 18)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 163)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 18)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 164)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 18)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 165)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 18)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 166)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 18)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 167)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 18)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 18)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 243)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 27)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 244)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 27)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 245)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 27)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 246)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 27)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 247)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 27)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 248)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 27)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 249)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 27)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 324)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 36)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 325)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 36)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 326)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 36)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 327)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 36)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 328)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 36)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 329)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 36)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 330)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 36)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 405)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 45)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 406)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 45)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 407)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 45)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 408)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 45)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 409)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 45)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 410)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 45)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 411)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 45)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 486)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 54)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 487)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 54)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 488)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 54)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 489)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 54)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 490)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 54)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 491)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 54)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 492)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 54)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 567)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 63)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 568)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 63)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 569)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 63)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 570)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 63)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 571)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 63)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 572)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 63)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 573)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 63)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 648)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 72)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 649)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 72)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 650)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 72)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 651)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 72)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 652)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 72)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 653)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 72)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 654)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 72)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 729)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 81)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 730)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 81)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 731)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 81)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 732)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 81)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 733)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 81)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 734)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 81)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 735)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 81)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 810)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 90)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 811)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 90)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 812)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 90)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 813)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 90)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 814)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 90)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 815)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 90)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 816)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 90)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 891)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 99)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 892)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 99)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 893)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 99)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 894)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 99)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 895)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 99)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 896)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 99)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 897)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 99)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 972)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 108)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 973)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 108)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 974)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 108)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 975)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 108)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 976)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 108)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 977)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 108)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 978)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 108)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1053)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 117)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1054)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 117)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1055)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 117)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1056)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 117)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1057)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 117)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1058)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 117)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1059)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 117)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1134)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 126)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1135)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 126)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1136)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 126)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1137)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 126)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1138)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 126)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1139)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 126)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 126)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1215)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 135)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1216)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 135)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1217)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 135)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1218)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 135)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1219)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 135)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1220)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 135)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1221)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 135)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 10)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 10)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 10)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 10)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 10)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 10)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 88)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 10)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 163)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 19)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 164)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 19)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 165)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 19)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 166)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 19)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 167)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 19)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 19)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 169)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 19)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 244)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 28)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 245)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 28)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 246)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 28)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 247)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 28)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 248)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 28)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 249)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 28)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 250)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 28)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 325)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 37)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 326)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 37)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 327)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 37)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 328)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 37)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 329)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 37)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 330)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 37)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 331)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 37)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 406)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 46)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 407)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 46)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 408)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 46)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 409)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 46)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 410)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 46)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 411)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 46)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 412)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 46)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 487)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 55)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 488)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 55)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 489)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 55)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 490)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 55)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 491)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 55)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 492)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 55)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 493)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 55)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 568)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 64)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 569)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 64)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 570)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 64)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 571)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 64)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 572)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 64)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 573)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 64)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 574)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 64)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 649)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 73)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 650)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 73)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 651)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 73)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 652)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 73)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 653)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 73)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 654)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 73)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 655)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 73)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 730)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 82)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 731)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 82)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 732)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 82)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 733)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 82)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 734)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 82)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 735)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 82)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 736)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 82)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 811)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 91)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 812)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 91)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 813)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 91)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 814)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 91)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 815)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 91)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 816)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 91)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 817)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 91)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 892)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 100)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 893)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 100)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 894)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 100)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 895)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 100)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 896)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 100)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 897)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 100)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 898)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 100)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 973)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 109)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 974)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 109)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 975)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 109)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 976)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 109)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 977)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 109)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 978)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 109)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 979)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 109)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1054)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 118)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1055)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 118)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1056)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 118)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1057)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 118)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1058)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 118)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1059)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 118)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1060)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 118)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1135)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 127)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1136)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 127)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1137)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 127)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1138)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 127)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1139)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 127)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 127)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1141)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 127)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1216)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 136)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1217)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 136)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1218)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 136)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1219)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 136)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1220)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 136)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1221)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 136)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1222)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 136)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 8)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 11)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 11)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 11)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 11)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 11)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 88)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 11)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 89)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 11)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 164)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 20)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 165)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 20)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 166)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 20)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 167)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 20)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 20)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 169)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 20)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 170)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 20)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 245)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 29)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 246)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 29)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 247)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 29)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 248)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 29)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 249)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 29)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 250)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 29)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 251)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 29)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 326)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 38)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 327)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 38)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 328)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 38)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 329)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 38)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 330)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 38)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 331)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 38)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 332)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 38)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 407)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 47)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 408)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 47)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 409)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 47)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 410)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 47)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 411)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 47)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 412)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 47)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 413)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 47)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 488)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 56)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 489)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 56)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 490)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 56)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 491)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 56)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 492)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 56)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 493)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 56)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 494)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 56)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 569)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 65)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 570)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 65)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 571)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 65)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 572)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 65)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 573)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 65)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 574)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 65)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 575)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 65)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 650)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 74)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 651)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 74)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 652)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 74)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 653)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 74)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 654)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 74)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 655)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 74)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 656)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 74)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 731)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 83)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 732)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 83)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 733)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 83)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 734)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 83)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 735)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 83)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 736)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 83)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 737)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 83)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 812)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 92)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 813)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 92)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 814)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 92)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 815)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 92)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 816)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 92)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 817)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 92)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 818)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 92)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 893)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 101)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 894)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 101)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 895)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 101)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 896)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 101)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 897)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 101)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 898)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 101)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 899)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 101)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 974)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 110)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 975)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 110)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 976)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 110)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 977)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 110)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 978)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 110)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 979)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 110)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 980)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 110)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1055)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 119)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1056)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 119)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1057)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 119)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1058)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 119)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1059)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 119)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1060)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 119)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1061)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 119)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1136)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 128)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1137)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 128)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1138)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 128)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1139)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 128)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 128)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1141)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 128)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1142)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 128)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1217)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 137)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1218)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 137)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1219)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 137)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1220)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 137)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1221)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 137)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1222)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 137)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1223)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 137)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 9)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 10)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 11)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 12)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 13)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 15)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 90)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 12)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 12)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 92)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 12)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 93)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 12)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 94)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 12)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 95)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 12)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 96)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 12)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 171)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 21)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 172)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 21)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 173)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 21)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 174)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 21)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 175)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 21)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 176)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 21)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 177)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 21)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 252)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 30)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 253)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 30)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 254)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 30)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 255)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 30)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 256)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 30)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 257)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 30)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 258)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 30)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 333)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 39)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 334)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 39)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 335)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 39)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 336)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 39)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 337)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 39)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 338)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 39)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 339)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 39)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 414)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 48)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 415)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 48)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 416)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 48)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 417)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 48)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 418)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 48)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 419)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 48)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 420)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 48)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 495)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 57)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 496)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 57)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 497)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 57)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 498)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 57)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 499)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 57)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 500)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 57)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 501)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 57)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 576)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 66)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 577)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 66)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 578)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 66)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 579)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 66)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 580)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 66)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 581)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 66)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 582)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 66)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 657)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 75)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 658)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 75)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 659)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 75)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 660)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 75)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 661)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 75)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 662)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 75)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 663)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 75)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 738)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 84)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 739)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 84)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 740)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 84)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 741)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 84)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 742)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 84)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 743)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 84)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 744)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 84)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 819)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 93)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 820)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 93)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 821)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 93)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 822)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 93)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 823)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 93)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 824)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 93)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 825)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 93)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 900)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 102)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 901)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 102)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 902)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 102)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 903)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 102)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 904)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 102)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 905)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 102)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 906)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 102)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 981)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 111)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 982)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 111)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 983)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 111)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 984)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 111)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 985)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 111)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 986)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 111)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 987)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 111)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1062)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 120)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1063)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 120)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1064)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 120)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1065)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 120)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1066)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 120)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1067)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 120)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1068)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 120)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1143)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 129)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1144)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 129)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1145)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 129)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1146)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 129)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1147)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 129)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1148)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 129)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1149)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 129)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1224)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 138)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1225)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 138)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1226)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 138)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1227)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 138)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1228)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 138)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1229)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 138)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1230)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 138)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 10)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 4)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 11)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 4)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 12)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 4)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 13)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 4)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 4)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 15)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 4)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 16)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 4)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 13)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 92)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 13)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 93)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 13)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 94)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 13)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 95)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 13)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 96)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 13)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 97)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 13)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 172)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 22)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 173)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 22)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 174)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 22)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 175)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 22)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 176)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 22)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 177)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 22)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 178)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 22)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 253)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 31)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 254)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 31)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 255)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 31)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 256)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 31)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 257)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 31)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 258)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 31)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 259)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 31)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 334)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 40)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 335)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 40)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 336)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 40)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 337)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 40)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 338)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 40)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 339)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 40)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 340)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 40)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 415)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 49)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 416)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 49)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 417)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 49)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 418)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 49)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 419)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 49)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 420)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 49)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 421)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 49)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 496)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 58)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 497)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 58)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 498)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 58)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 499)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 58)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 500)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 58)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 501)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 58)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 502)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 58)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 577)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 67)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 578)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 67)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 579)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 67)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 580)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 67)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 581)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 67)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 582)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 67)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 583)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 67)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 658)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 76)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 659)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 76)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 660)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 76)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 661)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 76)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 662)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 76)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 663)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 76)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 664)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 76)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 739)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 85)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 740)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 85)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 741)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 85)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 742)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 85)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 743)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 85)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 744)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 85)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 745)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 85)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 820)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 94)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 821)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 94)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 822)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 94)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 823)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 94)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 824)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 94)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 825)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 94)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 826)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 94)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 901)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 103)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 902)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 103)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 903)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 103)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 904)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 103)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 905)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 103)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 906)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 103)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 907)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 103)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 982)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 112)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 983)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 112)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 984)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 112)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 985)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 112)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 986)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 112)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 987)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 112)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 988)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 112)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1063)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 121)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1064)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 121)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1065)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 121)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1066)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 121)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1067)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 121)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1068)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 121)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1069)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 121)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1144)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 130)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1145)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 130)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1146)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 130)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1147)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 130)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1148)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 130)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1149)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 130)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1150)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 130)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1225)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 139)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1226)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 139)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1227)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 139)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1228)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 139)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1229)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 139)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1230)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 139)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1231)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 139)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 11)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 5)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 12)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 5)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 13)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 5)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 5)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 15)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 5)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 16)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 5)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 17)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 5)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 92)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 14)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 93)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 14)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 94)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 14)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 95)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 14)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 96)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 14)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 97)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 14)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 14)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 173)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 23)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 174)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 23)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 175)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 23)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 176)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 23)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 177)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 23)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 178)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 23)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 179)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 23)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 254)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 32)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 255)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 32)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 256)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 32)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 257)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 32)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 258)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 32)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 259)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 32)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 260)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 32)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 335)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 41)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 336)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 41)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 337)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 41)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 338)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 41)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 339)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 41)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 340)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 41)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 341)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 41)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 416)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 50)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 417)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 50)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 418)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 50)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 419)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 50)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 420)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 50)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 421)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 50)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 422)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 50)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 497)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 59)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 498)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 59)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 499)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 59)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 500)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 59)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 501)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 59)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 502)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 59)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 503)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 59)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 578)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 68)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 579)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 68)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 580)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 68)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 581)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 68)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 582)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 68)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 583)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 68)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 584)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 68)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 659)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 77)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 660)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 77)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 661)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 77)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 662)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 77)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 663)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 77)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 664)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 77)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 665)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 77)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 740)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 86)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 741)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 86)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 742)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 86)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 743)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 86)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 744)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 86)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 745)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 86)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 746)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 86)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 821)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 95)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 822)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 95)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 823)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 95)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 824)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 95)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 825)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 95)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 826)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 95)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 827)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 95)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 902)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 104)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 903)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 104)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 904)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 104)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 905)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 104)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 906)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 104)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 907)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 104)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 908)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 104)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 983)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 113)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 984)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 113)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 985)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 113)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 986)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 113)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 987)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 113)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 988)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 113)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 989)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 113)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1064)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 122)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1065)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 122)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1066)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 122)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1067)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 122)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1068)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 122)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1069)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 122)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1070)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 122)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1145)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 131)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1146)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 131)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1147)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 131)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1148)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 131)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1149)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 131)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1150)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 131)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1151)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 131)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1226)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 140)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1227)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 140)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1228)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 140)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1229)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 140)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1230)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 140)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1231)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 140)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1232)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 140)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 18)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 6)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 19)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 6)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 20)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 6)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 6)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 22)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 6)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 23)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 6)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 24)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 6)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 99)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 15)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 100)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 15)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 101)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 15)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 102)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 15)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 103)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 15)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 104)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 15)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 15)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 180)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 24)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 181)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 24)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 182)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 24)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 183)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 24)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 184)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 24)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 185)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 24)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 186)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 24)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 261)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 33)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 262)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 33)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 263)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 33)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 264)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 33)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 265)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 33)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 266)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 33)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 267)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 33)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 342)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 42)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 343)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 42)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 344)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 42)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 345)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 42)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 346)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 42)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 347)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 42)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 348)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 42)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 423)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 51)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 424)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 51)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 425)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 51)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 426)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 51)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 427)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 51)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 428)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 51)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 429)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 51)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 504)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 60)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 505)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 60)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 506)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 60)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 507)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 60)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 508)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 60)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 509)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 60)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 510)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 60)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 585)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 69)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 586)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 69)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 587)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 69)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 588)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 69)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 589)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 69)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 590)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 69)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 591)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 69)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 666)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 78)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 667)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 78)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 668)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 78)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 669)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 78)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 670)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 78)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 671)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 78)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 672)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 78)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 747)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 87)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 748)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 87)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 749)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 87)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 750)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 87)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 751)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 87)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 752)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 87)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 753)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 87)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 828)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 96)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 829)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 96)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 830)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 96)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 831)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 96)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 832)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 96)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 833)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 96)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 834)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 96)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 909)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 105)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 910)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 105)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 911)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 105)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 912)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 105)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 913)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 105)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 914)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 105)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 915)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 105)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 990)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 114)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 991)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 114)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 992)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 114)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 993)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 114)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 994)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 114)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 995)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 114)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 996)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 114)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1071)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 123)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1072)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 123)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1073)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 123)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1074)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 123)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1075)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 123)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1076)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 123)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1077)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 123)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1152)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 132)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1153)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 132)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1154)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 132)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1155)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 132)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1156)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 132)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1157)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 132)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1158)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 132)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1233)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 141)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1234)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 141)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1235)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 141)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1236)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 141)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1237)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 141)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1238)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 141)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1239)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 141)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 19)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 7)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 20)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 7)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 7)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 22)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 7)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 23)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 7)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 24)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 7)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 25)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 7)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 100)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 16)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 101)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 16)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 102)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 16)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 103)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 16)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 104)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 16)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 16)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 106)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 16)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 181)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 25)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 182)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 25)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 183)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 25)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 184)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 25)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 185)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 25)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 186)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 25)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 187)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 25)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 262)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 34)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 263)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 34)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 264)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 34)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 265)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 34)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 266)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 34)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 267)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 34)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 268)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 34)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 343)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 43)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 344)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 43)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 345)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 43)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 346)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 43)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 347)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 43)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 348)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 43)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 349)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 43)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 424)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 52)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 425)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 52)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 426)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 52)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 427)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 52)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 428)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 52)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 429)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 52)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 430)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 52)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 505)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 61)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 506)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 61)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 507)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 61)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 508)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 61)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 509)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 61)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 510)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 61)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 511)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 61)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 586)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 70)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 587)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 70)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 588)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 70)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 589)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 70)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 590)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 70)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 591)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 70)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 592)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 70)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 667)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 79)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 668)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 79)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 669)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 79)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 670)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 79)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 671)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 79)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 672)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 79)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 673)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 79)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 748)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 88)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 749)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 88)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 750)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 88)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 751)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 88)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 752)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 88)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 753)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 88)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 754)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 88)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 829)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 97)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 830)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 97)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 831)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 97)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 832)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 97)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 833)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 97)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 834)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 97)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 835)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 97)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 910)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 106)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 911)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 106)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 912)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 106)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 913)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 106)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 914)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 106)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 915)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 106)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 916)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 106)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 991)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 115)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 992)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 115)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 993)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 115)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 994)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 115)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 995)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 115)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 996)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 115)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 997)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 115)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1072)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 124)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1073)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 124)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1074)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 124)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1075)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 124)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1076)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 124)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1077)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 124)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1078)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 124)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1153)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 133)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1154)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 133)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1155)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 133)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1156)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 133)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1157)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 133)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1158)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 133)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1159)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 133)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1234)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 142)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1235)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 142)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1236)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 142)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1237)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 142)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1238)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 142)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1239)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 142)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1240)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 142)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 20)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 8)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 8)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 22)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 8)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 23)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 8)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 24)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 8)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 25)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 8)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 26)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 8)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 101)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 17)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 102)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 17)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 103)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 17)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 104)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 17)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 17)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 106)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 17)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 107)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 17)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 182)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 26)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 183)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 26)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 184)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 26)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 185)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 26)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 186)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 26)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 187)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 26)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 188)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 26)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 263)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 35)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 264)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 35)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 265)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 35)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 266)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 35)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 267)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 35)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 268)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 35)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 269)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 35)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 344)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 44)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 345)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 44)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 346)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 44)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 347)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 44)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 348)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 44)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 349)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 44)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 350)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 44)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 425)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 53)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 426)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 53)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 427)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 53)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 428)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 53)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 429)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 53)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 430)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 53)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 431)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 53)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 506)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 62)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 507)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 62)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 508)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 62)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 509)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 62)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 510)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 62)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 511)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 62)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 512)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 62)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 587)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 71)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 588)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 71)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 589)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 71)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 590)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 71)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 591)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 71)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 592)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 71)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 593)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 71)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 668)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 80)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 669)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 80)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 670)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 80)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 671)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 80)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 672)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 80)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 673)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 80)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 674)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 80)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 749)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 89)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 750)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 89)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 751)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 89)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 752)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 89)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 753)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 89)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 754)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 89)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 755)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 89)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 830)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 98)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 831)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 98)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 832)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 98)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 833)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 98)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 834)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 98)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 835)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 98)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 836)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 98)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 911)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 107)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 912)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 107)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 913)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 107)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 914)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 107)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 915)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 107)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 916)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 107)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 917)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 107)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 992)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 116)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 993)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 116)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 994)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 116)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 995)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 116)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 996)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 116)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 997)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 116)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 998)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 116)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1073)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 125)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1074)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 125)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1075)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 125)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1076)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 125)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1077)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 125)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1078)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 125)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1079)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 125)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1154)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 134)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1155)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 134)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1156)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 134)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1157)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 134)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1158)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 134)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1159)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 134)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1160)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 134)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1235)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 143)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1236)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 143)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1237)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 143)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1238)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 143)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1239)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 143)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1240)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 143)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + 1241)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 143)]));
      }
      compute[((((int)blockIdx.x) * 1568) + (((int)threadIdx.x) * 7))] = max((conv2d_nchw[0] + bias[((((int)blockIdx.x) * 32) + (((int)threadIdx.x) / 7))]), 0.000000e+00f);
      compute[(((((int)blockIdx.x) * 1568) + (((int)threadIdx.x) * 7)) + 1)] = max((conv2d_nchw[1] + bias[((((int)blockIdx.x) * 32) + (((int)threadIdx.x) / 7))]), 0.000000e+00f);
      compute[(((((int)blockIdx.x) * 1568) + (((int)threadIdx.x) * 7)) + 2)] = max((conv2d_nchw[2] + bias[((((int)blockIdx.x) * 32) + (((int)threadIdx.x) / 7))]), 0.000000e+00f);
      compute[(((((int)blockIdx.x) * 1568) + (((int)threadIdx.x) * 7)) + 3)] = max((conv2d_nchw[3] + bias[((((int)blockIdx.x) * 32) + (((int)threadIdx.x) / 7))]), 0.000000e+00f);
      compute[(((((int)blockIdx.x) * 1568) + (((int)threadIdx.x) * 7)) + 4)] = max((conv2d_nchw[4] + bias[((((int)blockIdx.x) * 32) + (((int)threadIdx.x) / 7))]), 0.000000e+00f);
      compute[(((((int)blockIdx.x) * 1568) + (((int)threadIdx.x) * 7)) + 5)] = max((conv2d_nchw[5] + bias[((((int)blockIdx.x) * 32) + (((int)threadIdx.x) / 7))]), 0.000000e+00f);
      compute[(((((int)blockIdx.x) * 1568) + (((int)threadIdx.x) * 7)) + 6)] = max((conv2d_nchw[6] + bias[((((int)blockIdx.x) * 32) + (((int)threadIdx.x) / 7))]), 0.000000e+00f);
    }






.. GENERATED FROM PYTHON SOURCE LINES 187-191

A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.

.. GENERATED FROM PYTHON SOURCE LINES 191-213

.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Resume search:
    /venv/apache-tvm-py3.7/lib/python3.7/site-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 5 minutes  30.470 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
