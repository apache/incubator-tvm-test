
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.

.. GENERATED FROM PYTHON SOURCE LINES 39-48

.. code-block:: default



    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python








.. GENERATED FROM PYTHON SOURCE LINES 54-59

Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.

.. GENERATED FROM PYTHON SOURCE LINES 59-71

.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]









.. GENERATED FROM PYTHON SOURCE LINES 72-75

Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.

.. GENERATED FROM PYTHON SOURCE LINES 75-88

.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)





.. GENERATED FROM PYTHON SOURCE LINES 89-106

Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.

.. GENERATED FROM PYTHON SOURCE LINES 106-116

.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Get devices for measurement successfully!




.. GENERATED FROM PYTHON SOURCE LINES 117-123

Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.

.. GENERATED FROM PYTHON SOURCE LINES 123-132

.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx








.. GENERATED FROM PYTHON SOURCE LINES 133-136

We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.

.. GENERATED FROM PYTHON SOURCE LINES 136-140

.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Lowered TIR:
    @main = primfn(data_1: handle, kernel_1: handle, bias_1: handle, compute_1: handle) -> ()
      attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
      buffers = {data: Buffer(data_2: Pointer(float32), float32, [25088], []),
                 kernel: Buffer(kernel_2: Pointer(float32), float32, [2359296], []),
                 bias: Buffer(bias_2: Pointer(float32), float32, [512], []),
                 compute: Buffer(compute_2: Pointer(float32), float32, [25088], [])}
      buffer_map = {data_1: data, kernel_1: kernel, bias_1: bias, compute_1: compute}
      preflattened_buffer_map = {data_1: data_3: Buffer(data_2, float32, [1, 512, 7, 7], []), kernel_1: kernel_3: Buffer(kernel_2, float32, [512, 512, 3, 3], []), bias_1: bias_3: Buffer(bias_2, float32, [1, 512, 1, 1], []), compute_1: compute_3: Buffer(compute_2, float32, [1, 512, 7, 7], [])} {
      attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = 28;
      allocate(conv2d_nchw: Pointer(local float32), float32, [14]), storage_scope = local;
      allocate(pad_temp.shared: Pointer(shared float32), float32, [108]), storage_scope = shared;
      allocate(kernel.shared: Pointer(shared float32), float32, [4608]), storage_scope = shared;
      attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64 {
        conv2d_nchw_1: Buffer(conv2d_nchw, float32, [49], [], scope="local", align=16)[0] = 0f32
        conv2d_nchw_1[7] = 0f32
        conv2d_nchw_1[1] = 0f32
        conv2d_nchw_1[8] = 0f32
        conv2d_nchw_1[2] = 0f32
        conv2d_nchw_1[9] = 0f32
        conv2d_nchw_1[3] = 0f32
        conv2d_nchw_1[10] = 0f32
        conv2d_nchw_1[4] = 0f32
        conv2d_nchw_1[11] = 0f32
        conv2d_nchw_1[5] = 0f32
        conv2d_nchw_1[12] = 0f32
        conv2d_nchw_1[6] = 0f32
        conv2d_nchw_1[13] = 0f32
        for (rc.outer.outer: int32, 0, 128) {
          let cse_var_1: int32 = (rc.outer.outer*36)
           {
            attr [IterVar(threadIdx.x_1: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            if @tir.likely((threadIdx.x_1 < 2), dtype=bool) {
              pad_temp.shared_1: Buffer(pad_temp.shared, float32, [108], [], scope="shared")[(threadIdx.x_1*54)] = 0f32
              pad_temp.shared_1[((threadIdx.x_1*54) + 1)] = 0f32
              pad_temp.shared_1[((threadIdx.x_1*54) + 2)] = 0f32
              pad_temp.shared_1[((threadIdx.x_1*54) + 3)] = @tir.if_then_else((1 <= floormod(blockIdx.x, 7)), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) - 1)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 4)] = data[(((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7))]
              pad_temp.shared_1[((threadIdx.x_1*54) + 5)] = @tir.if_then_else((floormod(blockIdx.x, 7) < 6), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 1)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 6)] = @tir.if_then_else((1 <= floormod(blockIdx.x, 7)), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 6)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 7)] = data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 7)]
              pad_temp.shared_1[((threadIdx.x_1*54) + 8)] = @tir.if_then_else((floormod(blockIdx.x, 7) < 6), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 8)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 9)] = @tir.if_then_else((1 <= floormod(blockIdx.x, 7)), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 13)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 10)] = data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 14)]
              pad_temp.shared_1[((threadIdx.x_1*54) + 11)] = @tir.if_then_else((floormod(blockIdx.x, 7) < 6), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 15)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 12)] = @tir.if_then_else((1 <= floormod(blockIdx.x, 7)), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 20)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 13)] = data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 21)]
              pad_temp.shared_1[((threadIdx.x_1*54) + 14)] = @tir.if_then_else((floormod(blockIdx.x, 7) < 6), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 22)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 15)] = @tir.if_then_else((1 <= floormod(blockIdx.x, 7)), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 27)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 16)] = data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 28)]
              pad_temp.shared_1[((threadIdx.x_1*54) + 17)] = @tir.if_then_else((floormod(blockIdx.x, 7) < 6), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 29)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 18)] = @tir.if_then_else((1 <= floormod(blockIdx.x, 7)), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 34)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 19)] = data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 35)]
              pad_temp.shared_1[((threadIdx.x_1*54) + 20)] = @tir.if_then_else((floormod(blockIdx.x, 7) < 6), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 36)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 21)] = @tir.if_then_else((1 <= floormod(blockIdx.x, 7)), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 41)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 22)] = data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 42)]
              pad_temp.shared_1[((threadIdx.x_1*54) + 23)] = @tir.if_then_else((floormod(blockIdx.x, 7) < 6), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 43)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 24)] = 0f32
              pad_temp.shared_1[((threadIdx.x_1*54) + 25)] = 0f32
              pad_temp.shared_1[((threadIdx.x_1*54) + 26)] = 0f32
              pad_temp.shared_1[((threadIdx.x_1*54) + 27)] = 0f32
              pad_temp.shared_1[((threadIdx.x_1*54) + 28)] = 0f32
              pad_temp.shared_1[((threadIdx.x_1*54) + 29)] = 0f32
              pad_temp.shared_1[((threadIdx.x_1*54) + 30)] = @tir.if_then_else((1 <= floormod(blockIdx.x, 7)), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 48)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 31)] = data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 49)]
              pad_temp.shared_1[((threadIdx.x_1*54) + 32)] = @tir.if_then_else((floormod(blockIdx.x, 7) < 6), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 50)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 33)] = @tir.if_then_else((1 <= floormod(blockIdx.x, 7)), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 55)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 34)] = data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 56)]
              pad_temp.shared_1[((threadIdx.x_1*54) + 35)] = @tir.if_then_else((floormod(blockIdx.x, 7) < 6), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 57)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 36)] = @tir.if_then_else((1 <= floormod(blockIdx.x, 7)), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 62)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 37)] = data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 63)]
              pad_temp.shared_1[((threadIdx.x_1*54) + 38)] = @tir.if_then_else((floormod(blockIdx.x, 7) < 6), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 64)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 39)] = @tir.if_then_else((1 <= floormod(blockIdx.x, 7)), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 69)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 40)] = data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 70)]
              pad_temp.shared_1[((threadIdx.x_1*54) + 41)] = @tir.if_then_else((floormod(blockIdx.x, 7) < 6), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 71)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 42)] = @tir.if_then_else((1 <= floormod(blockIdx.x, 7)), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 76)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 43)] = data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 77)]
              pad_temp.shared_1[((threadIdx.x_1*54) + 44)] = @tir.if_then_else((floormod(blockIdx.x, 7) < 6), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 78)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 45)] = @tir.if_then_else((1 <= floormod(blockIdx.x, 7)), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 83)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 46)] = data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 84)]
              pad_temp.shared_1[((threadIdx.x_1*54) + 47)] = @tir.if_then_else((floormod(blockIdx.x, 7) < 6), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 85)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 48)] = @tir.if_then_else((1 <= floormod(blockIdx.x, 7)), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 90)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 49)] = data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 91)]
              pad_temp.shared_1[((threadIdx.x_1*54) + 50)] = @tir.if_then_else((floormod(blockIdx.x, 7) < 6), data[((((rc.outer.outer*196) + (threadIdx.x_1*98)) + floormod(blockIdx.x, 7)) + 92)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*54) + 51)] = 0f32
              pad_temp.shared_1[((threadIdx.x_1*54) + 52)] = 0f32
              pad_temp.shared_1[((threadIdx.x_1*54) + 53)] = 0f32
            }
            attr [IterVar(threadIdx.x_2: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1: Buffer(kernel.shared, float32, [4608], [], scope="shared")[threadIdx.x_2] = kernel[((((floordiv(blockIdx.x, 7)*589824) + (floordiv(threadIdx.x_2, 36)*4608)) + cse_var_1) + floormod(threadIdx.x_2, 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 64)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 64), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 28), 36), 9)*9)) + floormod((threadIdx.x_2 + 1), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 128)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 128), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 20), 36), 9)*9)) + floormod((threadIdx.x_2 + 2), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 192)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 192), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 12), 36), 9)*9)) + (floormod((floordiv(threadIdx.x_2, 3) + 1), 3)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 256)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 256), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 4), 36), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 320)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 320), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 36), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 5), 9), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 384)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 384), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 24), 36), 9)*9)) + (floormod((floordiv(threadIdx.x_2, 3) + 2), 3)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 448)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 448), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 36), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 7), 9), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 512)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 512), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 36), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 576)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv(threadIdx.x_2, 36)*4608)) + cse_var_1) + floormod(threadIdx.x_2, 36)) + 73728)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 640)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 640), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 28), 36), 9)*9)) + floormod((threadIdx.x_2 + 1), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 704)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 704), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 20), 36), 9)*9)) + floormod((threadIdx.x_2 + 2), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 768)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 768), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 12), 36), 9)*9)) + (floormod((floordiv(threadIdx.x_2, 3) + 1), 3)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 832)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 832), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 4), 36), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 896)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 896), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 36), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 5), 9), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 960)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 960), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 24), 36), 9)*9)) + (floormod((floordiv(threadIdx.x_2, 3) + 2), 3)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 1024)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1024), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 36), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 7), 9), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 1088)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1088), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 36), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 1152)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv(threadIdx.x_2, 36)*4608)) + cse_var_1) + floormod(threadIdx.x_2, 36)) + 147456)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 1216)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1216), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 28), 36), 9)*9)) + floormod((threadIdx.x_2 + 1), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 1280)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1280), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 20), 36), 9)*9)) + floormod((threadIdx.x_2 + 2), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 1344)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1344), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 12), 36), 9)*9)) + (floormod((floordiv(threadIdx.x_2, 3) + 1), 3)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 1408)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1408), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 4), 36), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 1472)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1472), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 36), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 5), 9), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 1536)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1536), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 24), 36), 9)*9)) + (floormod((floordiv(threadIdx.x_2, 3) + 2), 3)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 1600)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1600), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 36), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 7), 9), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 1664)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1664), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 36), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 1728)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv(threadIdx.x_2, 36)*4608)) + cse_var_1) + floormod(threadIdx.x_2, 36)) + 221184)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 1792)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1792), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 28), 36), 9)*9)) + floormod((threadIdx.x_2 + 1), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 1856)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1856), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 20), 36), 9)*9)) + floormod((threadIdx.x_2 + 2), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 1920)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1920), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 12), 36), 9)*9)) + (floormod((floordiv(threadIdx.x_2, 3) + 1), 3)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 1984)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1984), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 4), 36), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 2048)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2048), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 36), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 5), 9), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 2112)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2112), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 24), 36), 9)*9)) + (floormod((floordiv(threadIdx.x_2, 3) + 2), 3)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 2176)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2176), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 36), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 7), 9), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 2240)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2240), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 36), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 2304)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv(threadIdx.x_2, 36)*4608)) + cse_var_1) + floormod(threadIdx.x_2, 36)) + 294912)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 2368)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2368), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 28), 36), 9)*9)) + floormod((threadIdx.x_2 + 1), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 2432)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2432), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 20), 36), 9)*9)) + floormod((threadIdx.x_2 + 2), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 2496)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2496), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 12), 36), 9)*9)) + (floormod((floordiv(threadIdx.x_2, 3) + 1), 3)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 2560)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2560), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 4), 36), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 2624)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2624), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 36), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 5), 9), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 2688)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2688), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 24), 36), 9)*9)) + (floormod((floordiv(threadIdx.x_2, 3) + 2), 3)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 2752)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2752), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 36), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 7), 9), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 2816)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2816), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 36), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 2880)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv(threadIdx.x_2, 36)*4608)) + cse_var_1) + floormod(threadIdx.x_2, 36)) + 368640)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 2944)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2944), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 28), 36), 9)*9)) + floormod((threadIdx.x_2 + 1), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 3008)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3008), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 20), 36), 9)*9)) + floormod((threadIdx.x_2 + 2), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 3072)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3072), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 12), 36), 9)*9)) + (floormod((floordiv(threadIdx.x_2, 3) + 1), 3)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 3136)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3136), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 4), 36), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 3200)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3200), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 36), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 5), 9), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 3264)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3264), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 24), 36), 9)*9)) + (floormod((floordiv(threadIdx.x_2, 3) + 2), 3)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 3328)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3328), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 36), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 7), 9), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 3392)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3392), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 36), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 3456)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv(threadIdx.x_2, 36)*4608)) + cse_var_1) + floormod(threadIdx.x_2, 36)) + 442368)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 3520)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3520), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 28), 36), 9)*9)) + floormod((threadIdx.x_2 + 1), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 3584)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3584), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 20), 36), 9)*9)) + floormod((threadIdx.x_2 + 2), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 3648)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3648), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 12), 36), 9)*9)) + (floormod((floordiv(threadIdx.x_2, 3) + 1), 3)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 3712)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3712), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 4), 36), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 3776)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3776), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 36), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 5), 9), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 3840)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3840), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 24), 36), 9)*9)) + (floormod((floordiv(threadIdx.x_2, 3) + 2), 3)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 3904)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3904), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 36), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 7), 9), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 3968)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3968), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 36), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 4032)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv(threadIdx.x_2, 36)*4608)) + cse_var_1) + floormod(threadIdx.x_2, 36)) + 516096)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 4096)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 4096), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 28), 36), 9)*9)) + floormod((threadIdx.x_2 + 1), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 4160)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 4160), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 20), 36), 9)*9)) + floormod((threadIdx.x_2 + 2), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 4224)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 4224), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 12), 36), 9)*9)) + (floormod((floordiv(threadIdx.x_2, 3) + 1), 3)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 4288)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 4288), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 4), 36), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 4352)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 4352), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 36), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 5), 9), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 4416)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 4416), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 24), 36), 9)*9)) + (floormod((floordiv(threadIdx.x_2, 3) + 2), 3)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 4480)] = kernel[((((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 4480), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 36), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 7), 9), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
            kernel.shared_1[(threadIdx.x_2 + 4544)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 4544), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 36), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[0]*kernel.shared_1[(threadIdx.x*36)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[0]*kernel.shared_1[((threadIdx.x*36) + 2304)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[1]*kernel.shared_1[((threadIdx.x*36) + 1)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[1]*kernel.shared_1[((threadIdx.x*36) + 2305)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[2]*kernel.shared_1[((threadIdx.x*36) + 2)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[2]*kernel.shared_1[((threadIdx.x*36) + 2306)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[27]*kernel.shared_1[((threadIdx.x*36) + 9)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[27]*kernel.shared_1[((threadIdx.x*36) + 2313)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[28]*kernel.shared_1[((threadIdx.x*36) + 10)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[28]*kernel.shared_1[((threadIdx.x*36) + 2314)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[29]*kernel.shared_1[((threadIdx.x*36) + 11)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[29]*kernel.shared_1[((threadIdx.x*36) + 2315)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[54]*kernel.shared_1[((threadIdx.x*36) + 18)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[54]*kernel.shared_1[((threadIdx.x*36) + 2322)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[55]*kernel.shared_1[((threadIdx.x*36) + 19)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[55]*kernel.shared_1[((threadIdx.x*36) + 2323)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[56]*kernel.shared_1[((threadIdx.x*36) + 20)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[56]*kernel.shared_1[((threadIdx.x*36) + 2324)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[81]*kernel.shared_1[((threadIdx.x*36) + 27)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[81]*kernel.shared_1[((threadIdx.x*36) + 2331)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[82]*kernel.shared_1[((threadIdx.x*36) + 28)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[82]*kernel.shared_1[((threadIdx.x*36) + 2332)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[83]*kernel.shared_1[((threadIdx.x*36) + 29)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[83]*kernel.shared_1[((threadIdx.x*36) + 2333)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[3]*kernel.shared_1[(threadIdx.x*36)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[3]*kernel.shared_1[((threadIdx.x*36) + 2304)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[4]*kernel.shared_1[((threadIdx.x*36) + 1)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[4]*kernel.shared_1[((threadIdx.x*36) + 2305)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[5]*kernel.shared_1[((threadIdx.x*36) + 2)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[5]*kernel.shared_1[((threadIdx.x*36) + 2306)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[30]*kernel.shared_1[((threadIdx.x*36) + 9)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[30]*kernel.shared_1[((threadIdx.x*36) + 2313)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[31]*kernel.shared_1[((threadIdx.x*36) + 10)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[31]*kernel.shared_1[((threadIdx.x*36) + 2314)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[32]*kernel.shared_1[((threadIdx.x*36) + 11)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[32]*kernel.shared_1[((threadIdx.x*36) + 2315)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[57]*kernel.shared_1[((threadIdx.x*36) + 18)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[57]*kernel.shared_1[((threadIdx.x*36) + 2322)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[58]*kernel.shared_1[((threadIdx.x*36) + 19)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[58]*kernel.shared_1[((threadIdx.x*36) + 2323)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[59]*kernel.shared_1[((threadIdx.x*36) + 20)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[59]*kernel.shared_1[((threadIdx.x*36) + 2324)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[84]*kernel.shared_1[((threadIdx.x*36) + 27)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[84]*kernel.shared_1[((threadIdx.x*36) + 2331)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[85]*kernel.shared_1[((threadIdx.x*36) + 28)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[85]*kernel.shared_1[((threadIdx.x*36) + 2332)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[86]*kernel.shared_1[((threadIdx.x*36) + 29)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[86]*kernel.shared_1[((threadIdx.x*36) + 2333)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[6]*kernel.shared_1[(threadIdx.x*36)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[6]*kernel.shared_1[((threadIdx.x*36) + 2304)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[7]*kernel.shared_1[((threadIdx.x*36) + 1)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[7]*kernel.shared_1[((threadIdx.x*36) + 2305)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[8]*kernel.shared_1[((threadIdx.x*36) + 2)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[8]*kernel.shared_1[((threadIdx.x*36) + 2306)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[33]*kernel.shared_1[((threadIdx.x*36) + 9)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[33]*kernel.shared_1[((threadIdx.x*36) + 2313)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[34]*kernel.shared_1[((threadIdx.x*36) + 10)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[34]*kernel.shared_1[((threadIdx.x*36) + 2314)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[35]*kernel.shared_1[((threadIdx.x*36) + 11)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[35]*kernel.shared_1[((threadIdx.x*36) + 2315)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[60]*kernel.shared_1[((threadIdx.x*36) + 18)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[60]*kernel.shared_1[((threadIdx.x*36) + 2322)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[61]*kernel.shared_1[((threadIdx.x*36) + 19)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[61]*kernel.shared_1[((threadIdx.x*36) + 2323)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[62]*kernel.shared_1[((threadIdx.x*36) + 20)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[62]*kernel.shared_1[((threadIdx.x*36) + 2324)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[87]*kernel.shared_1[((threadIdx.x*36) + 27)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[87]*kernel.shared_1[((threadIdx.x*36) + 2331)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[88]*kernel.shared_1[((threadIdx.x*36) + 28)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[88]*kernel.shared_1[((threadIdx.x*36) + 2332)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[89]*kernel.shared_1[((threadIdx.x*36) + 29)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[89]*kernel.shared_1[((threadIdx.x*36) + 2333)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[9]*kernel.shared_1[(threadIdx.x*36)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[9]*kernel.shared_1[((threadIdx.x*36) + 2304)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[10]*kernel.shared_1[((threadIdx.x*36) + 1)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[10]*kernel.shared_1[((threadIdx.x*36) + 2305)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[11]*kernel.shared_1[((threadIdx.x*36) + 2)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[11]*kernel.shared_1[((threadIdx.x*36) + 2306)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[36]*kernel.shared_1[((threadIdx.x*36) + 9)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[36]*kernel.shared_1[((threadIdx.x*36) + 2313)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[37]*kernel.shared_1[((threadIdx.x*36) + 10)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[37]*kernel.shared_1[((threadIdx.x*36) + 2314)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[38]*kernel.shared_1[((threadIdx.x*36) + 11)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[38]*kernel.shared_1[((threadIdx.x*36) + 2315)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[63]*kernel.shared_1[((threadIdx.x*36) + 18)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[63]*kernel.shared_1[((threadIdx.x*36) + 2322)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[64]*kernel.shared_1[((threadIdx.x*36) + 19)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[64]*kernel.shared_1[((threadIdx.x*36) + 2323)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[65]*kernel.shared_1[((threadIdx.x*36) + 20)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[65]*kernel.shared_1[((threadIdx.x*36) + 2324)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[90]*kernel.shared_1[((threadIdx.x*36) + 27)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[90]*kernel.shared_1[((threadIdx.x*36) + 2331)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[91]*kernel.shared_1[((threadIdx.x*36) + 28)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[91]*kernel.shared_1[((threadIdx.x*36) + 2332)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[92]*kernel.shared_1[((threadIdx.x*36) + 29)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[92]*kernel.shared_1[((threadIdx.x*36) + 2333)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[12]*kernel.shared_1[(threadIdx.x*36)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[12]*kernel.shared_1[((threadIdx.x*36) + 2304)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[13]*kernel.shared_1[((threadIdx.x*36) + 1)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[13]*kernel.shared_1[((threadIdx.x*36) + 2305)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[14]*kernel.shared_1[((threadIdx.x*36) + 2)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[14]*kernel.shared_1[((threadIdx.x*36) + 2306)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[39]*kernel.shared_1[((threadIdx.x*36) + 9)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[39]*kernel.shared_1[((threadIdx.x*36) + 2313)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[40]*kernel.shared_1[((threadIdx.x*36) + 10)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[40]*kernel.shared_1[((threadIdx.x*36) + 2314)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[41]*kernel.shared_1[((threadIdx.x*36) + 11)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[41]*kernel.shared_1[((threadIdx.x*36) + 2315)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[66]*kernel.shared_1[((threadIdx.x*36) + 18)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[66]*kernel.shared_1[((threadIdx.x*36) + 2322)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[67]*kernel.shared_1[((threadIdx.x*36) + 19)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[67]*kernel.shared_1[((threadIdx.x*36) + 2323)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[68]*kernel.shared_1[((threadIdx.x*36) + 20)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[68]*kernel.shared_1[((threadIdx.x*36) + 2324)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[93]*kernel.shared_1[((threadIdx.x*36) + 27)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[93]*kernel.shared_1[((threadIdx.x*36) + 2331)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[94]*kernel.shared_1[((threadIdx.x*36) + 28)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[94]*kernel.shared_1[((threadIdx.x*36) + 2332)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[95]*kernel.shared_1[((threadIdx.x*36) + 29)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[95]*kernel.shared_1[((threadIdx.x*36) + 2333)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[15]*kernel.shared_1[(threadIdx.x*36)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[15]*kernel.shared_1[((threadIdx.x*36) + 2304)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[16]*kernel.shared_1[((threadIdx.x*36) + 1)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[16]*kernel.shared_1[((threadIdx.x*36) + 2305)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[17]*kernel.shared_1[((threadIdx.x*36) + 2)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[17]*kernel.shared_1[((threadIdx.x*36) + 2306)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[42]*kernel.shared_1[((threadIdx.x*36) + 9)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[42]*kernel.shared_1[((threadIdx.x*36) + 2313)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[43]*kernel.shared_1[((threadIdx.x*36) + 10)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[43]*kernel.shared_1[((threadIdx.x*36) + 2314)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[44]*kernel.shared_1[((threadIdx.x*36) + 11)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[44]*kernel.shared_1[((threadIdx.x*36) + 2315)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[69]*kernel.shared_1[((threadIdx.x*36) + 18)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[69]*kernel.shared_1[((threadIdx.x*36) + 2322)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[70]*kernel.shared_1[((threadIdx.x*36) + 19)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[70]*kernel.shared_1[((threadIdx.x*36) + 2323)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[71]*kernel.shared_1[((threadIdx.x*36) + 20)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[71]*kernel.shared_1[((threadIdx.x*36) + 2324)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[96]*kernel.shared_1[((threadIdx.x*36) + 27)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[96]*kernel.shared_1[((threadIdx.x*36) + 2331)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[97]*kernel.shared_1[((threadIdx.x*36) + 28)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[97]*kernel.shared_1[((threadIdx.x*36) + 2332)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[98]*kernel.shared_1[((threadIdx.x*36) + 29)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[98]*kernel.shared_1[((threadIdx.x*36) + 2333)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[18]*kernel.shared_1[(threadIdx.x*36)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[18]*kernel.shared_1[((threadIdx.x*36) + 2304)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[19]*kernel.shared_1[((threadIdx.x*36) + 1)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[19]*kernel.shared_1[((threadIdx.x*36) + 2305)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[20]*kernel.shared_1[((threadIdx.x*36) + 2)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[20]*kernel.shared_1[((threadIdx.x*36) + 2306)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[45]*kernel.shared_1[((threadIdx.x*36) + 9)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[45]*kernel.shared_1[((threadIdx.x*36) + 2313)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[46]*kernel.shared_1[((threadIdx.x*36) + 10)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[46]*kernel.shared_1[((threadIdx.x*36) + 2314)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[47]*kernel.shared_1[((threadIdx.x*36) + 11)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[47]*kernel.shared_1[((threadIdx.x*36) + 2315)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[72]*kernel.shared_1[((threadIdx.x*36) + 18)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[72]*kernel.shared_1[((threadIdx.x*36) + 2322)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[73]*kernel.shared_1[((threadIdx.x*36) + 19)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[73]*kernel.shared_1[((threadIdx.x*36) + 2323)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[74]*kernel.shared_1[((threadIdx.x*36) + 20)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[74]*kernel.shared_1[((threadIdx.x*36) + 2324)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[99]*kernel.shared_1[((threadIdx.x*36) + 27)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[99]*kernel.shared_1[((threadIdx.x*36) + 2331)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[100]*kernel.shared_1[((threadIdx.x*36) + 28)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[100]*kernel.shared_1[((threadIdx.x*36) + 2332)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[101]*kernel.shared_1[((threadIdx.x*36) + 29)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[101]*kernel.shared_1[((threadIdx.x*36) + 2333)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[3]*kernel.shared_1[((threadIdx.x*36) + 3)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[3]*kernel.shared_1[((threadIdx.x*36) + 2307)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[4]*kernel.shared_1[((threadIdx.x*36) + 4)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[4]*kernel.shared_1[((threadIdx.x*36) + 2308)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[5]*kernel.shared_1[((threadIdx.x*36) + 5)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[5]*kernel.shared_1[((threadIdx.x*36) + 2309)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[30]*kernel.shared_1[((threadIdx.x*36) + 12)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[30]*kernel.shared_1[((threadIdx.x*36) + 2316)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[31]*kernel.shared_1[((threadIdx.x*36) + 13)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[31]*kernel.shared_1[((threadIdx.x*36) + 2317)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[32]*kernel.shared_1[((threadIdx.x*36) + 14)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[32]*kernel.shared_1[((threadIdx.x*36) + 2318)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[57]*kernel.shared_1[((threadIdx.x*36) + 21)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[57]*kernel.shared_1[((threadIdx.x*36) + 2325)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[58]*kernel.shared_1[((threadIdx.x*36) + 22)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[58]*kernel.shared_1[((threadIdx.x*36) + 2326)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[59]*kernel.shared_1[((threadIdx.x*36) + 23)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[59]*kernel.shared_1[((threadIdx.x*36) + 2327)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[84]*kernel.shared_1[((threadIdx.x*36) + 30)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[84]*kernel.shared_1[((threadIdx.x*36) + 2334)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[85]*kernel.shared_1[((threadIdx.x*36) + 31)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[85]*kernel.shared_1[((threadIdx.x*36) + 2335)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[86]*kernel.shared_1[((threadIdx.x*36) + 32)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[86]*kernel.shared_1[((threadIdx.x*36) + 2336)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[6]*kernel.shared_1[((threadIdx.x*36) + 3)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[6]*kernel.shared_1[((threadIdx.x*36) + 2307)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[7]*kernel.shared_1[((threadIdx.x*36) + 4)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[7]*kernel.shared_1[((threadIdx.x*36) + 2308)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[8]*kernel.shared_1[((threadIdx.x*36) + 5)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[8]*kernel.shared_1[((threadIdx.x*36) + 2309)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[33]*kernel.shared_1[((threadIdx.x*36) + 12)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[33]*kernel.shared_1[((threadIdx.x*36) + 2316)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[34]*kernel.shared_1[((threadIdx.x*36) + 13)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[34]*kernel.shared_1[((threadIdx.x*36) + 2317)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[35]*kernel.shared_1[((threadIdx.x*36) + 14)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[35]*kernel.shared_1[((threadIdx.x*36) + 2318)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[60]*kernel.shared_1[((threadIdx.x*36) + 21)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[60]*kernel.shared_1[((threadIdx.x*36) + 2325)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[61]*kernel.shared_1[((threadIdx.x*36) + 22)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[61]*kernel.shared_1[((threadIdx.x*36) + 2326)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[62]*kernel.shared_1[((threadIdx.x*36) + 23)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[62]*kernel.shared_1[((threadIdx.x*36) + 2327)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[87]*kernel.shared_1[((threadIdx.x*36) + 30)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[87]*kernel.shared_1[((threadIdx.x*36) + 2334)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[88]*kernel.shared_1[((threadIdx.x*36) + 31)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[88]*kernel.shared_1[((threadIdx.x*36) + 2335)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[89]*kernel.shared_1[((threadIdx.x*36) + 32)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[89]*kernel.shared_1[((threadIdx.x*36) + 2336)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[9]*kernel.shared_1[((threadIdx.x*36) + 3)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[9]*kernel.shared_1[((threadIdx.x*36) + 2307)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[10]*kernel.shared_1[((threadIdx.x*36) + 4)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[10]*kernel.shared_1[((threadIdx.x*36) + 2308)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[11]*kernel.shared_1[((threadIdx.x*36) + 5)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[11]*kernel.shared_1[((threadIdx.x*36) + 2309)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[36]*kernel.shared_1[((threadIdx.x*36) + 12)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[36]*kernel.shared_1[((threadIdx.x*36) + 2316)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[37]*kernel.shared_1[((threadIdx.x*36) + 13)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[37]*kernel.shared_1[((threadIdx.x*36) + 2317)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[38]*kernel.shared_1[((threadIdx.x*36) + 14)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[38]*kernel.shared_1[((threadIdx.x*36) + 2318)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[63]*kernel.shared_1[((threadIdx.x*36) + 21)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[63]*kernel.shared_1[((threadIdx.x*36) + 2325)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[64]*kernel.shared_1[((threadIdx.x*36) + 22)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[64]*kernel.shared_1[((threadIdx.x*36) + 2326)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[65]*kernel.shared_1[((threadIdx.x*36) + 23)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[65]*kernel.shared_1[((threadIdx.x*36) + 2327)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[90]*kernel.shared_1[((threadIdx.x*36) + 30)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[90]*kernel.shared_1[((threadIdx.x*36) + 2334)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[91]*kernel.shared_1[((threadIdx.x*36) + 31)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[91]*kernel.shared_1[((threadIdx.x*36) + 2335)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[92]*kernel.shared_1[((threadIdx.x*36) + 32)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[92]*kernel.shared_1[((threadIdx.x*36) + 2336)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[12]*kernel.shared_1[((threadIdx.x*36) + 3)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[12]*kernel.shared_1[((threadIdx.x*36) + 2307)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[13]*kernel.shared_1[((threadIdx.x*36) + 4)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[13]*kernel.shared_1[((threadIdx.x*36) + 2308)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[14]*kernel.shared_1[((threadIdx.x*36) + 5)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[14]*kernel.shared_1[((threadIdx.x*36) + 2309)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[39]*kernel.shared_1[((threadIdx.x*36) + 12)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[39]*kernel.shared_1[((threadIdx.x*36) + 2316)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[40]*kernel.shared_1[((threadIdx.x*36) + 13)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[40]*kernel.shared_1[((threadIdx.x*36) + 2317)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[41]*kernel.shared_1[((threadIdx.x*36) + 14)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[41]*kernel.shared_1[((threadIdx.x*36) + 2318)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[66]*kernel.shared_1[((threadIdx.x*36) + 21)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[66]*kernel.shared_1[((threadIdx.x*36) + 2325)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[67]*kernel.shared_1[((threadIdx.x*36) + 22)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[67]*kernel.shared_1[((threadIdx.x*36) + 2326)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[68]*kernel.shared_1[((threadIdx.x*36) + 23)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[68]*kernel.shared_1[((threadIdx.x*36) + 2327)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[93]*kernel.shared_1[((threadIdx.x*36) + 30)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[93]*kernel.shared_1[((threadIdx.x*36) + 2334)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[94]*kernel.shared_1[((threadIdx.x*36) + 31)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[94]*kernel.shared_1[((threadIdx.x*36) + 2335)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[95]*kernel.shared_1[((threadIdx.x*36) + 32)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[95]*kernel.shared_1[((threadIdx.x*36) + 2336)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[15]*kernel.shared_1[((threadIdx.x*36) + 3)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[15]*kernel.shared_1[((threadIdx.x*36) + 2307)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[16]*kernel.shared_1[((threadIdx.x*36) + 4)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[16]*kernel.shared_1[((threadIdx.x*36) + 2308)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[17]*kernel.shared_1[((threadIdx.x*36) + 5)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[17]*kernel.shared_1[((threadIdx.x*36) + 2309)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[42]*kernel.shared_1[((threadIdx.x*36) + 12)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[42]*kernel.shared_1[((threadIdx.x*36) + 2316)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[43]*kernel.shared_1[((threadIdx.x*36) + 13)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[43]*kernel.shared_1[((threadIdx.x*36) + 2317)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[44]*kernel.shared_1[((threadIdx.x*36) + 14)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[44]*kernel.shared_1[((threadIdx.x*36) + 2318)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[69]*kernel.shared_1[((threadIdx.x*36) + 21)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[69]*kernel.shared_1[((threadIdx.x*36) + 2325)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[70]*kernel.shared_1[((threadIdx.x*36) + 22)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[70]*kernel.shared_1[((threadIdx.x*36) + 2326)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[71]*kernel.shared_1[((threadIdx.x*36) + 23)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[71]*kernel.shared_1[((threadIdx.x*36) + 2327)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[96]*kernel.shared_1[((threadIdx.x*36) + 30)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[96]*kernel.shared_1[((threadIdx.x*36) + 2334)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[97]*kernel.shared_1[((threadIdx.x*36) + 31)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[97]*kernel.shared_1[((threadIdx.x*36) + 2335)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[98]*kernel.shared_1[((threadIdx.x*36) + 32)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[98]*kernel.shared_1[((threadIdx.x*36) + 2336)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[18]*kernel.shared_1[((threadIdx.x*36) + 3)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[18]*kernel.shared_1[((threadIdx.x*36) + 2307)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[19]*kernel.shared_1[((threadIdx.x*36) + 4)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[19]*kernel.shared_1[((threadIdx.x*36) + 2308)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[20]*kernel.shared_1[((threadIdx.x*36) + 5)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[20]*kernel.shared_1[((threadIdx.x*36) + 2309)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[45]*kernel.shared_1[((threadIdx.x*36) + 12)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[45]*kernel.shared_1[((threadIdx.x*36) + 2316)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[46]*kernel.shared_1[((threadIdx.x*36) + 13)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[46]*kernel.shared_1[((threadIdx.x*36) + 2317)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[47]*kernel.shared_1[((threadIdx.x*36) + 14)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[47]*kernel.shared_1[((threadIdx.x*36) + 2318)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[72]*kernel.shared_1[((threadIdx.x*36) + 21)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[72]*kernel.shared_1[((threadIdx.x*36) + 2325)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[73]*kernel.shared_1[((threadIdx.x*36) + 22)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[73]*kernel.shared_1[((threadIdx.x*36) + 2326)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[74]*kernel.shared_1[((threadIdx.x*36) + 23)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[74]*kernel.shared_1[((threadIdx.x*36) + 2327)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[99]*kernel.shared_1[((threadIdx.x*36) + 30)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[99]*kernel.shared_1[((threadIdx.x*36) + 2334)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[100]*kernel.shared_1[((threadIdx.x*36) + 31)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[100]*kernel.shared_1[((threadIdx.x*36) + 2335)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[101]*kernel.shared_1[((threadIdx.x*36) + 32)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[101]*kernel.shared_1[((threadIdx.x*36) + 2336)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[21]*kernel.shared_1[((threadIdx.x*36) + 3)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[21]*kernel.shared_1[((threadIdx.x*36) + 2307)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[22]*kernel.shared_1[((threadIdx.x*36) + 4)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[22]*kernel.shared_1[((threadIdx.x*36) + 2308)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[23]*kernel.shared_1[((threadIdx.x*36) + 5)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[23]*kernel.shared_1[((threadIdx.x*36) + 2309)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[48]*kernel.shared_1[((threadIdx.x*36) + 12)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[48]*kernel.shared_1[((threadIdx.x*36) + 2316)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[49]*kernel.shared_1[((threadIdx.x*36) + 13)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[49]*kernel.shared_1[((threadIdx.x*36) + 2317)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[50]*kernel.shared_1[((threadIdx.x*36) + 14)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[50]*kernel.shared_1[((threadIdx.x*36) + 2318)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[75]*kernel.shared_1[((threadIdx.x*36) + 21)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[75]*kernel.shared_1[((threadIdx.x*36) + 2325)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[76]*kernel.shared_1[((threadIdx.x*36) + 22)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[76]*kernel.shared_1[((threadIdx.x*36) + 2326)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[77]*kernel.shared_1[((threadIdx.x*36) + 23)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[77]*kernel.shared_1[((threadIdx.x*36) + 2327)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[102]*kernel.shared_1[((threadIdx.x*36) + 30)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[102]*kernel.shared_1[((threadIdx.x*36) + 2334)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[103]*kernel.shared_1[((threadIdx.x*36) + 31)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[103]*kernel.shared_1[((threadIdx.x*36) + 2335)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[104]*kernel.shared_1[((threadIdx.x*36) + 32)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[104]*kernel.shared_1[((threadIdx.x*36) + 2336)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[6]*kernel.shared_1[((threadIdx.x*36) + 6)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[6]*kernel.shared_1[((threadIdx.x*36) + 2310)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[7]*kernel.shared_1[((threadIdx.x*36) + 7)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[7]*kernel.shared_1[((threadIdx.x*36) + 2311)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[8]*kernel.shared_1[((threadIdx.x*36) + 8)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[8]*kernel.shared_1[((threadIdx.x*36) + 2312)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[33]*kernel.shared_1[((threadIdx.x*36) + 15)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[33]*kernel.shared_1[((threadIdx.x*36) + 2319)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[34]*kernel.shared_1[((threadIdx.x*36) + 16)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[34]*kernel.shared_1[((threadIdx.x*36) + 2320)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[35]*kernel.shared_1[((threadIdx.x*36) + 17)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[35]*kernel.shared_1[((threadIdx.x*36) + 2321)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[60]*kernel.shared_1[((threadIdx.x*36) + 24)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[60]*kernel.shared_1[((threadIdx.x*36) + 2328)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[61]*kernel.shared_1[((threadIdx.x*36) + 25)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[61]*kernel.shared_1[((threadIdx.x*36) + 2329)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[62]*kernel.shared_1[((threadIdx.x*36) + 26)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[62]*kernel.shared_1[((threadIdx.x*36) + 2330)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[87]*kernel.shared_1[((threadIdx.x*36) + 33)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[87]*kernel.shared_1[((threadIdx.x*36) + 2337)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[88]*kernel.shared_1[((threadIdx.x*36) + 34)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[88]*kernel.shared_1[((threadIdx.x*36) + 2338)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[89]*kernel.shared_1[((threadIdx.x*36) + 35)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[89]*kernel.shared_1[((threadIdx.x*36) + 2339)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[9]*kernel.shared_1[((threadIdx.x*36) + 6)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[9]*kernel.shared_1[((threadIdx.x*36) + 2310)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[10]*kernel.shared_1[((threadIdx.x*36) + 7)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[10]*kernel.shared_1[((threadIdx.x*36) + 2311)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[11]*kernel.shared_1[((threadIdx.x*36) + 8)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[11]*kernel.shared_1[((threadIdx.x*36) + 2312)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[36]*kernel.shared_1[((threadIdx.x*36) + 15)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[36]*kernel.shared_1[((threadIdx.x*36) + 2319)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[37]*kernel.shared_1[((threadIdx.x*36) + 16)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[37]*kernel.shared_1[((threadIdx.x*36) + 2320)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[38]*kernel.shared_1[((threadIdx.x*36) + 17)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[38]*kernel.shared_1[((threadIdx.x*36) + 2321)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[63]*kernel.shared_1[((threadIdx.x*36) + 24)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[63]*kernel.shared_1[((threadIdx.x*36) + 2328)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[64]*kernel.shared_1[((threadIdx.x*36) + 25)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[64]*kernel.shared_1[((threadIdx.x*36) + 2329)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[65]*kernel.shared_1[((threadIdx.x*36) + 26)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[65]*kernel.shared_1[((threadIdx.x*36) + 2330)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[90]*kernel.shared_1[((threadIdx.x*36) + 33)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[90]*kernel.shared_1[((threadIdx.x*36) + 2337)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[91]*kernel.shared_1[((threadIdx.x*36) + 34)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[91]*kernel.shared_1[((threadIdx.x*36) + 2338)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[92]*kernel.shared_1[((threadIdx.x*36) + 35)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[92]*kernel.shared_1[((threadIdx.x*36) + 2339)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[12]*kernel.shared_1[((threadIdx.x*36) + 6)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[12]*kernel.shared_1[((threadIdx.x*36) + 2310)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[13]*kernel.shared_1[((threadIdx.x*36) + 7)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[13]*kernel.shared_1[((threadIdx.x*36) + 2311)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[14]*kernel.shared_1[((threadIdx.x*36) + 8)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[14]*kernel.shared_1[((threadIdx.x*36) + 2312)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[39]*kernel.shared_1[((threadIdx.x*36) + 15)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[39]*kernel.shared_1[((threadIdx.x*36) + 2319)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[40]*kernel.shared_1[((threadIdx.x*36) + 16)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[40]*kernel.shared_1[((threadIdx.x*36) + 2320)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[41]*kernel.shared_1[((threadIdx.x*36) + 17)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[41]*kernel.shared_1[((threadIdx.x*36) + 2321)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[66]*kernel.shared_1[((threadIdx.x*36) + 24)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[66]*kernel.shared_1[((threadIdx.x*36) + 2328)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[67]*kernel.shared_1[((threadIdx.x*36) + 25)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[67]*kernel.shared_1[((threadIdx.x*36) + 2329)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[68]*kernel.shared_1[((threadIdx.x*36) + 26)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[68]*kernel.shared_1[((threadIdx.x*36) + 2330)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[93]*kernel.shared_1[((threadIdx.x*36) + 33)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[93]*kernel.shared_1[((threadIdx.x*36) + 2337)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[94]*kernel.shared_1[((threadIdx.x*36) + 34)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[94]*kernel.shared_1[((threadIdx.x*36) + 2338)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[95]*kernel.shared_1[((threadIdx.x*36) + 35)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[95]*kernel.shared_1[((threadIdx.x*36) + 2339)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[15]*kernel.shared_1[((threadIdx.x*36) + 6)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[15]*kernel.shared_1[((threadIdx.x*36) + 2310)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[16]*kernel.shared_1[((threadIdx.x*36) + 7)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[16]*kernel.shared_1[((threadIdx.x*36) + 2311)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[17]*kernel.shared_1[((threadIdx.x*36) + 8)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[17]*kernel.shared_1[((threadIdx.x*36) + 2312)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[42]*kernel.shared_1[((threadIdx.x*36) + 15)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[42]*kernel.shared_1[((threadIdx.x*36) + 2319)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[43]*kernel.shared_1[((threadIdx.x*36) + 16)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[43]*kernel.shared_1[((threadIdx.x*36) + 2320)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[44]*kernel.shared_1[((threadIdx.x*36) + 17)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[44]*kernel.shared_1[((threadIdx.x*36) + 2321)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[69]*kernel.shared_1[((threadIdx.x*36) + 24)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[69]*kernel.shared_1[((threadIdx.x*36) + 2328)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[70]*kernel.shared_1[((threadIdx.x*36) + 25)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[70]*kernel.shared_1[((threadIdx.x*36) + 2329)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[71]*kernel.shared_1[((threadIdx.x*36) + 26)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[71]*kernel.shared_1[((threadIdx.x*36) + 2330)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[96]*kernel.shared_1[((threadIdx.x*36) + 33)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[96]*kernel.shared_1[((threadIdx.x*36) + 2337)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[97]*kernel.shared_1[((threadIdx.x*36) + 34)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[97]*kernel.shared_1[((threadIdx.x*36) + 2338)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[98]*kernel.shared_1[((threadIdx.x*36) + 35)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[98]*kernel.shared_1[((threadIdx.x*36) + 2339)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[18]*kernel.shared_1[((threadIdx.x*36) + 6)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[18]*kernel.shared_1[((threadIdx.x*36) + 2310)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[19]*kernel.shared_1[((threadIdx.x*36) + 7)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[19]*kernel.shared_1[((threadIdx.x*36) + 2311)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[20]*kernel.shared_1[((threadIdx.x*36) + 8)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[20]*kernel.shared_1[((threadIdx.x*36) + 2312)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[45]*kernel.shared_1[((threadIdx.x*36) + 15)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[45]*kernel.shared_1[((threadIdx.x*36) + 2319)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[46]*kernel.shared_1[((threadIdx.x*36) + 16)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[46]*kernel.shared_1[((threadIdx.x*36) + 2320)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[47]*kernel.shared_1[((threadIdx.x*36) + 17)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[47]*kernel.shared_1[((threadIdx.x*36) + 2321)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[72]*kernel.shared_1[((threadIdx.x*36) + 24)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[72]*kernel.shared_1[((threadIdx.x*36) + 2328)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[73]*kernel.shared_1[((threadIdx.x*36) + 25)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[73]*kernel.shared_1[((threadIdx.x*36) + 2329)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[74]*kernel.shared_1[((threadIdx.x*36) + 26)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[74]*kernel.shared_1[((threadIdx.x*36) + 2330)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[99]*kernel.shared_1[((threadIdx.x*36) + 33)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[99]*kernel.shared_1[((threadIdx.x*36) + 2337)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[100]*kernel.shared_1[((threadIdx.x*36) + 34)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[100]*kernel.shared_1[((threadIdx.x*36) + 2338)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[101]*kernel.shared_1[((threadIdx.x*36) + 35)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[101]*kernel.shared_1[((threadIdx.x*36) + 2339)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[21]*kernel.shared_1[((threadIdx.x*36) + 6)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[21]*kernel.shared_1[((threadIdx.x*36) + 2310)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[22]*kernel.shared_1[((threadIdx.x*36) + 7)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[22]*kernel.shared_1[((threadIdx.x*36) + 2311)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[23]*kernel.shared_1[((threadIdx.x*36) + 8)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[23]*kernel.shared_1[((threadIdx.x*36) + 2312)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[48]*kernel.shared_1[((threadIdx.x*36) + 15)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[48]*kernel.shared_1[((threadIdx.x*36) + 2319)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[49]*kernel.shared_1[((threadIdx.x*36) + 16)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[49]*kernel.shared_1[((threadIdx.x*36) + 2320)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[50]*kernel.shared_1[((threadIdx.x*36) + 17)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[50]*kernel.shared_1[((threadIdx.x*36) + 2321)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[75]*kernel.shared_1[((threadIdx.x*36) + 24)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[75]*kernel.shared_1[((threadIdx.x*36) + 2328)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[76]*kernel.shared_1[((threadIdx.x*36) + 25)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[76]*kernel.shared_1[((threadIdx.x*36) + 2329)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[77]*kernel.shared_1[((threadIdx.x*36) + 26)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[77]*kernel.shared_1[((threadIdx.x*36) + 2330)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[102]*kernel.shared_1[((threadIdx.x*36) + 33)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[102]*kernel.shared_1[((threadIdx.x*36) + 2337)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[103]*kernel.shared_1[((threadIdx.x*36) + 34)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[103]*kernel.shared_1[((threadIdx.x*36) + 2338)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[104]*kernel.shared_1[((threadIdx.x*36) + 35)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[104]*kernel.shared_1[((threadIdx.x*36) + 2339)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[24]*kernel.shared_1[((threadIdx.x*36) + 6)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[24]*kernel.shared_1[((threadIdx.x*36) + 2310)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[25]*kernel.shared_1[((threadIdx.x*36) + 7)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[25]*kernel.shared_1[((threadIdx.x*36) + 2311)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[26]*kernel.shared_1[((threadIdx.x*36) + 8)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[26]*kernel.shared_1[((threadIdx.x*36) + 2312)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[51]*kernel.shared_1[((threadIdx.x*36) + 15)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[51]*kernel.shared_1[((threadIdx.x*36) + 2319)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[52]*kernel.shared_1[((threadIdx.x*36) + 16)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[52]*kernel.shared_1[((threadIdx.x*36) + 2320)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[53]*kernel.shared_1[((threadIdx.x*36) + 17)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[53]*kernel.shared_1[((threadIdx.x*36) + 2321)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[78]*kernel.shared_1[((threadIdx.x*36) + 24)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[78]*kernel.shared_1[((threadIdx.x*36) + 2328)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[79]*kernel.shared_1[((threadIdx.x*36) + 25)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[79]*kernel.shared_1[((threadIdx.x*36) + 2329)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[80]*kernel.shared_1[((threadIdx.x*36) + 26)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[80]*kernel.shared_1[((threadIdx.x*36) + 2330)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[105]*kernel.shared_1[((threadIdx.x*36) + 33)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[105]*kernel.shared_1[((threadIdx.x*36) + 2337)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[106]*kernel.shared_1[((threadIdx.x*36) + 34)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[106]*kernel.shared_1[((threadIdx.x*36) + 2338)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[107]*kernel.shared_1[((threadIdx.x*36) + 35)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[107]*kernel.shared_1[((threadIdx.x*36) + 2339)]))
          }
        }
        for (i2.inner: int32, 0, 7) {
          compute[((((floordiv(blockIdx.x, 7)*6272) + (threadIdx.x*49)) + (i2.inner*7)) + floormod(blockIdx.x, 7))] = max((conv2d_nchw_1[i2.inner] + bias[((floordiv(blockIdx.x, 7)*128) + threadIdx.x)]), 0f32)
          compute[(((((floordiv(blockIdx.x, 7)*6272) + (threadIdx.x*49)) + (i2.inner*7)) + floormod(blockIdx.x, 7)) + 3136)] = max((conv2d_nchw_1[(i2.inner + 7)] + bias[(((floordiv(blockIdx.x, 7)*128) + threadIdx.x) + 64)]), 0f32)
        }
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 141-144

Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.

.. GENERATED FROM PYTHON SOURCE LINES 144-171

.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Execution time of this operator: 0.277 ms




.. GENERATED FROM PYTHON SOURCE LINES 172-177

Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

.. GENERATED FROM PYTHON SOURCE LINES 179-182

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.

.. GENERATED FROM PYTHON SOURCE LINES 182-189

.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=1)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=64)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=2)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=7)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=4)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=1)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=1)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=3)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=3)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=1)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=1)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=64)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=2)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=7)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=1)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=1)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=64)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=54)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=64)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 512)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(64) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[14];
      __shared__ float pad_temp_shared[108];
      __shared__ float kernel_shared[4608];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[7] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[8] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[9] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[10] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[11] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[12] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      conv2d_nchw[13] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 128; ++rc_outer_outer) {
        __syncthreads();
        if (((int)threadIdx.x) < 2) {
          pad_temp_shared[(((int)threadIdx.x) * 54)] = 0.000000e+00f;
          pad_temp_shared[((((int)threadIdx.x) * 54) + 1)] = 0.000000e+00f;
          pad_temp_shared[((((int)threadIdx.x) * 54) + 2)] = 0.000000e+00f;
          pad_temp_shared[((((int)threadIdx.x) * 54) + 3)] = ((1 <= (((int)blockIdx.x) % 7)) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) - 1)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 4)] = data[(((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7))];
          pad_temp_shared[((((int)threadIdx.x) * 54) + 5)] = (((((int)blockIdx.x) % 7) < 6) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 1)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 6)] = ((1 <= (((int)blockIdx.x) % 7)) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 6)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 7)] = data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 7)];
          pad_temp_shared[((((int)threadIdx.x) * 54) + 8)] = (((((int)blockIdx.x) % 7) < 6) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 8)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 9)] = ((1 <= (((int)blockIdx.x) % 7)) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 13)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 10)] = data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 14)];
          pad_temp_shared[((((int)threadIdx.x) * 54) + 11)] = (((((int)blockIdx.x) % 7) < 6) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 15)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 12)] = ((1 <= (((int)blockIdx.x) % 7)) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 20)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 13)] = data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 21)];
          pad_temp_shared[((((int)threadIdx.x) * 54) + 14)] = (((((int)blockIdx.x) % 7) < 6) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 22)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 15)] = ((1 <= (((int)blockIdx.x) % 7)) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 27)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 16)] = data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 28)];
          pad_temp_shared[((((int)threadIdx.x) * 54) + 17)] = (((((int)blockIdx.x) % 7) < 6) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 29)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 18)] = ((1 <= (((int)blockIdx.x) % 7)) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 34)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 19)] = data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 35)];
          pad_temp_shared[((((int)threadIdx.x) * 54) + 20)] = (((((int)blockIdx.x) % 7) < 6) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 36)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 21)] = ((1 <= (((int)blockIdx.x) % 7)) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 41)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 22)] = data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 42)];
          pad_temp_shared[((((int)threadIdx.x) * 54) + 23)] = (((((int)blockIdx.x) % 7) < 6) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 43)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 24)] = 0.000000e+00f;
          pad_temp_shared[((((int)threadIdx.x) * 54) + 25)] = 0.000000e+00f;
          pad_temp_shared[((((int)threadIdx.x) * 54) + 26)] = 0.000000e+00f;
          pad_temp_shared[((((int)threadIdx.x) * 54) + 27)] = 0.000000e+00f;
          pad_temp_shared[((((int)threadIdx.x) * 54) + 28)] = 0.000000e+00f;
          pad_temp_shared[((((int)threadIdx.x) * 54) + 29)] = 0.000000e+00f;
          pad_temp_shared[((((int)threadIdx.x) * 54) + 30)] = ((1 <= (((int)blockIdx.x) % 7)) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 48)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 31)] = data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 49)];
          pad_temp_shared[((((int)threadIdx.x) * 54) + 32)] = (((((int)blockIdx.x) % 7) < 6) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 50)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 33)] = ((1 <= (((int)blockIdx.x) % 7)) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 55)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 34)] = data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 56)];
          pad_temp_shared[((((int)threadIdx.x) * 54) + 35)] = (((((int)blockIdx.x) % 7) < 6) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 57)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 36)] = ((1 <= (((int)blockIdx.x) % 7)) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 62)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 37)] = data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 63)];
          pad_temp_shared[((((int)threadIdx.x) * 54) + 38)] = (((((int)blockIdx.x) % 7) < 6) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 64)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 39)] = ((1 <= (((int)blockIdx.x) % 7)) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 69)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 40)] = data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 70)];
          pad_temp_shared[((((int)threadIdx.x) * 54) + 41)] = (((((int)blockIdx.x) % 7) < 6) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 71)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 42)] = ((1 <= (((int)blockIdx.x) % 7)) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 76)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 43)] = data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 77)];
          pad_temp_shared[((((int)threadIdx.x) * 54) + 44)] = (((((int)blockIdx.x) % 7) < 6) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 78)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 45)] = ((1 <= (((int)blockIdx.x) % 7)) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 83)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 46)] = data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 84)];
          pad_temp_shared[((((int)threadIdx.x) * 54) + 47)] = (((((int)blockIdx.x) % 7) < 6) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 85)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 48)] = ((1 <= (((int)blockIdx.x) % 7)) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 90)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 49)] = data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 91)];
          pad_temp_shared[((((int)threadIdx.x) * 54) + 50)] = (((((int)blockIdx.x) % 7) < 6) ? data[((((rc_outer_outer * 196) + (((int)threadIdx.x) * 98)) + (((int)blockIdx.x) % 7)) + 92)] : 0.000000e+00f);
          pad_temp_shared[((((int)threadIdx.x) * 54) + 51)] = 0.000000e+00f;
          pad_temp_shared[((((int)threadIdx.x) * 54) + 52)] = 0.000000e+00f;
          pad_temp_shared[((((int)threadIdx.x) * 54) + 53)] = 0.000000e+00f;
        }
        kernel_shared[((int)threadIdx.x)] = kernel[(((((((int)blockIdx.x) / 7) * 589824) + ((((int)threadIdx.x) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) % 36))];
        kernel_shared[(((int)threadIdx.x) + 64)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 64) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 28) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 1) % 9))];
        kernel_shared[(((int)threadIdx.x) + 128)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 128) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 20) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 2) % 9))];
        kernel_shared[(((int)threadIdx.x) + 192)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 192) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 12) % 36) / 9) * 9)) + ((((((int)threadIdx.x) / 3) + 1) % 3) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 256)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 256) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 4) % 36) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 320)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 320) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 32) % 36) / 9) * 9)) + ((((((int)threadIdx.x) + 5) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 384)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 384) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 24) % 36) / 9) * 9)) + ((((((int)threadIdx.x) / 3) + 2) % 3) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 448)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 448) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 16) % 36) / 9) * 9)) + ((((((int)threadIdx.x) + 7) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 512)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 512) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 8) % 36) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 576)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + ((((int)threadIdx.x) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) % 36)) + 73728)];
        kernel_shared[(((int)threadIdx.x) + 640)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 640) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 28) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 1) % 9))];
        kernel_shared[(((int)threadIdx.x) + 704)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 704) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 20) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 2) % 9))];
        kernel_shared[(((int)threadIdx.x) + 768)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 768) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 12) % 36) / 9) * 9)) + ((((((int)threadIdx.x) / 3) + 1) % 3) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 832)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 832) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 4) % 36) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 896)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 896) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 32) % 36) / 9) * 9)) + ((((((int)threadIdx.x) + 5) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 960)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 960) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 24) % 36) / 9) * 9)) + ((((((int)threadIdx.x) / 3) + 2) % 3) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1024)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1024) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 16) % 36) / 9) * 9)) + ((((((int)threadIdx.x) + 7) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1088)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1088) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 8) % 36) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1152)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + ((((int)threadIdx.x) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) % 36)) + 147456)];
        kernel_shared[(((int)threadIdx.x) + 1216)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1216) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 28) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 1) % 9))];
        kernel_shared[(((int)threadIdx.x) + 1280)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1280) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 20) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 2) % 9))];
        kernel_shared[(((int)threadIdx.x) + 1344)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1344) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 12) % 36) / 9) * 9)) + ((((((int)threadIdx.x) / 3) + 1) % 3) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1408)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1408) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 4) % 36) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1472)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1472) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 32) % 36) / 9) * 9)) + ((((((int)threadIdx.x) + 5) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1536)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1536) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 24) % 36) / 9) * 9)) + ((((((int)threadIdx.x) / 3) + 2) % 3) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1600)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1600) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 16) % 36) / 9) * 9)) + ((((((int)threadIdx.x) + 7) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1664)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1664) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 8) % 36) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1728)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + ((((int)threadIdx.x) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) % 36)) + 221184)];
        kernel_shared[(((int)threadIdx.x) + 1792)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1792) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 28) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 1) % 9))];
        kernel_shared[(((int)threadIdx.x) + 1856)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1856) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 20) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 2) % 9))];
        kernel_shared[(((int)threadIdx.x) + 1920)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1920) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 12) % 36) / 9) * 9)) + ((((((int)threadIdx.x) / 3) + 1) % 3) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1984)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1984) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 4) % 36) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2048)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2048) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 32) % 36) / 9) * 9)) + ((((((int)threadIdx.x) + 5) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2112)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2112) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 24) % 36) / 9) * 9)) + ((((((int)threadIdx.x) / 3) + 2) % 3) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2176)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2176) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 16) % 36) / 9) * 9)) + ((((((int)threadIdx.x) + 7) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2240)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2240) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 8) % 36) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2304)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + ((((int)threadIdx.x) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) % 36)) + 294912)];
        kernel_shared[(((int)threadIdx.x) + 2368)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2368) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 28) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 1) % 9))];
        kernel_shared[(((int)threadIdx.x) + 2432)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2432) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 20) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 2) % 9))];
        kernel_shared[(((int)threadIdx.x) + 2496)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2496) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 12) % 36) / 9) * 9)) + ((((((int)threadIdx.x) / 3) + 1) % 3) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2560)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2560) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 4) % 36) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2624)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2624) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 32) % 36) / 9) * 9)) + ((((((int)threadIdx.x) + 5) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2688)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2688) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 24) % 36) / 9) * 9)) + ((((((int)threadIdx.x) / 3) + 2) % 3) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2752)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2752) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 16) % 36) / 9) * 9)) + ((((((int)threadIdx.x) + 7) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2816)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2816) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 8) % 36) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2880)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + ((((int)threadIdx.x) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) % 36)) + 368640)];
        kernel_shared[(((int)threadIdx.x) + 2944)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2944) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 28) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 1) % 9))];
        kernel_shared[(((int)threadIdx.x) + 3008)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3008) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 20) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 2) % 9))];
        kernel_shared[(((int)threadIdx.x) + 3072)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3072) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 12) % 36) / 9) * 9)) + ((((((int)threadIdx.x) / 3) + 1) % 3) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3136)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3136) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 4) % 36) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3200)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3200) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 32) % 36) / 9) * 9)) + ((((((int)threadIdx.x) + 5) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3264)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3264) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 24) % 36) / 9) * 9)) + ((((((int)threadIdx.x) / 3) + 2) % 3) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3328)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3328) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 16) % 36) / 9) * 9)) + ((((((int)threadIdx.x) + 7) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3392)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3392) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 8) % 36) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3456)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + ((((int)threadIdx.x) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) % 36)) + 442368)];
        kernel_shared[(((int)threadIdx.x) + 3520)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3520) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 28) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 1) % 9))];
        kernel_shared[(((int)threadIdx.x) + 3584)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3584) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 20) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 2) % 9))];
        kernel_shared[(((int)threadIdx.x) + 3648)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3648) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 12) % 36) / 9) * 9)) + ((((((int)threadIdx.x) / 3) + 1) % 3) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3712)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3712) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 4) % 36) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3776)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3776) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 32) % 36) / 9) * 9)) + ((((((int)threadIdx.x) + 5) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3840)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3840) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 24) % 36) / 9) * 9)) + ((((((int)threadIdx.x) / 3) + 2) % 3) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3904)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3904) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 16) % 36) / 9) * 9)) + ((((((int)threadIdx.x) + 7) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 3968)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3968) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 8) % 36) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4032)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + ((((int)threadIdx.x) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) % 36)) + 516096)];
        kernel_shared[(((int)threadIdx.x) + 4096)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 4096) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 28) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 1) % 9))];
        kernel_shared[(((int)threadIdx.x) + 4160)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 4160) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 20) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 2) % 9))];
        kernel_shared[(((int)threadIdx.x) + 4224)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 4224) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 12) % 36) / 9) * 9)) + ((((((int)threadIdx.x) / 3) + 1) % 3) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4288)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 4288) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 4) % 36) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4352)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 4352) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 32) % 36) / 9) * 9)) + ((((((int)threadIdx.x) + 5) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4416)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 4416) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 24) % 36) / 9) * 9)) + ((((((int)threadIdx.x) / 3) + 2) % 3) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4480)] = kernel[(((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 4480) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 16) % 36) / 9) * 9)) + ((((((int)threadIdx.x) + 7) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 4544)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 4544) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 8) % 36) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        __syncthreads();
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[0] * kernel_shared[(((int)threadIdx.x) * 36)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[0] * kernel_shared[((((int)threadIdx.x) * 36) + 2304)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[1] * kernel_shared[((((int)threadIdx.x) * 36) + 1)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[1] * kernel_shared[((((int)threadIdx.x) * 36) + 2305)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[2] * kernel_shared[((((int)threadIdx.x) * 36) + 2)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[2] * kernel_shared[((((int)threadIdx.x) * 36) + 2306)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[27] * kernel_shared[((((int)threadIdx.x) * 36) + 9)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[27] * kernel_shared[((((int)threadIdx.x) * 36) + 2313)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[28] * kernel_shared[((((int)threadIdx.x) * 36) + 10)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[28] * kernel_shared[((((int)threadIdx.x) * 36) + 2314)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[29] * kernel_shared[((((int)threadIdx.x) * 36) + 11)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[29] * kernel_shared[((((int)threadIdx.x) * 36) + 2315)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[54] * kernel_shared[((((int)threadIdx.x) * 36) + 18)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[54] * kernel_shared[((((int)threadIdx.x) * 36) + 2322)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[55] * kernel_shared[((((int)threadIdx.x) * 36) + 19)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[55] * kernel_shared[((((int)threadIdx.x) * 36) + 2323)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[56] * kernel_shared[((((int)threadIdx.x) * 36) + 20)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[56] * kernel_shared[((((int)threadIdx.x) * 36) + 2324)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[81] * kernel_shared[((((int)threadIdx.x) * 36) + 27)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[81] * kernel_shared[((((int)threadIdx.x) * 36) + 2331)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[82] * kernel_shared[((((int)threadIdx.x) * 36) + 28)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[82] * kernel_shared[((((int)threadIdx.x) * 36) + 2332)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[83] * kernel_shared[((((int)threadIdx.x) * 36) + 29)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[83] * kernel_shared[((((int)threadIdx.x) * 36) + 2333)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[3] * kernel_shared[(((int)threadIdx.x) * 36)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[3] * kernel_shared[((((int)threadIdx.x) * 36) + 2304)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[4] * kernel_shared[((((int)threadIdx.x) * 36) + 1)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[4] * kernel_shared[((((int)threadIdx.x) * 36) + 2305)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[5] * kernel_shared[((((int)threadIdx.x) * 36) + 2)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[5] * kernel_shared[((((int)threadIdx.x) * 36) + 2306)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[30] * kernel_shared[((((int)threadIdx.x) * 36) + 9)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[30] * kernel_shared[((((int)threadIdx.x) * 36) + 2313)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[31] * kernel_shared[((((int)threadIdx.x) * 36) + 10)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[31] * kernel_shared[((((int)threadIdx.x) * 36) + 2314)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[32] * kernel_shared[((((int)threadIdx.x) * 36) + 11)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[32] * kernel_shared[((((int)threadIdx.x) * 36) + 2315)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[57] * kernel_shared[((((int)threadIdx.x) * 36) + 18)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[57] * kernel_shared[((((int)threadIdx.x) * 36) + 2322)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[58] * kernel_shared[((((int)threadIdx.x) * 36) + 19)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[58] * kernel_shared[((((int)threadIdx.x) * 36) + 2323)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[59] * kernel_shared[((((int)threadIdx.x) * 36) + 20)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[59] * kernel_shared[((((int)threadIdx.x) * 36) + 2324)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[84] * kernel_shared[((((int)threadIdx.x) * 36) + 27)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[84] * kernel_shared[((((int)threadIdx.x) * 36) + 2331)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[85] * kernel_shared[((((int)threadIdx.x) * 36) + 28)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[85] * kernel_shared[((((int)threadIdx.x) * 36) + 2332)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[86] * kernel_shared[((((int)threadIdx.x) * 36) + 29)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[86] * kernel_shared[((((int)threadIdx.x) * 36) + 2333)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[6] * kernel_shared[(((int)threadIdx.x) * 36)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[6] * kernel_shared[((((int)threadIdx.x) * 36) + 2304)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[7] * kernel_shared[((((int)threadIdx.x) * 36) + 1)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[7] * kernel_shared[((((int)threadIdx.x) * 36) + 2305)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[8] * kernel_shared[((((int)threadIdx.x) * 36) + 2)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[8] * kernel_shared[((((int)threadIdx.x) * 36) + 2306)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[33] * kernel_shared[((((int)threadIdx.x) * 36) + 9)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[33] * kernel_shared[((((int)threadIdx.x) * 36) + 2313)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[34] * kernel_shared[((((int)threadIdx.x) * 36) + 10)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[34] * kernel_shared[((((int)threadIdx.x) * 36) + 2314)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[35] * kernel_shared[((((int)threadIdx.x) * 36) + 11)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[35] * kernel_shared[((((int)threadIdx.x) * 36) + 2315)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[60] * kernel_shared[((((int)threadIdx.x) * 36) + 18)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[60] * kernel_shared[((((int)threadIdx.x) * 36) + 2322)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[61] * kernel_shared[((((int)threadIdx.x) * 36) + 19)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[61] * kernel_shared[((((int)threadIdx.x) * 36) + 2323)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[62] * kernel_shared[((((int)threadIdx.x) * 36) + 20)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[62] * kernel_shared[((((int)threadIdx.x) * 36) + 2324)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[87] * kernel_shared[((((int)threadIdx.x) * 36) + 27)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[87] * kernel_shared[((((int)threadIdx.x) * 36) + 2331)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[88] * kernel_shared[((((int)threadIdx.x) * 36) + 28)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[88] * kernel_shared[((((int)threadIdx.x) * 36) + 2332)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[89] * kernel_shared[((((int)threadIdx.x) * 36) + 29)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[89] * kernel_shared[((((int)threadIdx.x) * 36) + 2333)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[9] * kernel_shared[(((int)threadIdx.x) * 36)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[9] * kernel_shared[((((int)threadIdx.x) * 36) + 2304)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[10] * kernel_shared[((((int)threadIdx.x) * 36) + 1)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[10] * kernel_shared[((((int)threadIdx.x) * 36) + 2305)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[11] * kernel_shared[((((int)threadIdx.x) * 36) + 2)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[11] * kernel_shared[((((int)threadIdx.x) * 36) + 2306)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[36] * kernel_shared[((((int)threadIdx.x) * 36) + 9)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[36] * kernel_shared[((((int)threadIdx.x) * 36) + 2313)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[37] * kernel_shared[((((int)threadIdx.x) * 36) + 10)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[37] * kernel_shared[((((int)threadIdx.x) * 36) + 2314)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[38] * kernel_shared[((((int)threadIdx.x) * 36) + 11)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[38] * kernel_shared[((((int)threadIdx.x) * 36) + 2315)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[63] * kernel_shared[((((int)threadIdx.x) * 36) + 18)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[63] * kernel_shared[((((int)threadIdx.x) * 36) + 2322)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[64] * kernel_shared[((((int)threadIdx.x) * 36) + 19)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[64] * kernel_shared[((((int)threadIdx.x) * 36) + 2323)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[65] * kernel_shared[((((int)threadIdx.x) * 36) + 20)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[65] * kernel_shared[((((int)threadIdx.x) * 36) + 2324)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[90] * kernel_shared[((((int)threadIdx.x) * 36) + 27)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[90] * kernel_shared[((((int)threadIdx.x) * 36) + 2331)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[91] * kernel_shared[((((int)threadIdx.x) * 36) + 28)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[91] * kernel_shared[((((int)threadIdx.x) * 36) + 2332)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[92] * kernel_shared[((((int)threadIdx.x) * 36) + 29)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[92] * kernel_shared[((((int)threadIdx.x) * 36) + 2333)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[12] * kernel_shared[(((int)threadIdx.x) * 36)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[12] * kernel_shared[((((int)threadIdx.x) * 36) + 2304)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[13] * kernel_shared[((((int)threadIdx.x) * 36) + 1)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[13] * kernel_shared[((((int)threadIdx.x) * 36) + 2305)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[14] * kernel_shared[((((int)threadIdx.x) * 36) + 2)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[14] * kernel_shared[((((int)threadIdx.x) * 36) + 2306)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[39] * kernel_shared[((((int)threadIdx.x) * 36) + 9)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[39] * kernel_shared[((((int)threadIdx.x) * 36) + 2313)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[40] * kernel_shared[((((int)threadIdx.x) * 36) + 10)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[40] * kernel_shared[((((int)threadIdx.x) * 36) + 2314)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[41] * kernel_shared[((((int)threadIdx.x) * 36) + 11)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[41] * kernel_shared[((((int)threadIdx.x) * 36) + 2315)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[66] * kernel_shared[((((int)threadIdx.x) * 36) + 18)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[66] * kernel_shared[((((int)threadIdx.x) * 36) + 2322)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[67] * kernel_shared[((((int)threadIdx.x) * 36) + 19)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[67] * kernel_shared[((((int)threadIdx.x) * 36) + 2323)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[68] * kernel_shared[((((int)threadIdx.x) * 36) + 20)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[68] * kernel_shared[((((int)threadIdx.x) * 36) + 2324)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[93] * kernel_shared[((((int)threadIdx.x) * 36) + 27)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[93] * kernel_shared[((((int)threadIdx.x) * 36) + 2331)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[94] * kernel_shared[((((int)threadIdx.x) * 36) + 28)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[94] * kernel_shared[((((int)threadIdx.x) * 36) + 2332)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[95] * kernel_shared[((((int)threadIdx.x) * 36) + 29)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[95] * kernel_shared[((((int)threadIdx.x) * 36) + 2333)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[15] * kernel_shared[(((int)threadIdx.x) * 36)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[15] * kernel_shared[((((int)threadIdx.x) * 36) + 2304)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[16] * kernel_shared[((((int)threadIdx.x) * 36) + 1)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[16] * kernel_shared[((((int)threadIdx.x) * 36) + 2305)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[17] * kernel_shared[((((int)threadIdx.x) * 36) + 2)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[17] * kernel_shared[((((int)threadIdx.x) * 36) + 2306)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[42] * kernel_shared[((((int)threadIdx.x) * 36) + 9)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[42] * kernel_shared[((((int)threadIdx.x) * 36) + 2313)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[43] * kernel_shared[((((int)threadIdx.x) * 36) + 10)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[43] * kernel_shared[((((int)threadIdx.x) * 36) + 2314)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[44] * kernel_shared[((((int)threadIdx.x) * 36) + 11)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[44] * kernel_shared[((((int)threadIdx.x) * 36) + 2315)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[69] * kernel_shared[((((int)threadIdx.x) * 36) + 18)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[69] * kernel_shared[((((int)threadIdx.x) * 36) + 2322)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[70] * kernel_shared[((((int)threadIdx.x) * 36) + 19)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[70] * kernel_shared[((((int)threadIdx.x) * 36) + 2323)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[71] * kernel_shared[((((int)threadIdx.x) * 36) + 20)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[71] * kernel_shared[((((int)threadIdx.x) * 36) + 2324)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[96] * kernel_shared[((((int)threadIdx.x) * 36) + 27)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[96] * kernel_shared[((((int)threadIdx.x) * 36) + 2331)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[97] * kernel_shared[((((int)threadIdx.x) * 36) + 28)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[97] * kernel_shared[((((int)threadIdx.x) * 36) + 2332)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[98] * kernel_shared[((((int)threadIdx.x) * 36) + 29)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[98] * kernel_shared[((((int)threadIdx.x) * 36) + 2333)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[18] * kernel_shared[(((int)threadIdx.x) * 36)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[18] * kernel_shared[((((int)threadIdx.x) * 36) + 2304)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[19] * kernel_shared[((((int)threadIdx.x) * 36) + 1)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[19] * kernel_shared[((((int)threadIdx.x) * 36) + 2305)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[20] * kernel_shared[((((int)threadIdx.x) * 36) + 2)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[20] * kernel_shared[((((int)threadIdx.x) * 36) + 2306)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[45] * kernel_shared[((((int)threadIdx.x) * 36) + 9)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[45] * kernel_shared[((((int)threadIdx.x) * 36) + 2313)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[46] * kernel_shared[((((int)threadIdx.x) * 36) + 10)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[46] * kernel_shared[((((int)threadIdx.x) * 36) + 2314)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[47] * kernel_shared[((((int)threadIdx.x) * 36) + 11)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[47] * kernel_shared[((((int)threadIdx.x) * 36) + 2315)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[72] * kernel_shared[((((int)threadIdx.x) * 36) + 18)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[72] * kernel_shared[((((int)threadIdx.x) * 36) + 2322)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[73] * kernel_shared[((((int)threadIdx.x) * 36) + 19)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[73] * kernel_shared[((((int)threadIdx.x) * 36) + 2323)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[74] * kernel_shared[((((int)threadIdx.x) * 36) + 20)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[74] * kernel_shared[((((int)threadIdx.x) * 36) + 2324)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[99] * kernel_shared[((((int)threadIdx.x) * 36) + 27)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[99] * kernel_shared[((((int)threadIdx.x) * 36) + 2331)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[100] * kernel_shared[((((int)threadIdx.x) * 36) + 28)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[100] * kernel_shared[((((int)threadIdx.x) * 36) + 2332)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[101] * kernel_shared[((((int)threadIdx.x) * 36) + 29)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[101] * kernel_shared[((((int)threadIdx.x) * 36) + 2333)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[3] * kernel_shared[((((int)threadIdx.x) * 36) + 3)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[3] * kernel_shared[((((int)threadIdx.x) * 36) + 2307)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[4] * kernel_shared[((((int)threadIdx.x) * 36) + 4)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[4] * kernel_shared[((((int)threadIdx.x) * 36) + 2308)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[5] * kernel_shared[((((int)threadIdx.x) * 36) + 5)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[5] * kernel_shared[((((int)threadIdx.x) * 36) + 2309)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[30] * kernel_shared[((((int)threadIdx.x) * 36) + 12)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[30] * kernel_shared[((((int)threadIdx.x) * 36) + 2316)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[31] * kernel_shared[((((int)threadIdx.x) * 36) + 13)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[31] * kernel_shared[((((int)threadIdx.x) * 36) + 2317)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[32] * kernel_shared[((((int)threadIdx.x) * 36) + 14)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[32] * kernel_shared[((((int)threadIdx.x) * 36) + 2318)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[57] * kernel_shared[((((int)threadIdx.x) * 36) + 21)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[57] * kernel_shared[((((int)threadIdx.x) * 36) + 2325)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[58] * kernel_shared[((((int)threadIdx.x) * 36) + 22)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[58] * kernel_shared[((((int)threadIdx.x) * 36) + 2326)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[59] * kernel_shared[((((int)threadIdx.x) * 36) + 23)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[59] * kernel_shared[((((int)threadIdx.x) * 36) + 2327)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[84] * kernel_shared[((((int)threadIdx.x) * 36) + 30)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[84] * kernel_shared[((((int)threadIdx.x) * 36) + 2334)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[85] * kernel_shared[((((int)threadIdx.x) * 36) + 31)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[85] * kernel_shared[((((int)threadIdx.x) * 36) + 2335)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[86] * kernel_shared[((((int)threadIdx.x) * 36) + 32)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[86] * kernel_shared[((((int)threadIdx.x) * 36) + 2336)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[6] * kernel_shared[((((int)threadIdx.x) * 36) + 3)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[6] * kernel_shared[((((int)threadIdx.x) * 36) + 2307)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[7] * kernel_shared[((((int)threadIdx.x) * 36) + 4)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[7] * kernel_shared[((((int)threadIdx.x) * 36) + 2308)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[8] * kernel_shared[((((int)threadIdx.x) * 36) + 5)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[8] * kernel_shared[((((int)threadIdx.x) * 36) + 2309)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[33] * kernel_shared[((((int)threadIdx.x) * 36) + 12)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[33] * kernel_shared[((((int)threadIdx.x) * 36) + 2316)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[34] * kernel_shared[((((int)threadIdx.x) * 36) + 13)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[34] * kernel_shared[((((int)threadIdx.x) * 36) + 2317)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[35] * kernel_shared[((((int)threadIdx.x) * 36) + 14)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[35] * kernel_shared[((((int)threadIdx.x) * 36) + 2318)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[60] * kernel_shared[((((int)threadIdx.x) * 36) + 21)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[60] * kernel_shared[((((int)threadIdx.x) * 36) + 2325)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[61] * kernel_shared[((((int)threadIdx.x) * 36) + 22)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[61] * kernel_shared[((((int)threadIdx.x) * 36) + 2326)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[62] * kernel_shared[((((int)threadIdx.x) * 36) + 23)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[62] * kernel_shared[((((int)threadIdx.x) * 36) + 2327)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[87] * kernel_shared[((((int)threadIdx.x) * 36) + 30)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[87] * kernel_shared[((((int)threadIdx.x) * 36) + 2334)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[88] * kernel_shared[((((int)threadIdx.x) * 36) + 31)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[88] * kernel_shared[((((int)threadIdx.x) * 36) + 2335)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[89] * kernel_shared[((((int)threadIdx.x) * 36) + 32)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[89] * kernel_shared[((((int)threadIdx.x) * 36) + 2336)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[9] * kernel_shared[((((int)threadIdx.x) * 36) + 3)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[9] * kernel_shared[((((int)threadIdx.x) * 36) + 2307)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[10] * kernel_shared[((((int)threadIdx.x) * 36) + 4)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[10] * kernel_shared[((((int)threadIdx.x) * 36) + 2308)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[11] * kernel_shared[((((int)threadIdx.x) * 36) + 5)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[11] * kernel_shared[((((int)threadIdx.x) * 36) + 2309)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[36] * kernel_shared[((((int)threadIdx.x) * 36) + 12)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[36] * kernel_shared[((((int)threadIdx.x) * 36) + 2316)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[37] * kernel_shared[((((int)threadIdx.x) * 36) + 13)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[37] * kernel_shared[((((int)threadIdx.x) * 36) + 2317)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[38] * kernel_shared[((((int)threadIdx.x) * 36) + 14)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[38] * kernel_shared[((((int)threadIdx.x) * 36) + 2318)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[63] * kernel_shared[((((int)threadIdx.x) * 36) + 21)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[63] * kernel_shared[((((int)threadIdx.x) * 36) + 2325)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[64] * kernel_shared[((((int)threadIdx.x) * 36) + 22)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[64] * kernel_shared[((((int)threadIdx.x) * 36) + 2326)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[65] * kernel_shared[((((int)threadIdx.x) * 36) + 23)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[65] * kernel_shared[((((int)threadIdx.x) * 36) + 2327)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[90] * kernel_shared[((((int)threadIdx.x) * 36) + 30)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[90] * kernel_shared[((((int)threadIdx.x) * 36) + 2334)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[91] * kernel_shared[((((int)threadIdx.x) * 36) + 31)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[91] * kernel_shared[((((int)threadIdx.x) * 36) + 2335)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[92] * kernel_shared[((((int)threadIdx.x) * 36) + 32)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[92] * kernel_shared[((((int)threadIdx.x) * 36) + 2336)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[12] * kernel_shared[((((int)threadIdx.x) * 36) + 3)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[12] * kernel_shared[((((int)threadIdx.x) * 36) + 2307)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[13] * kernel_shared[((((int)threadIdx.x) * 36) + 4)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[13] * kernel_shared[((((int)threadIdx.x) * 36) + 2308)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[14] * kernel_shared[((((int)threadIdx.x) * 36) + 5)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[14] * kernel_shared[((((int)threadIdx.x) * 36) + 2309)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[39] * kernel_shared[((((int)threadIdx.x) * 36) + 12)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[39] * kernel_shared[((((int)threadIdx.x) * 36) + 2316)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[40] * kernel_shared[((((int)threadIdx.x) * 36) + 13)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[40] * kernel_shared[((((int)threadIdx.x) * 36) + 2317)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[41] * kernel_shared[((((int)threadIdx.x) * 36) + 14)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[41] * kernel_shared[((((int)threadIdx.x) * 36) + 2318)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[66] * kernel_shared[((((int)threadIdx.x) * 36) + 21)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[66] * kernel_shared[((((int)threadIdx.x) * 36) + 2325)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[67] * kernel_shared[((((int)threadIdx.x) * 36) + 22)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[67] * kernel_shared[((((int)threadIdx.x) * 36) + 2326)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[68] * kernel_shared[((((int)threadIdx.x) * 36) + 23)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[68] * kernel_shared[((((int)threadIdx.x) * 36) + 2327)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[93] * kernel_shared[((((int)threadIdx.x) * 36) + 30)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[93] * kernel_shared[((((int)threadIdx.x) * 36) + 2334)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[94] * kernel_shared[((((int)threadIdx.x) * 36) + 31)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[94] * kernel_shared[((((int)threadIdx.x) * 36) + 2335)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[95] * kernel_shared[((((int)threadIdx.x) * 36) + 32)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[95] * kernel_shared[((((int)threadIdx.x) * 36) + 2336)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[15] * kernel_shared[((((int)threadIdx.x) * 36) + 3)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[15] * kernel_shared[((((int)threadIdx.x) * 36) + 2307)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[16] * kernel_shared[((((int)threadIdx.x) * 36) + 4)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[16] * kernel_shared[((((int)threadIdx.x) * 36) + 2308)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[17] * kernel_shared[((((int)threadIdx.x) * 36) + 5)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[17] * kernel_shared[((((int)threadIdx.x) * 36) + 2309)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[42] * kernel_shared[((((int)threadIdx.x) * 36) + 12)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[42] * kernel_shared[((((int)threadIdx.x) * 36) + 2316)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[43] * kernel_shared[((((int)threadIdx.x) * 36) + 13)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[43] * kernel_shared[((((int)threadIdx.x) * 36) + 2317)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[44] * kernel_shared[((((int)threadIdx.x) * 36) + 14)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[44] * kernel_shared[((((int)threadIdx.x) * 36) + 2318)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[69] * kernel_shared[((((int)threadIdx.x) * 36) + 21)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[69] * kernel_shared[((((int)threadIdx.x) * 36) + 2325)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[70] * kernel_shared[((((int)threadIdx.x) * 36) + 22)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[70] * kernel_shared[((((int)threadIdx.x) * 36) + 2326)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[71] * kernel_shared[((((int)threadIdx.x) * 36) + 23)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[71] * kernel_shared[((((int)threadIdx.x) * 36) + 2327)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[96] * kernel_shared[((((int)threadIdx.x) * 36) + 30)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[96] * kernel_shared[((((int)threadIdx.x) * 36) + 2334)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[97] * kernel_shared[((((int)threadIdx.x) * 36) + 31)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[97] * kernel_shared[((((int)threadIdx.x) * 36) + 2335)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[98] * kernel_shared[((((int)threadIdx.x) * 36) + 32)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[98] * kernel_shared[((((int)threadIdx.x) * 36) + 2336)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[18] * kernel_shared[((((int)threadIdx.x) * 36) + 3)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[18] * kernel_shared[((((int)threadIdx.x) * 36) + 2307)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[19] * kernel_shared[((((int)threadIdx.x) * 36) + 4)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[19] * kernel_shared[((((int)threadIdx.x) * 36) + 2308)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[20] * kernel_shared[((((int)threadIdx.x) * 36) + 5)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[20] * kernel_shared[((((int)threadIdx.x) * 36) + 2309)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[45] * kernel_shared[((((int)threadIdx.x) * 36) + 12)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[45] * kernel_shared[((((int)threadIdx.x) * 36) + 2316)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[46] * kernel_shared[((((int)threadIdx.x) * 36) + 13)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[46] * kernel_shared[((((int)threadIdx.x) * 36) + 2317)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[47] * kernel_shared[((((int)threadIdx.x) * 36) + 14)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[47] * kernel_shared[((((int)threadIdx.x) * 36) + 2318)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[72] * kernel_shared[((((int)threadIdx.x) * 36) + 21)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[72] * kernel_shared[((((int)threadIdx.x) * 36) + 2325)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[73] * kernel_shared[((((int)threadIdx.x) * 36) + 22)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[73] * kernel_shared[((((int)threadIdx.x) * 36) + 2326)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[74] * kernel_shared[((((int)threadIdx.x) * 36) + 23)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[74] * kernel_shared[((((int)threadIdx.x) * 36) + 2327)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[99] * kernel_shared[((((int)threadIdx.x) * 36) + 30)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[99] * kernel_shared[((((int)threadIdx.x) * 36) + 2334)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[100] * kernel_shared[((((int)threadIdx.x) * 36) + 31)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[100] * kernel_shared[((((int)threadIdx.x) * 36) + 2335)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[101] * kernel_shared[((((int)threadIdx.x) * 36) + 32)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[101] * kernel_shared[((((int)threadIdx.x) * 36) + 2336)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[21] * kernel_shared[((((int)threadIdx.x) * 36) + 3)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[21] * kernel_shared[((((int)threadIdx.x) * 36) + 2307)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[22] * kernel_shared[((((int)threadIdx.x) * 36) + 4)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[22] * kernel_shared[((((int)threadIdx.x) * 36) + 2308)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[23] * kernel_shared[((((int)threadIdx.x) * 36) + 5)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[23] * kernel_shared[((((int)threadIdx.x) * 36) + 2309)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[48] * kernel_shared[((((int)threadIdx.x) * 36) + 12)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[48] * kernel_shared[((((int)threadIdx.x) * 36) + 2316)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[49] * kernel_shared[((((int)threadIdx.x) * 36) + 13)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[49] * kernel_shared[((((int)threadIdx.x) * 36) + 2317)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[50] * kernel_shared[((((int)threadIdx.x) * 36) + 14)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[50] * kernel_shared[((((int)threadIdx.x) * 36) + 2318)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[75] * kernel_shared[((((int)threadIdx.x) * 36) + 21)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[75] * kernel_shared[((((int)threadIdx.x) * 36) + 2325)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[76] * kernel_shared[((((int)threadIdx.x) * 36) + 22)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[76] * kernel_shared[((((int)threadIdx.x) * 36) + 2326)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[77] * kernel_shared[((((int)threadIdx.x) * 36) + 23)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[77] * kernel_shared[((((int)threadIdx.x) * 36) + 2327)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[102] * kernel_shared[((((int)threadIdx.x) * 36) + 30)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[102] * kernel_shared[((((int)threadIdx.x) * 36) + 2334)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[103] * kernel_shared[((((int)threadIdx.x) * 36) + 31)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[103] * kernel_shared[((((int)threadIdx.x) * 36) + 2335)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[104] * kernel_shared[((((int)threadIdx.x) * 36) + 32)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[104] * kernel_shared[((((int)threadIdx.x) * 36) + 2336)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[6] * kernel_shared[((((int)threadIdx.x) * 36) + 6)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[6] * kernel_shared[((((int)threadIdx.x) * 36) + 2310)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[7] * kernel_shared[((((int)threadIdx.x) * 36) + 7)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[7] * kernel_shared[((((int)threadIdx.x) * 36) + 2311)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[8] * kernel_shared[((((int)threadIdx.x) * 36) + 8)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[8] * kernel_shared[((((int)threadIdx.x) * 36) + 2312)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[33] * kernel_shared[((((int)threadIdx.x) * 36) + 15)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[33] * kernel_shared[((((int)threadIdx.x) * 36) + 2319)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[34] * kernel_shared[((((int)threadIdx.x) * 36) + 16)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[34] * kernel_shared[((((int)threadIdx.x) * 36) + 2320)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[35] * kernel_shared[((((int)threadIdx.x) * 36) + 17)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[35] * kernel_shared[((((int)threadIdx.x) * 36) + 2321)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[60] * kernel_shared[((((int)threadIdx.x) * 36) + 24)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[60] * kernel_shared[((((int)threadIdx.x) * 36) + 2328)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[61] * kernel_shared[((((int)threadIdx.x) * 36) + 25)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[61] * kernel_shared[((((int)threadIdx.x) * 36) + 2329)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[62] * kernel_shared[((((int)threadIdx.x) * 36) + 26)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[62] * kernel_shared[((((int)threadIdx.x) * 36) + 2330)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[87] * kernel_shared[((((int)threadIdx.x) * 36) + 33)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[87] * kernel_shared[((((int)threadIdx.x) * 36) + 2337)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[88] * kernel_shared[((((int)threadIdx.x) * 36) + 34)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[88] * kernel_shared[((((int)threadIdx.x) * 36) + 2338)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[89] * kernel_shared[((((int)threadIdx.x) * 36) + 35)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[89] * kernel_shared[((((int)threadIdx.x) * 36) + 2339)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[9] * kernel_shared[((((int)threadIdx.x) * 36) + 6)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[9] * kernel_shared[((((int)threadIdx.x) * 36) + 2310)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[10] * kernel_shared[((((int)threadIdx.x) * 36) + 7)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[10] * kernel_shared[((((int)threadIdx.x) * 36) + 2311)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[11] * kernel_shared[((((int)threadIdx.x) * 36) + 8)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[11] * kernel_shared[((((int)threadIdx.x) * 36) + 2312)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[36] * kernel_shared[((((int)threadIdx.x) * 36) + 15)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[36] * kernel_shared[((((int)threadIdx.x) * 36) + 2319)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[37] * kernel_shared[((((int)threadIdx.x) * 36) + 16)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[37] * kernel_shared[((((int)threadIdx.x) * 36) + 2320)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[38] * kernel_shared[((((int)threadIdx.x) * 36) + 17)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[38] * kernel_shared[((((int)threadIdx.x) * 36) + 2321)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[63] * kernel_shared[((((int)threadIdx.x) * 36) + 24)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[63] * kernel_shared[((((int)threadIdx.x) * 36) + 2328)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[64] * kernel_shared[((((int)threadIdx.x) * 36) + 25)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[64] * kernel_shared[((((int)threadIdx.x) * 36) + 2329)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[65] * kernel_shared[((((int)threadIdx.x) * 36) + 26)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[65] * kernel_shared[((((int)threadIdx.x) * 36) + 2330)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[90] * kernel_shared[((((int)threadIdx.x) * 36) + 33)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[90] * kernel_shared[((((int)threadIdx.x) * 36) + 2337)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[91] * kernel_shared[((((int)threadIdx.x) * 36) + 34)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[91] * kernel_shared[((((int)threadIdx.x) * 36) + 2338)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[92] * kernel_shared[((((int)threadIdx.x) * 36) + 35)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[92] * kernel_shared[((((int)threadIdx.x) * 36) + 2339)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[12] * kernel_shared[((((int)threadIdx.x) * 36) + 6)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[12] * kernel_shared[((((int)threadIdx.x) * 36) + 2310)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[13] * kernel_shared[((((int)threadIdx.x) * 36) + 7)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[13] * kernel_shared[((((int)threadIdx.x) * 36) + 2311)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[14] * kernel_shared[((((int)threadIdx.x) * 36) + 8)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[14] * kernel_shared[((((int)threadIdx.x) * 36) + 2312)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[39] * kernel_shared[((((int)threadIdx.x) * 36) + 15)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[39] * kernel_shared[((((int)threadIdx.x) * 36) + 2319)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[40] * kernel_shared[((((int)threadIdx.x) * 36) + 16)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[40] * kernel_shared[((((int)threadIdx.x) * 36) + 2320)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[41] * kernel_shared[((((int)threadIdx.x) * 36) + 17)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[41] * kernel_shared[((((int)threadIdx.x) * 36) + 2321)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[66] * kernel_shared[((((int)threadIdx.x) * 36) + 24)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[66] * kernel_shared[((((int)threadIdx.x) * 36) + 2328)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[67] * kernel_shared[((((int)threadIdx.x) * 36) + 25)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[67] * kernel_shared[((((int)threadIdx.x) * 36) + 2329)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[68] * kernel_shared[((((int)threadIdx.x) * 36) + 26)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[68] * kernel_shared[((((int)threadIdx.x) * 36) + 2330)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[93] * kernel_shared[((((int)threadIdx.x) * 36) + 33)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[93] * kernel_shared[((((int)threadIdx.x) * 36) + 2337)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[94] * kernel_shared[((((int)threadIdx.x) * 36) + 34)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[94] * kernel_shared[((((int)threadIdx.x) * 36) + 2338)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[95] * kernel_shared[((((int)threadIdx.x) * 36) + 35)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[95] * kernel_shared[((((int)threadIdx.x) * 36) + 2339)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[15] * kernel_shared[((((int)threadIdx.x) * 36) + 6)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[15] * kernel_shared[((((int)threadIdx.x) * 36) + 2310)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[16] * kernel_shared[((((int)threadIdx.x) * 36) + 7)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[16] * kernel_shared[((((int)threadIdx.x) * 36) + 2311)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[17] * kernel_shared[((((int)threadIdx.x) * 36) + 8)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[17] * kernel_shared[((((int)threadIdx.x) * 36) + 2312)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[42] * kernel_shared[((((int)threadIdx.x) * 36) + 15)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[42] * kernel_shared[((((int)threadIdx.x) * 36) + 2319)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[43] * kernel_shared[((((int)threadIdx.x) * 36) + 16)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[43] * kernel_shared[((((int)threadIdx.x) * 36) + 2320)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[44] * kernel_shared[((((int)threadIdx.x) * 36) + 17)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[44] * kernel_shared[((((int)threadIdx.x) * 36) + 2321)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[69] * kernel_shared[((((int)threadIdx.x) * 36) + 24)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[69] * kernel_shared[((((int)threadIdx.x) * 36) + 2328)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[70] * kernel_shared[((((int)threadIdx.x) * 36) + 25)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[70] * kernel_shared[((((int)threadIdx.x) * 36) + 2329)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[71] * kernel_shared[((((int)threadIdx.x) * 36) + 26)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[71] * kernel_shared[((((int)threadIdx.x) * 36) + 2330)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[96] * kernel_shared[((((int)threadIdx.x) * 36) + 33)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[96] * kernel_shared[((((int)threadIdx.x) * 36) + 2337)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[97] * kernel_shared[((((int)threadIdx.x) * 36) + 34)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[97] * kernel_shared[((((int)threadIdx.x) * 36) + 2338)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[98] * kernel_shared[((((int)threadIdx.x) * 36) + 35)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[98] * kernel_shared[((((int)threadIdx.x) * 36) + 2339)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[18] * kernel_shared[((((int)threadIdx.x) * 36) + 6)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[18] * kernel_shared[((((int)threadIdx.x) * 36) + 2310)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[19] * kernel_shared[((((int)threadIdx.x) * 36) + 7)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[19] * kernel_shared[((((int)threadIdx.x) * 36) + 2311)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[20] * kernel_shared[((((int)threadIdx.x) * 36) + 8)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[20] * kernel_shared[((((int)threadIdx.x) * 36) + 2312)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[45] * kernel_shared[((((int)threadIdx.x) * 36) + 15)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[45] * kernel_shared[((((int)threadIdx.x) * 36) + 2319)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[46] * kernel_shared[((((int)threadIdx.x) * 36) + 16)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[46] * kernel_shared[((((int)threadIdx.x) * 36) + 2320)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[47] * kernel_shared[((((int)threadIdx.x) * 36) + 17)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[47] * kernel_shared[((((int)threadIdx.x) * 36) + 2321)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[72] * kernel_shared[((((int)threadIdx.x) * 36) + 24)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[72] * kernel_shared[((((int)threadIdx.x) * 36) + 2328)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[73] * kernel_shared[((((int)threadIdx.x) * 36) + 25)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[73] * kernel_shared[((((int)threadIdx.x) * 36) + 2329)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[74] * kernel_shared[((((int)threadIdx.x) * 36) + 26)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[74] * kernel_shared[((((int)threadIdx.x) * 36) + 2330)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[99] * kernel_shared[((((int)threadIdx.x) * 36) + 33)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[99] * kernel_shared[((((int)threadIdx.x) * 36) + 2337)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[100] * kernel_shared[((((int)threadIdx.x) * 36) + 34)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[100] * kernel_shared[((((int)threadIdx.x) * 36) + 2338)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[101] * kernel_shared[((((int)threadIdx.x) * 36) + 35)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[101] * kernel_shared[((((int)threadIdx.x) * 36) + 2339)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[21] * kernel_shared[((((int)threadIdx.x) * 36) + 6)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[21] * kernel_shared[((((int)threadIdx.x) * 36) + 2310)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[22] * kernel_shared[((((int)threadIdx.x) * 36) + 7)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[22] * kernel_shared[((((int)threadIdx.x) * 36) + 2311)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[23] * kernel_shared[((((int)threadIdx.x) * 36) + 8)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[23] * kernel_shared[((((int)threadIdx.x) * 36) + 2312)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[48] * kernel_shared[((((int)threadIdx.x) * 36) + 15)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[48] * kernel_shared[((((int)threadIdx.x) * 36) + 2319)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[49] * kernel_shared[((((int)threadIdx.x) * 36) + 16)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[49] * kernel_shared[((((int)threadIdx.x) * 36) + 2320)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[50] * kernel_shared[((((int)threadIdx.x) * 36) + 17)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[50] * kernel_shared[((((int)threadIdx.x) * 36) + 2321)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[75] * kernel_shared[((((int)threadIdx.x) * 36) + 24)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[75] * kernel_shared[((((int)threadIdx.x) * 36) + 2328)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[76] * kernel_shared[((((int)threadIdx.x) * 36) + 25)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[76] * kernel_shared[((((int)threadIdx.x) * 36) + 2329)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[77] * kernel_shared[((((int)threadIdx.x) * 36) + 26)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[77] * kernel_shared[((((int)threadIdx.x) * 36) + 2330)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[102] * kernel_shared[((((int)threadIdx.x) * 36) + 33)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[102] * kernel_shared[((((int)threadIdx.x) * 36) + 2337)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[103] * kernel_shared[((((int)threadIdx.x) * 36) + 34)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[103] * kernel_shared[((((int)threadIdx.x) * 36) + 2338)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[104] * kernel_shared[((((int)threadIdx.x) * 36) + 35)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[104] * kernel_shared[((((int)threadIdx.x) * 36) + 2339)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[24] * kernel_shared[((((int)threadIdx.x) * 36) + 6)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[24] * kernel_shared[((((int)threadIdx.x) * 36) + 2310)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[25] * kernel_shared[((((int)threadIdx.x) * 36) + 7)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[25] * kernel_shared[((((int)threadIdx.x) * 36) + 2311)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[26] * kernel_shared[((((int)threadIdx.x) * 36) + 8)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[26] * kernel_shared[((((int)threadIdx.x) * 36) + 2312)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[51] * kernel_shared[((((int)threadIdx.x) * 36) + 15)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[51] * kernel_shared[((((int)threadIdx.x) * 36) + 2319)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[52] * kernel_shared[((((int)threadIdx.x) * 36) + 16)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[52] * kernel_shared[((((int)threadIdx.x) * 36) + 2320)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[53] * kernel_shared[((((int)threadIdx.x) * 36) + 17)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[53] * kernel_shared[((((int)threadIdx.x) * 36) + 2321)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[78] * kernel_shared[((((int)threadIdx.x) * 36) + 24)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[78] * kernel_shared[((((int)threadIdx.x) * 36) + 2328)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[79] * kernel_shared[((((int)threadIdx.x) * 36) + 25)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[79] * kernel_shared[((((int)threadIdx.x) * 36) + 2329)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[80] * kernel_shared[((((int)threadIdx.x) * 36) + 26)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[80] * kernel_shared[((((int)threadIdx.x) * 36) + 2330)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[105] * kernel_shared[((((int)threadIdx.x) * 36) + 33)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[105] * kernel_shared[((((int)threadIdx.x) * 36) + 2337)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[106] * kernel_shared[((((int)threadIdx.x) * 36) + 34)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[106] * kernel_shared[((((int)threadIdx.x) * 36) + 2338)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[107] * kernel_shared[((((int)threadIdx.x) * 36) + 35)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[107] * kernel_shared[((((int)threadIdx.x) * 36) + 2339)]));
      }
      for (int i2_inner = 0; i2_inner < 7; ++i2_inner) {
        compute[(((((((int)blockIdx.x) / 7) * 6272) + (((int)threadIdx.x) * 49)) + (i2_inner * 7)) + (((int)blockIdx.x) % 7))] = max((conv2d_nchw[i2_inner] + bias[(((((int)blockIdx.x) / 7) * 128) + ((int)threadIdx.x))]), 0.000000e+00f);
        compute[((((((((int)blockIdx.x) / 7) * 6272) + (((int)threadIdx.x) * 49)) + (i2_inner * 7)) + (((int)blockIdx.x) % 7)) + 3136)] = max((conv2d_nchw[(i2_inner + 7)] + bias[((((((int)blockIdx.x) / 7) * 128) + ((int)threadIdx.x)) + 64)]), 0.000000e+00f);
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 190-194

A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.

.. GENERATED FROM PYTHON SOURCE LINES 194-216

.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Resume search:
    /venv/apache-tvm-py3.7/lib/python3.7/site-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 4 minutes  51.628 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
