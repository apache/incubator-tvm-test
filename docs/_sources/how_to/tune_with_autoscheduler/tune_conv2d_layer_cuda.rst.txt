
.. DO NOT EDIT. THIS FILE WAS AUTOMATICALLY GENERATED BY
.. TVM'S MONKEY-PATCHED VERSION OF SPHINX-GALLERY. TO MAKE
.. CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.py"

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        This tutorial can be used interactively with Google Colab! You can also click
        :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>` to run the Jupyter notebook locally.

        .. image:: https://raw.githubusercontent.com/tlc-pack/web-data/main/images/utilities/colab_button.svg
            :align: center
            :target: https://colab.research.google.com/github/apache/tvm-site/blob/asf-site/docs/_downloads/5f1f7bd7d90710fd404f7bcdc4965622/tune_conv2d_layer_cuda.ipynb
            :width: 300px

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.

.. GENERATED FROM PYTHON SOURCE LINES 39-47

.. code-block:: default


    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python








.. GENERATED FROM PYTHON SOURCE LINES 51-56

Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.

.. GENERATED FROM PYTHON SOURCE LINES 56-68

.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]









.. GENERATED FROM PYTHON SOURCE LINES 69-72

Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.

.. GENERATED FROM PYTHON SOURCE LINES 72-85

.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)





.. GENERATED FROM PYTHON SOURCE LINES 86-103

Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.

.. GENERATED FROM PYTHON SOURCE LINES 103-113

.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Get devices for measurement successfully!




.. GENERATED FROM PYTHON SOURCE LINES 114-120

Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.

.. GENERATED FROM PYTHON SOURCE LINES 120-129

.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx








.. GENERATED FROM PYTHON SOURCE LINES 130-133

We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.

.. GENERATED FROM PYTHON SOURCE LINES 133-137

.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Lowered TIR:
    # from tvm.script import ir as I
    # from tvm.script import tir as T

    @I.ir_module
    class Module:
        @T.prim_func
        def main(data: T.Buffer((1, 512, 7, 7), "float32"), kernel: T.Buffer((512, 512, 3, 3), "float32"), bias: T.Buffer((1, 512, 1, 1), "float32"), compute: T.Buffer((1, 512, 7, 7), "float32")):
            T.func_attr({"from_legacy_te_schedule": T.bool(True), "global_symbol": "main", "tir.noalias": T.bool(True)})
            blockIdx_x = T.launch_thread("blockIdx.x", 112)
            conv2d_nchw = T.allocate([7], "float32", "local")
            pad_temp_shared = T.allocate([576], "float32", "shared")
            kernel_shared = T.allocate([6144], "float32", "shared")
            threadIdx_x = T.launch_thread("threadIdx.x", 32)
            conv2d_nchw_1 = T.Buffer((7,), data=conv2d_nchw, scope="local", align=16)
            conv2d_nchw_1[0] = T.float32(0)
            conv2d_nchw_1[1] = T.float32(0)
            conv2d_nchw_1[2] = T.float32(0)
            conv2d_nchw_1[3] = T.float32(0)
            conv2d_nchw_1[4] = T.float32(0)
            conv2d_nchw_1[5] = T.float32(0)
            conv2d_nchw_1[6] = T.float32(0)
            for rc_outer_outer, rx_outer_outer in T.grid(8, 3):
                cse_var_1: T.int32 = rc_outer_outer * 3136
                threadIdx_x_1 = T.env_thread("threadIdx.x")
                pad_temp_shared_1 = T.Buffer((576,), data=pad_temp_shared, scope="shared")
                data_1 = T.Buffer((25088,), data=data.data)
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1] = T.if_then_else(1 <= threadIdx_x_1 % 9 and threadIdx_x_1 % 9 < 8 and 1 <= rx_outer_outer + blockIdx_x % 7 and rx_outer_outer + blockIdx_x % 7 < 8, data_1[cse_var_1 + threadIdx_x_1 // 9 * 49 + threadIdx_x_1 % 9 * 7 + rx_outer_outer + blockIdx_x % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 32] = T.if_then_else(1 <= (threadIdx_x_1 + 5) % 9 and (threadIdx_x_1 + 5) % 9 < 8 and 1 <= rx_outer_outer + blockIdx_x % 7 and rx_outer_outer + blockIdx_x % 7 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 32) // 9 * 49 + (threadIdx_x_1 + 5) % 9 * 7 + rx_outer_outer + blockIdx_x % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 64] = T.if_then_else(1 <= (threadIdx_x_1 + 1) % 9 and (threadIdx_x_1 + 1) % 9 < 8 and 1 <= rx_outer_outer + blockIdx_x % 7 and rx_outer_outer + blockIdx_x % 7 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 64) // 9 * 49 + (threadIdx_x_1 + 1) % 9 * 7 + rx_outer_outer + blockIdx_x % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 96] = T.if_then_else(1 <= (threadIdx_x_1 + 6) % 9 and (threadIdx_x_1 + 6) % 9 < 8 and 1 <= rx_outer_outer + blockIdx_x % 7 and rx_outer_outer + blockIdx_x % 7 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 96) // 9 * 49 + (threadIdx_x_1 + 6) % 9 * 7 + rx_outer_outer + blockIdx_x % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 128] = T.if_then_else(1 <= (threadIdx_x_1 + 2) % 9 and (threadIdx_x_1 + 2) % 9 < 8 and 1 <= rx_outer_outer + blockIdx_x % 7 and rx_outer_outer + blockIdx_x % 7 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 128) // 9 * 49 + (threadIdx_x_1 + 2) % 9 * 7 + rx_outer_outer + blockIdx_x % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 160] = T.if_then_else(1 <= (threadIdx_x_1 + 7) % 9 and (threadIdx_x_1 + 7) % 9 < 8 and 1 <= rx_outer_outer + blockIdx_x % 7 and rx_outer_outer + blockIdx_x % 7 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 160) // 9 * 49 + (threadIdx_x_1 + 7) % 9 * 7 + rx_outer_outer + blockIdx_x % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 192] = T.if_then_else(1 <= (threadIdx_x_1 + 3) % 9 and (threadIdx_x_1 + 3) % 9 < 8 and 1 <= rx_outer_outer + blockIdx_x % 7 and rx_outer_outer + blockIdx_x % 7 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 192) // 9 * 49 + (threadIdx_x_1 + 3) % 9 * 7 + rx_outer_outer + blockIdx_x % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 224] = T.if_then_else(1 <= (threadIdx_x_1 + 8) % 9 and (threadIdx_x_1 + 8) % 9 < 8 and 1 <= rx_outer_outer + blockIdx_x % 7 and rx_outer_outer + blockIdx_x % 7 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 224) // 9 * 49 + (threadIdx_x_1 + 8) % 9 * 7 + rx_outer_outer + blockIdx_x % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 256] = T.if_then_else(1 <= (threadIdx_x_1 + 4) % 9 and (threadIdx_x_1 + 4) % 9 < 8 and 1 <= rx_outer_outer + blockIdx_x % 7 and rx_outer_outer + blockIdx_x % 7 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 256) // 9 * 49 + (threadIdx_x_1 + 4) % 9 * 7 + rx_outer_outer + blockIdx_x % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 288] = T.if_then_else(1 <= threadIdx_x_1 % 9 and threadIdx_x_1 % 9 < 8 and 1 <= rx_outer_outer + blockIdx_x % 7 and rx_outer_outer + blockIdx_x % 7 < 8, data_1[cse_var_1 + threadIdx_x_1 // 9 * 49 + threadIdx_x_1 % 9 * 7 + rx_outer_outer + blockIdx_x % 7 + 1560], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 320] = T.if_then_else(1 <= (threadIdx_x_1 + 5) % 9 and (threadIdx_x_1 + 5) % 9 < 8 and 1 <= rx_outer_outer + blockIdx_x % 7 and rx_outer_outer + blockIdx_x % 7 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 320) // 9 * 49 + (threadIdx_x_1 + 5) % 9 * 7 + rx_outer_outer + blockIdx_x % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 352] = T.if_then_else(1 <= (threadIdx_x_1 + 1) % 9 and (threadIdx_x_1 + 1) % 9 < 8 and 1 <= rx_outer_outer + blockIdx_x % 7 and rx_outer_outer + blockIdx_x % 7 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 352) // 9 * 49 + (threadIdx_x_1 + 1) % 9 * 7 + rx_outer_outer + blockIdx_x % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 384] = T.if_then_else(1 <= (threadIdx_x_1 + 6) % 9 and (threadIdx_x_1 + 6) % 9 < 8 and 1 <= rx_outer_outer + blockIdx_x % 7 and rx_outer_outer + blockIdx_x % 7 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 384) // 9 * 49 + (threadIdx_x_1 + 6) % 9 * 7 + rx_outer_outer + blockIdx_x % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 416] = T.if_then_else(1 <= (threadIdx_x_1 + 2) % 9 and (threadIdx_x_1 + 2) % 9 < 8 and 1 <= rx_outer_outer + blockIdx_x % 7 and rx_outer_outer + blockIdx_x % 7 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 416) // 9 * 49 + (threadIdx_x_1 + 2) % 9 * 7 + rx_outer_outer + blockIdx_x % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 448] = T.if_then_else(1 <= (threadIdx_x_1 + 7) % 9 and (threadIdx_x_1 + 7) % 9 < 8 and 1 <= rx_outer_outer + blockIdx_x % 7 and rx_outer_outer + blockIdx_x % 7 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 448) // 9 * 49 + (threadIdx_x_1 + 7) % 9 * 7 + rx_outer_outer + blockIdx_x % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 480] = T.if_then_else(1 <= (threadIdx_x_1 + 3) % 9 and (threadIdx_x_1 + 3) % 9 < 8 and 1 <= rx_outer_outer + blockIdx_x % 7 and rx_outer_outer + blockIdx_x % 7 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 480) // 9 * 49 + (threadIdx_x_1 + 3) % 9 * 7 + rx_outer_outer + blockIdx_x % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 512] = T.if_then_else(1 <= (threadIdx_x_1 + 8) % 9 and (threadIdx_x_1 + 8) % 9 < 8 and 1 <= rx_outer_outer + blockIdx_x % 7 and rx_outer_outer + blockIdx_x % 7 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 512) // 9 * 49 + (threadIdx_x_1 + 8) % 9 * 7 + rx_outer_outer + blockIdx_x % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 32):
                    pad_temp_shared_1[threadIdx_x_1 + 544] = T.if_then_else(1 <= (threadIdx_x_1 + 4) % 9 and (threadIdx_x_1 + 4) % 9 < 8 and 1 <= rx_outer_outer + blockIdx_x % 7 and rx_outer_outer + blockIdx_x % 7 < 8, data_1[cse_var_1 + (threadIdx_x_1 + 544) // 9 * 49 + (threadIdx_x_1 + 4) % 9 * 7 + rx_outer_outer + blockIdx_x % 7 - 8], T.float32(0))
                threadIdx_x_2 = T.env_thread("threadIdx.x")
                kernel_shared_1 = T.Buffer((6144,), data=kernel_shared, scope="shared")
                kernel_1 = T.Buffer((2359296,), data=kernel.data)
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 32] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 96]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 64] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 192]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 96] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 288]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 128] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 384]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 160] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 480]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 192] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 4608]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 224] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 4704]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 256] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 4800]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 288] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 4896]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 320] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 4992]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 352] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 5088]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 384] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 9216]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 416] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 9312]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 448] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 9408]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 480] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 9504]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 512] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 9600]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 544] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 9696]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 576] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 13824]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 608] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 13920]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 640] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 14016]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 672] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 14112]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 704] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 14208]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 736] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 14304]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 768] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 18432]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 800] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 18528]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 832] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 18624]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 864] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 18720]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 896] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 18816]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 928] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 18912]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 960] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 23040]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 992] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 23136]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1024] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 23232]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1056] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 23328]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1088] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 23424]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1120] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 23520]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1152] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 27648]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1184] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 27744]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1216] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 27840]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1248] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 27936]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1280] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 28032]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1312] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 28128]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1344] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 32256]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1376] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 32352]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1408] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 32448]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1440] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 32544]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1472] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 32640]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1504] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 32736]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1536] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 36864]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1568] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 36960]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1600] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 37056]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1632] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 37152]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1664] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 37248]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1696] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 37344]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1728] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 41472]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1760] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 41568]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1792] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 41664]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1824] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 41760]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1856] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 41856]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1888] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 41952]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1920] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 46080]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1952] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 46176]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 1984] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 46272]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2016] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 46368]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2048] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 46464]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2080] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 46560]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2112] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 50688]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2144] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 50784]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2176] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 50880]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2208] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 50976]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2240] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 51072]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2272] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 51168]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2304] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 55296]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2336] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 55392]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2368] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 55488]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2400] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 55584]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2432] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 55680]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2464] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 55776]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2496] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 59904]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2528] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 60000]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2560] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 60096]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2592] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 60192]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2624] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 60288]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2656] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 60384]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2688] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 64512]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2720] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 64608]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2752] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 64704]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2784] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 64800]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2816] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 64896]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2848] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 64992]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2880] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 69120]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2912] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 69216]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2944] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 69312]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 2976] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 69408]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3008] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 69504]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3040] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 69600]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3072] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 73728]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3104] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 73824]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3136] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 73920]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3168] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 74016]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3200] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 74112]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3232] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 74208]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3264] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 78336]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3296] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 78432]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3328] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 78528]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3360] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 78624]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3392] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 78720]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3424] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 78816]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3456] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 82944]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3488] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 83040]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3520] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 83136]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3552] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 83232]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3584] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 83328]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3616] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 83424]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3648] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 87552]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3680] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 87648]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3712] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 87744]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3744] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 87840]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3776] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 87936]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3808] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 88032]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3840] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 92160]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3872] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 92256]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3904] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 92352]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3936] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 92448]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 3968] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 92544]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4000] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 92640]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4032] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 96768]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4064] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 96864]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4096] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 96960]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4128] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 97056]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4160] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 97152]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4192] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 97248]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4224] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 101376]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4256] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 101472]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4288] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 101568]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4320] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 101664]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4352] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 101760]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4384] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 101856]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4416] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 105984]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4448] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 106080]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4480] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 106176]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4512] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 106272]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4544] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 106368]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4576] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 106464]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4608] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 110592]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4640] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 110688]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4672] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 110784]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4704] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 110880]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4736] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 110976]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4768] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 111072]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4800] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 115200]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4832] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 115296]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4864] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 115392]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4896] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 115488]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4928] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 115584]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4960] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 115680]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 4992] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 119808]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5024] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 119904]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5056] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 120000]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5088] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 120096]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5120] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 120192]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5152] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 120288]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5184] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 124416]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5216] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 124512]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5248] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 124608]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5280] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 124704]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5312] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 124800]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5344] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 124896]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5376] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 129024]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5408] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 129120]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5440] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 129216]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5472] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 129312]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5504] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 129408]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5536] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 129504]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5568] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 133632]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5600] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 133728]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5632] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 133824]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5664] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 133920]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5696] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 134016]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5728] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 134112]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5760] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 138240]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5792] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 138336]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5824] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 138432]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5856] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 138528]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5888] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 138624]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5920] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 138720]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5952] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 142848]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 5984] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 142944]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 6016] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 143040]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 6048] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 143136]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 6080] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 143232]
                with T.launch_thread(threadIdx_x_2, 32):
                    kernel_shared_1[threadIdx_x_2 + 6112] = kernel_1[blockIdx_x // 7 * 147456 + rc_outer_outer * 576 + threadIdx_x_2 * 3 + rx_outer_outer + 143328]
                for rc_outer_inner, yy_outer_inner in T.grid(2, 7):
                    cse_var_2: T.int32 = rc_outer_inner * 288 + yy_outer_inner
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 1] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 1]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 2] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 2]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 9] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 3]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 10] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 4]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 11] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 5]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 18] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 6]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 19] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 7]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 20] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 8]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 27] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 9]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 28] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 10]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 29] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 11]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 36] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 12]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 37] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 13]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 38] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 14]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 45] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 15]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 46] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 16]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 47] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 17]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 54] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 18]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 55] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 19]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 56] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 20]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 63] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 21]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 64] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 22]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 65] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 23]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 72] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 24]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 73] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 25]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 74] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 26]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 81] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 27]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 82] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 28]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 83] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 29]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 90] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 30]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 91] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 31]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 92] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 32]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 99] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 33]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 100] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 34]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 101] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 35]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 108] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 36]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 109] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 37]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 110] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 38]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 117] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 39]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 118] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 40]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 119] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 41]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 126] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 42]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 127] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 43]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 128] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 44]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 135] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 45]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 136] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 46]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 137] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 47]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 144] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 48]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 145] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 49]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 146] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 50]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 153] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 51]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 154] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 52]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 155] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 53]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 162] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 54]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 163] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 55]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 164] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 56]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 171] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 57]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 172] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 58]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 173] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 59]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 180] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 60]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 181] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 61]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 182] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 62]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 189] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 63]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 190] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 64]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 191] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 65]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 198] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 66]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 199] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 67]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 200] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 68]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 207] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 69]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 208] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 70]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 209] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 71]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 216] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 72]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 217] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 73]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 218] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 74]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 225] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 75]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 226] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 76]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 227] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 77]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 234] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 78]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 235] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 79]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 236] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 80]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 243] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 81]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 244] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 82]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 245] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 83]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 252] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 84]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 253] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 85]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 254] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 86]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 261] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 87]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 262] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 88]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 263] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 89]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 270] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 90]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 271] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 91]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 272] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 92]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 279] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 93]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 280] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 94]
                    conv2d_nchw_1[yy_outer_inner] = conv2d_nchw_1[yy_outer_inner] + pad_temp_shared_1[cse_var_2 + 281] * kernel_shared_1[threadIdx_x * 192 + rc_outer_inner * 96 + 95]
            for i2_inner in range(7):
                compute_1 = T.Buffer((25088,), data=compute.data)
                bias_1 = T.Buffer((512,), data=bias.data)
                compute_1[blockIdx_x // 7 * 1568 + threadIdx_x * 49 + i2_inner * 7 + blockIdx_x % 7] = T.max(conv2d_nchw_1[i2_inner] + bias_1[blockIdx_x // 7 * 32 + threadIdx_x], T.float32(0))




.. GENERATED FROM PYTHON SOURCE LINES 138-141

Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.

.. GENERATED FROM PYTHON SOURCE LINES 141-168

.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Execution time of this operator: 0.352 ms




.. GENERATED FROM PYTHON SOURCE LINES 169-174

Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

.. GENERATED FROM PYTHON SOURCE LINES 176-179

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.

.. GENERATED FROM PYTHON SOURCE LINES 179-186

.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=1)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=32)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=1)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=7)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=32)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=2)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=3)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=1)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=1)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=1)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=1)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=32)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=1)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=7)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=1)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=1)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=32)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=32)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 512)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #if (((__CUDACC_VER_MAJOR__ == 11) && (__CUDACC_VER_MINOR__ >= 4)) || \
         (__CUDACC_VER_MAJOR__ > 11))
    #define TVM_ENABLE_L2_PREFETCH 1
    #else
    #define TVM_ENABLE_L2_PREFETCH 0
    #endif

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(32) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[7];
      __shared__ float pad_temp_shared[576];
      __shared__ float kernel_shared[6144];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 8; ++rc_outer_outer) {
        for (int rx_outer_outer = 0; rx_outer_outer < 3; ++rx_outer_outer) {
          __syncthreads();
          pad_temp_shared[((int)threadIdx.x)] = (((((1 <= (((int)threadIdx.x) % 9)) && ((((int)threadIdx.x) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)blockIdx.x) % 7)))) && ((rx_outer_outer + (((int)blockIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + ((((int)threadIdx.x) / 9) * 49)) + ((((int)threadIdx.x) % 9) * 7)) + rx_outer_outer) + (((int)blockIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 32)] = (((((1 <= ((((int)threadIdx.x) + 5) % 9)) && (((((int)threadIdx.x) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)blockIdx.x) % 7)))) && ((rx_outer_outer + (((int)blockIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 32) / 9) * 49)) + (((((int)threadIdx.x) + 5) % 9) * 7)) + rx_outer_outer) + (((int)blockIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 64)] = (((((1 <= ((((int)threadIdx.x) + 1) % 9)) && (((((int)threadIdx.x) + 1) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)blockIdx.x) % 7)))) && ((rx_outer_outer + (((int)blockIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 64) / 9) * 49)) + (((((int)threadIdx.x) + 1) % 9) * 7)) + rx_outer_outer) + (((int)blockIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 96)] = (((((1 <= ((((int)threadIdx.x) + 6) % 9)) && (((((int)threadIdx.x) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)blockIdx.x) % 7)))) && ((rx_outer_outer + (((int)blockIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 96) / 9) * 49)) + (((((int)threadIdx.x) + 6) % 9) * 7)) + rx_outer_outer) + (((int)blockIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 128)] = (((((1 <= ((((int)threadIdx.x) + 2) % 9)) && (((((int)threadIdx.x) + 2) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)blockIdx.x) % 7)))) && ((rx_outer_outer + (((int)blockIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 128) / 9) * 49)) + (((((int)threadIdx.x) + 2) % 9) * 7)) + rx_outer_outer) + (((int)blockIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 160)] = (((((1 <= ((((int)threadIdx.x) + 7) % 9)) && (((((int)threadIdx.x) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)blockIdx.x) % 7)))) && ((rx_outer_outer + (((int)blockIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 160) / 9) * 49)) + (((((int)threadIdx.x) + 7) % 9) * 7)) + rx_outer_outer) + (((int)blockIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 192)] = (((((1 <= ((((int)threadIdx.x) + 3) % 9)) && (((((int)threadIdx.x) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)blockIdx.x) % 7)))) && ((rx_outer_outer + (((int)blockIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 192) / 9) * 49)) + (((((int)threadIdx.x) + 3) % 9) * 7)) + rx_outer_outer) + (((int)blockIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 224)] = (((((1 <= ((((int)threadIdx.x) + 8) % 9)) && (((((int)threadIdx.x) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)blockIdx.x) % 7)))) && ((rx_outer_outer + (((int)blockIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 224) / 9) * 49)) + (((((int)threadIdx.x) + 8) % 9) * 7)) + rx_outer_outer) + (((int)blockIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 256)] = (((((1 <= ((((int)threadIdx.x) + 4) % 9)) && (((((int)threadIdx.x) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)blockIdx.x) % 7)))) && ((rx_outer_outer + (((int)blockIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 256) / 9) * 49)) + (((((int)threadIdx.x) + 4) % 9) * 7)) + rx_outer_outer) + (((int)blockIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 288)] = (((((1 <= (((int)threadIdx.x) % 9)) && ((((int)threadIdx.x) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)blockIdx.x) % 7)))) && ((rx_outer_outer + (((int)blockIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + ((((int)threadIdx.x) / 9) * 49)) + ((((int)threadIdx.x) % 9) * 7)) + rx_outer_outer) + (((int)blockIdx.x) % 7)) + 1560)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 320)] = (((((1 <= ((((int)threadIdx.x) + 5) % 9)) && (((((int)threadIdx.x) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)blockIdx.x) % 7)))) && ((rx_outer_outer + (((int)blockIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 320) / 9) * 49)) + (((((int)threadIdx.x) + 5) % 9) * 7)) + rx_outer_outer) + (((int)blockIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 352)] = (((((1 <= ((((int)threadIdx.x) + 1) % 9)) && (((((int)threadIdx.x) + 1) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)blockIdx.x) % 7)))) && ((rx_outer_outer + (((int)blockIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 352) / 9) * 49)) + (((((int)threadIdx.x) + 1) % 9) * 7)) + rx_outer_outer) + (((int)blockIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 384)] = (((((1 <= ((((int)threadIdx.x) + 6) % 9)) && (((((int)threadIdx.x) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)blockIdx.x) % 7)))) && ((rx_outer_outer + (((int)blockIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 384) / 9) * 49)) + (((((int)threadIdx.x) + 6) % 9) * 7)) + rx_outer_outer) + (((int)blockIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 416)] = (((((1 <= ((((int)threadIdx.x) + 2) % 9)) && (((((int)threadIdx.x) + 2) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)blockIdx.x) % 7)))) && ((rx_outer_outer + (((int)blockIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 416) / 9) * 49)) + (((((int)threadIdx.x) + 2) % 9) * 7)) + rx_outer_outer) + (((int)blockIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 448)] = (((((1 <= ((((int)threadIdx.x) + 7) % 9)) && (((((int)threadIdx.x) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)blockIdx.x) % 7)))) && ((rx_outer_outer + (((int)blockIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 448) / 9) * 49)) + (((((int)threadIdx.x) + 7) % 9) * 7)) + rx_outer_outer) + (((int)blockIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 480)] = (((((1 <= ((((int)threadIdx.x) + 3) % 9)) && (((((int)threadIdx.x) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)blockIdx.x) % 7)))) && ((rx_outer_outer + (((int)blockIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 480) / 9) * 49)) + (((((int)threadIdx.x) + 3) % 9) * 7)) + rx_outer_outer) + (((int)blockIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 512)] = (((((1 <= ((((int)threadIdx.x) + 8) % 9)) && (((((int)threadIdx.x) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)blockIdx.x) % 7)))) && ((rx_outer_outer + (((int)blockIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 512) / 9) * 49)) + (((((int)threadIdx.x) + 8) % 9) * 7)) + rx_outer_outer) + (((int)blockIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 544)] = (((((1 <= ((((int)threadIdx.x) + 4) % 9)) && (((((int)threadIdx.x) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)blockIdx.x) % 7)))) && ((rx_outer_outer + (((int)blockIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 544) / 9) * 49)) + (((((int)threadIdx.x) + 4) % 9) * 7)) + rx_outer_outer) + (((int)blockIdx.x) % 7)) - 8)] : 0.000000e+00f);
          kernel_shared[((int)threadIdx.x)] = kernel[(((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 32)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 96)];
          kernel_shared[(((int)threadIdx.x) + 64)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 192)];
          kernel_shared[(((int)threadIdx.x) + 96)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 288)];
          kernel_shared[(((int)threadIdx.x) + 128)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 384)];
          kernel_shared[(((int)threadIdx.x) + 160)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 480)];
          kernel_shared[(((int)threadIdx.x) + 192)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 4608)];
          kernel_shared[(((int)threadIdx.x) + 224)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 4704)];
          kernel_shared[(((int)threadIdx.x) + 256)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 4800)];
          kernel_shared[(((int)threadIdx.x) + 288)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 4896)];
          kernel_shared[(((int)threadIdx.x) + 320)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 4992)];
          kernel_shared[(((int)threadIdx.x) + 352)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 5088)];
          kernel_shared[(((int)threadIdx.x) + 384)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 9216)];
          kernel_shared[(((int)threadIdx.x) + 416)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 9312)];
          kernel_shared[(((int)threadIdx.x) + 448)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 9408)];
          kernel_shared[(((int)threadIdx.x) + 480)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 9504)];
          kernel_shared[(((int)threadIdx.x) + 512)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 9600)];
          kernel_shared[(((int)threadIdx.x) + 544)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 9696)];
          kernel_shared[(((int)threadIdx.x) + 576)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 13824)];
          kernel_shared[(((int)threadIdx.x) + 608)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 13920)];
          kernel_shared[(((int)threadIdx.x) + 640)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 14016)];
          kernel_shared[(((int)threadIdx.x) + 672)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 14112)];
          kernel_shared[(((int)threadIdx.x) + 704)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 14208)];
          kernel_shared[(((int)threadIdx.x) + 736)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 14304)];
          kernel_shared[(((int)threadIdx.x) + 768)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 18432)];
          kernel_shared[(((int)threadIdx.x) + 800)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 18528)];
          kernel_shared[(((int)threadIdx.x) + 832)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 18624)];
          kernel_shared[(((int)threadIdx.x) + 864)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 18720)];
          kernel_shared[(((int)threadIdx.x) + 896)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 18816)];
          kernel_shared[(((int)threadIdx.x) + 928)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 18912)];
          kernel_shared[(((int)threadIdx.x) + 960)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 23040)];
          kernel_shared[(((int)threadIdx.x) + 992)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 23136)];
          kernel_shared[(((int)threadIdx.x) + 1024)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 23232)];
          kernel_shared[(((int)threadIdx.x) + 1056)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 23328)];
          kernel_shared[(((int)threadIdx.x) + 1088)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 23424)];
          kernel_shared[(((int)threadIdx.x) + 1120)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 23520)];
          kernel_shared[(((int)threadIdx.x) + 1152)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 27648)];
          kernel_shared[(((int)threadIdx.x) + 1184)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 27744)];
          kernel_shared[(((int)threadIdx.x) + 1216)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 27840)];
          kernel_shared[(((int)threadIdx.x) + 1248)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 27936)];
          kernel_shared[(((int)threadIdx.x) + 1280)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 28032)];
          kernel_shared[(((int)threadIdx.x) + 1312)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 28128)];
          kernel_shared[(((int)threadIdx.x) + 1344)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 32256)];
          kernel_shared[(((int)threadIdx.x) + 1376)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 32352)];
          kernel_shared[(((int)threadIdx.x) + 1408)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 32448)];
          kernel_shared[(((int)threadIdx.x) + 1440)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 32544)];
          kernel_shared[(((int)threadIdx.x) + 1472)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 32640)];
          kernel_shared[(((int)threadIdx.x) + 1504)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 32736)];
          kernel_shared[(((int)threadIdx.x) + 1536)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 36864)];
          kernel_shared[(((int)threadIdx.x) + 1568)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 36960)];
          kernel_shared[(((int)threadIdx.x) + 1600)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 37056)];
          kernel_shared[(((int)threadIdx.x) + 1632)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 37152)];
          kernel_shared[(((int)threadIdx.x) + 1664)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 37248)];
          kernel_shared[(((int)threadIdx.x) + 1696)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 37344)];
          kernel_shared[(((int)threadIdx.x) + 1728)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 41472)];
          kernel_shared[(((int)threadIdx.x) + 1760)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 41568)];
          kernel_shared[(((int)threadIdx.x) + 1792)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 41664)];
          kernel_shared[(((int)threadIdx.x) + 1824)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 41760)];
          kernel_shared[(((int)threadIdx.x) + 1856)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 41856)];
          kernel_shared[(((int)threadIdx.x) + 1888)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 41952)];
          kernel_shared[(((int)threadIdx.x) + 1920)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 46080)];
          kernel_shared[(((int)threadIdx.x) + 1952)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 46176)];
          kernel_shared[(((int)threadIdx.x) + 1984)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 46272)];
          kernel_shared[(((int)threadIdx.x) + 2016)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 46368)];
          kernel_shared[(((int)threadIdx.x) + 2048)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 46464)];
          kernel_shared[(((int)threadIdx.x) + 2080)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 46560)];
          kernel_shared[(((int)threadIdx.x) + 2112)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 50688)];
          kernel_shared[(((int)threadIdx.x) + 2144)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 50784)];
          kernel_shared[(((int)threadIdx.x) + 2176)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 50880)];
          kernel_shared[(((int)threadIdx.x) + 2208)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 50976)];
          kernel_shared[(((int)threadIdx.x) + 2240)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 51072)];
          kernel_shared[(((int)threadIdx.x) + 2272)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 51168)];
          kernel_shared[(((int)threadIdx.x) + 2304)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 55296)];
          kernel_shared[(((int)threadIdx.x) + 2336)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 55392)];
          kernel_shared[(((int)threadIdx.x) + 2368)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 55488)];
          kernel_shared[(((int)threadIdx.x) + 2400)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 55584)];
          kernel_shared[(((int)threadIdx.x) + 2432)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 55680)];
          kernel_shared[(((int)threadIdx.x) + 2464)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 55776)];
          kernel_shared[(((int)threadIdx.x) + 2496)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 59904)];
          kernel_shared[(((int)threadIdx.x) + 2528)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 60000)];
          kernel_shared[(((int)threadIdx.x) + 2560)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 60096)];
          kernel_shared[(((int)threadIdx.x) + 2592)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 60192)];
          kernel_shared[(((int)threadIdx.x) + 2624)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 60288)];
          kernel_shared[(((int)threadIdx.x) + 2656)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 60384)];
          kernel_shared[(((int)threadIdx.x) + 2688)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 64512)];
          kernel_shared[(((int)threadIdx.x) + 2720)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 64608)];
          kernel_shared[(((int)threadIdx.x) + 2752)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 64704)];
          kernel_shared[(((int)threadIdx.x) + 2784)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 64800)];
          kernel_shared[(((int)threadIdx.x) + 2816)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 64896)];
          kernel_shared[(((int)threadIdx.x) + 2848)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 64992)];
          kernel_shared[(((int)threadIdx.x) + 2880)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 69120)];
          kernel_shared[(((int)threadIdx.x) + 2912)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 69216)];
          kernel_shared[(((int)threadIdx.x) + 2944)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 69312)];
          kernel_shared[(((int)threadIdx.x) + 2976)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 69408)];
          kernel_shared[(((int)threadIdx.x) + 3008)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 69504)];
          kernel_shared[(((int)threadIdx.x) + 3040)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 69600)];
          kernel_shared[(((int)threadIdx.x) + 3072)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 73728)];
          kernel_shared[(((int)threadIdx.x) + 3104)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 73824)];
          kernel_shared[(((int)threadIdx.x) + 3136)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 73920)];
          kernel_shared[(((int)threadIdx.x) + 3168)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 74016)];
          kernel_shared[(((int)threadIdx.x) + 3200)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 74112)];
          kernel_shared[(((int)threadIdx.x) + 3232)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 74208)];
          kernel_shared[(((int)threadIdx.x) + 3264)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 78336)];
          kernel_shared[(((int)threadIdx.x) + 3296)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 78432)];
          kernel_shared[(((int)threadIdx.x) + 3328)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 78528)];
          kernel_shared[(((int)threadIdx.x) + 3360)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 78624)];
          kernel_shared[(((int)threadIdx.x) + 3392)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 78720)];
          kernel_shared[(((int)threadIdx.x) + 3424)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 78816)];
          kernel_shared[(((int)threadIdx.x) + 3456)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 82944)];
          kernel_shared[(((int)threadIdx.x) + 3488)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 83040)];
          kernel_shared[(((int)threadIdx.x) + 3520)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 83136)];
          kernel_shared[(((int)threadIdx.x) + 3552)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 83232)];
          kernel_shared[(((int)threadIdx.x) + 3584)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 83328)];
          kernel_shared[(((int)threadIdx.x) + 3616)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 83424)];
          kernel_shared[(((int)threadIdx.x) + 3648)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 87552)];
          kernel_shared[(((int)threadIdx.x) + 3680)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 87648)];
          kernel_shared[(((int)threadIdx.x) + 3712)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 87744)];
          kernel_shared[(((int)threadIdx.x) + 3744)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 87840)];
          kernel_shared[(((int)threadIdx.x) + 3776)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 87936)];
          kernel_shared[(((int)threadIdx.x) + 3808)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 88032)];
          kernel_shared[(((int)threadIdx.x) + 3840)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 92160)];
          kernel_shared[(((int)threadIdx.x) + 3872)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 92256)];
          kernel_shared[(((int)threadIdx.x) + 3904)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 92352)];
          kernel_shared[(((int)threadIdx.x) + 3936)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 92448)];
          kernel_shared[(((int)threadIdx.x) + 3968)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 92544)];
          kernel_shared[(((int)threadIdx.x) + 4000)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 92640)];
          kernel_shared[(((int)threadIdx.x) + 4032)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 96768)];
          kernel_shared[(((int)threadIdx.x) + 4064)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 96864)];
          kernel_shared[(((int)threadIdx.x) + 4096)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 96960)];
          kernel_shared[(((int)threadIdx.x) + 4128)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 97056)];
          kernel_shared[(((int)threadIdx.x) + 4160)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 97152)];
          kernel_shared[(((int)threadIdx.x) + 4192)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 97248)];
          kernel_shared[(((int)threadIdx.x) + 4224)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 101376)];
          kernel_shared[(((int)threadIdx.x) + 4256)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 101472)];
          kernel_shared[(((int)threadIdx.x) + 4288)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 101568)];
          kernel_shared[(((int)threadIdx.x) + 4320)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 101664)];
          kernel_shared[(((int)threadIdx.x) + 4352)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 101760)];
          kernel_shared[(((int)threadIdx.x) + 4384)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 101856)];
          kernel_shared[(((int)threadIdx.x) + 4416)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 105984)];
          kernel_shared[(((int)threadIdx.x) + 4448)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 106080)];
          kernel_shared[(((int)threadIdx.x) + 4480)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 106176)];
          kernel_shared[(((int)threadIdx.x) + 4512)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 106272)];
          kernel_shared[(((int)threadIdx.x) + 4544)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 106368)];
          kernel_shared[(((int)threadIdx.x) + 4576)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 106464)];
          kernel_shared[(((int)threadIdx.x) + 4608)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 110592)];
          kernel_shared[(((int)threadIdx.x) + 4640)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 110688)];
          kernel_shared[(((int)threadIdx.x) + 4672)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 110784)];
          kernel_shared[(((int)threadIdx.x) + 4704)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 110880)];
          kernel_shared[(((int)threadIdx.x) + 4736)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 110976)];
          kernel_shared[(((int)threadIdx.x) + 4768)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 111072)];
          kernel_shared[(((int)threadIdx.x) + 4800)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 115200)];
          kernel_shared[(((int)threadIdx.x) + 4832)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 115296)];
          kernel_shared[(((int)threadIdx.x) + 4864)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 115392)];
          kernel_shared[(((int)threadIdx.x) + 4896)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 115488)];
          kernel_shared[(((int)threadIdx.x) + 4928)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 115584)];
          kernel_shared[(((int)threadIdx.x) + 4960)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 115680)];
          kernel_shared[(((int)threadIdx.x) + 4992)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 119808)];
          kernel_shared[(((int)threadIdx.x) + 5024)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 119904)];
          kernel_shared[(((int)threadIdx.x) + 5056)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 120000)];
          kernel_shared[(((int)threadIdx.x) + 5088)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 120096)];
          kernel_shared[(((int)threadIdx.x) + 5120)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 120192)];
          kernel_shared[(((int)threadIdx.x) + 5152)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 120288)];
          kernel_shared[(((int)threadIdx.x) + 5184)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 124416)];
          kernel_shared[(((int)threadIdx.x) + 5216)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 124512)];
          kernel_shared[(((int)threadIdx.x) + 5248)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 124608)];
          kernel_shared[(((int)threadIdx.x) + 5280)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 124704)];
          kernel_shared[(((int)threadIdx.x) + 5312)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 124800)];
          kernel_shared[(((int)threadIdx.x) + 5344)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 124896)];
          kernel_shared[(((int)threadIdx.x) + 5376)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 129024)];
          kernel_shared[(((int)threadIdx.x) + 5408)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 129120)];
          kernel_shared[(((int)threadIdx.x) + 5440)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 129216)];
          kernel_shared[(((int)threadIdx.x) + 5472)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 129312)];
          kernel_shared[(((int)threadIdx.x) + 5504)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 129408)];
          kernel_shared[(((int)threadIdx.x) + 5536)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 129504)];
          kernel_shared[(((int)threadIdx.x) + 5568)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 133632)];
          kernel_shared[(((int)threadIdx.x) + 5600)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 133728)];
          kernel_shared[(((int)threadIdx.x) + 5632)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 133824)];
          kernel_shared[(((int)threadIdx.x) + 5664)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 133920)];
          kernel_shared[(((int)threadIdx.x) + 5696)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 134016)];
          kernel_shared[(((int)threadIdx.x) + 5728)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 134112)];
          kernel_shared[(((int)threadIdx.x) + 5760)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 138240)];
          kernel_shared[(((int)threadIdx.x) + 5792)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 138336)];
          kernel_shared[(((int)threadIdx.x) + 5824)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 138432)];
          kernel_shared[(((int)threadIdx.x) + 5856)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 138528)];
          kernel_shared[(((int)threadIdx.x) + 5888)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 138624)];
          kernel_shared[(((int)threadIdx.x) + 5920)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 138720)];
          kernel_shared[(((int)threadIdx.x) + 5952)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 142848)];
          kernel_shared[(((int)threadIdx.x) + 5984)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 142944)];
          kernel_shared[(((int)threadIdx.x) + 6016)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 143040)];
          kernel_shared[(((int)threadIdx.x) + 6048)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 143136)];
          kernel_shared[(((int)threadIdx.x) + 6080)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 143232)];
          kernel_shared[(((int)threadIdx.x) + 6112)] = kernel[((((((((int)blockIdx.x) / 7) * 147456) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 143328)];
          __syncthreads();
          for (int rc_outer_inner = 0; rc_outer_inner < 2; ++rc_outer_inner) {
            for (int yy_outer_inner = 0; yy_outer_inner < 7; ++yy_outer_inner) {
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[((rc_outer_inner * 288) + yy_outer_inner)] * kernel_shared[((((int)threadIdx.x) * 192) + (rc_outer_inner * 96))]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 1)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 1)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 2)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 2)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 9)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 3)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 10)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 4)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 11)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 5)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 18)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 6)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 19)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 7)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 20)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 8)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 27)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 9)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 28)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 10)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 29)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 11)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 36)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 12)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 37)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 13)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 38)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 14)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 45)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 15)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 46)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 16)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 47)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 17)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 54)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 18)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 55)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 19)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 56)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 20)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 63)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 21)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 64)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 22)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 65)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 23)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 72)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 24)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 73)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 25)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 74)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 26)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 81)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 27)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 82)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 28)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 83)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 29)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 90)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 30)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 91)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 31)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 92)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 32)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 99)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 33)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 100)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 34)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 101)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 35)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 108)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 36)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 109)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 37)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 110)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 38)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 117)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 39)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 118)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 40)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 119)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 41)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 126)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 42)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 127)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 43)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 128)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 44)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 135)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 45)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 136)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 46)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 137)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 47)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 144)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 48)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 145)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 49)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 146)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 50)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 153)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 51)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 154)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 52)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 155)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 53)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 162)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 54)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 163)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 55)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 164)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 56)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 171)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 57)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 172)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 58)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 173)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 59)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 180)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 60)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 181)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 61)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 182)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 62)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 189)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 63)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 190)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 64)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 191)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 65)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 198)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 66)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 199)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 67)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 200)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 68)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 207)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 69)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 208)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 70)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 209)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 71)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 216)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 72)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 217)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 73)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 218)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 74)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 225)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 75)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 226)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 76)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 227)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 77)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 234)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 78)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 235)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 79)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 236)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 80)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 243)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 81)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 244)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 82)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 245)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 83)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 252)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 84)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 253)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 85)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 254)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 86)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 261)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 87)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 262)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 88)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 263)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 89)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 270)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 90)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 271)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 91)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 272)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 92)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 279)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 93)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 280)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 94)]));
              conv2d_nchw[yy_outer_inner] = (conv2d_nchw[yy_outer_inner] + (pad_temp_shared[(((rc_outer_inner * 288) + yy_outer_inner) + 281)] * kernel_shared[(((((int)threadIdx.x) * 192) + (rc_outer_inner * 96)) + 95)]));
            }
          }
        }
      }
      for (int i2_inner = 0; i2_inner < 7; ++i2_inner) {
        compute[(((((((int)blockIdx.x) / 7) * 1568) + (((int)threadIdx.x) * 49)) + (i2_inner * 7)) + (((int)blockIdx.x) % 7))] = max((conv2d_nchw[i2_inner] + bias[(((((int)blockIdx.x) / 7) * 32) + ((int)threadIdx.x))]), 0.000000e+00f);
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 187-191

A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.

.. GENERATED FROM PYTHON SOURCE LINES 191-213

.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Resume search:
    Get devices for measurement successfully!






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 6 minutes  45.477 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
