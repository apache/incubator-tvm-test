
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.

.. GENERATED FROM PYTHON SOURCE LINES 39-48

.. code-block:: default



    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python








.. GENERATED FROM PYTHON SOURCE LINES 54-59

Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.

.. GENERATED FROM PYTHON SOURCE LINES 59-71

.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]









.. GENERATED FROM PYTHON SOURCE LINES 72-75

Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.

.. GENERATED FROM PYTHON SOURCE LINES 75-88

.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)





.. GENERATED FROM PYTHON SOURCE LINES 89-106

Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.

.. GENERATED FROM PYTHON SOURCE LINES 106-116

.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Get devices for measurement successfully!




.. GENERATED FROM PYTHON SOURCE LINES 117-123

Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.

.. GENERATED FROM PYTHON SOURCE LINES 123-132

.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx








.. GENERATED FROM PYTHON SOURCE LINES 133-136

We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.

.. GENERATED FROM PYTHON SOURCE LINES 136-140

.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Lowered TIR:
    @main = primfn(data_1: handle, kernel_1: handle, bias_1: handle, compute_1: handle) -> ()
      attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
      buffers = {data: Buffer(data_2: Pointer(float32), float32, [25088], []),
                 kernel: Buffer(kernel_2: Pointer(float32), float32, [2359296], []),
                 bias: Buffer(bias_2: Pointer(float32), float32, [512], []),
                 compute: Buffer(compute_2: Pointer(float32), float32, [25088], [])}
      buffer_map = {data_1: data, kernel_1: kernel, bias_1: bias, compute_1: compute}
      preflattened_buffer_map = {data_1: data_3: Buffer(data_2, float32, [1, 512, 7, 7], []), kernel_1: kernel_3: Buffer(kernel_2, float32, [512, 512, 3, 3], []), bias_1: bias_3: Buffer(bias_2, float32, [1, 512, 1, 1], []), compute_1: compute_3: Buffer(compute_2, float32, [1, 512, 7, 7], [])} {
      attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = 56;
      allocate(conv2d_nchw: Pointer(local float32), float32, [4]), storage_scope = local;
      allocate(pad_temp.shared: Pointer(shared float32), float32, [336]), storage_scope = shared;
      allocate(kernel.shared: Pointer(shared float32), float32, [3072]), storage_scope = shared;
      attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112 {
        conv2d_nchw_1: Buffer(conv2d_nchw, float32, [1], [], scope="local", align=4)[0] = 0f32
        conv2d_nchw_1[1] = 0f32
        conv2d_nchw_1[2] = 0f32
        conv2d_nchw_1[3] = 0f32
        for (rc.outer.outer: int32, 0, 32) {
          let cse_var_2: int32 = (rc.outer.outer*784)
          let cse_var_1: int32 = (rc.outer.outer*144)
           {
            attr [IterVar(threadIdx.x_1: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            pad_temp.shared_1: Buffer(pad_temp.shared, float32, [336], [], scope="shared")[threadIdx.x_1] = @tir.if_then_else((((1 <= (floordiv(floormod(threadIdx.x_1, 21), 7) + floormod(blockIdx.x, 7))) && ((floordiv(floormod(threadIdx.x_1, 21), 7) + floormod(blockIdx.x, 7)) < 8)) && (1 <= floormod(threadIdx.x_1, 7))), data[((((cse_var_2 + (floordiv(threadIdx.x_1, 21)*49)) + (floormod(blockIdx.x, 7)*7)) + floormod(threadIdx.x_1, 21)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            pad_temp.shared_1[(threadIdx.x_1 + 112)] = @tir.if_then_else((((1 <= (floormod(blockIdx.x, 7) + floormod((floordiv(threadIdx.x_1, 7) + 1), 3))) && ((floormod(blockIdx.x, 7) + floormod((floordiv(threadIdx.x_1, 7) + 1), 3)) < 8)) && (1 <= floormod(threadIdx.x_1, 7))), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 112), 21)*49)) + (floormod(blockIdx.x, 7)*7)) + (floormod((floordiv(threadIdx.x_1, 7) + 1), 3)*7)) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            pad_temp.shared_1[(threadIdx.x_1 + 224)] = @tir.if_then_else((((1 <= (floormod(blockIdx.x, 7) + floormod((floordiv(threadIdx.x_1, 7) + 2), 3))) && ((floormod(blockIdx.x, 7) + floormod((floordiv(threadIdx.x_1, 7) + 2), 3)) < 8)) && (1 <= floormod(threadIdx.x_1, 7))), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 224), 21)*49)) + (floormod(blockIdx.x, 7)*7)) + (floormod((floordiv(threadIdx.x_1, 7) + 2), 3)*7)) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_2: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1: Buffer(kernel.shared, float32, [3072], [], scope="shared")[threadIdx.x_2] = kernel[((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 112)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 112), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 224)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 224), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 336)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + 32256)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 448)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 448), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 560)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 560), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 672)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + 64512)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 784)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 784), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 896)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 896), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1008)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + 96768)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1120)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1120), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1232)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1232), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1344)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + 129024)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1456)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1456), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1568)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1568), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1680)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + 161280)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1792)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1792), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1904)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1904), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2016)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + 193536)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2128)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2128), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2240)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2240), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2352)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + 225792)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2464)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2464), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2576)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2576), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2688)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + 258048)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2800)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2800), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2912)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2912), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            if @tir.likely((threadIdx.x_2 < 48), dtype=bool) {
              kernel.shared_1[(threadIdx.x_2 + 3024)] = kernel[((((floordiv(blockIdx.x, 7)*294912) + cse_var_1) + (threadIdx.x_2*3)) + 290304)]
            }
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[floormod(threadIdx.x, 7)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*48)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[floormod(threadIdx.x, 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 768)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[floormod(threadIdx.x, 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1536)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[floormod(threadIdx.x, 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2304)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 769)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1537)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2305)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 14)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 14)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 770)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 14)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1538)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 14)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2306)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 21)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 3)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 21)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 771)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 21)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1539)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 21)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2307)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 4)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 772)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1540)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2308)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 5)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 773)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1541)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2309)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 42)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 6)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 42)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 774)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 42)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1542)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 42)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2310)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 49)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 7)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 49)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 775)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 49)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1543)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 49)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2311)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 8)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 776)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1544)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2312)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 63)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 9)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 63)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 777)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 63)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1545)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 63)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2313)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 70)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 10)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 70)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 778)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 70)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1546)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 70)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2314)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 77)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 11)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 77)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 779)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 77)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1547)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 77)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2315)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 12)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 780)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1548)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2316)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 91)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 13)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 91)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 781)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 91)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1549)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 91)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2317)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 98)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 14)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 98)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 782)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 98)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1550)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 98)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2318)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 105)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 15)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 105)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 783)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 105)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1551)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 105)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2319)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 112)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 16)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 112)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 784)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 112)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1552)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 112)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2320)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 119)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 17)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 119)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 785)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 119)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1553)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 119)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2321)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 126)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 18)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 126)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 786)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 126)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1554)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 126)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2322)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 133)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 19)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 133)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 787)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 133)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1555)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 133)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2323)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 140)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 20)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 140)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 788)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 140)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1556)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 140)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2324)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 147)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 21)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 147)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 789)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 147)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1557)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 147)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2325)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 154)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 22)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 154)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 790)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 154)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1558)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 154)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2326)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 161)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 23)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 161)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 791)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 161)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1559)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 161)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2327)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 168)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 24)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 168)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 792)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 168)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1560)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 168)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2328)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 175)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 25)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 175)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 793)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 175)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1561)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 175)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2329)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 182)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 26)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 182)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 794)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 182)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1562)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 182)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2330)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 189)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 27)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 189)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 795)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 189)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1563)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 189)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2331)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 196)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 28)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 196)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 796)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 196)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1564)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 196)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2332)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 203)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 29)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 203)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 797)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 203)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1565)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 203)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2333)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 210)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 30)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 210)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 798)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 210)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1566)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 210)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2334)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 217)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 31)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 217)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 799)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 217)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1567)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 217)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2335)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 224)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 32)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 224)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 800)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 224)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1568)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 224)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2336)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 231)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 33)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 231)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 801)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 231)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1569)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 231)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2337)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 238)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 34)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 238)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 802)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 238)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1570)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 238)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2338)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 245)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 35)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 245)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 803)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 245)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1571)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 245)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2339)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 252)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 36)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 252)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 804)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 252)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1572)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 252)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2340)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 259)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 37)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 259)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 805)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 259)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1573)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 259)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2341)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 266)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 38)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 266)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 806)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 266)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1574)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 266)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2342)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 273)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 39)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 273)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 807)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 273)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1575)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 273)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2343)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 280)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 40)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 280)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 808)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 280)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1576)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 280)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2344)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 287)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 41)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 287)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 809)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 287)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1577)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 287)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2345)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 294)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 42)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 294)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 810)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 294)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1578)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 294)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2346)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 301)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 43)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 301)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 811)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 301)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1579)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 301)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2347)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 308)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 44)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 308)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 812)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 308)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1580)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 308)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2348)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 315)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 45)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 315)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 813)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 315)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1581)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 315)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2349)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 322)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 46)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 322)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 814)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 322)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1582)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 322)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2350)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 329)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 47)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 329)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 815)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 329)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1583)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 329)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2351)]))
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            pad_temp.shared_1[threadIdx.x_1] = @tir.if_then_else(((1 <= (floordiv(floormod(threadIdx.x_1, 21), 7) + floormod(blockIdx.x, 7))) && ((floordiv(floormod(threadIdx.x_1, 21), 7) + floormod(blockIdx.x, 7)) < 8)), data[((((cse_var_2 + (floordiv(threadIdx.x_1, 21)*49)) + (floormod(blockIdx.x, 7)*7)) + floormod(threadIdx.x_1, 21)) - 7)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            pad_temp.shared_1[(threadIdx.x_1 + 112)] = @tir.if_then_else(((1 <= (floormod(blockIdx.x, 7) + floormod((floordiv(threadIdx.x_1, 7) + 1), 3))) && ((floormod(blockIdx.x, 7) + floormod((floordiv(threadIdx.x_1, 7) + 1), 3)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 112), 21)*49)) + (floormod(blockIdx.x, 7)*7)) + (floormod((floordiv(threadIdx.x_1, 7) + 1), 3)*7)) + floormod(threadIdx.x_1, 7)) - 7)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            pad_temp.shared_1[(threadIdx.x_1 + 224)] = @tir.if_then_else(((1 <= (floormod(blockIdx.x, 7) + floormod((floordiv(threadIdx.x_1, 7) + 2), 3))) && ((floormod(blockIdx.x, 7) + floormod((floordiv(threadIdx.x_1, 7) + 2), 3)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 224), 21)*49)) + (floormod(blockIdx.x, 7)*7)) + (floormod((floordiv(threadIdx.x_1, 7) + 2), 3)*7)) + floormod(threadIdx.x_1, 7)) - 7)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[threadIdx.x_2] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + 1)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 112)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 112), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + 1)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 224)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 224), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + 1)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 336)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + 32257)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 448)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 448), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + 1)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 560)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 560), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + 1)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 672)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + 64513)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 784)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 784), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + 1)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 896)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 896), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + 1)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1008)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + 96769)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1120)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1120), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + 1)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1232)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1232), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + 1)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1344)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + 129025)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1456)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1456), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + 1)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1568)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1568), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + 1)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1680)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + 161281)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1792)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1792), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + 1)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1904)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1904), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + 1)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2016)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + 193537)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2128)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2128), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + 1)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2240)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2240), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + 1)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2352)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + 225793)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2464)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2464), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + 1)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2576)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2576), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + 1)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2688)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + 258049)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2800)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2800), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + 1)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2912)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2912), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + 1)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            if @tir.likely((threadIdx.x_2 < 48), dtype=bool) {
              kernel.shared_1[(threadIdx.x_2 + 3024)] = kernel[((((floordiv(blockIdx.x, 7)*294912) + cse_var_1) + (threadIdx.x_2*3)) + 290305)]
            }
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[floormod(threadIdx.x, 7)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*48)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[floormod(threadIdx.x, 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 768)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[floormod(threadIdx.x, 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1536)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[floormod(threadIdx.x, 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2304)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 769)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1537)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2305)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 14)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 14)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 770)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 14)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1538)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 14)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2306)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 21)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 3)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 21)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 771)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 21)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1539)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 21)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2307)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 4)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 772)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1540)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2308)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 5)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 773)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1541)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2309)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 42)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 6)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 42)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 774)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 42)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1542)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 42)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2310)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 49)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 7)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 49)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 775)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 49)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1543)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 49)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2311)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 8)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 776)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1544)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2312)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 63)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 9)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 63)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 777)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 63)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1545)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 63)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2313)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 70)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 10)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 70)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 778)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 70)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1546)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 70)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2314)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 77)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 11)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 77)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 779)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 77)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1547)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 77)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2315)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 12)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 780)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1548)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2316)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 91)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 13)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 91)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 781)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 91)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1549)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 91)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2317)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 98)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 14)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 98)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 782)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 98)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1550)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 98)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2318)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 105)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 15)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 105)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 783)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 105)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1551)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 105)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2319)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 112)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 16)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 112)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 784)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 112)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1552)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 112)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2320)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 119)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 17)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 119)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 785)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 119)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1553)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 119)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2321)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 126)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 18)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 126)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 786)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 126)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1554)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 126)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2322)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 133)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 19)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 133)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 787)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 133)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1555)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 133)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2323)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 140)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 20)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 140)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 788)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 140)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1556)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 140)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2324)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 147)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 21)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 147)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 789)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 147)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1557)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 147)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2325)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 154)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 22)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 154)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 790)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 154)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1558)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 154)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2326)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 161)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 23)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 161)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 791)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 161)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1559)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 161)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2327)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 168)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 24)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 168)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 792)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 168)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1560)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 168)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2328)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 175)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 25)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 175)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 793)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 175)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1561)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 175)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2329)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 182)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 26)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 182)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 794)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 182)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1562)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 182)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2330)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 189)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 27)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 189)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 795)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 189)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1563)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 189)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2331)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 196)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 28)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 196)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 796)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 196)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1564)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 196)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2332)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 203)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 29)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 203)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 797)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 203)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1565)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 203)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2333)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 210)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 30)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 210)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 798)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 210)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1566)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 210)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2334)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 217)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 31)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 217)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 799)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 217)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1567)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 217)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2335)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 224)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 32)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 224)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 800)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 224)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1568)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 224)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2336)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 231)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 33)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 231)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 801)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 231)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1569)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 231)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2337)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 238)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 34)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 238)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 802)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 238)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1570)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 238)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2338)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 245)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 35)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 245)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 803)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 245)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1571)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 245)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2339)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 252)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 36)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 252)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 804)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 252)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1572)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 252)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2340)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 259)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 37)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 259)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 805)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 259)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1573)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 259)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2341)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 266)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 38)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 266)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 806)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 266)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1574)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 266)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2342)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 273)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 39)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 273)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 807)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 273)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1575)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 273)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2343)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 280)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 40)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 280)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 808)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 280)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1576)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 280)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2344)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 287)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 41)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 287)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 809)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 287)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1577)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 287)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2345)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 294)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 42)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 294)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 810)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 294)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1578)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 294)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2346)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 301)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 43)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 301)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 811)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 301)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1579)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 301)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2347)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 308)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 44)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 308)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 812)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 308)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1580)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 308)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2348)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 315)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 45)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 315)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 813)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 315)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1581)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 315)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2349)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 322)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 46)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 322)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 814)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 322)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1582)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 322)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2350)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 329)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 47)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 329)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 815)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 329)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1583)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 329)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2351)]))
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            pad_temp.shared_1[threadIdx.x_1] = @tir.if_then_else((((1 <= (floordiv(floormod(threadIdx.x_1, 21), 7) + floormod(blockIdx.x, 7))) && ((floordiv(floormod(threadIdx.x_1, 21), 7) + floormod(blockIdx.x, 7)) < 8)) && (floormod(threadIdx.x_1, 7) < 6)), data[((((cse_var_2 + (floordiv(threadIdx.x_1, 21)*49)) + (floormod(blockIdx.x, 7)*7)) + floormod(threadIdx.x_1, 21)) - 6)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            pad_temp.shared_1[(threadIdx.x_1 + 112)] = @tir.if_then_else((((1 <= (floormod(blockIdx.x, 7) + floormod((floordiv(threadIdx.x_1, 7) + 1), 3))) && ((floormod(blockIdx.x, 7) + floormod((floordiv(threadIdx.x_1, 7) + 1), 3)) < 8)) && (floormod(threadIdx.x_1, 7) < 6)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 112), 21)*49)) + (floormod(blockIdx.x, 7)*7)) + (floormod((floordiv(threadIdx.x_1, 7) + 1), 3)*7)) + floormod(threadIdx.x_1, 7)) - 6)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            pad_temp.shared_1[(threadIdx.x_1 + 224)] = @tir.if_then_else((((1 <= (floormod(blockIdx.x, 7) + floormod((floordiv(threadIdx.x_1, 7) + 2), 3))) && ((floormod(blockIdx.x, 7) + floormod((floordiv(threadIdx.x_1, 7) + 2), 3)) < 8)) && (floormod(threadIdx.x_1, 7) < 6)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 224), 21)*49)) + (floormod(blockIdx.x, 7)*7)) + (floormod((floordiv(threadIdx.x_1, 7) + 2), 3)*7)) + floormod(threadIdx.x_1, 7)) - 6)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[threadIdx.x_2] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + 2)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 112)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 112), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + 2)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 224)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 224), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + 2)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 336)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + 32258)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 448)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 448), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + 2)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 560)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 560), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + 2)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 672)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + 64514)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 784)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 784), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + 2)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 896)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 896), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + 2)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1008)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + 96770)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1120)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1120), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + 2)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1232)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1232), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + 2)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1344)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + 129026)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1456)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1456), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + 2)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1568)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1568), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + 2)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1680)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + 161282)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1792)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1792), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + 2)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 1904)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 1904), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + 2)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2016)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + 193538)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2128)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2128), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + 2)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2240)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2240), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + 2)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2352)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + 225794)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2464)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2464), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + 2)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2576)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2576), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + 2)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2688)] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + 258050)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2800)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2800), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 48), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + 2)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            kernel.shared_1[(threadIdx.x_2 + 2912)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((threadIdx.x_2 + 2912), 48)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 48), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + 2)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 112;
            if @tir.likely((threadIdx.x_2 < 48), dtype=bool) {
              kernel.shared_1[(threadIdx.x_2 + 3024)] = kernel[((((floordiv(blockIdx.x, 7)*294912) + cse_var_1) + (threadIdx.x_2*3)) + 290306)]
            }
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[floormod(threadIdx.x, 7)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*48)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[floormod(threadIdx.x, 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 768)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[floormod(threadIdx.x, 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1536)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[floormod(threadIdx.x, 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2304)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 769)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1537)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2305)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 14)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 14)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 770)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 14)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1538)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 14)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2306)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 21)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 3)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 21)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 771)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 21)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1539)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 21)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2307)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 4)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 772)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1540)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2308)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 5)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 773)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1541)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2309)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 42)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 6)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 42)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 774)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 42)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1542)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 42)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2310)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 49)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 7)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 49)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 775)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 49)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1543)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 49)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2311)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 8)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 776)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1544)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2312)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 63)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 9)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 63)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 777)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 63)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1545)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 63)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2313)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 70)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 10)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 70)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 778)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 70)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1546)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 70)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2314)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 77)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 11)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 77)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 779)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 77)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1547)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 77)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2315)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 12)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 780)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1548)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2316)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 91)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 13)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 91)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 781)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 91)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1549)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 91)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2317)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 98)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 14)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 98)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 782)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 98)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1550)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 98)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2318)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 105)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 15)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 105)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 783)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 105)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1551)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 105)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2319)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 112)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 16)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 112)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 784)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 112)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1552)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 112)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2320)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 119)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 17)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 119)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 785)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 119)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1553)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 119)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2321)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 126)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 18)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 126)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 786)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 126)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1554)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 126)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2322)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 133)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 19)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 133)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 787)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 133)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1555)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 133)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2323)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 140)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 20)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 140)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 788)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 140)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1556)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 140)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2324)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 147)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 21)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 147)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 789)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 147)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1557)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 147)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2325)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 154)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 22)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 154)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 790)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 154)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1558)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 154)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2326)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 161)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 23)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 161)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 791)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 161)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1559)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 161)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2327)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 168)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 24)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 168)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 792)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 168)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1560)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 168)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2328)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 175)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 25)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 175)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 793)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 175)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1561)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 175)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2329)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 182)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 26)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 182)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 794)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 182)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1562)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 182)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2330)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 189)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 27)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 189)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 795)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 189)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1563)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 189)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2331)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 196)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 28)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 196)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 796)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 196)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1564)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 196)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2332)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 203)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 29)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 203)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 797)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 203)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1565)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 203)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2333)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 210)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 30)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 210)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 798)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 210)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1566)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 210)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2334)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 217)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 31)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 217)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 799)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 217)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1567)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 217)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2335)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 224)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 32)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 224)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 800)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 224)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1568)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 224)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2336)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 231)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 33)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 231)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 801)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 231)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1569)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 231)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2337)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 238)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 34)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 238)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 802)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 238)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1570)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 238)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2338)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 245)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 35)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 245)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 803)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 245)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1571)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 245)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2339)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 252)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 36)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 252)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 804)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 252)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1572)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 252)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2340)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 259)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 37)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 259)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 805)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 259)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1573)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 259)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2341)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 266)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 38)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 266)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 806)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 266)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1574)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 266)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2342)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 273)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 39)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 273)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 807)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 273)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1575)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 273)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2343)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 280)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 40)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 280)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 808)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 280)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1576)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 280)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2344)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 287)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 41)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 287)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 809)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 287)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1577)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 287)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2345)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 294)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 42)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 294)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 810)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 294)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1578)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 294)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2346)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 301)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 43)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 301)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 811)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 301)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1579)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 301)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2347)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 308)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 44)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 308)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 812)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 308)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1580)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 308)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2348)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 315)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 45)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 315)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 813)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 315)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1581)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 315)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2349)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 322)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 46)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 322)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 814)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 322)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1582)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 322)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2350)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 329)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 47)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 329)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 815)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 329)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 1583)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7) + 329)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*48) + 2351)]))
          }
        }
        compute[((((floordiv(blockIdx.x, 7)*3136) + (floordiv(threadIdx.x, 7)*49)) + (floormod(blockIdx.x, 7)*7)) + floormod(threadIdx.x, 7))] = max((conv2d_nchw_1[0] + bias[((floordiv(blockIdx.x, 7)*64) + floordiv(threadIdx.x, 7))]), 0f32)
        compute[(((((floordiv(blockIdx.x, 7)*3136) + (floordiv(threadIdx.x, 7)*49)) + (floormod(blockIdx.x, 7)*7)) + floormod(threadIdx.x, 7)) + 784)] = max((conv2d_nchw_1[1] + bias[(((floordiv(blockIdx.x, 7)*64) + floordiv(threadIdx.x, 7)) + 16)]), 0f32)
        compute[(((((floordiv(blockIdx.x, 7)*3136) + (floordiv(threadIdx.x, 7)*49)) + (floormod(blockIdx.x, 7)*7)) + floormod(threadIdx.x, 7)) + 1568)] = max((conv2d_nchw_1[2] + bias[(((floordiv(blockIdx.x, 7)*64) + floordiv(threadIdx.x, 7)) + 32)]), 0f32)
        compute[(((((floordiv(blockIdx.x, 7)*3136) + (floordiv(threadIdx.x, 7)*49)) + (floormod(blockIdx.x, 7)*7)) + floormod(threadIdx.x, 7)) + 2352)] = max((conv2d_nchw_1[3] + bias[(((floordiv(blockIdx.x, 7)*64) + floordiv(threadIdx.x, 7)) + 48)]), 0f32)
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 141-144

Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.

.. GENERATED FROM PYTHON SOURCE LINES 144-171

.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Execution time of this operator: 0.334 ms




.. GENERATED FROM PYTHON SOURCE LINES 172-177

Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

.. GENERATED FROM PYTHON SOURCE LINES 179-182

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.

.. GENERATED FROM PYTHON SOURCE LINES 182-189

.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=1)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=16)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=4)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=7)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=1)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=16)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=3)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=1)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=1)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=1)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=1)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=16)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=4)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=1)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=7)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=112)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=112)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 1024)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(112) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[4];
      __shared__ float pad_temp_shared[336];
      __shared__ float kernel_shared[3072];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 32; ++rc_outer_outer) {
        __syncthreads();
        pad_temp_shared[((int)threadIdx.x)] = ((((1 <= (((((int)threadIdx.x) % 21) / 7) + (((int)blockIdx.x) % 7))) && ((((((int)threadIdx.x) % 21) / 7) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[(((((rc_outer_outer * 784) + ((((int)threadIdx.x) / 21) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + (((int)threadIdx.x) % 21)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 112)] = ((((1 <= ((((int)blockIdx.x) % 7) + (((((int)threadIdx.x) / 7) + 1) % 3))) && (((((int)blockIdx.x) % 7) + (((((int)threadIdx.x) / 7) + 1) % 3)) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 112) / 21) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + ((((((int)threadIdx.x) / 7) + 1) % 3) * 7)) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 224)] = ((((1 <= ((((int)blockIdx.x) % 7) + (((((int)threadIdx.x) / 7) + 2) % 3))) && (((((int)blockIdx.x) % 7) + (((((int)threadIdx.x) / 7) + 2) % 3)) < 8)) && (1 <= (((int)threadIdx.x) % 7))) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 224) / 21) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + ((((((int)threadIdx.x) / 7) + 2) % 3) * 7)) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
        kernel_shared[((int)threadIdx.x)] = kernel[(((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3))];
        kernel_shared[(((int)threadIdx.x) + 112)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 112) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3))];
        kernel_shared[(((int)threadIdx.x) + 224)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 224) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3))];
        kernel_shared[(((int)threadIdx.x) + 336)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 32256)];
        kernel_shared[(((int)threadIdx.x) + 448)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 448) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3))];
        kernel_shared[(((int)threadIdx.x) + 560)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 560) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3))];
        kernel_shared[(((int)threadIdx.x) + 672)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 64512)];
        kernel_shared[(((int)threadIdx.x) + 784)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 784) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3))];
        kernel_shared[(((int)threadIdx.x) + 896)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 896) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3))];
        kernel_shared[(((int)threadIdx.x) + 1008)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 96768)];
        kernel_shared[(((int)threadIdx.x) + 1120)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1120) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3))];
        kernel_shared[(((int)threadIdx.x) + 1232)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1232) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3))];
        kernel_shared[(((int)threadIdx.x) + 1344)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 129024)];
        kernel_shared[(((int)threadIdx.x) + 1456)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1456) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3))];
        kernel_shared[(((int)threadIdx.x) + 1568)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1568) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3))];
        kernel_shared[(((int)threadIdx.x) + 1680)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 161280)];
        kernel_shared[(((int)threadIdx.x) + 1792)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1792) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3))];
        kernel_shared[(((int)threadIdx.x) + 1904)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1904) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3))];
        kernel_shared[(((int)threadIdx.x) + 2016)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 193536)];
        kernel_shared[(((int)threadIdx.x) + 2128)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2128) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3))];
        kernel_shared[(((int)threadIdx.x) + 2240)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2240) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3))];
        kernel_shared[(((int)threadIdx.x) + 2352)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 225792)];
        kernel_shared[(((int)threadIdx.x) + 2464)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2464) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3))];
        kernel_shared[(((int)threadIdx.x) + 2576)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2576) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3))];
        kernel_shared[(((int)threadIdx.x) + 2688)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 258048)];
        kernel_shared[(((int)threadIdx.x) + 2800)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2800) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3))];
        kernel_shared[(((int)threadIdx.x) + 2912)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2912) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3))];
        if (((int)threadIdx.x) < 48) {
          kernel_shared[(((int)threadIdx.x) + 3024)] = kernel[(((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 144)) + (((int)threadIdx.x) * 3)) + 290304)];
        }
        __syncthreads();
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[((((int)threadIdx.x) / 7) * 48)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 768)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1536)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2304)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 769)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1537)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2305)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 770)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1538)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2306)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 3)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 771)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1539)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2307)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 4)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 772)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1540)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2308)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 5)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 773)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1541)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2309)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 6)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 774)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1542)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2310)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 7)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 775)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1543)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2311)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 8)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 776)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1544)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2312)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 9)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 777)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1545)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2313)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 10)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 778)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1546)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2314)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 11)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 779)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1547)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2315)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 12)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 780)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1548)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2316)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 13)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 781)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1549)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2317)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 14)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 782)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1550)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2318)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 15)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 783)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1551)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2319)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 112)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 16)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 112)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 784)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 112)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1552)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 112)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2320)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 119)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 17)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 119)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 785)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 119)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1553)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 119)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2321)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 126)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 18)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 126)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 786)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 126)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1554)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 126)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2322)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 133)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 19)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 133)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 787)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 133)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1555)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 133)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2323)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 20)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 788)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1556)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2324)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 147)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 21)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 147)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 789)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 147)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1557)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 147)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2325)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 154)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 22)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 154)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 790)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 154)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1558)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 154)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2326)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 161)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 23)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 161)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 791)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 161)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1559)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 161)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2327)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 24)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 792)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1560)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2328)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 175)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 25)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 175)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 793)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 175)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1561)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 175)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2329)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 182)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 26)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 182)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 794)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 182)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1562)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 182)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2330)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 27)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 795)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1563)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2331)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 196)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 28)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 196)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 796)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 196)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1564)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 196)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2332)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 203)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 29)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 203)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 797)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 203)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1565)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 203)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2333)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 210)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 30)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 210)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 798)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 210)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1566)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 210)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2334)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 217)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 31)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 217)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 799)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 217)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1567)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 217)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2335)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 224)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 32)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 224)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 800)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 224)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1568)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 224)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2336)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 231)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 33)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 231)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 801)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 231)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1569)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 231)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2337)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 238)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 34)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 238)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 802)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 238)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1570)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 238)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2338)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 245)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 35)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 245)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 803)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 245)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1571)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 245)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2339)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 252)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 36)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 252)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 804)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 252)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1572)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 252)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2340)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 259)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 37)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 259)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 805)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 259)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1573)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 259)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2341)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 266)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 38)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 266)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 806)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 266)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1574)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 266)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2342)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 273)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 39)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 273)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 807)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 273)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1575)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 273)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2343)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 280)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 40)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 280)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 808)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 280)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1576)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 280)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2344)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 287)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 41)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 287)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 809)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 287)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1577)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 287)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2345)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 294)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 42)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 294)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 810)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 294)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1578)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 294)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2346)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 301)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 43)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 301)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 811)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 301)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1579)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 301)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2347)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 308)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 44)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 308)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 812)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 308)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1580)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 308)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2348)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 315)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 45)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 315)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 813)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 315)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1581)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 315)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2349)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 322)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 46)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 322)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 814)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 322)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1582)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 322)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2350)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 329)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 47)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 329)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 815)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 329)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1583)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 329)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2351)]));
        __syncthreads();
        pad_temp_shared[((int)threadIdx.x)] = (((1 <= (((((int)threadIdx.x) % 21) / 7) + (((int)blockIdx.x) % 7))) && ((((((int)threadIdx.x) % 21) / 7) + (((int)blockIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 784) + ((((int)threadIdx.x) / 21) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + (((int)threadIdx.x) % 21)) - 7)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 112)] = (((1 <= ((((int)blockIdx.x) % 7) + (((((int)threadIdx.x) / 7) + 1) % 3))) && (((((int)blockIdx.x) % 7) + (((((int)threadIdx.x) / 7) + 1) % 3)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 112) / 21) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + ((((((int)threadIdx.x) / 7) + 1) % 3) * 7)) + (((int)threadIdx.x) % 7)) - 7)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 224)] = (((1 <= ((((int)blockIdx.x) % 7) + (((((int)threadIdx.x) / 7) + 2) % 3))) && (((((int)blockIdx.x) % 7) + (((((int)threadIdx.x) / 7) + 2) % 3)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 224) / 21) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + ((((((int)threadIdx.x) / 7) + 2) % 3) * 7)) + (((int)threadIdx.x) % 7)) - 7)] : 0.000000e+00f);
        kernel_shared[((int)threadIdx.x)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 1)];
        kernel_shared[(((int)threadIdx.x) + 112)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 112) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + 1)];
        kernel_shared[(((int)threadIdx.x) + 224)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 224) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + 1)];
        kernel_shared[(((int)threadIdx.x) + 336)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 32257)];
        kernel_shared[(((int)threadIdx.x) + 448)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 448) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + 1)];
        kernel_shared[(((int)threadIdx.x) + 560)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 560) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + 1)];
        kernel_shared[(((int)threadIdx.x) + 672)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 64513)];
        kernel_shared[(((int)threadIdx.x) + 784)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 784) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + 1)];
        kernel_shared[(((int)threadIdx.x) + 896)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 896) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + 1)];
        kernel_shared[(((int)threadIdx.x) + 1008)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 96769)];
        kernel_shared[(((int)threadIdx.x) + 1120)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1120) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + 1)];
        kernel_shared[(((int)threadIdx.x) + 1232)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1232) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + 1)];
        kernel_shared[(((int)threadIdx.x) + 1344)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 129025)];
        kernel_shared[(((int)threadIdx.x) + 1456)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1456) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + 1)];
        kernel_shared[(((int)threadIdx.x) + 1568)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1568) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + 1)];
        kernel_shared[(((int)threadIdx.x) + 1680)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 161281)];
        kernel_shared[(((int)threadIdx.x) + 1792)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1792) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + 1)];
        kernel_shared[(((int)threadIdx.x) + 1904)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1904) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + 1)];
        kernel_shared[(((int)threadIdx.x) + 2016)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 193537)];
        kernel_shared[(((int)threadIdx.x) + 2128)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2128) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + 1)];
        kernel_shared[(((int)threadIdx.x) + 2240)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2240) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + 1)];
        kernel_shared[(((int)threadIdx.x) + 2352)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 225793)];
        kernel_shared[(((int)threadIdx.x) + 2464)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2464) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + 1)];
        kernel_shared[(((int)threadIdx.x) + 2576)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2576) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + 1)];
        kernel_shared[(((int)threadIdx.x) + 2688)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 258049)];
        kernel_shared[(((int)threadIdx.x) + 2800)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2800) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + 1)];
        kernel_shared[(((int)threadIdx.x) + 2912)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2912) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + 1)];
        if (((int)threadIdx.x) < 48) {
          kernel_shared[(((int)threadIdx.x) + 3024)] = kernel[(((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 144)) + (((int)threadIdx.x) * 3)) + 290305)];
        }
        __syncthreads();
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[((((int)threadIdx.x) / 7) * 48)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 768)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1536)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2304)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 769)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1537)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2305)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 770)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1538)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2306)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 3)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 771)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1539)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2307)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 4)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 772)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1540)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2308)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 5)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 773)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1541)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2309)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 6)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 774)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1542)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2310)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 7)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 775)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1543)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2311)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 8)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 776)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1544)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2312)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 9)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 777)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1545)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2313)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 10)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 778)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1546)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2314)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 11)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 779)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1547)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2315)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 12)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 780)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1548)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2316)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 13)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 781)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1549)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2317)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 14)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 782)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1550)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2318)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 15)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 783)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1551)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2319)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 112)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 16)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 112)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 784)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 112)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1552)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 112)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2320)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 119)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 17)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 119)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 785)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 119)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1553)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 119)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2321)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 126)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 18)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 126)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 786)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 126)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1554)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 126)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2322)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 133)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 19)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 133)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 787)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 133)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1555)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 133)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2323)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 20)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 788)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1556)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2324)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 147)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 21)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 147)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 789)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 147)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1557)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 147)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2325)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 154)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 22)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 154)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 790)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 154)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1558)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 154)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2326)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 161)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 23)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 161)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 791)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 161)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1559)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 161)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2327)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 24)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 792)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1560)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2328)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 175)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 25)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 175)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 793)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 175)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1561)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 175)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2329)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 182)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 26)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 182)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 794)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 182)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1562)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 182)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2330)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 27)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 795)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1563)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2331)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 196)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 28)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 196)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 796)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 196)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1564)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 196)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2332)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 203)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 29)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 203)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 797)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 203)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1565)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 203)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2333)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 210)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 30)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 210)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 798)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 210)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1566)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 210)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2334)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 217)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 31)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 217)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 799)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 217)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1567)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 217)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2335)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 224)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 32)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 224)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 800)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 224)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1568)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 224)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2336)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 231)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 33)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 231)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 801)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 231)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1569)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 231)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2337)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 238)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 34)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 238)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 802)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 238)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1570)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 238)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2338)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 245)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 35)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 245)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 803)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 245)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1571)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 245)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2339)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 252)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 36)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 252)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 804)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 252)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1572)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 252)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2340)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 259)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 37)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 259)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 805)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 259)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1573)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 259)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2341)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 266)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 38)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 266)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 806)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 266)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1574)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 266)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2342)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 273)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 39)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 273)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 807)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 273)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1575)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 273)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2343)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 280)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 40)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 280)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 808)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 280)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1576)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 280)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2344)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 287)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 41)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 287)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 809)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 287)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1577)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 287)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2345)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 294)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 42)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 294)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 810)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 294)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1578)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 294)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2346)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 301)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 43)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 301)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 811)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 301)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1579)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 301)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2347)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 308)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 44)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 308)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 812)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 308)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1580)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 308)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2348)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 315)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 45)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 315)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 813)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 315)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1581)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 315)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2349)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 322)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 46)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 322)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 814)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 322)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1582)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 322)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2350)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 329)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 47)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 329)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 815)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 329)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1583)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 329)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2351)]));
        __syncthreads();
        pad_temp_shared[((int)threadIdx.x)] = ((((1 <= (((((int)threadIdx.x) % 21) / 7) + (((int)blockIdx.x) % 7))) && ((((((int)threadIdx.x) % 21) / 7) + (((int)blockIdx.x) % 7)) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[(((((rc_outer_outer * 784) + ((((int)threadIdx.x) / 21) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + (((int)threadIdx.x) % 21)) - 6)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 112)] = ((((1 <= ((((int)blockIdx.x) % 7) + (((((int)threadIdx.x) / 7) + 1) % 3))) && (((((int)blockIdx.x) % 7) + (((((int)threadIdx.x) / 7) + 1) % 3)) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 112) / 21) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + ((((((int)threadIdx.x) / 7) + 1) % 3) * 7)) + (((int)threadIdx.x) % 7)) - 6)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 224)] = ((((1 <= ((((int)blockIdx.x) % 7) + (((((int)threadIdx.x) / 7) + 2) % 3))) && (((((int)blockIdx.x) % 7) + (((((int)threadIdx.x) / 7) + 2) % 3)) < 8)) && ((((int)threadIdx.x) % 7) < 6)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 224) / 21) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + ((((((int)threadIdx.x) / 7) + 2) % 3) * 7)) + (((int)threadIdx.x) % 7)) - 6)] : 0.000000e+00f);
        kernel_shared[((int)threadIdx.x)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 2)];
        kernel_shared[(((int)threadIdx.x) + 112)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 112) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + 2)];
        kernel_shared[(((int)threadIdx.x) + 224)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 224) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + 2)];
        kernel_shared[(((int)threadIdx.x) + 336)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 32258)];
        kernel_shared[(((int)threadIdx.x) + 448)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 448) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + 2)];
        kernel_shared[(((int)threadIdx.x) + 560)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 560) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + 2)];
        kernel_shared[(((int)threadIdx.x) + 672)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 64514)];
        kernel_shared[(((int)threadIdx.x) + 784)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 784) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + 2)];
        kernel_shared[(((int)threadIdx.x) + 896)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 896) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + 2)];
        kernel_shared[(((int)threadIdx.x) + 1008)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 96770)];
        kernel_shared[(((int)threadIdx.x) + 1120)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1120) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + 2)];
        kernel_shared[(((int)threadIdx.x) + 1232)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1232) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + 2)];
        kernel_shared[(((int)threadIdx.x) + 1344)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 129026)];
        kernel_shared[(((int)threadIdx.x) + 1456)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1456) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + 2)];
        kernel_shared[(((int)threadIdx.x) + 1568)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1568) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + 2)];
        kernel_shared[(((int)threadIdx.x) + 1680)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 161282)];
        kernel_shared[(((int)threadIdx.x) + 1792)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1792) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + 2)];
        kernel_shared[(((int)threadIdx.x) + 1904)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1904) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + 2)];
        kernel_shared[(((int)threadIdx.x) + 2016)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 193538)];
        kernel_shared[(((int)threadIdx.x) + 2128)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2128) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + 2)];
        kernel_shared[(((int)threadIdx.x) + 2240)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2240) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + 2)];
        kernel_shared[(((int)threadIdx.x) + 2352)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 225794)];
        kernel_shared[(((int)threadIdx.x) + 2464)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2464) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + 2)];
        kernel_shared[(((int)threadIdx.x) + 2576)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2576) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + 2)];
        kernel_shared[(((int)threadIdx.x) + 2688)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 258050)];
        kernel_shared[(((int)threadIdx.x) + 2800)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2800) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 16) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + 2)];
        kernel_shared[(((int)threadIdx.x) + 2912)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2912) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 32) % 48) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + 2)];
        if (((int)threadIdx.x) < 48) {
          kernel_shared[(((int)threadIdx.x) + 3024)] = kernel[(((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 144)) + (((int)threadIdx.x) * 3)) + 290306)];
        }
        __syncthreads();
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[((((int)threadIdx.x) / 7) * 48)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 768)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1536)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2304)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 769)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1537)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2305)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 770)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1538)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2306)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 3)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 771)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1539)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2307)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 4)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 772)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1540)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2308)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 5)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 773)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1541)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2309)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 6)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 774)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1542)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2310)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 7)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 775)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1543)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2311)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 8)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 776)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1544)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2312)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 9)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 777)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1545)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2313)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 10)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 778)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1546)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2314)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 11)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 779)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1547)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2315)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 12)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 780)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1548)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2316)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 13)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 781)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1549)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2317)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 14)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 782)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1550)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2318)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 15)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 783)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1551)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2319)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 112)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 16)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 112)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 784)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 112)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1552)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 112)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2320)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 119)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 17)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 119)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 785)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 119)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1553)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 119)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2321)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 126)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 18)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 126)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 786)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 126)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1554)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 126)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2322)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 133)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 19)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 133)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 787)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 133)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1555)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 133)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2323)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 20)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 788)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1556)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2324)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 147)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 21)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 147)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 789)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 147)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1557)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 147)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2325)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 154)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 22)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 154)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 790)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 154)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1558)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 154)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2326)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 161)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 23)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 161)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 791)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 161)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1559)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 161)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2327)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 24)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 792)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1560)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 168)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2328)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 175)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 25)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 175)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 793)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 175)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1561)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 175)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2329)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 182)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 26)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 182)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 794)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 182)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1562)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 182)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2330)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 27)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 795)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1563)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2331)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 196)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 28)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 196)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 796)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 196)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1564)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 196)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2332)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 203)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 29)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 203)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 797)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 203)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1565)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 203)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2333)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 210)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 30)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 210)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 798)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 210)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1566)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 210)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2334)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 217)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 31)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 217)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 799)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 217)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1567)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 217)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2335)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 224)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 32)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 224)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 800)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 224)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1568)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 224)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2336)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 231)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 33)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 231)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 801)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 231)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1569)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 231)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2337)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 238)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 34)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 238)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 802)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 238)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1570)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 238)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2338)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 245)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 35)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 245)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 803)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 245)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1571)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 245)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2339)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 252)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 36)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 252)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 804)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 252)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1572)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 252)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2340)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 259)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 37)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 259)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 805)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 259)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1573)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 259)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2341)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 266)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 38)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 266)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 806)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 266)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1574)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 266)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2342)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 273)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 39)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 273)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 807)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 273)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1575)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 273)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2343)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 280)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 40)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 280)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 808)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 280)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1576)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 280)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2344)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 287)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 41)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 287)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 809)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 287)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1577)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 287)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2345)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 294)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 42)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 294)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 810)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 294)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1578)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 294)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2346)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 301)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 43)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 301)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 811)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 301)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1579)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 301)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2347)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 308)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 44)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 308)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 812)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 308)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1580)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 308)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2348)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 315)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 45)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 315)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 813)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 315)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1581)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 315)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2349)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 322)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 46)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 322)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 814)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 322)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1582)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 322)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2350)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 329)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 47)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 329)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 815)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 329)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 1583)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 329)] * kernel_shared[(((((int)threadIdx.x) / 7) * 48) + 2351)]));
      }
      compute[(((((((int)blockIdx.x) / 7) * 3136) + ((((int)threadIdx.x) / 7) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + (((int)threadIdx.x) % 7))] = max((conv2d_nchw[0] + bias[(((((int)blockIdx.x) / 7) * 64) + (((int)threadIdx.x) / 7))]), 0.000000e+00f);
      compute[((((((((int)blockIdx.x) / 7) * 3136) + ((((int)threadIdx.x) / 7) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + (((int)threadIdx.x) % 7)) + 784)] = max((conv2d_nchw[1] + bias[((((((int)blockIdx.x) / 7) * 64) + (((int)threadIdx.x) / 7)) + 16)]), 0.000000e+00f);
      compute[((((((((int)blockIdx.x) / 7) * 3136) + ((((int)threadIdx.x) / 7) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + (((int)threadIdx.x) % 7)) + 1568)] = max((conv2d_nchw[2] + bias[((((((int)blockIdx.x) / 7) * 64) + (((int)threadIdx.x) / 7)) + 32)]), 0.000000e+00f);
      compute[((((((((int)blockIdx.x) / 7) * 3136) + ((((int)threadIdx.x) / 7) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + (((int)threadIdx.x) % 7)) + 2352)] = max((conv2d_nchw[3] + bias[((((((int)blockIdx.x) / 7) * 64) + (((int)threadIdx.x) / 7)) + 48)]), 0.000000e+00f);
    }






.. GENERATED FROM PYTHON SOURCE LINES 190-194

A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.

.. GENERATED FROM PYTHON SOURCE LINES 194-216

.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Resume search:
    /venv/apache-tvm-py3.7/lib/python3.7/site-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 5 minutes  15.824 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
