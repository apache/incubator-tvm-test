
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.

.. GENERATED FROM PYTHON SOURCE LINES 39-48

.. code-block:: default



    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python








.. GENERATED FROM PYTHON SOURCE LINES 54-59

Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.

.. GENERATED FROM PYTHON SOURCE LINES 59-71

.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]









.. GENERATED FROM PYTHON SOURCE LINES 72-75

Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.

.. GENERATED FROM PYTHON SOURCE LINES 75-88

.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)





.. GENERATED FROM PYTHON SOURCE LINES 89-106

Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.

.. GENERATED FROM PYTHON SOURCE LINES 106-116

.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Get devices for measurement successfully!




.. GENERATED FROM PYTHON SOURCE LINES 117-123

Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.

.. GENERATED FROM PYTHON SOURCE LINES 123-132

.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx








.. GENERATED FROM PYTHON SOURCE LINES 133-136

We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.

.. GENERATED FROM PYTHON SOURCE LINES 136-140

.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Lowered TIR:
    @main = primfn(data_1: handle, kernel_1: handle, bias_1: handle, compute_1: handle) -> ()
      attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
      buffers = {data: Buffer(data_2: Pointer(float32), float32, [25088], []),
                 kernel: Buffer(kernel_2: Pointer(float32), float32, [2359296], []),
                 bias: Buffer(bias_2: Pointer(float32), float32, [512], []),
                 compute: Buffer(compute_2: Pointer(float32), float32, [25088], [])}
      buffer_map = {data_1: data, kernel_1: kernel, bias_1: bias, compute_1: compute}
      preflattened_buffer_map = {data_1: data_3: Buffer(data_2, float32, [1, 512, 7, 7], []), kernel_1: kernel_3: Buffer(kernel_2, float32, [512, 512, 3, 3], []), bias_1: bias_3: Buffer(bias_2, float32, [1, 512, 1, 1], []), compute_1: compute_3: Buffer(compute_2, float32, [1, 512, 7, 7], [])} {
      attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = 64;
      allocate(conv2d_nchw: Pointer(local float32), float32, [8]), storage_scope = local;
      allocate(pad_temp.shared: Pointer(shared float32), float32, [4032]), storage_scope = shared;
      allocate(kernel.shared: Pointer(shared float32), float32, [1536]), storage_scope = shared;
      attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
        conv2d_nchw_1: Buffer(conv2d_nchw, float32, [8], [], scope="local", align=32)[0] = 0f32
        conv2d_nchw_1[1] = 0f32
        conv2d_nchw_1[2] = 0f32
        conv2d_nchw_1[3] = 0f32
        conv2d_nchw_1[4] = 0f32
        conv2d_nchw_1[5] = 0f32
        conv2d_nchw_1[6] = 0f32
        conv2d_nchw_1[7] = 0f32
        for (rc.outer.outer: int32, 0, 8) {
          for (rx.outer.outer: int32, 0, 3) {
            let cse_var_2: int32 = (rc.outer.outer*3136)
            let cse_var_1: int32 = (rc.outer.outer*576)
             {
              attr [IterVar(threadIdx.x_1: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1: Buffer(pad_temp.shared, float32, [4032], [], scope="shared")[threadIdx.x_1] = @tir.if_then_else((((7 <= threadIdx.x_1) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((cse_var_2 + threadIdx.x_1) + rx.outer.outer) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 49)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 7), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 7), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 49), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 7), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 98)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 5), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 5), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 98), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 5), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 147)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 3), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 3), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 147), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 3), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 196)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 196), 63)*49)) + ((floordiv(threadIdx.x_1, 7) + 1)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 245)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 8), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 8), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 245), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 8), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 294)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 6), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 6), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 294), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 6), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 343)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 4), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 4), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 343), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 4), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 392)] = @tir.if_then_else((((threadIdx.x_1 < 42) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 392), 63)*49)) + ((floordiv(threadIdx.x_1, 7) + 2)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 441)] = @tir.if_then_else((((7 <= threadIdx.x_1) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((cse_var_2 + threadIdx.x_1) + rx.outer.outer) + 335)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 490)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 7), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 7), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 490), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 7), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 539)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 5), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 5), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 539), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 5), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 588)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 3), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 3), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 588), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 3), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 637)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 637), 63)*49)) + ((floordiv(threadIdx.x_1, 7) + 1)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 686)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 8), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 8), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 686), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 8), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 735)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 6), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 6), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 735), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 6), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 784)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 4), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 4), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 784), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 4), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 833)] = @tir.if_then_else((((threadIdx.x_1 < 42) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 833), 63)*49)) + ((floordiv(threadIdx.x_1, 7) + 2)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 882)] = @tir.if_then_else((((7 <= threadIdx.x_1) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((cse_var_2 + threadIdx.x_1) + rx.outer.outer) + 678)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 931)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 7), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 7), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 931), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 7), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 980)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 5), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 5), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 980), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 5), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1029)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 3), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 3), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 1029), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 3), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1078)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 1078), 63)*49)) + ((floordiv(threadIdx.x_1, 7) + 1)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1127)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 8), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 8), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 1127), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 8), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1176)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 6), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 6), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 1176), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 6), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1225)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 4), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 4), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 1225), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 4), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1274)] = @tir.if_then_else((((threadIdx.x_1 < 42) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 1274), 63)*49)) + ((floordiv(threadIdx.x_1, 7) + 2)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1323)] = @tir.if_then_else((((7 <= threadIdx.x_1) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((cse_var_2 + threadIdx.x_1) + rx.outer.outer) + 1021)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1372)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 7), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 7), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 1372), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 7), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1421)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 5), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 5), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 1421), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 5), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1470)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 3), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 3), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 1470), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 3), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1519)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 1519), 63)*49)) + ((floordiv(threadIdx.x_1, 7) + 1)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1568)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 8), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 8), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 1568), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 8), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1617)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 6), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 6), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 1617), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 6), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1666)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 4), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 4), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 1666), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 4), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1715)] = @tir.if_then_else((((threadIdx.x_1 < 42) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 1715), 63)*49)) + ((floordiv(threadIdx.x_1, 7) + 2)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1764)] = @tir.if_then_else((((7 <= threadIdx.x_1) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((cse_var_2 + threadIdx.x_1) + rx.outer.outer) + 1364)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1813)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 7), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 7), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 1813), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 7), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1862)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 5), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 5), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 1862), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 5), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1911)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 3), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 3), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 1911), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 3), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1960)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 1960), 63)*49)) + ((floordiv(threadIdx.x_1, 7) + 1)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2009)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 8), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 8), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 2009), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 8), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2058)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 6), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 6), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 2058), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 6), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2107)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 4), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 4), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 2107), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 4), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2156)] = @tir.if_then_else((((threadIdx.x_1 < 42) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 2156), 63)*49)) + ((floordiv(threadIdx.x_1, 7) + 2)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2205)] = @tir.if_then_else((((7 <= threadIdx.x_1) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((cse_var_2 + threadIdx.x_1) + rx.outer.outer) + 1707)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2254)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 7), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 7), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 2254), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 7), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2303)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 5), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 5), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 2303), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 5), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2352)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 3), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 3), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 2352), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 3), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2401)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 2401), 63)*49)) + ((floordiv(threadIdx.x_1, 7) + 1)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2450)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 8), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 8), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 2450), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 8), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2499)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 6), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 6), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 2499), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 6), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2548)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 4), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 4), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 2548), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 4), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2597)] = @tir.if_then_else((((threadIdx.x_1 < 42) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 2597), 63)*49)) + ((floordiv(threadIdx.x_1, 7) + 2)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2646)] = @tir.if_then_else((((7 <= threadIdx.x_1) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((cse_var_2 + threadIdx.x_1) + rx.outer.outer) + 2050)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2695)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 7), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 7), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 2695), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 7), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2744)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 5), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 5), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 2744), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 5), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2793)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 3), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 3), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 2793), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 3), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2842)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 2842), 63)*49)) + ((floordiv(threadIdx.x_1, 7) + 1)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2891)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 8), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 8), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 2891), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 8), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2940)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 6), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 6), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 2940), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 6), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2989)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 4), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 4), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 2989), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 4), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3038)] = @tir.if_then_else((((threadIdx.x_1 < 42) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 3038), 63)*49)) + ((floordiv(threadIdx.x_1, 7) + 2)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3087)] = @tir.if_then_else((((7 <= threadIdx.x_1) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((cse_var_2 + threadIdx.x_1) + rx.outer.outer) + 2393)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3136)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 7), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 7), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 3136), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 7), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3185)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 5), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 5), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 3185), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 5), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3234)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 3), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 3), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 3234), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 3), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3283)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 3283), 63)*49)) + ((floordiv(threadIdx.x_1, 7) + 1)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3332)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 8), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 8), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 3332), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 8), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3381)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 6), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 6), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 3381), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 6), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3430)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 4), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 4), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 3430), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 4), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3479)] = @tir.if_then_else((((threadIdx.x_1 < 42) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 3479), 63)*49)) + ((floordiv(threadIdx.x_1, 7) + 2)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3528)] = @tir.if_then_else((((7 <= threadIdx.x_1) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((cse_var_2 + threadIdx.x_1) + rx.outer.outer) + 2736)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3577)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 7), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 7), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 3577), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 7), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3626)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 5), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 5), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 3626), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 5), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3675)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 3), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 3), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 3675), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 3), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3724)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 3724), 63)*49)) + ((floordiv(threadIdx.x_1, 7) + 1)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3773)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 8), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 8), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 3773), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 8), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3822)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 6), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 6), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 3822), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 6), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3871)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 4), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 4), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 3871), 63)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 4), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3920)] = @tir.if_then_else((((threadIdx.x_1 < 42) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((threadIdx.x_1 + 3920), 63)*49)) + ((floordiv(threadIdx.x_1, 7) + 2)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3969)] = @tir.if_then_else((((7 <= threadIdx.x_1) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((cse_var_2 + threadIdx.x_1) + rx.outer.outer) + 3079)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              if @tir.likely((threadIdx.x_1 < 14), dtype=bool) {
                pad_temp.shared_1[(threadIdx.x_1 + 4018)] = @tir.if_then_else((((threadIdx.x_1 < 7) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 4018), 63)*49)) + rx.outer.outer) + threadIdx.x_1) + 41)], 0f32, dtype=float32)
              }
              attr [IterVar(threadIdx.x_2: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1: Buffer(kernel.shared, float32, [1536], [], scope="shared")[threadIdx.x_2] = kernel[((((blockIdx.x*36864) + cse_var_1) + (threadIdx.x_2*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 49)] = kernel[(((((blockIdx.x*36864) + cse_var_1) + (floordiv((threadIdx.x_2 + 49), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 98)] = kernel[(((((blockIdx.x*36864) + cse_var_1) + (floordiv((threadIdx.x_2 + 98), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 147)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 147), 192)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 49), 64)*9)) + (floormod(threadIdx.x_2, 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 196)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 196), 192)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 4), 192), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 245)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 245), 192)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 53), 192), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 294)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 294), 192)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 34)*9)) + (floormod(threadIdx.x_2, 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 343)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 343), 192)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 151), 192), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 392)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 392), 192)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 8), 192), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 441)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 441), 192)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 19)*9)) + (floormod(threadIdx.x_2, 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 490)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 490), 192)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 106), 192), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 539)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 539), 192)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 155), 192), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 588)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 588), 192)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 4)*9)) + (floormod(threadIdx.x_2, 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 637)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 637), 192)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 61), 192), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 686)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 686), 192)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 110), 192), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 735)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 735), 192)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 53), 64)*9)) + (floormod(threadIdx.x_2, 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 784)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 784), 192)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 192), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 833)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 833), 192)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 65), 192), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 882)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 882), 192)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 38)*9)) + (floormod(threadIdx.x_2, 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 931)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 931), 192)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 163), 192), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 980)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 980), 192)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 20), 192), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 1029)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1029), 192)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 23)*9)) + (floormod(threadIdx.x_2, 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 1078)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1078), 192)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 118), 192), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 1127)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1127), 192)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 167), 192), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 1176)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1176), 192)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 8)*9)) + (floormod(threadIdx.x_2, 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 1225)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1225), 192)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 73), 192), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 1274)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1274), 192)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 122), 192), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 1323)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1323), 192)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 57), 64)*9)) + (floormod(threadIdx.x_2, 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 1372)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1372), 192)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 28), 192), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 1421)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1421), 192)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 77), 192), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 1470)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1470), 192)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 42)*9)) + (floormod(threadIdx.x_2, 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              if @tir.likely((threadIdx.x_2 < 17), dtype=bool) {
                kernel.shared_1[(threadIdx.x_2 + 1519)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1519), 192)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 175), 192), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + rx.outer.outer)]
              }
              for (rc.outer.inner: int32, 0, 2) {
                for (ff.outer.inner: int32, 0, 2) {
                  let cse_var_7: int32 = (ff.outer.inner*4)
                  let cse_var_6: int32 = (cse_var_7 + 3)
                  let cse_var_5: int32 = (cse_var_7 + 2)
                  let cse_var_4: int32 = (cse_var_7 + 1)
                  let cse_var_3: int32 = ((ff.outer.inner*768) + (rc.outer.inner*96))
                   {
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((rc.outer.inner*2016) + threadIdx.x)]*kernel.shared_1[cse_var_3]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((rc.outer.inner*2016) + threadIdx.x)]*kernel.shared_1[(cse_var_3 + 192)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((rc.outer.inner*2016) + threadIdx.x)]*kernel.shared_1[(cse_var_3 + 384)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[((rc.outer.inner*2016) + threadIdx.x)]*kernel.shared_1[(cse_var_3 + 576)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 7)]*kernel.shared_1[(cse_var_3 + 1)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 7)]*kernel.shared_1[(cse_var_3 + 193)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 7)]*kernel.shared_1[(cse_var_3 + 385)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 7)]*kernel.shared_1[(cse_var_3 + 577)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 14)]*kernel.shared_1[(cse_var_3 + 2)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 14)]*kernel.shared_1[(cse_var_3 + 194)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 14)]*kernel.shared_1[(cse_var_3 + 386)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 14)]*kernel.shared_1[(cse_var_3 + 578)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 63)]*kernel.shared_1[(cse_var_3 + 3)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 63)]*kernel.shared_1[(cse_var_3 + 195)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 63)]*kernel.shared_1[(cse_var_3 + 387)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 63)]*kernel.shared_1[(cse_var_3 + 579)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 70)]*kernel.shared_1[(cse_var_3 + 4)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 70)]*kernel.shared_1[(cse_var_3 + 196)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 70)]*kernel.shared_1[(cse_var_3 + 388)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 70)]*kernel.shared_1[(cse_var_3 + 580)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 77)]*kernel.shared_1[(cse_var_3 + 5)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 77)]*kernel.shared_1[(cse_var_3 + 197)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 77)]*kernel.shared_1[(cse_var_3 + 389)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 77)]*kernel.shared_1[(cse_var_3 + 581)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 126)]*kernel.shared_1[(cse_var_3 + 6)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 126)]*kernel.shared_1[(cse_var_3 + 198)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 126)]*kernel.shared_1[(cse_var_3 + 390)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 126)]*kernel.shared_1[(cse_var_3 + 582)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 133)]*kernel.shared_1[(cse_var_3 + 7)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 133)]*kernel.shared_1[(cse_var_3 + 199)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 133)]*kernel.shared_1[(cse_var_3 + 391)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 133)]*kernel.shared_1[(cse_var_3 + 583)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 140)]*kernel.shared_1[(cse_var_3 + 8)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 140)]*kernel.shared_1[(cse_var_3 + 200)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 140)]*kernel.shared_1[(cse_var_3 + 392)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 140)]*kernel.shared_1[(cse_var_3 + 584)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 189)]*kernel.shared_1[(cse_var_3 + 9)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 189)]*kernel.shared_1[(cse_var_3 + 201)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 189)]*kernel.shared_1[(cse_var_3 + 393)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 189)]*kernel.shared_1[(cse_var_3 + 585)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 196)]*kernel.shared_1[(cse_var_3 + 10)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 196)]*kernel.shared_1[(cse_var_3 + 202)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 196)]*kernel.shared_1[(cse_var_3 + 394)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 196)]*kernel.shared_1[(cse_var_3 + 586)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 203)]*kernel.shared_1[(cse_var_3 + 11)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 203)]*kernel.shared_1[(cse_var_3 + 203)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 203)]*kernel.shared_1[(cse_var_3 + 395)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 203)]*kernel.shared_1[(cse_var_3 + 587)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 252)]*kernel.shared_1[(cse_var_3 + 12)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 252)]*kernel.shared_1[(cse_var_3 + 204)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 252)]*kernel.shared_1[(cse_var_3 + 396)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 252)]*kernel.shared_1[(cse_var_3 + 588)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 259)]*kernel.shared_1[(cse_var_3 + 13)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 259)]*kernel.shared_1[(cse_var_3 + 205)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 259)]*kernel.shared_1[(cse_var_3 + 397)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 259)]*kernel.shared_1[(cse_var_3 + 589)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 266)]*kernel.shared_1[(cse_var_3 + 14)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 266)]*kernel.shared_1[(cse_var_3 + 206)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 266)]*kernel.shared_1[(cse_var_3 + 398)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 266)]*kernel.shared_1[(cse_var_3 + 590)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 315)]*kernel.shared_1[(cse_var_3 + 15)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 315)]*kernel.shared_1[(cse_var_3 + 207)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 315)]*kernel.shared_1[(cse_var_3 + 399)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 315)]*kernel.shared_1[(cse_var_3 + 591)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 322)]*kernel.shared_1[(cse_var_3 + 16)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 322)]*kernel.shared_1[(cse_var_3 + 208)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 322)]*kernel.shared_1[(cse_var_3 + 400)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 322)]*kernel.shared_1[(cse_var_3 + 592)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 329)]*kernel.shared_1[(cse_var_3 + 17)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 329)]*kernel.shared_1[(cse_var_3 + 209)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 329)]*kernel.shared_1[(cse_var_3 + 401)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 329)]*kernel.shared_1[(cse_var_3 + 593)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 378)]*kernel.shared_1[(cse_var_3 + 18)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 378)]*kernel.shared_1[(cse_var_3 + 210)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 378)]*kernel.shared_1[(cse_var_3 + 402)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 378)]*kernel.shared_1[(cse_var_3 + 594)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 385)]*kernel.shared_1[(cse_var_3 + 19)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 385)]*kernel.shared_1[(cse_var_3 + 211)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 385)]*kernel.shared_1[(cse_var_3 + 403)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 385)]*kernel.shared_1[(cse_var_3 + 595)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 392)]*kernel.shared_1[(cse_var_3 + 20)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 392)]*kernel.shared_1[(cse_var_3 + 212)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 392)]*kernel.shared_1[(cse_var_3 + 404)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 392)]*kernel.shared_1[(cse_var_3 + 596)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 441)]*kernel.shared_1[(cse_var_3 + 21)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 441)]*kernel.shared_1[(cse_var_3 + 213)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 441)]*kernel.shared_1[(cse_var_3 + 405)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 441)]*kernel.shared_1[(cse_var_3 + 597)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 448)]*kernel.shared_1[(cse_var_3 + 22)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 448)]*kernel.shared_1[(cse_var_3 + 214)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 448)]*kernel.shared_1[(cse_var_3 + 406)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 448)]*kernel.shared_1[(cse_var_3 + 598)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 455)]*kernel.shared_1[(cse_var_3 + 23)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 455)]*kernel.shared_1[(cse_var_3 + 215)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 455)]*kernel.shared_1[(cse_var_3 + 407)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 455)]*kernel.shared_1[(cse_var_3 + 599)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 504)]*kernel.shared_1[(cse_var_3 + 24)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 504)]*kernel.shared_1[(cse_var_3 + 216)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 504)]*kernel.shared_1[(cse_var_3 + 408)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 504)]*kernel.shared_1[(cse_var_3 + 600)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 511)]*kernel.shared_1[(cse_var_3 + 25)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 511)]*kernel.shared_1[(cse_var_3 + 217)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 511)]*kernel.shared_1[(cse_var_3 + 409)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 511)]*kernel.shared_1[(cse_var_3 + 601)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 518)]*kernel.shared_1[(cse_var_3 + 26)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 518)]*kernel.shared_1[(cse_var_3 + 218)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 518)]*kernel.shared_1[(cse_var_3 + 410)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 518)]*kernel.shared_1[(cse_var_3 + 602)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 567)]*kernel.shared_1[(cse_var_3 + 27)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 567)]*kernel.shared_1[(cse_var_3 + 219)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 567)]*kernel.shared_1[(cse_var_3 + 411)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 567)]*kernel.shared_1[(cse_var_3 + 603)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 574)]*kernel.shared_1[(cse_var_3 + 28)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 574)]*kernel.shared_1[(cse_var_3 + 220)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 574)]*kernel.shared_1[(cse_var_3 + 412)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 574)]*kernel.shared_1[(cse_var_3 + 604)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 581)]*kernel.shared_1[(cse_var_3 + 29)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 581)]*kernel.shared_1[(cse_var_3 + 221)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 581)]*kernel.shared_1[(cse_var_3 + 413)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 581)]*kernel.shared_1[(cse_var_3 + 605)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 630)]*kernel.shared_1[(cse_var_3 + 30)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 630)]*kernel.shared_1[(cse_var_3 + 222)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 630)]*kernel.shared_1[(cse_var_3 + 414)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 630)]*kernel.shared_1[(cse_var_3 + 606)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 637)]*kernel.shared_1[(cse_var_3 + 31)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 637)]*kernel.shared_1[(cse_var_3 + 223)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 637)]*kernel.shared_1[(cse_var_3 + 415)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 637)]*kernel.shared_1[(cse_var_3 + 607)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 644)]*kernel.shared_1[(cse_var_3 + 32)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 644)]*kernel.shared_1[(cse_var_3 + 224)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 644)]*kernel.shared_1[(cse_var_3 + 416)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 644)]*kernel.shared_1[(cse_var_3 + 608)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 693)]*kernel.shared_1[(cse_var_3 + 33)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 693)]*kernel.shared_1[(cse_var_3 + 225)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 693)]*kernel.shared_1[(cse_var_3 + 417)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 693)]*kernel.shared_1[(cse_var_3 + 609)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 700)]*kernel.shared_1[(cse_var_3 + 34)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 700)]*kernel.shared_1[(cse_var_3 + 226)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 700)]*kernel.shared_1[(cse_var_3 + 418)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 700)]*kernel.shared_1[(cse_var_3 + 610)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 707)]*kernel.shared_1[(cse_var_3 + 35)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 707)]*kernel.shared_1[(cse_var_3 + 227)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 707)]*kernel.shared_1[(cse_var_3 + 419)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 707)]*kernel.shared_1[(cse_var_3 + 611)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 756)]*kernel.shared_1[(cse_var_3 + 36)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 756)]*kernel.shared_1[(cse_var_3 + 228)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 756)]*kernel.shared_1[(cse_var_3 + 420)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 756)]*kernel.shared_1[(cse_var_3 + 612)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 763)]*kernel.shared_1[(cse_var_3 + 37)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 763)]*kernel.shared_1[(cse_var_3 + 229)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 763)]*kernel.shared_1[(cse_var_3 + 421)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 763)]*kernel.shared_1[(cse_var_3 + 613)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 770)]*kernel.shared_1[(cse_var_3 + 38)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 770)]*kernel.shared_1[(cse_var_3 + 230)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 770)]*kernel.shared_1[(cse_var_3 + 422)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 770)]*kernel.shared_1[(cse_var_3 + 614)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 819)]*kernel.shared_1[(cse_var_3 + 39)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 819)]*kernel.shared_1[(cse_var_3 + 231)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 819)]*kernel.shared_1[(cse_var_3 + 423)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 819)]*kernel.shared_1[(cse_var_3 + 615)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 826)]*kernel.shared_1[(cse_var_3 + 40)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 826)]*kernel.shared_1[(cse_var_3 + 232)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 826)]*kernel.shared_1[(cse_var_3 + 424)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 826)]*kernel.shared_1[(cse_var_3 + 616)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 833)]*kernel.shared_1[(cse_var_3 + 41)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 833)]*kernel.shared_1[(cse_var_3 + 233)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 833)]*kernel.shared_1[(cse_var_3 + 425)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 833)]*kernel.shared_1[(cse_var_3 + 617)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 882)]*kernel.shared_1[(cse_var_3 + 42)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 882)]*kernel.shared_1[(cse_var_3 + 234)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 882)]*kernel.shared_1[(cse_var_3 + 426)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 882)]*kernel.shared_1[(cse_var_3 + 618)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 889)]*kernel.shared_1[(cse_var_3 + 43)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 889)]*kernel.shared_1[(cse_var_3 + 235)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 889)]*kernel.shared_1[(cse_var_3 + 427)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 889)]*kernel.shared_1[(cse_var_3 + 619)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 896)]*kernel.shared_1[(cse_var_3 + 44)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 896)]*kernel.shared_1[(cse_var_3 + 236)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 896)]*kernel.shared_1[(cse_var_3 + 428)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 896)]*kernel.shared_1[(cse_var_3 + 620)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 945)]*kernel.shared_1[(cse_var_3 + 45)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 945)]*kernel.shared_1[(cse_var_3 + 237)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 945)]*kernel.shared_1[(cse_var_3 + 429)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 945)]*kernel.shared_1[(cse_var_3 + 621)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 952)]*kernel.shared_1[(cse_var_3 + 46)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 952)]*kernel.shared_1[(cse_var_3 + 238)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 952)]*kernel.shared_1[(cse_var_3 + 430)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 952)]*kernel.shared_1[(cse_var_3 + 622)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 959)]*kernel.shared_1[(cse_var_3 + 47)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 959)]*kernel.shared_1[(cse_var_3 + 239)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 959)]*kernel.shared_1[(cse_var_3 + 431)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 959)]*kernel.shared_1[(cse_var_3 + 623)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1008)]*kernel.shared_1[(cse_var_3 + 48)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1008)]*kernel.shared_1[(cse_var_3 + 240)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1008)]*kernel.shared_1[(cse_var_3 + 432)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1008)]*kernel.shared_1[(cse_var_3 + 624)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1015)]*kernel.shared_1[(cse_var_3 + 49)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1015)]*kernel.shared_1[(cse_var_3 + 241)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1015)]*kernel.shared_1[(cse_var_3 + 433)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1015)]*kernel.shared_1[(cse_var_3 + 625)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1022)]*kernel.shared_1[(cse_var_3 + 50)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1022)]*kernel.shared_1[(cse_var_3 + 242)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1022)]*kernel.shared_1[(cse_var_3 + 434)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1022)]*kernel.shared_1[(cse_var_3 + 626)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1071)]*kernel.shared_1[(cse_var_3 + 51)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1071)]*kernel.shared_1[(cse_var_3 + 243)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1071)]*kernel.shared_1[(cse_var_3 + 435)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1071)]*kernel.shared_1[(cse_var_3 + 627)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1078)]*kernel.shared_1[(cse_var_3 + 52)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1078)]*kernel.shared_1[(cse_var_3 + 244)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1078)]*kernel.shared_1[(cse_var_3 + 436)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1078)]*kernel.shared_1[(cse_var_3 + 628)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1085)]*kernel.shared_1[(cse_var_3 + 53)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1085)]*kernel.shared_1[(cse_var_3 + 245)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1085)]*kernel.shared_1[(cse_var_3 + 437)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1085)]*kernel.shared_1[(cse_var_3 + 629)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1134)]*kernel.shared_1[(cse_var_3 + 54)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1134)]*kernel.shared_1[(cse_var_3 + 246)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1134)]*kernel.shared_1[(cse_var_3 + 438)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1134)]*kernel.shared_1[(cse_var_3 + 630)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1141)]*kernel.shared_1[(cse_var_3 + 55)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1141)]*kernel.shared_1[(cse_var_3 + 247)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1141)]*kernel.shared_1[(cse_var_3 + 439)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1141)]*kernel.shared_1[(cse_var_3 + 631)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1148)]*kernel.shared_1[(cse_var_3 + 56)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1148)]*kernel.shared_1[(cse_var_3 + 248)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1148)]*kernel.shared_1[(cse_var_3 + 440)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1148)]*kernel.shared_1[(cse_var_3 + 632)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1197)]*kernel.shared_1[(cse_var_3 + 57)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1197)]*kernel.shared_1[(cse_var_3 + 249)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1197)]*kernel.shared_1[(cse_var_3 + 441)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1197)]*kernel.shared_1[(cse_var_3 + 633)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1204)]*kernel.shared_1[(cse_var_3 + 58)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1204)]*kernel.shared_1[(cse_var_3 + 250)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1204)]*kernel.shared_1[(cse_var_3 + 442)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1204)]*kernel.shared_1[(cse_var_3 + 634)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1211)]*kernel.shared_1[(cse_var_3 + 59)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1211)]*kernel.shared_1[(cse_var_3 + 251)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1211)]*kernel.shared_1[(cse_var_3 + 443)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1211)]*kernel.shared_1[(cse_var_3 + 635)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1260)]*kernel.shared_1[(cse_var_3 + 60)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1260)]*kernel.shared_1[(cse_var_3 + 252)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1260)]*kernel.shared_1[(cse_var_3 + 444)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1260)]*kernel.shared_1[(cse_var_3 + 636)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1267)]*kernel.shared_1[(cse_var_3 + 61)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1267)]*kernel.shared_1[(cse_var_3 + 253)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1267)]*kernel.shared_1[(cse_var_3 + 445)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1267)]*kernel.shared_1[(cse_var_3 + 637)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1274)]*kernel.shared_1[(cse_var_3 + 62)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1274)]*kernel.shared_1[(cse_var_3 + 254)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1274)]*kernel.shared_1[(cse_var_3 + 446)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1274)]*kernel.shared_1[(cse_var_3 + 638)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1323)]*kernel.shared_1[(cse_var_3 + 63)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1323)]*kernel.shared_1[(cse_var_3 + 255)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1323)]*kernel.shared_1[(cse_var_3 + 447)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1323)]*kernel.shared_1[(cse_var_3 + 639)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1330)]*kernel.shared_1[(cse_var_3 + 64)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1330)]*kernel.shared_1[(cse_var_3 + 256)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1330)]*kernel.shared_1[(cse_var_3 + 448)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1330)]*kernel.shared_1[(cse_var_3 + 640)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1337)]*kernel.shared_1[(cse_var_3 + 65)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1337)]*kernel.shared_1[(cse_var_3 + 257)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1337)]*kernel.shared_1[(cse_var_3 + 449)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1337)]*kernel.shared_1[(cse_var_3 + 641)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1386)]*kernel.shared_1[(cse_var_3 + 66)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1386)]*kernel.shared_1[(cse_var_3 + 258)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1386)]*kernel.shared_1[(cse_var_3 + 450)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1386)]*kernel.shared_1[(cse_var_3 + 642)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1393)]*kernel.shared_1[(cse_var_3 + 67)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1393)]*kernel.shared_1[(cse_var_3 + 259)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1393)]*kernel.shared_1[(cse_var_3 + 451)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1393)]*kernel.shared_1[(cse_var_3 + 643)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1400)]*kernel.shared_1[(cse_var_3 + 68)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1400)]*kernel.shared_1[(cse_var_3 + 260)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1400)]*kernel.shared_1[(cse_var_3 + 452)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1400)]*kernel.shared_1[(cse_var_3 + 644)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1449)]*kernel.shared_1[(cse_var_3 + 69)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1449)]*kernel.shared_1[(cse_var_3 + 261)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1449)]*kernel.shared_1[(cse_var_3 + 453)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1449)]*kernel.shared_1[(cse_var_3 + 645)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1456)]*kernel.shared_1[(cse_var_3 + 70)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1456)]*kernel.shared_1[(cse_var_3 + 262)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1456)]*kernel.shared_1[(cse_var_3 + 454)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1456)]*kernel.shared_1[(cse_var_3 + 646)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1463)]*kernel.shared_1[(cse_var_3 + 71)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1463)]*kernel.shared_1[(cse_var_3 + 263)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1463)]*kernel.shared_1[(cse_var_3 + 455)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1463)]*kernel.shared_1[(cse_var_3 + 647)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1512)]*kernel.shared_1[(cse_var_3 + 72)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1512)]*kernel.shared_1[(cse_var_3 + 264)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1512)]*kernel.shared_1[(cse_var_3 + 456)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1512)]*kernel.shared_1[(cse_var_3 + 648)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1519)]*kernel.shared_1[(cse_var_3 + 73)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1519)]*kernel.shared_1[(cse_var_3 + 265)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1519)]*kernel.shared_1[(cse_var_3 + 457)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1519)]*kernel.shared_1[(cse_var_3 + 649)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1526)]*kernel.shared_1[(cse_var_3 + 74)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1526)]*kernel.shared_1[(cse_var_3 + 266)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1526)]*kernel.shared_1[(cse_var_3 + 458)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1526)]*kernel.shared_1[(cse_var_3 + 650)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1575)]*kernel.shared_1[(cse_var_3 + 75)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1575)]*kernel.shared_1[(cse_var_3 + 267)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1575)]*kernel.shared_1[(cse_var_3 + 459)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1575)]*kernel.shared_1[(cse_var_3 + 651)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1582)]*kernel.shared_1[(cse_var_3 + 76)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1582)]*kernel.shared_1[(cse_var_3 + 268)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1582)]*kernel.shared_1[(cse_var_3 + 460)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1582)]*kernel.shared_1[(cse_var_3 + 652)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1589)]*kernel.shared_1[(cse_var_3 + 77)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1589)]*kernel.shared_1[(cse_var_3 + 269)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1589)]*kernel.shared_1[(cse_var_3 + 461)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1589)]*kernel.shared_1[(cse_var_3 + 653)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1638)]*kernel.shared_1[(cse_var_3 + 78)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1638)]*kernel.shared_1[(cse_var_3 + 270)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1638)]*kernel.shared_1[(cse_var_3 + 462)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1638)]*kernel.shared_1[(cse_var_3 + 654)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1645)]*kernel.shared_1[(cse_var_3 + 79)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1645)]*kernel.shared_1[(cse_var_3 + 271)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1645)]*kernel.shared_1[(cse_var_3 + 463)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1645)]*kernel.shared_1[(cse_var_3 + 655)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1652)]*kernel.shared_1[(cse_var_3 + 80)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1652)]*kernel.shared_1[(cse_var_3 + 272)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1652)]*kernel.shared_1[(cse_var_3 + 464)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1652)]*kernel.shared_1[(cse_var_3 + 656)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1701)]*kernel.shared_1[(cse_var_3 + 81)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1701)]*kernel.shared_1[(cse_var_3 + 273)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1701)]*kernel.shared_1[(cse_var_3 + 465)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1701)]*kernel.shared_1[(cse_var_3 + 657)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1708)]*kernel.shared_1[(cse_var_3 + 82)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1708)]*kernel.shared_1[(cse_var_3 + 274)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1708)]*kernel.shared_1[(cse_var_3 + 466)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1708)]*kernel.shared_1[(cse_var_3 + 658)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1715)]*kernel.shared_1[(cse_var_3 + 83)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1715)]*kernel.shared_1[(cse_var_3 + 275)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1715)]*kernel.shared_1[(cse_var_3 + 467)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1715)]*kernel.shared_1[(cse_var_3 + 659)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1764)]*kernel.shared_1[(cse_var_3 + 84)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1764)]*kernel.shared_1[(cse_var_3 + 276)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1764)]*kernel.shared_1[(cse_var_3 + 468)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1764)]*kernel.shared_1[(cse_var_3 + 660)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1771)]*kernel.shared_1[(cse_var_3 + 85)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1771)]*kernel.shared_1[(cse_var_3 + 277)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1771)]*kernel.shared_1[(cse_var_3 + 469)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1771)]*kernel.shared_1[(cse_var_3 + 661)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1778)]*kernel.shared_1[(cse_var_3 + 86)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1778)]*kernel.shared_1[(cse_var_3 + 278)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1778)]*kernel.shared_1[(cse_var_3 + 470)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1778)]*kernel.shared_1[(cse_var_3 + 662)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1827)]*kernel.shared_1[(cse_var_3 + 87)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1827)]*kernel.shared_1[(cse_var_3 + 279)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1827)]*kernel.shared_1[(cse_var_3 + 471)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1827)]*kernel.shared_1[(cse_var_3 + 663)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1834)]*kernel.shared_1[(cse_var_3 + 88)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1834)]*kernel.shared_1[(cse_var_3 + 280)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1834)]*kernel.shared_1[(cse_var_3 + 472)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1834)]*kernel.shared_1[(cse_var_3 + 664)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1841)]*kernel.shared_1[(cse_var_3 + 89)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1841)]*kernel.shared_1[(cse_var_3 + 281)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1841)]*kernel.shared_1[(cse_var_3 + 473)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1841)]*kernel.shared_1[(cse_var_3 + 665)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1890)]*kernel.shared_1[(cse_var_3 + 90)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1890)]*kernel.shared_1[(cse_var_3 + 282)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1890)]*kernel.shared_1[(cse_var_3 + 474)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1890)]*kernel.shared_1[(cse_var_3 + 666)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1897)]*kernel.shared_1[(cse_var_3 + 91)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1897)]*kernel.shared_1[(cse_var_3 + 283)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1897)]*kernel.shared_1[(cse_var_3 + 475)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1897)]*kernel.shared_1[(cse_var_3 + 667)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1904)]*kernel.shared_1[(cse_var_3 + 92)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1904)]*kernel.shared_1[(cse_var_3 + 284)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1904)]*kernel.shared_1[(cse_var_3 + 476)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1904)]*kernel.shared_1[(cse_var_3 + 668)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1953)]*kernel.shared_1[(cse_var_3 + 93)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1953)]*kernel.shared_1[(cse_var_3 + 285)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1953)]*kernel.shared_1[(cse_var_3 + 477)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1953)]*kernel.shared_1[(cse_var_3 + 669)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1960)]*kernel.shared_1[(cse_var_3 + 94)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1960)]*kernel.shared_1[(cse_var_3 + 286)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1960)]*kernel.shared_1[(cse_var_3 + 478)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1960)]*kernel.shared_1[(cse_var_3 + 670)]))
                    conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1967)]*kernel.shared_1[(cse_var_3 + 95)]))
                    conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1967)]*kernel.shared_1[(cse_var_3 + 287)]))
                    conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1967)]*kernel.shared_1[(cse_var_3 + 479)]))
                    conv2d_nchw_1[cse_var_6] = (conv2d_nchw_1[cse_var_6] + (pad_temp.shared_1[(((rc.outer.inner*2016) + threadIdx.x) + 1967)]*kernel.shared_1[(cse_var_3 + 671)]))
                  }
                }
              }
            }
          }
        }
        for (i1.inner: int32, 0, 8) {
          compute[(((blockIdx.x*392) + (i1.inner*49)) + threadIdx.x)] = max((conv2d_nchw_1[i1.inner] + bias[((blockIdx.x*8) + i1.inner)]), 0f32)
        }
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 141-144

Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.

.. GENERATED FROM PYTHON SOURCE LINES 144-171

.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Execution time of this operator: 0.242 ms




.. GENERATED FROM PYTHON SOURCE LINES 172-177

Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

.. GENERATED FROM PYTHON SOURCE LINES 179-182

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.

.. GENERATED FROM PYTHON SOURCE LINES 182-189

.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=4)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=2)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=1)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=7)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=7)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=32)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=2)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=3)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=1)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=1)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=1)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=8)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=1)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=1)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=7)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=7)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=49)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=49)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 512)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(49) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[8];
      __shared__ float pad_temp_shared[4032];
      __shared__ float kernel_shared[1536];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      conv2d_nchw[7] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 8; ++rc_outer_outer) {
        for (int rx_outer_outer = 0; rx_outer_outer < 3; ++rx_outer_outer) {
          __syncthreads();
          pad_temp_shared[((int)threadIdx.x)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 3136) + ((int)threadIdx.x)) + rx_outer_outer) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 49)] = (((((1 <= (((((int)threadIdx.x) / 7) + 7) % 9)) && ((((((int)threadIdx.x) / 7) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 49) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 7) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 98)] = (((((1 <= (((((int)threadIdx.x) / 7) + 5) % 9)) && ((((((int)threadIdx.x) / 7) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 98) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 147)] = (((((1 <= (((((int)threadIdx.x) / 7) + 3) % 9)) && ((((((int)threadIdx.x) / 7) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 147) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 196)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 196) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) - 1)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 245)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 245) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 294)] = (((((1 <= (((((int)threadIdx.x) / 7) + 6) % 9)) && ((((((int)threadIdx.x) / 7) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 294) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 343)] = (((((1 <= (((((int)threadIdx.x) / 7) + 4) % 9)) && ((((((int)threadIdx.x) / 7) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 343) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 392)] = ((((((int)threadIdx.x) < 42) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 392) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) + 6)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 441)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 3136) + ((int)threadIdx.x)) + rx_outer_outer) + 335)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 490)] = (((((1 <= (((((int)threadIdx.x) / 7) + 7) % 9)) && ((((((int)threadIdx.x) / 7) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 490) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 7) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 539)] = (((((1 <= (((((int)threadIdx.x) / 7) + 5) % 9)) && ((((((int)threadIdx.x) / 7) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 539) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 588)] = (((((1 <= (((((int)threadIdx.x) / 7) + 3) % 9)) && ((((((int)threadIdx.x) / 7) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 588) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 637)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 637) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) - 1)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 686)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 686) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 735)] = (((((1 <= (((((int)threadIdx.x) / 7) + 6) % 9)) && ((((((int)threadIdx.x) / 7) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 735) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 784)] = (((((1 <= (((((int)threadIdx.x) / 7) + 4) % 9)) && ((((((int)threadIdx.x) / 7) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 784) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 833)] = ((((((int)threadIdx.x) < 42) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 833) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) + 6)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 882)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 3136) + ((int)threadIdx.x)) + rx_outer_outer) + 678)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 931)] = (((((1 <= (((((int)threadIdx.x) / 7) + 7) % 9)) && ((((((int)threadIdx.x) / 7) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 931) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 7) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 980)] = (((((1 <= (((((int)threadIdx.x) / 7) + 5) % 9)) && ((((((int)threadIdx.x) / 7) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 980) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1029)] = (((((1 <= (((((int)threadIdx.x) / 7) + 3) % 9)) && ((((((int)threadIdx.x) / 7) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1029) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1078)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1078) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) - 1)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1127)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1127) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1176)] = (((((1 <= (((((int)threadIdx.x) / 7) + 6) % 9)) && ((((((int)threadIdx.x) / 7) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1176) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1225)] = (((((1 <= (((((int)threadIdx.x) / 7) + 4) % 9)) && ((((((int)threadIdx.x) / 7) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1225) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1274)] = ((((((int)threadIdx.x) < 42) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1274) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) + 6)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1323)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 3136) + ((int)threadIdx.x)) + rx_outer_outer) + 1021)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1372)] = (((((1 <= (((((int)threadIdx.x) / 7) + 7) % 9)) && ((((((int)threadIdx.x) / 7) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1372) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 7) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1421)] = (((((1 <= (((((int)threadIdx.x) / 7) + 5) % 9)) && ((((((int)threadIdx.x) / 7) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1421) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1470)] = (((((1 <= (((((int)threadIdx.x) / 7) + 3) % 9)) && ((((((int)threadIdx.x) / 7) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1470) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1519)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1519) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) - 1)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1568)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1568) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1617)] = (((((1 <= (((((int)threadIdx.x) / 7) + 6) % 9)) && ((((((int)threadIdx.x) / 7) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1617) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1666)] = (((((1 <= (((((int)threadIdx.x) / 7) + 4) % 9)) && ((((((int)threadIdx.x) / 7) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1666) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1715)] = ((((((int)threadIdx.x) < 42) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1715) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) + 6)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1764)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 3136) + ((int)threadIdx.x)) + rx_outer_outer) + 1364)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1813)] = (((((1 <= (((((int)threadIdx.x) / 7) + 7) % 9)) && ((((((int)threadIdx.x) / 7) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1813) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 7) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1862)] = (((((1 <= (((((int)threadIdx.x) / 7) + 5) % 9)) && ((((((int)threadIdx.x) / 7) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1862) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1911)] = (((((1 <= (((((int)threadIdx.x) / 7) + 3) % 9)) && ((((((int)threadIdx.x) / 7) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1911) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1960)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1960) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) - 1)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2009)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2009) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2058)] = (((((1 <= (((((int)threadIdx.x) / 7) + 6) % 9)) && ((((((int)threadIdx.x) / 7) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2058) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2107)] = (((((1 <= (((((int)threadIdx.x) / 7) + 4) % 9)) && ((((((int)threadIdx.x) / 7) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2107) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2156)] = ((((((int)threadIdx.x) < 42) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2156) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) + 6)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2205)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 3136) + ((int)threadIdx.x)) + rx_outer_outer) + 1707)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2254)] = (((((1 <= (((((int)threadIdx.x) / 7) + 7) % 9)) && ((((((int)threadIdx.x) / 7) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2254) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 7) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2303)] = (((((1 <= (((((int)threadIdx.x) / 7) + 5) % 9)) && ((((((int)threadIdx.x) / 7) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2303) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2352)] = (((((1 <= (((((int)threadIdx.x) / 7) + 3) % 9)) && ((((((int)threadIdx.x) / 7) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2352) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2401)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2401) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) - 1)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2450)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2450) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2499)] = (((((1 <= (((((int)threadIdx.x) / 7) + 6) % 9)) && ((((((int)threadIdx.x) / 7) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2499) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2548)] = (((((1 <= (((((int)threadIdx.x) / 7) + 4) % 9)) && ((((((int)threadIdx.x) / 7) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2548) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2597)] = ((((((int)threadIdx.x) < 42) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2597) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) + 6)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2646)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 3136) + ((int)threadIdx.x)) + rx_outer_outer) + 2050)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2695)] = (((((1 <= (((((int)threadIdx.x) / 7) + 7) % 9)) && ((((((int)threadIdx.x) / 7) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2695) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 7) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2744)] = (((((1 <= (((((int)threadIdx.x) / 7) + 5) % 9)) && ((((((int)threadIdx.x) / 7) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2744) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2793)] = (((((1 <= (((((int)threadIdx.x) / 7) + 3) % 9)) && ((((((int)threadIdx.x) / 7) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2793) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2842)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2842) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) - 1)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2891)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2891) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2940)] = (((((1 <= (((((int)threadIdx.x) / 7) + 6) % 9)) && ((((((int)threadIdx.x) / 7) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2940) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2989)] = (((((1 <= (((((int)threadIdx.x) / 7) + 4) % 9)) && ((((((int)threadIdx.x) / 7) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2989) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3038)] = ((((((int)threadIdx.x) < 42) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3038) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) + 6)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3087)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 3136) + ((int)threadIdx.x)) + rx_outer_outer) + 2393)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3136)] = (((((1 <= (((((int)threadIdx.x) / 7) + 7) % 9)) && ((((((int)threadIdx.x) / 7) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3136) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 7) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3185)] = (((((1 <= (((((int)threadIdx.x) / 7) + 5) % 9)) && ((((((int)threadIdx.x) / 7) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3185) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3234)] = (((((1 <= (((((int)threadIdx.x) / 7) + 3) % 9)) && ((((((int)threadIdx.x) / 7) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3234) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3283)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3283) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) - 1)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3332)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3332) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3381)] = (((((1 <= (((((int)threadIdx.x) / 7) + 6) % 9)) && ((((((int)threadIdx.x) / 7) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3381) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3430)] = (((((1 <= (((((int)threadIdx.x) / 7) + 4) % 9)) && ((((((int)threadIdx.x) / 7) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3430) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3479)] = ((((((int)threadIdx.x) < 42) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3479) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) + 6)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3528)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 3136) + ((int)threadIdx.x)) + rx_outer_outer) + 2736)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3577)] = (((((1 <= (((((int)threadIdx.x) / 7) + 7) % 9)) && ((((((int)threadIdx.x) / 7) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3577) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 7) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3626)] = (((((1 <= (((((int)threadIdx.x) / 7) + 5) % 9)) && ((((((int)threadIdx.x) / 7) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3626) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3675)] = (((((1 <= (((((int)threadIdx.x) / 7) + 3) % 9)) && ((((((int)threadIdx.x) / 7) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3675) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3724)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3724) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) - 1)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3773)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3773) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3822)] = (((((1 <= (((((int)threadIdx.x) / 7) + 6) % 9)) && ((((((int)threadIdx.x) / 7) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3822) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3871)] = (((((1 <= (((((int)threadIdx.x) / 7) + 4) % 9)) && ((((((int)threadIdx.x) / 7) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3871) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3920)] = ((((((int)threadIdx.x) < 42) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3920) / 63) * 49)) + ((int)threadIdx.x)) + rx_outer_outer) + 6)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3969)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 3136) + ((int)threadIdx.x)) + rx_outer_outer) + 3079)] : 0.000000e+00f);
          if (((int)threadIdx.x) < 14) {
            pad_temp_shared[(((int)threadIdx.x) + 4018)] = ((((((int)threadIdx.x) < 7) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 4018) / 63) * 49)) + rx_outer_outer) + ((int)threadIdx.x)) + 41)] : 0.000000e+00f);
          }
          kernel_shared[((int)threadIdx.x)] = kernel[((((((int)blockIdx.x) * 36864) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 49)] = kernel[(((((((int)blockIdx.x) * 36864) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 49) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 98)] = kernel[(((((((int)blockIdx.x) * 36864) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 98) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 147)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 147) / 192) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) / 3) + 49) & 63) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 196)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 196) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 4) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 245)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 245) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 53) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 294)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 294) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 306)];
          kernel_shared[(((int)threadIdx.x) + 343)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 343) / 192) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) + 151) % 192) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 392)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 392) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 8) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 441)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 441) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 171)];
          kernel_shared[(((int)threadIdx.x) + 490)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 490) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 106) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 539)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 539) / 192) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) + 155) % 192) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 588)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 588) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 36)];
          kernel_shared[(((int)threadIdx.x) + 637)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 637) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 61) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 686)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 686) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 110) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 735)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 735) / 192) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) / 3) + 53) & 63) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 784)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 784) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 16) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 833)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 833) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 65) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 882)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 882) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 342)];
          kernel_shared[(((int)threadIdx.x) + 931)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 931) / 192) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) + 163) % 192) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 980)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 980) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 20) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1029)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1029) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 207)];
          kernel_shared[(((int)threadIdx.x) + 1078)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1078) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 118) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1127)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1127) / 192) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) + 167) % 192) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1176)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1176) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 72)];
          kernel_shared[(((int)threadIdx.x) + 1225)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1225) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 73) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1274)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1274) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 122) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1323)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1323) / 192) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) / 3) + 57) & 63) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1372)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1372) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 28) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1421)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1421) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 77) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1470)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1470) / 192) * 4608)) + (rc_outer_outer * 576)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 378)];
          if (((int)threadIdx.x) < 17) {
            kernel_shared[(((int)threadIdx.x) + 1519)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1519) / 192) * 4608)) + (rc_outer_outer * 576)) + (((((int)threadIdx.x) + 175) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          }
          __syncthreads();
          for (int rc_outer_inner = 0; rc_outer_inner < 2; ++rc_outer_inner) {
            for (int ff_outer_inner = 0; ff_outer_inner < 2; ++ff_outer_inner) {
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[((rc_outer_inner * 2016) + ((int)threadIdx.x))] * kernel_shared[((ff_outer_inner * 768) + (rc_outer_inner * 96))]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[((rc_outer_inner * 2016) + ((int)threadIdx.x))] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 192)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[((rc_outer_inner * 2016) + ((int)threadIdx.x))] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 384)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[((rc_outer_inner * 2016) + ((int)threadIdx.x))] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 576)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 7)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 1)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 7)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 193)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 7)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 385)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 7)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 577)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 14)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 2)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 14)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 194)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 14)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 386)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 14)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 578)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 63)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 3)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 63)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 195)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 63)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 387)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 63)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 579)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 70)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 4)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 70)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 196)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 70)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 388)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 70)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 580)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 77)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 5)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 77)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 197)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 77)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 389)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 77)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 581)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 126)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 6)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 126)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 198)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 126)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 390)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 126)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 582)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 133)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 7)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 133)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 199)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 133)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 391)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 133)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 583)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 140)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 8)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 140)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 200)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 140)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 392)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 140)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 584)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 189)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 9)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 189)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 201)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 189)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 393)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 189)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 585)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 196)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 10)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 196)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 202)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 196)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 394)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 196)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 586)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 203)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 11)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 203)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 203)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 203)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 395)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 203)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 587)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 252)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 12)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 252)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 204)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 252)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 396)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 252)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 588)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 259)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 13)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 259)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 205)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 259)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 397)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 259)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 589)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 266)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 14)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 266)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 206)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 266)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 398)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 266)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 590)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 315)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 15)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 315)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 207)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 315)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 399)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 315)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 591)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 322)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 16)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 322)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 208)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 322)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 400)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 322)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 592)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 329)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 17)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 329)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 209)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 329)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 401)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 329)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 593)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 378)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 18)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 378)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 210)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 378)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 402)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 378)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 594)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 385)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 19)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 385)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 211)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 385)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 403)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 385)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 595)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 392)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 20)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 392)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 212)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 392)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 404)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 392)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 596)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 441)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 21)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 441)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 213)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 441)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 405)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 441)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 597)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 448)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 22)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 448)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 214)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 448)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 406)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 448)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 598)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 455)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 23)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 455)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 215)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 455)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 407)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 455)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 599)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 504)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 24)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 504)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 216)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 504)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 408)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 504)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 600)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 511)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 25)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 511)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 217)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 511)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 409)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 511)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 601)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 518)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 26)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 518)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 218)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 518)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 410)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 518)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 602)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 567)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 27)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 567)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 219)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 567)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 411)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 567)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 603)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 574)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 28)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 574)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 220)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 574)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 412)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 574)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 604)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 581)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 29)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 581)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 221)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 581)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 413)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 581)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 605)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 630)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 30)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 630)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 222)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 630)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 414)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 630)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 606)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 637)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 31)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 637)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 223)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 637)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 415)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 637)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 607)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 644)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 32)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 644)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 224)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 644)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 416)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 644)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 608)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 693)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 33)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 693)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 225)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 693)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 417)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 693)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 609)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 700)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 34)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 700)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 226)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 700)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 418)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 700)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 610)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 707)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 35)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 707)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 227)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 707)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 419)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 707)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 611)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 756)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 36)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 756)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 228)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 756)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 420)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 756)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 612)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 763)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 37)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 763)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 229)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 763)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 421)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 763)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 613)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 770)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 38)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 770)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 230)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 770)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 422)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 770)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 614)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 819)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 39)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 819)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 231)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 819)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 423)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 819)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 615)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 826)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 40)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 826)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 232)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 826)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 424)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 826)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 616)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 833)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 41)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 833)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 233)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 833)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 425)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 833)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 617)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 882)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 42)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 882)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 234)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 882)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 426)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 882)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 618)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 889)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 43)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 889)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 235)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 889)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 427)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 889)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 619)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 896)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 44)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 896)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 236)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 896)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 428)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 896)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 620)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 945)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 45)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 945)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 237)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 945)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 429)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 945)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 621)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 952)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 46)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 952)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 238)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 952)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 430)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 952)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 622)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 959)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 47)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 959)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 239)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 959)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 431)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 959)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 623)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1008)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 48)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1008)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 240)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1008)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 432)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1008)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 624)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1015)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 49)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1015)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 241)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1015)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 433)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1015)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 625)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1022)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 50)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1022)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 242)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1022)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 434)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1022)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 626)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1071)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 51)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1071)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 243)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1071)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 435)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1071)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 627)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1078)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 52)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1078)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 244)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1078)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 436)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1078)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 628)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1085)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 53)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1085)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 245)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1085)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 437)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1085)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 629)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1134)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 54)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1134)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 246)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1134)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 438)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1134)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 630)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1141)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 55)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1141)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 247)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1141)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 439)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1141)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 631)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1148)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 56)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1148)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 248)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1148)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 440)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1148)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 632)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1197)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 57)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1197)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 249)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1197)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 441)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1197)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 633)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1204)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 58)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1204)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 250)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1204)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 442)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1204)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 634)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1211)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 59)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1211)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 251)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1211)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 443)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1211)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 635)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1260)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 60)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1260)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 252)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1260)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 444)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1260)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 636)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1267)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 61)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1267)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 253)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1267)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 445)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1267)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 637)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1274)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 62)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1274)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 254)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1274)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 446)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1274)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 638)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1323)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 63)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1323)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 255)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1323)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 447)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1323)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 639)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1330)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 64)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1330)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 256)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1330)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 448)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1330)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 640)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1337)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 65)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1337)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 257)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1337)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 449)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1337)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 641)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1386)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 66)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1386)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 258)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1386)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 450)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1386)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 642)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1393)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 67)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1393)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 259)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1393)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 451)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1393)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 643)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1400)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 68)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1400)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 260)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1400)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 452)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1400)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 644)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1449)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 69)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1449)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 261)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1449)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 453)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1449)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 645)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1456)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 70)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1456)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 262)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1456)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 454)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1456)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 646)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1463)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 71)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1463)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 263)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1463)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 455)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1463)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 647)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1512)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 72)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1512)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 264)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1512)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 456)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1512)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 648)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1519)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 73)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1519)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 265)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1519)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 457)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1519)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 649)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1526)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 74)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1526)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 266)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1526)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 458)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1526)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 650)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1575)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 75)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1575)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 267)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1575)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 459)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1575)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 651)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1582)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 76)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1582)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 268)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1582)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 460)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1582)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 652)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1589)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 77)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1589)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 269)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1589)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 461)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1589)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 653)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1638)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 78)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1638)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 270)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1638)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 462)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1638)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 654)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1645)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 79)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1645)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 271)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1645)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 463)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1645)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 655)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1652)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 80)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1652)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 272)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1652)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 464)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1652)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 656)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1701)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 81)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1701)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 273)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1701)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 465)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1701)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 657)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1708)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 82)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1708)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 274)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1708)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 466)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1708)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 658)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1715)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 83)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1715)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 275)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1715)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 467)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1715)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 659)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1764)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 84)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1764)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 276)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1764)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 468)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1764)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 660)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1771)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 85)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1771)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 277)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1771)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 469)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1771)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 661)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1778)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 86)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1778)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 278)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1778)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 470)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1778)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 662)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1827)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 87)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1827)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 279)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1827)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 471)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1827)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 663)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1834)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 88)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1834)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 280)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1834)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 472)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1834)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 664)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1841)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 89)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1841)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 281)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1841)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 473)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1841)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 665)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1890)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 90)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1890)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 282)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1890)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 474)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1890)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 666)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1897)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 91)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1897)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 283)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1897)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 475)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1897)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 667)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1904)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 92)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1904)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 284)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1904)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 476)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1904)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 668)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1953)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 93)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1953)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 285)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1953)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 477)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1953)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 669)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1960)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 94)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1960)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 286)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1960)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 478)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1960)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 670)]));
              conv2d_nchw[(ff_outer_inner * 4)] = (conv2d_nchw[(ff_outer_inner * 4)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1967)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 95)]));
              conv2d_nchw[((ff_outer_inner * 4) + 1)] = (conv2d_nchw[((ff_outer_inner * 4) + 1)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1967)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 287)]));
              conv2d_nchw[((ff_outer_inner * 4) + 2)] = (conv2d_nchw[((ff_outer_inner * 4) + 2)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1967)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 479)]));
              conv2d_nchw[((ff_outer_inner * 4) + 3)] = (conv2d_nchw[((ff_outer_inner * 4) + 3)] + (pad_temp_shared[(((rc_outer_inner * 2016) + ((int)threadIdx.x)) + 1967)] * kernel_shared[(((ff_outer_inner * 768) + (rc_outer_inner * 96)) + 671)]));
            }
          }
        }
      }
      for (int i1_inner = 0; i1_inner < 8; ++i1_inner) {
        compute[(((((int)blockIdx.x) * 392) + (i1_inner * 49)) + ((int)threadIdx.x))] = max((conv2d_nchw[i1_inner] + bias[((((int)blockIdx.x) * 8) + i1_inner)]), 0.000000e+00f);
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 190-194

A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.

.. GENERATED FROM PYTHON SOURCE LINES 194-216

.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Resume search:
    /venv/apache-tvm-py3.7/lib/python3.7/site-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 5 minutes  18.071 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
