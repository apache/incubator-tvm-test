
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.

.. GENERATED FROM PYTHON SOURCE LINES 39-48

.. code-block:: default



    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python








.. GENERATED FROM PYTHON SOURCE LINES 54-59

Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.

.. GENERATED FROM PYTHON SOURCE LINES 59-71

.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]









.. GENERATED FROM PYTHON SOURCE LINES 72-75

Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.

.. GENERATED FROM PYTHON SOURCE LINES 75-88

.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)





.. GENERATED FROM PYTHON SOURCE LINES 89-106

Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.

.. GENERATED FROM PYTHON SOURCE LINES 106-116

.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Get devices for measurement successfully!




.. GENERATED FROM PYTHON SOURCE LINES 117-123

Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.

.. GENERATED FROM PYTHON SOURCE LINES 123-132

.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx








.. GENERATED FROM PYTHON SOURCE LINES 133-136

We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.

.. GENERATED FROM PYTHON SOURCE LINES 136-140

.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Lowered TIR:
    @main = primfn(data_1: handle, kernel_1: handle, bias_1: handle, compute_1: handle) -> ()
      attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
      buffers = {data: Buffer(data_2: Pointer(float32), float32, [25088], []),
                 kernel: Buffer(kernel_2: Pointer(float32), float32, [2359296], []),
                 bias: Buffer(bias_2: Pointer(float32), float32, [512], []),
                 compute: Buffer(compute_2: Pointer(float32), float32, [25088], [])}
      buffer_map = {data_1: data, kernel_1: kernel, bias_1: bias, compute_1: compute}
      preflattened_buffer_map = {data_1: data_3: Buffer(data_2, float32, [1, 512, 7, 7], []), kernel_1: kernel_3: Buffer(kernel_2, float32, [512, 512, 3, 3], []), bias_1: bias_3: Buffer(bias_2, float32, [1, 512, 1, 1], []), compute_1: compute_3: Buffer(compute_2, float32, [1, 512, 7, 7], [])} {
      attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = 32;
      allocate(conv2d_nchw: Pointer(local float32), float32, [8]), storage_scope = local;
      allocate(pad_temp.shared: Pointer(shared float32), float32, [648]), storage_scope = shared;
      allocate(kernel.shared: Pointer(shared float32), float32, [1152]), storage_scope = shared;
      attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98 {
        conv2d_nchw_1: Buffer(conv2d_nchw, float32, [4], [], scope="local", align=8)[0] = 0f32
        conv2d_nchw_1[2] = 0f32
        conv2d_nchw_1[4] = 0f32
        conv2d_nchw_1[6] = 0f32
        conv2d_nchw_1[1] = 0f32
        conv2d_nchw_1[3] = 0f32
        conv2d_nchw_1[5] = 0f32
        conv2d_nchw_1[7] = 0f32
        for (rc.outer.outer: int32, 0, 64) {
          let cse_var_2: int32 = (rc.outer.outer*392)
          let cse_var_1: int32 = (rc.outer.outer*72)
           {
            attr [IterVar(threadIdx.x_1: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
            pad_temp.shared_1: Buffer(pad_temp.shared, float32, [648], [], scope="shared")[threadIdx.x_1] = @tir.if_then_else(((((9 <= floormod(threadIdx.x_1, 81)) && (floormod(threadIdx.x_1, 81) < 72)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_2 + (floordiv(threadIdx.x_1, 81)*49)) + (floordiv(floormod(threadIdx.x_1, 81), 9)*7)) + floormod(threadIdx.x_1, 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
            pad_temp.shared_1[(threadIdx.x_1 + 98)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 17), 81)) && (floormod((threadIdx.x_1 + 17), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 98), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 17), 81), 9)*7)) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
            pad_temp.shared_1[(threadIdx.x_1 + 196)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 34), 81)) && (floormod((threadIdx.x_1 + 34), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 196), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 34), 81), 9)*7)) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
            pad_temp.shared_1[(threadIdx.x_1 + 294)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 51), 81)) && (floormod((threadIdx.x_1 + 51), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 294), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 51), 81), 9)*7)) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
            pad_temp.shared_1[(threadIdx.x_1 + 392)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 68), 81)) && (floormod((threadIdx.x_1 + 68), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 392), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 68), 81), 9)*7)) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
            pad_temp.shared_1[(threadIdx.x_1 + 490)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 4), 81)) && (floormod((threadIdx.x_1 + 4), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 490), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 4), 81), 9)*7)) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
            if @tir.likely((threadIdx.x_1 < 60), dtype=bool) {
              pad_temp.shared_1[(threadIdx.x_1 + 588)] = @tir.if_then_else((((threadIdx.x_1 < 51) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 588), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 21), 81), 9)*7)) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_2: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
            kernel.shared_1: Buffer(kernel.shared, float32, [1152], [], scope="shared")[threadIdx.x_2] = kernel[((((blockIdx.x*73728) + (floordiv(threadIdx.x_2, 72)*4608)) + cse_var_1) + floormod(threadIdx.x_2, 72))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
            kernel.shared_1[(threadIdx.x_2 + 98)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 98), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 26), 72), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 8), 9), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
            kernel.shared_1[(threadIdx.x_2 + 196)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 196), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 52), 72), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 7), 9), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
            kernel.shared_1[(threadIdx.x_2 + 294)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 294), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 6), 72), 9)*9)) + (floormod((floordiv(threadIdx.x_2, 3) + 2), 3)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
            kernel.shared_1[(threadIdx.x_2 + 392)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 392), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 72), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 5), 9), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
            kernel.shared_1[(threadIdx.x_2 + 490)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 490), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 58), 72), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 4), 9), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
            kernel.shared_1[(threadIdx.x_2 + 588)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 588), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 12), 72), 9)*9)) + (floormod((floordiv(threadIdx.x_2, 3) + 1), 3)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
            kernel.shared_1[(threadIdx.x_2 + 686)] = kernel[(((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 686), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 38), 72), 9)*9)) + floormod((threadIdx.x_2 + 2), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
            kernel.shared_1[(threadIdx.x_2 + 784)] = kernel[(((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 784), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 64), 72), 9)*9)) + floormod((threadIdx.x_2 + 1), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
            kernel.shared_1[(threadIdx.x_2 + 882)] = kernel[(((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 882), 72)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 9) + 2), 8)*9)) + floormod(threadIdx.x_2, 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
            kernel.shared_1[(threadIdx.x_2 + 980)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 980), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 44), 72), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 8), 9), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
            if @tir.likely((threadIdx.x_2 < 74), dtype=bool) {
              kernel.shared_1[(threadIdx.x_2 + 1078)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1078), 72)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 70), 72), 9)*9)) + (floordiv(floormod((threadIdx.x_2 + 7), 9), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            }
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7))]*kernel.shared_1[(floordiv(threadIdx.x, 49)*144)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7))]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 288)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7))]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 576)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7))]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 864)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7))]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 72)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7))]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 360)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7))]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 648)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7))]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 936)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 9)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 3)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 9)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 291)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 9)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 579)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 9)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 867)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 9)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 75)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 9)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 363)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 9)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 651)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 9)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 939)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 18)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 6)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 18)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 294)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 18)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 582)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 18)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 870)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 18)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 78)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 18)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 366)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 18)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 654)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 18)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 942)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 9)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 297)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 585)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 873)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 81)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 369)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 657)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 945)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 90)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 12)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 90)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 300)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 90)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 588)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 90)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 876)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 90)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 84)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 90)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 372)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 90)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 660)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 90)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 948)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 99)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 15)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 99)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 303)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 99)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 591)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 99)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 879)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 99)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 87)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 99)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 375)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 99)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 663)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 99)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 951)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 1)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 289)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 577)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 865)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 73)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 361)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 649)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 937)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 10)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 4)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 10)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 292)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 10)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 580)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 10)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 868)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 10)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 76)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 10)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 364)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 10)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 652)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 10)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 940)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 19)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 7)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 19)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 295)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 19)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 583)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 19)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 871)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 19)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 79)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 19)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 367)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 19)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 655)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 19)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 943)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 10)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 298)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 586)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 874)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 82)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 370)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 658)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 946)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 91)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 13)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 91)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 301)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 91)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 589)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 91)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 877)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 91)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 85)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 91)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 373)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 91)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 661)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 91)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 949)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 100)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 16)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 100)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 304)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 100)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 592)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 100)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 880)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 100)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 88)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 100)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 376)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 100)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 664)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 100)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 952)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 2)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 290)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 578)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 866)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 74)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 362)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 650)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 938)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 11)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 5)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 11)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 293)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 11)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 581)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 11)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 869)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 11)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 77)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 11)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 365)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 11)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 653)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 11)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 941)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 20)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 8)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 20)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 296)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 20)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 584)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 20)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 872)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 20)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 80)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 20)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 368)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 20)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 656)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 20)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 944)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 11)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 299)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 587)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 875)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 83)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 371)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 659)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 947)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 92)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 14)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 92)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 302)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 92)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 590)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 92)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 878)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 92)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 86)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 92)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 374)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 92)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 662)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 92)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 950)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 101)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 17)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 101)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 305)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 101)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 593)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 101)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 881)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 101)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 89)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 101)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 377)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 101)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 665)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 101)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 953)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 162)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 18)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 162)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 306)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 162)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 594)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 162)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 882)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 162)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 90)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 162)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 378)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 162)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 666)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 162)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 954)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 171)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 21)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 171)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 309)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 171)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 597)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 171)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 885)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 171)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 93)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 171)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 381)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 171)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 669)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 171)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 957)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 180)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 24)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 180)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 312)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 180)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 600)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 180)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 888)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 180)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 96)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 180)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 384)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 180)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 672)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 180)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 960)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 243)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 27)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 243)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 315)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 243)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 603)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 243)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 891)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 243)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 99)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 243)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 387)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 243)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 675)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 243)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 963)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 30)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 318)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 606)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 894)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 102)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 390)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 678)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 966)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 261)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 33)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 261)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 321)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 261)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 609)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 261)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 897)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 261)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 105)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 261)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 393)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 261)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 681)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 261)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 969)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 163)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 19)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 163)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 307)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 163)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 595)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 163)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 883)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 163)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 91)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 163)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 379)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 163)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 667)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 163)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 955)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 172)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 22)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 172)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 310)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 172)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 598)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 172)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 886)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 172)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 94)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 172)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 382)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 172)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 670)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 172)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 958)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 181)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 25)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 181)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 313)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 181)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 601)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 181)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 889)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 181)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 97)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 181)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 385)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 181)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 673)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 181)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 961)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 244)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 28)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 244)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 316)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 244)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 604)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 244)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 892)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 244)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 100)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 244)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 388)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 244)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 676)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 244)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 964)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 253)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 31)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 253)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 319)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 253)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 607)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 253)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 895)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 253)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 103)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 253)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 391)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 253)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 679)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 253)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 967)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 262)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 34)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 262)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 322)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 262)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 610)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 262)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 898)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 262)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 106)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 262)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 394)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 262)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 682)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 262)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 970)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 164)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 20)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 164)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 308)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 164)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 596)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 164)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 884)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 164)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 92)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 164)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 380)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 164)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 668)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 164)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 956)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 173)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 23)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 173)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 311)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 173)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 599)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 173)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 887)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 173)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 95)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 173)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 383)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 173)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 671)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 173)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 959)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 182)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 26)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 182)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 314)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 182)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 602)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 182)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 890)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 182)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 98)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 182)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 386)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 182)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 674)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 182)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 962)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 245)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 29)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 245)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 317)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 245)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 605)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 245)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 893)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 245)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 101)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 245)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 389)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 245)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 677)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 245)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 965)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 254)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 32)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 254)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 320)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 254)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 608)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 254)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 896)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 254)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 104)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 254)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 392)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 254)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 680)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 254)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 968)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 263)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 35)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 263)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 323)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 263)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 611)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 263)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 899)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 263)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 107)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 263)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 395)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 263)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 683)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 263)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 971)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 324)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 36)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 324)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 324)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 324)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 612)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 324)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 900)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 324)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 108)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 324)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 396)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 324)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 684)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 324)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 972)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 333)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 39)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 333)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 327)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 333)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 615)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 333)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 903)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 333)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 111)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 333)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 399)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 333)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 687)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 333)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 975)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 342)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 42)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 342)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 330)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 342)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 618)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 342)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 906)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 342)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 114)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 342)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 402)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 342)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 690)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 342)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 978)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 405)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 45)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 405)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 333)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 405)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 621)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 405)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 909)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 405)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 117)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 405)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 405)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 405)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 693)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 405)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 981)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 414)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 48)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 414)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 336)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 414)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 624)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 414)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 912)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 414)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 120)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 414)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 408)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 414)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 696)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 414)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 984)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 423)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 51)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 423)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 339)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 423)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 627)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 423)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 915)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 423)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 123)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 423)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 411)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 423)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 699)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 423)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 987)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 325)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 37)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 325)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 325)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 325)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 613)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 325)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 901)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 325)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 109)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 325)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 397)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 325)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 685)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 325)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 973)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 334)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 40)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 334)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 328)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 334)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 616)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 334)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 904)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 334)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 112)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 334)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 400)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 334)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 688)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 334)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 976)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 343)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 43)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 343)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 331)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 343)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 619)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 343)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 907)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 343)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 115)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 343)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 403)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 343)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 691)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 343)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 979)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 406)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 46)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 406)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 334)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 406)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 622)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 406)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 910)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 406)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 118)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 406)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 406)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 406)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 694)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 406)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 982)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 415)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 49)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 415)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 337)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 415)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 625)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 415)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 913)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 415)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 121)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 415)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 409)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 415)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 697)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 415)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 985)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 424)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 52)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 424)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 340)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 424)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 628)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 424)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 916)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 424)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 124)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 424)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 412)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 424)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 700)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 424)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 988)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 326)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 38)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 326)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 326)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 326)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 614)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 326)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 902)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 326)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 110)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 326)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 398)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 326)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 686)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 326)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 974)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 335)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 41)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 335)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 329)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 335)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 617)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 335)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 905)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 335)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 113)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 335)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 401)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 335)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 689)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 335)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 977)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 344)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 44)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 344)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 332)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 344)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 620)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 344)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 908)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 344)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 116)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 344)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 404)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 344)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 692)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 344)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 980)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 407)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 47)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 407)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 335)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 407)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 623)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 407)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 911)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 407)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 119)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 407)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 407)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 407)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 695)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 407)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 983)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 416)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 50)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 416)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 338)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 416)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 626)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 416)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 914)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 416)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 122)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 416)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 410)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 416)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 698)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 416)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 986)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 425)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 53)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 425)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 341)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 425)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 629)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 425)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 917)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 425)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 125)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 425)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 413)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 425)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 701)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 425)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 989)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 486)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 54)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 486)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 342)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 486)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 630)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 486)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 918)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 486)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 126)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 486)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 414)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 486)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 702)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 486)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 990)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 495)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 57)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 495)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 345)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 495)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 633)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 495)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 921)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 495)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 129)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 495)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 417)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 495)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 705)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 495)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 993)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 504)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 60)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 504)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 348)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 504)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 636)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 504)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 924)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 504)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 132)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 504)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 420)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 504)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 708)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 504)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 996)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 567)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 63)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 567)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 351)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 567)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 639)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 567)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 927)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 567)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 135)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 567)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 423)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 567)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 711)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 567)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 999)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 576)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 66)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 576)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 354)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 576)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 642)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 576)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 930)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 576)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 138)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 576)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 426)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 576)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 714)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 576)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 1002)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 585)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 69)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 585)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 357)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 585)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 645)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 585)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 933)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 585)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 141)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 585)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 429)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 585)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 717)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 585)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 1005)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 487)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 55)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 487)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 343)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 487)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 631)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 487)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 919)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 487)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 127)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 487)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 415)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 487)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 703)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 487)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 991)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 496)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 58)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 496)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 346)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 496)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 634)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 496)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 922)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 496)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 130)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 496)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 418)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 496)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 706)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 496)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 994)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 505)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 61)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 505)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 349)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 505)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 637)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 505)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 925)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 505)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 133)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 505)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 421)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 505)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 709)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 505)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 997)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 568)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 64)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 568)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 352)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 568)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 640)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 568)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 928)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 568)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 136)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 568)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 424)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 568)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 712)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 568)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 1000)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 577)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 67)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 577)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 355)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 577)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 643)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 577)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 931)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 577)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 139)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 577)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 427)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 577)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 715)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 577)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 1003)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 586)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 70)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 586)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 358)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 586)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 646)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 586)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 934)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 586)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 142)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 586)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 430)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 586)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 718)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 586)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 1006)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 488)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 56)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 488)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 344)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 488)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 632)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 488)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 920)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 488)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 128)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 488)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 416)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 488)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 704)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 488)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 992)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 497)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 59)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 497)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 347)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 497)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 635)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 497)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 923)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 497)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 131)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 497)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 419)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 497)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 707)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 497)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 995)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 506)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 62)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 506)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 350)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 506)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 638)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 506)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 926)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 506)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 134)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 506)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 422)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 506)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 710)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 506)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 998)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 569)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 65)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 569)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 353)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 569)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 641)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 569)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 929)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 569)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 137)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 569)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 425)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 569)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 713)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 569)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 1001)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 578)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 68)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 578)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 356)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 578)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 644)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 578)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 932)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 578)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 140)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 578)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 428)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 578)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 716)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 578)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 1004)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 587)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 71)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 587)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 359)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 587)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 647)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 587)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 935)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 587)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 143)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 587)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 431)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 587)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 719)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 587)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*144) + 1007)]))
          }
        }
        for (i1.inner: int32, 0, 2) {
          compute[((((blockIdx.x*784) + (floordiv(threadIdx.x, 49)*98)) + (i1.inner*49)) + floormod(threadIdx.x, 49))] = max((conv2d_nchw_1[i1.inner] + bias[(((blockIdx.x*16) + (floordiv(threadIdx.x, 49)*2)) + i1.inner)]), 0f32)
          compute[(((((blockIdx.x*784) + (floordiv(threadIdx.x, 49)*98)) + (i1.inner*49)) + floormod(threadIdx.x, 49)) + 196)] = max((conv2d_nchw_1[(i1.inner + 2)] + bias[((((blockIdx.x*16) + (floordiv(threadIdx.x, 49)*2)) + i1.inner) + 4)]), 0f32)
          compute[(((((blockIdx.x*784) + (floordiv(threadIdx.x, 49)*98)) + (i1.inner*49)) + floormod(threadIdx.x, 49)) + 392)] = max((conv2d_nchw_1[(i1.inner + 4)] + bias[((((blockIdx.x*16) + (floordiv(threadIdx.x, 49)*2)) + i1.inner) + 8)]), 0f32)
          compute[(((((blockIdx.x*784) + (floordiv(threadIdx.x, 49)*98)) + (i1.inner*49)) + floormod(threadIdx.x, 49)) + 588)] = max((conv2d_nchw_1[(i1.inner + 6)] + bias[((((blockIdx.x*16) + (floordiv(threadIdx.x, 49)*2)) + i1.inner) + 12)]), 0f32)
        }
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 141-144

Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.

.. GENERATED FROM PYTHON SOURCE LINES 144-171

.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Execution time of this operator: 0.216 ms




.. GENERATED FROM PYTHON SOURCE LINES 172-177

Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

.. GENERATED FROM PYTHON SOURCE LINES 179-182

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.

.. GENERATED FROM PYTHON SOURCE LINES 182-189

.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=2)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=2)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=4)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=7)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=7)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=2)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=4)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=3)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=1)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=1)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=3)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=2)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=2)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=4)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=7)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=7)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=98)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=98)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 1024)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(98) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[8];
      __shared__ float pad_temp_shared[648];
      __shared__ float kernel_shared[1152];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[7] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 64; ++rc_outer_outer) {
        __syncthreads();
        pad_temp_shared[((int)threadIdx.x)] = (((((9 <= (((int)threadIdx.x) % 81)) && ((((int)threadIdx.x) % 81) < 72)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 392) + ((((int)threadIdx.x) / 81) * 49)) + (((((int)threadIdx.x) % 81) / 9) * 7)) + (((int)threadIdx.x) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 98)] = (((((9 <= ((((int)threadIdx.x) + 17) % 81)) && (((((int)threadIdx.x) + 17) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 98) / 81) * 49)) + ((((((int)threadIdx.x) + 17) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 196)] = (((((9 <= ((((int)threadIdx.x) + 34) % 81)) && (((((int)threadIdx.x) + 34) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 196) / 81) * 49)) + ((((((int)threadIdx.x) + 34) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 294)] = (((((9 <= ((((int)threadIdx.x) + 51) % 81)) && (((((int)threadIdx.x) + 51) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 294) / 81) * 49)) + ((((((int)threadIdx.x) + 51) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 392)] = (((((9 <= ((((int)threadIdx.x) + 68) % 81)) && (((((int)threadIdx.x) + 68) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 392) / 81) * 49)) + ((((((int)threadIdx.x) + 68) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 490)] = (((((9 <= ((((int)threadIdx.x) + 4) % 81)) && (((((int)threadIdx.x) + 4) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 490) / 81) * 49)) + ((((((int)threadIdx.x) + 4) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
        if (((int)threadIdx.x) < 60) {
          pad_temp_shared[(((int)threadIdx.x) + 588)] = ((((((int)threadIdx.x) < 51) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 588) / 81) * 49)) + (((((int)threadIdx.x) + 21) / 9) * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
        }
        kernel_shared[((int)threadIdx.x)] = kernel[((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 72) * 4608)) + (rc_outer_outer * 72)) + (((int)threadIdx.x) % 72))];
        kernel_shared[(((int)threadIdx.x) + 98)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 98) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 26) % 72) / 9) * 9)) + ((((((int)threadIdx.x) + 8) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 196)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 196) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 52) % 72) / 9) * 9)) + ((((((int)threadIdx.x) + 7) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 294)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 294) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 6) % 72) / 9) * 9)) + ((((((int)threadIdx.x) / 3) + 2) % 3) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 392)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 392) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 32) % 72) / 9) * 9)) + ((((((int)threadIdx.x) + 5) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 490)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 490) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 58) % 72) / 9) * 9)) + ((((((int)threadIdx.x) + 4) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 588)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 588) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 12) % 72) / 9) * 9)) + ((((((int)threadIdx.x) / 3) + 1) % 3) * 3)) + (((int)threadIdx.x) % 3))];
        kernel_shared[(((int)threadIdx.x) + 686)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 686) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 38) % 72) / 9) * 9)) + ((((int)threadIdx.x) + 2) % 9))];
        kernel_shared[(((int)threadIdx.x) + 784)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 784) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 64) % 72) / 9) * 9)) + ((((int)threadIdx.x) + 1) % 9))];
        kernel_shared[(((int)threadIdx.x) + 882)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 882) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) / 9) + 2) & 7) * 9)) + (((int)threadIdx.x) % 9))];
        kernel_shared[(((int)threadIdx.x) + 980)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 980) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 44) % 72) / 9) * 9)) + ((((((int)threadIdx.x) + 8) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        if (((int)threadIdx.x) < 74) {
          kernel_shared[(((int)threadIdx.x) + 1078)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1078) / 72) * 4608)) + (rc_outer_outer * 72)) + ((((((int)threadIdx.x) + 70) % 72) / 9) * 9)) + ((((((int)threadIdx.x) + 7) % 9) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        }
        __syncthreads();
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7))] * kernel_shared[((((int)threadIdx.x) / 49) * 144)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7))] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 288)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7))] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 576)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7))] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 864)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7))] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 72)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7))] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 360)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7))] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 648)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7))] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 936)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 3)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 291)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 579)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 867)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 75)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 363)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 651)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 939)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 6)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 294)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 582)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 870)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 78)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 366)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 654)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 942)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 9)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 297)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 585)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 873)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 81)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 369)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 657)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 945)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 12)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 300)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 588)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 876)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 84)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 372)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 660)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 948)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 15)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 303)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 591)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 879)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 87)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 375)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 663)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 951)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 1)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 289)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 577)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 865)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 73)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 361)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 649)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 937)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 4)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 292)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 580)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 868)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 76)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 364)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 652)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 940)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 7)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 295)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 583)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 871)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 79)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 367)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 655)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 943)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 10)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 298)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 586)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 874)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 82)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 370)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 658)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 946)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 13)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 301)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 589)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 877)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 85)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 373)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 661)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 949)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 16)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 304)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 592)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 880)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 88)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 376)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 664)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 952)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 2)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 290)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 578)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 866)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 74)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 362)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 650)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 938)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 5)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 293)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 581)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 869)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 77)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 365)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 653)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 941)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 8)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 296)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 584)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 872)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 80)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 368)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 656)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 944)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 11)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 299)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 587)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 875)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 83)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 371)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 659)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 947)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 14)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 302)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 590)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 878)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 86)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 374)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 662)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 950)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 17)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 305)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 593)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 881)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 89)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 377)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 665)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 953)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 18)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 306)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 594)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 882)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 90)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 378)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 666)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 954)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 21)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 309)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 597)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 885)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 93)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 381)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 669)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 957)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 24)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 312)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 600)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 888)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 96)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 384)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 672)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 960)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 27)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 315)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 603)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 891)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 99)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 387)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 675)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 963)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 30)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 318)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 606)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 894)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 102)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 390)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 678)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 966)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 33)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 321)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 609)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 897)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 105)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 393)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 681)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 969)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 163)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 19)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 163)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 307)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 163)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 595)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 163)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 883)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 163)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 91)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 163)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 379)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 163)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 667)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 163)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 955)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 172)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 22)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 172)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 310)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 172)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 598)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 172)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 886)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 172)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 94)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 172)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 382)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 172)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 670)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 172)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 958)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 181)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 25)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 181)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 313)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 181)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 601)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 181)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 889)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 181)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 97)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 181)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 385)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 181)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 673)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 181)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 961)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 244)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 28)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 244)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 316)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 244)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 604)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 244)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 892)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 244)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 100)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 244)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 388)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 244)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 676)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 244)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 964)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 31)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 319)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 607)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 895)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 103)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 391)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 679)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 967)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 262)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 34)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 262)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 322)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 262)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 610)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 262)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 898)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 262)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 106)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 262)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 394)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 262)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 682)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 262)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 970)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 164)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 20)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 164)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 308)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 164)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 596)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 164)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 884)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 164)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 92)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 164)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 380)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 164)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 668)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 164)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 956)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 173)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 23)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 173)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 311)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 173)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 599)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 173)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 887)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 173)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 95)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 173)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 383)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 173)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 671)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 173)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 959)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 182)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 26)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 182)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 314)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 182)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 602)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 182)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 890)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 182)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 98)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 182)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 386)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 182)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 674)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 182)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 962)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 245)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 29)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 245)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 317)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 245)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 605)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 245)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 893)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 245)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 101)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 245)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 389)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 245)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 677)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 245)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 965)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 32)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 320)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 608)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 896)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 104)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 392)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 680)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 968)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 263)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 35)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 263)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 323)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 263)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 611)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 263)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 899)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 263)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 107)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 263)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 395)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 263)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 683)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 263)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 971)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 36)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 324)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 612)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 900)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 108)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 396)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 684)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 972)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 39)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 327)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 615)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 903)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 111)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 399)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 687)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 975)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 42)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 330)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 618)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 906)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 114)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 402)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 690)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 978)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 45)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 333)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 621)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 909)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 117)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 405)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 693)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 981)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 48)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 336)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 624)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 912)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 120)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 408)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 696)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 984)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 51)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 339)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 627)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 915)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 123)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 411)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 699)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 987)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 325)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 37)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 325)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 325)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 325)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 613)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 325)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 901)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 325)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 109)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 325)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 397)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 325)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 685)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 325)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 973)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 334)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 40)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 334)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 328)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 334)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 616)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 334)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 904)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 334)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 112)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 334)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 400)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 334)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 688)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 334)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 976)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 343)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 43)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 343)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 331)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 343)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 619)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 343)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 907)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 343)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 115)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 343)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 403)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 343)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 691)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 343)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 979)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 406)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 46)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 406)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 334)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 406)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 622)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 406)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 910)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 406)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 118)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 406)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 406)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 406)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 694)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 406)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 982)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 415)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 49)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 415)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 337)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 415)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 625)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 415)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 913)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 415)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 121)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 415)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 409)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 415)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 697)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 415)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 985)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 424)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 52)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 424)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 340)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 424)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 628)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 424)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 916)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 424)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 124)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 424)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 412)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 424)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 700)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 424)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 988)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 326)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 38)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 326)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 326)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 326)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 614)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 326)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 902)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 326)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 110)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 326)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 398)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 326)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 686)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 326)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 974)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 335)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 41)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 335)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 329)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 335)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 617)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 335)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 905)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 335)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 113)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 335)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 401)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 335)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 689)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 335)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 977)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 344)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 44)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 344)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 332)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 344)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 620)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 344)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 908)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 344)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 116)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 344)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 404)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 344)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 692)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 344)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 980)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 407)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 47)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 407)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 335)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 407)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 623)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 407)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 911)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 407)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 119)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 407)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 407)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 407)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 695)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 407)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 983)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 416)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 50)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 416)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 338)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 416)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 626)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 416)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 914)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 416)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 122)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 416)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 410)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 416)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 698)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 416)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 986)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 425)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 53)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 425)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 341)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 425)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 629)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 425)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 917)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 425)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 125)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 425)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 413)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 425)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 701)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 425)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 989)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 54)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 342)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 630)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 918)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 126)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 414)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 702)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 990)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 57)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 345)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 633)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 921)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 129)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 417)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 705)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 993)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 60)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 348)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 636)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 924)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 132)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 420)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 708)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 996)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 63)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 351)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 639)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 927)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 135)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 423)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 711)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 999)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 576)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 66)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 576)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 354)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 576)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 642)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 576)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 930)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 576)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 138)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 576)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 426)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 576)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 714)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 576)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 1002)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 69)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 357)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 645)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 933)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 141)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 429)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 717)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 1005)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 487)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 55)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 487)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 343)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 487)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 631)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 487)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 919)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 487)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 127)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 487)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 415)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 487)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 703)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 487)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 991)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 496)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 58)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 496)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 346)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 496)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 634)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 496)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 922)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 496)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 130)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 496)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 418)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 496)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 706)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 496)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 994)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 505)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 61)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 505)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 349)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 505)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 637)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 505)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 925)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 505)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 133)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 505)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 421)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 505)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 709)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 505)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 997)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 568)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 64)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 568)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 352)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 568)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 640)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 568)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 928)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 568)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 136)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 568)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 424)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 568)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 712)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 568)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 1000)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 577)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 67)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 577)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 355)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 577)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 643)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 577)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 931)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 577)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 139)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 577)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 427)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 577)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 715)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 577)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 1003)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 586)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 70)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 586)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 358)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 586)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 646)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 586)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 934)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 586)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 142)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 586)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 430)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 586)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 718)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 586)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 1006)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 488)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 56)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 488)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 344)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 488)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 632)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 488)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 920)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 488)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 128)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 488)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 416)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 488)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 704)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 488)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 992)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 497)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 59)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 497)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 347)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 497)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 635)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 497)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 923)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 497)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 131)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 497)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 419)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 497)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 707)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 497)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 995)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 506)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 62)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 506)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 350)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 506)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 638)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 506)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 926)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 506)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 134)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 506)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 422)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 506)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 710)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 506)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 998)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 569)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 65)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 569)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 353)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 569)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 641)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 569)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 929)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 569)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 137)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 569)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 425)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 569)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 713)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 569)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 1001)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 578)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 68)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 578)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 356)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 578)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 644)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 578)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 932)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 578)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 140)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 578)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 428)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 578)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 716)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 578)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 1004)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 587)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 71)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 587)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 359)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 587)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 647)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 587)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 935)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 587)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 143)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 587)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 431)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 587)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 719)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 587)] * kernel_shared[(((((int)threadIdx.x) / 49) * 144) + 1007)]));
      }
      for (int i1_inner = 0; i1_inner < 2; ++i1_inner) {
        compute[((((((int)blockIdx.x) * 784) + ((((int)threadIdx.x) / 49) * 98)) + (i1_inner * 49)) + (((int)threadIdx.x) % 49))] = max((conv2d_nchw[i1_inner] + bias[(((((int)blockIdx.x) * 16) + ((((int)threadIdx.x) / 49) * 2)) + i1_inner)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 784) + ((((int)threadIdx.x) / 49) * 98)) + (i1_inner * 49)) + (((int)threadIdx.x) % 49)) + 196)] = max((conv2d_nchw[(i1_inner + 2)] + bias[((((((int)blockIdx.x) * 16) + ((((int)threadIdx.x) / 49) * 2)) + i1_inner) + 4)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 784) + ((((int)threadIdx.x) / 49) * 98)) + (i1_inner * 49)) + (((int)threadIdx.x) % 49)) + 392)] = max((conv2d_nchw[(i1_inner + 4)] + bias[((((((int)blockIdx.x) * 16) + ((((int)threadIdx.x) / 49) * 2)) + i1_inner) + 8)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 784) + ((((int)threadIdx.x) / 49) * 98)) + (i1_inner * 49)) + (((int)threadIdx.x) % 49)) + 588)] = max((conv2d_nchw[(i1_inner + 6)] + bias[((((((int)blockIdx.x) * 16) + ((((int)threadIdx.x) / 49) * 2)) + i1_inner) + 12)]), 0.000000e+00f);
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 190-194

A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.

.. GENERATED FROM PYTHON SOURCE LINES 194-216

.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Resume search:
    /venv/apache-tvm-py3.7/lib/python3.7/site-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 4 minutes  56.158 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
