
.. DO NOT EDIT. THIS FILE WAS AUTOMATICALLY GENERATED BY
.. TVM'S MONKEY-PATCHED VERSION OF SPHINX-GALLERY. TO MAKE
.. CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.py"

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        This tutorial can be used interactively with Google Colab! You can also click
        :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>` to run the Jupyter notebook locally.

        .. image:: https://raw.githubusercontent.com/tlc-pack/web-data/main/images/utilities/colab_button.svg
            :align: center
            :target: https://colab.research.google.com/github/apache/tvm-site/blob/asf-site/docs/_downloads/5f1f7bd7d90710fd404f7bcdc4965622/tune_conv2d_layer_cuda.ipynb
            :width: 300px

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.

.. GENERATED FROM PYTHON SOURCE LINES 39-47

.. code-block:: default


    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python








.. GENERATED FROM PYTHON SOURCE LINES 51-56

Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.

.. GENERATED FROM PYTHON SOURCE LINES 56-68

.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]









.. GENERATED FROM PYTHON SOURCE LINES 69-72

Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.

.. GENERATED FROM PYTHON SOURCE LINES 72-85

.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)





.. GENERATED FROM PYTHON SOURCE LINES 86-103

Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.

.. GENERATED FROM PYTHON SOURCE LINES 103-113

.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Get devices for measurement successfully!




.. GENERATED FROM PYTHON SOURCE LINES 114-120

Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.

.. GENERATED FROM PYTHON SOURCE LINES 120-129

.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx








.. GENERATED FROM PYTHON SOURCE LINES 130-133

We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.

.. GENERATED FROM PYTHON SOURCE LINES 133-137

.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Lowered TIR:
    @I.ir_module
    class Module:
        @T.prim_func
        def main(data: T.Buffer((1, 512, 7, 7), "float32"), kernel: T.Buffer((512, 512, 3, 3), "float32"), bias: T.Buffer((1, 512, 1, 1), "float32"), compute: T.Buffer((1, 512, 7, 7), "float32")):
            T.func_attr({"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True})
            blockIdx_x = T.env_thread("blockIdx.x")
            T.launch_thread(blockIdx_x, 32)
            conv2d_nchw = T.allocate([7], "float32", "local")
            pad_temp_shared = T.allocate([2016], "float32", "shared")
            kernel_shared = T.allocate([1536], "float32", "shared")
            threadIdx_x = T.env_thread("threadIdx.x")
            T.launch_thread(threadIdx_x, 112)
            conv2d_nchw_1 = T.buffer_decl((7,), data=conv2d_nchw, scope="local", align=16)
            conv2d_nchw_1[0] = T.float32(0)
            conv2d_nchw_1[1] = T.float32(0)
            conv2d_nchw_1[2] = T.float32(0)
            conv2d_nchw_1[3] = T.float32(0)
            conv2d_nchw_1[4] = T.float32(0)
            conv2d_nchw_1[5] = T.float32(0)
            conv2d_nchw_1[6] = T.float32(0)
            for rc_outer_outer, rx_outer_outer in T.grid(16, 3):
                cse_var_2: T.int32 = rc_outer_outer * 1568
                cse_var_1: T.int32 = rc_outer_outer * 288
                threadIdx_x_1 = T.env_thread("threadIdx.x")
                pad_temp_shared_1 = T.buffer_decl((2016,), data=pad_temp_shared, scope="shared")
                data_1 = T.buffer_decl((25088,), data=data.data)
                with T.launch_thread(threadIdx_x_1, 112):
                    pad_temp_shared_1[threadIdx_x_1] = T.if_then_else(7 <= threadIdx_x_1 % 63 and threadIdx_x_1 % 63 < 56 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + threadIdx_x_1 // 63 * 49 + rx_outer_outer + threadIdx_x_1 % 63 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 112):
                    pad_temp_shared_1[threadIdx_x_1 + 112] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 7) % 9 and (threadIdx_x_1 // 7 + 7) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 112) // 63 * 49 + (threadIdx_x_1 // 7 + 7) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 112):
                    pad_temp_shared_1[threadIdx_x_1 + 224] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 5) % 9 and (threadIdx_x_1 // 7 + 5) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 224) // 63 * 49 + (threadIdx_x_1 // 7 + 5) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 112):
                    pad_temp_shared_1[threadIdx_x_1 + 336] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 3) % 9 and (threadIdx_x_1 // 7 + 3) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 336) // 63 * 49 + (threadIdx_x_1 // 7 + 3) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 112):
                    pad_temp_shared_1[threadIdx_x_1 + 448] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 1) % 9 and (threadIdx_x_1 // 7 + 1) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 448) // 63 * 49 + (threadIdx_x_1 // 7 + 1) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 112):
                    pad_temp_shared_1[threadIdx_x_1 + 560] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 8) % 9 and (threadIdx_x_1 // 7 + 8) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 560) // 63 * 49 + (threadIdx_x_1 // 7 + 8) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 112):
                    pad_temp_shared_1[threadIdx_x_1 + 672] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 6) % 9 and (threadIdx_x_1 // 7 + 6) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 672) // 63 * 49 + (threadIdx_x_1 // 7 + 6) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 112):
                    pad_temp_shared_1[threadIdx_x_1 + 784] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 4) % 9 and (threadIdx_x_1 // 7 + 4) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 784) // 63 * 49 + (threadIdx_x_1 // 7 + 4) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 112):
                    pad_temp_shared_1[threadIdx_x_1 + 896] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 2) % 9 and (threadIdx_x_1 // 7 + 2) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 896) // 63 * 49 + (threadIdx_x_1 // 7 + 2) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 112):
                    pad_temp_shared_1[threadIdx_x_1 + 1008] = T.if_then_else(7 <= threadIdx_x_1 % 63 and threadIdx_x_1 % 63 < 56 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + threadIdx_x_1 // 63 * 49 + rx_outer_outer + threadIdx_x_1 % 63 + 776], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 112):
                    pad_temp_shared_1[threadIdx_x_1 + 1120] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 7) % 9 and (threadIdx_x_1 // 7 + 7) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1120) // 63 * 49 + (threadIdx_x_1 // 7 + 7) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 112):
                    pad_temp_shared_1[threadIdx_x_1 + 1232] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 5) % 9 and (threadIdx_x_1 // 7 + 5) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1232) // 63 * 49 + (threadIdx_x_1 // 7 + 5) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 112):
                    pad_temp_shared_1[threadIdx_x_1 + 1344] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 3) % 9 and (threadIdx_x_1 // 7 + 3) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1344) // 63 * 49 + (threadIdx_x_1 // 7 + 3) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 112):
                    pad_temp_shared_1[threadIdx_x_1 + 1456] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 1) % 9 and (threadIdx_x_1 // 7 + 1) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1456) // 63 * 49 + (threadIdx_x_1 // 7 + 1) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 112):
                    pad_temp_shared_1[threadIdx_x_1 + 1568] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 8) % 9 and (threadIdx_x_1 // 7 + 8) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1568) // 63 * 49 + (threadIdx_x_1 // 7 + 8) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 112):
                    pad_temp_shared_1[threadIdx_x_1 + 1680] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 6) % 9 and (threadIdx_x_1 // 7 + 6) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1680) // 63 * 49 + (threadIdx_x_1 // 7 + 6) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 112):
                    pad_temp_shared_1[threadIdx_x_1 + 1792] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 4) % 9 and (threadIdx_x_1 // 7 + 4) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1792) // 63 * 49 + (threadIdx_x_1 // 7 + 4) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                with T.launch_thread(threadIdx_x_1, 112):
                    pad_temp_shared_1[threadIdx_x_1 + 1904] = T.if_then_else(1 <= (threadIdx_x_1 // 7 + 2) % 9 and (threadIdx_x_1 // 7 + 2) % 9 < 8 and 1 <= rx_outer_outer + threadIdx_x_1 % 7 and rx_outer_outer + threadIdx_x_1 % 7 < 8, data_1[cse_var_2 + (threadIdx_x_1 + 1904) // 63 * 49 + (threadIdx_x_1 // 7 + 2) % 9 * 7 + rx_outer_outer + threadIdx_x_1 % 7 - 8], T.float32(0))
                threadIdx_x_2 = T.env_thread("threadIdx.x")
                kernel_shared_1 = T.buffer_decl((1536,), data=kernel_shared, scope="shared")
                kernel_1 = T.buffer_decl((2359296,), data=kernel.data)
                with T.launch_thread(threadIdx_x_2, 112):
                    kernel_shared_1[threadIdx_x_2] = kernel_1[blockIdx_x * 73728 + threadIdx_x_2 // 96 * 4608 + cse_var_1 + threadIdx_x_2 % 96 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 112):
                    kernel_shared_1[threadIdx_x_2 + 112] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 112) // 96 * 4608 + cse_var_1 + (threadIdx_x_2 + 16) % 96 // 3 * 9 + (threadIdx_x_2 + 1) % 3 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 112):
                    kernel_shared_1[threadIdx_x_2 + 224] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 224) // 96 * 4608 + cse_var_1 + (threadIdx_x_2 + 32) % 96 // 3 * 9 + (threadIdx_x_2 + 2) % 3 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 112):
                    kernel_shared_1[threadIdx_x_2 + 336] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 336) // 96 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 16) % 32 * 9 + threadIdx_x_2 % 3 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 112):
                    kernel_shared_1[threadIdx_x_2 + 448] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 448) // 96 * 4608 + cse_var_1 + (threadIdx_x_2 + 64) % 96 // 3 * 9 + (threadIdx_x_2 + 1) % 3 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 112):
                    kernel_shared_1[threadIdx_x_2 + 560] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 560) // 96 * 4608 + cse_var_1 + (threadIdx_x_2 + 80) % 96 // 3 * 9 + (threadIdx_x_2 + 2) % 3 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 112):
                    kernel_shared_1[threadIdx_x_2 + 672] = kernel_1[blockIdx_x * 73728 + threadIdx_x_2 // 96 * 4608 + cse_var_1 + threadIdx_x_2 % 96 * 3 + rx_outer_outer + 32256]
                with T.launch_thread(threadIdx_x_2, 112):
                    kernel_shared_1[threadIdx_x_2 + 784] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 784) // 96 * 4608 + cse_var_1 + (threadIdx_x_2 + 16) % 96 // 3 * 9 + (threadIdx_x_2 + 1) % 3 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 112):
                    kernel_shared_1[threadIdx_x_2 + 896] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 896) // 96 * 4608 + cse_var_1 + (threadIdx_x_2 + 32) % 96 // 3 * 9 + (threadIdx_x_2 + 2) % 3 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 112):
                    kernel_shared_1[threadIdx_x_2 + 1008] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1008) // 96 * 4608 + cse_var_1 + (threadIdx_x_2 // 3 + 16) % 32 * 9 + threadIdx_x_2 % 3 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 112):
                    kernel_shared_1[threadIdx_x_2 + 1120] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1120) // 96 * 4608 + cse_var_1 + (threadIdx_x_2 + 64) % 96 // 3 * 9 + (threadIdx_x_2 + 1) % 3 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 112):
                    kernel_shared_1[threadIdx_x_2 + 1232] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1232) // 96 * 4608 + cse_var_1 + (threadIdx_x_2 + 80) % 96 // 3 * 9 + (threadIdx_x_2 + 2) % 3 * 3 + rx_outer_outer]
                with T.launch_thread(threadIdx_x_2, 112):
                    kernel_shared_1[threadIdx_x_2 + 1344] = kernel_1[blockIdx_x * 73728 + threadIdx_x_2 // 96 * 4608 + cse_var_1 + threadIdx_x_2 % 96 * 3 + rx_outer_outer + 64512]
                with T.launch_thread(threadIdx_x_2, 112):
                    if T.likely(threadIdx_x_2 < 80):
                        kernel_shared_1[threadIdx_x_2 + 1456] = kernel_1[blockIdx_x * 73728 + (threadIdx_x_2 + 1456) // 96 * 4608 + cse_var_1 + (threadIdx_x_2 + 16) % 96 // 3 * 9 + (threadIdx_x_2 + 1) % 3 * 3 + rx_outer_outer]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7] * kernel_shared_1[threadIdx_x // 7 * 96]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1] * kernel_shared_1[threadIdx_x // 7 * 96]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 2] * kernel_shared_1[threadIdx_x // 7 * 96]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 3] * kernel_shared_1[threadIdx_x // 7 * 96]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 4] * kernel_shared_1[threadIdx_x // 7 * 96]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 5] * kernel_shared_1[threadIdx_x // 7 * 96]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 6] * kernel_shared_1[threadIdx_x // 7 * 96]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 7] * kernel_shared_1[threadIdx_x // 7 * 96 + 1]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 8] * kernel_shared_1[threadIdx_x // 7 * 96 + 1]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 9] * kernel_shared_1[threadIdx_x // 7 * 96 + 1]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 10] * kernel_shared_1[threadIdx_x // 7 * 96 + 1]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 11] * kernel_shared_1[threadIdx_x // 7 * 96 + 1]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 12] * kernel_shared_1[threadIdx_x // 7 * 96 + 1]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 13] * kernel_shared_1[threadIdx_x // 7 * 96 + 1]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 14] * kernel_shared_1[threadIdx_x // 7 * 96 + 2]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 15] * kernel_shared_1[threadIdx_x // 7 * 96 + 2]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 16] * kernel_shared_1[threadIdx_x // 7 * 96 + 2]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 17] * kernel_shared_1[threadIdx_x // 7 * 96 + 2]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 18] * kernel_shared_1[threadIdx_x // 7 * 96 + 2]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 19] * kernel_shared_1[threadIdx_x // 7 * 96 + 2]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 20] * kernel_shared_1[threadIdx_x // 7 * 96 + 2]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 63] * kernel_shared_1[threadIdx_x // 7 * 96 + 3]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 64] * kernel_shared_1[threadIdx_x // 7 * 96 + 3]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 65] * kernel_shared_1[threadIdx_x // 7 * 96 + 3]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 66] * kernel_shared_1[threadIdx_x // 7 * 96 + 3]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 67] * kernel_shared_1[threadIdx_x // 7 * 96 + 3]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 68] * kernel_shared_1[threadIdx_x // 7 * 96 + 3]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 69] * kernel_shared_1[threadIdx_x // 7 * 96 + 3]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 70] * kernel_shared_1[threadIdx_x // 7 * 96 + 4]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 71] * kernel_shared_1[threadIdx_x // 7 * 96 + 4]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 72] * kernel_shared_1[threadIdx_x // 7 * 96 + 4]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 73] * kernel_shared_1[threadIdx_x // 7 * 96 + 4]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 74] * kernel_shared_1[threadIdx_x // 7 * 96 + 4]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 75] * kernel_shared_1[threadIdx_x // 7 * 96 + 4]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 76] * kernel_shared_1[threadIdx_x // 7 * 96 + 4]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 77] * kernel_shared_1[threadIdx_x // 7 * 96 + 5]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 78] * kernel_shared_1[threadIdx_x // 7 * 96 + 5]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 79] * kernel_shared_1[threadIdx_x // 7 * 96 + 5]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 80] * kernel_shared_1[threadIdx_x // 7 * 96 + 5]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 81] * kernel_shared_1[threadIdx_x // 7 * 96 + 5]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 82] * kernel_shared_1[threadIdx_x // 7 * 96 + 5]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 83] * kernel_shared_1[threadIdx_x // 7 * 96 + 5]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 126] * kernel_shared_1[threadIdx_x // 7 * 96 + 6]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 127] * kernel_shared_1[threadIdx_x // 7 * 96 + 6]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 128] * kernel_shared_1[threadIdx_x // 7 * 96 + 6]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 129] * kernel_shared_1[threadIdx_x // 7 * 96 + 6]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 130] * kernel_shared_1[threadIdx_x // 7 * 96 + 6]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 131] * kernel_shared_1[threadIdx_x // 7 * 96 + 6]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 132] * kernel_shared_1[threadIdx_x // 7 * 96 + 6]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 133] * kernel_shared_1[threadIdx_x // 7 * 96 + 7]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 134] * kernel_shared_1[threadIdx_x // 7 * 96 + 7]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 135] * kernel_shared_1[threadIdx_x // 7 * 96 + 7]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 136] * kernel_shared_1[threadIdx_x // 7 * 96 + 7]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 137] * kernel_shared_1[threadIdx_x // 7 * 96 + 7]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 138] * kernel_shared_1[threadIdx_x // 7 * 96 + 7]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 139] * kernel_shared_1[threadIdx_x // 7 * 96 + 7]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 140] * kernel_shared_1[threadIdx_x // 7 * 96 + 8]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 141] * kernel_shared_1[threadIdx_x // 7 * 96 + 8]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 142] * kernel_shared_1[threadIdx_x // 7 * 96 + 8]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 143] * kernel_shared_1[threadIdx_x // 7 * 96 + 8]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 144] * kernel_shared_1[threadIdx_x // 7 * 96 + 8]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 145] * kernel_shared_1[threadIdx_x // 7 * 96 + 8]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 146] * kernel_shared_1[threadIdx_x // 7 * 96 + 8]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 189] * kernel_shared_1[threadIdx_x // 7 * 96 + 9]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 190] * kernel_shared_1[threadIdx_x // 7 * 96 + 9]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 191] * kernel_shared_1[threadIdx_x // 7 * 96 + 9]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 192] * kernel_shared_1[threadIdx_x // 7 * 96 + 9]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 193] * kernel_shared_1[threadIdx_x // 7 * 96 + 9]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 194] * kernel_shared_1[threadIdx_x // 7 * 96 + 9]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 195] * kernel_shared_1[threadIdx_x // 7 * 96 + 9]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 196] * kernel_shared_1[threadIdx_x // 7 * 96 + 10]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 197] * kernel_shared_1[threadIdx_x // 7 * 96 + 10]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 198] * kernel_shared_1[threadIdx_x // 7 * 96 + 10]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 199] * kernel_shared_1[threadIdx_x // 7 * 96 + 10]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 200] * kernel_shared_1[threadIdx_x // 7 * 96 + 10]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 201] * kernel_shared_1[threadIdx_x // 7 * 96 + 10]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 202] * kernel_shared_1[threadIdx_x // 7 * 96 + 10]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 203] * kernel_shared_1[threadIdx_x // 7 * 96 + 11]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 204] * kernel_shared_1[threadIdx_x // 7 * 96 + 11]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 205] * kernel_shared_1[threadIdx_x // 7 * 96 + 11]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 206] * kernel_shared_1[threadIdx_x // 7 * 96 + 11]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 207] * kernel_shared_1[threadIdx_x // 7 * 96 + 11]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 208] * kernel_shared_1[threadIdx_x // 7 * 96 + 11]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 209] * kernel_shared_1[threadIdx_x // 7 * 96 + 11]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 252] * kernel_shared_1[threadIdx_x // 7 * 96 + 12]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 253] * kernel_shared_1[threadIdx_x // 7 * 96 + 12]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 254] * kernel_shared_1[threadIdx_x // 7 * 96 + 12]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 255] * kernel_shared_1[threadIdx_x // 7 * 96 + 12]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 256] * kernel_shared_1[threadIdx_x // 7 * 96 + 12]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 257] * kernel_shared_1[threadIdx_x // 7 * 96 + 12]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 258] * kernel_shared_1[threadIdx_x // 7 * 96 + 12]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 259] * kernel_shared_1[threadIdx_x // 7 * 96 + 13]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 260] * kernel_shared_1[threadIdx_x // 7 * 96 + 13]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 261] * kernel_shared_1[threadIdx_x // 7 * 96 + 13]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 262] * kernel_shared_1[threadIdx_x // 7 * 96 + 13]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 263] * kernel_shared_1[threadIdx_x // 7 * 96 + 13]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 264] * kernel_shared_1[threadIdx_x // 7 * 96 + 13]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 265] * kernel_shared_1[threadIdx_x // 7 * 96 + 13]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 266] * kernel_shared_1[threadIdx_x // 7 * 96 + 14]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 267] * kernel_shared_1[threadIdx_x // 7 * 96 + 14]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 268] * kernel_shared_1[threadIdx_x // 7 * 96 + 14]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 269] * kernel_shared_1[threadIdx_x // 7 * 96 + 14]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 270] * kernel_shared_1[threadIdx_x // 7 * 96 + 14]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 271] * kernel_shared_1[threadIdx_x // 7 * 96 + 14]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 272] * kernel_shared_1[threadIdx_x // 7 * 96 + 14]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 315] * kernel_shared_1[threadIdx_x // 7 * 96 + 15]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 316] * kernel_shared_1[threadIdx_x // 7 * 96 + 15]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 317] * kernel_shared_1[threadIdx_x // 7 * 96 + 15]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 318] * kernel_shared_1[threadIdx_x // 7 * 96 + 15]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 319] * kernel_shared_1[threadIdx_x // 7 * 96 + 15]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 320] * kernel_shared_1[threadIdx_x // 7 * 96 + 15]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 321] * kernel_shared_1[threadIdx_x // 7 * 96 + 15]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 322] * kernel_shared_1[threadIdx_x // 7 * 96 + 16]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 323] * kernel_shared_1[threadIdx_x // 7 * 96 + 16]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 324] * kernel_shared_1[threadIdx_x // 7 * 96 + 16]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 325] * kernel_shared_1[threadIdx_x // 7 * 96 + 16]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 326] * kernel_shared_1[threadIdx_x // 7 * 96 + 16]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 327] * kernel_shared_1[threadIdx_x // 7 * 96 + 16]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 328] * kernel_shared_1[threadIdx_x // 7 * 96 + 16]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 329] * kernel_shared_1[threadIdx_x // 7 * 96 + 17]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 330] * kernel_shared_1[threadIdx_x // 7 * 96 + 17]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 331] * kernel_shared_1[threadIdx_x // 7 * 96 + 17]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 332] * kernel_shared_1[threadIdx_x // 7 * 96 + 17]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 333] * kernel_shared_1[threadIdx_x // 7 * 96 + 17]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 334] * kernel_shared_1[threadIdx_x // 7 * 96 + 17]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 335] * kernel_shared_1[threadIdx_x // 7 * 96 + 17]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 378] * kernel_shared_1[threadIdx_x // 7 * 96 + 18]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 379] * kernel_shared_1[threadIdx_x // 7 * 96 + 18]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 380] * kernel_shared_1[threadIdx_x // 7 * 96 + 18]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 381] * kernel_shared_1[threadIdx_x // 7 * 96 + 18]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 382] * kernel_shared_1[threadIdx_x // 7 * 96 + 18]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 383] * kernel_shared_1[threadIdx_x // 7 * 96 + 18]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 384] * kernel_shared_1[threadIdx_x // 7 * 96 + 18]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 385] * kernel_shared_1[threadIdx_x // 7 * 96 + 19]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 386] * kernel_shared_1[threadIdx_x // 7 * 96 + 19]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 387] * kernel_shared_1[threadIdx_x // 7 * 96 + 19]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 388] * kernel_shared_1[threadIdx_x // 7 * 96 + 19]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 389] * kernel_shared_1[threadIdx_x // 7 * 96 + 19]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 390] * kernel_shared_1[threadIdx_x // 7 * 96 + 19]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 391] * kernel_shared_1[threadIdx_x // 7 * 96 + 19]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 392] * kernel_shared_1[threadIdx_x // 7 * 96 + 20]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 393] * kernel_shared_1[threadIdx_x // 7 * 96 + 20]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 394] * kernel_shared_1[threadIdx_x // 7 * 96 + 20]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 395] * kernel_shared_1[threadIdx_x // 7 * 96 + 20]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 396] * kernel_shared_1[threadIdx_x // 7 * 96 + 20]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 397] * kernel_shared_1[threadIdx_x // 7 * 96 + 20]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 398] * kernel_shared_1[threadIdx_x // 7 * 96 + 20]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 441] * kernel_shared_1[threadIdx_x // 7 * 96 + 21]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 442] * kernel_shared_1[threadIdx_x // 7 * 96 + 21]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 443] * kernel_shared_1[threadIdx_x // 7 * 96 + 21]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 444] * kernel_shared_1[threadIdx_x // 7 * 96 + 21]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 445] * kernel_shared_1[threadIdx_x // 7 * 96 + 21]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 446] * kernel_shared_1[threadIdx_x // 7 * 96 + 21]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 447] * kernel_shared_1[threadIdx_x // 7 * 96 + 21]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 448] * kernel_shared_1[threadIdx_x // 7 * 96 + 22]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 449] * kernel_shared_1[threadIdx_x // 7 * 96 + 22]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 450] * kernel_shared_1[threadIdx_x // 7 * 96 + 22]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 451] * kernel_shared_1[threadIdx_x // 7 * 96 + 22]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 452] * kernel_shared_1[threadIdx_x // 7 * 96 + 22]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 453] * kernel_shared_1[threadIdx_x // 7 * 96 + 22]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 454] * kernel_shared_1[threadIdx_x // 7 * 96 + 22]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 455] * kernel_shared_1[threadIdx_x // 7 * 96 + 23]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 456] * kernel_shared_1[threadIdx_x // 7 * 96 + 23]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 457] * kernel_shared_1[threadIdx_x // 7 * 96 + 23]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 458] * kernel_shared_1[threadIdx_x // 7 * 96 + 23]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 459] * kernel_shared_1[threadIdx_x // 7 * 96 + 23]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 460] * kernel_shared_1[threadIdx_x // 7 * 96 + 23]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 461] * kernel_shared_1[threadIdx_x // 7 * 96 + 23]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 504] * kernel_shared_1[threadIdx_x // 7 * 96 + 24]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 505] * kernel_shared_1[threadIdx_x // 7 * 96 + 24]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 506] * kernel_shared_1[threadIdx_x // 7 * 96 + 24]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 507] * kernel_shared_1[threadIdx_x // 7 * 96 + 24]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 508] * kernel_shared_1[threadIdx_x // 7 * 96 + 24]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 509] * kernel_shared_1[threadIdx_x // 7 * 96 + 24]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 510] * kernel_shared_1[threadIdx_x // 7 * 96 + 24]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 511] * kernel_shared_1[threadIdx_x // 7 * 96 + 25]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 512] * kernel_shared_1[threadIdx_x // 7 * 96 + 25]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 513] * kernel_shared_1[threadIdx_x // 7 * 96 + 25]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 514] * kernel_shared_1[threadIdx_x // 7 * 96 + 25]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 515] * kernel_shared_1[threadIdx_x // 7 * 96 + 25]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 516] * kernel_shared_1[threadIdx_x // 7 * 96 + 25]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 517] * kernel_shared_1[threadIdx_x // 7 * 96 + 25]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 518] * kernel_shared_1[threadIdx_x // 7 * 96 + 26]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 519] * kernel_shared_1[threadIdx_x // 7 * 96 + 26]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 520] * kernel_shared_1[threadIdx_x // 7 * 96 + 26]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 521] * kernel_shared_1[threadIdx_x // 7 * 96 + 26]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 522] * kernel_shared_1[threadIdx_x // 7 * 96 + 26]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 523] * kernel_shared_1[threadIdx_x // 7 * 96 + 26]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 524] * kernel_shared_1[threadIdx_x // 7 * 96 + 26]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 567] * kernel_shared_1[threadIdx_x // 7 * 96 + 27]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 568] * kernel_shared_1[threadIdx_x // 7 * 96 + 27]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 569] * kernel_shared_1[threadIdx_x // 7 * 96 + 27]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 570] * kernel_shared_1[threadIdx_x // 7 * 96 + 27]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 571] * kernel_shared_1[threadIdx_x // 7 * 96 + 27]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 572] * kernel_shared_1[threadIdx_x // 7 * 96 + 27]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 573] * kernel_shared_1[threadIdx_x // 7 * 96 + 27]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 574] * kernel_shared_1[threadIdx_x // 7 * 96 + 28]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 575] * kernel_shared_1[threadIdx_x // 7 * 96 + 28]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 576] * kernel_shared_1[threadIdx_x // 7 * 96 + 28]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 577] * kernel_shared_1[threadIdx_x // 7 * 96 + 28]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 578] * kernel_shared_1[threadIdx_x // 7 * 96 + 28]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 579] * kernel_shared_1[threadIdx_x // 7 * 96 + 28]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 580] * kernel_shared_1[threadIdx_x // 7 * 96 + 28]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 581] * kernel_shared_1[threadIdx_x // 7 * 96 + 29]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 582] * kernel_shared_1[threadIdx_x // 7 * 96 + 29]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 583] * kernel_shared_1[threadIdx_x // 7 * 96 + 29]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 584] * kernel_shared_1[threadIdx_x // 7 * 96 + 29]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 585] * kernel_shared_1[threadIdx_x // 7 * 96 + 29]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 586] * kernel_shared_1[threadIdx_x // 7 * 96 + 29]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 587] * kernel_shared_1[threadIdx_x // 7 * 96 + 29]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 630] * kernel_shared_1[threadIdx_x // 7 * 96 + 30]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 631] * kernel_shared_1[threadIdx_x // 7 * 96 + 30]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 632] * kernel_shared_1[threadIdx_x // 7 * 96 + 30]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 633] * kernel_shared_1[threadIdx_x // 7 * 96 + 30]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 634] * kernel_shared_1[threadIdx_x // 7 * 96 + 30]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 635] * kernel_shared_1[threadIdx_x // 7 * 96 + 30]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 636] * kernel_shared_1[threadIdx_x // 7 * 96 + 30]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 637] * kernel_shared_1[threadIdx_x // 7 * 96 + 31]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 638] * kernel_shared_1[threadIdx_x // 7 * 96 + 31]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 639] * kernel_shared_1[threadIdx_x // 7 * 96 + 31]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 640] * kernel_shared_1[threadIdx_x // 7 * 96 + 31]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 641] * kernel_shared_1[threadIdx_x // 7 * 96 + 31]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 642] * kernel_shared_1[threadIdx_x // 7 * 96 + 31]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 643] * kernel_shared_1[threadIdx_x // 7 * 96 + 31]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 644] * kernel_shared_1[threadIdx_x // 7 * 96 + 32]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 645] * kernel_shared_1[threadIdx_x // 7 * 96 + 32]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 646] * kernel_shared_1[threadIdx_x // 7 * 96 + 32]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 647] * kernel_shared_1[threadIdx_x // 7 * 96 + 32]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 648] * kernel_shared_1[threadIdx_x // 7 * 96 + 32]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 649] * kernel_shared_1[threadIdx_x // 7 * 96 + 32]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 650] * kernel_shared_1[threadIdx_x // 7 * 96 + 32]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 693] * kernel_shared_1[threadIdx_x // 7 * 96 + 33]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 694] * kernel_shared_1[threadIdx_x // 7 * 96 + 33]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 695] * kernel_shared_1[threadIdx_x // 7 * 96 + 33]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 696] * kernel_shared_1[threadIdx_x // 7 * 96 + 33]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 697] * kernel_shared_1[threadIdx_x // 7 * 96 + 33]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 698] * kernel_shared_1[threadIdx_x // 7 * 96 + 33]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 699] * kernel_shared_1[threadIdx_x // 7 * 96 + 33]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 700] * kernel_shared_1[threadIdx_x // 7 * 96 + 34]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 701] * kernel_shared_1[threadIdx_x // 7 * 96 + 34]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 702] * kernel_shared_1[threadIdx_x // 7 * 96 + 34]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 703] * kernel_shared_1[threadIdx_x // 7 * 96 + 34]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 704] * kernel_shared_1[threadIdx_x // 7 * 96 + 34]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 705] * kernel_shared_1[threadIdx_x // 7 * 96 + 34]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 706] * kernel_shared_1[threadIdx_x // 7 * 96 + 34]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 707] * kernel_shared_1[threadIdx_x // 7 * 96 + 35]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 708] * kernel_shared_1[threadIdx_x // 7 * 96 + 35]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 709] * kernel_shared_1[threadIdx_x // 7 * 96 + 35]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 710] * kernel_shared_1[threadIdx_x // 7 * 96 + 35]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 711] * kernel_shared_1[threadIdx_x // 7 * 96 + 35]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 712] * kernel_shared_1[threadIdx_x // 7 * 96 + 35]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 713] * kernel_shared_1[threadIdx_x // 7 * 96 + 35]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 756] * kernel_shared_1[threadIdx_x // 7 * 96 + 36]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 757] * kernel_shared_1[threadIdx_x // 7 * 96 + 36]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 758] * kernel_shared_1[threadIdx_x // 7 * 96 + 36]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 759] * kernel_shared_1[threadIdx_x // 7 * 96 + 36]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 760] * kernel_shared_1[threadIdx_x // 7 * 96 + 36]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 761] * kernel_shared_1[threadIdx_x // 7 * 96 + 36]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 762] * kernel_shared_1[threadIdx_x // 7 * 96 + 36]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 763] * kernel_shared_1[threadIdx_x // 7 * 96 + 37]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 764] * kernel_shared_1[threadIdx_x // 7 * 96 + 37]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 765] * kernel_shared_1[threadIdx_x // 7 * 96 + 37]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 766] * kernel_shared_1[threadIdx_x // 7 * 96 + 37]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 767] * kernel_shared_1[threadIdx_x // 7 * 96 + 37]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 768] * kernel_shared_1[threadIdx_x // 7 * 96 + 37]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 769] * kernel_shared_1[threadIdx_x // 7 * 96 + 37]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 770] * kernel_shared_1[threadIdx_x // 7 * 96 + 38]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 771] * kernel_shared_1[threadIdx_x // 7 * 96 + 38]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 772] * kernel_shared_1[threadIdx_x // 7 * 96 + 38]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 773] * kernel_shared_1[threadIdx_x // 7 * 96 + 38]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 774] * kernel_shared_1[threadIdx_x // 7 * 96 + 38]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 775] * kernel_shared_1[threadIdx_x // 7 * 96 + 38]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 776] * kernel_shared_1[threadIdx_x // 7 * 96 + 38]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 819] * kernel_shared_1[threadIdx_x // 7 * 96 + 39]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 820] * kernel_shared_1[threadIdx_x // 7 * 96 + 39]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 821] * kernel_shared_1[threadIdx_x // 7 * 96 + 39]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 822] * kernel_shared_1[threadIdx_x // 7 * 96 + 39]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 823] * kernel_shared_1[threadIdx_x // 7 * 96 + 39]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 824] * kernel_shared_1[threadIdx_x // 7 * 96 + 39]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 825] * kernel_shared_1[threadIdx_x // 7 * 96 + 39]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 826] * kernel_shared_1[threadIdx_x // 7 * 96 + 40]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 827] * kernel_shared_1[threadIdx_x // 7 * 96 + 40]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 828] * kernel_shared_1[threadIdx_x // 7 * 96 + 40]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 829] * kernel_shared_1[threadIdx_x // 7 * 96 + 40]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 830] * kernel_shared_1[threadIdx_x // 7 * 96 + 40]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 831] * kernel_shared_1[threadIdx_x // 7 * 96 + 40]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 832] * kernel_shared_1[threadIdx_x // 7 * 96 + 40]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 833] * kernel_shared_1[threadIdx_x // 7 * 96 + 41]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 834] * kernel_shared_1[threadIdx_x // 7 * 96 + 41]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 835] * kernel_shared_1[threadIdx_x // 7 * 96 + 41]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 836] * kernel_shared_1[threadIdx_x // 7 * 96 + 41]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 837] * kernel_shared_1[threadIdx_x // 7 * 96 + 41]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 838] * kernel_shared_1[threadIdx_x // 7 * 96 + 41]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 839] * kernel_shared_1[threadIdx_x // 7 * 96 + 41]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 882] * kernel_shared_1[threadIdx_x // 7 * 96 + 42]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 883] * kernel_shared_1[threadIdx_x // 7 * 96 + 42]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 884] * kernel_shared_1[threadIdx_x // 7 * 96 + 42]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 885] * kernel_shared_1[threadIdx_x // 7 * 96 + 42]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 886] * kernel_shared_1[threadIdx_x // 7 * 96 + 42]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 887] * kernel_shared_1[threadIdx_x // 7 * 96 + 42]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 888] * kernel_shared_1[threadIdx_x // 7 * 96 + 42]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 889] * kernel_shared_1[threadIdx_x // 7 * 96 + 43]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 890] * kernel_shared_1[threadIdx_x // 7 * 96 + 43]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 891] * kernel_shared_1[threadIdx_x // 7 * 96 + 43]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 892] * kernel_shared_1[threadIdx_x // 7 * 96 + 43]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 893] * kernel_shared_1[threadIdx_x // 7 * 96 + 43]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 894] * kernel_shared_1[threadIdx_x // 7 * 96 + 43]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 895] * kernel_shared_1[threadIdx_x // 7 * 96 + 43]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 896] * kernel_shared_1[threadIdx_x // 7 * 96 + 44]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 897] * kernel_shared_1[threadIdx_x // 7 * 96 + 44]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 898] * kernel_shared_1[threadIdx_x // 7 * 96 + 44]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 899] * kernel_shared_1[threadIdx_x // 7 * 96 + 44]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 900] * kernel_shared_1[threadIdx_x // 7 * 96 + 44]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 901] * kernel_shared_1[threadIdx_x // 7 * 96 + 44]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 902] * kernel_shared_1[threadIdx_x // 7 * 96 + 44]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 945] * kernel_shared_1[threadIdx_x // 7 * 96 + 45]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 946] * kernel_shared_1[threadIdx_x // 7 * 96 + 45]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 947] * kernel_shared_1[threadIdx_x // 7 * 96 + 45]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 948] * kernel_shared_1[threadIdx_x // 7 * 96 + 45]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 949] * kernel_shared_1[threadIdx_x // 7 * 96 + 45]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 950] * kernel_shared_1[threadIdx_x // 7 * 96 + 45]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 951] * kernel_shared_1[threadIdx_x // 7 * 96 + 45]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 952] * kernel_shared_1[threadIdx_x // 7 * 96 + 46]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 953] * kernel_shared_1[threadIdx_x // 7 * 96 + 46]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 954] * kernel_shared_1[threadIdx_x // 7 * 96 + 46]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 955] * kernel_shared_1[threadIdx_x // 7 * 96 + 46]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 956] * kernel_shared_1[threadIdx_x // 7 * 96 + 46]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 957] * kernel_shared_1[threadIdx_x // 7 * 96 + 46]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 958] * kernel_shared_1[threadIdx_x // 7 * 96 + 46]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 959] * kernel_shared_1[threadIdx_x // 7 * 96 + 47]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 960] * kernel_shared_1[threadIdx_x // 7 * 96 + 47]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 961] * kernel_shared_1[threadIdx_x // 7 * 96 + 47]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 962] * kernel_shared_1[threadIdx_x // 7 * 96 + 47]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 963] * kernel_shared_1[threadIdx_x // 7 * 96 + 47]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 964] * kernel_shared_1[threadIdx_x // 7 * 96 + 47]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 965] * kernel_shared_1[threadIdx_x // 7 * 96 + 47]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1008] * kernel_shared_1[threadIdx_x // 7 * 96 + 48]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1009] * kernel_shared_1[threadIdx_x // 7 * 96 + 48]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1010] * kernel_shared_1[threadIdx_x // 7 * 96 + 48]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1011] * kernel_shared_1[threadIdx_x // 7 * 96 + 48]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1012] * kernel_shared_1[threadIdx_x // 7 * 96 + 48]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1013] * kernel_shared_1[threadIdx_x // 7 * 96 + 48]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1014] * kernel_shared_1[threadIdx_x // 7 * 96 + 48]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1015] * kernel_shared_1[threadIdx_x // 7 * 96 + 49]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1016] * kernel_shared_1[threadIdx_x // 7 * 96 + 49]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1017] * kernel_shared_1[threadIdx_x // 7 * 96 + 49]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1018] * kernel_shared_1[threadIdx_x // 7 * 96 + 49]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1019] * kernel_shared_1[threadIdx_x // 7 * 96 + 49]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1020] * kernel_shared_1[threadIdx_x // 7 * 96 + 49]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1021] * kernel_shared_1[threadIdx_x // 7 * 96 + 49]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1022] * kernel_shared_1[threadIdx_x // 7 * 96 + 50]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1023] * kernel_shared_1[threadIdx_x // 7 * 96 + 50]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1024] * kernel_shared_1[threadIdx_x // 7 * 96 + 50]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1025] * kernel_shared_1[threadIdx_x // 7 * 96 + 50]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1026] * kernel_shared_1[threadIdx_x // 7 * 96 + 50]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1027] * kernel_shared_1[threadIdx_x // 7 * 96 + 50]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1028] * kernel_shared_1[threadIdx_x // 7 * 96 + 50]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1071] * kernel_shared_1[threadIdx_x // 7 * 96 + 51]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1072] * kernel_shared_1[threadIdx_x // 7 * 96 + 51]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1073] * kernel_shared_1[threadIdx_x // 7 * 96 + 51]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1074] * kernel_shared_1[threadIdx_x // 7 * 96 + 51]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1075] * kernel_shared_1[threadIdx_x // 7 * 96 + 51]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1076] * kernel_shared_1[threadIdx_x // 7 * 96 + 51]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1077] * kernel_shared_1[threadIdx_x // 7 * 96 + 51]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1078] * kernel_shared_1[threadIdx_x // 7 * 96 + 52]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1079] * kernel_shared_1[threadIdx_x // 7 * 96 + 52]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1080] * kernel_shared_1[threadIdx_x // 7 * 96 + 52]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1081] * kernel_shared_1[threadIdx_x // 7 * 96 + 52]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1082] * kernel_shared_1[threadIdx_x // 7 * 96 + 52]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1083] * kernel_shared_1[threadIdx_x // 7 * 96 + 52]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1084] * kernel_shared_1[threadIdx_x // 7 * 96 + 52]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1085] * kernel_shared_1[threadIdx_x // 7 * 96 + 53]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1086] * kernel_shared_1[threadIdx_x // 7 * 96 + 53]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1087] * kernel_shared_1[threadIdx_x // 7 * 96 + 53]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1088] * kernel_shared_1[threadIdx_x // 7 * 96 + 53]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1089] * kernel_shared_1[threadIdx_x // 7 * 96 + 53]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1090] * kernel_shared_1[threadIdx_x // 7 * 96 + 53]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1091] * kernel_shared_1[threadIdx_x // 7 * 96 + 53]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1134] * kernel_shared_1[threadIdx_x // 7 * 96 + 54]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1135] * kernel_shared_1[threadIdx_x // 7 * 96 + 54]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1136] * kernel_shared_1[threadIdx_x // 7 * 96 + 54]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1137] * kernel_shared_1[threadIdx_x // 7 * 96 + 54]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1138] * kernel_shared_1[threadIdx_x // 7 * 96 + 54]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1139] * kernel_shared_1[threadIdx_x // 7 * 96 + 54]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1140] * kernel_shared_1[threadIdx_x // 7 * 96 + 54]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1141] * kernel_shared_1[threadIdx_x // 7 * 96 + 55]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1142] * kernel_shared_1[threadIdx_x // 7 * 96 + 55]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1143] * kernel_shared_1[threadIdx_x // 7 * 96 + 55]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1144] * kernel_shared_1[threadIdx_x // 7 * 96 + 55]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1145] * kernel_shared_1[threadIdx_x // 7 * 96 + 55]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1146] * kernel_shared_1[threadIdx_x // 7 * 96 + 55]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1147] * kernel_shared_1[threadIdx_x // 7 * 96 + 55]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1148] * kernel_shared_1[threadIdx_x // 7 * 96 + 56]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1149] * kernel_shared_1[threadIdx_x // 7 * 96 + 56]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1150] * kernel_shared_1[threadIdx_x // 7 * 96 + 56]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1151] * kernel_shared_1[threadIdx_x // 7 * 96 + 56]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1152] * kernel_shared_1[threadIdx_x // 7 * 96 + 56]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1153] * kernel_shared_1[threadIdx_x // 7 * 96 + 56]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1154] * kernel_shared_1[threadIdx_x // 7 * 96 + 56]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1197] * kernel_shared_1[threadIdx_x // 7 * 96 + 57]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1198] * kernel_shared_1[threadIdx_x // 7 * 96 + 57]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1199] * kernel_shared_1[threadIdx_x // 7 * 96 + 57]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1200] * kernel_shared_1[threadIdx_x // 7 * 96 + 57]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1201] * kernel_shared_1[threadIdx_x // 7 * 96 + 57]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1202] * kernel_shared_1[threadIdx_x // 7 * 96 + 57]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1203] * kernel_shared_1[threadIdx_x // 7 * 96 + 57]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1204] * kernel_shared_1[threadIdx_x // 7 * 96 + 58]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1205] * kernel_shared_1[threadIdx_x // 7 * 96 + 58]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1206] * kernel_shared_1[threadIdx_x // 7 * 96 + 58]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1207] * kernel_shared_1[threadIdx_x // 7 * 96 + 58]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1208] * kernel_shared_1[threadIdx_x // 7 * 96 + 58]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1209] * kernel_shared_1[threadIdx_x // 7 * 96 + 58]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1210] * kernel_shared_1[threadIdx_x // 7 * 96 + 58]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1211] * kernel_shared_1[threadIdx_x // 7 * 96 + 59]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1212] * kernel_shared_1[threadIdx_x // 7 * 96 + 59]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1213] * kernel_shared_1[threadIdx_x // 7 * 96 + 59]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1214] * kernel_shared_1[threadIdx_x // 7 * 96 + 59]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1215] * kernel_shared_1[threadIdx_x // 7 * 96 + 59]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1216] * kernel_shared_1[threadIdx_x // 7 * 96 + 59]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1217] * kernel_shared_1[threadIdx_x // 7 * 96 + 59]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1260] * kernel_shared_1[threadIdx_x // 7 * 96 + 60]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1261] * kernel_shared_1[threadIdx_x // 7 * 96 + 60]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1262] * kernel_shared_1[threadIdx_x // 7 * 96 + 60]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1263] * kernel_shared_1[threadIdx_x // 7 * 96 + 60]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1264] * kernel_shared_1[threadIdx_x // 7 * 96 + 60]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1265] * kernel_shared_1[threadIdx_x // 7 * 96 + 60]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1266] * kernel_shared_1[threadIdx_x // 7 * 96 + 60]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1267] * kernel_shared_1[threadIdx_x // 7 * 96 + 61]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1268] * kernel_shared_1[threadIdx_x // 7 * 96 + 61]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1269] * kernel_shared_1[threadIdx_x // 7 * 96 + 61]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1270] * kernel_shared_1[threadIdx_x // 7 * 96 + 61]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1271] * kernel_shared_1[threadIdx_x // 7 * 96 + 61]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1272] * kernel_shared_1[threadIdx_x // 7 * 96 + 61]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1273] * kernel_shared_1[threadIdx_x // 7 * 96 + 61]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1274] * kernel_shared_1[threadIdx_x // 7 * 96 + 62]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1275] * kernel_shared_1[threadIdx_x // 7 * 96 + 62]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1276] * kernel_shared_1[threadIdx_x // 7 * 96 + 62]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1277] * kernel_shared_1[threadIdx_x // 7 * 96 + 62]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1278] * kernel_shared_1[threadIdx_x // 7 * 96 + 62]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1279] * kernel_shared_1[threadIdx_x // 7 * 96 + 62]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1280] * kernel_shared_1[threadIdx_x // 7 * 96 + 62]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1323] * kernel_shared_1[threadIdx_x // 7 * 96 + 63]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1324] * kernel_shared_1[threadIdx_x // 7 * 96 + 63]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1325] * kernel_shared_1[threadIdx_x // 7 * 96 + 63]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1326] * kernel_shared_1[threadIdx_x // 7 * 96 + 63]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1327] * kernel_shared_1[threadIdx_x // 7 * 96 + 63]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1328] * kernel_shared_1[threadIdx_x // 7 * 96 + 63]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1329] * kernel_shared_1[threadIdx_x // 7 * 96 + 63]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1330] * kernel_shared_1[threadIdx_x // 7 * 96 + 64]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1331] * kernel_shared_1[threadIdx_x // 7 * 96 + 64]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1332] * kernel_shared_1[threadIdx_x // 7 * 96 + 64]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1333] * kernel_shared_1[threadIdx_x // 7 * 96 + 64]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1334] * kernel_shared_1[threadIdx_x // 7 * 96 + 64]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1335] * kernel_shared_1[threadIdx_x // 7 * 96 + 64]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1336] * kernel_shared_1[threadIdx_x // 7 * 96 + 64]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1337] * kernel_shared_1[threadIdx_x // 7 * 96 + 65]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1338] * kernel_shared_1[threadIdx_x // 7 * 96 + 65]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1339] * kernel_shared_1[threadIdx_x // 7 * 96 + 65]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1340] * kernel_shared_1[threadIdx_x // 7 * 96 + 65]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1341] * kernel_shared_1[threadIdx_x // 7 * 96 + 65]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1342] * kernel_shared_1[threadIdx_x // 7 * 96 + 65]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1343] * kernel_shared_1[threadIdx_x // 7 * 96 + 65]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1386] * kernel_shared_1[threadIdx_x // 7 * 96 + 66]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1387] * kernel_shared_1[threadIdx_x // 7 * 96 + 66]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1388] * kernel_shared_1[threadIdx_x // 7 * 96 + 66]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1389] * kernel_shared_1[threadIdx_x // 7 * 96 + 66]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1390] * kernel_shared_1[threadIdx_x // 7 * 96 + 66]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1391] * kernel_shared_1[threadIdx_x // 7 * 96 + 66]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1392] * kernel_shared_1[threadIdx_x // 7 * 96 + 66]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1393] * kernel_shared_1[threadIdx_x // 7 * 96 + 67]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1394] * kernel_shared_1[threadIdx_x // 7 * 96 + 67]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1395] * kernel_shared_1[threadIdx_x // 7 * 96 + 67]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1396] * kernel_shared_1[threadIdx_x // 7 * 96 + 67]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1397] * kernel_shared_1[threadIdx_x // 7 * 96 + 67]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1398] * kernel_shared_1[threadIdx_x // 7 * 96 + 67]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1399] * kernel_shared_1[threadIdx_x // 7 * 96 + 67]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1400] * kernel_shared_1[threadIdx_x // 7 * 96 + 68]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1401] * kernel_shared_1[threadIdx_x // 7 * 96 + 68]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1402] * kernel_shared_1[threadIdx_x // 7 * 96 + 68]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1403] * kernel_shared_1[threadIdx_x // 7 * 96 + 68]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1404] * kernel_shared_1[threadIdx_x // 7 * 96 + 68]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1405] * kernel_shared_1[threadIdx_x // 7 * 96 + 68]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1406] * kernel_shared_1[threadIdx_x // 7 * 96 + 68]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1449] * kernel_shared_1[threadIdx_x // 7 * 96 + 69]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1450] * kernel_shared_1[threadIdx_x // 7 * 96 + 69]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1451] * kernel_shared_1[threadIdx_x // 7 * 96 + 69]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1452] * kernel_shared_1[threadIdx_x // 7 * 96 + 69]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1453] * kernel_shared_1[threadIdx_x // 7 * 96 + 69]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1454] * kernel_shared_1[threadIdx_x // 7 * 96 + 69]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1455] * kernel_shared_1[threadIdx_x // 7 * 96 + 69]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1456] * kernel_shared_1[threadIdx_x // 7 * 96 + 70]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1457] * kernel_shared_1[threadIdx_x // 7 * 96 + 70]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1458] * kernel_shared_1[threadIdx_x // 7 * 96 + 70]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1459] * kernel_shared_1[threadIdx_x // 7 * 96 + 70]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1460] * kernel_shared_1[threadIdx_x // 7 * 96 + 70]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1461] * kernel_shared_1[threadIdx_x // 7 * 96 + 70]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1462] * kernel_shared_1[threadIdx_x // 7 * 96 + 70]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1463] * kernel_shared_1[threadIdx_x // 7 * 96 + 71]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1464] * kernel_shared_1[threadIdx_x // 7 * 96 + 71]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1465] * kernel_shared_1[threadIdx_x // 7 * 96 + 71]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1466] * kernel_shared_1[threadIdx_x // 7 * 96 + 71]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1467] * kernel_shared_1[threadIdx_x // 7 * 96 + 71]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1468] * kernel_shared_1[threadIdx_x // 7 * 96 + 71]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1469] * kernel_shared_1[threadIdx_x // 7 * 96 + 71]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1512] * kernel_shared_1[threadIdx_x // 7 * 96 + 72]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1513] * kernel_shared_1[threadIdx_x // 7 * 96 + 72]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1514] * kernel_shared_1[threadIdx_x // 7 * 96 + 72]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1515] * kernel_shared_1[threadIdx_x // 7 * 96 + 72]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1516] * kernel_shared_1[threadIdx_x // 7 * 96 + 72]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1517] * kernel_shared_1[threadIdx_x // 7 * 96 + 72]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1518] * kernel_shared_1[threadIdx_x // 7 * 96 + 72]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1519] * kernel_shared_1[threadIdx_x // 7 * 96 + 73]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1520] * kernel_shared_1[threadIdx_x // 7 * 96 + 73]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1521] * kernel_shared_1[threadIdx_x // 7 * 96 + 73]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1522] * kernel_shared_1[threadIdx_x // 7 * 96 + 73]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1523] * kernel_shared_1[threadIdx_x // 7 * 96 + 73]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1524] * kernel_shared_1[threadIdx_x // 7 * 96 + 73]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1525] * kernel_shared_1[threadIdx_x // 7 * 96 + 73]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1526] * kernel_shared_1[threadIdx_x // 7 * 96 + 74]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1527] * kernel_shared_1[threadIdx_x // 7 * 96 + 74]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1528] * kernel_shared_1[threadIdx_x // 7 * 96 + 74]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1529] * kernel_shared_1[threadIdx_x // 7 * 96 + 74]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1530] * kernel_shared_1[threadIdx_x // 7 * 96 + 74]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1531] * kernel_shared_1[threadIdx_x // 7 * 96 + 74]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1532] * kernel_shared_1[threadIdx_x // 7 * 96 + 74]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1575] * kernel_shared_1[threadIdx_x // 7 * 96 + 75]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1576] * kernel_shared_1[threadIdx_x // 7 * 96 + 75]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1577] * kernel_shared_1[threadIdx_x // 7 * 96 + 75]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1578] * kernel_shared_1[threadIdx_x // 7 * 96 + 75]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1579] * kernel_shared_1[threadIdx_x // 7 * 96 + 75]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1580] * kernel_shared_1[threadIdx_x // 7 * 96 + 75]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1581] * kernel_shared_1[threadIdx_x // 7 * 96 + 75]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1582] * kernel_shared_1[threadIdx_x // 7 * 96 + 76]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1583] * kernel_shared_1[threadIdx_x // 7 * 96 + 76]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1584] * kernel_shared_1[threadIdx_x // 7 * 96 + 76]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1585] * kernel_shared_1[threadIdx_x // 7 * 96 + 76]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1586] * kernel_shared_1[threadIdx_x // 7 * 96 + 76]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1587] * kernel_shared_1[threadIdx_x // 7 * 96 + 76]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1588] * kernel_shared_1[threadIdx_x // 7 * 96 + 76]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1589] * kernel_shared_1[threadIdx_x // 7 * 96 + 77]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1590] * kernel_shared_1[threadIdx_x // 7 * 96 + 77]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1591] * kernel_shared_1[threadIdx_x // 7 * 96 + 77]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1592] * kernel_shared_1[threadIdx_x // 7 * 96 + 77]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1593] * kernel_shared_1[threadIdx_x // 7 * 96 + 77]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1594] * kernel_shared_1[threadIdx_x // 7 * 96 + 77]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1595] * kernel_shared_1[threadIdx_x // 7 * 96 + 77]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1638] * kernel_shared_1[threadIdx_x // 7 * 96 + 78]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1639] * kernel_shared_1[threadIdx_x // 7 * 96 + 78]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1640] * kernel_shared_1[threadIdx_x // 7 * 96 + 78]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1641] * kernel_shared_1[threadIdx_x // 7 * 96 + 78]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1642] * kernel_shared_1[threadIdx_x // 7 * 96 + 78]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1643] * kernel_shared_1[threadIdx_x // 7 * 96 + 78]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1644] * kernel_shared_1[threadIdx_x // 7 * 96 + 78]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1645] * kernel_shared_1[threadIdx_x // 7 * 96 + 79]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1646] * kernel_shared_1[threadIdx_x // 7 * 96 + 79]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1647] * kernel_shared_1[threadIdx_x // 7 * 96 + 79]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1648] * kernel_shared_1[threadIdx_x // 7 * 96 + 79]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1649] * kernel_shared_1[threadIdx_x // 7 * 96 + 79]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1650] * kernel_shared_1[threadIdx_x // 7 * 96 + 79]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1651] * kernel_shared_1[threadIdx_x // 7 * 96 + 79]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1652] * kernel_shared_1[threadIdx_x // 7 * 96 + 80]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1653] * kernel_shared_1[threadIdx_x // 7 * 96 + 80]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1654] * kernel_shared_1[threadIdx_x // 7 * 96 + 80]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1655] * kernel_shared_1[threadIdx_x // 7 * 96 + 80]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1656] * kernel_shared_1[threadIdx_x // 7 * 96 + 80]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1657] * kernel_shared_1[threadIdx_x // 7 * 96 + 80]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1658] * kernel_shared_1[threadIdx_x // 7 * 96 + 80]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1701] * kernel_shared_1[threadIdx_x // 7 * 96 + 81]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1702] * kernel_shared_1[threadIdx_x // 7 * 96 + 81]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1703] * kernel_shared_1[threadIdx_x // 7 * 96 + 81]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1704] * kernel_shared_1[threadIdx_x // 7 * 96 + 81]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1705] * kernel_shared_1[threadIdx_x // 7 * 96 + 81]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1706] * kernel_shared_1[threadIdx_x // 7 * 96 + 81]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1707] * kernel_shared_1[threadIdx_x // 7 * 96 + 81]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1708] * kernel_shared_1[threadIdx_x // 7 * 96 + 82]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1709] * kernel_shared_1[threadIdx_x // 7 * 96 + 82]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1710] * kernel_shared_1[threadIdx_x // 7 * 96 + 82]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1711] * kernel_shared_1[threadIdx_x // 7 * 96 + 82]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1712] * kernel_shared_1[threadIdx_x // 7 * 96 + 82]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1713] * kernel_shared_1[threadIdx_x // 7 * 96 + 82]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1714] * kernel_shared_1[threadIdx_x // 7 * 96 + 82]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1715] * kernel_shared_1[threadIdx_x // 7 * 96 + 83]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1716] * kernel_shared_1[threadIdx_x // 7 * 96 + 83]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1717] * kernel_shared_1[threadIdx_x // 7 * 96 + 83]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1718] * kernel_shared_1[threadIdx_x // 7 * 96 + 83]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1719] * kernel_shared_1[threadIdx_x // 7 * 96 + 83]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1720] * kernel_shared_1[threadIdx_x // 7 * 96 + 83]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1721] * kernel_shared_1[threadIdx_x // 7 * 96 + 83]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1764] * kernel_shared_1[threadIdx_x // 7 * 96 + 84]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1765] * kernel_shared_1[threadIdx_x // 7 * 96 + 84]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1766] * kernel_shared_1[threadIdx_x // 7 * 96 + 84]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1767] * kernel_shared_1[threadIdx_x // 7 * 96 + 84]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1768] * kernel_shared_1[threadIdx_x // 7 * 96 + 84]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1769] * kernel_shared_1[threadIdx_x // 7 * 96 + 84]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1770] * kernel_shared_1[threadIdx_x // 7 * 96 + 84]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1771] * kernel_shared_1[threadIdx_x // 7 * 96 + 85]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1772] * kernel_shared_1[threadIdx_x // 7 * 96 + 85]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1773] * kernel_shared_1[threadIdx_x // 7 * 96 + 85]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1774] * kernel_shared_1[threadIdx_x // 7 * 96 + 85]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1775] * kernel_shared_1[threadIdx_x // 7 * 96 + 85]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1776] * kernel_shared_1[threadIdx_x // 7 * 96 + 85]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1777] * kernel_shared_1[threadIdx_x // 7 * 96 + 85]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1778] * kernel_shared_1[threadIdx_x // 7 * 96 + 86]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1779] * kernel_shared_1[threadIdx_x // 7 * 96 + 86]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1780] * kernel_shared_1[threadIdx_x // 7 * 96 + 86]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1781] * kernel_shared_1[threadIdx_x // 7 * 96 + 86]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1782] * kernel_shared_1[threadIdx_x // 7 * 96 + 86]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1783] * kernel_shared_1[threadIdx_x // 7 * 96 + 86]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1784] * kernel_shared_1[threadIdx_x // 7 * 96 + 86]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1827] * kernel_shared_1[threadIdx_x // 7 * 96 + 87]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1828] * kernel_shared_1[threadIdx_x // 7 * 96 + 87]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1829] * kernel_shared_1[threadIdx_x // 7 * 96 + 87]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1830] * kernel_shared_1[threadIdx_x // 7 * 96 + 87]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1831] * kernel_shared_1[threadIdx_x // 7 * 96 + 87]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1832] * kernel_shared_1[threadIdx_x // 7 * 96 + 87]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1833] * kernel_shared_1[threadIdx_x // 7 * 96 + 87]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1834] * kernel_shared_1[threadIdx_x // 7 * 96 + 88]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1835] * kernel_shared_1[threadIdx_x // 7 * 96 + 88]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1836] * kernel_shared_1[threadIdx_x // 7 * 96 + 88]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1837] * kernel_shared_1[threadIdx_x // 7 * 96 + 88]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1838] * kernel_shared_1[threadIdx_x // 7 * 96 + 88]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1839] * kernel_shared_1[threadIdx_x // 7 * 96 + 88]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1840] * kernel_shared_1[threadIdx_x // 7 * 96 + 88]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1841] * kernel_shared_1[threadIdx_x // 7 * 96 + 89]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1842] * kernel_shared_1[threadIdx_x // 7 * 96 + 89]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1843] * kernel_shared_1[threadIdx_x // 7 * 96 + 89]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1844] * kernel_shared_1[threadIdx_x // 7 * 96 + 89]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1845] * kernel_shared_1[threadIdx_x // 7 * 96 + 89]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1846] * kernel_shared_1[threadIdx_x // 7 * 96 + 89]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1847] * kernel_shared_1[threadIdx_x // 7 * 96 + 89]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1890] * kernel_shared_1[threadIdx_x // 7 * 96 + 90]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1891] * kernel_shared_1[threadIdx_x // 7 * 96 + 90]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1892] * kernel_shared_1[threadIdx_x // 7 * 96 + 90]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1893] * kernel_shared_1[threadIdx_x // 7 * 96 + 90]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1894] * kernel_shared_1[threadIdx_x // 7 * 96 + 90]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1895] * kernel_shared_1[threadIdx_x // 7 * 96 + 90]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1896] * kernel_shared_1[threadIdx_x // 7 * 96 + 90]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1897] * kernel_shared_1[threadIdx_x // 7 * 96 + 91]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1898] * kernel_shared_1[threadIdx_x // 7 * 96 + 91]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1899] * kernel_shared_1[threadIdx_x // 7 * 96 + 91]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1900] * kernel_shared_1[threadIdx_x // 7 * 96 + 91]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1901] * kernel_shared_1[threadIdx_x // 7 * 96 + 91]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1902] * kernel_shared_1[threadIdx_x // 7 * 96 + 91]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1903] * kernel_shared_1[threadIdx_x // 7 * 96 + 91]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1904] * kernel_shared_1[threadIdx_x // 7 * 96 + 92]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1905] * kernel_shared_1[threadIdx_x // 7 * 96 + 92]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1906] * kernel_shared_1[threadIdx_x // 7 * 96 + 92]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1907] * kernel_shared_1[threadIdx_x // 7 * 96 + 92]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1908] * kernel_shared_1[threadIdx_x // 7 * 96 + 92]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1909] * kernel_shared_1[threadIdx_x // 7 * 96 + 92]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1910] * kernel_shared_1[threadIdx_x // 7 * 96 + 92]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1953] * kernel_shared_1[threadIdx_x // 7 * 96 + 93]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1954] * kernel_shared_1[threadIdx_x // 7 * 96 + 93]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1955] * kernel_shared_1[threadIdx_x // 7 * 96 + 93]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1956] * kernel_shared_1[threadIdx_x // 7 * 96 + 93]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1957] * kernel_shared_1[threadIdx_x // 7 * 96 + 93]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1958] * kernel_shared_1[threadIdx_x // 7 * 96 + 93]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1959] * kernel_shared_1[threadIdx_x // 7 * 96 + 93]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1960] * kernel_shared_1[threadIdx_x // 7 * 96 + 94]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1961] * kernel_shared_1[threadIdx_x // 7 * 96 + 94]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1962] * kernel_shared_1[threadIdx_x // 7 * 96 + 94]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1963] * kernel_shared_1[threadIdx_x // 7 * 96 + 94]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1964] * kernel_shared_1[threadIdx_x // 7 * 96 + 94]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1965] * kernel_shared_1[threadIdx_x // 7 * 96 + 94]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1966] * kernel_shared_1[threadIdx_x // 7 * 96 + 94]
                conv2d_nchw_1[0] = conv2d_nchw_1[0] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1967] * kernel_shared_1[threadIdx_x // 7 * 96 + 95]
                conv2d_nchw_1[1] = conv2d_nchw_1[1] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1968] * kernel_shared_1[threadIdx_x // 7 * 96 + 95]
                conv2d_nchw_1[2] = conv2d_nchw_1[2] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1969] * kernel_shared_1[threadIdx_x // 7 * 96 + 95]
                conv2d_nchw_1[3] = conv2d_nchw_1[3] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1970] * kernel_shared_1[threadIdx_x // 7 * 96 + 95]
                conv2d_nchw_1[4] = conv2d_nchw_1[4] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1971] * kernel_shared_1[threadIdx_x // 7 * 96 + 95]
                conv2d_nchw_1[5] = conv2d_nchw_1[5] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1972] * kernel_shared_1[threadIdx_x // 7 * 96 + 95]
                conv2d_nchw_1[6] = conv2d_nchw_1[6] + pad_temp_shared_1[threadIdx_x % 7 * 7 + 1973] * kernel_shared_1[threadIdx_x // 7 * 96 + 95]
            for i3_inner in range(7):
                compute_1 = T.buffer_decl((25088,), data=compute.data)
                bias_1 = T.buffer_decl((512,), data=bias.data)
                compute_1[blockIdx_x * 784 + threadIdx_x * 7 + i3_inner] = T.max(conv2d_nchw_1[i3_inner] + bias_1[blockIdx_x * 16 + threadIdx_x // 7], T.float32(0))




.. GENERATED FROM PYTHON SOURCE LINES 138-141

Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.

.. GENERATED FROM PYTHON SOURCE LINES 141-168

.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Execution time of this operator: 0.318 ms




.. GENERATED FROM PYTHON SOURCE LINES 169-174

Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

.. GENERATED FROM PYTHON SOURCE LINES 176-179

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.

.. GENERATED FROM PYTHON SOURCE LINES 179-186

.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=1)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=16)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=1)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=7)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=7)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=1)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=32)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=3)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=1)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=1)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=1)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=1)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=16)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=1)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=7)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=7)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=1)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=112)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=112)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 1024)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(112) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[7];
      __shared__ float pad_temp_shared[2016];
      __shared__ float kernel_shared[1536];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 16; ++rc_outer_outer) {
        for (int rx_outer_outer = 0; rx_outer_outer < 3; ++rx_outer_outer) {
          __syncthreads();
          pad_temp_shared[((int)threadIdx.x)] = (((((7 <= (((int)threadIdx.x) % 63)) && ((((int)threadIdx.x) % 63) < 56)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 1568) + ((((int)threadIdx.x) / 63) * 49)) + rx_outer_outer) + (((int)threadIdx.x) % 63)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 112)] = (((((1 <= (((((int)threadIdx.x) / 7) + 7) % 9)) && ((((((int)threadIdx.x) / 7) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 112) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 7) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 224)] = (((((1 <= (((((int)threadIdx.x) / 7) + 5) % 9)) && ((((((int)threadIdx.x) / 7) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 224) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 336)] = (((((1 <= (((((int)threadIdx.x) / 7) + 3) % 9)) && ((((((int)threadIdx.x) / 7) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 336) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 448)] = (((((1 <= (((((int)threadIdx.x) / 7) + 1) % 9)) && ((((((int)threadIdx.x) / 7) + 1) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 448) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 1) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 560)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 560) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 672)] = (((((1 <= (((((int)threadIdx.x) / 7) + 6) % 9)) && ((((((int)threadIdx.x) / 7) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 672) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 784)] = (((((1 <= (((((int)threadIdx.x) / 7) + 4) % 9)) && ((((((int)threadIdx.x) / 7) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 784) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 896)] = (((((1 <= (((((int)threadIdx.x) / 7) + 2) % 9)) && ((((((int)threadIdx.x) / 7) + 2) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 896) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 2) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1008)] = (((((7 <= (((int)threadIdx.x) % 63)) && ((((int)threadIdx.x) % 63) < 56)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 1568) + ((((int)threadIdx.x) / 63) * 49)) + rx_outer_outer) + (((int)threadIdx.x) % 63)) + 776)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1120)] = (((((1 <= (((((int)threadIdx.x) / 7) + 7) % 9)) && ((((((int)threadIdx.x) / 7) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1120) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 7) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1232)] = (((((1 <= (((((int)threadIdx.x) / 7) + 5) % 9)) && ((((((int)threadIdx.x) / 7) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1232) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1344)] = (((((1 <= (((((int)threadIdx.x) / 7) + 3) % 9)) && ((((((int)threadIdx.x) / 7) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1344) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1456)] = (((((1 <= (((((int)threadIdx.x) / 7) + 1) % 9)) && ((((((int)threadIdx.x) / 7) + 1) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1456) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 1) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1568)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1568) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1680)] = (((((1 <= (((((int)threadIdx.x) / 7) + 6) % 9)) && ((((((int)threadIdx.x) / 7) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1680) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1792)] = (((((1 <= (((((int)threadIdx.x) / 7) + 4) % 9)) && ((((((int)threadIdx.x) / 7) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1792) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1904)] = (((((1 <= (((((int)threadIdx.x) / 7) + 2) % 9)) && ((((((int)threadIdx.x) / 7) + 2) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1904) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 2) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          kernel_shared[((int)threadIdx.x)] = kernel[(((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) % 96) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 112)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 112) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 16) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 224)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 224) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 336)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 336) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) / 3) + 16) & 31) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 448)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 448) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 560)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 560) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 80) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 672)] = kernel[((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) % 96) * 3)) + rx_outer_outer) + 32256)];
          kernel_shared[(((int)threadIdx.x) + 784)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 784) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 16) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 896)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 896) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1008)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1008) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) / 3) + 16) & 31) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1120)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1120) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1232)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1232) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 80) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1344)] = kernel[((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) % 96) * 3)) + rx_outer_outer) + 64512)];
          if (((int)threadIdx.x) < 80) {
            kernel_shared[(((int)threadIdx.x) + 1456)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1456) / 96) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 16) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          }
          __syncthreads();
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 7)] * kernel_shared[((((int)threadIdx.x) / 7) * 96)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1)] * kernel_shared[((((int)threadIdx.x) / 7) * 96)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 2)] * kernel_shared[((((int)threadIdx.x) / 7) * 96)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 3)] * kernel_shared[((((int)threadIdx.x) / 7) * 96)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 4)] * kernel_shared[((((int)threadIdx.x) / 7) * 96)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 5)] * kernel_shared[((((int)threadIdx.x) / 7) * 96)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 6)] * kernel_shared[((((int)threadIdx.x) / 7) * 96)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 1)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 8)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 1)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 9)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 1)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 10)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 1)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 11)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 1)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 12)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 1)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 13)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 1)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 2)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 15)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 2)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 16)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 2)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 17)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 2)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 18)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 2)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 19)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 2)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 20)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 2)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 3)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 64)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 3)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 65)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 3)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 66)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 3)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 67)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 3)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 68)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 3)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 69)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 3)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 4)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 71)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 4)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 72)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 4)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 73)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 4)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 74)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 4)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 75)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 4)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 76)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 4)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 5)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 78)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 5)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 79)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 5)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 80)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 5)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 81)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 5)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 5)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 5)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 126)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 6)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 127)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 6)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 128)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 6)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 129)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 6)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 130)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 6)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 131)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 6)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 132)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 6)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 133)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 7)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 134)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 7)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 135)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 7)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 136)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 7)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 137)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 7)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 138)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 7)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 139)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 7)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 8)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 141)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 8)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 142)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 8)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 143)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 8)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 144)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 8)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 145)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 8)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 146)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 8)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 189)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 9)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 190)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 9)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 191)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 9)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 192)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 9)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 193)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 9)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 194)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 9)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 195)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 9)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 196)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 10)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 197)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 10)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 198)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 10)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 199)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 10)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 200)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 10)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 201)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 10)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 202)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 10)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 203)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 11)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 204)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 11)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 205)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 11)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 206)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 11)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 207)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 11)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 208)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 11)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 209)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 11)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 252)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 12)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 253)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 12)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 254)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 12)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 255)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 12)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 256)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 12)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 257)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 12)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 258)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 12)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 259)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 13)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 260)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 13)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 261)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 13)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 262)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 13)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 263)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 13)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 264)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 13)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 265)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 13)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 266)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 14)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 267)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 14)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 268)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 14)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 269)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 14)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 270)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 14)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 271)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 14)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 272)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 14)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 315)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 15)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 316)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 15)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 317)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 15)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 318)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 15)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 319)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 15)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 320)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 15)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 321)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 15)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 322)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 16)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 323)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 16)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 324)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 16)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 325)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 16)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 326)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 16)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 327)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 16)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 328)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 16)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 329)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 17)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 330)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 17)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 331)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 17)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 332)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 17)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 333)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 17)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 334)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 17)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 335)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 17)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 378)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 18)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 379)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 18)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 380)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 18)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 381)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 18)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 382)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 18)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 383)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 18)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 384)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 18)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 385)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 19)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 386)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 19)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 387)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 19)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 388)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 19)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 389)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 19)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 390)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 19)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 391)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 19)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 392)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 20)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 393)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 20)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 394)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 20)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 395)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 20)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 396)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 20)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 397)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 20)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 398)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 20)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 441)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 21)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 442)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 21)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 443)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 21)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 444)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 21)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 445)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 21)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 446)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 21)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 447)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 21)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 448)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 22)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 449)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 22)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 450)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 22)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 451)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 22)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 452)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 22)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 453)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 22)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 454)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 22)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 455)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 23)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 456)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 23)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 457)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 23)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 458)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 23)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 459)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 23)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 460)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 23)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 461)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 23)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 504)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 24)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 505)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 24)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 506)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 24)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 507)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 24)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 508)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 24)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 509)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 24)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 510)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 24)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 511)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 25)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 512)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 25)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 513)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 25)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 514)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 25)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 515)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 25)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 516)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 25)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 517)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 25)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 518)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 26)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 519)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 26)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 520)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 26)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 521)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 26)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 522)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 26)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 523)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 26)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 524)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 26)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 567)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 27)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 568)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 27)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 569)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 27)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 570)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 27)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 571)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 27)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 572)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 27)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 573)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 27)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 574)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 28)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 575)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 28)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 576)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 28)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 577)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 28)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 578)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 28)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 579)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 28)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 580)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 28)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 581)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 29)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 582)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 29)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 583)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 29)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 584)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 29)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 585)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 29)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 586)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 29)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 587)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 29)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 630)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 30)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 631)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 30)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 632)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 30)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 633)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 30)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 634)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 30)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 635)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 30)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 636)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 30)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 637)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 31)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 638)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 31)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 639)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 31)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 640)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 31)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 641)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 31)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 642)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 31)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 643)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 31)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 644)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 32)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 645)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 32)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 646)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 32)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 647)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 32)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 648)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 32)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 649)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 32)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 650)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 32)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 693)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 33)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 694)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 33)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 695)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 33)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 696)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 33)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 697)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 33)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 698)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 33)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 699)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 33)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 700)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 34)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 701)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 34)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 702)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 34)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 703)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 34)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 704)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 34)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 705)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 34)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 706)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 34)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 707)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 35)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 708)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 35)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 709)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 35)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 710)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 35)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 711)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 35)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 712)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 35)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 713)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 35)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 756)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 36)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 757)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 36)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 758)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 36)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 759)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 36)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 760)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 36)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 761)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 36)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 762)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 36)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 763)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 37)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 764)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 37)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 765)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 37)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 766)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 37)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 767)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 37)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 768)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 37)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 769)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 37)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 770)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 38)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 771)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 38)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 772)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 38)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 773)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 38)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 774)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 38)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 775)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 38)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 776)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 38)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 819)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 39)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 820)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 39)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 821)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 39)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 822)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 39)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 823)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 39)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 824)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 39)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 825)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 39)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 826)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 40)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 827)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 40)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 828)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 40)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 829)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 40)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 830)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 40)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 831)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 40)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 832)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 40)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 833)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 41)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 834)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 41)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 835)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 41)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 836)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 41)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 837)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 41)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 838)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 41)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 839)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 41)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 882)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 42)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 883)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 42)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 884)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 42)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 885)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 42)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 886)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 42)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 887)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 42)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 888)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 42)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 889)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 43)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 890)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 43)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 891)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 43)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 892)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 43)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 893)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 43)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 894)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 43)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 895)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 43)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 896)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 44)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 897)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 44)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 898)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 44)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 899)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 44)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 900)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 44)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 901)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 44)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 902)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 44)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 945)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 45)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 946)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 45)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 947)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 45)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 948)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 45)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 949)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 45)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 950)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 45)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 951)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 45)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 952)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 46)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 953)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 46)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 954)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 46)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 955)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 46)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 956)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 46)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 957)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 46)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 958)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 46)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 959)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 47)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 960)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 47)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 961)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 47)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 962)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 47)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 963)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 47)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 964)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 47)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 965)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 47)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1008)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 48)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1009)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 48)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1010)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 48)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1011)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 48)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1012)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 48)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1013)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 48)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1014)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 48)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1015)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 49)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1016)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 49)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1017)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 49)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1018)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 49)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1019)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 49)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1020)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 49)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1021)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 49)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1022)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 50)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1023)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 50)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1024)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 50)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1025)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 50)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1026)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 50)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1027)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 50)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1028)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 50)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1071)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 51)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1072)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 51)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1073)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 51)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1074)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 51)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1075)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 51)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1076)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 51)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1077)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 51)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1078)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 52)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1079)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 52)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1080)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 52)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1081)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 52)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1082)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 52)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1083)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 52)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1084)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 52)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1085)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 53)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1086)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 53)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1087)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 53)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1088)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 53)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1089)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 53)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1090)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 53)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1091)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 53)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1134)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 54)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1135)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 54)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1136)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 54)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1137)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 54)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1138)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 54)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1139)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 54)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1140)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 54)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1141)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 55)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1142)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 55)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1143)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 55)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1144)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 55)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1145)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 55)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1146)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 55)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1147)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 55)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1148)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 56)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1149)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 56)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1150)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 56)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1151)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 56)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1152)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 56)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1153)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 56)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1154)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 56)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1197)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 57)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1198)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 57)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1199)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 57)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1200)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 57)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1201)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 57)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1202)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 57)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1203)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 57)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1204)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 58)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1205)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 58)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1206)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 58)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1207)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 58)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1208)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 58)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1209)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 58)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1210)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 58)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1211)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 59)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1212)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 59)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1213)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 59)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1214)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 59)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1215)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 59)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1216)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 59)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1217)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 59)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1260)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 60)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1261)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 60)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1262)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 60)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1263)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 60)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1264)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 60)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1265)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 60)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1266)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 60)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1267)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 61)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1268)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 61)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1269)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 61)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1270)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 61)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1271)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 61)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1272)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 61)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1273)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 61)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1274)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 62)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1275)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 62)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1276)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 62)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1277)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 62)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1278)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 62)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1279)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 62)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1280)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 62)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1323)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 63)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1324)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 63)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1325)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 63)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1326)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 63)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1327)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 63)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1328)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 63)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1329)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 63)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1330)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 64)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1331)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 64)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1332)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 64)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1333)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 64)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1334)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 64)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1335)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 64)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1336)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 64)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1337)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 65)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1338)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 65)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1339)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 65)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1340)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 65)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1341)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 65)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1342)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 65)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1343)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 65)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1386)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 66)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1387)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 66)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1388)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 66)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1389)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 66)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1390)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 66)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1391)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 66)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1392)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 66)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1393)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 67)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1394)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 67)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1395)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 67)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1396)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 67)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1397)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 67)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1398)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 67)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1399)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 67)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1400)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 68)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1401)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 68)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1402)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 68)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1403)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 68)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1404)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 68)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1405)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 68)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1406)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 68)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1449)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 69)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1450)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 69)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1451)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 69)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1452)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 69)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1453)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 69)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1454)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 69)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1455)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 69)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1456)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 70)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1457)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 70)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1458)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 70)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1459)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 70)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1460)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 70)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1461)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 70)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1462)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 70)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1463)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 71)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1464)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 71)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1465)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 71)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1466)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 71)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1467)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 71)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1468)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 71)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1469)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 71)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1512)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 72)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1513)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 72)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1514)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 72)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1515)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 72)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1516)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 72)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1517)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 72)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1518)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 72)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1519)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 73)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1520)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 73)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1521)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 73)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1522)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 73)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1523)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 73)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1524)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 73)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1525)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 73)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1526)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 74)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1527)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 74)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1528)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 74)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1529)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 74)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1530)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 74)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1531)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 74)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1532)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 74)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1575)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 75)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1576)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 75)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1577)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 75)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1578)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 75)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1579)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 75)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1580)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 75)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1581)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 75)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1582)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 76)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1583)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 76)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1584)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 76)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1585)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 76)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1586)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 76)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1587)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 76)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1588)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 76)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1589)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 77)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1590)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 77)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1591)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 77)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1592)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 77)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1593)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 77)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1594)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 77)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1595)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 77)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1638)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 78)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1639)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 78)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1640)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 78)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1641)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 78)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1642)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 78)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1643)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 78)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1644)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 78)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1645)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 79)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1646)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 79)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1647)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 79)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1648)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 79)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1649)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 79)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1650)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 79)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1651)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 79)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1652)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 80)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1653)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 80)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1654)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 80)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1655)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 80)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1656)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 80)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1657)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 80)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1658)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 80)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1701)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 81)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1702)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 81)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1703)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 81)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1704)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 81)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1705)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 81)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1706)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 81)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1707)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 81)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1708)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 82)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1709)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 82)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1710)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 82)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1711)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 82)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1712)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 82)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1713)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 82)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1714)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 82)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1715)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 83)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1716)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 83)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1717)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 83)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1718)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 83)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1719)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 83)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1720)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 83)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1721)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 83)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1764)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 84)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1765)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 84)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1766)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 84)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1767)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 84)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1768)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 84)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1769)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 84)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1770)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 84)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1771)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 85)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1772)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 85)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1773)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 85)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1774)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 85)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1775)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 85)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1776)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 85)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1777)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 85)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1778)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 86)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1779)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 86)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1780)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 86)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1781)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 86)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1782)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 86)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1783)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 86)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1784)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 86)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1827)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 87)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1828)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 87)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1829)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 87)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1830)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 87)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1831)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 87)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1832)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 87)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1833)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 87)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1834)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 88)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1835)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 88)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1836)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 88)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1837)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 88)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1838)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 88)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1839)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 88)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1840)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 88)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1841)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 89)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1842)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 89)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1843)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 89)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1844)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 89)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1845)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 89)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1846)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 89)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1847)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 89)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1890)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 90)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1891)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 90)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1892)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 90)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1893)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 90)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1894)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 90)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1895)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 90)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1896)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 90)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1897)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 91)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1898)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 91)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1899)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 91)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1900)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 91)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1901)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 91)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1902)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 91)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1903)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 91)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1904)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 92)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1905)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 92)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1906)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 92)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1907)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 92)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1908)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 92)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1909)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 92)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1910)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 92)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1953)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 93)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1954)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 93)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1955)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 93)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1956)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 93)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1957)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 93)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1958)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 93)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1959)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 93)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1960)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 94)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1961)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 94)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1962)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 94)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1963)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 94)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1964)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 94)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1965)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 94)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1966)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 94)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1967)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 95)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1968)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 95)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1969)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 95)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1970)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 95)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1971)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 95)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1972)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 95)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 7) + 1973)] * kernel_shared[(((((int)threadIdx.x) / 7) * 96) + 95)]));
        }
      }
      for (int i3_inner = 0; i3_inner < 7; ++i3_inner) {
        compute[(((((int)blockIdx.x) * 784) + (((int)threadIdx.x) * 7)) + i3_inner)] = max((conv2d_nchw[i3_inner] + bias[((((int)blockIdx.x) * 16) + (((int)threadIdx.x) / 7))]), 0.000000e+00f);
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 187-191

A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.

.. GENERATED FROM PYTHON SOURCE LINES 191-213

.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Resume search:
    /venv/apache-tvm-py3.7/lib/python3.7/site-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 5 minutes  37.117 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
